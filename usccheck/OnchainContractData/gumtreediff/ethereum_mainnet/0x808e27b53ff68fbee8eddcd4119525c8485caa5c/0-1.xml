<?xml version="1.0" ?>
<matches>
  <match src="returns: returns [17273,17280]" dest="returns: returns [17273,17280]"/>
  <match src="member_expression [78176,78186]" dest="member_expression [78183,78193]"/>
  <match src="type_name [38187,38194]" dest="type_name [38187,38194]"/>
  <match src=",: , [13772,13773]" dest=",: , [13772,13773]"/>
  <match src="identifier: selectTrait [77181,77192]" dest="identifier: selectTrait [77188,77199]"/>
  <match src="parameter [80767,80782]" dest="parameter [80774,80789]"/>
  <match src="pure: pure [81501,81505]" dest="pure: pure [81508,81512]"/>
  <match src="(: ( [30049,30050]" dest="(: ( [30049,30050]"/>
  <match src="string_literal [67482,67493]" dest="string_literal [67489,67500]"/>
  <match src="type_name [58297,58304]" dest="type_name [58297,58304]"/>
  <match src="array_access [73099,73122]" dest="array_access [73106,73129]"/>
  <match src="[: [ [70922,70923]" dest="[: [ [70929,70930]"/>
  <match src=".: . [79341,79342]" dest=".: . [79348,79349]"/>
  <match src="identifier: error [15736,15741]" dest="identifier: error [15736,15741]"/>
  <match src="uint16: uint16 [60439,60445]" dest="uint16: uint16 [60446,60452]"/>
  <match src="binary_expression [64744,64763]" dest="binary_expression [64751,64770]"/>
  <match src="variable_declaration [70037,70057]" dest="variable_declaration [70044,70064]"/>
  <match src="yul_identifier [12935,12936]" dest="yul_identifier [12935,12936]"/>
  <match src="identifier: drawSvg [397,404]" dest="identifier: drawSvg [397,404]"/>
  <match src="call_expression [12371,12398]" dest="call_expression [12371,12398]"/>
  <match src="memory: memory [47848,47854]" dest="memory: memory [47848,47854]"/>
  <match src="number_literal: 16 [77489,77491]" dest="number_literal: 16 [77496,77498]"/>
  <match src="parameter [47424,47442]" dest="parameter [47424,47442]"/>
  <match src="member_expression [67298,67308]" dest="member_expression [67305,67315]"/>
  <match src="primitive_type [1661,1668]" dest="primitive_type [1661,1668]"/>
  <match src="identifier: value [6801,6806]" dest="identifier: value [6801,6806]"/>
  <match src=".: . [67301,67302]" dest=".: . [67308,67309]"/>
  <match src="identifier: v [12899,12900]" dest="identifier: v [12899,12900]"/>
  <match src="primitive_type [40275,40282]" dest="primitive_type [40275,40282]"/>
  <match src="{: { [10687,10688]" dest="{: { [10687,10688]"/>
  <match src="primitive_type [13861,13868]" dest="primitive_type [13861,13868]"/>
  <match src="): ) [44788,44789]" dest="): ) [44788,44789]"/>
  <match src="identifier: head [1832,1836]" dest="identifier: head [1832,1836]"/>
  <match src="primitive_type [80767,80772]" dest="primitive_type [80774,80779]"/>
  <match src="bytes: bytes [28639,28644]" dest="bytes: bytes [28639,28644]"/>
  <match src="]: ] [81117,81118]" dest="]: ] [81124,81125]"/>
  <match src="using: using [35875,35880]" dest="using: using [35875,35880]"/>
  <match src="identifier: keccak256 [67455,67464]" dest="identifier: keccak256 [67462,67471]"/>
  <match src="(: ( [63605,63606]" dest="(: ( [63612,63613]"/>
  <match src="number_literal: 173 [62129,62132]" dest="number_literal: 173 [62136,62139]"/>
  <match src="type_name [78766,78770]" dest="type_name [78773,78777]"/>
  <match src="identifier: tokenId [80049,80056]" dest="identifier: tokenId [80056,80063]"/>
  <match src="-: - [68079,68080]" dest="-: - [68086,68087]"/>
  <match src="): ) [4845,4846]" dest="): ) [4845,4846]"/>
  <match src="]: ] [68378,68379]" dest="]: ] [68385,68386]"/>
  <match src="primitive_type [47794,47801]" dest="primitive_type [47794,47801]"/>
  <match src=",: , [492,493]" dest=",: , [492,493]"/>
  <match src="call_expression [31405,31482]" dest="call_expression [31405,31482]"/>
  <match src="call_argument [42891,42898]" dest="call_argument [42891,42898]"/>
  <match src="call_expression [16739,16831]" dest="call_expression [16739,16831]"/>
  <match src="comment: // This will suffice for checking _exists(nextTokenId), [51531,51586]" dest="comment: // This will suffice for checking _exists(nextTokenId), [51531,51586]"/>
  <match src=".: . [66150,66151]" dest=".: . [66157,66158]"/>
  <match src="primitive_type [65867,65873]" dest="primitive_type [65874,65880]"/>
  <match src="return_statement [42395,42408]" dest="return_statement [42395,42408]"/>
  <match src="expression_statement [67828,67882]" dest="expression_statement [67835,67889]"/>
  <match src="if: if [45326,45328]" dest="if: if [45326,45328]"/>
  <match src="external: external [5669,5677]" dest="external: external [5669,5677]"/>
  <match src="type_name [42369,42375]" dest="type_name [42369,42375]"/>
  <match src="return: return [79995,80001]" dest="return: return [80002,80008]"/>
  <match src=".: . [69414,69415]" dest=".: . [69421,69422]"/>
  <match src="): ) [15684,15685]" dest="): ) [15684,15685]"/>
  <match src="identifier: signer_ [67520,67527]" dest="identifier: signer_ [67527,67534]"/>
  <match src="=: = [81307,81308]" dest="=: = [81314,81315]"/>
  <match src=",: , [62712,62713]" dest=",: , [62719,62720]"/>
  <match src="variable_declaration_statement [80478,80496]" dest="variable_declaration_statement [80485,80503]"/>
  <match src="]: ] [73064,73065]" dest="]: ] [73071,73072]"/>
  <match src="if: if [41205,41207]" dest="if: if [41205,41207]"/>
  <match src="struct_member [5326,5340]" dest="struct_member [5326,5340]"/>
  <match src="): ) [49567,49568]" dest="): ) [49567,49568]"/>
  <match src="uint8: uint8 [1890,1895]" dest="uint8: uint8 [1890,1895]"/>
  <match src="function_definition [78828,79631]" dest="function_definition [78835,79638]"/>
  <match src="number_literal: 1 [73188,73189]" dest="number_literal: 1 [73195,73196]"/>
  <match src="identifier: require [29817,29824]" dest="identifier: require [29817,29824]"/>
  <match src="): ) [29837,29838]" dest="): ) [29837,29838]"/>
  <match src="}: } [15049,15050]" dest="}: } [15049,15050]"/>
  <match src="(: ( [67361,67362]" dest="(: ( [67368,67369]"/>
  <match src="identifier: message_ [3060,3068]" dest="identifier: message_ [3060,3068]"/>
  <match src="identifier: breed [80714,80719]" dest="identifier: breed [80721,80726]"/>
  <match src="external: external [3070,3078]" dest="external: external [3070,3078]"/>
  <match src="{: { [64505,64506]" dest="{: { [64512,64513]"/>
  <match src="pure: pure [13847,13851]" dest="pure: pure [13847,13851]"/>
  <match src="&quot;: &quot; [79954,79955]" dest="&quot;: &quot; [79961,79962]"/>
  <match src="(: ( [55974,55975]" dest="(: ( [55974,55975]"/>
  <match src="identifier: admin [65294,65299]" dest="identifier: admin [65301,65306]"/>
  <match src="type_name [12873,12880]" dest="type_name [12873,12880]"/>
  <match src="type_name [39829,39836]" dest="type_name [39829,39836]"/>
  <match src="struct_member [1095,1107]" dest="struct_member [1095,1107]"/>
  <match src="uint16: uint16 [77691,77697]" dest="uint16: uint16 [77698,77704]"/>
  <match src="call_argument [65280,65299]" dest="call_argument [65287,65306]"/>
  <match src="primitive_type [69899,69906]" dest="primitive_type [69906,69913]"/>
  <match src="variable_declaration_statement [6535,6550]" dest="variable_declaration_statement [6535,6550]"/>
  <match src="): ) [55852,55853]" dest="): ) [55852,55853]"/>
  <match src="identifier: withdraw [63776,63784]" dest="identifier: withdraw [63783,63791]"/>
  <match src="parenthesized_expression [8978,9016]" dest="parenthesized_expression [8978,9016]"/>
  <match src="parameter [31373,31385]" dest="parameter [31373,31385]"/>
  <match src="call_expression [51929,51971]" dest="call_expression [51929,51971]"/>
  <match src="uint8: uint8 [68868,68873]" dest="uint8: uint8 [68875,68880]"/>
  <match src="function_definition [33727,33828]" dest="function_definition [33727,33828]"/>
  <match src="call_argument [48115,48127]" dest="call_argument [48115,48127]"/>
  <match src="identifier: signature [10721,10730]" dest="identifier: signature [10721,10730]"/>
  <match src="parameter [16673,16687]" dest="parameter [16673,16687]"/>
  <match src="yul_evm_builtin [11184,11189]" dest="yul_evm_builtin [11184,11189]"/>
  <match src="modifier_invocation [65730,65740]" dest="modifier_invocation [65737,65747]"/>
  <match src="[: [ [74208,74209]" dest="[: [ [74215,74216]"/>
  <match src="identifier: ICommoner [58971,58980]" dest="identifier: ICommoner [58978,58987]"/>
  <match src="member_expression [27205,27219]" dest="member_expression [27205,27219]"/>
  <match src="expression_statement [81147,81183]" dest="expression_statement [81154,81190]"/>
  <match src="member_expression [10930,10946]" dest="member_expression [10930,10946]"/>
  <match src="call_argument [66035,66043]" dest="call_argument [66042,66050]"/>
  <match src="address: address [10202,10209]" dest="address: address [10202,10209]"/>
  <match src="type_name [60355,60359]" dest="type_name [60362,60366]"/>
  <match src="=&gt;: =&gt; [37677,37679]" dest="=&gt;: =&gt; [37677,37679]"/>
  <match src="uint16: uint16 [77527,77533]" dest="uint16: uint16 [77534,77540]"/>
  <match src="parameter [42369,42382]" dest="parameter [42369,42382]"/>
  <match src="return_type_definition [22232,22246]" dest="return_type_definition [22232,22246]"/>
  <match src="=: = [74636,74637]" dest="=: = [74643,74644]"/>
  <match src="=: = [61706,61707]" dest="=: = [61713,61714]"/>
  <match src="comment: /**      * @dev Overload of {ECDSA-tryRecover} that receives the `v`,      * `r` and `s` signature fields separately.      *      * _Available since v4.3._      */ [13556,13724]" dest="comment: /**      * @dev Overload of {ECDSA-tryRecover} that receives the `v`,      * `r` and `s` signature fields separately.      *      * _Available since v4.3._      */ [13556,13724]"/>
  <match src="type_name [4315,4321]" dest="type_name [4315,4321]"/>
  <match src="): ) [66093,66094]" dest="): ) [66100,66101]"/>
  <match src="visibility [42502,42508]" dest="visibility [42502,42508]"/>
  <match src="]: ] [73943,73944]" dest="]: ] [73950,73951]"/>
  <match src="identifier: Commoner [76893,76901]" dest="identifier: Commoner [76900,76908]"/>
  <match src="identifier: operator [22208,22216]" dest="identifier: operator [22208,22216]"/>
  <match src="parameter [674,698]" dest="parameter [674,698]"/>
  <match src="member_expression [78097,78103]" dest="member_expression [78104,78110]"/>
  <match src="[: [ [41134,41135]" dest="[: [ [41134,41135]"/>
  <match src="uint256: uint256 [21337,21344]" dest="uint256: uint256 [21337,21344]"/>
  <match src=".: . [67559,67560]" dest=".: . [67566,67567]"/>
  <match src="(: ( [3773,3774]" dest="(: ( [3773,3774]"/>
  <match src="&quot;: &quot; [80917,80918]" dest="&quot;: &quot; [80924,80925]"/>
  <match src="uint8: uint8 [64383,64388]" dest="uint8: uint8 [64390,64395]"/>
  <match src="comment: /**      * @dev See {IERC721-balanceOf}.      */ [39421,39471]" dest="comment: /**      * @dev See {IERC721-balanceOf}.      */ [39421,39471]"/>
  <match src="(: ( [571,572]" dest="(: ( [571,572]"/>
  <match src="}: } [44033,44034]" dest="}: } [44033,44034]"/>
  <match src="function_body [10225,11429]" dest="function_body [10225,11429]"/>
  <match src="!=: != [41224,41226]" dest="!=: != [41224,41226]"/>
  <match src=",: , [45805,45806]" dest=",: , [45805,45806]"/>
  <match src="type_name [34685,34689]" dest="type_name [34685,34689]"/>
  <match src="identifier: vs [13366,13368]" dest="identifier: vs [13366,13368]"/>
  <match src="external: external [3175,3183]" dest="external: external [3175,3183]"/>
  <match src="number_literal: 61 [62977,62979]" dest="number_literal: 61 [62984,62986]"/>
  <match src="identifier: tokenPartner [68357,68369]" dest="identifier: tokenPartner [68364,68376]"/>
  <match src="identifier: id [81295,81297]" dest="identifier: id [81302,81304]"/>
  <match src="identifier: length [65892,65898]" dest="identifier: length [65899,65905]"/>
  <match src="function_definition [49830,51979]" dest="function_definition [49830,51979]"/>
  <match src="identifier: background [72097,72107]" dest="identifier: background [72104,72114]"/>
  <match src="primitive_type [1223,1229]" dest="primitive_type [1223,1229]"/>
  <match src="type_cast_expression [77609,77630]" dest="type_cast_expression [77616,77637]"/>
  <match src="call_argument [77467,77468]" dest="call_argument [77474,77475]"/>
  <match src="function: function [55597,55605]" dest="function: function [55597,55605]"/>
  <match src=",: , [76969,76970]" dest=",: , [76976,76977]"/>
  <match src="if_statement [49202,49269]" dest="if_statement [49202,49269]"/>
  <match src="memory: memory [29694,29700]" dest="memory: memory [29694,29700]"/>
  <match src="comment: /**      * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.      */ [6899,6995]" dest="comment: /**      * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.      */ [6899,6995]"/>
  <match src=",: , [62162,62163]" dest=",: , [62169,62170]"/>
  <match src="=: = [54022,54023]" dest="=: = [54022,54023]"/>
  <match src="state_mutability [15612,15616]" dest="state_mutability [15612,15616]"/>
  <match src="expression_statement [49508,49569]" dest="expression_statement [49508,49569]"/>
  <match src="type_cast_expression [66445,66466]" dest="type_cast_expression [66452,66473]"/>
  <match src="primitive_type [15566,15573]" dest="primitive_type [15566,15573]"/>
  <match src="identifier: success [32349,32356]" dest="identifier: success [32349,32356]"/>
  <match src="number_literal: 2 [62457,62458]" dest="number_literal: 2 [62464,62465]"/>
  <match src="pure: pure [16132,16136]" dest="pure: pure [16132,16136]"/>
  <match src="identifier: verifyCallResult [32317,32333]" dest="identifier: verifyCallResult [32317,32333]"/>
  <match src="string: string [874,880]" dest="string: string [874,880]"/>
  <match src="&quot;: &quot; [80388,80389]" dest="&quot;: &quot; [80395,80396]"/>
  <match src="call_argument [61125,61183]" dest="call_argument [61132,61190]"/>
  <match src="(: ( [80426,80427]" dest="(: ( [80433,80434]"/>
  <match src="visibility [20821,20829]" dest="visibility [20821,20829]"/>
  <match src="returns: returns [38392,38399]" dest="returns: returns [38392,38399]"/>
  <match src="identifier: target [28542,28548]" dest="identifier: target [28542,28548]"/>
  <match src="identifier: target [31426,31432]" dest="identifier: target [31426,31432]"/>
  <match src="parameter [64383,64397]" dest="parameter [64390,64404]"/>
  <match src="parameter [5443,5458]" dest="parameter [5443,5458]"/>
  <match src=".: . [65002,65003]" dest=".: . [65009,65010]"/>
  <match src="call_argument [78040,78386]" dest="call_argument [78047,78393]"/>
  <match src="function_definition [4880,4944]" dest="function_definition [4880,4944]"/>
  <match src="visibility [3340,3348]" dest="visibility [3340,3348]"/>
  <match src="++: ++ [66234,66236]" dest="++: ++ [66241,66243]"/>
  <match src="parameter [25777,25792]" dest="parameter [25777,25792]"/>
  <match src=".: . [79097,79098]" dest=".: . [79104,79105]"/>
  <match src="(: ( [14951,14952]" dest="(: ( [14951,14952]"/>
  <match src="): ) [78374,78375]" dest="): ) [78381,78382]"/>
  <match src="parameter [80721,80734]" dest="parameter [80728,80741]"/>
  <match src="array_access [72985,73008]" dest="array_access [72992,73015]"/>
  <match src="primitive_type [700,706]" dest="primitive_type [700,706]"/>
  <match src="revert_statement [8614,8649]" dest="revert_statement [8614,8649]"/>
  <match src="member_expression [40622,40645]" dest="member_expression [40622,40645]"/>
  <match src="call_expression [77098,77135]" dest="call_expression [77105,77142]"/>
  <match src=",: , [57020,57021]" dest=",: , [57020,57021]"/>
  <match src="string: string [411,417]" dest="string: string [411,417]"/>
  <match src="parenthesized_expression [8737,8772]" dest="parenthesized_expression [8737,8772]"/>
  <match src="call_argument [45662,45664]" dest="call_argument [45662,45664]"/>
  <match src="identifier: doges_ [66159,66165]" dest="identifier: doges_ [66166,66172]"/>
  <match src="identifier: isAuth [64963,64969]" dest="identifier: isAuth [64970,64976]"/>
  <match src="address: address [1732,1739]" dest="address: address [1732,1739]"/>
  <match src="visibility [76860,76868]" dest="visibility [76867,76875]"/>
  <match src="identifier: token [64185,64190]" dest="identifier: token [64192,64197]"/>
  <match src="comment: /**      * Gas spent here starts off proportional to the maximum mint batch size.      * It gradually moves to O(1) as tokens get transferred around in the collection over time.      */ [40667,40855]" dest="comment: /**      * Gas spent here starts off proportional to the maximum mint batch size.      * It gradually moves to O(1) as tokens get transferred around in the collection over time.      */ [40667,40855]"/>
  <match src="(: ( [16816,16817]" dest="(: ( [16816,16817]"/>
  <match src="type_name [47397,47404]" dest="type_name [47397,47404]"/>
  <match src="function_definition [34600,34757]" dest="function_definition [34600,34757]"/>
  <match src="identifier: balance [36541,36548]" dest="identifier: balance [36541,36548]"/>
  <match src="return_type_definition [78757,78771]" dest="return_type_definition [78764,78778]"/>
  <match src="binary_expression [70009,70015]" dest="binary_expression [70016,70022]"/>
  <match src="for: for [35889,35892]" dest="for: for [35889,35892]"/>
  <match src="parameter [75363,75378]" dest="parameter [75370,75385]"/>
  <match src="variable_declaration_statement [45080,45234]" dest="variable_declaration_statement [45080,45234]"/>
  <match src="expression_statement [53397,53422]" dest="expression_statement [53397,53422]"/>
  <match src="identifier: tokenPartner [69392,69404]" dest="identifier: tokenPartner [69399,69411]"/>
  <match src="}: } [61090,61091]" dest="}: } [61097,61098]"/>
  <match src=",: , [7324,7325]" dest=",: , [7324,7325]"/>
  <match src="function_definition [3830,3881]" dest="function_definition [3830,3881]"/>
  <match src="array_access [63054,63065]" dest="array_access [63061,63072]"/>
  <match src="external: external [213,221]" dest="external: external [213,221]"/>
  <match src="parameter [1732,1745]" dest="parameter [1732,1745]"/>
  <match src="identifier: _data [46351,46356]" dest="identifier: _data [46351,46356]"/>
  <match src="): ) [54350,54351]" dest="): ) [54350,54351]"/>
  <match src="identifier: id [81203,81205]" dest="identifier: id [81210,81212]"/>
  <match src="primitive_type [58137,58144]" dest="primitive_type [58137,58144]"/>
  <match src="(: ( [61075,61076]" dest="(: ( [61082,61083]"/>
  <match src="identifier: vs [13047,13049]" dest="identifier: vs [13047,13049]"/>
  <match src="identifier: _msgSender [45950,45960]" dest="identifier: _msgSender [45950,45960]"/>
  <match src="string: string [572,578]" dest="string: string [572,578]"/>
  <match src="binary_expression [74957,74982]" dest="binary_expression [74964,74989]"/>
  <match src="return_statement [28664,28724]" dest="return_statement [28664,28724]"/>
  <match src="{: { [4034,4035]" dest="{: { [4034,4035]"/>
  <match src="call_argument [77609,77630]" dest="call_argument [77616,77637]"/>
  <match src="yul_path [13029,13030]" dest="yul_path [13029,13030]"/>
  <match src="&quot;: &quot; [29937,29938]" dest="&quot;: &quot; [29937,29938]"/>
  <match src="identifier: isApprovedOrOwner [45251,45268]" dest="identifier: isApprovedOrOwner [45251,45268]"/>
  <match src="number_literal: 0 [62466,62467]" dest="number_literal: 0 [62473,62474]"/>
  <match src="(: ( [44354,44355]" dest="(: ( [44354,44355]"/>
  <match src="identifier: aliases [62184,62191]" dest="identifier: aliases [62191,62198]"/>
  <match src="identifier: s [78176,78177]" dest="identifier: s [78183,78184]"/>
  <match src="identifier: selectTrait [77263,77274]" dest="identifier: selectTrait [77270,77281]"/>
  <match src="identifier: interfaceId [39341,39352]" dest="identifier: interfaceId [39341,39352]"/>
  <match src="binary_expression [7602,7616]" dest="binary_expression [7602,7616]"/>
  <match src="identifier: Address [35881,35888]" dest="identifier: Address [35881,35888]"/>
  <match src="(: ( [76438,76439]" dest="(: ( [76445,76446]"/>
  <match src="primitive_type [76401,76406]" dest="primitive_type [76408,76413]"/>
  <match src="): ) [30415,30416]" dest="): ) [30415,30416]"/>
  <match src="variable_declaration_statement [48723,48761]" dest="variable_declaration_statement [48723,48761]"/>
  <match src="): ) [38154,38155]" dest="): ) [38154,38155]"/>
  <match src="type_name [43413,43420]" dest="type_name [43413,43420]"/>
  <match src="): ) [42778,42779]" dest="): ) [42778,42779]"/>
  <match src="call_struct_argument [79166,79197]" dest="call_struct_argument [79173,79204]"/>
  <match src="(: ( [78004,78005]" dest="(: ( [78011,78012]"/>
  <match src="identifier: value [29724,29729]" dest="identifier: value [29724,29729]"/>
  <match src=",: , [4986,4987]" dest=",: , [4986,4987]"/>
  <match src="identifier: verifyCallResult [32021,32037]" dest="identifier: verifyCallResult [32021,32037]"/>
  <match src="parameter [29239,29251]" dest="parameter [29239,29251]"/>
  <match src="identifier: seed [77282,77286]" dest="identifier: seed [77289,77293]"/>
  <match src="variable_declaration [52460,52495]" dest="variable_declaration [52460,52495]"/>
  <match src="binary_expression [49408,49427]" dest="binary_expression [49408,49427]"/>
  <match src="call_argument [54550,54560]" dest="call_argument [54550,54560]"/>
  <match src="call_expression [65272,65300]" dest="call_expression [65279,65307]"/>
  <match src="primitive_type [29825,29832]" dest="primitive_type [29825,29832]"/>
  <match src="identifier: errorMessage [28710,28722]" dest="identifier: errorMessage [28710,28722]"/>
  <match src="external: external [3637,3645]" dest="external: external [3637,3645]"/>
  <match src="]: ] [70192,70193]" dest="]: ] [70199,70200]"/>
  <match src="identifier: RecoverError [10211,10223]" dest="identifier: RecoverError [10211,10223]"/>
  <match src="{: { [8957,8958]" dest="{: { [8957,8958]"/>
  <match src="primitive_type [64438,64444]" dest="primitive_type [64445,64451]"/>
  <match src=".: . [39669,39670]" dest=".: . [39669,39670]"/>
  <match src="bool: bool [18197,18201]" dest="bool: bool [18197,18201]"/>
  <match src="primitive_type [48865,48872]" dest="primitive_type [48865,48872]"/>
  <match src="identifier: commoners [81193,81202]" dest="identifier: commoners [81200,81209]"/>
  <match src="identifier: balance [19130,19137]" dest="identifier: balance [19130,19137]"/>
  <match src="(: ( [40274,40275]" dest="(: ( [40274,40275]"/>
  <match src="primitive_type [80784,80789]" dest="primitive_type [80791,80796]"/>
  <match src="struct_member [1223,1247]" dest="struct_member [1223,1247]"/>
  <match src="identifier: _checkContractOnERC721Received [48922,48952]" dest="identifier: _checkContractOnERC721Received [48922,48952]"/>
  <match src="string_literal [79023,79069]" dest="string_literal [79030,79076]"/>
  <match src="number_literal: 0 [52919,52920]" dest="number_literal: 0 [52919,52920]"/>
  <match src="variable_declaration_statement [74538,74572]" dest="variable_declaration_statement [74545,74579]"/>
  <match src="&quot;: &quot; [27266,27267]" dest="&quot;: &quot; [27266,27267]"/>
  <match src="type_cast_expression [54144,54154]" dest="type_cast_expression [54144,54154]"/>
  <match src="binary_expression [68275,68316]" dest="binary_expression [68282,68323]"/>
  <match src="identifier: ICommoner [77953,77962]" dest="identifier: ICommoner [77960,77969]"/>
  <match src="type_name [23800,23807]" dest="type_name [23800,23807]"/>
  <match src="call_expression [50532,50567]" dest="call_expression [50532,50567]"/>
  <match src="primitive_type [39210,39214]" dest="primitive_type [39210,39214]"/>
  <match src="identifier: alchemy [71216,71223]" dest="identifier: alchemy [71223,71230]"/>
  <match src="function_definition [44639,44879]" dest="function_definition [44639,44879]"/>
  <match src=".: . [50925,50926]" dest=".: . [50925,50926]"/>
  <match src="comment: // require(quantity_ &lt;= 10, &quot;exceed max quantity&quot;); [65311,65362]" dest="comment: // require(quantity_ &lt;= 10, &quot;exceed max quantity&quot;); [65318,65369]"/>
  <match src="yul_identifier [32891,32906]" dest="yul_identifier [32891,32906]"/>
  <match src="update_expression [49365,49379]" dest="update_expression [49365,49379]"/>
  <match src="state_mutability [77991,77995]" dest="state_mutability [77998,78002]"/>
  <match src="string [8979,9015]" dest="string [8979,9015]"/>
  <match src="return_type_definition [42531,42554]" dest="return_type_definition [42531,42554]"/>
  <match src="pure: pure [17268,17272]" dest="pure: pure [17268,17272]"/>
  <match src="identifier: i [70240,70241]" dest="identifier: i [70247,70248]"/>
  <match src="type_name [1838,1843]" dest="type_name [1838,1843]"/>
  <match src="returns: returns [227,234]" dest="returns: returns [227,234]"/>
  <match src="return: return [31398,31404]" dest="return: return [31398,31404]"/>
  <match src="uint8: uint8 [283,288]" dest="uint8: uint8 [283,288]"/>
  <match src="primitive_type [1838,1843]" dest="primitive_type [1838,1843]"/>
  <match src="identifier: rarities [63180,63188]" dest="identifier: rarities [63187,63195]"/>
  <match src="primitive_type [22241,22245]" dest="primitive_type [22241,22245]"/>
  <match src="expression_statement [77006,77054]" dest="expression_statement [77013,77061]"/>
  <match src="primitive_type [64480,64487]" dest="primitive_type [64487,64494]"/>
  <match src="identifier: class [1870,1875]" dest="identifier: class [1870,1875]"/>
  <match src="string_literal [16766,16798]" dest="string_literal [16766,16798]"/>
  <match src="inline_array_expression [63389,63401]" dest="inline_array_expression [63396,63408]"/>
  <match src="binary_expression [43576,43639]" dest="binary_expression [43576,43639]"/>
  <match src="{: { [46761,46762]" dest="{: { [46761,46762]"/>
  <match src="}: } [79630,79631]" dest="}: } [79637,79638]"/>
  <match src="identifier: _data [47437,47442]" dest="identifier: _data [47437,47442]"/>
  <match src="): ) [48458,48459]" dest="): ) [48458,48459]"/>
  <match src="binary_expression [38986,39017]" dest="binary_expression [38986,39017]"/>
  <match src="call_argument [61929,61933]" dest="call_argument [61936,61940]"/>
  <match src="): ) [45380,45381]" dest="): ) [45380,45381]"/>
  <match src="function: function [16077,16085]" dest="function: function [16077,16085]"/>
  <match src="uint256: uint256 [1440,1447]" dest="uint256: uint256 [1440,1447]"/>
  <match src="(: ( [8737,8738]" dest="(: ( [8737,8738]"/>
  <match src="comment: // balance or numberMinted overflow if current value of either + quantity &gt; 1.8e19 (2**64) - 1 [48201,48295]" dest="comment: // balance or numberMinted overflow if current value of either + quantity &gt; 1.8e19 (2**64) - 1 [48201,48295]"/>
  <match src="address: address [3969,3976]" dest="address: address [3969,3976]"/>
  <match src="call_argument [66261,66292]" dest="call_argument [66268,66299]"/>
  <match src="expression_statement [81105,81137]" dest="expression_statement [81112,81144]"/>
  <match src="address: address [21325,21332]" dest="address: address [21325,21332]"/>
  <match src="internal: internal [40290,40298]" dest="internal: internal [40290,40298]"/>
  <match src="uint16: uint16 [76948,76954]" dest="uint16: uint16 [76955,76961]"/>
  <match src="]: ] [79145,79146]" dest="]: ] [79152,79153]"/>
  <match src="visibility [319,327]" dest="visibility [319,327]"/>
  <match src="identifier: tokenPartner [68275,68287]" dest="identifier: tokenPartner [68282,68294]"/>
  <match src="identifier: smithing [74114,74122]" dest="identifier: smithing [74121,74129]"/>
  <match src="identifier: curr [40965,40969]" dest="identifier: curr [40965,40969]"/>
  <match src="variable_declaration [30976,30999]" dest="variable_declaration [30976,30999]"/>
  <match src="function_body [80359,80660]" dest="function_body [80366,80667]"/>
  <match src="identifier: operator [21591,21599]" dest="identifier: operator [21591,21599]"/>
  <match src="type: type [39262,39266]" dest="type: type [39262,39266]"/>
  <match src="state_mutability [40299,40303]" dest="state_mutability [40299,40303]"/>
  <match src="identifier: Transfer [18480,18488]" dest="identifier: Transfer [18480,18488]"/>
  <match src="binary_expression [38595,38623]" dest="binary_expression [38595,38623]"/>
  <match src="primitive_type [58812,58816]" dest="primitive_type [58819,58823]"/>
  <match src="identifier: numberBurned [36748,36760]" dest="identifier: numberBurned [36748,36760]"/>
  <match src="identifier: updatedIndex [48737,48749]" dest="identifier: updatedIndex [48737,48749]"/>
  <match src="assignment_expression [62253,62307]" dest="assignment_expression [62260,62314]"/>
  <match src="==: == [64047,64049]" dest="==: == [64054,64056]"/>
  <match src="variable_declaration_statement [10969,10979]" dest="variable_declaration_statement [10969,10979]"/>
  <match src="parameter [8413,8431]" dest="parameter [8413,8431]"/>
  <match src="identifier: length [7513,7519]" dest="identifier: length [7513,7519]"/>
  <match src="parameter [3497,3509]" dest="parameter [3497,3509]"/>
  <match src="identifier: length [16819,16825]" dest="identifier: length [16819,16825]"/>
  <match src="visibility [13838,13846]" dest="visibility [13838,13846]"/>
  <match src="-=: -= [50890,50892]" dest="-=: -= [50890,50892]"/>
  <match src="bytes32: bytes32 [10141,10148]" dest="bytes32: bytes32 [10141,10148]"/>
  <match src="type_name [57817,57824]" dest="type_name [57817,57824]"/>
  <match src="comment: //     Cost 0.035 ETH or Partner Token [68782,68820]" dest="comment: //     Cost 0.035 ETH or Partner Token [68789,68827]"/>
  <match src="identifier: mintPrice [68598,68607]" dest="identifier: mintPrice [68605,68614]"/>
  <match src="(: ( [29136,29137]" dest="(: ( [29136,29137]"/>
  <match src="return_type_definition [4784,4801]" dest="return_type_definition [4784,4801]"/>
  <match src="call_expression [49508,49568]" dest="call_expression [49508,49568]"/>
  <match src="parameter [13821,13830]" dest="parameter [13821,13830]"/>
  <match src="number_literal: 0 [47973,47974]" dest="number_literal: 0 [47973,47974]"/>
  <match src="identifier: to_ [75013,75016]" dest="identifier: to_ [75020,75023]"/>
  <match src="]: ] [63259,63260]" dest="]: ] [63266,63267]"/>
  <match src="{: { [5121,5122]" dest="{: { [5121,5122]"/>
  <match src="binary_expression [67233,67272]" dest="binary_expression [67240,67279]"/>
  <match src="): ) [46059,46060]" dest="): ) [46059,46060]"/>
  <match src="identifier: from [46248,46252]" dest="identifier: from [46248,46252]"/>
  <match src="(: ( [67899,67900]" dest="(: ( [67906,67907]"/>
  <match src="!=: != [14954,14956]" dest="!=: != [14954,14956]"/>
  <match src="): ) [29251,29252]" dest="): ) [29251,29252]"/>
  <match src="call_expression [67892,67938]" dest="call_expression [67899,67945]"/>
  <match src="): ) [45177,45178]" dest="): ) [45177,45178]"/>
  <match src="string: string [31777,31783]" dest="string: string [31777,31783]"/>
  <match src="++: ++ [74519,74521]" dest="++: ++ [74526,74528]"/>
  <match src="identifier: alchemy [81299,81306]" dest="identifier: alchemy [81306,81313]"/>
  <match src="(: ( [65759,65760]" dest="(: ( [65766,65767]"/>
  <match src=",: , [52909,52910]" dest=",: , [52909,52910]"/>
  <match src="): ) [1381,1382]" dest="): ) [1381,1382]"/>
  <match src="comment: /**  * @title ERC-721 Non-Fungible Token Standard, optional metadata extension  * @dev See https://eips.ethereum.org/EIPS/eip-721  */ [23989,24125]" dest="comment: /**  * @title ERC-721 Non-Fungible Token Standard, optional metadata extension  * @dev See https://eips.ethereum.org/EIPS/eip-721  */ [23989,24125]"/>
  <match src="boolean_literal [61956,61961]" dest="boolean_literal [61963,61968]"/>
  <match src="parameter [4666,4675]" dest="parameter [4666,4675]"/>
  <match src="primitive_type [20138,20145]" dest="primitive_type [20138,20145]"/>
  <match src="identifier: quantity [46963,46971]" dest="identifier: quantity [46963,46971]"/>
  <match src="address: address [41227,41234]" dest="address: address [41227,41234]"/>
  <match src="view: view [1519,1523]" dest="view: view [1519,1523]"/>
  <match src="struct_field_assignment [30036,30048]" dest="struct_field_assignment [30036,30048]"/>
  <match src="override: override [42351,42359]" dest="override: override [42351,42359]"/>
  <match src="visibility [33643,33651]" dest="visibility [33643,33651]"/>
  <match src="): ) [39623,39624]" dest="): ) [39623,39624]"/>
  <match src="identifier: block [48640,48645]" dest="identifier: block [48640,48645]"/>
  <match src="assignment_expression [73208,73243]" dest="assignment_expression [73215,73250]"/>
  <match src="function_body [60959,61254]" dest="function_body [60966,61261]"/>
  <match src="primitive_type [58875,58882]" dest="primitive_type [58882,58889]"/>
  <match src="identifier: _data [47490,47495]" dest="identifier: _data [47490,47495]"/>
  <match src="(: ( [74594,74595]" dest="(: ( [74601,74602]"/>
  <match src="identifier: tryRecover [13739,13749]" dest="identifier: tryRecover [13739,13749]"/>
  <match src="string [49027,49069]" dest="string [49027,49069]"/>
  <match src="user_defined_type [60497,60506]" dest="user_defined_type [60504,60513]"/>
  <match src="yul_identifier [11229,11231]" dest="yul_identifier [11229,11231]"/>
  <match src="for: for [58016,58019]" dest="for: for [58016,58019]"/>
  <match src="comment: // cool blocks to lock metadata: tokenId =&gt; blockNumber [59097,59152]" dest="comment: // cool blocks to lock metadata: tokenId =&gt; blockNumber [59104,59159]"/>
  <match src="primitive_type [60469,60476]" dest="primitive_type [60476,60483]"/>
  <match src="{: { [10225,10226]" dest="{: { [10225,10226]"/>
  <match src="struct_member [60355,60371]" dest="struct_member [60362,60378]"/>
  <match src="call_argument [61589,61609]" dest="call_argument [61596,61616]"/>
  <match src="struct_member [1051,1063]" dest="struct_member [1051,1063]"/>
  <match src="(: ( [44656,44657]" dest="(: ( [44656,44657]"/>
  <match src="call_argument [43738,43745]" dest="call_argument [43738,43745]"/>
  <match src=".: . [73835,73836]" dest=".: . [73842,73843]"/>
  <match src="): ) [54153,54154]" dest="): ) [54153,54154]"/>
  <match src="member_expression [81105,81126]" dest="member_expression [81112,81133]"/>
  <match src="return_type_definition [67414,67428]" dest="return_type_definition [67421,67435]"/>
  <match src="&quot;: &quot; [68471,68472]" dest="&quot;: &quot; [68478,68479]"/>
  <match src="+: + [51388,51389]" dest="+: + [51388,51389]"/>
  <match src="bool: bool [27187,27191]" dest="bool: bool [27187,27191]"/>
  <match src="[: [ [79137,79138]" dest="[: [ [79144,79145]"/>
  <match src="function: function [28097,28105]" dest="function: function [28097,28105]"/>
  <match src="{: { [41621,41622]" dest="{: { [41621,41622]"/>
  <match src="identifier: IERC721 [39267,39274]" dest="identifier: IERC721 [39267,39274]"/>
  <match src="}: } [63614,63615]" dest="}: } [63621,63622]"/>
  <match src="parameter [3136,3149]" dest="parameter [3136,3149]"/>
  <match src="(: ( [41034,41035]" dest="(: ( [41034,41035]"/>
  <match src="visibility [8433,8440]" dest="visibility [8433,8440]"/>
  <match src="identifier: admin [65013,65018]" dest="identifier: admin [65020,65025]"/>
  <match src="else: else [32942,32946]" dest="else: else [32942,32946]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [77234,77237]" dest="&gt;&gt;=: &gt;&gt;= [77241,77244]"/>
  <match src="]: ] [79392,79393]" dest="]: ] [79399,79400]"/>
  <match src="comment: // Underflow of the sender's balance is impossible because we check for [50580,50651]" dest="comment: // Underflow of the sender's balance is impossible because we check for [50580,50651]"/>
  <match src="type_name [1921,1927]" dest="type_name [1921,1927]"/>
  <match src="internal: internal [69879,69887]" dest="internal: internal [69886,69894]"/>
  <match src="uint256: uint256 [64459,64466]" dest="uint256: uint256 [64466,64473]"/>
  <match src="identifier: startTokenId [48115,48127]" dest="identifier: startTokenId [48115,48127]"/>
  <match src="type_name [59645,59656]" dest="type_name [59652,59663]"/>
  <match src="call_expression [42763,42779]" dest="call_expression [42763,42779]"/>
  <match src="identifier: digits [6593,6599]" dest="identifier: digits [6593,6599]"/>
  <match src="||: || [61142,61144]" dest="||: || [61149,61151]"/>
  <match src="comment: // list of aliases for Walker's Alias algorithm [59467,59514]" dest="comment: // list of aliases for Walker's Alias algorithm [59474,59521]"/>
  <match src="yul_path [13047,13049]" dest="yul_path [13047,13049]"/>
  <match src="assignment_expression [61840,61871]" dest="assignment_expression [61847,61878]"/>
  <match src="identifier: InvalidSignatureV [15020,15037]" dest="identifier: InvalidSignatureV [15020,15037]"/>
  <match src="identifier: recovered [15760,15769]" dest="identifier: recovered [15760,15769]"/>
  <match src="identifier: target [31873,31879]" dest="identifier: target [31873,31879]"/>
  <match src="mapping: mapping [59890,59897]" dest="mapping: mapping [59897,59904]"/>
  <match src="call_argument [48965,48967]" dest="call_argument [48965,48967]"/>
  <match src="comment: // accessory [62740,62752]" dest="comment: // accessory [62747,62759]"/>
  <match src="): ) [63949,63950]" dest="): ) [63956,63957]"/>
  <match src="variable_declaration [42833,42854]" dest="variable_declaration [42833,42854]"/>
  <match src="type_name [34729,34736]" dest="type_name [34729,34736]"/>
  <match src="function: function [78828,78836]" dest="function: function [78835,78843]"/>
  <match src="(: ( [235,236]" dest="(: ( [235,236]"/>
  <match src="primitive_type [24587,24593]" dest="primitive_type [24587,24593]"/>
  <match src="call_argument [77550,77551]" dest="call_argument [77557,77558]"/>
  <match src="function_body [66741,67328]" dest="function_body [66748,67335]"/>
  <match src="): ) [66044,66045]" dest="): ) [66051,66052]"/>
  <match src="identifier: numBatch [74807,74815]" dest="identifier: numBatch [74814,74822]"/>
  <match src="visibility [5420,5428]" dest="visibility [5420,5428]"/>
  <match src=".: . [54457,54458]" dest=".: . [54457,54458]"/>
  <match src=",: , [67992,67993]" dest=",: , [67999,68000]"/>
  <match src="uint88: uint88 [1685,1691]" dest="uint88: uint88 [1685,1691]"/>
  <match src="override_specifier [44546,44554]" dest="override_specifier [44546,44554]"/>
  <match src="): ) [24421,24422]" dest="): ) [24421,24422]"/>
  <match src="assignment_expression [62114,62173]" dest="assignment_expression [62121,62180]"/>
  <match src="return: return [55893,55899]" dest="return: return [55893,55899]"/>
  <match src="comment: // OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol) [23909,23987]" dest="comment: // OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol) [23909,23987]"/>
  <match src="comment: // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines [14013,14123]" dest="comment: // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines [14013,14123]"/>
  <match src="member_expression [11374,11409]" dest="member_expression [11374,11409]"/>
  <match src="array_access [67233,67260]" dest="array_access [67240,67267]"/>
  <match src="(: ( [3903,3904]" dest="(: ( [3903,3904]"/>
  <match src="inheritance_specifier [35835,35841]" dest="inheritance_specifier [35835,35841]"/>
  <match src="primitive_type [64250,64257]" dest="primitive_type [64257,64264]"/>
  <match src="): ) [66043,66044]" dest="): ) [66050,66051]"/>
  <match src="address: address [54608,54615]" dest="address: address [54608,54615]"/>
  <match src="private: private [37689,37696]" dest="private: private [37689,37696]"/>
  <match src="function: function [79660,79668]" dest="function: function [79667,79675]"/>
  <match src="number_literal [69187,69198]" dest="number_literal [69194,69205]"/>
  <match src="call_argument [27266,27326]" dest="call_argument [27266,27326]"/>
  <match src="if_statement [76491,76548]" dest="if_statement [76498,76555]"/>
  <match src="): ) [49924,49925]" dest="): ) [49924,49925]"/>
  <match src="member_expression [68530,68540]" dest="member_expression [68537,68547]"/>
  <match src="address: address [27037,27044]" dest="address: address [27037,27044]"/>
  <match src=",: , [5643,5644]" dest=",: , [5643,5644]"/>
  <match src="uint256: uint256 [23823,23830]" dest="uint256: uint256 [23823,23830]"/>
  <match src="type_name [41089,41103]" dest="type_name [41089,41103]"/>
  <match src="identifier: from [54391,54395]" dest="identifier: from [54391,54395]"/>
  <match src="memory: memory [6654,6660]" dest="memory: memory [6654,6660]"/>
  <match src="}: } [7922,7923]" dest="}: } [7922,7923]"/>
  <match src="override_specifier [34667,34675]" dest="override_specifier [34667,34675]"/>
  <match src="): ) [65903,65904]" dest="): ) [65910,65911]"/>
  <match src="number_literal: 254 [62834,62837]" dest="number_literal: 254 [62841,62844]"/>
  <match src="assignment_expression [62440,62471]" dest="assignment_expression [62447,62478]"/>
  <match src="identifier: s [13829,13830]" dest="identifier: s [13829,13830]"/>
  <match src="identifier: selectTrait [77016,77027]" dest="identifier: selectTrait [77023,77034]"/>
  <match src="return_type_definition [3925,3948]" dest="return_type_definition [3925,3948]"/>
  <match src="): ) [15633,15634]" dest="): ) [15633,15634]"/>
  <match src="identifier: tokenId [42771,42778]" dest="identifier: tokenId [42771,42778]"/>
  <match src="comment: // An empty struct value does not necessarily mean the token is unowned. See _ownershipOf implementation for details. [37317,37434]" dest="comment: // An empty struct value does not necessarily mean the token is unowned. See _ownershipOf implementation for details. [37317,37434]"/>
  <match src="internal: internal [27080,27088]" dest="internal: internal [27080,27088]"/>
  <match src="primitive_type [19122,19129]" dest="primitive_type [19122,19129]"/>
  <match src="]: ] [48430,48431]" dest="]: ] [48430,48431]"/>
  <match src="assignment_expression [70756,70788]" dest="assignment_expression [70763,70795]"/>
  <match src="]: ] [44302,44303]" dest="]: ] [44302,44303]"/>
  <match src="identifier: tokenURITopTalents [80009,80027]" dest="identifier: tokenURITopTalents [80016,80034]"/>
  <match src="==: == [44214,44216]" dest="==: == [44214,44216]"/>
  <match src="parameter [42099,42106]" dest="parameter [42099,42106]"/>
  <match src="assignment_expression [77667,77716]" dest="assignment_expression [77674,77723]"/>
  <match src=",: , [78946,78947]" dest=",: , [78953,78954]"/>
  <match src="identifier: errorMessage [32059,32071]" dest="identifier: errorMessage [32059,32071]"/>
  <match src="parameter [5630,5643]" dest="parameter [5630,5643]"/>
  <match src="bytes4: bytes4 [81515,81521]" dest="bytes4: bytes4 [81522,81528]"/>
  <match src="(: ( [70123,70124]" dest="(: ( [70130,70131]"/>
  <match src="identifier: require [64028,64035]" dest="identifier: require [64035,64042]"/>
  <match src=",: , [46008,46009]" dest=",: , [46008,46009]"/>
  <match src="): ) [10223,10224]" dest="): ) [10223,10224]"/>
  <match src="primitive_type [33674,33681]" dest="primitive_type [33674,33681]"/>
  <match src="comment: //     Cost 0.035 ETH or Partner Token [67685,67723]" dest="comment: //     Cost 0.035 ETH or Partner Token [67692,67730]"/>
  <match src="binary_expression [54024,54035]" dest="binary_expression [54024,54035]"/>
  <match src="comment: /**      * @dev See {IERC721-ownerOf}.      */ [41981,42029]" dest="comment: /**      * @dev See {IERC721-ownerOf}.      */ [41981,42029]"/>
  <match src="==: == [70331,70333]" dest="==: == [70338,70340]"/>
  <match src="call_expression [66752,66796]" dest="call_expression [66759,66803]"/>
  <match src=",: , [28576,28577]" dest=",: , [28576,28577]"/>
  <match src="+: + [67082,67083]" dest="+: + [67089,67090]"/>
  <match src="uint256: uint256 [6535,6542]" dest="uint256: uint256 [6535,6542]"/>
  <match src="call_expression [15164,15188]" dest="call_expression [15164,15188]"/>
  <match src="function_definition [22829,22971]" dest="function_definition [22829,22971]"/>
  <match src="primitive_type [1864,1869]" dest="primitive_type [1864,1869]"/>
  <match src="identifier: color [1857,1862]" dest="identifier: color [1857,1862]"/>
  <match src="(: ( [44132,44133]" dest="(: ( [44132,44133]"/>
  <match src="]: ] [74634,74635]" dest="]: ] [74641,74642]"/>
  <match src="type_name [31777,31783]" dest="type_name [31777,31783]"/>
  <match src="+: + [65393,65394]" dest="+: + [65400,65401]"/>
  <match src="call_argument [67147,67156]" dest="call_argument [67154,67163]"/>
  <match src="binary_expression [48021,48034]" dest="binary_expression [48021,48034]"/>
  <match src="number_literal: 7 [62341,62342]" dest="number_literal: 7 [62348,62349]"/>
  <match src="variable_declaration [53330,53361]" dest="variable_declaration [53330,53361]"/>
  <match src="uint8: uint8 [5818,5823]" dest="uint8: uint8 [5818,5823]"/>
  <match src="parameter [31777,31803]" dest="parameter [31777,31803]"/>
  <match src="comment: // enforced by the type signature above [16213,16252]" dest="comment: // enforced by the type signature above [16213,16252]"/>
  <match src="(: ( [846,847]" dest="(: ( [846,847]"/>
  <match src="{: { [64017,64018]" dest="{: { [64024,64025]"/>
  <match src="binary_expression [50022,50048]" dest="binary_expression [50022,50048]"/>
  <match src="type_name [45001,45008]" dest="type_name [45001,45008]"/>
  <match src="}: } [81558,81559]" dest="}: } [81565,81566]"/>
  <match src="number_literal: 0 [79992,79993]" dest="number_literal: 0 [79999,80000]"/>
  <match src="call_argument [49559,49567]" dest="call_argument [49559,49567]"/>
  <match src="type_name [67440,67447]" dest="type_name [67447,67454]"/>
  <match src="}: } [33830,33831]" dest="}: } [33830,33831]"/>
  <match src="]: ] [1578,1579]" dest="]: ] [1578,1579]"/>
  <match src="call_expression [46949,46976]" dest="call_expression [46949,46976]"/>
  <match src="identifier: ids [80505,80508]" dest="identifier: ids [80512,80515]"/>
  <match src="]: ] [79289,79290]" dest="]: ] [79296,79297]"/>
  <match src="comment: // and it is initialized to _startTokenId() [38901,38944]" dest="comment: // and it is initialized to _startTokenId() [38901,38944]"/>
  <match src="(: ( [40882,40883]" dest="(: ( [40882,40883]"/>
  <match src="binary_expression [74818,74832]" dest="binary_expression [74825,74839]"/>
  <match src="identifier: currSlot [53668,53676]" dest="identifier: currSlot [53668,53676]"/>
  <match src="yul_hex_number: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff [12948,13014]" dest="yul_hex_number: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff [12948,13014]"/>
  <match src="identifier: breed [72793,72798]" dest="identifier: breed [72800,72805]"/>
  <match src="comment: //     uint8 accessory; Royal Chef's Hat [72603,72643]" dest="comment: //     uint8 accessory; Royal Chef's Hat [72610,72650]"/>
  <match src="identifier: tokenId [53020,53027]" dest="identifier: tokenId [53020,53027]"/>
  <match src="identifier: _msgSender [46010,46020]" dest="identifier: _msgSender [46010,46020]"/>
  <match src="parameter [7544,7557]" dest="parameter [7544,7557]"/>
  <match src="{: { [33683,33684]" dest="{: { [33683,33684]"/>
  <match src="identifier: rarities [59452,59460]" dest="identifier: rarities [59459,59467]"/>
  <match src="number_literal: 153 [62616,62619]" dest="number_literal: 153 [62623,62626]"/>
  <match src="}: } [42247,42248]" dest="}: } [42247,42248]"/>
  <match src="array_access [72130,72153]" dest="array_access [72137,72160]"/>
  <match src="identifier: setApprovalForAll [21942,21959]" dest="identifier: setApprovalForAll [21942,21959]"/>
  <match src="public: public [45889,45895]" dest="public: public [45889,45895]"/>
  <match src="type_name [76361,76366]" dest="type_name [76368,76373]"/>
  <match src="identifier: ownerOf [3896,3903]" dest="identifier: ownerOf [3896,3903]"/>
  <match src="[: [ [1577,1578]" dest="[: [ [1577,1578]"/>
  <match src="yul_assignment [10706,10738]" dest="yul_assignment [10706,10738]"/>
  <match src="]: ] [72791,72792]" dest="]: ] [72798,72799]"/>
  <match src="): ) [61870,61871]" dest="): ) [61877,61878]"/>
  <match src=",: , [39190,39191]" dest=",: , [39190,39191]"/>
  <match src="identifier: tokenId [44736,44743]" dest="identifier: tokenId [44736,44743]"/>
  <match src="{: { [49290,49291]" dest="{: { [49290,49291]"/>
  <match src="&quot;: &quot; [28231,28232]" dest="&quot;: &quot; [28231,28232]"/>
  <match src="]: ] [68296,68297]" dest="]: ] [68303,68304]"/>
  <match src="primitive_type [5630,5637]" dest="primitive_type [5630,5637]"/>
  <match src=".: . [72953,72954]" dest=".: . [72960,72961]"/>
  <match src="{: { [7075,7076]" dest="{: { [7075,7076]"/>
  <match src=",: , [11254,11255]" dest=",: , [11254,11255]"/>
  <match src="): ) [46158,46159]" dest="): ) [46158,46159]"/>
  <match src="using_directive [35875,35901]" dest="using_directive [35875,35901]"/>
  <match src="): ) [1508,1509]" dest="): ) [1508,1509]"/>
  <match src="string [66992,67013]" dest="string [66999,67020]"/>
  <match src="function_body [64725,64794]" dest="function_body [64732,64801]"/>
  <match src="variable_declaration_statement [7152,7173]" dest="variable_declaration_statement [7152,7173]"/>
  <match src="expression_statement [50532,50568]" dest="expression_statement [50532,50568]"/>
  <match src="): ) [4800,4801]" dest="): ) [4800,4801]"/>
  <match src=".: . [76472,76473]" dest=".: . [76479,76480]"/>
  <match src="expression_statement [69044,69103]" dest="expression_statement [69051,69110]"/>
  <match src="primitive_type [18704,18711]" dest="primitive_type [18704,18711]"/>
  <match src="uint256: uint256 [75363,75370]" dest="uint256: uint256 [75370,75377]"/>
  <match src="meta_type_expression [39262,39275]" dest="meta_type_expression [39262,39275]"/>
  <match src="augmented_assignment_expression [77395,77406]" dest="augmented_assignment_expression [77402,77413]"/>
  <match src="number_literal: 0 [32652,32653]" dest="number_literal: 0 [32652,32653]"/>
  <match src=",: , [78332,78333]" dest=",: , [78339,78340]"/>
  <match src="call_expression [80604,80652]" dest="call_expression [80611,80659]"/>
  <match src="identifier: commoners [71137,71146]" dest="identifier: commoners [71144,71153]"/>
  <match src="state_mutability [38387,38391]" dest="state_mutability [38387,38391]"/>
  <match src="identifier: tokenId [19315,19322]" dest="identifier: tokenId [19315,19322]"/>
  <match src="{: { [52597,52598]" dest="{: { [52597,52598]"/>
  <match src="array_access [69342,69414]" dest="array_access [69349,69421]"/>
  <match src="identifier: _burnCounter [38611,38623]" dest="identifier: _burnCounter [38611,38623]"/>
  <match src="+: + [7613,7614]" dest="+: + [7613,7614]"/>
  <match src="}: } [39028,39029]" dest="}: } [39028,39029]"/>
  <match src="(: ( [50021,50022]" dest="(: ( [50021,50022]"/>
  <match src="array_access [6758,6772]" dest="array_access [6758,6772]"/>
  <match src="bool: bool [47871,47875]" dest="bool: bool [47871,47875]"/>
  <match src=",: , [15184,15185]" dest=",: , [15184,15185]"/>
  <match src="identifier: ERC165 [39184,39190]" dest="identifier: ERC165 [39184,39190]"/>
  <match src="return: return [31037,31043]" dest="return: return [31037,31043]"/>
  <match src="type_cast_expression [49529,49539]" dest="type_cast_expression [49529,49539]"/>
  <match src="(: ( [6185,6186]" dest="(: ( [6185,6186]"/>
  <match src="identifier: commoners [73099,73108]" dest="identifier: commoners [73106,73115]"/>
  <match src="&quot;: &quot; [63854,63855]" dest="&quot;: &quot; [63861,63862]"/>
  <match src="identifier: functionCall [28511,28523]" dest="identifier: functionCall [28511,28523]"/>
  <match src="type_name [43848,43855]" dest="type_name [43848,43855]"/>
  <match src="call_argument [45675,45677]" dest="call_argument [45675,45677]"/>
  <match src="call_argument [50446,50450]" dest="call_argument [50446,50450]"/>
  <match src="type_name [15586,15593]" dest="type_name [15586,15593]"/>
  <match src="]: ] [71771,71772]" dest="]: ] [71778,71779]"/>
  <match src="member_expression [78351,78360]" dest="member_expression [78358,78367]"/>
  <match src="parameter [45560,45570]" dest="parameter [45560,45570]"/>
  <match src="parameter [22888,22898]" dest="parameter [22888,22898]"/>
  <match src="type_name [4987,4991]" dest="type_name [4987,4991]"/>
  <match src="function_definition [47769,49576]" dest="function_definition [47769,49576]"/>
  <match src="[: [ [70765,70766]" dest="[: [ [70772,70773]"/>
  <match src="[: [ [73821,73822]" dest="[: [ [73828,73829]"/>
  <match src="expression_statement [63512,63551]" dest="expression_statement [63519,63558]"/>
  <match src="comment: /**      * Returns the auxillary data for `owner`. (e.g. number of whitelist mint slots used).      */ [40148,40252]" dest="comment: /**      * Returns the auxillary data for `owner`. (e.g. number of whitelist mint slots used).      */ [40148,40252]"/>
  <match src="binary_expression [65881,65898]" dest="binary_expression [65888,65905]"/>
  <match src="function: function [33621,33629]" dest="function: function [33621,33629]"/>
  <match src="type_name [63992,63997]" dest="type_name [63999,64004]"/>
  <match src="}: } [41845,41846]" dest="}: } [41845,41846]"/>
  <match src="primitive_type [39574,39581]" dest="primitive_type [39574,39581]"/>
  <match src="(: ( [41740,41741]" dest="(: ( [41740,41741]"/>
  <match src="identifier: startTokenId [57825,57837]" dest="identifier: startTokenId [57825,57837]"/>
  <match src="type_name [36534,36540]" dest="type_name [36534,36540]"/>
  <match src="return_type_definition [25808,25822]" dest="return_type_definition [25808,25822]"/>
  <match src="memory: memory [30003,30009]" dest="memory: memory [30003,30009]"/>
  <match src="=: = [6041,6042]" dest="=: = [6041,6042]"/>
  <match src="primitive_type [6869,6875]" dest="primitive_type [6869,6875]"/>
  <match src="user_defined_type [35826,35833]" dest="user_defined_type [35826,35833]"/>
  <match src="number_literal: 1 [71226,71227]" dest="number_literal: 1 [71233,71234]"/>
  <match src="array_access [7740,7749]" dest="array_access [7740,7749]"/>
  <match src="array_access [76495,76526]" dest="array_access [76502,76533]"/>
  <match src=".: . [73944,73945]" dest=".: . [73951,73952]"/>
  <match src="type_name [5630,5637]" dest="type_name [5630,5637]"/>
  <match src="call_argument [77527,77548]" dest="call_argument [77534,77555]"/>
  <match src="type_name [55670,55677]" dest="type_name [55670,55677]"/>
  <match src="function_body [13884,15359]" dest="function_body [13884,15359]"/>
  <match src="array_access [50863,50881]" dest="array_access [50863,50881]"/>
  <match src="]: ] [1603,1604]" dest="]: ] [1603,1604]"/>
  <match src=".: . [74556,74557]" dest=".: . [74563,74564]"/>
  <match src="parameter [80326,80348]" dest="parameter [80333,80355]"/>
  <match src="identifier: commoners [73042,73051]" dest="identifier: commoners [73049,73058]"/>
  <match src="number_literal: 0 [7200,7201]" dest="number_literal: 0 [7200,7201]"/>
  <match src="&quot;: &quot; [66294,66295]" dest="&quot;: &quot; [66301,66302]"/>
  <match src="primitive_type [12839,12846]" dest="primitive_type [12839,12846]"/>
  <match src="override: override [44546,44554]" dest="override: override [44546,44554]"/>
  <match src="identifier: getRandom [70114,70123]" dest="identifier: getRandom [70121,70130]"/>
  <match src="comment: // OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol) [33835,33900]" dest="comment: // OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol) [33835,33900]"/>
  <match src="identifier: owner [44607,44612]" dest="identifier: owner [44607,44612]"/>
  <match src="visibility [4551,4559]" dest="visibility [4551,4559]"/>
  <match src="bytes32: bytes32 [13358,13365]" dest="bytes32: bytes32 [13358,13365]"/>
  <match src="identifier: ids [1612,1615]" dest="identifier: ids [1612,1615]"/>
  <match src="array_access [68488,68510]" dest="array_access [68495,68517]"/>
  <match src="identifier: bodyType [79262,79270]" dest="identifier: bodyType [79269,79277]"/>
  <match src="identifier: operator [44205,44213]" dest="identifier: operator [44205,44213]"/>
  <match src="&quot;: &quot; [49266,49267]" dest="&quot;: &quot; [49266,49267]"/>
  <match src="primitive_type [49529,49536]" dest="primitive_type [49529,49536]"/>
  <match src="identifier: hash [15533,15537]" dest="identifier: hash [15533,15537]"/>
  <match src="expression_statement [80370,80408]" dest="expression_statement [80377,80415]"/>
  <match src="returns: returns [6215,6222]" dest="returns: returns [6215,6222]"/>
  <match src="variable_declaration [66200,66208]" dest="variable_declaration [66207,66215]"/>
  <match src="=: = [80492,80493]" dest="=: = [80499,80500]"/>
  <match src="identifier: interfaceId [39247,39258]" dest="identifier: interfaceId [39247,39258]"/>
  <match src="type_name [1029,1034]" dest="type_name [1029,1034]"/>
  <match src="variable_declaration_statement [7183,7202]" dest="variable_declaration_statement [7183,7202]"/>
  <match src="binary_expression [74863,74875]" dest="binary_expression [74870,74882]"/>
  <match src="parameter [2479,2486]" dest="parameter [2479,2486]"/>
  <match src="identifier: signer [15322,15328]" dest="identifier: signer [15322,15328]"/>
  <match src="type_cast_expression [77275,77296]" dest="type_cast_expression [77282,77303]"/>
  <match src="]: ] [81297,81298]" dest="]: ] [81304,81305]"/>
  <match src="(: ( [77450,77451]" dest="(: ( [77457,77458]"/>
  <match src="(: ( [39828,39829]" dest="(: ( [39828,39829]"/>
  <match src="call_argument [68444,68472]" dest="call_argument [68451,68479]"/>
  <match src="member_expression [81193,81217]" dest="member_expression [81200,81224]"/>
  <match src="primitive_type [6504,6511]" dest="primitive_type [6504,6511]"/>
  <match src="yul_function_call [13034,13055]" dest="yul_function_call [13034,13055]"/>
  <match src="expression_statement [61918,61935]" dest="expression_statement [61925,61942]"/>
  <match src=".: . [39340,39341]" dest=".: . [39340,39341]"/>
  <match src="identifier: interfaceId [34738,34749]" dest="identifier: interfaceId [34738,34749]"/>
  <match src="!=: != [49220,49222]" dest="!=: != [49220,49222]"/>
  <match src=".: . [8580,8581]" dest=".: . [8580,8581]"/>
  <match src="identifier: _msgSender [43626,43636]" dest="identifier: _msgSender [43626,43636]"/>
  <match src=",: , [44990,44991]" dest=",: , [44990,44991]"/>
  <match src="array_access [79221,79239]" dest="array_access [79228,79246]"/>
  <match src="[: [ [7634,7635]" dest="[: [ [7634,7635]"/>
  <match src="identifier: bodyType [78178,78186]" dest="identifier: bodyType [78185,78193]"/>
  <match src=",: , [23789,23790]" dest=",: , [23789,23790]"/>
  <match src="memory: memory [501,507]" dest="memory: memory [501,507]"/>
  <match src="identifier: vs [11318,11320]" dest="identifier: vs [11318,11320]"/>
  <match src="type_name [65239,65246]" dest="type_name [65246,65253]"/>
  <match src="identifier: rarities [63306,63314]" dest="identifier: rarities [63313,63321]"/>
  <match src="return_statement [6472,6483]" dest="return_statement [6472,6483]"/>
  <match src="external: external [19324,19332]" dest="external: external [19324,19332]"/>
  <match src="parameter [4987,4997]" dest="parameter [4987,4997]"/>
  <match src="function_definition [27018,27335]" dest="function_definition [27018,27335]"/>
  <match src="visibility [10179,10187]" dest="visibility [10179,10187]"/>
  <match src="identifier: timestamp [1692,1701]" dest="identifier: timestamp [1692,1701]"/>
  <match src="bytes32: bytes32 [58020,58027]" dest="bytes32: bytes32 [58020,58027]"/>
  <match src=".: . [69495,69496]" dest=".: . [69502,69503]"/>
  <match src="}: } [61253,61254]" dest="}: } [61260,61261]"/>
  <match src="type_name [5517,5524]" dest="type_name [5517,5524]"/>
  <match src="type_name [617,623]" dest="type_name [617,623]"/>
  <match src="primitive_type [78729,78736]" dest="primitive_type [78736,78743]"/>
  <match src=".: . [79191,79192]" dest=".: . [79198,79199]"/>
  <match src="[: [ [79182,79183]" dest="[: [ [79189,79190]"/>
  <match src="(: ( [38377,38378]" dest="(: ( [38377,38378]"/>
  <match src="&gt;=: &gt;= [27130,27132]" dest="&gt;=: &gt;= [27130,27132]"/>
  <match src="identifier: head [5138,5142]" dest="identifier: head [5138,5142]"/>
  <match src="primitive_type [47424,47429]" dest="primitive_type [47424,47429]"/>
  <match src="identifier: RecoverError [13439,13451]" dest="identifier: RecoverError [13439,13451]"/>
  <match src="=: = [6668,6669]" dest="=: = [6668,6669]"/>
  <match src="]: ] [44025,44026]" dest="]: ] [44025,44026]"/>
  <match src="(: ( [49528,49529]" dest="(: ( [49528,49529]"/>
  <match src="member_expression [72875,72907]" dest="member_expression [72882,72914]"/>
  <match src="&gt;=: &gt;= [29847,29849]" dest="&gt;=: &gt;= [29847,29849]"/>
  <match src="comment: // The tokenId of the next token to be minted. [36998,37044]" dest="comment: // The tokenId of the next token to be minted. [36998,37044]"/>
  <match src="identifier: balance [50926,50933]" dest="identifier: balance [50926,50933]"/>
  <match src="member_expression [66159,66172]" dest="member_expression [66166,66179]"/>
  <match src="primitive_type [77193,77199]" dest="primitive_type [77200,77206]"/>
  <match src="]: ] [71214,71215]" dest="]: ] [71221,71222]"/>
  <match src="comment: /**     * generates traits for a specific token, checking to make sure it's unique     * @param tokenId the id of the token to generate traits for     * @param seed a pseudorandom 256 bit number to derive traits from     * @return t - a struct of traits for the given token ID     */ [75051,75339]" dest="comment: /**     * generates traits for a specific token, checking to make sure it's unique     * @param tokenId the id of the token to generate traits for     * @param seed a pseudorandom 256 bit number to derive traits from     * @return t - a struct of traits for the given token ID     */ [75058,75346]"/>
  <match src="parameter [55691,55706]" dest="parameter [55691,55706]"/>
  <match src="(: ( [45116,45117]" dest="(: ( [45116,45117]"/>
  <match src="(: ( [50445,50446]" dest="(: ( [50445,50446]"/>
  <match src="external: external [21354,21362]" dest="external: external [21354,21362]"/>
  <match src="number_literal: 1 [62262,62263]" dest="number_literal: 1 [62269,62270]"/>
  <match src="yul_evm_builtin [32824,32829]" dest="yul_evm_builtin [32824,32829]"/>
  <match src="identifier: approved [18963,18971]" dest="identifier: approved [18963,18971]"/>
  <match src="&lt;: &lt; [80503,80504]" dest="&lt;: &lt; [80510,80511]"/>
  <match src="(: ( [52127,52128]" dest="(: ( [52127,52128]"/>
  <match src=".: . [56021,56022]" dest=".: . [56021,56022]"/>
  <match src="return_statement [15240,15291]" dest="return_statement [15240,15291]"/>
  <match src=".: . [55929,55930]" dest=".: . [55929,55930]"/>
  <match src="member_expression [39369,39392]" dest="member_expression [39369,39392]"/>
  <match src="identifier: sender [61150,61156]" dest="identifier: sender [61157,61163]"/>
  <match src="): ) [68571,68572]" dest="): ) [68578,68579]"/>
  <match src="=: = [61823,61824]" dest="=: = [61830,61831]"/>
  <match src="{: { [6239,6240]" dest="{: { [6239,6240]"/>
  <match src="&quot;: &quot; [66110,66111]" dest="&quot;: &quot; [66117,66118]"/>
  <match src="]: ] [68596,68597]" dest="]: ] [68603,68604]"/>
  <match src="member_expression [79173,79197]" dest="member_expression [79180,79204]"/>
  <match src="assignment_expression [62849,62903]" dest="assignment_expression [62856,62910]"/>
  <match src="&quot;: &quot; [80932,80933]" dest="&quot;: &quot; [80939,80940]"/>
  <match src="): ) [80524,80525]" dest="): ) [80531,80532]"/>
  <match src="number_literal: 6 [62872,62873]" dest="number_literal: 6 [62879,62880]"/>
  <match src="(: ( [78937,78938]" dest="(: ( [78944,78945]"/>
  <match src="uint8: uint8 [67773,67778]" dest="uint8: uint8 [67780,67785]"/>
  <match src="identifier: background [80790,80800]" dest="identifier: background [80797,80807]"/>
  <match src="number_literal: 4 [73273,73274]" dest="number_literal: 4 [73280,73281]"/>
  <match src=",: , [52135,52136]" dest=",: , [52135,52136]"/>
  <match src="): ) [46021,46022]" dest="): ) [46021,46022]"/>
  <match src=",: , [63208,63209]" dest=",: , [63215,63216]"/>
  <match src="primitive_type [4471,4478]" dest="primitive_type [4471,4478]"/>
  <match src="identifier: _addressData [40339,40351]" dest="identifier: _addressData [40339,40351]"/>
  <match src="identifier: alchemy [73178,73185]" dest="identifier: alchemy [73185,73192]"/>
  <match src="type_name [1141,1146]" dest="type_name [1141,1146]"/>
  <match src="call_argument [40099,40131]" dest="call_argument [40099,40131]"/>
  <match src="number_literal: 0 [26074,26075]" dest="number_literal: 0 [26074,26075]"/>
  <match src="): ) [4910,4911]" dest="): ) [4910,4911]"/>
  <match src="identifier: ECDSA [8212,8217]" dest="identifier: ECDSA [8212,8217]"/>
  <match src="internal: internal [33747,33755]" dest="internal: internal [33747,33755]"/>
  <match src="if_statement [41205,41306]" dest="if_statement [41205,41306]"/>
  <match src="member_expression [71906,71938]" dest="member_expression [71913,71945]"/>
  <match src=",: , [16330,16331]" dest=",: , [16330,16331]"/>
  <match src="identifier: ERC20Like [61890,61899]" dest="identifier: ERC20Like [61897,61906]"/>
  <match src="function_body [17291,17385]" dest="function_body [17291,17385]"/>
  <match src="array_access [62937,62948]" dest="array_access [62944,62955]"/>
  <match src="call_expression [66136,66184]" dest="call_expression [66143,66191]"/>
  <match src="identifier: svgArmor [714,722]" dest="identifier: svgArmor [714,722]"/>
  <match src="number_literal: 0 [48033,48034]" dest="number_literal: 0 [48033,48034]"/>
  <match src="identifier: topCommoner_ [72727,72739]" dest="identifier: topCommoner_ [72734,72746]"/>
  <match src="identifier: _addressData [40099,40111]" dest="identifier: _addressData [40099,40111]"/>
  <match src="call_argument [50465,50466]" dest="call_argument [50465,50466]"/>
  <match src="(: ( [77443,77444]" dest="(: ( [77450,77451]"/>
  <match src="call_argument [15708,15709]" dest="call_argument [15708,15709]"/>
  <match src="identifier: doges_ [65818,65824]" dest="identifier: doges_ [65825,65831]"/>
  <match src="function: function [21308,21316]" dest="function: function [21308,21316]"/>
  <match src="parameter [44133,44149]" dest="parameter [44133,44149]"/>
  <match src="==: == [64301,64303]" dest="==: == [64308,64310]"/>
  <match src="identifier: msg [63468,63471]" dest="identifier: msg [63475,63478]"/>
  <match src="parenthesized_expression [61145,61183]" dest="parenthesized_expression [61152,61190]"/>
  <match src="type_name [13821,13828]" dest="type_name [13821,13828]"/>
  <match src="identifier: _currentIndex [69964,69977]" dest="identifier: _currentIndex [69971,69984]"/>
  <match src="function_body [78014,78395]" dest="function_body [78021,78402]"/>
  <match src="external: external [3916,3924]" dest="external: external [3916,3924]"/>
  <match src="type_name [59228,59235]" dest="type_name [59235,59242]"/>
  <match src="member_expression [77667,77676]" dest="member_expression [77674,77683]"/>
  <match src="string_literal [39593,39623]" dest="string_literal [39593,39623]"/>
  <match src=",: , [62721,62722]" dest=",: , [62728,62729]"/>
  <match src="type_name [33778,33783]" dest="type_name [33778,33783]"/>
  <match src="primitive_type [77110,77116]" dest="primitive_type [77117,77123]"/>
  <match src="): ) [77633,77634]" dest="): ) [77640,77641]"/>
  <match src="expression_statement [61840,61872]" dest="expression_statement [61847,61879]"/>
  <match src="identifier: sender [67223,67229]" dest="identifier: sender [67230,67236]"/>
  <match src="[: [ [55039,55040]" dest="[: [ [55039,55040]"/>
  <match src="string [46381,46423]" dest="string [46381,46423]"/>
  <match src="identifier: value [6194,6199]" dest="identifier: value [6194,6199]"/>
  <match src="==: == [45217,45219]" dest="==: == [45217,45219]"/>
  <match src="call_argument [67568,67577]" dest="call_argument [67575,67584]"/>
  <match src="string: string [42732,42738]" dest="string: string [42732,42738]"/>
  <match src="bytes: bytes [30403,30408]" dest="bytes: bytes [30403,30408]"/>
  <match src="identifier: DOGE_SUPPLY [65418,65429]" dest="identifier: DOGE_SUPPLY [65425,65436]"/>
  <match src="call_expression [61103,61234]" dest="call_expression [61110,61241]"/>
  <match src=",: , [62336,62337]" dest=",: , [62343,62344]"/>
  <match src="virtual: virtual [57881,57888]" dest="virtual: virtual [57881,57888]"/>
  <match src="&quot;: &quot; [65431,65432]" dest="&quot;: &quot; [65438,65439]"/>
  <match src="call_expression [64991,65019]" dest="call_expression [64998,65026]"/>
  <match src="comment: // Realistically, 2**64-1 is more than enough. [36478,36524]" dest="comment: // Realistically, 2**64-1 is more than enough. [36478,36524]"/>
  <match src="identifier: require [80370,80377]" dest="identifier: require [80377,80384]"/>
  <match src="identifier: value [67133,67138]" dest="identifier: value [67140,67145]"/>
  <match src="external: external [2001,2009]" dest="external: external [2001,2009]"/>
  <match src="internal: internal [15603,15611]" dest="internal: internal [15603,15611]"/>
  <match src="(: ( [15646,15647]" dest="(: ( [15646,15647]"/>
  <match src="call_argument [61900,61906]" dest="call_argument [61907,61913]"/>
  <match src="state_mutability [13847,13851]" dest="state_mutability [13847,13851]"/>
  <match src=".: . [80430,80431]" dest=".: . [80437,80438]"/>
  <match src="parameter [7060,7073]" dest="parameter [7060,7073]"/>
  <match src="{: { [42747,42748]" dest="{: { [42747,42748]"/>
  <match src="state_mutability [17268,17272]" dest="state_mutability [17268,17272]"/>
  <match src="if_statement [45326,45382]" dest="if_statement [45326,45382]"/>
  <match src="identifier: castle [80441,80447]" dest="identifier: castle [80448,80454]"/>
  <match src="expression_statement [62937,62981]" dest="expression_statement [62944,62988]"/>
  <match src="}: } [56119,56120]" dest="}: } [56119,56120]"/>
  <match src="identifier: returndata [32632,32642]" dest="identifier: returndata [32632,32642]"/>
  <match src="identifier: rarities [62386,62394]" dest="identifier: rarities [62393,62401]"/>
  <match src="(: ( [48020,48021]" dest="(: ( [48020,48021]"/>
  <match src="expression_statement [7713,7719]" dest="expression_statement [7713,7719]"/>
  <match src="}: } [8905,8906]" dest="}: } [8905,8906]"/>
  <match src="parameter [76348,76359]" dest="parameter [76355,76366]"/>
  <match src="number_literal: 1 [62552,62553]" dest="number_literal: 1 [62559,62560]"/>
  <match src="number_unit [66178,66183]" dest="number_unit [66185,66190]"/>
  <match src="identifier: from [3674,3678]" dest="identifier: from [3674,3678]"/>
  <match src="address: address [43457,43464]" dest="address: address [43457,43464]"/>
  <match src="bool: bool [78766,78770]" dest="bool: bool [78773,78777]"/>
  <match src="type_name [23849,23854]" dest="type_name [23849,23854]"/>
  <match src="identifier: rarities [62253,62261]" dest="identifier: rarities [62260,62268]"/>
  <match src="function_definition [63417,63615]" dest="function_definition [63424,63622]"/>
  <match src="comment: // if (existingCombinations[structToHash(t)] == 0) { [75648,75700]" dest="comment: // if (existingCombinations[structToHash(t)] == 0) { [75655,75707]"/>
  <match src=",: , [49363,49364]" dest=",: , [49363,49364]"/>
  <match src="internal: internal [38156,38164]" dest="internal: internal [38156,38164]"/>
  <match src="&quot;: &quot; [65961,65962]" dest="&quot;: &quot; [65968,65969]"/>
  <match src="call_argument [50549,50550]" dest="call_argument [50549,50550]"/>
  <match src="if_statement [8790,9028]" dest="if_statement [8790,9028]"/>
  <match src="call_argument [49361,49363]" dest="call_argument [49361,49363]"/>
  <match src="identifier: commoners [80981,80990]" dest="identifier: commoners [80988,80997]"/>
  <match src="pure: pure [7046,7050]" dest="pure: pure [7046,7050]"/>
  <match src="number_literal: 132 [62650,62653]" dest="number_literal: 132 [62657,62660]"/>
  <match src="): ) [42329,42330]" dest="): ) [42329,42330]"/>
  <match src="call_argument [68557,68607]" dest="call_argument [68564,68614]"/>
  <match src="}: } [41868,41869]" dest="}: } [41868,41869]"/>
  <match src="member_expression [50022,50040]" dest="member_expression [50022,50040]"/>
  <match src="address: address [39791,39798]" dest="address: address [39791,39798]"/>
  <match src="augmented_assignment_expression [50909,50938]" dest="augmented_assignment_expression [50909,50938]"/>
  <match src="type_name [5849,5854]" dest="type_name [5849,5854]"/>
  <match src="): ) [78012,78013]" dest="): ) [78019,78020]"/>
  <match src="call_argument [46248,46252]" dest="call_argument [46248,46252]"/>
  <match src=",: , [30907,30908]" dest=",: , [30907,30908]"/>
  <match src="calldata: calldata [3161,3169]" dest="calldata: calldata [3161,3169]"/>
  <match src="identifier: topTalents [70169,70179]" dest="identifier: topTalents [70176,70186]"/>
  <match src="identifier: ids [5664,5667]" dest="identifier: ids [5664,5667]"/>
  <match src="identifier: owner [40635,40640]" dest="identifier: owner [40635,40640]"/>
  <match src="call_expression [64162,64215]" dest="call_expression [64169,64222]"/>
  <match src=",: , [13327,13328]" dest=",: , [13327,13328]"/>
  <match src="call_expression [61851,61871]" dest="call_expression [61858,61878]"/>
  <match src="identifier: airdropMax_ [69907,69918]" dest="identifier: airdropMax_ [69914,69925]"/>
  <match src="uint16: uint16 [4096,4102]" dest="uint16: uint16 [4096,4102]"/>
  <match src="call_argument [66452,66465]" dest="call_argument [66459,66472]"/>
  <match src="identifier: clothes [71985,71992]" dest="identifier: clothes [71992,71999]"/>
  <match src="interface_declaration [24127,24605]" dest="interface_declaration [24127,24605]"/>
  <match src="type_name [3848,3855]" dest="type_name [3848,3855]"/>
  <match src="parameter [67362,67374]" dest="parameter [67369,67381]"/>
  <match src="identifier: commoners [71961,71970]" dest="identifier: commoners [71968,71977]"/>
  <match src="view: view [40909,40913]" dest="view: view [40909,40913]"/>
  <match src="uint16: uint16 [66200,66206]" dest="uint16: uint16 [66207,66213]"/>
  <match src="identifier: _safeMint [47356,47365]" dest="identifier: _safeMint [47356,47365]"/>
  <match src="call_expression [63679,63720]" dest="call_expression [63686,63727]"/>
  <match src="string_literal [7124,7130]" dest="string_literal [7124,7130]"/>
  <match src="parameter [2034,2044]" dest="parameter [2034,2044]"/>
  <match src="(: ( [43618,43619]" dest="(: ( [43618,43619]"/>
  <match src="call_argument [78351,78360]" dest="call_argument [78358,78367]"/>
  <match src="): ) [7723,7724]" dest="): ) [7723,7724]"/>
  <match src="identifier: AirdropTopTalent [74269,74285]" dest="identifier: AirdropTopTalent [74276,74292]"/>
  <match src="}: } [38222,38223]" dest="}: } [38222,38223]"/>
  <match src="yul_path [11245,11254]" dest="yul_path [11245,11254]"/>
  <match src="): ) [69101,69102]" dest="): ) [69108,69109]"/>
  <match src="): ) [68607,68608]" dest="): ) [68614,68615]"/>
  <match src="identifier: owners [1587,1593]" dest="identifier: owners [1587,1593]"/>
  <match src="identifier: to [47959,47961]" dest="identifier: to [47959,47961]"/>
  <match src="type_name [79678,79685]" dest="type_name [79685,79692]"/>
  <match src="return: return [75518,75524]" dest="return: return [75525,75531]"/>
  <match src="primitive_type [59809,59816]" dest="primitive_type [59816,59823]"/>
  <match src="expression_statement [62318,62356]" dest="expression_statement [62325,62363]"/>
  <match src="{: { [8492,8493]" dest="{: { [8492,8493]"/>
  <match src=",: , [76359,76360]" dest=",: , [76366,76367]"/>
  <match src="number_literal: 10_000 [58234,58240]" dest="number_literal: 10_000 [58234,58240]"/>
  <match src="call_expression [55910,55929]" dest="call_expression [55910,55929]"/>
  <match src="parameter [66689,66711]" dest="parameter [66696,66718]"/>
  <match src="parameter [63646,63659]" dest="parameter [63653,63666]"/>
  <match src="function_body [57072,57074]" dest="function_body [57072,57074]"/>
  <match src="identifier: tokenId [49997,50004]" dest="identifier: tokenId [49997,50004]"/>
  <match src="): ) [45178,45179]" dest="): ) [45178,45179]"/>
  <match src="enum: enum [8225,8229]" dest="enum: enum [8225,8229]"/>
  <match src="identifier: topCommoner_ [73052,73064]" dest="identifier: topCommoner_ [73059,73071]"/>
  <match src="primitive_type [49859,49866]" dest="primitive_type [49859,49866]"/>
  <match src="array_access [79869,79888]" dest="array_access [79876,79895]"/>
  <match src="): ) [45346,45347]" dest="): ) [45346,45347]"/>
  <match src="}: } [44630,44631]" dest="}: } [44630,44631]"/>
  <match src="identifier: alchemy [81309,81316]" dest="identifier: alchemy [81316,81323]"/>
  <match src="unary_expression [43919,43936]" dest="unary_expression [43919,43936]"/>
  <match src="function_definition [7469,7920]" dest="function_definition [7469,7920]"/>
  <match src="(: ( [2443,2444]" dest="(: ( [2443,2444]"/>
  <match src="identifier: dogewood [58660,58668]" dest="identifier: dogewood [58667,58675]"/>
  <match src="address: address [18489,18496]" dest="address: address [18489,18496]"/>
  <match src="{: { [13884,13885]" dest="{: { [13884,13885]"/>
  <match src="function_definition [65678,66475]" dest="function_definition [65685,66482]"/>
  <match src="identifier: getApproved [52736,52747]" dest="identifier: getApproved [52736,52747]"/>
  <match src="function: function [167,175]" dest="function: function [167,175]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [77650,77653]" dest="&gt;&gt;=: &gt;&gt;= [77657,77660]"/>
  <match src="identifier: breed [79166,79171]" dest="identifier: breed [79173,79178]"/>
  <match src="inline_array_expression [63263,63275]" dest="inline_array_expression [63270,63282]"/>
  <match src="identifier: Commoners [57974,57983]" dest="identifier: Commoners [57974,57983]"/>
  <match src="{: { [41771,41772]" dest="{: { [41771,41772]"/>
  <match src="string: string [468,474]" dest="string: string [468,474]"/>
  <match src="&lt;: &lt; [46817,46818]" dest="&lt;: &lt; [46817,46818]"/>
  <match src="return_type_definition [21574,21600]" dest="return_type_definition [21574,21600]"/>
  <match src="primitive_type [74404,74411]" dest="primitive_type [74411,74418]"/>
  <match src="user_defined_type [39324,39339]" dest="user_defined_type [39324,39339]"/>
  <match src="identifier: amount [3452,3458]" dest="identifier: amount [3452,3458]"/>
  <match src="identifier: pull [5625,5629]" dest="identifier: pull [5625,5629]"/>
  <match src="comment: /**      * Sets the auxillary data for `owner`. (e.g. number of whitelist mint slots used).      * If there are multiple variables, please pack them into a uint64.      */ [40378,40552]" dest="comment: /**      * Sets the auxillary data for `owner`. (e.g. number of whitelist mint slots used).      * If there are multiple variables, please pack them into a uint64.      */ [40378,40552]"/>
  <match src="state_mutability [38165,38169]" dest="state_mutability [38165,38169]"/>
  <match src="type_name [10202,10209]" dest="type_name [10202,10209]"/>
  <match src="(: ( [10815,10816]" dest="(: ( [10815,10816]"/>
  <match src="function_definition [64232,64350]" dest="function_definition [64239,64357]"/>
  <match src="array_access [70213,70237]" dest="array_access [70220,70244]"/>
  <match src="(: ( [64523,64524]" dest="(: ( [64530,64531]"/>
  <match src="binary_expression [51380,51391]" dest="binary_expression [51380,51391]"/>
  <match src="identifier: level [1928,1933]" dest="identifier: level [1928,1933]"/>
  <match src="expression_statement [71137,71174]" dest="expression_statement [71144,71181]"/>
  <match src="identifier: RecoverError [8568,8580]" dest="identifier: RecoverError [8568,8580]"/>
  <match src="): ) [68707,68708]" dest="): ) [68714,68715]"/>
  <match src="public: public [42502,42508]" dest="public: public [42502,42508]"/>
  <match src="type_name [30962,30966]" dest="type_name [30962,30966]"/>
  <match src="identifier: rarities [62588,62596]" dest="identifier: rarities [62595,62603]"/>
  <match src="parameter [39541,39548]" dest="parameter [39541,39548]"/>
  <match src="comment: // mapping of tokenNo =&gt; tokenPartner [58379,58416]" dest="comment: // mapping of tokenNo =&gt; tokenPartner [58379,58416]"/>
  <match src="string_literal [68444,68472]" dest="string_literal [68451,68479]"/>
  <match src="identifier: revealed [78938,78946]" dest="identifier: revealed [78945,78953]"/>
  <match src="): ) [52920,52921]" dest="): ) [52920,52921]"/>
  <match src="): ) [63785,63786]" dest="): ) [63792,63793]"/>
  <match src="): ) [45887,45888]" dest="): ) [45887,45888]"/>
  <match src="type_name [52532,52539]" dest="type_name [52532,52539]"/>
  <match src="]: ] [73121,73122]" dest="]: ] [73128,73129]"/>
  <match src="}: } [10861,10862]" dest="}: } [10861,10862]"/>
  <match src="identifier: from [55832,55836]" dest="identifier: from [55832,55836]"/>
  <match src="): ) [1999,2000]" dest="): ) [1999,2000]"/>
  <match src=",: , [77049,77050]" dest=",: , [77056,77057]"/>
  <match src="type_name [4978,4982]" dest="type_name [4978,4982]"/>
  <match src="type_name [60997,61004]" dest="type_name [61004,61011]"/>
  <match src="function: function [5379,5387]" dest="function: function [5379,5387]"/>
  <match src="type_name [39496,39503]" dest="type_name [39496,39503]"/>
  <match src="return_type_definition [24578,24601]" dest="return_type_definition [24578,24601]"/>
  <match src="bytes: bytes [28559,28564]" dest="bytes: bytes [28559,28564]"/>
  <match src="string [69429,69457]" dest="string [69436,69464]"/>
  <match src="function_definition [79660,80107]" dest="function_definition [79667,80114]"/>
  <match src="expression_statement [40622,40652]" dest="expression_statement [40622,40652]"/>
  <match src="call_argument [51950,51954]" dest="call_argument [51950,51954]"/>
  <match src="function: function [3114,3122]" dest="function: function [3114,3122]"/>
  <match src="}: } [8383,8384]" dest="}: } [8383,8384]"/>
  <match src="assignment_expression [77502,77552]" dest="assignment_expression [77509,77559]"/>
  <match src="state_variable_declaration [58867,58916]" dest="state_variable_declaration [58874,58923]"/>
  <match src="comment: /**      * @dev Destroys `tokenId`.      * The approval is cleared when the token is burned.      *      * Requirements:      *      * - `tokenId` must exist.      *      * Emits a {Transfer} event.      */ [52159,52374]" dest="comment: /**      * @dev Destroys `tokenId`.      * The approval is cleared when the token is burned.      *      * Requirements:      *      * - `tokenId` must exist.      *      * Emits a {Transfer} event.      */ [52159,52374]"/>
  <match src="): ) [44684,44685]" dest="): ) [44684,44685]"/>
  <match src="revert_statement [43656,43702]" dest="revert_statement [43656,43702]"/>
  <match src="uint256: uint256 [54002,54009]" dest="uint256: uint256 [54002,54009]"/>
  <match src="type_name [5248,5253]" dest="type_name [5248,5253]"/>
  <match src="bool: bool [39210,39214]" dest="bool: bool [39210,39214]"/>
  <match src="function_definition [5616,5678]" dest="function_definition [5616,5678]"/>
  <match src=":=: := [61061,61063]" dest=":=: := [61068,61070]"/>
  <match src="internal: internal [33643,33651]" dest="internal: internal [33643,33651]"/>
  <match src="call_expression [69052,69065]" dest="call_expression [69059,69072]"/>
  <match src="type_name [59433,59440]" dest="type_name [59440,59447]"/>
  <match src="override: override [45060,45068]" dest="override: override [45060,45068]"/>
  <match src="uint256: uint256 [4865,4872]" dest="uint256: uint256 [4865,4872]"/>
  <match src="memory: memory [785,791]" dest="memory: memory [785,791]"/>
  <match src="}: } [33827,33828]" dest="}: } [33827,33828]"/>
  <match src="call_argument [43489,43496]" dest="call_argument [43489,43496]"/>
  <match src="primitive_type [40064,40071]" dest="primitive_type [40064,40071]"/>
  <match src="identifier: _addressData [39650,39662]" dest="identifier: _addressData [39650,39662]"/>
  <match src="identifier: topCommoner_ [73109,73121]" dest="identifier: topCommoner_ [73116,73128]"/>
  <match src="&gt;: &gt; [26072,26073]" dest="&gt;: &gt; [26072,26073]"/>
  <match src="return_type_definition [1431,1448]" dest="return_type_definition [1431,1448]"/>
  <match src="member_expression [80075,80090]" dest="member_expression [80082,80097]"/>
  <match src="member_expression [71246,71277]" dest="member_expression [71253,71284]"/>
  <match src="parameter [20138,20148]" dest="parameter [20138,20148]"/>
  <match src="mapping: mapping [37440,37447]" dest="mapping: mapping [37440,37447]"/>
  <match src="visibility [31355,31363]" dest="visibility [31355,31363]"/>
  <match src="identifier: palette [80727,80734]" dest="identifier: palette [80734,80741]"/>
  <match src=",: , [63394,63395]" dest=",: , [63401,63402]"/>
  <match src="identifier: clothes [5230,5237]" dest="identifier: clothes [5230,5237]"/>
  <match src="view: view [25803,25807]" dest="view: view [25803,25807]"/>
  <match src="identifier: buffer [6876,6882]" dest="identifier: buffer [6876,6882]"/>
  <match src="comment: // Keeps track of mint count with minimal overhead for tokenomics. [36559,36625]" dest="comment: // Keeps track of mint count with minimal overhead for tokenomics. [36559,36625]"/>
  <match src="(: ( [66001,66002]" dest="(: ( [66008,66009]"/>
  <match src=",: , [62348,62349]" dest=",: , [62355,62356]"/>
  <match src="primitive_type [18932,18939]" dest="primitive_type [18932,18939]"/>
  <match src="parameter [13801,13810]" dest="parameter [13801,13810]"/>
  <match src="return_statement [46772,46865]" dest="return_statement [46772,46865]"/>
  <match src="member_expression [80559,80569]" dest="member_expression [80566,80576]"/>
  <match src="parameter [21583,21599]" dest="parameter [21583,21599]"/>
  <match src="number_literal: 0 [6714,6715]" dest="number_literal: 0 [6714,6715]"/>
  <match src="returns: returns [24267,24274]" dest="returns: returns [24267,24274]"/>
  <match src="expression_statement [81327,81359]" dest="expression_statement [81334,81366]"/>
  <match src="contract_body [3107,3187]" dest="contract_body [3107,3187]"/>
  <match src="address: address [44779,44786]" dest="address: address [44779,44786]"/>
  <match src="identifier: length [66225,66231]" dest="identifier: length [66232,66238]"/>
  <match src="return: return [16732,16738]" dest="return: return [16732,16738]"/>
  <match src="]: ] [79447,79448]" dest="]: ] [79454,79455]"/>
  <match src=",: , [32045,32046]" dest=",: , [32045,32046]"/>
  <match src="identifier: from [3782,3786]" dest="identifier: from [3782,3786]"/>
  <match src="{: { [68252,68253]" dest="{: { [68259,68260]"/>
  <match src="identifier: sender [66087,66093]" dest="identifier: sender [66094,66100]"/>
  <match src="memory: memory [707,713]" dest="memory: memory [707,713]"/>
  <match src="identifier: prevOwnership [54444,54457]" dest="identifier: prevOwnership [54444,54457]"/>
  <match src="visibility [44686,44694]" dest="visibility [44686,44694]"/>
  <match src="function_definition [13288,13548]" dest="function_definition [13288,13548]"/>
  <match src="return_type_definition [42199,42216]" dest="return_type_definition [42199,42216]"/>
  <match src="assignment_expression [62762,62838]" dest="assignment_expression [62769,62845]"/>
  <match src="(: ( [24382,24383]" dest="(: ( [24382,24383]"/>
  <match src="comment: // signatures from current libraries generate a unique signature with an s-value in the lower half order. [14244,14349]" dest="comment: // signatures from current libraries generate a unique signature with an s-value in the lower half order. [14244,14349]"/>
  <match src="returns: returns [31364,31371]" dest="returns: returns [31364,31371]"/>
  <match src="function_definition [39768,39905]" dest="function_definition [39768,39905]"/>
  <match src="(: ( [37668,37669]" dest="(: ( [37668,37669]"/>
  <match src="member_expression [54444,54472]" dest="member_expression [54444,54472]"/>
  <match src="yul_assignment [11229,11262]" dest="yul_assignment [11229,11262]"/>
  <match src="}: } [63408,63409]" dest="}: } [63415,63416]"/>
  <match src="identifier: _data [55730,55735]" dest="identifier: _data [55730,55735]"/>
  <match src="(: ( [77365,77366]" dest="(: ( [77372,77373]"/>
  <match src="assembly: assembly [32769,32777]" dest="assembly: assembly [32769,32777]"/>
  <match src="array_access [40622,40641]" dest="array_access [40622,40641]"/>
  <match src="identifier: id [81337,81339]" dest="identifier: id [81344,81346]"/>
  <match src="identifier: retval [55900,55906]" dest="identifier: retval [55900,55906]"/>
  <match src="&quot;: &quot; [43945,43946]" dest="&quot;: &quot; [43945,43946]"/>
  <match src="type_name [79725,79731]" dest="type_name [79732,79738]"/>
  <match src="]: ] [79552,79553]" dest="]: ] [79559,79560]"/>
  <match src="identifier: commoners [71852,71861]" dest="identifier: commoners [71859,71868]"/>
  <match src="bytes: bytes [31829,31834]" dest="bytes: bytes [31829,31834]"/>
  <match src="(: ( [20104,20105]" dest="(: ( [20104,20105]"/>
  <match src="number_literal: 5 [62857,62858]" dest="number_literal: 5 [62864,62865]"/>
  <match src="identifier: buffer [6661,6667]" dest="identifier: buffer [6661,6667]"/>
  <match src="type_name [42833,42839]" dest="type_name [42833,42839]"/>
  <match src="number_literal: 0x150b7a02 [81541,81551]" dest="number_literal: 0x150b7a02 [81548,81558]"/>
  <match src="indexed: indexed [18917,18924]" dest="indexed: indexed [18917,18924]"/>
  <match src="returns: returns [4926,4933]" dest="returns: returns [4926,4933]"/>
  <match src="string: string [518,524]" dest="string: string [518,524]"/>
  <match src="call_expression [27205,27238]" dest="call_expression [27205,27238]"/>
  <match src="): ) [46022,46023]" dest="): ) [46022,46023]"/>
  <match src="external: external [125,133]" dest="external: external [125,133]"/>
  <match src="): ) [5458,5459]" dest="): ) [5458,5459]"/>
  <match src="variable_declaration_statement [31936,32004]" dest="variable_declaration_statement [31936,32004]"/>
  <match src="member_expression [80604,80639]" dest="member_expression [80611,80646]"/>
  <match src="type_name [3444,3451]" dest="type_name [3444,3451]"/>
  <match src="&quot;: &quot; [43980,43981]" dest="&quot;: &quot; [43980,43981]"/>
  <match src="(: ( [66451,66452]" dest="(: ( [66458,66459]"/>
  <match src="uint256: uint256 [4119,4126]" dest="uint256: uint256 [4119,4126]"/>
  <match src="type_name [4865,4872]" dest="type_name [4865,4872]"/>
  <match src="type_name [45924,45928]" dest="type_name [45924,45928]"/>
  <match src=",: , [62199,62200]" dest=",: , [62206,62207]"/>
  <match src="(: ( [51949,51950]" dest="(: ( [51949,51950]"/>
  <match src="call_expression [63587,63607]" dest="call_expression [63594,63614]"/>
  <match src="}: } [52870,52871]" dest="}: } [52870,52871]"/>
  <match src="uint8: uint8 [63646,63651]" dest="uint8: uint8 [63653,63658]"/>
  <match src="type_name [15525,15532]" dest="type_name [15525,15532]"/>
  <match src="expression_statement [53633,53654]" dest="expression_statement [53633,53654]"/>
  <match src="): ) [13054,13055]" dest="): ) [13054,13055]"/>
  <match src="ternary_expression [69921,69980]" dest="ternary_expression [69928,69987]"/>
  <match src="if: if [43508,43510]" dest="if: if [43508,43510]"/>
  <match src="event_paramater [18932,18956]" dest="event_paramater [18932,18956]"/>
  <match src="type_name [3692,3699]" dest="type_name [3692,3699]"/>
  <match src="using_directive [58004,58028]" dest="using_directive [58004,58028]"/>
  <match src="comment: // ecrecover takes the signature parameters, and the only way to get them [11018,11091]" dest="comment: // ecrecover takes the signature parameters, and the only way to get them [11018,11091]"/>
  <match src="(: ( [67422,67423]" dest="(: ( [67429,67430]"/>
  <match src="(: ( [39134,39135]" dest="(: ( [39134,39135]"/>
  <match src="return: return [11354,11360]" dest="return: return [11354,11360]"/>
  <match src="block_statement [6717,6852]" dest="block_statement [6717,6852]"/>
  <match src="{: { [54156,54157]" dest="{: { [54156,54157]"/>
  <match src="comment: //     uint8 head; Proud [73354,73378]" dest="comment: //     uint8 head; Proud [73361,73385]"/>
  <match src="): ) [74570,74571]" dest="): ) [74577,74578]"/>
  <match src="(: ( [42731,42732]" dest="(: ( [42731,42732]"/>
  <match src="): ) [10458,10459]" dest="): ) [10458,10459]"/>
  <match src="): ) [44229,44230]" dest="): ) [44229,44230]"/>
  <match src="number_literal: 6 [71117,71118]" dest="number_literal: 6 [71124,71125]"/>
  <match src="string_literal [6043,6061]" dest="string_literal [6043,6061]"/>
  <match src="member_expression [56015,56028]" dest="member_expression [56015,56028]"/>
  <match src="type_cast_expression [77444,77465]" dest="type_cast_expression [77451,77472]"/>
  <match src="revert: revert [39586,39592]" dest="revert: revert [39586,39592]"/>
  <match src="identifier: owner [54992,54997]" dest="identifier: owner [54992,54997]"/>
  <match src="string [29314,29357]" dest="string [29314,29357]"/>
  <match src="string [80917,80933]" dest="string [80924,80940]"/>
  <match src="=: = [12369,12370]" dest="=: = [12369,12370]"/>
  <match src="]: ] [65704,65705]" dest="]: ] [65711,65712]"/>
  <match src="): ) [42215,42216]" dest="): ) [42215,42216]"/>
  <match src="expression_statement [51057,51107]" dest="expression_statement [51057,51107]"/>
  <match src="}: } [39685,39686]" dest="}: } [39685,39686]"/>
  <match src="identifier: smithing [81255,81263]" dest="identifier: smithing [81262,81270]"/>
  <match src="identifier: seed [77311,77315]" dest="identifier: seed [77318,77322]"/>
  <match src="assignment_expression [62184,62224]" dest="assignment_expression [62191,62231]"/>
  <match src="identifier: getRandom [4817,4826]" dest="identifier: getRandom [4817,4826]"/>
  <match src="expression_statement [70094,70146]" dest="expression_statement [70101,70153]"/>
  <match src="identifier: _baseURI [43237,43245]" dest="identifier: _baseURI [43237,43245]"/>
  <match src="primitive_type [28172,28177]" dest="primitive_type [28172,28177]"/>
  <match src="type_cast_expression [53694,53717]" dest="type_cast_expression [53694,53717]"/>
  <match src="member_expression [68686,68696]" dest="member_expression [68693,68703]"/>
  <match src="member_expression [64744,64754]" dest="member_expression [64751,64761]"/>
  <match src="bytes: bytes [67376,67381]" dest="bytes: bytes [67383,67388]"/>
  <match src="return_type_definition [76874,76911]" dest="return_type_definition [76881,76918]"/>
  <match src="expression_statement [62184,62225]" dest="expression_statement [62191,62232]"/>
  <match src="(: ( [49996,49997]" dest="(: ( [49996,49997]"/>
  <match src="]: ] [62470,62471]" dest="]: ] [62477,62478]"/>
  <match src="uint256: uint256 [70037,70044]" dest="uint256: uint256 [70044,70051]"/>
  <match src="assignment_expression [64321,64342]" dest="assignment_expression [64328,64349]"/>
  <match src="yul_evm_builtin [10711,10716]" dest="yul_evm_builtin [10711,10716]"/>
  <match src="identifier: index [80486,80491]" dest="identifier: index [80493,80498]"/>
  <match src="visibility [5864,5872]" dest="visibility [5864,5872]"/>
  <match src="primitive_type [847,854]" dest="primitive_type [847,854]"/>
  <match src="variable_declaration_tuple [30961,31000]" dest="variable_declaration_tuple [30961,31000]"/>
  <match src="member_expression [61146,61156]" dest="member_expression [61153,61163]"/>
  <match src="visibility [58685,58691]" dest="visibility [58692,58698]"/>
  <match src="parameter [40590,40600]" dest="parameter [40590,40600]"/>
  <match src=".: . [76928,76929]" dest=".: . [76935,76936]"/>
  <match src="type_name [30976,30981]" dest="type_name [30976,30981]"/>
  <match src="identifier: tokenId [54620,54627]" dest="identifier: tokenId [54620,54627]"/>
  <match src="address: address [45001,45008]" dest="address: address [45001,45008]"/>
  <match src="block_statement [8599,8660]" dest="block_statement [8599,8660]"/>
  <match src="==: == [45333,45335]" dest="==: == [45333,45335]"/>
  <match src="call_expression [44217,44229]" dest="call_expression [44217,44229]"/>
  <match src="}: } [49497,49498]" dest="}: } [49497,49498]"/>
  <match src="identifier: i [65874,65875]" dest="identifier: i [65881,65882]"/>
  <match src="state_variable_declaration [37770,37842]" dest="state_variable_declaration [37770,37842]"/>
  <match src="call_expression [46064,46076]" dest="call_expression [46064,46076]"/>
  <match src="identifier: Commoner [5112,5120]" dest="identifier: Commoner [5112,5120]"/>
  <match src="&quot;: &quot; [63844,63845]" dest="&quot;: &quot; [63851,63852]"/>
  <match src="identifier: _currentIndex [38595,38608]" dest="identifier: _currentIndex [38595,38608]"/>
  <match src="primitive_type [29172,29177]" dest="primitive_type [29172,29177]"/>
  <match src="primitive_type [18909,18916]" dest="primitive_type [18909,18916]"/>
  <match src="{: { [30035,30036]" dest="{: { [30035,30036]"/>
  <match src="primitive_type [148,154]" dest="primitive_type [148,154]"/>
  <match src="visibility [12816,12824]" dest="visibility [12816,12824]"/>
  <match src="function: function [4742,4750]" dest="function: function [4742,4750]"/>
  <match src="identifier: _beforeTokenTransfers [52883,52904]" dest="identifier: _beforeTokenTransfers [52883,52904]"/>
  <match src="primitive_type [42208,42215]" dest="primitive_type [42208,42215]"/>
  <match src="type_name [34627,34633]" dest="type_name [34627,34633]"/>
  <match src="uint8: uint8 [76419,76424]" dest="uint8: uint8 [76426,76431]"/>
  <match src="address: address [15248,15255]" dest="address: address [15248,15255]"/>
  <match src="number_literal: 112 [62805,62808]" dest="number_literal: 112 [62812,62815]"/>
  <match src="): ) [42779,42780]" dest="): ) [42779,42780]"/>
  <match src="identifier: to [45824,45826]" dest="identifier: to [45824,45826]"/>
  <match src=",: , [31766,31767]" dest=",: , [31766,31767]"/>
  <match src="[: [ [40351,40352]" dest="[: [ [40351,40352]"/>
  <match src="public: public [58685,58691]" dest="public: public [58692,58698]"/>
  <match src="primitive_type [3848,3855]" dest="primitive_type [3848,3855]"/>
  <match src="): ) [64668,64669]" dest="): ) [64675,64676]"/>
  <match src=",: , [28133,28134]" dest=",: , [28133,28134]"/>
  <match src="): ) [32985,32986]" dest="): ) [32985,32986]"/>
  <match src="identifier: alchemy [78325,78332]" dest="identifier: alchemy [78332,78339]"/>
  <match src="visibility [3812,3820]" dest="visibility [3812,3820]"/>
  <match src="identifier: whitelistMinted [67203,67218]" dest="identifier: whitelistMinted [67210,67225]"/>
  <match src="expression_statement [77417,77470]" dest="expression_statement [77424,77477]"/>
  <match src="identifier: breedRerollCount [1942,1958]" dest="identifier: breedRerollCount [1942,1958]"/>
  <match src="identifier: _msgSender [45166,45176]" dest="identifier: _msgSender [45166,45176]"/>
  <match src="function_body [74393,75043]" dest="function_body [74400,75050]"/>
  <match src="return_statement [42119,42153]" dest="return_statement [42119,42153]"/>
  <match src="primitive_type [4666,4672]" dest="primitive_type [4666,4672]"/>
  <match src="type_name [57796,57803]" dest="type_name [57796,57803]"/>
  <match src="function_definition [65200,65491]" dest="function_definition [65207,65498]"/>
  <match src="++: ++ [74878,74880]" dest="++: ++ [74885,74887]"/>
  <match src="call_argument [54629,54630]" dest="call_argument [54629,54630]"/>
  <match src="primitive_type [1732,1739]" dest="primitive_type [1732,1739]"/>
  <match src="(: ( [69546,69547]" dest="(: ( [69553,69554]"/>
  <match src="type_cast_expression [68557,68572]" dest="type_cast_expression [68564,68579]"/>
  <match src="call_argument [17365,17375]" dest="call_argument [17365,17375]"/>
  <match src="interface_declaration [18342,22974]" dest="interface_declaration [18342,22974]"/>
  <match src=",: , [18956,18957]" dest=",: , [18956,18957]"/>
  <match src="[: [ [62122,62123]" dest="[: [ [62129,62130]"/>
  <match src="uint256: uint256 [60469,60476]" dest="uint256: uint256 [60476,60483]"/>
  <match src="[: [ [73985,73986]" dest="[: [ [73992,73993]"/>
  <match src="identifier: t [77417,77418]" dest="identifier: t [77424,77425]"/>
  <match src="type_name [80696,80701]" dest="type_name [80703,80708]"/>
  <match src="identifier: _setAux [40567,40574]" dest="identifier: _setAux [40567,40574]"/>
  <match src="call_argument [68530,68540]" dest="call_argument [68537,68547]"/>
  <match src="(: ( [75362,75363]" dest="(: ( [75369,75370]"/>
  <match src=",: , [80694,80695]" dest=",: , [80701,80702]"/>
  <match src="parameter [21325,21335]" dest="parameter [21325,21335]"/>
  <match src="primitive_type [13399,13406]" dest="primitive_type [13399,13406]"/>
  <match src=",: , [64436,64437]" dest=",: , [64443,64444]"/>
  <match src="identifier: to [54945,54947]" dest="identifier: to [54945,54947]"/>
  <match src="}: } [32940,32941]" dest="}: } [32940,32941]"/>
  <match src="type_name [19347,19354]" dest="type_name [19347,19354]"/>
  <match src="type_name [27187,27191]" dest="type_name [27187,27191]"/>
  <match src="[: [ [81202,81203]" dest="[: [ [81209,81210]"/>
  <match src="(: ( [55925,55926]" dest="(: ( [55925,55926]"/>
  <match src="type_name [12798,12805]" dest="type_name [12798,12805]"/>
  <match src="type_cast_expression [48443,48459]" dest="type_cast_expression [48443,48459]"/>
  <match src="storage: storage [51421,51428]" dest="storage: storage [51421,51428]"/>
  <match src="(: ( [52394,52395]" dest="(: ( [52394,52395]"/>
  <match src="identifier: commoners [72073,72082]" dest="identifier: commoners [72080,72089]"/>
  <match src="primitive_type [411,417]" dest="primitive_type [411,417]"/>
  <match src="array_access [71852,71875]" dest="array_access [71859,71882]"/>
  <match src="uint8: uint8 [5132,5137]" dest="uint8: uint8 [5132,5137]"/>
  <match src="=: = [71278,71279]" dest="=: = [71285,71286]"/>
  <match src="type_cast_expression [76948,76969]" dest="type_cast_expression [76955,76976]"/>
  <match src="primitive_type [37778,37785]" dest="primitive_type [37778,37785]"/>
  <match src="number_literal: 6 [62701,62702]" dest="number_literal: 6 [62708,62709]"/>
  <match src="=: = [62549,62550]" dest="=: = [62556,62557]"/>
  <match src="pure: pure [13385,13389]" dest="pure: pure [13385,13389]"/>
  <match src="}: } [3186,3187]" dest="}: } [3186,3187]"/>
  <match src="inheritance_specifier [57987,57994]" dest="inheritance_specifier [57987,57994]"/>
  <match src="(: ( [10720,10721]" dest="(: ( [10720,10721]"/>
  <match src="primitive_type [68851,68856]" dest="primitive_type [68858,68863]"/>
  <match src=".: . [80958,80959]" dest=".: . [80965,80966]"/>
  <match src="comment: /**      * @dev Mints `quantity` tokens and transfers them to `to`.      *      * Requirements:      *      * - `to` cannot be the zero address.      * - `quantity` must be greater than 0.      *      * Emits a {Transfer} event.      */ [47518,47763]" dest="comment: /**      * @dev Mints `quantity` tokens and transfers them to `to`.      *      * Requirements:      *      * - `to` cannot be the zero address.      * - `quantity` must be greater than 0.      *      * Emits a {Transfer} event.      */ [47518,47763]"/>
  <match src="internal: internal [13838,13846]" dest="internal: internal [13838,13846]"/>
  <match src="): ) [3914,3915]" dest="): ) [3914,3915]"/>
  <match src="external: external [21994,22002]" dest="external: external [21994,22002]"/>
  <match src="array_access [73976,73999]" dest="array_access [73983,74006]"/>
  <match src=":: : [79583,79584]" dest=":: : [79590,79591]"/>
  <match src="!=: != [49421,49423]" dest="!=: != [49421,49423]"/>
  <match src=".: . [39374,39375]" dest=".: . [39374,39375]"/>
  <match src="): ) [67398,67399]" dest="): ) [67405,67406]"/>
  <match src="returns: returns [40914,40921]" dest="returns: returns [40914,40921]"/>
  <match src="identifier: to [43512,43514]" dest="identifier: to [43512,43514]"/>
  <match src="returns: returns [30847,30854]" dest="returns: returns [30847,30854]"/>
  <match src="expression_statement [73866,73903]" dest="expression_statement [73873,73910]"/>
  <match src="parameter [778,791]" dest="parameter [778,791]"/>
  <match src="expression_statement [70913,70950]" dest="expression_statement [70920,70957]"/>
  <match src="parameter [4827,4845]" dest="parameter [4827,4845]"/>
  <match src="): ) [79069,79070]" dest="): ) [79076,79077]"/>
  <match src="comment: /**      * @dev Emitted when `tokenId` token is transferred from `from` to `to`.      */ [18378,18468]" dest="comment: /**      * @dev Emitted when `tokenId` token is transferred from `from` to `to`.      */ [18378,18468]"/>
  <match src="{: { [55878,55879]" dest="{: { [55878,55879]"/>
  <match src="parameter [45863,45881]" dest="parameter [45863,45881]"/>
  <match src=",: , [29729,29730]" dest=",: , [29729,29730]"/>
  <match src="&lt;=: &lt;= [68066,68068]" dest="&lt;=: &lt;= [68073,68075]"/>
  <match src="}: } [80593,80594]" dest="}: } [80600,80601]"/>
  <match src="function: function [1455,1463]" dest="function: function [1455,1463]"/>
  <match src="address: address [5630,5637]" dest="address: address [5630,5637]"/>
  <match src="identifier: require [63679,63686]" dest="identifier: require [63686,63693]"/>
  <match src="address: address [66027,66034]" dest="address: address [66034,66041]"/>
  <match src="): ) [47886,47887]" dest="): ) [47886,47887]"/>
  <match src="identifier: require [67949,67956]" dest="identifier: require [67956,67963]"/>
  <match src="identifier: isApprovedOrOwner [45085,45102]" dest="identifier: isApprovedOrOwner [45085,45102]"/>
  <match src="identifier: owner_ [80640,80646]" dest="identifier: owner_ [80647,80653]"/>
  <match src="[: [ [71146,71147]" dest="[: [ [71153,71154]"/>
  <match src="): ) [11409,11410]" dest="): ) [11409,11410]"/>
  <match src="): ) [32433,32434]" dest="): ) [32433,32434]"/>
  <match src="): ) [52858,52859]" dest="): ) [52858,52859]"/>
  <match src="assignment_expression [62991,63022]" dest="assignment_expression [62998,63029]"/>
  <match src="call_expression [61529,61570]" dest="call_expression [61536,61577]"/>
  <match src="number_literal: 2 [62201,62202]" dest="number_literal: 2 [62208,62209]"/>
  <match src="type_name [37126,37133]" dest="type_name [37126,37133]"/>
  <match src="function_definition [21308,21363]" dest="function_definition [21308,21363]"/>
  <match src="uint64: uint64 [36635,36641]" dest="uint64: uint64 [36635,36641]"/>
  <match src="call_argument [15221,15222]" dest="call_argument [15221,15222]"/>
  <match src="identifier: reason [55988,55994]" dest="identifier: reason [55988,55994]"/>
  <match src="parameter [342,355]" dest="parameter [342,355]"/>
  <match src="expression_statement [63306,63340]" dest="expression_statement [63313,63347]"/>
  <match src="comment: /**      * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.      *      * _Available since v4.2._      */ [13124,13282]" dest="comment: /**      * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.      *      * _Available since v4.2._      */ [13124,13282]"/>
  <match src="if: if [48777,48779]" dest="if: if [48777,48779]"/>
  <match src="): ) [37473,37474]" dest="): ) [37473,37474]"/>
  <match src="]: ] [74112,74113]" dest="]: ] [74119,74120]"/>
  <match src="uint256: uint256 [20798,20805]" dest="uint256: uint256 [20798,20805]"/>
  <match src="identifier: retval [55870,55876]" dest="identifier: retval [55870,55876]"/>
  <match src="identifier: commoners [73812,73821]" dest="identifier: commoners [73819,73828]"/>
  <match src="external: external [3708,3716]" dest="external: external [3708,3716]"/>
  <match src="+=: += [50934,50936]" dest="+=: += [50934,50936]"/>
  <match src="indexed: indexed [18940,18947]" dest="indexed: indexed [18940,18947]"/>
  <match src="identifier: quantity_ [66678,66687]" dest="identifier: quantity_ [66685,66694]"/>
  <match src="||: || [46024,46026]" dest="||: || [46024,46026]"/>
  <match src="string_literal [30909,30947]" dest="string_literal [30909,30947]"/>
  <match src=",: , [35850,35851]" dest=",: , [35850,35851]"/>
  <match src="type_name [42099,42106]" dest="type_name [42099,42106]"/>
  <match src="identifier: hash [12256,12260]" dest="identifier: hash [12256,12260]"/>
  <match src="call_argument [7833,7843]" dest="call_argument [7833,7843]"/>
  <match src="identifier: _addressData [39864,39876]" dest="identifier: _addressData [39864,39876]"/>
  <match src="primitive_type [1877,1882]" dest="primitive_type [1877,1882]"/>
  <match src="type_name [51358,51365]" dest="type_name [51358,51365]"/>
  <match src="): ) [61182,61183]" dest="): ) [61189,61190]"/>
  <match src="return_type_definition [39532,39549]" dest="return_type_definition [39532,39549]"/>
  <match src=",: , [62780,62781]" dest=",: , [62787,62788]"/>
  <match src="): ) [13836,13837]" dest="): ) [13836,13837]"/>
  <match src="assignment_expression [6758,6814]" dest="assignment_expression [6758,6814]"/>
  <match src="type_name [58099,58103]" dest="type_name [58099,58103]"/>
  <match src="type_name [12330,12337]" dest="type_name [12330,12337]"/>
  <match src="primitive_type [58886,58891]" dest="primitive_type [58893,58898]"/>
  <match src="call_expression [16279,16337]" dest="call_expression [16279,16337]"/>
  <match src="type_name [37050,37057]" dest="type_name [37050,37057]"/>
  <match src="string_literal [69091,69101]" dest="string_literal [69098,69108]"/>
  <match src="returns: returns [77996,78003]" dest="returns: returns [78003,78010]"/>
  <match src="=: = [64899,64900]" dest="=: = [64906,64907]"/>
  <match src="&gt;=: &gt;= [68181,68183]" dest="&gt;=: &gt;= [68188,68190]"/>
  <match src="visibility [30833,30841]" dest="visibility [30833,30841]"/>
  <match src="block_statement [41239,41306]" dest="block_statement [41239,41306]"/>
  <match src="member_expression [64524,64534]" dest="member_expression [64531,64541]"/>
  <match src="augmented_assignment_expression [6732,6743]" dest="augmented_assignment_expression [6732,6743]"/>
  <match src=",: , [3521,3522]" dest=",: , [3521,3522]"/>
  <match src="type_cast_expression [6793,6812]" dest="type_cast_expression [6793,6812]"/>
  <match src="type_name [4342,4349]" dest="type_name [4342,4349]"/>
  <match src=".: . [69159,69160]" dest=".: . [69166,69167]"/>
  <match src="): ) [29897,29898]" dest="): ) [29897,29898]"/>
  <match src="parameter [30856,30868]" dest="parameter [30856,30868]"/>
  <match src="(: ( [3933,3934]" dest="(: ( [3933,3934]"/>
  <match src="): ) [4639,4640]" dest="): ) [4639,4640]"/>
  <match src="type_name [52460,52474]" dest="type_name [52460,52474]"/>
  <match src=",: , [15328,15329]" dest=",: , [15328,15329]"/>
  <match src="{: { [80359,80360]" dest="{: { [80366,80367]"/>
  <match src="identifier: owner [40034,40039]" dest="identifier: owner [40034,40039]"/>
  <match src="call_argument [46351,46356]" dest="call_argument [46351,46356]"/>
  <match src="identifier: MAX_SUPPLY [65407,65417]" dest="identifier: MAX_SUPPLY [65414,65424]"/>
  <match src="comment: // (e.g. number of whitelist mint slots used). [36839,36885]" dest="comment: // (e.g. number of whitelist mint slots used). [36839,36885]"/>
  <match src="identifier: head [71773,71777]" dest="identifier: head [71780,71784]"/>
  <match src="expression_statement [54418,54473]" dest="expression_statement [54418,54473]"/>
  <match src="function_definition [3887,3949]" dest="function_definition [3887,3949]"/>
  <match src="string_literal [17336,17346]" dest="string_literal [17336,17346]"/>
  <match src="identifier: saleStatus [66760,66770]" dest="identifier: saleStatus [66767,66777]"/>
  <match src="binary_expression [67060,67082]" dest="binary_expression [67067,67089]"/>
  <match src="function_body [63449,63615]" dest="function_body [63456,63622]"/>
  <match src="parenthesized_expression [56060,56104]" dest="parenthesized_expression [56060,56104]"/>
  <match src="primitive_type [3324,3331]" dest="primitive_type [3324,3331]"/>
  <match src="internal: internal [52432,52440]" dest="internal: internal [52432,52440]"/>
  <match src="comment: //     function manuallyAdjustDoge(uint256 id, uint8 head, uint8 breed, uint8 color, uint8 class, uint8 armor, uint8 offhand, uint8 mainhand, uint16 level) external; [2591,2756]" dest="comment: //     function manuallyAdjustDoge(uint256 id, uint8 head, uint8 breed, uint8 color, uint8 class, uint8 armor, uint8 offhand, uint8 mainhand, uint16 level) external; [2591,2756]"/>
  <match src="assignment_expression [73976,74014]" dest="assignment_expression [73983,74021]"/>
  <match src="): ) [64667,64668]" dest="): ) [64674,64675]"/>
  <match src="yul_evm_builtin [13038,13041]" dest="yul_evm_builtin [13038,13041]"/>
  <match src="(: ( [6875,6876]" dest="(: ( [6875,6876]"/>
  <match src="type_name [30771,30776]" dest="type_name [30771,30776]"/>
  <match src=".: . [8482,8483]" dest=".: . [8482,8483]"/>
  <match src="function_definition [38131,38223]" dest="function_definition [38131,38223]"/>
  <match src="primitive_type [39496,39503]" dest="primitive_type [39496,39503]"/>
  <match src="}: } [13115,13116]" dest="}: } [13115,13116]"/>
  <match src="[: [ [72025,72026]" dest="[: [ [72032,72033]"/>
  <match src="call_expression [30435,30508]" dest="call_expression [30435,30508]"/>
  <match src="uint256: uint256 [24547,24554]" dest="uint256: uint256 [24547,24554]"/>
  <match src="returns: returns [3925,3932]" dest="returns: returns [3925,3932]"/>
  <match src="): ) [791,792]" dest="): ) [791,792]"/>
  <match src="identifier: DOGE_SUPPLY [58271,58282]" dest="identifier: DOGE_SUPPLY [58271,58282]"/>
  <match src="visibility [52432,52440]" dest="visibility [52432,52440]"/>
  <match src="(: ( [1569,1570]" dest="(: ( [1569,1570]"/>
  <match src="external: external [64008,64016]" dest="external: external [64015,64023]"/>
  <match src="]: ] [70935,70936]" dest="]: ] [70942,70943]"/>
  <match src="number_literal: 5 [62692,62693]" dest="number_literal: 5 [62699,62700]"/>
  <match src="]: ] [73888,73889]" dest="]: ] [73895,73896]"/>
  <match src="identifier: _currentIndex [69921,69934]" dest="identifier: _currentIndex [69928,69941]"/>
  <match src="type_name [75363,75370]" dest="type_name [75370,75377]"/>
  <match src="function_body [43294,43322]" dest="function_body [43294,43322]"/>
  <match src="): ) [54617,54618]" dest="): ) [54617,54618]"/>
  <match src="type_name [47871,47875]" dest="type_name [47871,47875]"/>
  <match src="type_cast_expression [6782,6813]" dest="type_cast_expression [6782,6813]"/>
  <match src="primitive_type [10993,11000]" dest="primitive_type [10993,11000]"/>
  <match src="identifier: traits [80075,80081]" dest="identifier: traits [80082,80088]"/>
  <match src="array_access [71192,71215]" dest="array_access [71199,71222]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],      * but performing a delegate call.      *      * _Available since v3.4._      */ [31498,31678]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],      * but performing a delegate call.      *      * _Available since v3.4._      */ [31498,31678]"/>
  <match src="function: function [29622,29630]" dest="function: function [29622,29630]"/>
  <match src="[: [ [80903,80904]" dest="[: [ [80910,80911]"/>
  <match src="unary_expression [79754,79763]" dest="unary_expression [79761,79770]"/>
  <match src="primitive_type [81473,81478]" dest="primitive_type [81480,81485]"/>
  <match src="parameter [28119,28133]" dest="parameter [28119,28133]"/>
  <match src=",: , [5847,5848]" dest=",: , [5847,5848]"/>
  <match src="): ) [3536,3537]" dest="): ) [3536,3537]"/>
  <match src="): ) [11261,11262]" dest="): ) [11261,11262]"/>
  <match src="}: } [54506,54507]" dest="}: } [54506,54507]"/>
  <match src="primitive_type [3151,3158]" dest="primitive_type [3151,3158]"/>
  <match src="visibility [64833,64841]" dest="visibility [64840,64848]"/>
  <match src=".: . [73231,73232]" dest=".: . [73238,73239]"/>
  <match src="call_argument [30468,30507]" dest="call_argument [30468,30507]"/>
  <match src="type_name [5768,5773]" dest="type_name [5768,5773]"/>
  <match src="identifier: to [46174,46176]" dest="identifier: to [46174,46176]"/>
  <match src="primitive_type [80326,80333]" dest="primitive_type [80333,80340]"/>
  <match src="identifier: quantity_ [68394,68403]" dest="identifier: quantity_ [68401,68410]"/>
  <match src="identifier: isApprovedForAll [45987,46003]" dest="identifier: isApprovedForAll [45987,46003]"/>
  <match src=",: , [1745,1746]" dest=",: , [1745,1746]"/>
  <match src="state_variable_declaration [59050,59096]" dest="state_variable_declaration [59057,59103]"/>
  <match src="primitive_type [16146,16153]" dest="primitive_type [16146,16153]"/>
  <match src="type_name [13861,13868]" dest="type_name [13861,13868]"/>
  <match src="identifier: sendMessage [3033,3044]" dest="identifier: sendMessage [3033,3044]"/>
  <match src="identifier: burned [53741,53747]" dest="identifier: burned [53741,53747]"/>
  <match src="]: ] [72095,72096]" dest="]: ] [72102,72103]"/>
  <match src="): ) [31094,31095]" dest="): ) [31094,31095]"/>
  <match src="): ) [74382,74383]" dest="): ) [74389,74390]"/>
  <match src=",: , [13868,13869]" dest=",: , [13868,13869]"/>
  <match src="(: ( [46331,46332]" dest="(: ( [46331,46332]"/>
  <match src="return_type_definition [5595,5609]" dest="return_type_definition [5595,5609]"/>
  <match src="): ) [78966,78967]" dest="): ) [78973,78974]"/>
  <match src="number_literal: 0 [56032,56033]" dest="number_literal: 0 [56032,56033]"/>
  <match src="}: } [34756,34757]" dest="}: } [34756,34757]"/>
  <match src=",: , [12386,12387]" dest=",: , [12386,12387]"/>
  <match src="number_literal: 0 [6454,6455]" dest="number_literal: 0 [6454,6455]"/>
  <match src="{: { [63804,63805]" dest="{: { [63811,63812]"/>
  <match src="comment: /**      * @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.      * And also called before burning one token.      *      * startTokenId - the first token id to be transferred      * quantity - the amount to be transferred      *      * Calling conditions:      *      * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be      * transferred to `to`.      * - When `from` is zero, `tokenId` will be minted for `to`.      * - When `to` is zero, `tokenId` will be burned by `from`.      * - `from` and `to` are never both zero.      */ [56275,56909]" dest="comment: /**      * @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.      * And also called before burning one token.      *      * startTokenId - the first token id to be transferred      * quantity - the amount to be transferred      *      * Calling conditions:      *      * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be      * transferred to `to`.      * - When `from` is zero, `tokenId` will be minted for `to`.      * - When `to` is zero, `tokenId` will be burned by `from`.      * - `from` and `to` are never both zero.      */ [56275,56909]"/>
  <match src="function_definition [42484,42588]" dest="function_definition [42484,42588]"/>
  <match src=",: , [54606,54607]" dest=",: , [54606,54607]"/>
  <match src="=: = [72962,72963]" dest="=: = [72969,72970]"/>
  <match src="identifier: coolBlocks [74620,74630]" dest="identifier: coolBlocks [74627,74637]"/>
  <match src="identifier: vrf [61918,61921]" dest="identifier: vrf [61925,61928]"/>
  <match src="binary_expression [52736,52772]" dest="binary_expression [52736,52772]"/>
  <match src="): ) [23874,23875]" dest="): ) [23874,23875]"/>
  <match src="member_expression [48590,48630]" dest="member_expression [48590,48630]"/>
  <match src="view: view [42509,42513]" dest="view: view [42509,42513]"/>
  <match src=",: , [62404,62405]" dest=",: , [62411,62412]"/>
  <match src="block_statement [54352,54492]" dest="block_statement [54352,54492]"/>
  <match src="view: view [24573,24577]" dest="view: view [24573,24577]"/>
  <match src="visibility [68884,68892]" dest="visibility [68891,68899]"/>
  <match src="{: { [53315,53316]" dest="{: { [53315,53316]"/>
  <match src="call_expression [67033,67046]" dest="call_expression [67040,67053]"/>
  <match src="identifier: owner [40583,40588]" dest="identifier: owner [40583,40588]"/>
  <match src="revert_statement [45348,45382]" dest="revert_statement [45348,45382]"/>
  <match src="parenthesized_expression [74969,74982]" dest="parenthesized_expression [74976,74989]"/>
  <match src=",: , [62864,62865]" dest=",: , [62871,62872]"/>
  <match src="true [69297,69301]" dest="true [69304,69308]"/>
  <match src="address: address [11362,11369]" dest="address: address [11362,11369]"/>
  <match src="identifier: signature [11245,11254]" dest="identifier: signature [11245,11254]"/>
  <match src="{: { [48400,48401]" dest="{: { [48400,48401]"/>
  <match src="identifier: topCommoner_ [72779,72791]" dest="identifier: topCommoner_ [72786,72798]"/>
  <match src="comment: //     uint8 accessory; Rudy's Eye Patch [70646,70686]" dest="comment: //     uint8 accessory; Rudy's Eye Patch [70653,70693]"/>
  <match src="call_argument [27257,27264]" dest="call_argument [27257,27264]"/>
  <match src="for: for [35921,35924]" dest="for: for [35921,35924]"/>
  <match src="uint16: uint16 [74366,74372]" dest="uint16: uint16 [74373,74379]"/>
  <match src="identifier: trait [76542,76547]" dest="identifier: trait [76549,76554]"/>
  <match src="[: [ [62394,62395]" dest="[: [ [62401,62402]"/>
  <match src="bool: bool [34685,34689]" dest="bool: bool [34685,34689]"/>
  <match src="address: address [23773,23780]" dest="address: address [23773,23780]"/>
  <match src="expression_statement [62503,62528]" dest="expression_statement [62510,62535]"/>
  <match src="!: ! [46094,46095]" dest="!: ! [46094,46095]"/>
  <match src="member_expression [33812,33820]" dest="member_expression [33812,33820]"/>
  <match src="(: ( [65866,65867]" dest="(: ( [65873,65874]"/>
  <match src="identifier: commoners [79128,79137]" dest="identifier: commoners [79135,79144]"/>
  <match src="call_argument [64606,64619]" dest="call_argument [64613,64626]"/>
  <match src="): ) [17376,17377]" dest="): ) [17376,17377]"/>
  <match src="array_access [62253,62264]" dest="array_access [62260,62271]"/>
  <match src="expression_statement [69473,69594]" dest="expression_statement [69480,69601]"/>
  <match src="visibility [63787,63795]" dest="visibility [63794,63802]"/>
  <match src="identifier: require [64282,64289]" dest="identifier: require [64289,64296]"/>
  <match src="number_literal: 2 [62198,62199]" dest="number_literal: 2 [62205,62206]"/>
  <match src="): ) [70335,70336]" dest="): ) [70342,70343]"/>
  <match src="{: { [32655,32656]" dest="{: { [32655,32656]"/>
  <match src="address: address [63928,63935]" dest="address: address [63935,63942]"/>
  <match src="type_name [78852,78859]" dest="type_name [78859,78866]"/>
  <match src="(: ( [48872,48873]" dest="(: ( [48872,48873]"/>
  <match src="): ) [2061,2062]" dest="): ) [2061,2062]"/>
  <match src="]: ] [70236,70237]" dest="]: ] [70243,70244]"/>
  <match src="{: { [57072,57073]" dest="{: { [57072,57073]"/>
  <match src="{: { [13408,13409]" dest="{: { [13408,13409]"/>
  <match src="array_access [72930,72953]" dest="array_access [72937,72960]"/>
  <match src="bool: bool [22241,22245]" dest="bool: bool [22241,22245]"/>
  <match src="call_expression [16800,16826]" dest="call_expression [16800,16826]"/>
  <match src="identifier: to [48428,48430]" dest="identifier: to [48428,48430]"/>
  <match src="internal: internal [12286,12294]" dest="internal: internal [12286,12294]"/>
  <match src="uint256: uint256 [39642,39649]" dest="uint256: uint256 [39642,39649]"/>
  <match src="comment: //     uint8 breed; Corgi [72419,72444]" dest="comment: //     uint8 breed; Corgi [72426,72451]"/>
  <match src="identifier: seed [77727,77731]" dest="identifier: seed [77734,77738]"/>
  <match src="view: view [4686,4690]" dest="view: view [4686,4690]"/>
  <match src="): ) [72305,72306]" dest="): ) [72312,72313]"/>
  <match src="!=: != [14965,14967]" dest="!=: != [14965,14967]"/>
  <match src="+: + [66974,66975]" dest="+: + [66981,66982]"/>
  <match src=",: , [68555,68556]" dest=",: , [68562,68563]"/>
  <match src="visibility [37582,37589]" dest="visibility [37582,37589]"/>
  <match src="(: ( [68356,68357]" dest="(: ( [68363,68364]"/>
  <match src="identifier: target [29671,29677]" dest="identifier: target [29671,29677]"/>
  <match src="event_definition [18888,18973]" dest="event_definition [18888,18973]"/>
  <match src="inline_array_expression [62688,62729]" dest="inline_array_expression [62695,62736]"/>
  <match src="type_name [58197,58204]" dest="type_name [58197,58204]"/>
  <match src="assignment_expression [77585,77634]" dest="assignment_expression [77592,77641]"/>
  <match src="number_literal: 0 [64621,64622]" dest="number_literal: 0 [64628,64629]"/>
  <match src="(: ( [46074,46075]" dest="(: ( [46074,46075]"/>
  <match src="address: address [22200,22207]" dest="address: address [22200,22207]"/>
  <match src="type_name [18730,18737]" dest="type_name [18730,18737]"/>
  <match src="number_literal: 16 [77155,77157]" dest="number_literal: 16 [77162,77164]"/>
  <match src="identifier: noCheaters [60946,60956]" dest="identifier: noCheaters [60953,60963]"/>
  <match src=",: , [80706,80707]" dest=",: , [80713,80714]"/>
  <match src="type_name [22241,22245]" dest="type_name [22241,22245]"/>
  <match src="call_expression [31044,31095]" dest="call_expression [31044,31095]"/>
  <match src="contract_body [24765,33023]" dest="contract_body [24765,33023]"/>
  <match src="{: { [17767,17768]" dest="{: { [17767,17768]"/>
  <match src="array_access [51440,51464]" dest="array_access [51440,51464]"/>
  <match src="primitive_type [4935,4942]" dest="primitive_type [4935,4942]"/>
  <match src="type_name [5700,5707]" dest="type_name [5700,5707]"/>
  <match src="for_statement [7680,7815]" dest="for_statement [7680,7815]"/>
  <match src="identifier: _symbol [42573,42580]" dest="identifier: _symbol [42573,42580]"/>
  <match src=":: : [79270,79271]" dest=":: : [79277,79278]"/>
  <match src="[: [ [66345,66346]" dest="[: [ [66352,66353]"/>
  <match src="visibility [67789,67797]" dest="visibility [67796,67804]"/>
  <match src="comment: /**      * @dev Returns the owner of the `tokenId` token.      *      * Requirements:      *      * - `tokenId` must exist.      */ [19147,19284]" dest="comment: /**      * @dev Returns the owner of the `tokenId` token.      *      * Requirements:      *      * - `tokenId` must exist.      */ [19147,19284]"/>
  <match src="}: } [18205,18206]" dest="}: } [18205,18206]"/>
  <match src="comment: // Invariant: [41328,41341]" dest="comment: // Invariant: [41328,41341]"/>
  <match src="function_definition [52380,54791]" dest="function_definition [52380,54791]"/>
  <match src="[: [ [68369,68370]" dest="[: [ [68376,68377]"/>
  <match src="uint8: uint8 [80736,80741]" dest="uint8: uint8 [80743,80748]"/>
  <match src="parameter [5555,5565]" dest="parameter [5555,5565]"/>
  <match src="primitive_type [44669,44676]" dest="primitive_type [44669,44676]"/>
  <match src="): ) [10846,10847]" dest="): ) [10846,10847]"/>
  <match src="yul_assignment [12935,13015]" dest="yul_assignment [12935,13015]"/>
  <match src="(: ( [63784,63785]" dest="(: ( [63791,63792]"/>
  <match src="): ) [3288,3289]" dest="): ) [3288,3289]"/>
  <match src="comment: // keep the following code for future use, current version using different seed, so no need for now [75539,75638]" dest="comment: // keep the following code for future use, current version using different seed, so no need for now [75546,75645]"/>
  <match src="visibility [76378,76386]" dest="visibility [76385,76393]"/>
  <match src="uint256: uint256 [58297,58304]" dest="uint256: uint256 [58297,58304]"/>
  <match src="]: ] [67608,67609]" dest="]: ] [67615,67616]"/>
  <match src="identifier: rarities [62937,62945]" dest="identifier: rarities [62944,62952]"/>
  <match src="++: ++ [65901,65903]" dest="++: ++ [65908,65910]"/>
  <match src="}: } [49575,49576]" dest="}: } [49575,49576]"/>
  <match src="(: ( [66199,66200]" dest="(: ( [66206,66207]"/>
  <match src="function: function [45757,45765]" dest="function: function [45757,45765]"/>
  <match src="identifier: topCommoner_ [73931,73943]" dest="identifier: topCommoner_ [73938,73950]"/>
  <match src="yul_path [32891,32906]" dest="yul_path [32891,32906]"/>
  <match src=".: . [69282,69283]" dest=".: . [69289,69290]"/>
  <match src="(: ( [74847,74848]" dest="(: ( [74854,74855]"/>
  <match src="call_argument [13100,13101]" dest="call_argument [13100,13101]"/>
  <match src="new_expression [6670,6679]" dest="new_expression [6670,6679]"/>
  <match src=",: , [62798,62799]" dest=",: , [62805,62806]"/>
  <match src="(: ( [44797,44798]" dest="(: ( [44797,44798]"/>
  <match src="expression_statement [69334,69459]" dest="expression_statement [69341,69466]"/>
  <match src="]: ] [63338,63339]" dest="]: ] [63345,63346]"/>
  <match src="type_name [54937,54944]" dest="type_name [54937,54944]"/>
  <match src="identifier: _currentIndex [41055,41068]" dest="identifier: _currentIndex [41055,41068]"/>
  <match src="uint64: uint64 [51083,51089]" dest="uint64: uint64 [51083,51089]"/>
  <match src="uint8: uint8 [63992,63997]" dest="uint8: uint8 [63999,64004]"/>
  <match src="event_paramater [18730,18753]" dest="event_paramater [18730,18753]"/>
  <match src="number_literal: 0 [71886,71887]" dest="number_literal: 0 [71893,71894]"/>
  <match src=",: , [65237,65238]" dest=",: , [65244,65245]"/>
  <match src="returns: returns [2363,2370]" dest="returns: returns [2363,2370]"/>
  <match src="identifier: functionCall [28204,28216]" dest="identifier: functionCall [28204,28216]"/>
  <match src="=: = [62265,62266]" dest="=: = [62272,62273]"/>
  <match src="binary_expression [64999,65018]" dest="binary_expression [65006,65025]"/>
  <match src="view: view [764,768]" dest="view: view [764,768]"/>
  <match src="number_literal: 1 [62219,62220]" dest="number_literal: 1 [62226,62227]"/>
  <match src="array_access [73760,73783]" dest="array_access [73767,73790]"/>
  <match src="]: ] [72038,72039]" dest="]: ] [72045,72046]"/>
  <match src="comment: /*///////////////////////////////////////////////////////////////                     Admin methods     //////////////////////////////////////////////////////////////*/ [61264,61434]" dest="comment: /*///////////////////////////////////////////////////////////////                     Admin methods     //////////////////////////////////////////////////////////////*/ [61271,61441]"/>
  <match src="primitive_type [70037,70044]" dest="primitive_type [70044,70051]"/>
  <match src="comment: /**      * @dev This is equivalent to _burn(tokenId, false)      */ [51987,52056]" dest="comment: /**      * @dev This is equivalent to _burn(tokenId, false)      */ [51987,52056]"/>
  <match src="type_cast_expression [54608,54618]" dest="type_cast_expression [54608,54618]"/>
  <match src="emit_statement [74264,74303]" dest="emit_statement [74271,74310]"/>
  <match src="parameter [65091,65107]" dest="parameter [65098,65114]"/>
  <match src="function_body [31843,32080]" dest="function_body [31843,32080]"/>
  <match src="identifier: errorMessage [30111,30123]" dest="identifier: errorMessage [30111,30123]"/>
  <match src="if: if [8912,8914]" dest="if: if [8912,8914]"/>
  <match src="binary_expression [69052,69075]" dest="binary_expression [69059,69082]"/>
  <match src="expression_statement [81193,81231]" dest="expression_statement [81200,81238]"/>
  <match src="type_name [7060,7066]" dest="type_name [7060,7066]"/>
  <match src="call_expression [45639,45678]" dest="call_expression [45639,45678]"/>
  <match src="(: ( [15321,15322]" dest="(: ( [15321,15322]"/>
  <match src=",: , [5710,5711]" dest=",: , [5710,5711]"/>
  <match src="string [17336,17346]" dest="string [17336,17346]"/>
  <match src="if: if [46277,46279]" dest="if: if [46277,46279]"/>
  <match src="assembly_statement [61032,61091]" dest="assembly_statement [61039,61098]"/>
  <match src="[: [ [62128,62129]" dest="[: [ [62135,62136]"/>
  <match src="(: ( [44492,44493]" dest="(: ( [44492,44493]"/>
  <match src="function_definition [78694,78820]" dest="function_definition [78701,78827]"/>
  <match src="returns: returns [25808,25815]" dest="returns: returns [25808,25815]"/>
  <match src="(: ( [28171,28172]" dest="(: ( [28171,28172]"/>
  <match src="visibility [3998,4006]" dest="visibility [3998,4006]"/>
  <match src=",: , [68213,68214]" dest=",: , [68220,68221]"/>
  <match src="parameter [78729,78741]" dest="parameter [78736,78748]"/>
  <match src="identifier: TokenOwnership [36103,36117]" dest="identifier: TokenOwnership [36103,36117]"/>
  <match src="identifier: ERC20Like [60497,60506]" dest="identifier: ERC20Like [60504,60513]"/>
  <match src="identifier: i [72299,72300]" dest="identifier: i [72306,72307]"/>
  <match src="memory: memory [30777,30783]" dest="memory: memory [30777,30783]"/>
  <match src="&amp;: &amp; [7771,7772]" dest="&amp;: &amp; [7771,7772]"/>
  <match src="return: return [40332,40338]" dest="return: return [40332,40338]"/>
  <match src="type_name [31829,31834]" dest="type_name [31829,31834]"/>
  <match src="parameter [15626,15633]" dest="parameter [15626,15633]"/>
  <match src="update_expression [41648,41654]" dest="update_expression [41648,41654]"/>
  <match src="primitive_type [67376,67381]" dest="primitive_type [67383,67388]"/>
  <match src="type_name [1661,1668]" dest="type_name [1661,1668]"/>
  <match src="comment: // struct to store each token's traits [5061,5099]" dest="comment: // struct to store each token's traits [5061,5099]"/>
  <match src="identifier: aliases [63124,63131]" dest="identifier: aliases [63131,63138]"/>
  <match src="primitive_type [79725,79731]" dest="primitive_type [79732,79738]"/>
  <match src="): ) [31922,31923]" dest="): ) [31922,31923]"/>
  <match src="identifier: require [66938,66945]" dest="identifier: require [66945,66952]"/>
  <match src="memory: memory [475,481]" dest="memory: memory [475,481]"/>
  <match src="[: [ [67600,67601]" dest="[: [ [67607,67608]"/>
  <match src="identifier: Transfer [54535,54543]" dest="identifier: Transfer [54535,54543]"/>
  <match src="type_name [58886,58891]" dest="type_name [58893,58898]"/>
  <match src="identifier: _afterTokenTransfers [51929,51949]" dest="identifier: _afterTokenTransfers [51929,51949]"/>
  <match src="[: [ [63068,63069]" dest="[: [ [63075,63076]"/>
  <match src="identifier: msg [66883,66886]" dest="identifier: msg [66890,66893]"/>
  <match src=",: , [62658,62659]" dest=",: , [62665,62666]"/>
  <match src="array_access [55024,55048]" dest="array_access [55024,55048]"/>
  <match src="type_name [468,474]" dest="type_name [468,474]"/>
  <match src="(: ( [1414,1415]" dest="(: ( [1414,1415]"/>
  <match src="number_literal: 11 [73739,73741]" dest="number_literal: 11 [73746,73748]"/>
  <match src="]: ] [7662,7663]" dest="]: ] [7662,7663]"/>
  <match src="yul_hex_number: 0x40 [11256,11260]" dest="yul_hex_number: 0x40 [11256,11260]"/>
  <match src="uint256: uint256 [42052,42059]" dest="uint256: uint256 [42052,42059]"/>
  <match src=",: , [14893,14894]" dest=",: , [14893,14894]"/>
  <match src="call_argument [52911,52921]" dest="call_argument [52911,52921]"/>
  <match src="=: = [62600,62601]" dest="=: = [62607,62608]"/>
  <match src="if: if [51479,51481]" dest="if: if [51479,51481]"/>
  <match src="identifier: ownerOf [42044,42051]" dest="identifier: ownerOf [42044,42051]"/>
  <match src="call_argument [29917,29935]" dest="call_argument [29917,29935]"/>
  <match src="parameter [21337,21352]" dest="parameter [21337,21352]"/>
  <match src="(: ( [58800,58801]" dest="(: ( [58807,58808]"/>
  <match src="type_name [28135,28140]" dest="type_name [28135,28140]"/>
  <match src="variable_declaration_statement [54002,54036]" dest="variable_declaration_statement [54002,54036]"/>
  <match src="=: = [54082,54083]" dest="=: = [54082,54083]"/>
  <match src="identifier: tokenId [42947,42954]" dest="identifier: tokenId [42947,42954]"/>
  <match src="type_name [2323,2330]" dest="type_name [2323,2330]"/>
  <match src="}: } [9027,9028]" dest="}: } [9027,9028]"/>
  <match src="identifier: startTimestamp [54427,54441]" dest="identifier: startTimestamp [54427,54441]"/>
  <match src="assignment_expression [51024,51042]" dest="assignment_expression [51024,51042]"/>
  <match src="call_expression [68987,69033]" dest="call_expression [68994,69040]"/>
  <match src="string [65777,65798]" dest="string [65784,65805]"/>
  <match src="(: ( [1813,1814]" dest="(: ( [1813,1814]"/>
  <match src="number_literal: 0 [42910,42911]" dest="number_literal: 0 [42910,42911]"/>
  <match src=",: , [55083,55084]" dest=",: , [55083,55084]"/>
  <match src="parameter [64399,64415]" dest="parameter [64406,64422]"/>
  <match src="expression_statement [74484,74515]" dest="expression_statement [74491,74522]"/>
  <match src="): ) [24383,24384]" dest="): ) [24383,24384]"/>
  <match src="(: ( [43531,43532]" dest="(: ( [43531,43532]"/>
  <match src="): ) [46423,46424]" dest="): ) [46423,46424]"/>
  <match src="(: ( [16765,16766]" dest="(: ( [16765,16766]"/>
  <match src="identifier: mint [3364,3368]" dest="identifier: mint [3364,3368]"/>
  <match src="parameter [4629,4639]" dest="parameter [4629,4639]"/>
  <match src="identifier: owner [5638,5643]" dest="identifier: owner [5638,5643]"/>
  <match src="state_variable_declaration [37661,37713]" dest="state_variable_declaration [37661,37713]"/>
  <match src="(: ( [14882,14883]" dest="(: ( [14882,14883]"/>
  <match src="primitive_type [1905,1910]" dest="primitive_type [1905,1910]"/>
  <match src="): ) [77551,77552]" dest="): ) [77558,77559]"/>
  <match src="): ) [66311,66312]" dest="): ) [66318,66319]"/>
  <match src="): ) [15037,15038]" dest="): ) [15037,15038]"/>
  <match src="(: ( [40025,40026]" dest="(: ( [40025,40026]"/>
  <match src="internal: internal [31811,31819]" dest="internal: internal [31811,31819]"/>
  <match src="uint16: uint16 [77110,77116]" dest="uint16: uint16 [77117,77123]"/>
  <match src="while_statement [6560,6638]" dest="while_statement [6560,6638]"/>
  <match src="binary_expression [43576,43597]" dest="binary_expression [43576,43597]"/>
  <match src="&quot;: &quot; [69091,69092]" dest="&quot;: &quot; [69098,69099]"/>
  <match src="(: ( [77274,77275]" dest="(: ( [77281,77282]"/>
  <match src="identifier: accessory [81173,81182]" dest="identifier: accessory [81180,81189]"/>
  <match src="primitive_type [47842,47847]" dest="primitive_type [47842,47847]"/>
  <match src="identifier: operator [81432,81440]" dest="identifier: operator [81439,81447]"/>
  <match src="expression_statement [52999,53035]" dest="expression_statement [52999,53035]"/>
  <match src="}: } [4562,4563]" dest="}: } [4562,4563]"/>
  <match src="for: for [66195,66198]" dest="for: for [66202,66205]"/>
  <match src="parameter [4968,4976]" dest="parameter [4968,4976]"/>
  <match src="binary_expression [26052,26075]" dest="binary_expression [26052,26075]"/>
  <match src="function: function [80668,80676]" dest="function: function [80675,80683]"/>
  <match src="identifier: palette [5181,5188]" dest="identifier: palette [5181,5188]"/>
  <match src="function: function [6168,6176]" dest="function: function [6168,6176]"/>
  <match src=".: . [78177,78178]" dest=".: . [78184,78185]"/>
  <match src="assignment_expression [61730,61751]" dest="assignment_expression [61737,61758]"/>
  <match src="binary_expression [71306,71312]" dest="binary_expression [71313,71319]"/>
  <match src="primitive_type [44657,44664]" dest="primitive_type [44657,44664]"/>
  <match src="primitive_type [4699,4706]" dest="primitive_type [4699,4706]"/>
  <match src="type_name [12839,12846]" dest="type_name [12839,12846]"/>
  <match src="primitive_type [5604,5608]" dest="primitive_type [5604,5608]"/>
  <match src="(: ( [43245,43246]" dest="(: ( [43245,43246]"/>
  <match src="revert_statement [8972,9017]" dest="revert_statement [8972,9017]"/>
  <match src="): ) [78386,78387]" dest="): ) [78393,78394]"/>
  <match src="): ) [15289,15290]" dest="): ) [15289,15290]"/>
  <match src=".: . [78206,78207]" dest=".: . [78213,78214]"/>
  <match src="identifier: _mintCommoners [65453,65467]" dest="identifier: _mintCommoners [65460,65474]"/>
  <match src="primitive_type [4096,4102]" dest="primitive_type [4096,4102]"/>
  <match src="identifier: i [74286,74287]" dest="identifier: i [74293,74294]"/>
  <match src="(: ( [7904,7905]" dest="(: ( [7904,7905]"/>
  <match src="identifier: supportsInterface [39375,39392]" dest="identifier: supportsInterface [39375,39392]"/>
  <match src="call_argument [29293,29299]" dest="call_argument [29293,29299]"/>
  <match src=".: . [68174,68175]" dest=".: . [68181,68182]"/>
  <match src="number_literal: 10 [74830,74832]" dest="number_literal: 10 [74837,74839]"/>
  <match src="array_access [7654,7663]" dest="array_access [7654,7663]"/>
  <match src="assignment_expression [74090,74126]" dest="assignment_expression [74097,74133]"/>
  <match src="call_argument [39582,39583]" dest="call_argument [39582,39583]"/>
  <match src="type_name [4365,4372]" dest="type_name [4365,4372]"/>
  <match src="visibility [42331,42337]" dest="visibility [42331,42337]"/>
  <match src="yul_function_call [10717,10737]" dest="yul_function_call [10717,10737]"/>
  <match src="state_mutability [7046,7050]" dest="state_mutability [7046,7050]"/>
  <match src="revert: revert [32863,32869]" dest="revert: revert [32863,32869]"/>
  <match src="type_name [39135,39141]" dest="type_name [39135,39141]"/>
  <match src="true: true [69297,69301]" dest="true: true [69304,69308]"/>
  <match src="array_access [7628,7637]" dest="array_access [7628,7637]"/>
  <match src="returns: returns [5013,5020]" dest="returns: returns [5013,5020]"/>
  <match src="(: ( [4826,4827]" dest="(: ( [4826,4827]"/>
  <match src="number_literal: 107 [62800,62803]" dest="number_literal: 107 [62807,62810]"/>
  <match src="(: ( [42539,42540]" dest="(: ( [42539,42540]"/>
  <match src="function_definition [24367,24423]" dest="function_definition [24367,24423]"/>
  <match src="mload: mload [32824,32829]" dest="mload: mload [32824,32829]"/>
  <match src="primitive_type [59645,59650]" dest="primitive_type [59652,59657]"/>
  <match src=",: , [62715,62716]" dest=",: , [62722,62723]"/>
  <match src="]: ] [73834,73835]" dest="]: ] [73841,73842]"/>
  <match src="{: { [45913,45914]" dest="{: { [45913,45914]"/>
  <match src="&lt;: &lt; [65883,65884]" dest="&lt;: &lt; [65890,65891]"/>
  <match src="number_literal: 3 [62720,62721]" dest="number_literal: 3 [62727,62728]"/>
  <match src="identifier: commoners [72239,72248]" dest="identifier: commoners [72246,72255]"/>
  <match src="variable_declaration [45080,45102]" dest="variable_declaration [45080,45102]"/>
  <match src=".: . [51813,51814]" dest=".: . [51813,51814]"/>
  <match src="array_access [65928,65950]" dest="array_access [65935,65957]"/>
  <match src="]: ] [62902,62903]" dest="]: ] [62909,62910]"/>
  <match src="primitive_type [13358,13365]" dest="primitive_type [13358,13365]"/>
  <match src="uint256: uint256 [45837,45844]" dest="uint256: uint256 [45837,45844]"/>
  <match src="identifier: from [50876,50880]" dest="identifier: from [50876,50880]"/>
  <match src="=: = [72217,72218]" dest="=: = [72224,72225]"/>
  <match src="primitive_type [4413,4420]" dest="primitive_type [4413,4420]"/>
  <match src="if: if [79967,79969]" dest="if: if [79974,79976]"/>
  <match src="type_name [5783,5788]" dest="type_name [5783,5788]"/>
  <match src="(: ( [3272,3273]" dest="(: ( [3272,3273]"/>
  <match src="identifier: isApprovedOrOwner [52795,52812]" dest="identifier: isApprovedOrOwner [52795,52812]"/>
  <match src="function_definition [77931,78395]" dest="function_definition [77938,78402]"/>
  <match src="type_name [74366,74372]" dest="type_name [74373,74379]"/>
  <match src="function_definition [29622,30132]" dest="function_definition [29622,30132]"/>
  <match src="uint16: uint16 [4071,4077]" dest="uint16: uint16 [4071,4077]"/>
  <match src="primitive_type [56956,56963]" dest="primitive_type [56956,56963]"/>
  <match src="identifier: require [27100,27107]" dest="identifier: require [27100,27107]"/>
  <match src="comment: /**     * uses A.J. Walker's Alias algorithm for O(1) rarity table lookup     * ensuring O(1) instead of O(n) reduces mint cost by more than 50%     * probability &amp; alias tables are generated off-chain beforehand     * @param seed portion of the 256 bit seed to remove trait correlation     * @param traitType the trait type to select a trait for      * @return the ID of the randomly selected trait     */ [75908,76321]" dest="comment: /**     * uses A.J. Walker's Alias algorithm for O(1) rarity table lookup     * ensuring O(1) instead of O(n) reduces mint cost by more than 50%     * probability &amp; alias tables are generated off-chain beforehand     * @param seed portion of the 256 bit seed to remove trait correlation     * @param traitType the trait type to select a trait for      * @return the ID of the randomly selected trait     */ [75915,76328]"/>
  <match src="identifier: topCommoner_ [71916,71928]" dest="identifier: topCommoner_ [71923,71935]"/>
  <match src="revert_statement [8850,8895]" dest="revert_statement [8850,8895]"/>
  <match src="assembly_statement [32769,32926]" dest="assembly_statement [32769,32926]"/>
  <match src="public: public [59191,59197]" dest="public: public [59198,59204]"/>
  <match src="array_access [65940,65949]" dest="array_access [65947,65956]"/>
  <match src="visibility [3460,3468]" dest="visibility [3460,3468]"/>
  <match src="expression_statement [70859,70895]" dest="expression_statement [70866,70902]"/>
  <match src="array_access [66327,66349]" dest="array_access [66334,66356]"/>
  <match src=",: , [55659,55660]" dest=",: , [55659,55660]"/>
  <match src="identifier: isValidSignature [67345,67361]" dest="identifier: isValidSignature [67352,67368]"/>
  <match src="call_argument [49529,49539]" dest="call_argument [49529,49539]"/>
  <match src="parameter [34685,34689]" dest="parameter [34685,34689]"/>
  <match src="type_name [1851,1856]" dest="type_name [1851,1856]"/>
  <match src="++: ++ [6599,6601]" dest="++: ++ [6599,6601]"/>
  <match src="identifier: to [55797,55799]" dest="identifier: to [55797,55799]"/>
  <match src="): ) [10786,10787]" dest="): ) [10786,10787]"/>
  <match src="assignment_expression [80945,80970]" dest="assignment_expression [80952,80977]"/>
  <match src="number_literal: 0 [72910,72911]" dest="number_literal: 0 [72917,72918]"/>
  <match src="]: ] [74221,74222]" dest="]: ] [74228,74229]"/>
  <match src=",: , [62653,62654]" dest=",: , [62660,62661]"/>
  <match src="interface: interface [3554,3563]" dest="interface: interface [3554,3563]"/>
  <match src="{: { [39838,39839]" dest="{: { [39838,39839]"/>
  <match src="type_name [61481,61488]" dest="type_name [61488,61495]"/>
  <match src="expression_statement [48415,48460]" dest="expression_statement [48415,48460]"/>
  <match src="): ) [48522,48523]" dest="): ) [48522,48523]"/>
  <match src="function_definition [4592,4641]" dest="function_definition [4592,4641]"/>
  <match src="(: ( [48802,48803]" dest="(: ( [48802,48803]"/>
  <match src="visibility [45045,45051]" dest="visibility [45045,45051]"/>
  <match src="identifier: sender [44851,44857]" dest="identifier: sender [44851,44857]"/>
  <match src="identifier: sender [68534,68540]" dest="identifier: sender [68541,68547]"/>
  <match src="): ) [3706,3707]" dest="): ) [3706,3707]"/>
  <match src="inline_array_expression [63137,63149]" dest="inline_array_expression [63144,63156]"/>
  <match src="return_type_definition [28630,28652]" dest="return_type_definition [28630,28652]"/>
  <match src="address: address [46180,46187]" dest="address: address [46180,46187]"/>
  <match src="primitive_type [10523,10528]" dest="primitive_type [10523,10528]"/>
  <match src="(: ( [13506,13507]" dest="(: ( [13506,13507]"/>
  <match src="=: = [63002,63003]" dest="=: = [63009,63010]"/>
  <match src="number_literal: 1 [70334,70335]" dest="number_literal: 1 [70341,70342]"/>
  <match src="member_expression [61537,61547]" dest="member_expression [61544,61554]"/>
  <match src="parameter [31724,31738]" dest="parameter [31724,31738]"/>
  <match src="member_expression [53633,53646]" dest="member_expression [53633,53646]"/>
  <match src="parameter [4761,4773]" dest="parameter [4761,4773]"/>
  <match src="array_access [76565,76583]" dest="array_access [76572,76590]"/>
  <match src="return_type_definition [33665,33682]" dest="return_type_definition [33665,33682]"/>
  <match src="identifier: commoners [81285,81294]" dest="identifier: commoners [81292,81301]"/>
  <match src="expression_statement [62588,62665]" dest="expression_statement [62595,62672]"/>
  <match src="comment: // error ApprovalQueryForNonexistentToken(); [35336,35380]" dest="comment: // error ApprovalQueryForNonexistentToken(); [35336,35380]"/>
  <match src=",: , [46909,46910]" dest=",: , [46909,46910]"/>
  <match src="expression_statement [73099,73136]" dest="expression_statement [73106,73143]"/>
  <match src="if: if [52578,52580]" dest="if: if [52578,52580]"/>
  <match src="call_argument [29314,29357]" dest="call_argument [29314,29357]"/>
  <match src="identifier: buffer [7628,7634]" dest="identifier: buffer [7628,7634]"/>
  <match src="variable_declaration [13439,13457]" dest="variable_declaration [13439,13457]"/>
  <match src="return_statement [42228,42241]" dest="return_statement [42228,42241]"/>
  <match src="identifier: selectTraits [75456,75468]" dest="identifier: selectTraits [75463,75475]"/>
  <match src="revert_statement [41924,41966]" dest="revert_statement [41924,41966]"/>
  <match src="array_access [72073,72096]" dest="array_access [72080,72103]"/>
  <match src=".: . [70882,70883]" dest=".: . [70889,70890]"/>
  <match src="binary_expression [70109,70145]" dest="binary_expression [70116,70152]"/>
  <match src="parameter [40575,40588]" dest="parameter [40575,40588]"/>
  <match src="state_mutability [43257,43261]" dest="state_mutability [43257,43261]"/>
  <match src="inline_array_expression [62267,62307]" dest="inline_array_expression [62274,62314]"/>
  <match src="parameter [3904,3914]" dest="parameter [3904,3914]"/>
  <match src="): ) [25821,25822]" dest="): ) [25821,25822]"/>
  <match src="]: ] [7776,7777]" dest="]: ] [7776,7777]"/>
  <match src="[: [ [73163,73164]" dest="[: [ [73170,73171]"/>
  <match src="member_expression [78294,78304]" dest="member_expression [78301,78311]"/>
  <match src="storage: storage [54065,54072]" dest="storage: storage [54065,54072]"/>
  <match src="(: ( [43488,43489]" dest="(: ( [43488,43489]"/>
  <match src="identifier: offhand [1123,1130]" dest="identifier: offhand [1123,1130]"/>
  <match src="): ) [67499,67500]" dest="): ) [67506,67507]"/>
  <match src="state_variable_declaration [59186,59202]" dest="state_variable_declaration [59193,59209]"/>
  <match src="identifier: _transfer [80541,80550]" dest="identifier: _transfer [80548,80557]"/>
  <match src="identifier: amount [3391,3397]" dest="identifier: amount [3391,3397]"/>
  <match src="number_literal: 10 [6809,6811]" dest="number_literal: 10 [6809,6811]"/>
  <match src="primitive_type [40590,40596]" dest="primitive_type [40590,40596]"/>
  <match src="(: ( [23893,23894]" dest="(: ( [23893,23894]"/>
  <match src="type_name [69996,70001]" dest="type_name [70003,70008]"/>
  <match src="internal: internal [40900,40908]" dest="internal: internal [40900,40908]"/>
  <match src="address: address [15147,15154]" dest="address: address [15147,15154]"/>
  <match src="call_expression [79772,79807]" dest="call_expression [79779,79814]"/>
  <match src="{: { [42555,42556]" dest="{: { [42555,42556]"/>
  <match src="=: = [7750,7751]" dest="=: = [7750,7751]"/>
  <match src="}: } [49112,49113]" dest="}: } [49112,49113]"/>
  <match src="): ) [31385,31386]" dest="): ) [31385,31386]"/>
  <match src="member_expression [79323,79349]" dest="member_expression [79330,79356]"/>
  <match src="): ) [8893,8894]" dest="): ) [8893,8894]"/>
  <match src="memory: memory [79732,79738]" dest="memory: memory [79739,79745]"/>
  <match src=",: , [1958,1959]" dest=",: , [1958,1959]"/>
  <match src=".: . [53706,53707]" dest=".: . [53706,53707]"/>
  <match src="function_body [76408,76598]" dest="function_body [76415,76605]"/>
  <match src="}: } [7919,7920]" dest="}: } [7919,7920]"/>
  <match src="return: return [44581,44587]" dest="return: return [44581,44587]"/>
  <match src="identifier: value [29208,29213]" dest="identifier: value [29208,29213]"/>
  <match src="parameter [5712,5722]" dest="parameter [5712,5722]"/>
  <match src="call_argument [65818,65835]" dest="call_argument [65825,65842]"/>
  <match src="variable_declaration_statement [74802,74833]" dest="variable_declaration_statement [74809,74840]"/>
  <match src="): ) [50466,50467]" dest="): ) [50466,50467]"/>
  <match src="call_argument [76955,76968]" dest="call_argument [76962,76975]"/>
  <match src="return_statement [10876,10909]" dest="return_statement [10876,10909]"/>
  <match src="identifier: msg [65280,65283]" dest="identifier: msg [65287,65290]"/>
  <match src="string [28231,28263]" dest="string [28231,28263]"/>
  <match src="parameter [1935,1958]" dest="parameter [1935,1958]"/>
  <match src="address: address [67512,67519]" dest="address: address [67519,67526]"/>
  <match src="&amp;&amp;: &amp;&amp; [46297,46299]" dest="&amp;&amp;: &amp;&amp; [46297,46299]"/>
  <match src="primitive_type [13783,13788]" dest="primitive_type [13783,13788]"/>
  <match src="): ) [70020,70021]" dest="): ) [70027,70028]"/>
  <match src="primitive_type [61497,61504]" dest="primitive_type [61504,61511]"/>
  <match src=",: , [5781,5782]" dest=",: , [5781,5782]"/>
  <match src="identifier: topCommoner_ [73718,73730]" dest="identifier: topCommoner_ [73725,73737]"/>
  <match src="identifier: block [74638,74643]" dest="identifier: block [74645,74650]"/>
  <match src="identifier: head [80966,80970]" dest="identifier: head [80973,80977]"/>
  <match src=",: , [80557,80558]" dest=",: , [80564,80565]"/>
  <match src="return_type_definition [333,356]" dest="return_type_definition [333,356]"/>
  <match src="revert_statement [46192,46226]" dest="revert_statement [46192,46226]"/>
  <match src="': ' [46974,46975]" dest="': ' [46974,46975]"/>
  <match src="number_literal: 132 [62655,62658]" dest="number_literal: 132 [62662,62665]"/>
  <match src="identifier: quantity_ [69066,69075]" dest="identifier: quantity_ [69073,69082]"/>
  <match src="identifier: admin [63837,63842]" dest="identifier: admin [63844,63849]"/>
  <match src="uint256: uint256 [6504,6511]" dest="uint256: uint256 [6504,6511]"/>
  <match src="(: ( [79753,79754]" dest="(: ( [79760,79761]"/>
  <match src="unary_expression [46094,46112]" dest="unary_expression [46094,46112]"/>
  <match src="parameter [16712,16719]" dest="parameter [16712,16719]"/>
  <match src="identifier: setSaleStatus [63632,63645]" dest="identifier: setSaleStatus [63639,63652]"/>
  <match src="identifier: tokenId [21551,21558]" dest="identifier: tokenId [21551,21558]"/>
  <match src="number_literal: 1 [38214,38215]" dest="number_literal: 1 [38214,38215]"/>
  <match src="return_type_definition [78883,78918]" dest="return_type_definition [78890,78925]"/>
  <match src="]: ] [59655,59656]" dest="]: ] [59662,59663]"/>
  <match src="memory: memory [30806,30812]" dest="memory: memory [30806,30812]"/>
  <match src="binary_expression [72299,72305]" dest="binary_expression [72306,72312]"/>
  <match src="identifier: alchemy [79526,79533]" dest="identifier: alchemy [79533,79540]"/>
  <match src="identifier: msg [67249,67252]" dest="identifier: msg [67256,67259]"/>
  <match src="variable_declaration_tuple [29982,30021]" dest="variable_declaration_tuple [29982,30021]"/>
  <match src="type_name [50955,50969]" dest="type_name [50955,50969]"/>
  <match src=",: , [62808,62809]" dest=",: , [62815,62816]"/>
  <match src="primitive_type [77691,77697]" dest="primitive_type [77698,77704]"/>
  <match src="): ) [80098,80099]" dest="): ) [80105,80106]"/>
  <match src="parameter [17214,17237]" dest="parameter [17214,17237]"/>
  <match src="comment: // before an ownership that does not have an address and is not burned. [41459,41530]" dest="comment: // before an ownership that does not have an address and is not burned. [41459,41530]"/>
  <match src="call_argument [80917,80933]" dest="call_argument [80924,80940]"/>
  <match src="member_expression [79585,79611]" dest="member_expression [79592,79618]"/>
  <match src="ether: ether [68208,68213]" dest="ether: ether [68215,68220]"/>
  <match src="string [45675,45677]" dest="string [45675,45677]"/>
  <match src="type_name [76883,76901]" dest="type_name [76890,76908]"/>
  <match src="call_argument [48129,48137]" dest="call_argument [48129,48137]"/>
  <match src="call_expression [7307,7333]" dest="call_expression [7307,7333]"/>
  <match src="member_expression [79272,79299]" dest="member_expression [79279,79306]"/>
  <match src="(: ( [45960,45961]" dest="(: ( [45960,45961]"/>
  <match src="*: * [68200,68201]" dest="*: * [68207,68208]"/>
  <match src="++: ++ [70018,70020]" dest="++: ++ [70025,70027]"/>
  <match src="type_name [5752,5757]" dest="type_name [5752,5757]"/>
  <match src="number_literal: 0 [73901,73902]" dest="number_literal: 0 [73908,73909]"/>
  <match src="call_expression [74586,74605]" dest="call_expression [74593,74612]"/>
  <match src="visibility [44166,44172]" dest="visibility [44166,44172]"/>
  <match src="comment: //     uint8 breed; Beagle [71440,71466]" dest="comment: //     uint8 breed; Beagle [71447,71473]"/>
  <match src=".: . [64039,64040]" dest=".: . [64046,64047]"/>
  <match src="identifier: breed [5730,5735]" dest="identifier: breed [5730,5735]"/>
  <match src="call_expression [46238,46266]" dest="call_expression [46238,46266]"/>
  <match src="comment: // Mapping from owner to operator approvals [37721,37764]" dest="comment: // Mapping from owner to operator approvals [37721,37764]"/>
  <match src="&quot;: &quot; [69217,69218]" dest="&quot;: &quot; [69224,69225]"/>
  <match src=",: , [77548,77549]" dest=",: , [77555,77556]"/>
  <match src="if: if [10926,10928]" dest="if: if [10926,10928]"/>
  <match src="address: address [55647,55654]" dest="address: address [55647,55654]"/>
  <match src="return_type_definition [13852,13883]" dest="return_type_definition [13852,13883]"/>
  <match src="else: else [8661,8665]" dest="else: else [8661,8665]"/>
  <match src=",: , [20148,20149]" dest=",: , [20148,20149]"/>
  <match src="=: = [30022,30023]" dest="=: = [30022,30023]"/>
  <match src="address: address [78729,78736]" dest="address: address [78736,78743]"/>
  <match src="identifier: tokenId [45030,45037]" dest="identifier: tokenId [45030,45037]"/>
  <match src="string [61740,61751]" dest="string [61747,61758]"/>
  <match src="pure: pure [12825,12829]" dest="pure: pure [12825,12829]"/>
  <match src="call_expression [46281,46296]" dest="call_expression [46281,46296]"/>
  <match src="uint256: uint256 [52395,52402]" dest="uint256: uint256 [52395,52402]"/>
  <match src="identifier: _symbol [61730,61737]" dest="identifier: _symbol [61737,61744]"/>
  <match src="if: if [46090,46092]" dest="if: if [46090,46092]"/>
  <match src="identifier: this [68550,68554]" dest="identifier: this [68557,68561]"/>
  <match src="&quot;: &quot; [80405,80406]" dest="&quot;: &quot; [80412,80413]"/>
  <match src=".: . [78352,78353]" dest=".: . [78359,78360]"/>
  <match src="identifier: msg [33812,33815]" dest="identifier: msg [33812,33815]"/>
  <match src="identifier: svgBreedHead [660,672]" dest="identifier: svgBreedHead [660,672]"/>
  <match src="type_name [52412,52416]" dest="type_name [52412,52416]"/>
  <match src="identifier: validateOwner [5541,5554]" dest="identifier: validateOwner [5541,5554]"/>
  <match src="expression_statement [53668,53718]" dest="expression_statement [53668,53718]"/>
  <match src="update_expression [54758,54772]" dest="update_expression [54758,54772]"/>
  <match src="call_expression [16269,16338]" dest="call_expression [16269,16338]"/>
  <match src="identifier: rarities [76453,76461]" dest="identifier: rarities [76460,76468]"/>
  <match src="=: = [61954,61955]" dest="=: = [61961,61962]"/>
  <match src="identifier: operator [44614,44622]" dest="identifier: operator [44614,44622]"/>
  <match src="variable_declaration_tuple [15646,15685]" dest="variable_declaration_tuple [15646,15685]"/>
  <match src="identifier: tokenId [43856,43863]" dest="identifier: tokenId [43856,43863]"/>
  <match src="virtual: virtual [52441,52448]" dest="virtual: virtual [52441,52448]"/>
  <match src="number_literal: 4 [74125,74126]" dest="number_literal: 4 [74132,74133]"/>
  <match src="variable_declaration [67512,67527]" dest="variable_declaration [67519,67534]"/>
  <match src="external: external [65109,65117]" dest="external: external [65116,65124]"/>
  <match src="function: function [1305,1313]" dest="function: function [1305,1313]"/>
  <match src="identifier: mintActive_ [64404,64415]" dest="identifier: mintActive_ [64411,64422]"/>
  <match src="primitive_type [1117,1122]" dest="primitive_type [1117,1122]"/>
  <match src=".: . [51739,51740]" dest=".: . [51739,51740]"/>
  <match src="function_definition [76327,76598]" dest="function_definition [76334,76605]"/>
  <match src="identifier: structToHash [77940,77952]" dest="identifier: structToHash [77947,77959]"/>
  <match src="identifier: curr [41705,41709]" dest="identifier: curr [41705,41709]"/>
  <match src="identifier: supportsInterface [34609,34626]" dest="identifier: supportsInterface [34609,34626]"/>
  <match src="string [80449,80461]" dest="string [80456,80468]"/>
  <match src="identifier: head [70780,70784]" dest="identifier: head [70787,70791]"/>
  <match src="identifier: recovered [13531,13540]" dest="identifier: recovered [13531,13540]"/>
  <match src="): ) [64763,64764]" dest="): ) [64770,64771]"/>
  <match src="): ) [32002,32003]" dest="): ) [32002,32003]"/>
  <match src="primitive_type [15548,15553]" dest="primitive_type [15548,15553]"/>
  <match src="comment: //     uint8 clothes; Coat of the Strategist [73527,73571]" dest="comment: //     uint8 clothes; Coat of the Strategist [73534,73578]"/>
  <match src="identifier: name [24246,24250]" dest="identifier: name [24246,24250]"/>
  <match src="member_expression [74033,74067]" dest="member_expression [74040,74074]"/>
  <match src="=&gt;: =&gt; [59906,59908]" dest="=&gt;: =&gt; [59913,59915]"/>
  <match src=".: . [73731,73732]" dest=".: . [73738,73739]"/>
  <match src="type_name [32367,32372]" dest="type_name [32367,32372]"/>
  <match src="return: return [38207,38213]" dest="return: return [38207,38213]"/>
  <match src="): ) [74604,74605]" dest="): ) [74611,74612]"/>
  <match src=".: . [81340,81341]" dest=".: . [81347,81348]"/>
  <match src="identifier: startTokenId [74470,74482]" dest="identifier: startTokenId [74477,74489]"/>
  <match src="visibility [1771,1779]" dest="visibility [1771,1779]"/>
  <match src="{: { [49935,49936]" dest="{: { [49935,49936]"/>
  <match src="identifier: seed [76355,76359]" dest="identifier: seed [76362,76366]"/>
  <match src="(: ( [4967,4968]" dest="(: ( [4967,4968]"/>
  <match src="type_name [18958,18962]" dest="type_name [18958,18962]"/>
  <match src="{: { [27219,27220]" dest="{: { [27219,27220]"/>
  <match src="call_expression [77597,77634]" dest="call_expression [77604,77641]"/>
  <match src="number_literal: 1 [62326,62327]" dest="number_literal: 1 [62333,62334]"/>
  <match src="identifier: doges_ [66273,66279]" dest="identifier: doges_ [66280,66286]"/>
  <match src="interface_declaration [2246,2381]" dest="interface_declaration [2246,2381]"/>
  <match src="(: ( [43847,43848]" dest="(: ( [43847,43848]"/>
  <match src="[: [ [1602,1603]" dest="[: [ [1602,1603]"/>
  <match src="comment: /**  * @dev Collection of functions related to the address type  */ [24678,24747]" dest="comment: /**  * @dev Collection of functions related to the address type  */ [24678,24747]"/>
  <match src="parameter [16109,16121]" dest="parameter [16109,16121]"/>
  <match src="binary_expression [76955,76968]" dest="binary_expression [76962,76975]"/>
  <match src="comment: // error OwnerQueryForNonexistentToken(); [35548,35589]" dest="comment: // error OwnerQueryForNonexistentToken(); [35548,35589]"/>
  <match src="update_expression [74516,74521]" dest="update_expression [74523,74528]"/>
  <match src="}: } [68619,68620]" dest="}: } [68626,68627]"/>
  <match src="comment: // [0.5, 0.3, 0.15, 0.05] [63215,63240]" dest="comment: // [0.5, 0.3, 0.15, 0.05] [63222,63247]"/>
  <match src="parameter [64958,64969]" dest="parameter [64965,64976]"/>
  <match src="type_name [5645,5652]" dest="type_name [5645,5652]"/>
  <match src="): ) [67427,67428]" dest="): ) [67434,67435]"/>
  <match src="(: ( [33777,33778]" dest="(: ( [33777,33778]"/>
  <match src="(: ( [43278,43279]" dest="(: ( [43278,43279]"/>
  <match src="type_name [66672,66677]" dest="type_name [66679,66684]"/>
  <match src="string_literal [44238,44257]" dest="string_literal [44238,44257]"/>
  <match src="-: - [38624,38625]" dest="-: - [38624,38625]"/>
  <match src="function_definition [23737,23902]" dest="function_definition [23737,23902]"/>
  <match src="member_expression [79892,79904]" dest="member_expression [79899,79911]"/>
  <match src="identifier: seed [77146,77150]" dest="identifier: seed [77153,77157]"/>
  <match src="string_literal [68318,68333]" dest="string_literal [68325,68340]"/>
  <match src="primitive_type [6674,6679]" dest="primitive_type [6674,6679]"/>
  <match src="(: ( [3596,3597]" dest="(: ( [3596,3597]"/>
  <match src="type_name [36741,36747]" dest="type_name [36741,36747]"/>
  <match src="uint88: uint88 [4315,4321]" dest="uint88: uint88 [4315,4321]"/>
  <match src="type_name [17239,17246]" dest="type_name [17239,17246]"/>
  <match src="[: [ [78996,78997]" dest="[: [ [79003,79004]"/>
  <match src="state_mutability [42076,42080]" dest="state_mutability [42076,42080]"/>
  <match src="primitive_type [19307,19314]" dest="primitive_type [19307,19314]"/>
  <match src="primitive_type [7490,7497]" dest="primitive_type [7490,7497]"/>
  <match src="function: function [65678,65686]" dest="function: function [65685,65693]"/>
  <match src="unary_expression [46300,46357]" dest="unary_expression [46300,46357]"/>
  <match src="identifier: approved [44156,44164]" dest="identifier: approved [44156,44164]"/>
  <match src="&quot;: &quot; [66992,66993]" dest="&quot;: &quot; [66999,67000]"/>
  <match src="binary_expression [77035,77048]" dest="binary_expression [77042,77055]"/>
  <match src="identifier: i [66214,66215]" dest="identifier: i [66221,66222]"/>
  <match src="(: ( [15173,15174]" dest="(: ( [15173,15174]"/>
  <match src="(: ( [49407,49408]" dest="(: ( [49407,49408]"/>
  <match src="identifier: Commoner [77963,77971]" dest="identifier: Commoner [77970,77978]"/>
  <match src="call_argument [69547,69556]" dest="call_argument [69554,69563]"/>
  <match src=",: , [80646,80647]" dest=",: , [80653,80654]"/>
  <match src="returns: returns [42531,42538]" dest="returns: returns [42531,42538]"/>
  <match src="number_literal: 1 [65774,65775]" dest="number_literal: 1 [65781,65782]"/>
  <match src="primitive_type [13801,13808]" dest="primitive_type [13801,13808]"/>
  <match src="address: address [3934,3941]" dest="address: address [3934,3941]"/>
  <match src="string [65837,65850]" dest="string [65844,65857]"/>
  <match src="function: function [63767,63775]" dest="function: function [63774,63782]"/>
  <match src="if_statement [79967,80058]" dest="if_statement [79974,80065]"/>
  <match src="visibility [22218,22226]" dest="visibility [22218,22226]"/>
  <match src="function_definition [43384,43761]" dest="function_definition [43384,43761]"/>
  <match src=",: , [13045,13046]" dest=",: , [13045,13046]"/>
  <match src="]: ] [63148,63149]" dest="]: ] [63155,63156]"/>
  <match src="address: address [52532,52539]" dest="address: address [52532,52539]"/>
  <match src="array_access [64555,64577]" dest="array_access [64562,64584]"/>
  <match src="(: ( [76400,76401]" dest="(: ( [76407,76408]"/>
  <match src="{: { [32472,32473]" dest="{: { [32472,32473]"/>
  <match src="(: ( [48920,48921]" dest="(: ( [48920,48921]"/>
  <match src=".: . [54383,54384]" dest=".: . [54383,54384]"/>
  <match src="array_access [81019,81032]" dest="array_access [81026,81039]"/>
  <match src="(: ( [65467,65468]" dest="(: ( [65474,65475]"/>
  <match src="&amp;&amp;: &amp;&amp; [46806,46808]" dest="&amp;&amp;: &amp;&amp; [46806,46808]"/>
  <match src="comment: // Compiler will pack this into a single 256bit word. [36389,36442]" dest="comment: // Compiler will pack this into a single 256bit word. [36389,36442]"/>
  <match src="primitive_type [1921,1927]" dest="primitive_type [1921,1927]"/>
  <match src="address: address [54984,54991]" dest="address: address [54984,54991]"/>
  <match src="member_expression [15007,15037]" dest="member_expression [15007,15037]"/>
  <match src="visibility [47888,47896]" dest="visibility [47888,47896]"/>
  <match src="comment: // Mapping from token ID to ownership details [37266,37311]" dest="comment: // Mapping from token ID to ownership details [37266,37311]"/>
  <match src="): ) [3397,3398]" dest="): ) [3397,3398]"/>
  <match src="return: return [28664,28670]" dest="return: return [28664,28670]"/>
  <match src="private: private [55743,55750]" dest="private: private [55743,55750]"/>
  <match src="array_access [79272,79290]" dest="array_access [79279,79297]"/>
  <match src="uint8: uint8 [5248,5253]" dest="uint8: uint8 [5248,5253]"/>
  <match src="visibility [1703,1711]" dest="visibility [1703,1711]"/>
  <match src="block_statement [65905,66124]" dest="block_statement [65912,66131]"/>
  <match src="identifier: traits [64892,64898]" dest="identifier: traits [64899,64905]"/>
  <match src="(: ( [38153,38154]" dest="(: ( [38153,38154]"/>
  <match src="{: { [10954,10955]" dest="{: { [10954,10955]"/>
  <match src="uint8: uint8 [80752,80757]" dest="uint8: uint8 [80759,80764]"/>
  <match src="visibility [64716,64724]" dest="visibility [64723,64731]"/>
  <match src="identifier: DOGE_SUPPLY [68080,68091]" dest="identifier: DOGE_SUPPLY [68087,68098]"/>
  <match src="(: ( [44365,44366]" dest="(: ( [44365,44366]"/>
  <match src="identifier: success [27192,27199]" dest="identifier: success [27192,27199]"/>
  <match src="identifier: isContract [29917,29927]" dest="identifier: isContract [29917,29927]"/>
  <match src="): ) [65482,65483]" dest="): ) [65489,65490]"/>
  <match src="(: ( [80875,80876]" dest="(: ( [80882,80883]"/>
  <match src="identifier: _operatorApprovals [37823,37841]" dest="identifier: _operatorApprovals [37823,37841]"/>
  <match src="inline_array_expression [62197,62224]" dest="inline_array_expression [62204,62231]"/>
  <match src="if_statement [50018,50089]" dest="if_statement [50018,50089]"/>
  <match src="identifier: breed [73784,73789]" dest="identifier: breed [73791,73796]"/>
  <match src="call_argument [31434,31438]" dest="call_argument [31434,31438]"/>
  <match src="): ) [66111,66112]" dest="): ) [66118,66119]"/>
  <match src="==: == [61601,61603]" dest="==: == [61608,61610]"/>
  <match src=".: . [64184,64185]" dest=".: . [64191,64192]"/>
  <match src="}: } [42979,42980]" dest="}: } [42979,42980]"/>
  <match src="uint256: uint256 [47908,47915]" dest="uint256: uint256 [47908,47915]"/>
  <match src="uint8: uint8 [58886,58891]" dest="uint8: uint8 [58893,58898]"/>
  <match src="type_name [44508,44515]" dest="type_name [44508,44515]"/>
  <match src="identifier: recovered [12445,12454]" dest="identifier: recovered [12445,12454]"/>
  <match src="update_expression [65900,65903]" dest="update_expression [65907,65910]"/>
  <match src="string [69011,69032]" dest="string [69018,69039]"/>
  <match src="view: view [79702,79706]" dest="view: view [79709,79713]"/>
  <match src="number_literal: 0 [48961,48962]" dest="number_literal: 0 [48961,48962]"/>
  <match src="inline_array_expression [62602,62664]" dest="inline_array_expression [62609,62671]"/>
  <match src="[: [ [39662,39663]" dest="[: [ [39662,39663]"/>
  <match src="number_literal: 9 [71780,71781]" dest="number_literal: 9 [71787,71788]"/>
  <match src="view: view [24262,24266]" dest="view: view [24262,24266]"/>
  <match src="string_literal [27266,27326]" dest="string_literal [27266,27326]"/>
  <match src="memory: memory [77972,77978]" dest="memory: memory [77979,77985]"/>
  <match src="}: } [6851,6852]" dest="}: } [6851,6852]"/>
  <match src="identifier: owner [855,860]" dest="identifier: owner [855,860]"/>
  <match src="return_statement [39227,39406]" dest="return_statement [39227,39406]"/>
  <match src="return_statement [55893,55956]" dest="return_statement [55893,55956]"/>
  <match src="binary_expression [41021,41068]" dest="binary_expression [41021,41068]"/>
  <match src="=: = [71830,71831]" dest="=: = [71837,71838]"/>
  <match src="memory: memory [66695,66701]" dest="memory: memory [66702,66708]"/>
  <match src="expression_statement [73708,73742]" dest="expression_statement [73715,73749]"/>
  <match src="return_type_definition [563,586]" dest="return_type_definition [563,586]"/>
  <match src="string_literal [69200,69218]" dest="string_literal [69207,69225]"/>
  <match src="identifier: quantity_ [67900,67909]" dest="identifier: quantity_ [67907,67916]"/>
  <match src="identifier: status_ [63652,63659]" dest="identifier: status_ [63659,63666]"/>
  <match src="revert: revert [49020,49026]" dest="revert: revert [49020,49026]"/>
  <match src="number_literal: 0 [74860,74861]" dest="number_literal: 0 [74867,74868]"/>
  <match src="): ) [77464,77465]" dest="): ) [77471,77472]"/>
  <match src="visibility [18174,18182]" dest="visibility [18174,18182]"/>
  <match src="identifier: _ownerships [48540,48551]" dest="identifier: _ownerships [48540,48551]"/>
  <match src="primitive_type [1685,1691]" dest="primitive_type [1685,1691]"/>
  <match src="primitive_type [76948,76954]" dest="primitive_type [76955,76961]"/>
  <match src="): ) [41619,41620]" dest="): ) [41619,41620]"/>
  <match src="function_definition [46880,46984]" dest="function_definition [46880,46984]"/>
  <match src="{: { [55766,55767]" dest="{: { [55766,55767]"/>
  <match src=".: . [64864,64865]" dest=".: . [64871,64872]"/>
  <match src="function_definition [4950,5027]" dest="function_definition [4950,5027]"/>
  <match src="call_struct_argument [79474,79511]" dest="call_struct_argument [79481,79518]"/>
  <match src="function: function [42484,42492]" dest="function: function [42484,42492]"/>
  <match src="primitive_type [18958,18962]" dest="primitive_type [18958,18962]"/>
  <match src="revert: revert [42781,42787]" dest="revert: revert [42781,42787]"/>
  <match src="primitive_type [5849,5854]" dest="primitive_type [5849,5854]"/>
  <match src="(: ( [64289,64290]" dest="(: ( [64296,64297]"/>
  <match src="parenthesized_expression [46380,46424]" dest="parenthesized_expression [46380,46424]"/>
  <match src="assignment_expression [71906,71942]" dest="assignment_expression [71913,71949]"/>
  <match src=".: . [79290,79291]" dest=".: . [79297,79298]"/>
  <match src="expression_statement [77311,77323]" dest="expression_statement [77318,77330]"/>
  <match src="type_cast_expression [15213,15223]" dest="type_cast_expression [15213,15223]"/>
  <match src="=: = [60983,60984]" dest="=: = [60990,60991]"/>
  <match src="memory: memory [5452,5458]" dest="memory: memory [5452,5458]"/>
  <match src="parameter [38187,38194]" dest="parameter [38187,38194]"/>
  <match src="comment: /**      * @dev Returns an Ethereum Signed Message, created from `s`. This      * produces hash corresponding to the one signed with the      * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]      * JSON-RPC method as part of EIP-191.      *      * See {recover}.      */ [16354,16635]" dest="comment: /**      * @dev Returns an Ethereum Signed Message, created from `s`. This      * produces hash corresponding to the one signed with the      * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]      * JSON-RPC method as part of EIP-191.      *      * See {recover}.      */ [16354,16635]"/>
  <match src="): ) [39274,39275]" dest="): ) [39274,39275]"/>
  <match src="primitive_type [21583,21590]" dest="primitive_type [21583,21590]"/>
  <match src="visibility [59916,59922]" dest="visibility [59923,59929]"/>
  <match src="primitive_type [35893,35900]" dest="primitive_type [35893,35900]"/>
  <match src="{: { [36467,36468]" dest="{: { [36467,36468]"/>
  <match src="function_body [65741,66475]" dest="function_body [65748,66482]"/>
  <match src="string [30909,30947]" dest="string [30909,30947]"/>
  <match src="identifier: r [10483,10484]" dest="identifier: r [10483,10484]"/>
  <match src="): ) [75439,75440]" dest="): ) [75446,75447]"/>
  <match src="(: ( [45105,45106]" dest="(: ( [45105,45106]"/>
  <match src="primitive_type [31937,31941]" dest="primitive_type [31937,31941]"/>
  <match src="primitive_type [74944,74948]" dest="primitive_type [74951,74955]"/>
  <match src="address: address [48865,48872]" dest="address: address [48865,48872]"/>
  <match src="identifier: mint [3592,3596]" dest="identifier: mint [3592,3596]"/>
  <match src="primitive_type [63646,63651]" dest="primitive_type [63653,63658]"/>
  <match src="address: address [18681,18688]" dest="address: address [18681,18688]"/>
  <match src="address: address [39574,39581]" dest="address: address [39574,39581]"/>
  <match src="parenthesized_expression [46198,46225]" dest="parenthesized_expression [46198,46225]"/>
  <match src="event_paramater [18958,18971]" dest="event_paramater [18958,18971]"/>
  <match src="unary_expression [41163,41180]" dest="unary_expression [41163,41180]"/>
  <match src="yul_assignment [61056,61080]" dest="yul_assignment [61063,61087]"/>
  <match src="identifier: auth [58161,58165]" dest="identifier: auth [58161,58165]"/>
  <match src="else: else [69232,69236]" dest="else: else [69239,69243]"/>
  <match src="visibility [7521,7529]" dest="visibility [7521,7529]"/>
  <match src=",: , [54618,54619]" dest=",: , [54618,54619]"/>
  <match src="(: ( [64820,64821]" dest="(: ( [64827,64828]"/>
  <match src="bytes: bytes [33778,33783]" dest="bytes: bytes [33778,33783]"/>
  <match src=",: , [1919,1920]" dest=",: , [1919,1920]"/>
  <match src="block_statement [10954,11333]" dest="block_statement [10954,11333]"/>
  <match src="): ) [32840,32841]" dest="): ) [32840,32841]"/>
  <match src="visibility [46929,46937]" dest="visibility [46929,46937]"/>
  <match src="number_literal: 142 [62952,62955]" dest="number_literal: 142 [62959,62962]"/>
  <match src="type_name [59801,59828]" dest="type_name [59808,59835]"/>
  <match src="assignment_expression [73921,73957]" dest="assignment_expression [73928,73964]"/>
  <match src="(: ( [18908,18909]" dest="(: ( [18908,18909]"/>
  <match src="public: public [59166,59172]" dest="public: public [59173,59179]"/>
  <match src="external: external [65721,65729]" dest="external: external [65728,65736]"/>
  <match src=":=: := [13031,13033]" dest=":=: := [13031,13033]"/>
  <match src="primitive_type [64958,64962]" dest="primitive_type [64965,64969]"/>
  <match src="identifier: value [7030,7035]" dest="identifier: value [7030,7035]"/>
  <match src="&quot;: &quot; [69317,69318]" dest="&quot;: &quot; [69324,69325]"/>
  <match src="identifier: breed [71824,71829]" dest="identifier: breed [71831,71836]"/>
  <match src="memory: memory [1580,1586]" dest="memory: memory [1580,1586]"/>
  <match src="return_statement [40084,40133]" dest="return_statement [40084,40133]"/>
  <match src="function_body [43446,43761]" dest="function_body [43446,43761]"/>
  <match src="identifier: claimMint [65687,65696]" dest="identifier: claimMint [65694,65703]"/>
  <match src="&quot;: &quot; [45313,45314]" dest="&quot;: &quot; [45313,45314]"/>
  <match src="type_name [1905,1910]" dest="type_name [1905,1910]"/>
  <match src="==: == [66771,66773]" dest="==: == [66778,66780]"/>
  <match src="): ) [13457,13458]" dest="): ) [13457,13458]"/>
  <match src="function_body [42747,42980]" dest="function_body [42747,42980]"/>
  <match src="{: { [42217,42218]" dest="{: { [42217,42218]"/>
  <match src="identifier: _ownerships [48590,48601]" dest="identifier: _ownerships [48590,48601]"/>
  <match src="]: ] [73176,73177]" dest="]: ] [73183,73184]"/>
  <match src="struct_member [5274,5291]" dest="struct_member [5274,5291]"/>
  <match src="array_access [44271,44313]" dest="array_access [44271,44313]"/>
  <match src="identifier: Address [24757,24764]" dest="identifier: Address [24757,24764]"/>
  <match src="=: = [75504,75505]" dest="=: = [75511,75512]"/>
  <match src="}: } [29365,29366]" dest="}: } [29365,29366]"/>
  <match src="expression_statement [53732,53755]" dest="expression_statement [53732,53755]"/>
  <match src="public: public [44166,44172]" dest="public: public [44166,44172]"/>
  <match src="member_expression [79484,79511]" dest="member_expression [79491,79518]"/>
  <match src="identifier: target [29928,29934]" dest="identifier: target [29928,29934]"/>
  <match src="identifier: IERC721Receiver [23215,23230]" dest="identifier: IERC721Receiver [23215,23230]"/>
  <match src="bool: bool [31937,31941]" dest="bool: bool [31937,31941]"/>
  <match src="(: ( [50548,50549]" dest="(: ( [50548,50549]"/>
  <match src="parameter [42052,42067]" dest="parameter [42052,42067]"/>
  <match src="]: ] [73998,73999]" dest="]: ] [74005,74006]"/>
  <match src="number_literal: 5 [71172,71173]" dest="number_literal: 5 [71179,71180]"/>
  <match src=".: . [71269,71270]" dest=".: . [71276,71277]"/>
  <match src="function: function [63966,63974]" dest="function: function [63973,63981]"/>
  <match src="identifier: keccak256 [16269,16278]" dest="identifier: keccak256 [16269,16278]"/>
  <match src="visibility [58991,58999]" dest="visibility [58998,59006]"/>
  <match src="call_expression [67949,68023]" dest="call_expression [67956,68030]"/>
  <match src="return_type_definition [43270,43293]" dest="return_type_definition [43270,43293]"/>
  <match src="primitive_type [1008,1013]" dest="primitive_type [1008,1013]"/>
  <match src="(: ( [1731,1732]" dest="(: ( [1731,1732]"/>
  <match src="function_definition [12725,13116]" dest="function_definition [12725,13116]"/>
  <match src="member_expression [76453,76479]" dest="member_expression [76460,76486]"/>
  <match src="[: [ [44017,44018]" dest="[: [ [44017,44018]"/>
  <match src="call_argument [75018,75023]" dest="call_argument [75025,75030]"/>
  <match src="identifier: quantity [46919,46927]" dest="identifier: quantity [46919,46927]"/>
  <match src="=&gt;: =&gt; [37456,37458]" dest="=&gt;: =&gt; [37456,37458]"/>
  <match src="[: [ [79594,79595]" dest="[: [ [79601,79602]"/>
  <match src="bytes1: bytes1 [6775,6781]" dest="bytes1: bytes1 [6775,6781]"/>
  <match src="(: ( [42865,42866]" dest="(: ( [42865,42866]"/>
  <match src="uint256: uint256 [58197,58204]" dest="uint256: uint256 [58197,58204]"/>
  <match src="primitive_type [58562,58569]" dest="primitive_type [58569,58576]"/>
  <match src="(: ( [63935,63936]" dest="(: ( [63942,63943]"/>
  <match src="parameter [3680,3690]" dest="parameter [3680,3690]"/>
  <match src="identifier: rarities [62114,62122]" dest="identifier: rarities [62121,62129]"/>
  <match src="(: ( [46714,46715]" dest="(: ( [46714,46715]"/>
  <match src="[: [ [72884,72885]" dest="[: [ [72891,72892]"/>
  <match src="identifier: clothes [72954,72961]" dest="identifier: clothes [72961,72968]"/>
  <match src="true [53750,53754]" dest="true [53750,53754]"/>
  <match src="identifier: ownership [41741,41750]" dest="identifier: ownership [41741,41750]"/>
  <match src="type_name [3151,3158]" dest="type_name [3151,3158]"/>
  <match src=".: . [64108,64109]" dest=".: . [64115,64116]"/>
  <match src="return_type_definition [30394,30416]" dest="return_type_definition [30394,30416]"/>
  <match src="(: ( [39323,39324]" dest="(: ( [39323,39324]"/>
  <match src="): ) [30868,30869]" dest="): ) [30868,30869]"/>
  <match src="(: ( [3368,3369]" dest="(: ( [3368,3369]"/>
  <match src="type_name [46911,46918]" dest="type_name [46911,46918]"/>
  <match src="identifier: this [69535,69539]" dest="identifier: this [69542,69546]"/>
  <match src="expression_statement [70756,70789]" dest="expression_statement [70763,70796]"/>
  <match src="{: { [70075,70076]" dest="{: { [70082,70083]"/>
  <match src="number_literal: 1 [7661,7662]" dest="number_literal: 1 [7661,7662]"/>
  <match src=",: , [27139,27140]" dest=",: , [27139,27140]"/>
  <match src="primitive_type [31777,31783]" dest="primitive_type [31777,31783]"/>
  <match src="]: ] [72843,72844]" dest="]: ] [72850,72851]"/>
  <match src="identifier: _afterTokenTransfers [49508,49528]" dest="identifier: _afterTokenTransfers [49508,49528]"/>
  <match src="identifier: from [51900,51904]" dest="identifier: from [51900,51904]"/>
  <match src="type_cast_expression [77110,77131]" dest="type_cast_expression [77117,77138]"/>
  <match src="number_literal: 3 [62723,62724]" dest="number_literal: 3 [62730,62731]"/>
  <match src="return_type_definition [28163,28185]" dest="return_type_definition [28163,28185]"/>
  <match src="assignment_expression [74620,74650]" dest="assignment_expression [74627,74657]"/>
  <match src="{: { [56126,56127]" dest="{: { [56126,56127]"/>
  <match src="binary_expression [49206,49235]" dest="binary_expression [49206,49235]"/>
  <match src="if: if [32483,32485]" dest="if: if [32483,32485]"/>
  <match src="return_statement [40332,40363]" dest="return_statement [40332,40363]"/>
  <match src=".: . [66165,66166]" dest=".: . [66172,66173]"/>
  <match src="returns: returns [4784,4791]" dest="returns: returns [4784,4791]"/>
  <match src="variable_declaration_statement [47908,47945]" dest="variable_declaration_statement [47908,47945]"/>
  <match src=".: . [79603,79604]" dest=".: . [79610,79611]"/>
  <match src="type_name [4515,4520]" dest="type_name [4515,4520]"/>
  <match src="call_argument [78938,78946]" dest="call_argument [78945,78953]"/>
  <match src=".: . [77007,77008]" dest=".: . [77014,77015]"/>
  <match src="}: } [43712,43713]" dest="}: } [43712,43713]"/>
  <match src="identifier: tokenId [55699,55706]" dest="identifier: tokenId [55699,55706]"/>
  <match src="}: } [41902,41903]" dest="}: } [41902,41903]"/>
  <match src="identifier: TokenOwnership [49946,49960]" dest="identifier: TokenOwnership [49946,49960]"/>
  <match src="identifier: target [28217,28223]" dest="identifier: target [28217,28223]"/>
  <match src="identifier: amount [3332,3338]" dest="identifier: amount [3332,3338]"/>
  <match src="comment: // [0.5, 0.3, 0.15, 0.05] [63089,63114]" dest="comment: // [0.5, 0.3, 0.15, 0.05] [63096,63121]"/>
  <match src="]: ] [66080,66081]" dest="]: ] [66087,66088]"/>
  <match src="call_argument [64593,64604]" dest="call_argument [64600,64611]"/>
  <match src="}: } [908,909]" dest="}: } [908,909]"/>
  <match src="comment: // error TransferToZeroAddress(); [35730,35763]" dest="comment: // error TransferToZeroAddress(); [35730,35763]"/>
  <match src="call_argument [66992,67013]" dest="call_argument [66999,67020]"/>
  <match src="identifier: auth [61806,61810]" dest="identifier: auth [61813,61817]"/>
  <match src="number_literal: 1 [69978,69979]" dest="number_literal: 1 [69985,69986]"/>
  <match src="emit: emit [55064,55068]" dest="emit: emit [55064,55068]"/>
  <match src="struct_member [36167,36180]" dest="struct_member [36167,36180]"/>
  <match src="(: ( [75468,75469]" dest="(: ( [75475,75476]"/>
  <match src="identifier: topCommoner_ [70045,70057]" dest="identifier: topCommoner_ [70052,70064]"/>
  <match src="]: ] [62837,62838]" dest="]: ] [62844,62845]"/>
  <match src="binary_expression [67900,67914]" dest="binary_expression [67907,67921]"/>
  <match src="string: string [29740,29746]" dest="string: string [29740,29746]"/>
  <match src="identifier: Commoner [5443,5451]" dest="identifier: Commoner [5443,5451]"/>
  <match src="function_definition [21522,21601]" dest="function_definition [21522,21601]"/>
  <match src="call_argument [69303,69318]" dest="call_argument [69310,69325]"/>
  <match src="type_name [518,524]" dest="type_name [518,524]"/>
  <match src="parameter [15525,15537]" dest="parameter [15525,15537]"/>
  <match src="type_name [16109,16116]" dest="type_name [16109,16116]"/>
  <match src="{: { [4735,4736]" dest="{: { [4735,4736]"/>
  <match src="yul_function_call [56184,56199]" dest="yul_function_call [56184,56199]"/>
  <match src="external: external [1417,1425]" dest="external: external [1417,1425]"/>
  <match src="member_expression [80904,80914]" dest="member_expression [80911,80921]"/>
  <match src="{: { [11160,11161]" dest="{: { [11160,11161]"/>
  <match src="): ) [52755,52756]" dest="): ) [52755,52756]"/>
  <match src="call_expression [67530,67559]" dest="call_expression [67537,67566]"/>
  <match src="comment: // _safeMint(to_, quantity_); [74672,74701]" dest="comment: // _safeMint(to_, quantity_); [74679,74708]"/>
  <match src="call_argument [6801,6811]" dest="call_argument [6801,6811]"/>
  <match src=".: . [73065,73066]" dest=".: . [73072,73073]"/>
  <match src="): ) [45231,45232]" dest="): ) [45231,45232]"/>
  <match src="): ) [39896,39897]" dest="): ) [39896,39897]"/>
  <match src="function_body [64271,64350]" dest="function_body [64278,64357]"/>
  <match src=".: . [8691,8692]" dest=".: . [8691,8692]"/>
  <match src="return_statement [38979,39018]" dest="return_statement [38979,39018]"/>
  <match src="function_body [34691,34757]" dest="function_body [34691,34757]"/>
  <match src="(: ( [68549,68550]" dest="(: ( [68556,68557]"/>
  <match src="type_name [80708,80713]" dest="type_name [80715,80720]"/>
  <match src="call_argument [28710,28722]" dest="call_argument [28710,28722]"/>
  <match src="if: if [7086,7088]" dest="if: if [7086,7088]"/>
  <match src="identifier: _tokenApprovals [44002,44017]" dest="identifier: _tokenApprovals [44002,44017]"/>
  <match src="identifier: commoners [81019,81028]" dest="identifier: commoners [81026,81035]"/>
  <match src="string: string [440,446]" dest="string: string [440,446]"/>
  <match src=".: . [71046,71047]" dest=".: . [71053,71054]"/>
  <match src="string_literal [29857,29897]" dest="string_literal [29857,29897]"/>
  <match src="): ) [77715,77716]" dest="): ) [77722,77723]"/>
  <match src="): ) [75392,75393]" dest="): ) [75399,75400]"/>
  <match src="(: ( [8978,8979]" dest="(: ( [8978,8979]"/>
  <match src=",: , [45660,45661]" dest=",: , [45660,45661]"/>
  <match src="]: ] [62772,62773]" dest="]: ] [62779,62780]"/>
  <match src="(: ( [76947,76948]" dest="(: ( [76954,76955]"/>
  <match src="&gt;: &gt; [70194,70195]" dest="&gt;: &gt; [70201,70202]"/>
  <match src=",: , [63072,63073]" dest=",: , [63079,63080]"/>
  <match src=".: . [46283,46284]" dest=".: . [46283,46284]"/>
  <match src="[: [ [63263,63264]" dest="[: [ [63270,63271]"/>
  <match src="(: ( [68685,68686]" dest="(: ( [68692,68693]"/>
  <match src="(: ( [3135,3136]" dest="(: ( [3135,3136]"/>
  <match src="type_name [7183,7190]" dest="type_name [7183,7190]"/>
  <match src="number_literal: 9 [63315,63316]" dest="number_literal: 9 [63322,63323]"/>
  <match src="shr: shr [13038,13041]" dest="shr: shr [13038,13041]"/>
  <match src="block_statement [7725,7815]" dest="block_statement [7725,7815]"/>
  <match src="expression_statement [54375,54396]" dest="expression_statement [54375,54396]"/>
  <match src="=: = [62398,62399]" dest="=: = [62405,62406]"/>
  <match src="identifier: to [45410,45412]" dest="identifier: to [45410,45412]"/>
  <match src="array_access [73866,73889]" dest="array_access [73873,73896]"/>
  <match src="parameter [3788,3798]" dest="parameter [3788,3798]"/>
  <match src="]: ] [62858,62859]" dest="]: ] [62865,62866]"/>
  <match src=".: . [55800,55801]" dest=".: . [55800,55801]"/>
  <match src="identifier: from [3505,3509]" dest="identifier: from [3505,3509]"/>
  <match src="identifier: r [13103,13104]" dest="identifier: r [13103,13104]"/>
  <match src="address: address [40026,40033]" dest="address: address [40026,40033]"/>
  <match src="identifier: _startTokenId [38140,38153]" dest="identifier: _startTokenId [38140,38153]"/>
  <match src="comment: // Keep track of who burned the token, and the timestamp of burning. [53482,53550]" dest="comment: // Keep track of who burned the token, and the timestamp of burning. [53482,53550]"/>
  <match src="variable_declaration [69996,70003]" dest="variable_declaration [70003,70010]"/>
  <match src="): ) [70140,70141]" dest="): ) [70147,70148]"/>
  <match src=".: . [68533,68534]" dest=".: . [68540,68541]"/>
  <match src="string [56061,56103]" dest="string [56061,56103]"/>
  <match src="): ) [31841,31842]" dest="): ) [31841,31842]"/>
  <match src="identifier: from [52540,52544]" dest="identifier: from [52540,52544]"/>
  <match src="primitive_type [10475,10482]" dest="primitive_type [10475,10482]"/>
  <match src="comment: // The easiest way to bubble the revert reason is using memory via assembly [32674,32749]" dest="comment: // The easiest way to bubble the revert reason is using memory via assembly [32674,32749]"/>
  <match src=",: , [66990,66991]" dest=",: , [66997,66998]"/>
  <match src="public: public [59657,59663]" dest="public: public [59664,59670]"/>
  <match src="expression_statement [77645,77657]" dest="expression_statement [77652,77664]"/>
  <match src="uint256: uint256 [3621,3628]" dest="uint256: uint256 [3621,3628]"/>
  <match src="string [29937,29968]" dest="string [29937,29968]"/>
  <match src="): ) [81521,81522]" dest="): ) [81528,81529]"/>
  <match src="primitive_type [617,623]" dest="primitive_type [617,623]"/>
  <match src="struct_member [5132,5143]" dest="struct_member [5132,5143]"/>
  <match src="else: else [72291,72295]" dest="else: else [72298,72302]"/>
  <match src="type_name [63646,63651]" dest="type_name [63653,63658]"/>
  <match src="expression_statement [78978,79071]" dest="expression_statement [78985,79078]"/>
  <match src="{: { [14972,14973]" dest="{: { [14972,14973]"/>
  <match src="binary_expression [68184,68213]" dest="binary_expression [68191,68220]"/>
  <match src="identifier: target [31732,31738]" dest="identifier: target [31732,31738]"/>
  <match src="parameter [24276,24289]" dest="parameter [24276,24289]"/>
  <match src="primitive_type [5132,5137]" dest="primitive_type [5132,5137]"/>
  <match src="identifier: seed [76955,76959]" dest="identifier: seed [76962,76966]"/>
  <match src="primitive_type [22909,22916]" dest="primitive_type [22909,22916]"/>
  <match src="assignment_expression [41681,41710]" dest="assignment_expression [41681,41710]"/>
  <match src="struct_member [1008,1019]" dest="struct_member [1008,1019]"/>
  <match src=",: , [79904,79905]" dest=",: , [79911,79912]"/>
  <match src="(: ( [60956,60957]" dest="(: ( [60963,60964]"/>
  <match src="identifier: quantity_ [68562,68571]" dest="identifier: quantity_ [68569,68578]"/>
  <match src="visibility [40290,40298]" dest="visibility [40290,40298]"/>
  <match src="visibility [39155,39161]" dest="visibility [39155,39161]"/>
  <match src="uint256: uint256 [37050,37057]" dest="uint256: uint256 [37050,37057]"/>
  <match src="identifier: tokenPartner [69560,69572]" dest="identifier: tokenPartner [69567,69579]"/>
  <match src="primitive_type [23773,23780]" dest="primitive_type [23773,23780]"/>
  <match src="call_argument [12388,12397]" dest="call_argument [12388,12397]"/>
  <match src=",: , [12787,12788]" dest=",: , [12787,12788]"/>
  <match src="identifier: require [64853,64860]" dest="identifier: require [64860,64867]"/>
  <match src="visibility [42069,42075]" dest="visibility [42069,42075]"/>
  <match src="(: ( [39863,39864]" dest="(: ( [39863,39864]"/>
  <match src="false: false [75029,75034]" dest="false: false [75036,75041]"/>
  <match src="number_literal: 254 [62957,62960]" dest="number_literal: 254 [62964,62967]"/>
  <match src="identifier: signature [12388,12397]" dest="identifier: signature [12388,12397]"/>
  <match src="view: view [43257,43261]" dest="view: view [43257,43261]"/>
  <match src=",: , [46336,46337]" dest=",: , [46336,46337]"/>
  <match src="identifier: value [30036,30041]" dest="identifier: value [30036,30041]"/>
  <match src="]: ] [80957,80958]" dest="]: ] [80964,80965]"/>
  <match src="type_name [12349,12361]" dest="type_name [12349,12361]"/>
  <match src="type_name [59433,59438]" dest="type_name [59440,59445]"/>
  <match src="parameter [5909,5924]" dest="parameter [5909,5924]"/>
  <match src="): ) [24562,24563]" dest="): ) [24562,24563]"/>
  <match src="address: address [5897,5904]" dest="address: address [5897,5904]"/>
  <match src="return_statement [28197,28265]" dest="return_statement [28197,28265]"/>
  <match src="): ) [48108,48109]" dest="): ) [48108,48109]"/>
  <match src="if_statement [7086,7142]" dest="if_statement [7086,7142]"/>
  <match src="(: ( [45526,45527]" dest="(: ( [45526,45527]"/>
  <match src="type_name [80478,80485]" dest="type_name [80485,80492]"/>
  <match src="if: if [6441,6443]" dest="if: if [6441,6443]"/>
  <match src="do: do [48825,48827]" dest="do: do [48825,48827]"/>
  <match src="call_argument [75025,75027]" dest="call_argument [75032,75034]"/>
  <match src="identifier: hash [11309,11313]" dest="identifier: hash [11309,11313]"/>
  <match src="(: ( [21324,21325]" dest="(: ( [21324,21325]"/>
  <match src="identifier: lvlFrom [4078,4085]" dest="identifier: lvlFrom [4078,4085]"/>
  <match src="member_expression [40099,40131]" dest="member_expression [40099,40131]"/>
  <match src="identifier: value [7765,7770]" dest="identifier: value [7765,7770]"/>
  <match src="enum_value: InvalidSignatureLength [8299,8321]" dest="enum_value: InvalidSignatureLength [8299,8321]"/>
  <match src="number_literal: 1 [50937,50938]" dest="number_literal: 1 [50937,50938]"/>
  <match src="[: [ [46848,46849]" dest="[: [ [46848,46849]"/>
  <match src="identifier: _mintCommoners [67283,67297]" dest="identifier: _mintCommoners [67290,67304]"/>
  <match src="identifier: addr [50036,50040]" dest="identifier: addr [50036,50040]"/>
  <match src="address: address [3774,3781]" dest="address: address [3774,3781]"/>
  <match src=".: . [11386,11387]" dest=".: . [11386,11387]"/>
  <match src="identifier: s [10756,10757]" dest="identifier: s [10756,10757]"/>
  <match src="identifier: tokenId [43489,43496]" dest="identifier: tokenId [43489,43496]"/>
  <match src="yul_assignment [11179,11211]" dest="yul_assignment [11179,11211]"/>
  <match src="return: return [28197,28203]" dest="return: return [28197,28203]"/>
  <match src="comment: // This will suffice for checking _exists(nextTokenId), [54175,54230]" dest="comment: // This will suffice for checking _exists(nextTokenId), [54175,54230]"/>
  <match src="false [65954,65959]" dest="false [65961,65966]"/>
  <match src="primitive_type [55647,55654]" dest="primitive_type [55647,55654]"/>
  <match src="): ) [31879,31880]" dest="): ) [31879,31880]"/>
  <match src="parameter [81456,81471]" dest="parameter [81463,81478]"/>
  <match src="primitive_type [21978,21982]" dest="primitive_type [21978,21982]"/>
  <match src="assignment_expression [71852,71887]" dest="assignment_expression [71859,71894]"/>
  <match src="identifier: aliases [63376,63383]" dest="identifier: aliases [63383,63390]"/>
  <match src="interface_declaration [3191,3550]" dest="interface_declaration [3191,3550]"/>
  <match src="!=: != [49134,49136]" dest="!=: != [49134,49136]"/>
  <match src="uint8: uint8 [59645,59650]" dest="uint8: uint8 [59652,59657]"/>
  <match src="comment: // traits: tokenId =&gt; blockNumber [59011,59044]" dest="comment: // traits: tokenId =&gt; blockNumber [59018,59051]"/>
  <match src="}: } [5029,5030]" dest="}: } [5029,5030]"/>
  <match src="struct_member [5199,5214]" dest="struct_member [5199,5214]"/>
  <match src="identifier: msg [68686,68689]" dest="identifier: msg [68693,68696]"/>
  <match src="state_mutability [46741,46745]" dest="state_mutability [46741,46745]"/>
  <match src="=: = [70107,70108]" dest="=: = [70114,70115]"/>
  <match src="state_variable_declaration [58099,58123]" dest="state_variable_declaration [58099,58123]"/>
  <match src="): ) [15741,15742]" dest="): ) [15741,15742]"/>
  <match src="primitive_type [25817,25821]" dest="primitive_type [25817,25821]"/>
  <match src="[: [ [76515,76516]" dest="[: [ [76522,76523]"/>
  <match src="public: public [58653,58659]" dest="public: public [58660,58666]"/>
  <match src="member_expression [72016,72049]" dest="member_expression [72023,72056]"/>
  <match src="identifier: smithing [72154,72162]" dest="identifier: smithing [72161,72169]"/>
  <match src="identifier: hash [67448,67452]" dest="identifier: hash [67455,67459]"/>
  <match src="identifier: owner [4373,4378]" dest="identifier: owner [4373,4378]"/>
  <match src="external: external [755,763]" dest="external: external [755,763]"/>
  <match src="public: public [58818,58824]" dest="public: public [58825,58831]"/>
  <match src="(: ( [46120,46121]" dest="(: ( [46120,46121]"/>
  <match src="identifier: Context [35826,35833]" dest="identifier: Context [35826,35833]"/>
  <match src="type_name [42540,42546]" dest="type_name [42540,42546]"/>
  <match src="external: external [63440,63448]" dest="external: external [63447,63455]"/>
  <match src="identifier: error [8670,8675]" dest="identifier: error [8670,8675]"/>
  <match src="call_expression [66253,66312]" dest="call_expression [66260,66319]"/>
  <match src="abstract: abstract [34493,34501]" dest="abstract: abstract [34493,34501]"/>
  <match src="yul_identifier [10806,10807]" dest="yul_identifier [10806,10807]"/>
  <match src="identifier: tokenPartner [64162,64174]" dest="identifier: tokenPartner [64169,64181]"/>
  <match src="if_statement [47955,48007]" dest="if_statement [47955,48007]"/>
  <match src="function_body [75441,75900]" dest="function_body [75448,75907]"/>
  <match src="return_statement [12438,12455]" dest="return_statement [12438,12455]"/>
  <match src="(: ( [45403,45404]" dest="(: ( [45403,45404]"/>
  <match src=",: , [29305,29306]" dest=",: , [29305,29306]"/>
  <match src="call_argument [46342,46349]" dest="call_argument [46342,46349]"/>
  <match src="update_expression [74877,74880]" dest="update_expression [74884,74887]"/>
  <match src="): ) [31025,31026]" dest="): ) [31025,31026]"/>
  <match src="call_expression [29817,29898]" dest="call_expression [29817,29898]"/>
  <match src="function: function [1632,1640]" dest="function: function [1632,1640]"/>
  <match src="call_argument [78122,78129]" dest="call_argument [78129,78136]"/>
  <match src="): ) [45268,45269]" dest="): ) [45268,45269]"/>
  <match src="contract_declaration [35806,57894]" dest="contract_declaration [35806,57894]"/>
  <match src="block_statement [8492,8549]" dest="block_statement [8492,8549]"/>
  <match src="identifier: v [15554,15555]" dest="identifier: v [15554,15555]"/>
  <match src="call_expression [80868,80934]" dest="call_expression [80875,80941]"/>
  <match src="(: ( [78891,78892]" dest="(: ( [78898,78899]"/>
  <match src="identifier: accessory [5789,5798]" dest="identifier: accessory [5789,5798]"/>
  <match src="): ) [32888,32889]" dest="): ) [32888,32889]"/>
  <match src="type_name [10523,10528]" dest="type_name [10523,10528]"/>
  <match src=",: , [18728,18729]" dest=",: , [18728,18729]"/>
  <match src="parenthesized_expression [44237,44258]" dest="parenthesized_expression [44237,44258]"/>
  <match src="(: ( [7832,7833]" dest="(: ( [7832,7833]"/>
  <match src=",: , [43411,43412]" dest=",: , [43411,43412]"/>
  <match src="identifier: tokenNo_ [64568,64576]" dest="identifier: tokenNo_ [64575,64583]"/>
  <match src="&gt;: &gt; [69935,69936]" dest="&gt;: &gt; [69942,69943]"/>
  <match src="(: ( [69995,69996]" dest="(: ( [70002,70003]"/>
  <match src="||: || [45180,45182]" dest="||: || [45180,45182]"/>
  <match src="primitive_type [58960,58967]" dest="primitive_type [58967,58974]"/>
  <match src="(: ( [42207,42208]" dest="(: ( [42207,42208]"/>
  <match src="binary_expression [76433,76480]" dest="binary_expression [76440,76487]"/>
  <match src=",: , [61556,61557]" dest=",: , [61563,61564]"/>
  <match src="identifier: buffer [6758,6764]" dest="identifier: buffer [6758,6764]"/>
  <match src="identifier: msg [67219,67222]" dest="identifier: msg [67226,67229]"/>
  <match src="primitive_type [44508,44515]" dest="primitive_type [44508,44515]"/>
  <match src="if: if [43572,43574]" dest="if: if [43572,43574]"/>
  <match src="): ) [68975,68976]" dest="): ) [68982,68983]"/>
  <match src="uint256: uint256 [7152,7159]" dest="uint256: uint256 [7152,7159]"/>
  <match src=",: , [13104,13105]" dest=",: , [13104,13105]"/>
  <match src="): ) [67045,67046]" dest="): ) [67052,67053]"/>
  <match src="binary_expression [67033,67056]" dest="binary_expression [67040,67063]"/>
  <match src="bytes: bytes [7596,7601]" dest="bytes: bytes [7596,7601]"/>
  <match src="function_body [47897,49576]" dest="function_body [47897,49576]"/>
  <match src="(: ( [65379,65380]" dest="(: ( [65386,65387]"/>
  <match src="binary_expression [70169,70197]" dest="binary_expression [70176,70204]"/>
  <match src="): ) [66926,66927]" dest="): ) [66933,66934]"/>
  <match src="expression_statement [68034,68118]" dest="expression_statement [68041,68125]"/>
  <match src="[: [ [71970,71971]" dest="[: [ [71977,71978]"/>
  <match src="is: is [35823,35825]" dest="is: is [35823,35825]"/>
  <match src=",: , [62614,62615]" dest=",: , [62621,62622]"/>
  <match src="visibility [40900,40908]" dest="visibility [40900,40908]"/>
  <match src="comment: /*///////////////////////////////////////////////////////////////                     MODIFIERS      //////////////////////////////////////////////////////////////*/ [60762,60929]" dest="comment: /*///////////////////////////////////////////////////////////////                     MODIFIERS      //////////////////////////////////////////////////////////////*/ [60769,60936]"/>
  <match src="return_type_definition [39201,39215]" dest="return_type_definition [39201,39215]"/>
  <match src="[: [ [73108,73109]" dest="[: [ [73115,73116]"/>
  <match src=".: . [73999,74000]" dest=".: . [74006,74007]"/>
  <match src="type_name [70037,70044]" dest="type_name [70044,70051]"/>
  <match src="function_definition [43827,44034]" dest="function_definition [43827,44034]"/>
  <match src="parameter [49859,49871]" dest="parameter [49859,49871]"/>
  <match src="): ) [46265,46266]" dest="): ) [46265,46266]"/>
  <match src="=: = [47929,47930]" dest="=: = [47929,47930]"/>
  <match src="call_argument [74289,74301]" dest="call_argument [74296,74308]"/>
  <match src="identifier: tokenURINotRevealed [79779,79798]" dest="identifier: tokenURINotRevealed [79786,79805]"/>
  <match src="type_cast_expression [54550,54560]" dest="type_cast_expression [54550,54560]"/>
  <match src="&amp;: &amp; [77456,77457]" dest="&amp;: &amp; [77463,77464]"/>
  <match src="interface_declaration [17749,18206]" dest="interface_declaration [17749,18206]"/>
  <match src="(: ( [77116,77117]" dest="(: ( [77123,77124]"/>
  <match src="return: return [15753,15759]" dest="return: return [15753,15759]"/>
  <match src="&quot;: &quot; [61558,61559]" dest="&quot;: &quot; [61565,61566]"/>
  <match src="]: ] [80580,80581]" dest="]: ] [80587,80588]"/>
  <match src="visibility [58205,58211]" dest="visibility [58205,58211]"/>
  <match src="number_literal: 6 [69008,69009]" dest="number_literal: 6 [69015,69016]"/>
  <match src=".: . [42954,42955]" dest=".: . [42954,42955]"/>
  <match src="user_defined_type [41089,41103]" dest="user_defined_type [41089,41103]"/>
  <match src="block_statement [41182,41888]" dest="block_statement [41182,41888]"/>
  <match src=",: , [1683,1684]" dest=",: , [1683,1684]"/>
  <match src=",: , [65429,65430]" dest=",: , [65436,65437]"/>
  <match src="type_name [12848,12860]" dest="type_name [12848,12860]"/>
  <match src=",: , [11203,11204]" dest=",: , [11203,11204]"/>
  <match src="identifier: _name [61700,61705]" dest="identifier: _name [61707,61712]"/>
  <match src="return_statement [16262,16339]" dest="return_statement [16262,16339]"/>
  <match src="call_argument [51969,51970]" dest="call_argument [51969,51970]"/>
  <match src="primitive_type [58520,58525]" dest="primitive_type [58520,58525]"/>
  <match src="function_definition [13730,15359]" dest="function_definition [13730,15359]"/>
  <match src="yul_assignment [10756,10788]" dest="yul_assignment [10756,10788]"/>
  <match src="identifier: _ownerships [51440,51451]" dest="identifier: _ownerships [51440,51451]"/>
  <match src="identifier: tokenNo_ [64389,64397]" dest="identifier: tokenNo_ [64396,64404]"/>
  <match src="=: = [41121,41122]" dest="=: = [41121,41122]"/>
  <match src="&gt;: &gt; [65832,65833]" dest="&gt;: &gt; [65839,65840]"/>
  <match src="function: function [43827,43835]" dest="function: function [43827,43835]"/>
  <match src="(: ( [81514,81515]" dest="(: ( [81521,81522]"/>
  <match src="variable_declaration_statement [69996,70008]" dest="variable_declaration_statement [70003,70015]"/>
  <match src="state_mutability [42194,42198]" dest="state_mutability [42194,42198]"/>
  <match src="): ) [3810,3811]" dest="): ) [3810,3811]"/>
  <match src="identifier: tokenId [79138,79145]" dest="identifier: tokenId [79145,79152]"/>
  <match src="address: address [60997,61004]" dest="address: address [61004,61011]"/>
  <match src="): ) [79763,79764]" dest="): ) [79770,79771]"/>
  <match src="identifier: onERC721Received [81407,81423]" dest="identifier: onERC721Received [81414,81430]"/>
  <match src="identifier: TokenPartner [58529,58541]" dest="identifier: TokenPartner [58529,58541]"/>
  <match src="uint256: uint256 [60734,60741]" dest="uint256: uint256 [60741,60748]"/>
  <match src="identifier: isApprovedForAll [45143,45159]" dest="identifier: isApprovedForAll [45143,45159]"/>
  <match src=",: , [62619,62620]" dest=",: , [62626,62627]"/>
  <match src="primitive_type [81424,81431]" dest="primitive_type [81431,81438]"/>
  <match src="binary_expression [68995,69009]" dest="binary_expression [69002,69016]"/>
  <match src="}: } [33718,33719]" dest="}: } [33718,33719]"/>
  <match src="if_statement [71303,74250]" dest="if_statement [71310,74257]"/>
  <match src="primitive_type [5175,5180]" dest="primitive_type [5175,5180]"/>
  <match src="call_argument [44379,44387]" dest="call_argument [44379,44387]"/>
  <match src=".: . [77169,77170]" dest=".: . [77176,77177]"/>
  <match src="identifier: ApprovalForAll [44340,44354]" dest="identifier: ApprovalForAll [44340,44354]"/>
  <match src="(: ( [5629,5630]" dest="(: ( [5629,5630]"/>
  <match src="expression_statement [70807,70841]" dest="expression_statement [70814,70848]"/>
  <match src="function_body [15635,15777]" dest="function_body [15635,15777]"/>
  <match src="call_argument [49349,49359]" dest="call_argument [49349,49359]"/>
  <match src="call_expression [65372,65442]" dest="call_expression [65379,65449]"/>
  <match src="type_name [1747,1754]" dest="type_name [1747,1754]"/>
  <match src="string_literal [68106,68116]" dest="string_literal [68113,68123]"/>
  <match src="while_statement [7212,7290]" dest="while_statement [7212,7290]"/>
  <match src="identifier: toHexString [7010,7021]" dest="identifier: toHexString [7010,7021]"/>
  <match src="identifier: addressData [53397,53408]" dest="identifier: addressData [53397,53408]"/>
  <match src="visibility [38156,38164]" dest="visibility [38156,38164]"/>
  <match src="call_argument [78294,78304]" dest="call_argument [78301,78311]"/>
  <match src="string [69303,69318]" dest="string [69310,69325]"/>
  <match src="uint8: uint8 [1051,1056]" dest="uint8: uint8 [1051,1056]"/>
  <match src="identifier: functionStaticCall [30717,30735]" dest="identifier: functionStaticCall [30717,30735]"/>
  <match src="comment: //     uint8 background; The Mess Hall [72661,72699]" dest="comment: //     uint8 background; The Mess Hall [72668,72706]"/>
  <match src="function: function [57733,57741]" dest="function: function [57733,57741]"/>
  <match src="variable_declaration [74404,74424]" dest="variable_declaration [74411,74431]"/>
  <match src="variable_declaration_statement [7685,7712]" dest="variable_declaration_statement [7685,7712]"/>
  <match src="{: { [44570,44571]" dest="{: { [44570,44571]"/>
  <match src=",: , [5907,5908]" dest=",: , [5907,5908]"/>
  <match src="): ) [66711,66712]" dest="): ) [66718,66719]"/>
  <match src="is: is [24153,24155]" dest="is: is [24153,24155]"/>
  <match src="): ) [43246,43247]" dest="): ) [43246,43247]"/>
  <match src="identifier: _ownerships [46837,46848]" dest="identifier: _ownerships [46837,46848]"/>
  <match src="true: true [61658,61662]" dest="true: true [61665,61669]"/>
  <match src="identifier: background [79418,79428]" dest="identifier: background [79425,79435]"/>
  <match src="identifier: commoners [71246,71255]" dest="identifier: commoners [71253,71262]"/>
  <match src="identifier: target [31328,31334]" dest="identifier: target [31328,31334]"/>
  <match src="=: = [53692,53693]" dest="=: = [53692,53693]"/>
  <match src="array_access [72769,72792]" dest="array_access [72776,72799]"/>
  <match src="function_definition [63966,64224]" dest="function_definition [63973,64231]"/>
  <match src="(: ( [45354,45355]" dest="(: ( [45354,45355]"/>
  <match src=",: , [51958,51959]" dest=",: , [51958,51959]"/>
  <match src="external: external [42185,42193]" dest="external: external [42185,42193]"/>
  <match src="identifier: id [3912,3914]" dest="identifier: id [3912,3914]"/>
  <match src="comment: // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256. [53214,53295]" dest="comment: // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256. [53214,53295]"/>
  <match src="identifier: token_ [64661,64667]" dest="identifier: token_ [64668,64674]"/>
  <match src="*: * [7604,7605]" dest="*: * [7604,7605]"/>
  <match src="primitive_type [196,203]" dest="primitive_type [196,203]"/>
  <match src="(: ( [43927,43928]" dest="(: ( [43927,43928]"/>
  <match src="identifier: from [46004,46008]" dest="identifier: from [46004,46008]"/>
  <match src="=: = [74858,74859]" dest="=: = [74865,74866]"/>
  <match src=",: , [11372,11373]" dest=",: , [11372,11373]"/>
  <match src="return: return [79765,79771]" dest="return: return [79772,79778]"/>
  <match src="parameter [31320,31334]" dest="parameter [31320,31334]"/>
  <match src="]: ] [50924,50925]" dest="]: ] [50924,50925]"/>
  <match src="type_name [64958,64962]" dest="type_name [64965,64969]"/>
  <match src="(: ( [76954,76955]" dest="(: ( [76961,76962]"/>
  <match src="]: ] [63064,63065]" dest="]: ] [63071,63072]"/>
  <match src="call_argument [7905,7911]" dest="call_argument [7905,7911]"/>
  <match src="variable_declaration [52532,52544]" dest="variable_declaration [52532,52544]"/>
  <match src="(: ( [78047,78048]" dest="(: ( [78054,78055]"/>
  <match src="): ) [42067,42068]" dest="): ) [42067,42068]"/>
  <match src="identifier: _burnCounter [54758,54770]" dest="identifier: _burnCounter [54758,54770]"/>
  <match src="primitive_type [55670,55677]" dest="primitive_type [55670,55677]"/>
  <match src="function_body [63668,63759]" dest="function_body [63675,63766]"/>
  <match src="(: ( [44967,44968]" dest="(: ( [44967,44968]"/>
  <match src="primitive_type [21337,21344]" dest="primitive_type [21337,21344]"/>
  <match src="contract_body [18371,22974]" dest="contract_body [18371,22974]"/>
  <match src="(: ( [43511,43512]" dest="(: ( [43511,43512]"/>
  <match src="primitive_type [52077,52084]" dest="primitive_type [52077,52084]"/>
  <match src="function: function [34600,34608]" dest="function: function [34600,34608]"/>
  <match src="if_statement [10926,11422]" dest="if_statement [10926,11422]"/>
  <match src="function_definition [42035,42160]" dest="function_definition [42035,42160]"/>
  <match src="(: ( [44713,44714]" dest="(: ( [44713,44714]"/>
  <match src="': ' [74912,74913]" dest="': ' [74919,74920]"/>
  <match src="identifier: quantity_ [67310,67319]" dest="identifier: quantity_ [67317,67326]"/>
  <match src="returns: returns [43886,43893]" dest="returns: returns [43886,43893]"/>
  <match src="identifier: nextTokenId [51452,51463]" dest="identifier: nextTokenId [51452,51463]"/>
  <match src=",: , [62690,62691]" dest=",: , [62697,62698]"/>
  <match src="): ) [6812,6813]" dest="): ) [6812,6813]"/>
  <match src="identifier: addr [52561,52565]" dest="identifier: addr [52561,52565]"/>
  <match src="block_statement [8957,9028]" dest="block_statement [8957,9028]"/>
  <match src="return_statement [41802,41819]" dest="return_statement [41802,41819]"/>
  <match src="number_literal: 64 [10950,10952]" dest="number_literal: 64 [10950,10952]"/>
  <match src="comment: /**      * @dev Converts a `uint256` to its ASCII `string` decimal representation.      */ [6070,6162]" dest="comment: /**      * @dev Converts a `uint256` to its ASCII `string` decimal representation.      */ [6070,6162]"/>
  <match src="false: false [65954,65959]" dest="false: false [65961,65966]"/>
  <match src="variable_declaration_statement [50955,51010]" dest="variable_declaration_statement [50955,51010]"/>
  <match src="identifier: functionCallWithValue [29115,29136]" dest="identifier: functionCallWithValue [29115,29136]"/>
  <match src="call_argument [65473,65482]" dest="call_argument [65480,65489]"/>
  <match src="function: function [44946,44954]" dest="function: function [44946,44954]"/>
  <match src="revert: revert [45348,45354]" dest="revert: revert [45348,45354]"/>
  <match src="(: ( [72298,72299]" dest="(: ( [72305,72306]"/>
  <match src="visibility [12286,12294]" dest="visibility [12286,12294]"/>
  <match src="&quot;: &quot; [64057,64058]" dest="&quot;: &quot; [64064,64065]"/>
  <match src="string [63708,63719]" dest="string [63715,63726]"/>
  <match src=",: , [62467,62468]" dest=",: , [62474,62475]"/>
  <match src="comment: // ownership above and the recipient's balance can't realistically overflow. [53128,53204]" dest="comment: // ownership above and the recipient's balance can't realistically overflow. [53128,53204]"/>
  <match src="yul_path [10756,10757]" dest="yul_path [10756,10757]"/>
  <match src="identifier: data [31762,31766]" dest="identifier: data [31762,31766]"/>
  <match src="call_argument [41767,41768]" dest="call_argument [41767,41768]"/>
  <match src="assembly: assembly [56145,56153]" dest="assembly: assembly [56145,56153]"/>
  <match src="&quot;: &quot; [66907,66908]" dest="&quot;: &quot; [66914,66915]"/>
  <match src="array_access [39864,39883]" dest="array_access [39864,39883]"/>
  <match src="identifier: tokenId [54024,54031]" dest="identifier: tokenId [54024,54031]"/>
  <match src="identifier: value [7792,7797]" dest="identifier: value [7792,7797]"/>
  <match src="comment: /**      * @dev Returns the token collection name.      */ [24171,24231]" dest="comment: /**      * @dev Returns the token collection name.      */ [24171,24231]"/>
  <match src="(: ( [79106,79107]" dest="(: ( [79113,79114]"/>
  <match src="contract_body [383,796]" dest="contract_body [383,796]"/>
  <match src="): ) [55741,55742]" dest="): ) [55741,55742]"/>
  <match src="yul_identifier [32830,32840]" dest="yul_identifier [32830,32840]"/>
  <match src="expression_statement [77146,77158]" dest="expression_statement [77153,77165]"/>
  <match src="uint256: uint256 [4342,4349]" dest="uint256: uint256 [4342,4349]"/>
  <match src="visibility [16689,16697]" dest="visibility [16689,16697]"/>
  <match src="augmented_assignment_expression [76984,76995]" dest="augmented_assignment_expression [76991,77002]"/>
  <match src="string [61198,61223]" dest="string [61205,61230]"/>
  <match src=".: . [66965,66966]" dest=".: . [66972,66973]"/>
  <match src="(: ( [52793,52794]" dest="(: ( [52793,52794]"/>
  <match src="assignment_expression [72717,72750]" dest="assignment_expression [72724,72757]"/>
  <match src="identifier: require [64736,64743]" dest="identifier: require [64743,64750]"/>
  <match src="identifier: _burn [52071,52076]" dest="identifier: _burn [52071,52076]"/>
  <match src="(: ( [5442,5443]" dest="(: ( [5442,5443]"/>
  <match src=",: , [44667,44668]" dest=",: , [44667,44668]"/>
  <match src="function_body [45628,45686]" dest="function_body [45628,45686]"/>
  <match src="(: ( [12329,12330]" dest="(: ( [12329,12330]"/>
  <match src="visibility [29774,29782]" dest="visibility [29774,29782]"/>
  <match src="type_name [65697,65703]" dest="type_name [65704,65710]"/>
  <match src="identifier: DOGE_SUPPLY [67071,67082]" dest="identifier: DOGE_SUPPLY [67078,67089]"/>
  <match src="uint8: uint8 [58704,58709]" dest="uint8: uint8 [58711,58716]"/>
  <match src="type_name [4968,4972]" dest="type_name [4968,4972]"/>
  <match src=",: , [3678,3679]" dest=",: , [3678,3679]"/>
  <match src="bool: bool [64958,64962]" dest="bool: bool [64965,64969]"/>
  <match src="comment: /**      * @dev Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.      */ [38231,38351]" dest="comment: /**      * @dev Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.      */ [38231,38351]"/>
  <match src="identifier: _exists [46707,46714]" dest="identifier: _exists [46707,46714]"/>
  <match src="state_mutability [42701,42705]" dest="state_mutability [42701,42705]"/>
  <match src="[: [ [62267,62268]" dest="[: [ [62274,62275]"/>
  <match src="identifier: value [27220,27225]" dest="identifier: value [27220,27225]"/>
  <match src="&quot;: &quot; [61718,61719]" dest="&quot;: &quot; [61725,61726]"/>
  <match src="call_argument [77035,77048]" dest="call_argument [77042,77055]"/>
  <match src="number_literal: 0 [63147,63148]" dest="number_literal: 0 [63154,63155]"/>
  <match src="uint256: uint256 [5403,5410]" dest="uint256: uint256 [5403,5410]"/>
  <match src="(: ( [66882,66883]" dest="(: ( [66889,66890]"/>
  <match src="&quot;: &quot; [16329,16330]" dest="&quot;: &quot; [16329,16330]"/>
  <match src=".: . [61814,61815]" dest=".: . [61821,61822]"/>
  <match src="}: } [44395,44396]" dest="}: } [44395,44396]"/>
  <match src="): ) [19322,19323]" dest="): ) [19322,19323]"/>
  <match src="block_statement [70337,71297]" dest="block_statement [70344,71304]"/>
  <match src="==: == [43515,43517]" dest="==: == [43515,43517]"/>
  <match src="}: } [77745,77746]" dest="}: } [77752,77753]"/>
  <match src="(: ( [44563,44564]" dest="(: ( [44563,44564]"/>
  <match src="(: ( [45249,45250]" dest="(: ( [45249,45250]"/>
  <match src="call_argument [7602,7616]" dest="call_argument [7602,7616]"/>
  <match src="return_type_definition [12300,12317]" dest="return_type_definition [12300,12317]"/>
  <match src="return_type_definition [5013,5026]" dest="return_type_definition [5013,5026]"/>
  <match src="=: = [31976,31977]" dest="=: = [31976,31977]"/>
  <match src=",: , [63015,63016]" dest=",: , [63022,63023]"/>
  <match src="=: = [70891,70892]" dest="=: = [70898,70899]"/>
  <match src="member_expression [79221,79247]" dest="member_expression [79228,79254]"/>
  <match src="function_definition [3583,3646]" dest="function_definition [3583,3646]"/>
  <match src="variable_declaration_statement [65867,65880]" dest="variable_declaration_statement [65874,65887]"/>
  <match src="primitive_type [74538,74545]" dest="primitive_type [74545,74552]"/>
  <match src="parameter [4897,4910]" dest="parameter [4897,4910]"/>
  <match src="number_literal: 219 [62621,62624]" dest="number_literal: 219 [62628,62631]"/>
  <match src="member_expression [69473,69514]" dest="member_expression [69480,69521]"/>
  <match src="comment: // Clear approvals from the previous owner [52947,52989]" dest="comment: // Clear approvals from the previous owner [52947,52989]"/>
  <match src="number_literal: 114 [62159,62162]" dest="number_literal: 114 [62166,62169]"/>
  <match src=",: , [45673,45674]" dest=",: , [45673,45674]"/>
  <match src=",: , [21976,21977]" dest=",: , [21976,21977]"/>
  <match src="parameter [55863,55876]" dest="parameter [55863,55876]"/>
  <match src="identifier: lvlTo [4103,4108]" dest="identifier: lvlTo [4103,4108]"/>
  <match src="=: = [61922,61923]" dest="=: = [61929,61930]"/>
  <match src="[: [ [73717,73718]" dest="[: [ [73724,73725]"/>
  <match src="(: ( [66034,66035]" dest="(: ( [66041,66042]"/>
  <match src="type_name [80684,80691]" dest="type_name [80691,80698]"/>
  <match src="(: ( [30899,30900]" dest="(: ( [30899,30900]"/>
  <match src="identifier: isValidSignature [66866,66882]" dest="identifier: isValidSignature [66873,66889]"/>
  <match src="parameter [21543,21558]" dest="parameter [21543,21558]"/>
  <match src="type_name [43401,43408]" dest="type_name [43401,43408]"/>
  <match src="parenthesized_expression [45105,45233]" dest="parenthesized_expression [45105,45233]"/>
  <match src="call_expression [11298,11321]" dest="call_expression [11298,11321]"/>
  <match src="type_name [3369,3376]" dest="type_name [3369,3376]"/>
  <match src="{: { [43641,43642]" dest="{: { [43641,43642]"/>
  <match src="identifier: from [3377,3381]" dest="identifier: from [3377,3381]"/>
  <match src="primitive_type [6782,6787]" dest="primitive_type [6782,6787]"/>
  <match src=",: , [60732,60733]" dest=",: , [60739,60740]"/>
  <match src="): ) [31809,31810]" dest="): ) [31809,31810]"/>
  <match src="visibility [31811,31819]" dest="visibility [31811,31819]"/>
  <match src="identifier: owner [44501,44506]" dest="identifier: owner [44501,44506]"/>
  <match src="identifier: _currentIndex [38986,38999]" dest="identifier: _currentIndex [38986,38999]"/>
  <match src="(: ( [59897,59898]" dest="(: ( [59904,59905]"/>
  <match src="function_body [42384,42415]" dest="function_body [42384,42415]"/>
  <match src="primitive_type [12755,12762]" dest="primitive_type [12755,12762]"/>
  <match src="identifier: svgBreedHead [454,466]" dest="identifier: svgBreedHead [454,466]"/>
  <match src="parameter [3934,3947]" dest="parameter [3934,3947]"/>
  <match src="+=: += [48504,48506]" dest="+=: += [48504,48506]"/>
  <match src=",: , [15709,15710]" dest=",: , [15709,15710]"/>
  <match src="array_access [41693,41710]" dest="array_access [41693,41710]"/>
  <match src="view: view [4921,4925]" dest="view: view [4921,4925]"/>
  <match src="visibility [3399,3407]" dest="visibility [3399,3407]"/>
  <match src="function_body [55013,55105]" dest="function_body [55013,55105]"/>
  <match src="{: { [15225,15226]" dest="{: { [15225,15226]"/>
  <match src="variable_declaration_statement [74944,74983]" dest="variable_declaration_statement [74951,74990]"/>
  <match src="array_access [68357,68379]" dest="array_access [68364,68386]"/>
  <match src="(: ( [47475,47476]" dest="(: ( [47475,47476]"/>
  <match src="primitive_type [49349,49356]" dest="primitive_type [49349,49356]"/>
  <match src="call_argument [55797,55799]" dest="call_argument [55797,55799]"/>
  <match src="identifier: t [75438,75439]" dest="identifier: t [75445,75446]"/>
  <match src="visibility [213,221]" dest="visibility [213,221]"/>
  <match src="identifier: publicMintInitial [67738,67755]" dest="identifier: publicMintInitial [67745,67762]"/>
  <match src="primitive_type [5021,5025]" dest="primitive_type [5021,5025]"/>
  <match src=",: , [12767,12768]" dest=",: , [12767,12768]"/>
  <match src="identifier: startTokenId [57008,57020]" dest="identifier: startTokenId [57008,57020]"/>
  <match src="internal: internal [28621,28629]" dest="internal: internal [28621,28629]"/>
  <match src="function_definition [76824,77746]" dest="function_definition [76831,77753]"/>
  <match src="identifier: palette [77088,77095]" dest="identifier: palette [77095,77102]"/>
  <match src="): ) [70197,70198]" dest="): ) [70204,70205]"/>
  <match src="type_name [53564,53578]" dest="type_name [53564,53578]"/>
  <match src="type_name [16146,16153]" dest="type_name [16146,16153]"/>
  <match src="identifier: error [15679,15684]" dest="identifier: error [15679,15684]"/>
  <match src="identifier: startTimestamp [54458,54472]" dest="identifier: startTimestamp [54458,54472]"/>
  <match src="function_definition [67729,68716]" dest="function_definition [67736,68723]"/>
  <match src="}: } [67327,67328]" dest="}: } [67334,67335]"/>
  <match src="assignment_expression [61700,61719]" dest="assignment_expression [61707,61726]"/>
  <match src="type_cast_expression [29825,29838]" dest="type_cast_expression [29825,29838]"/>
  <match src="visibility [66713,66721]" dest="visibility [66720,66728]"/>
  <match src="is: is [57984,57986]" dest="is: is [57984,57986]"/>
  <match src="string_literal [6479,6482]" dest="string_literal [6479,6482]"/>
  <match src="call_argument [45410,45412]" dest="call_argument [45410,45412]"/>
  <match src="call_argument [46959,46961]" dest="call_argument [46959,46961]"/>
  <match src=",: , [64619,64620]" dest=",: , [64626,64627]"/>
  <match src="primitive_type [48723,48730]" dest="primitive_type [48723,48730]"/>
  <match src="): ) [67107,67108]" dest="): ) [67114,67115]"/>
  <match src=".: . [80994,80995]" dest=".: . [81001,81002]"/>
  <match src="primitive_type [12893,12898]" dest="primitive_type [12893,12898]"/>
  <match src="comment: /**      * @dev Transfers `tokenId` token from `from` to `to`.      *      * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.      *      * Requirements:      *      * - `from` cannot be the zero address.      * - `to` cannot be the zero address.      * - `tokenId` token must be owned by `from`.      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.      *      * Emits a {Transfer} event.      */ [20199,20716]" dest="comment: /**      * @dev Transfers `tokenId` token from `from` to `to`.      *      * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.      *      * Requirements:      *      * - `from` cannot be the zero address.      * - `to` cannot be the zero address.      * - `tokenId` token must be owned by `from`.      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.      *      * Emits a {Transfer} event.      */ [20199,20716]"/>
  <match src="): ) [69131,69132]" dest="): ) [69138,69139]"/>
  <match src="==: == [64872,64874]" dest="==: == [64879,64881]"/>
  <match src="): ) [63438,63439]" dest="): ) [63445,63446]"/>
  <match src="call_argument [10894,10898]" dest="call_argument [10894,10898]"/>
  <match src="call_argument [48985,48990]" dest="call_argument [48985,48990]"/>
  <match src="identifier: transferFrom [69502,69514]" dest="identifier: transferFrom [69509,69521]"/>
  <match src="primitive_type [28639,28644]" dest="primitive_type [28639,28644]"/>
  <match src=",: , [62892,62893]" dest=",: , [62899,62900]"/>
  <match src="{: { [48806,48807]" dest="{: { [48806,48807]"/>
  <match src="identifier: traits [59173,59179]" dest="identifier: traits [59180,59186]"/>
  <match src="identifier: nonce [4905,4910]" dest="identifier: nonce [4905,4910]"/>
  <match src="identifier: tokenId [45414,45421]" dest="identifier: tokenId [45414,45421]"/>
  <match src="primitive_type [45560,45567]" dest="primitive_type [45560,45567]"/>
  <match src="expression_statement [65881,65899]" dest="expression_statement [65888,65906]"/>
  <match src="[: [ [7660,7661]" dest="[: [ [7660,7661]"/>
  <match src="primitive_type [2444,2451]" dest="primitive_type [2444,2451]"/>
  <match src="type_name [59158,59165]" dest="type_name [59165,59172]"/>
  <match src="function_definition [46698,46872]" dest="function_definition [46698,46872]"/>
  <match src=",: , [63142,63143]" dest=",: , [63149,63150]"/>
  <match src="call_argument [16296,16330]" dest="call_argument [16296,16330]"/>
  <match src="expression_statement [15724,15743]" dest="expression_statement [15724,15743]"/>
  <match src="number_literal: 3 [63141,63142]" dest="number_literal: 3 [63148,63149]"/>
  <match src="memory: memory [31755,31761]" dest="memory: memory [31755,31761]"/>
  <match src="[: [ [71255,71256]" dest="[: [ [71262,71263]"/>
  <match src="(: ( [6704,6705]" dest="(: ( [6704,6705]"/>
  <match src="parameter [39135,39153]" dest="parameter [39135,39153]"/>
  <match src="type_cast_expression [69169,69184]" dest="type_cast_expression [69176,69191]"/>
  <match src="number_literal: 66 [62820,62822]" dest="number_literal: 66 [62827,62829]"/>
  <match src="type_name [24276,24282]" dest="type_name [24276,24282]"/>
  <match src="number_literal: 1 [72165,72166]" dest="number_literal: 1 [72172,72173]"/>
  <match src="array_access [71961,71984]" dest="array_access [71968,71991]"/>
  <match src=".: . [81298,81299]" dest=".: . [81305,81306]"/>
  <match src="identifier: require [78930,78937]" dest="identifier: require [78937,78944]"/>
  <match src="parameter [17239,17257]" dest="parameter [17239,17257]"/>
  <match src="primitive_type [3680,3687]" dest="primitive_type [3680,3687]"/>
  <match src=",: , [1933,1934]" dest=",: , [1933,1934]"/>
  <match src="array_access [48590,48615]" dest="array_access [48590,48615]"/>
  <match src="event_paramater [60718,60732]" dest="event_paramater [60725,60739]"/>
  <match src="}: } [40658,40659]" dest="}: } [40658,40659]"/>
  <match src="call_argument [80449,80461]" dest="call_argument [80456,80468]"/>
  <match src="return: return [39849,39855]" dest="return: return [39849,39855]"/>
  <match src="visibility [5581,5589]" dest="visibility [5581,5589]"/>
  <match src=".: . [27121,27122]" dest=".: . [27121,27122]"/>
  <match src="string: string [494,500]" dest="string: string [494,500]"/>
  <match src="string [44746,44757]" dest="string [44746,44757]"/>
  <match src="uint256: uint256 [7505,7512]" dest="uint256: uint256 [7505,7512]"/>
  <match src=".: . [16282,16283]" dest=".: . [16282,16283]"/>
  <match src="identifier: selectTrait [77597,77608]" dest="identifier: selectTrait [77604,77615]"/>
  <match src="): ) [34645,34646]" dest="): ) [34645,34646]"/>
  <match src="true: true [66352,66356]" dest="true: true [66359,66363]"/>
  <match src="call_argument [77359,77380]" dest="call_argument [77366,77387]"/>
  <match src="identifier: _airdropTopTalents [63587,63605]" dest="identifier: _airdropTopTalents [63594,63612]"/>
  <match src="identifier: Doge2 [1369,1374]" dest="identifier: Doge2 [1369,1374]"/>
  <match src=",: , [10898,10899]" dest=",: , [10898,10899]"/>
  <match src="]: ] [48489,48490]" dest="]: ] [48489,48490]"/>
  <match src="primitive_type [68542,68549]" dest="primitive_type [68549,68556]"/>
  <match src="user_defined_type [12848,12860]" dest="user_defined_type [12848,12860]"/>
  <match src="}: } [80106,80107]" dest="}: } [80113,80114]"/>
  <match src="address: address [48099,48106]" dest="address: address [48099,48106]"/>
  <match src="string_literal [46121,46158]" dest="string_literal [46121,46158]"/>
  <match src="parameter [29688,29705]" dest="parameter [29688,29705]"/>
  <match src="member_expression [33701,33711]" dest="member_expression [33701,33711]"/>
  <match src="assembly_statement [56145,56234]" dest="assembly_statement [56145,56234]"/>
  <match src="array_access [70807,70830]" dest="array_access [70814,70837]"/>
  <match src="parameter [10155,10177]" dest="parameter [10155,10177]"/>
  <match src="identifier: TokenOwnership [37459,37473]" dest="identifier: TokenOwnership [37459,37473]"/>
  <match src="identifier: reason [56207,56213]" dest="identifier: reason [56207,56213]"/>
  <match src="identifier: nextSlot [51731,51739]" dest="identifier: nextSlot [51731,51739]"/>
  <match src="identifier: topTalents [80028,80038]" dest="identifier: topTalents [80035,80045]"/>
  <match src="}: } [33019,33020]" dest="}: } [33019,33020]"/>
  <match src="call_expression [61778,61793]" dest="call_expression [61785,61800]"/>
  <match src="call_argument [78062,78375]" dest="call_argument [78069,78382]"/>
  <match src="primitive_type [41759,41766]" dest="primitive_type [41759,41766]"/>
  <match src="yul_function_call [32824,32841]" dest="yul_function_call [32824,32841]"/>
  <match src="uint256: uint256 [37126,37133]" dest="uint256: uint256 [37126,37133]"/>
  <match src="[: [ [71809,71810]" dest="[: [ [71816,71817]"/>
  <match src="variable_declaration [40957,40969]" dest="variable_declaration [40957,40969]"/>
  <match src="expression_statement [48540,48576]" dest="expression_statement [48540,48576]"/>
  <match src="identifier: recover [67560,67567]" dest="identifier: recover [67567,67574]"/>
  <match src="array_access [72239,72262]" dest="array_access [72246,72269]"/>
  <match src="bytes: bytes [12262,12267]" dest="bytes: bytes [12262,12267]"/>
  <match src="[: [ [62770,62771]" dest="[: [ [62777,62778]"/>
  <match src="member_expression [53732,53747]" dest="member_expression [53732,53747]"/>
  <match src="identifier: hash [10894,10898]" dest="identifier: hash [10894,10898]"/>
  <match src="identifier: acc [61076,61079]" dest="identifier: acc [61083,61086]"/>
  <match src="identifier: startTokenId [47916,47928]" dest="identifier: startTokenId [47916,47928]"/>
  <match src="primitive_type [40026,40033]" dest="primitive_type [40026,40033]"/>
  <match src="variable_declaration [47908,47928]" dest="variable_declaration [47908,47928]"/>
  <match src="returns: returns [1524,1531]" dest="returns: returns [1524,1531]"/>
  <match src=",: , [11316,11317]" dest=",: , [11316,11317]"/>
  <match src="visibility [58818,58824]" dest="visibility [58825,58831]"/>
  <match src="returns: returns [16703,16710]" dest="returns: returns [16703,16710]"/>
  <match src="=: = [64782,64783]" dest="=: = [64789,64790]"/>
  <match src="interface_declaration [4014,4563]" dest="interface_declaration [4014,4563]"/>
  <match src="[: [ [62856,62857]" dest="[: [ [62863,62864]"/>
  <match src="number_literal: 9 [74070,74071]" dest="number_literal: 9 [74077,74078]"/>
  <match src="string [75025,75027]" dest="string [75032,75034]"/>
  <match src="parameter [862,872]" dest="parameter [862,872]"/>
  <match src="expression_statement [13495,13514]" dest="expression_statement [13495,13514]"/>
  <match src="state_mutability [40050,40054]" dest="state_mutability [40050,40054]"/>
  <match src="): ) [77130,77131]" dest="): ) [77137,77138]"/>
  <match src=",: , [74598,74599]" dest=",: , [74605,74606]"/>
  <match src="(: ( [42937,42938]" dest="(: ( [42937,42938]"/>
  <match src="is: is [34518,34520]" dest="is: is [34518,34520]"/>
  <match src="identifier: noCheaters [68901,68911]" dest="identifier: noCheaters [68908,68918]"/>
  <match src="(: ( [54615,54616]" dest="(: ( [54615,54616]"/>
  <match src="ether: ether [67166,67171]" dest="ether: ether [67173,67178]"/>
  <match src="type_name [64459,64466]" dest="type_name [64466,64473]"/>
  <match src="identifier: selector [55947,55955]" dest="identifier: selector [55947,55955]"/>
  <match src="=: = [74816,74817]" dest="=: = [74823,74824]"/>
  <match src="type_name [29997,30002]" dest="type_name [29997,30002]"/>
  <match src="=: = [61776,61777]" dest="=: = [61783,61784]"/>
  <match src="type_cast_expression [42885,42899]" dest="type_cast_expression [42885,42899]"/>
  <match src="parenthesized_expression [70109,70141]" dest="parenthesized_expression [70116,70148]"/>
  <match src="number_literal: 4 [7802,7803]" dest="number_literal: 4 [7802,7803]"/>
  <match src="primitive_type [4968,4972]" dest="primitive_type [4968,4972]"/>
  <match src="external: external [2349,2357]" dest="external: external [2349,2357]"/>
  <match src="binary_expression [78792,78811]" dest="binary_expression [78799,78818]"/>
  <match src="identifier: to [46281,46283]" dest="identifier: to [46281,46283]"/>
  <match src="variable_declaration [12330,12347]" dest="variable_declaration [12330,12347]"/>
  <match src="return_statement [44581,44624]" dest="return_statement [44581,44624]"/>
  <match src="virtual: virtual [33657,33664]" dest="virtual: virtual [33657,33664]"/>
  <match src="array_access [48415,48431]" dest="array_access [48415,48431]"/>
  <match src="function_definition [90,163]" dest="function_definition [90,163]"/>
  <match src="}: } [78394,78395]" dest="}: } [78401,78402]"/>
  <match src="&quot;: &quot; [65849,65850]" dest="&quot;: &quot; [65856,65857]"/>
  <match src="call_argument [68995,69009]" dest="call_argument [69002,69016]"/>
  <match src="): ) [52713,52714]" dest="): ) [52713,52714]"/>
  <match src="(: ( [4934,4935]" dest="(: ( [4934,4935]"/>
  <match src="function: function [2288,2296]" dest="function: function [2288,2296]"/>
  <match src="call_argument [77193,77214]" dest="call_argument [77200,77221]"/>
  <match src="&quot;: &quot; [68232,68233]" dest="&quot;: &quot; [68239,68240]"/>
  <match src="identifier: data [22950,22954]" dest="identifier: data [22950,22954]"/>
  <match src="variable_declaration [67440,67452]" dest="variable_declaration [67447,67459]"/>
  <match src="type_name [7596,7601]" dest="type_name [7596,7601]"/>
  <match src="[: [ [40634,40635]" dest="[: [ [40634,40635]"/>
  <match src="]: ] [71928,71929]" dest="]: ] [71935,71936]"/>
  <match src="inline_array_expression [62951,62980]" dest="inline_array_expression [62958,62987]"/>
  <match src="comment: //     uint8 head; Determined [70410,70439]" dest="comment: //     uint8 head; Determined [70417,70446]"/>
  <match src="uint256: uint256 [19122,19129]" dest="uint256: uint256 [19122,19129]"/>
  <match src="return_type_definition [79716,79739]" dest="return_type_definition [79723,79746]"/>
  <match src="identifier: palette [79212,79219]" dest="identifier: palette [79219,79226]"/>
  <match src="memory: memory [10161,10167]" dest="memory: memory [10161,10167]"/>
  <match src="identifier: initialized [61589,61600]" dest="identifier: initialized [61596,61607]"/>
  <match src="variable_declaration [52612,52634]" dest="variable_declaration [52612,52634]"/>
  <match src="primitive_type [15525,15532]" dest="primitive_type [15525,15532]"/>
  <match src="member_expression [64162,64200]" dest="member_expression [64169,64207]"/>
  <match src="primitive_type [37680,37687]" dest="primitive_type [37680,37687]"/>
  <match src="assignment_expression [77168,77218]" dest="assignment_expression [77175,77225]"/>
  <match src="): ) [45314,45315]" dest="): ) [45314,45315]"/>
  <match src="identifier: ERC721A [57987,57994]" dest="identifier: ERC721A [57987,57994]"/>
  <match src="{: { [8599,8600]" dest="{: { [8599,8600]"/>
  <match src="primitive_type [14779,14786]" dest="primitive_type [14779,14786]"/>
  <match src="variable_declaration [65867,65875]" dest="variable_declaration [65874,65882]"/>
  <match src="member_expression [69342,69376]" dest="member_expression [69349,69383]"/>
  <match src=":: : [79533,79534]" dest=":: : [79540,79541]"/>
  <match src="}: } [27334,27335]" dest="}: } [27334,27335]"/>
  <match src=",: , [53018,53019]" dest=",: , [53018,53019]"/>
  <match src="return: return [81534,81540]" dest="return: return [81541,81547]"/>
  <match src="virtual: virtual [45052,45059]" dest="virtual: virtual [45052,45059]"/>
  <match src="binary_expression [74996,75005]" dest="binary_expression [75003,75012]"/>
  <match src="(: ( [63645,63646]" dest="(: ( [63652,63653]"/>
  <match src="variable_declaration_statement [52532,52566]" dest="variable_declaration_statement [52532,52566]"/>
  <match src="function_definition [1786,2010]" dest="function_definition [1786,2010]"/>
  <match src="binary_expression [68357,68419]" dest="binary_expression [68364,68426]"/>
  <match src="string [8738,8771]" dest="string [8738,8771]"/>
  <match src="primitive_type [80696,80701]" dest="primitive_type [80703,80708]"/>
  <match src="primitive_type [36362,36366]" dest="primitive_type [36362,36366]"/>
  <match src="}: } [49443,49444]" dest="}: } [49443,49444]"/>
  <match src="parameter [20159,20174]" dest="parameter [20159,20174]"/>
  <match src="type_name [45863,45868]" dest="type_name [45863,45868]"/>
  <match src="state_mutability [25803,25807]" dest="state_mutability [25803,25807]"/>
  <match src="): ) [6686,6687]" dest="): ) [6686,6687]"/>
  <match src="identifier: topCommoner_ [72249,72261]" dest="identifier: topCommoner_ [72256,72268]"/>
  <match src="string [48043,48063]" dest="string [48043,48063]"/>
  <match src="}: } [74933,74934]" dest="}: } [74940,74941]"/>
  <match src="type_name [45816,45823]" dest="type_name [45816,45823]"/>
  <match src="(: ( [13398,13399]" dest="(: ( [13398,13399]"/>
  <match src="comment: // alchemy [63160,63170]" dest="comment: // alchemy [63167,63177]"/>
  <match src="(: ( [46093,46094]" dest="(: ( [46093,46094]"/>
  <match src="primitive_type [59069,59076]" dest="primitive_type [59076,59083]"/>
  <match src="primitive_type [31829,31834]" dest="primitive_type [31829,31834]"/>
  <match src="call_argument [55838,55845]" dest="call_argument [55838,55845]"/>
  <match src="expression_statement [71961,71998]" dest="expression_statement [71968,72005]"/>
  <match src="(: ( [63874,63875]" dest="(: ( [63881,63882]"/>
  <match src="internal: internal [37058,37066]" dest="internal: internal [37058,37066]"/>
  <match src="identifier: length [32643,32649]" dest="identifier: length [32643,32649]"/>
  <match src="revert: revert [8731,8737]" dest="revert: revert [8731,8737]"/>
  <match src="identifier: GroupConfig [4048,4059]" dest="identifier: GroupConfig [4048,4059]"/>
  <match src="&quot;: &quot; [7878,7879]" dest="&quot;: &quot; [7878,7879]"/>
  <match src="]: ] [44612,44613]" dest="]: ] [44612,44613]"/>
  <match src="string: string [342,348]" dest="string: string [342,348]"/>
  <match src="assignment_expression [72875,72911]" dest="assignment_expression [72882,72918]"/>
  <match src="function: function [67336,67344]" dest="function: function [67343,67351]"/>
  <match src="{: { [43904,43905]" dest="{: { [43904,43905]"/>
  <match src="primitive_type [778,784]" dest="primitive_type [778,784]"/>
  <match src="): ) [48063,48064]" dest="): ) [48063,48064]"/>
  <match src="identifier: i [66207,66208]" dest="identifier: i [66214,66215]"/>
  <match src="view: view [30842,30846]" dest="view: view [30842,30846]"/>
  <match src="number_literal: 14 [72052,72054]" dest="number_literal: 14 [72059,72061]"/>
  <match src="function_definition [31684,32080]" dest="function_definition [31684,32080]"/>
  <match src="identifier: TokenOwnership [50955,50969]" dest="identifier: TokenOwnership [50955,50969]"/>
  <match src="event_paramater [18531,18554]" dest="event_paramater [18531,18554]"/>
  <match src="primitive_type [3237,3244]" dest="primitive_type [3237,3244]"/>
  <match src="identifier: safeTransferFrom [45639,45655]" dest="identifier: safeTransferFrom [45639,45655]"/>
  <match src="expression_statement [72239,72275]" dest="expression_statement [72246,72282]"/>
  <match src="(: ( [61860,61861]" dest="(: ( [61867,61868]"/>
  <match src="call_expression [68349,68473]" dest="call_expression [68356,68480]"/>
  <match src=",: , [15258,15259]" dest=",: , [15258,15259]"/>
  <match src="identifier: MAX_SUPPLY [69079,69089]" dest="identifier: MAX_SUPPLY [69086,69096]"/>
  <match src="[: [ [72830,72831]" dest="[: [ [72837,72838]"/>
  <match src="expression_statement [46949,46977]" dest="expression_statement [46949,46977]"/>
  <match src="user_defined_type [75412,75430]" dest="user_defined_type [75419,75437]"/>
  <match src="variable_declaration_statement [49946,50006]" dest="variable_declaration_statement [49946,50006]"/>
  <match src="==: == [52757,52759]" dest="==: == [52757,52759]"/>
  <match src="call_expression [13083,13108]" dest="call_expression [13083,13108]"/>
  <match src="call_argument [30900,30906]" dest="call_argument [30900,30906]"/>
  <match src="bytes32: bytes32 [17282,17289]" dest="bytes32: bytes32 [17282,17289]"/>
  <match src="string: string [617,623]" dest="string: string [617,623]"/>
  <match src="member_expression [73042,73076]" dest="member_expression [73049,73083]"/>
  <match src="==: == [45963,45965]" dest="==: == [45963,45965]"/>
  <match src="): ) [54569,54570]" dest="): ) [54569,54570]"/>
  <match src="number_literal: 255 [62268,62271]" dest="number_literal: 255 [62275,62278]"/>
  <match src="parameter [22935,22954]" dest="parameter [22935,22954]"/>
  <match src="(: ( [66026,66027]" dest="(: ( [66033,66034]"/>
  <match src="=: = [62126,62127]" dest="=: = [62133,62134]"/>
  <match src="false [61604,61609]" dest="false [61611,61616]"/>
  <match src="view: view [43872,43876]" dest="view: view [43872,43876]"/>
  <match src="comment: /**      * Returns the total amount of tokens minted in the contract.      */ [38668,38747]" dest="comment: /**      * Returns the total amount of tokens minted in the contract.      */ [38668,38747]"/>
  <match src="): ) [51510,51511]" dest="): ) [51510,51511]"/>
  <match src="string_literal [67173,67191]" dest="string_literal [67180,67198]"/>
  <match src="}: } [32539,32540]" dest="}: } [32539,32540]"/>
  <match src="if_statement [48777,49444]" dest="if_statement [48777,49444]"/>
  <match src="}: } [54517,54518]" dest="}: } [54517,54518]"/>
  <match src="view: view [40050,40054]" dest="view: view [40050,40054]"/>
  <match src="function_definition [47347,47510]" dest="function_definition [47347,47510]"/>
  <match src="pragma_directive [0,22]" dest="pragma_directive [0,22]"/>
  <match src="expression_statement [7628,7644]" dest="expression_statement [7628,7644]"/>
  <match src="address: address [22185,22192]" dest="address: address [22185,22192]"/>
  <match src="expression_statement [73976,74015]" dest="expression_statement [73983,74022]"/>
  <match src="}: } [6890,6891]" dest="}: } [6890,6891]"/>
  <match src="identifier: _getAux [40267,40274]" dest="identifier: _getAux [40267,40274]"/>
  <match src="identifier: require [68923,68930]" dest="identifier: require [68930,68937]"/>
  <match src="calldata: calldata [33784,33792]" dest="calldata: calldata [33784,33792]"/>
  <match src="type_name [55975,55980]" dest="type_name [55975,55980]"/>
  <match src="=: = [52496,52497]" dest="=: = [52496,52497]"/>
  <match src="identifier: interfaceId [34709,34720]" dest="identifier: interfaceId [34709,34720]"/>
  <match src="function_definition [5532,5610]" dest="function_definition [5532,5610]"/>
  <match src="address: address [20754,20761]" dest="address: address [20754,20761]"/>
  <match src="identifier: _approve [50532,50540]" dest="identifier: _approve [50532,50540]"/>
  <match src="type_name [13783,13788]" dest="type_name [13783,13788]"/>
  <match src="comment: /**      * @dev See {IERC721-getApproved}.      */ [43769,43821]" dest="comment: /**      * @dev See {IERC721-getApproved}.      */ [43769,43821]"/>
  <match src="identifier: encodePacked [67469,67481]" dest="identifier: encodePacked [67476,67488]"/>
  <match src="identifier: manuallyAdjustDoge [1795,1813]" dest="identifier: manuallyAdjustDoge [1795,1813]"/>
  <match src="parameter [12262,12284]" dest="parameter [12262,12284]"/>
  <match src="]: ] [76532,76533]" dest="]: ] [76539,76540]"/>
  <match src="visibility [37475,37483]" dest="visibility [37475,37483]"/>
  <match src="parameter [4699,4711]" dest="parameter [4699,4711]"/>
  <match src="number_literal: 66 [62646,62648]" dest="number_literal: 66 [62653,62655]"/>
  <match src="array_access [71906,71929]" dest="array_access [71913,71936]"/>
  <match src="call_argument [39864,39896]" dest="call_argument [39864,39896]"/>
  <match src="call_expression [48922,48991]" dest="call_expression [48922,48991]"/>
  <match src="inline_array_expression [63004,63022]" dest="inline_array_expression [63011,63029]"/>
  <match src="memory: memory [1375,1381]" dest="memory: memory [1375,1381]"/>
  <match src=",: , [64477,64478]" dest=",: , [64484,64485]"/>
  <match src="comment: //     uint8 background; Artificer's Lab [71691,71731]" dest="comment: //     uint8 background; Artificer's Lab [71698,71738]"/>
  <match src="type_name [5712,5717]" dest="type_name [5712,5717]"/>
  <match src="identifier: rarities [76507,76515]" dest="identifier: rarities [76514,76522]"/>
  <match src="for: for [7680,7683]" dest="for: for [7680,7683]"/>
  <match src="function: function [43384,43392]" dest="function: function [43384,43392]"/>
  <match src="identifier: to [47476,47478]" dest="identifier: to [47476,47478]"/>
  <match src="identifier: ERC20Like [3201,3210]" dest="identifier: ERC20Like [3201,3210]"/>
  <match src="&gt;=: &gt;= [67139,67141]" dest="&gt;=: &gt;= [67146,67148]"/>
  <match src="function_definition [56915,57074]" dest="function_definition [56915,57074]"/>
  <match src="identifier: smithing [71161,71169]" dest="identifier: smithing [71168,71176]"/>
  <match src="number_literal: 0 [62210,62211]" dest="number_literal: 0 [62217,62218]"/>
  <match src="payable: payable [66722,66729]" dest="payable: payable [66729,66736]"/>
  <match src="identifier: interfaceId [39393,39404]" dest="identifier: interfaceId [39393,39404]"/>
  <match src=".: . [67252,67253]" dest=".: . [67259,67260]"/>
  <match src=".: . [69518,69519]" dest=".: . [69525,69526]"/>
  <match src="=: = [74551,74552]" dest="=: = [74558,74559]"/>
  <match src="primitive_type [23894,23900]" dest="primitive_type [23894,23900]"/>
  <match src="bytes: bytes [32367,32372]" dest="bytes: bytes [32367,32372]"/>
  <match src="call_argument [31862,31880]" dest="call_argument [31862,31880]"/>
  <match src="(: ( [77199,77200]" dest="(: ( [77206,77207]"/>
  <match src="=: = [53748,53749]" dest="=: = [53748,53749]"/>
  <match src="identifier: left_ [74949,74954]" dest="identifier: left_ [74956,74961]"/>
  <match src="number_literal: 0 [7227,7228]" dest="number_literal: 0 [7227,7228]"/>
  <match src="identifier: interfaceId [39276,39287]" dest="identifier: interfaceId [39276,39287]"/>
  <match src="identifier: MAX_SUPPLY [69937,69947]" dest="identifier: MAX_SUPPLY [69944,69954]"/>
  <match src="type_name [61497,61504]" dest="type_name [61504,61511]"/>
  <match src="): ) [80625,80626]" dest="): ) [80632,80633]"/>
  <match src="uint256: uint256 [29716,29723]" dest="uint256: uint256 [29716,29723]"/>
  <match src=".: . [81254,81255]" dest=".: . [81261,81262]"/>
  <match src="primitive_type [47397,47404]" dest="primitive_type [47397,47404]"/>
  <match src="(: ( [2033,2034]" dest="(: ( [2033,2034]"/>
  <match src="interface: interface [2996,3005]" dest="interface: interface [2996,3005]"/>
  <match src=",: , [64397,64398]" dest=",: , [64404,64405]"/>
  <match src="comment: // interface DogeLike { [2495,2518]" dest="comment: // interface DogeLike { [2495,2518]"/>
  <match src="comment: // Charlie Chonkins, Royal Cook [72326,72357]" dest="comment: // Charlie Chonkins, Royal Cook [72333,72364]"/>
  <match src="identifier: target [30024,30030]" dest="identifier: target [30024,30030]"/>
  <match src="number_literal: 1 [63264,63265]" dest="number_literal: 1 [63271,63272]"/>
  <match src="yul_identifier [56192,56198]" dest="yul_identifier [56192,56198]"/>
  <match src="function: function [76824,76832]" dest="function: function [76831,76839]"/>
  <match src="binary_expression [67033,67095]" dest="binary_expression [67040,67102]"/>
  <match src="function: function [7469,7477]" dest="function: function [7469,7477]"/>
  <match src="(: ( [24250,24251]" dest="(: ( [24250,24251]"/>
  <match src="visibility [39511,39517]" dest="visibility [39511,39517]"/>
  <match src="string [61611,61632]" dest="string [61618,61639]"/>
  <match src="array_access [75485,75503]" dest="array_access [75492,75510]"/>
  <match src="type_name [74944,74948]" dest="type_name [74951,74955]"/>
  <match src="primitive_type [48673,48680]" dest="primitive_type [48673,48680]"/>
  <match src="parameter [3597,3607]" dest="parameter [3597,3607]"/>
  <match src="parameter [76846,76858]" dest="parameter [76853,76865]"/>
  <match src="identifier: prevOwnership [52482,52495]" dest="identifier: prevOwnership [52482,52495]"/>
  <match src="uint8: uint8 [80708,80713]" dest="uint8: uint8 [80715,80720]"/>
  <match src="comment: //     uint8 bodyType; A [71525,71549]" dest="comment: //     uint8 bodyType; A [71532,71556]"/>
  <match src="identifier: from [56964,56968]" dest="identifier: from [56964,56968]"/>
  <match src="uint8: uint8 [69996,70001]" dest="uint8: uint8 [70003,70008]"/>
  <match src="revert_statement [43525,43560]" dest="revert_statement [43525,43560]"/>
  <match src="=: = [76934,76935]" dest="=: = [76941,76942]"/>
  <match src="comment: // init prize pool $TREAT [4192,4217]" dest="comment: // init prize pool $TREAT [4192,4217]"/>
  <match src="}: } [74661,74662]" dest="}: } [74668,74669]"/>
  <match src="string: string [7060,7066]" dest="string: string [7060,7066]"/>
  <match src="(: ( [68132,68133]" dest="(: ( [68139,68140]"/>
  <match src="array_access [72016,72039]" dest="array_access [72023,72046]"/>
  <match src="call_expression [64651,64668]" dest="call_expression [64658,64675]"/>
  <match src="}: } [75899,75900]" dest="}: } [75906,75907]"/>
  <match src="&quot;: &quot; [67012,67013]" dest="&quot;: &quot; [67019,67020]"/>
  <match src="binary_expression [67957,67984]" dest="binary_expression [67964,67991]"/>
  <match src="identifier: quantity [48450,48458]" dest="identifier: quantity [48450,48458]"/>
  <match src="call_expression [80604,80626]" dest="call_expression [80611,80633]"/>
  <match src="inline_array_expression [62551,62557]" dest="inline_array_expression [62558,62564]"/>
  <match src="==: == [72301,72303]" dest="==: == [72308,72310]"/>
  <match src="block_statement [32655,32941]" dest="block_statement [32655,32941]"/>
  <match src="identifier: require [67025,67032]" dest="identifier: require [67032,67039]"/>
  <match src="number_literal: 0 [7635,7636]" dest="number_literal: 0 [7635,7636]"/>
  <match src="parameter [64438,64458]" dest="parameter [64445,64465]"/>
  <match src="identifier: ids [80648,80651]" dest="identifier: ids [80655,80658]"/>
  <match src="call_expression [39369,39405]" dest="call_expression [39369,39405]"/>
  <match src="number_literal: 209 [62777,62780]" dest="number_literal: 209 [62784,62787]"/>
  <match src=",: , [64604,64605]" dest=",: , [64611,64612]"/>
  <match src="view: view [38387,38391]" dest="view: view [38387,38391]"/>
  <match src="memory: memory [579,585]" dest="memory: memory [579,585]"/>
  <match src="expression_statement [72985,73024]" dest="expression_statement [72992,73031]"/>
  <match src="assignment_expression [63250,63275]" dest="assignment_expression [63257,63282]"/>
  <match src="comment: /**      * @dev Safely transfers `tokenId` token from `from` to `to`.      *      * Requirements:      *      * - `from` cannot be the zero address.      * - `to` cannot be the zero address.      * - `tokenId` token must exist and be owned by `from`.      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.      *      * Emits a {Transfer} event.      */ [22255,22823]" dest="comment: /**      * @dev Safely transfers `tokenId` token from `from` to `to`.      *      * Requirements:      *      * - `from` cannot be the zero address.      * - `to` cannot be the zero address.      * - `tokenId` token must exist and be owned by `from`.      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.      *      * Emits a {Transfer} event.      */ [22255,22823]"/>
  <match src="call_expression [13461,13484]" dest="call_expression [13461,13484]"/>
  <match src="binary_expression [45950,45970]" dest="binary_expression [45950,45970]"/>
  <match src="return_type_definition [24267,24290]" dest="return_type_definition [24267,24290]"/>
  <match src="parameter [57848,57864]" dest="parameter [57848,57864]"/>
  <match src="member_expression [79128,79151]" dest="member_expression [79135,79158]"/>
  <match src="identifier: t [75452,75453]" dest="identifier: t [75459,75460]"/>
  <match src="user_defined_type [34729,34736]" dest="user_defined_type [34729,34736]"/>
  <match src="type_name [80310,80317]" dest="type_name [80317,80324]"/>
  <match src="primitive_type [54984,54991]" dest="primitive_type [54984,54991]"/>
  <match src="string [67853,67880]" dest="string [67860,67887]"/>
  <match src="string_literal [45277,45314]" dest="string_literal [45277,45314]"/>
  <match src="comment: // for contracts in construction, since the code is only stored at the end [25917,25991]" dest="comment: // for contracts in construction, since the code is only stored at the end [25917,25991]"/>
  <match src="call_argument [52137,52142]" dest="call_argument [52137,52142]"/>
  <match src="}: } [57893,57894]" dest="}: } [57893,57894]"/>
  <match src="parameter [12798,12808]" dest="parameter [12798,12808]"/>
  <match src="type_name [7570,7575]" dest="type_name [7570,7575]"/>
  <match src="return_type_definition [38791,38808]" dest="return_type_definition [38791,38808]"/>
  <match src="returns: returns [3265,3272]" dest="returns: returns [3265,3272]"/>
  <match src="): ) [8714,8715]" dest="): ) [8714,8715]"/>
  <match src="type_name [35925,35932]" dest="type_name [35925,35932]"/>
  <match src="interface_declaration [5034,5938]" dest="interface_declaration [5034,5938]"/>
  <match src="array_access [80945,80958]" dest="array_access [80952,80965]"/>
  <match src="call_expression [46779,46794]" dest="call_expression [46779,46794]"/>
  <match src="identifier: accessory [78235,78244]" dest="identifier: accessory [78242,78251]"/>
  <match src="modifier_definition [60937,61254]" dest="modifier_definition [60944,61261]"/>
  <match src="primitive_type [15248,15255]" dest="primitive_type [15248,15255]"/>
  <match src="call_argument [80427,80447]" dest="call_argument [80434,80454]"/>
  <match src="expression_statement [7792,7804]" dest="expression_statement [7792,7804]"/>
  <match src="(: ( [41162,41163]" dest="(: ( [41162,41163]"/>
  <match src="modifier_invocation [68901,68911]" dest="modifier_invocation [68908,68918]"/>
  <match src="): ) [52430,52431]" dest="): ) [52430,52431]"/>
  <match src="memory: memory [55981,55987]" dest="memory: memory [55981,55987]"/>
  <match src="function_definition [1389,1449]" dest="function_definition [1389,1449]"/>
  <match src="interface: interface [364,373]" dest="interface: interface [364,373]"/>
  <match src="array_access [41123,41140]" dest="array_access [41123,41140]"/>
  <match src="unary_expression [46836,46848]" dest="unary_expression [46836,46848]"/>
  <match src="}: } [51862,51863]" dest="}: } [51862,51863]"/>
  <match src="identifier: getTokenTraits [5388,5402]" dest="identifier: getTokenTraits [5388,5402]"/>
  <match src="type_name [64438,64444]" dest="type_name [64445,64451]"/>
  <match src="identifier: commoners [79221,79230]" dest="identifier: commoners [79228,79237]"/>
  <match src="variable_declaration [12349,12367]" dest="variable_declaration [12349,12367]"/>
  <match src="call_argument [7845,7879]" dest="call_argument [7845,7879]"/>
  <match src="view: view [5503,5507]" dest="view: view [5503,5507]"/>
  <match src="': ' [43312,43313]" dest="': ' [43312,43313]"/>
  <match src="identifier: _transfer [45394,45403]" dest="identifier: _transfer [45394,45403]"/>
  <match src="expression_statement [51774,51829]" dest="expression_statement [51774,51829]"/>
  <match src="identifier: newOwner [65176,65184]" dest="identifier: newOwner [65183,65191]"/>
  <match src="return_type_definition [46746,46760]" dest="return_type_definition [46746,46760]"/>
  <match src="bytes32: bytes32 [17214,17221]" dest="bytes32: bytes32 [17214,17221]"/>
  <match src="return_statement [11291,11322]" dest="return_statement [11291,11322]"/>
  <match src="primitive_type [77275,77281]" dest="primitive_type [77282,77288]"/>
  <match src=",: , [30460,30461]" dest=",: , [30460,30461]"/>
  <match src="primitive_type [80684,80691]" dest="primitive_type [80691,80698]"/>
  <match src="assignment_expression [77333,77384]" dest="assignment_expression [77340,77391]"/>
  <match src="): ) [60752,60753]" dest="): ) [60759,60760]"/>
  <match src="identifier: svgOffhand [688,698]" dest="identifier: svgOffhand [688,698]"/>
  <match src="variable_declaration [74802,74815]" dest="variable_declaration [74809,74822]"/>
  <match src="identifier: owner [43619,43624]" dest="identifier: owner [43619,43624]"/>
  <match src="bytes4: bytes4 [23894,23900]" dest="bytes4: bytes4 [23894,23900]"/>
  <match src="expression_statement [61529,61571]" dest="expression_statement [61536,61578]"/>
  <match src="binary_expression [74490,74514]" dest="binary_expression [74497,74521]"/>
  <match src="}: } [6493,6494]" dest="}: } [6493,6494]"/>
  <match src="identifier: t [77251,77252]" dest="identifier: t [77258,77259]"/>
  <match src=",: , [51904,51905]" dest=",: , [51904,51905]"/>
  <match src="state_mutability [67798,67805]" dest="state_mutability [67805,67812]"/>
  <match src=",: , [57785,57786]" dest=",: , [57785,57786]"/>
  <match src="visibility [52094,52102]" dest="visibility [52094,52102]"/>
  <match src="primitive_type [60381,60386]" dest="primitive_type [60388,60393]"/>
  <match src="{: { [7559,7560]" dest="{: { [7559,7560]"/>
  <match src="function_body [30870,31103]" dest="function_body [30870,31103]"/>
  <match src="(: ( [51899,51900]" dest="(: ( [51899,51900]"/>
  <match src=",: , [13479,13480]" dest=",: , [13479,13480]"/>
  <match src=",: , [860,861]" dest=",: , [860,861]"/>
  <match src="return_statement [13076,13109]" dest="return_statement [13076,13109]"/>
  <match src="external: external [21560,21568]" dest="external: external [21560,21568]"/>
  <match src="address: address [3497,3504]" dest="address: address [3497,3504]"/>
  <match src="call_argument [67836,67851]" dest="call_argument [67843,67858]"/>
  <match src="identifier: success [32038,32045]" dest="identifier: success [32038,32045]"/>
  <match src="): ) [50087,50088]" dest="): ) [50087,50088]"/>
  <match src="function_body [40611,40659]" dest="function_body [40611,40659]"/>
  <match src="visibility [40602,40610]" dest="visibility [40602,40610]"/>
  <match src="(: ( [30089,30090]" dest="(: ( [30089,30090]"/>
  <match src="call_expression [67283,67320]" dest="call_expression [67290,67327]"/>
  <match src="call_expression [15688,15713]" dest="call_expression [15688,15713]"/>
  <match src="primitive_type [1073,1078]" dest="primitive_type [1073,1078]"/>
  <match src="primitive_type [12873,12880]" dest="primitive_type [12873,12880]"/>
  <match src="call_argument [46010,46022]" dest="call_argument [46010,46022]"/>
  <match src="assignment_expression [61806,61829]" dest="assignment_expression [61813,61836]"/>
  <match src="array_access [71246,71269]" dest="array_access [71253,71276]"/>
  <match src="array_access [79323,79341]" dest="array_access [79330,79348]"/>
  <match src="yul_decimal_number: 32 [56188,56190]" dest="yul_decimal_number: 32 [56188,56190]"/>
  <match src="augmented_assignment_expression [77229,77240]" dest="augmented_assignment_expression [77236,77247]"/>
  <match src="identifier: saleStatus [63731,63741]" dest="identifier: saleStatus [63738,63748]"/>
  <match src=".: . [71929,71930]" dest=".: . [71936,71937]"/>
  <match src="binary_expression [45330,45346]" dest="binary_expression [45330,45346]"/>
  <match src="}: } [56233,56234]" dest="}: } [56233,56234]"/>
  <match src="number_literal: 255 [62523,62526]" dest="number_literal: 255 [62530,62533]"/>
  <match src="call_expression [65920,65979]" dest="call_expression [65927,65986]"/>
  <match src="(: ( [30855,30856]" dest="(: ( [30855,30856]"/>
  <match src="call_argument [7319,7324]" dest="call_argument [7319,7324]"/>
  <match src="): ) [69539,69540]" dest="): ) [69546,69547]"/>
  <match src="primitive_type [36167,36174]" dest="primitive_type [36167,36174]"/>
  <match src=",: , [64415,64416]" dest=",: , [64422,64423]"/>
  <match src="member_expression [68557,68607]" dest="member_expression [68564,68614]"/>
  <match src="): ) [249,250]" dest="): ) [249,250]"/>
  <match src="number_literal: 1 [66774,66775]" dest="number_literal: 1 [66781,66782]"/>
  <match src="call_argument [55847,55852]" dest="call_argument [55847,55852]"/>
  <match src="&quot;: &quot; [8892,8893]" dest="&quot;: &quot; [8892,8893]"/>
  <match src="comment: // Catharine Von Schbeagle, Savant of Science [71333,71378]" dest="comment: // Catharine Von Schbeagle, Savant of Science [71340,71385]"/>
  <match src="address: address [43401,43408]" dest="address: address [43401,43408]"/>
  <match src="type_name [31373,31378]" dest="type_name [31373,31378]"/>
  <match src="(: ( [42368,42369]" dest="(: ( [42368,42369]"/>
  <match src=",: , [79299,79300]" dest=",: , [79306,79307]"/>
  <match src="parameter [56956,56968]" dest="parameter [56956,56968]"/>
  <match src="tuple_expression [15247,15290]" dest="tuple_expression [15247,15290]"/>
  <match src="&quot;: &quot; [67492,67493]" dest="&quot;: &quot; [67499,67500]"/>
  <match src=",: , [15555,15556]" dest=",: , [15555,15556]"/>
  <match src="primitive_type [22935,22940]" dest="primitive_type [22935,22940]"/>
  <match src="call_argument [29937,29968]" dest="call_argument [29937,29968]"/>
  <match src="call_argument [64861,64880]" dest="call_argument [64868,64887]"/>
  <match src="parameter [76361,76376]" dest="parameter [76368,76383]"/>
  <match src="(: ( [39540,39541]" dest="(: ( [39540,39541]"/>
  <match src="number_literal: 1 [54629,54630]" dest="number_literal: 1 [54629,54630]"/>
  <match src="primitive_type [55760,55764]" dest="primitive_type [55760,55764]"/>
  <match src="identifier: to [43734,43736]" dest="identifier: to [43734,43736]"/>
  <match src="): ) [52771,52772]" dest="): ) [52771,52772]"/>
  <match src="primitive_type [30962,30966]" dest="primitive_type [30962,30966]"/>
  <match src="type_cast_expression [39574,39584]" dest="type_cast_expression [39574,39584]"/>
  <match src="parameter [13760,13772]" dest="parameter [13760,13772]"/>
  <match src="(: ( [42098,42099]" dest="(: ( [42098,42099]"/>
  <match src="array_access [79535,79553]" dest="array_access [79542,79560]"/>
  <match src="call_argument [67129,67171]" dest="call_argument [67136,67178]"/>
  <match src="type_cast_expression [77359,77380]" dest="type_cast_expression [77366,77387]"/>
  <match src="): ) [38807,38808]" dest="): ) [38807,38808]"/>
  <match src="number_literal: 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 [14792,14858]" dest="number_literal: 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 [14792,14858]"/>
  <match src=".: . [44850,44851]" dest=".: . [44850,44851]"/>
  <match src="visibility [63661,63667]" dest="visibility [63668,63674]"/>
  <match src="comment: //     function pull(address owner, uint256[] calldata ids) external; [2520,2589]" dest="comment: //     function pull(address owner, uint256[] calldata ids) external; [2520,2589]"/>
  <match src="call_expression [48789,48804]" dest="call_expression [48789,48804]"/>
  <match src="call_expression [54581,54631]" dest="call_expression [54581,54631]"/>
  <match src="]: ] [62526,62527]" dest="]: ] [62533,62534]"/>
  <match src="identifier: adjust [80677,80683]" dest="identifier: adjust [80684,80690]"/>
  <match src=",: , [74914,74915]" dest=",: , [74921,74922]"/>
  <match src="number_literal: 0 [63396,63397]" dest="number_literal: 0 [63403,63404]"/>
  <match src="user_defined_type [24156,24163]" dest="user_defined_type [24156,24163]"/>
  <match src="call_argument [68698,68707]" dest="call_argument [68705,68714]"/>
  <match src="identifier: acc [61005,61008]" dest="identifier: acc [61012,61015]"/>
  <match src="identifier: interfaceId [18161,18172]" dest="identifier: interfaceId [18161,18172]"/>
  <match src="constant: constant [6019,6027]" dest="constant: constant [6019,6027]"/>
  <match src="if: if [71303,71305]" dest="if: if [71310,71312]"/>
  <match src="parameter [1747,1769]" dest="parameter [1747,1769]"/>
  <match src="call_expression [30881,30948]" dest="call_expression [30881,30948]"/>
  <match src="): ) [40288,40289]" dest="): ) [40288,40289]"/>
  <match src="call_argument [46188,46189]" dest="call_argument [46188,46189]"/>
  <match src="type_name [22888,22895]" dest="type_name [22888,22895]"/>
  <match src="assignment_expression [62503,62527]" dest="assignment_expression [62510,62534]"/>
  <match src="type_name [3597,3604]" dest="type_name [3597,3604]"/>
  <match src="): ) [38378,38379]" dest="): ) [38378,38379]"/>
  <match src=".: . [40118,40119]" dest=".: . [40118,40119]"/>
  <match src="identifier: ERC20Like [64329,64338]" dest="identifier: ERC20Like [64336,64345]"/>
  <match src="identifier: sender [65141,65147]" dest="identifier: sender [65148,65154]"/>
  <match src="comment: //     uint8 accessory; Dogewood Royal Scepter [73589,73635]" dest="comment: //     uint8 accessory; Dogewood Royal Scepter [73596,73642]"/>
  <match src="): ) [74301,74302]" dest="): ) [74308,74309]"/>
  <match src="parameter [3692,3706]" dest="parameter [3692,3706]"/>
  <match src="binary_expression [54127,54154]" dest="binary_expression [54127,54154]"/>
  <match src="call_expression [78792,78803]" dest="call_expression [78799,78810]"/>
  <match src="uint256: uint256 [80478,80485]" dest="uint256: uint256 [80485,80492]"/>
  <match src="returns: returns [563,570]" dest="returns: returns [563,570]"/>
  <match src="external: external [65252,65260]" dest="external: external [65259,65267]"/>
  <match src="string [67097,67107]" dest="string [67104,67114]"/>
  <match src="type_name [36635,36641]" dest="type_name [36635,36641]"/>
  <match src="identifier: length [7606,7612]" dest="identifier: length [7606,7612]"/>
  <match src="bool: bool [52412,52416]" dest="bool: bool [52412,52416]"/>
  <match src="): ) [21558,21559]" dest="): ) [21558,21559]"/>
  <match src="]: ] [63400,63401]" dest="]: ] [63407,63408]"/>
  <match src="identifier: msg [66083,66086]" dest="identifier: msg [66090,66093]"/>
  <match src=".: . [29838,29839]" dest=".: . [29838,29839]"/>
  <match src="(: ( [22854,22855]" dest="(: ( [22854,22855]"/>
  <match src="augmented_assignment_expression [48415,48459]" dest="augmented_assignment_expression [48415,48459]"/>
  <match src="string_literal [65961,65978]" dest="string_literal [65968,65985]"/>
  <match src="=: = [80964,80965]" dest="=: = [80971,80972]"/>
  <match src=",: , [62693,62694]" dest=",: , [62700,62701]"/>
  <match src="false: false [74916,74921]" dest="false: false [74923,74928]"/>
  <match src="inline_array_expression [62517,62527]" dest="inline_array_expression [62524,62534]"/>
  <match src="(: ( [28638,28639]" dest="(: ( [28638,28639]"/>
  <match src="): ) [8771,8772]" dest="): ) [8771,8772]"/>
  <match src=",: , [872,873]" dest=",: , [872,873]"/>
  <match src="external: external [5581,5589]" dest="external: external [5581,5589]"/>
  <match src="{: { [44190,44191]" dest="{: { [44190,44191]"/>
  <match src="call_expression [55781,55853]" dest="call_expression [55781,55853]"/>
  <match src=",: , [47804,47805]" dest=",: , [47804,47805]"/>
  <match src="number_literal: 0 [66827,66828]" dest="number_literal: 0 [66834,66835]"/>
  <match src="type_name [32401,32407]" dest="type_name [32401,32407]"/>
  <match src="identifier: signer_ [67601,67608]" dest="identifier: signer_ [67608,67615]"/>
  <match src="}: } [38659,38660]" dest="}: } [38659,38660]"/>
  <match src=",: , [79459,79460]" dest=",: , [79466,79467]"/>
  <match src="uint16: uint16 [65867,65873]" dest="uint16: uint16 [65874,65880]"/>
  <match src="type_name [1051,1056]" dest="type_name [1051,1056]"/>
  <match src="(: ( [11244,11245]" dest="(: ( [11244,11245]"/>
  <match src="call_argument [11309,11313]" dest="call_argument [11309,11313]"/>
  <match src="): ) [13406,13407]" dest="): ) [13406,13407]"/>
  <match src="memory: memory [78911,78917]" dest="memory: memory [78918,78924]"/>
  <match src="primitive_type [45816,45823]" dest="primitive_type [45816,45823]"/>
  <match src="): ) [54154,54155]" dest="): ) [54154,54155]"/>
  <match src="true [61658,61662]" dest="true [61665,61669]"/>
  <match src="visibility [40041,40049]" dest="visibility [40041,40049]"/>
  <match src="call_argument [13094,13098]" dest="call_argument [13094,13098]"/>
  <match src="parameter [13870,13882]" dest="parameter [13870,13882]"/>
  <match src="=: = [65174,65175]" dest="=: = [65181,65182]"/>
  <match src="parameter [61481,61495]" dest="parameter [61488,61502]"/>
  <match src="': ' [45676,45677]" dest="': ' [45676,45677]"/>
  <match src="block_statement [49312,49400]" dest="block_statement [49312,49400]"/>
  <match src="yul_path [11194,11203]" dest="yul_path [11194,11203]"/>
  <match src="comment: /**      * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.      */ [7349,7463]" dest="comment: /**      * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.      */ [7349,7463]"/>
  <match src="parameter [80736,80750]" dest="parameter [80743,80757]"/>
  <match src="emit_statement [49335,49381]" dest="emit_statement [49335,49381]"/>
  <match src="primitive_type [47376,47383]" dest="primitive_type [47376,47383]"/>
  <match src="if_statement [51479,51863]" dest="if_statement [51479,51863]"/>
  <match src="&quot;: &quot; [80460,80461]" dest="&quot;: &quot; [80467,80468]"/>
  <match src="identifier: recover [13297,13304]" dest="identifier: recover [13297,13304]"/>
  <match src="address: address [28119,28126]" dest="address: address [28119,28126]"/>
  <match src=",: , [16798,16799]" dest=",: , [16798,16799]"/>
  <match src="identifier: tryRecover [12371,12381]" dest="identifier: tryRecover [12371,12381]"/>
  <match src="variable_declaration [80478,80491]" dest="variable_declaration [80485,80498]"/>
  <match src="number_literal: 7 [62353,62354]" dest="number_literal: 7 [62360,62361]"/>
  <match src="array_access [71800,71823]" dest="array_access [71807,71830]"/>
  <match src="type_name [4485,4492]" dest="type_name [4485,4492]"/>
  <match src="primitive_type [5517,5524]" dest="primitive_type [5517,5524]"/>
  <match src="=: = [77677,77678]" dest="=: = [77684,77685]"/>
  <match src="parameter [5604,5608]" dest="parameter [5604,5608]"/>
  <match src="expression_statement [51929,51972]" dest="expression_statement [51929,51972]"/>
  <match src="identifier: seed [77035,77039]" dest="identifier: seed [77042,77046]"/>
  <match src="comment: /**      * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}      * by `operator` from `from`, this function is called.      *      * It must return its Solidity selector to confirm the token transfer.      * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.      *      * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.      */ [23238,23731]" dest="comment: /**      * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}      * by `operator` from `from`, this function is called.      *      * It must return its Solidity selector to confirm the token transfer.      * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.      *      * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.      */ [23238,23731]"/>
  <match src="): ) [43700,43701]" dest="): ) [43700,43701]"/>
  <match src="expression_statement [64321,64343]" dest="expression_statement [64328,64350]"/>
  <match src="identifier: Strings [35913,35920]" dest="identifier: Strings [35913,35920]"/>
  <match src="(: ( [63822,63823]" dest="(: ( [63829,63830]"/>
  <match src="}: } [22973,22974]" dest="}: } [22973,22974]"/>
  <match src="identifier: seed [77698,77702]" dest="identifier: seed [77705,77709]"/>
  <match src="yul_hex_number: 0x60 [10840,10844]" dest="yul_hex_number: 0x60 [10840,10844]"/>
  <match src="): ) [32470,32471]" dest="): ) [32470,32471]"/>
  <match src="visibility [57872,57880]" dest="visibility [57872,57880]"/>
  <match src="type_name [24587,24593]" dest="type_name [24587,24593]"/>
  <match src="assignment_expression [67203,67272]" dest="assignment_expression [67210,67279]"/>
  <match src="): ) [69592,69593]" dest="): ) [69599,69600]"/>
  <match src="function_definition [3475,3547]" dest="function_definition [3475,3547]"/>
  <match src="bytes: bytes [29172,29177]" dest="bytes: bytes [29172,29177]"/>
  <match src="expression_statement [71192,71228]" dest="expression_statement [71199,71235]"/>
  <match src="primitive_type [724,730]" dest="primitive_type [724,730]"/>
  <match src="member_expression [16800,16816]" dest="member_expression [16800,16816]"/>
  <match src="identifier: tokenNo_ [68370,68378]" dest="identifier: tokenNo_ [68377,68385]"/>
  <match src="type_name [6535,6542]" dest="type_name [6535,6542]"/>
  <match src="binary_expression [73268,73274]" dest="binary_expression [73275,73281]"/>
  <match src="number_literal: 7 [62347,62348]" dest="number_literal: 7 [62354,62355]"/>
  <match src="*: * [69558,69559]" dest="*: * [69565,69566]"/>
  <match src="{: { [43294,43295]" dest="{: { [43294,43295]"/>
  <match src=".: . [67222,67223]" dest=".: . [67229,67230]"/>
  <match src="bytes32: bytes32 [78040,78047]" dest="bytes32: bytes32 [78047,78054]"/>
  <match src="binary_expression [44714,44744]" dest="binary_expression [44714,44744]"/>
  <match src="): ) [66465,66466]" dest="): ) [66472,66473]"/>
  <match src="type_name [21960,21967]" dest="type_name [21960,21967]"/>
  <match src="expression_statement [53436,53466]" dest="expression_statement [53436,53466]"/>
  <match src="}: } [51873,51874]" dest="}: } [51873,51874]"/>
  <match src="call_expression [78930,78967]" dest="call_expression [78937,78974]"/>
  <match src="identifier: groupIndex [4521,4531]" dest="identifier: groupIndex [4521,4531]"/>
  <match src="binary_expression [66159,66183]" dest="binary_expression [66166,66190]"/>
  <match src="identifier: supportsInterface [39117,39134]" dest="identifier: supportsInterface [39117,39134]"/>
  <match src="{: { [32546,32547]" dest="{: { [32546,32547]"/>
  <match src="identifier: operator [44369,44377]" dest="identifier: operator [44369,44377]"/>
  <match src="(: ( [11308,11309]" dest="(: ( [11308,11309]"/>
  <match src="parameter [43895,43902]" dest="parameter [43895,43902]"/>
  <match src="memory: memory [731,737]" dest="memory: memory [731,737]"/>
  <match src="identifier: data [28225,28229]" dest="identifier: data [28225,28229]"/>
  <match src="interface: interface [5034,5043]" dest="interface: interface [5034,5043]"/>
  <match src="{: { [24765,24766]" dest="{: { [24765,24766]"/>
  <match src=",: , [15664,15665]" dest=",: , [15664,15665]"/>
  <match src="string [8621,8647]" dest="string [8621,8647]"/>
  <match src=",: , [62414,62415]" dest=",: , [62421,62422]"/>
  <match src="comment: // The number of tokens burned. [37089,37120]" dest="comment: // The number of tokens burned. [37089,37120]"/>
  <match src="function_definition [5466,5526]" dest="function_definition [5466,5526]"/>
  <match src="): ) [42966,42967]" dest="): ) [42966,42967]"/>
  <match src="identifier: require [66858,66865]" dest="identifier: require [66865,66872]"/>
  <match src="identifier: to_ [65468,65471]" dest="identifier: to_ [65475,65478]"/>
  <match src="): ) [77468,77469]" dest="): ) [77475,77476]"/>
  <match src="type_name [28172,28177]" dest="type_name [28172,28177]"/>
  <match src="array_access [81327,81340]" dest="array_access [81334,81347]"/>
  <match src="identifier: clothes [79342,79349]" dest="identifier: clothes [79349,79356]"/>
  <match src=",: , [69301,69302]" dest=",: , [69308,69309]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [29374,29616]" dest="comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [29374,29616]"/>
  <match src="function_body [64842,64920]" dest="function_body [64849,64927]"/>
  <match src="[: [ [59438,59439]" dest="[: [ [59445,59446]"/>
  <match src="identifier: nextTokenId [54322,54333]" dest="identifier: nextTokenId [54322,54333]"/>
  <match src="identifier: topCommoner_ [71033,71045]" dest="identifier: topCommoner_ [71040,71052]"/>
  <match src="parameter [468,492]" dest="parameter [468,492]"/>
  <match src="comment: // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value [14371,14482]" dest="comment: // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value [14371,14482]"/>
  <match src="address: address [31724,31731]" dest="address: address [31724,31731]"/>
  <match src="]: ] [75502,75503]" dest="]: ] [75509,75510]"/>
  <match src="[: [ [68287,68288]" dest="[: [ [68294,68295]"/>
  <match src="string_literal [74912,74914]" dest="string_literal [74919,74921]"/>
  <match src="/=: /= [6835,6837]" dest="/=: /= [6835,6837]"/>
  <match src="): ) [46112,46113]" dest="): ) [46112,46113]"/>
  <match src="type_name [4629,4635]" dest="type_name [4629,4635]"/>
  <match src="[: [ [76572,76573]" dest="[: [ [76579,76580]"/>
  <match src="): ) [4997,4998]" dest="): ) [4997,4998]"/>
  <match src="expression_statement [64028,64070]" dest="expression_statement [64035,64077]"/>
  <match src="identifier: toEthSignedMessageHash [16650,16672]" dest="identifier: toEthSignedMessageHash [16650,16672]"/>
  <match src="call_expression [64736,64764]" dest="call_expression [64743,64771]"/>
  <match src="string [27266,27326]" dest="string [27266,27326]"/>
  <match src="identifier: ERC721A [43473,43480]" dest="identifier: ERC721A [43473,43480]"/>
  <match src="yul_function_call [13038,13050]" dest="yul_function_call [13038,13050]"/>
  <match src="identifier: v [10900,10901]" dest="identifier: v [10900,10901]"/>
  <match src="call_argument [66866,66905]" dest="call_argument [66873,66912]"/>
  <match src="call_argument [48514,48522]" dest="call_argument [48514,48522]"/>
  <match src="}: } [55104,55105]" dest="}: } [55104,55105]"/>
  <match src=",: , [65775,65776]" dest=",: , [65782,65783]"/>
  <match src="view: view [5429,5433]" dest="view: view [5429,5433]"/>
  <match src="if: if [48017,48019]" dest="if: if [48017,48019]"/>
  <match src="number_literal: 132 [62829,62832]" dest="number_literal: 132 [62836,62839]"/>
  <match src="returns: returns [78883,78890]" dest="returns: returns [78890,78897]"/>
  <match src="uint64: uint64 [4666,4672]" dest="uint64: uint64 [4666,4672]"/>
  <match src="call_argument [66760,66775]" dest="call_argument [66767,66782]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [30140,30311]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [30140,30311]"/>
  <match src="type_name [51406,51420]" dest="type_name [51406,51420]"/>
  <match src="call_expression [16749,16830]" dest="call_expression [16749,16830]"/>
  <match src="return_type_definition [5434,5459]" dest="return_type_definition [5434,5459]"/>
  <match src="]: ] [55047,55048]" dest="]: ] [55047,55048]"/>
  <match src="(: ( [33640,33641]" dest="(: ( [33640,33641]"/>
  <match src="identifier: topCommoner_ [73986,73998]" dest="identifier: topCommoner_ [73993,74005]"/>
  <match src="function_definition [3218,3290]" dest="function_definition [3218,3290]"/>
  <match src="identifier: from [51747,51751]" dest="identifier: from [51747,51751]"/>
  <match src="type_name [17214,17221]" dest="type_name [17214,17221]"/>
  <match src="function_body [42555,42588]" dest="function_body [42555,42588]"/>
  <match src="identifier: selectTrait [77432,77443]" dest="identifier: selectTrait [77439,77450]"/>
  <match src="return: return [7300,7306]" dest="return: return [7300,7306]"/>
  <match src="member_expression [53701,53716]" dest="member_expression [53701,53716]"/>
  <match src=",: , [62409,62410]" dest=",: , [62416,62417]"/>
  <match src="uint64: uint64 [36534,36540]" dest="uint64: uint64 [36534,36540]"/>
  <match src="identifier: tokenId [79440,79447]" dest="identifier: tokenId [79447,79454]"/>
  <match src="uint256: uint256 [3981,3988]" dest="uint256: uint256 [3981,3988]"/>
  <match src="address: address [39496,39503]" dest="address: address [39496,39503]"/>
  <match src="identifier: s [78351,78352]" dest="identifier: s [78358,78359]"/>
  <match src="{: { [80857,80858]" dest="{: { [80864,80865]"/>
  <match src="{: { [12318,12319]" dest="{: { [12318,12319]"/>
  <match src="call_argument [14891,14892]" dest="call_argument [14891,14892]"/>
  <match src=",: , [62205,62206]" dest=",: , [62212,62213]"/>
  <match src="private: private [55005,55012]" dest="private: private [55005,55012]"/>
  <match src="uint8: uint8 [1117,1122]" dest="uint8: uint8 [1117,1122]"/>
  <match src="=: = [7695,7696]" dest="=: = [7695,7696]"/>
  <match src="block_statement [32947,33002]" dest="block_statement [32947,33002]"/>
  <match src="identifier: balance [39670,39677]" dest="identifier: balance [39670,39677]"/>
  <match src="): ) [42692,42693]" dest="): ) [42692,42693]"/>
  <match src="(: ( [17318,17319]" dest="(: ( [17318,17319]"/>
  <match src="parameter [1595,1615]" dest="parameter [1595,1615]"/>
  <match src="&quot;: &quot; [61750,61751]" dest="&quot;: &quot; [61757,61758]"/>
  <match src="string_literal [68215,68233]" dest="string_literal [68222,68240]"/>
  <match src="[: [ [79980,79981]" dest="[: [ [79987,79988]"/>
  <match src="primitive_type [12798,12805]" dest="primitive_type [12798,12805]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [28739,29100]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [28739,29100]"/>
  <match src=".: . [64293,64294]" dest=".: . [64300,64301]"/>
  <match src="string_literal [67916,67937]" dest="string_literal [67923,67944]"/>
  <match src="(: ( [46380,46381]" dest="(: ( [46380,46381]"/>
  <match src="): ) [753,754]" dest="): ) [753,754]"/>
  <match src="type_name [45080,45084]" dest="type_name [45080,45084]"/>
  <match src="expression_statement [70213,70242]" dest="expression_statement [70220,70249]"/>
  <match src="primitive_type [12262,12267]" dest="primitive_type [12262,12267]"/>
  <match src="emit: emit [74264,74268]" dest="emit: emit [74271,74275]"/>
  <match src="identifier: _approve [54918,54926]" dest="identifier: _approve [54918,54926]"/>
  <match src="state_mutability [2465,2469]" dest="state_mutability [2465,2469]"/>
  <match src="uint256: uint256 [59809,59816]" dest="uint256: uint256 [59816,59823]"/>
  <match src=",: , [516,517]" dest=",: , [516,517]"/>
  <match src="parameter [32401,32427]" dest="parameter [32401,32427]"/>
  <match src="variable_declaration_statement [12329,12399]" dest="variable_declaration_statement [12329,12399]"/>
  <match src="member_expression [73099,73131]" dest="member_expression [73106,73138]"/>
  <match src="return: return [41802,41808]" dest="return: return [41802,41808]"/>
  <match src="identifier: require [68267,68274]" dest="identifier: require [68274,68281]"/>
  <match src="view: view [39518,39522]" dest="view: view [39518,39522]"/>
  <match src="identifier: digits [6680,6686]" dest="identifier: digits [6680,6686]"/>
  <match src="-: - [69977,69978]" dest="-: - [69984,69985]"/>
  <match src="identifier: currSlot [53633,53641]" dest="identifier: currSlot [53633,53641]"/>
  <match src="call_argument [80876,80915]" dest="call_argument [80883,80922]"/>
  <match src="parameter [24547,24562]" dest="parameter [24547,24562]"/>
  <match src="call_argument [76439,76443]" dest="call_argument [76446,76450]"/>
  <match src="member_expression [73866,73898]" dest="member_expression [73873,73905]"/>
  <match src="(: ( [3236,3237]" dest="(: ( [3236,3237]"/>
  <match src=",: , [3690,3691]" dest=",: , [3690,3691]"/>
  <match src="parameter [3621,3635]" dest="parameter [3621,3635]"/>
  <match src="type_name [42677,42684]" dest="type_name [42677,42684]"/>
  <match src="array_access [66072,66081]" dest="array_access [66079,66088]"/>
  <match src="identifier: from [51950,51954]" dest="identifier: from [51950,51954]"/>
  <match src="using: using [35907,35912]" dest="using: using [35907,35912]"/>
  <match src="identifier: _approve [43725,43733]" dest="identifier: _approve [43725,43733]"/>
  <match src="primitive_type [41227,41234]" dest="primitive_type [41227,41234]"/>
  <match src="identifier: hash [12763,12767]" dest="identifier: hash [12763,12767]"/>
  <match src="identifier: startTimestamp [53677,53691]" dest="identifier: startTimestamp [53677,53691]"/>
  <match src="primitive_type [15147,15154]" dest="primitive_type [15147,15154]"/>
  <match src="function_body [79740,80107]" dest="function_body [79747,80114]"/>
  <match src="[: [ [59650,59651]" dest="[: [ [59657,59658]"/>
  <match src="): ) [40944,40945]" dest="): ) [40944,40945]"/>
  <match src="(: ( [80550,80551]" dest="(: ( [80557,80558]"/>
  <match src="visibility [1346,1354]" dest="visibility [1346,1354]"/>
  <match src="string [44238,44257]" dest="string [44238,44257]"/>
  <match src="primitive_type [18511,18518]" dest="primitive_type [18511,18518]"/>
  <match src="address: address [58137,58144]" dest="address: address [58137,58144]"/>
  <match src="external: external [5420,5428]" dest="external: external [5420,5428]"/>
  <match src="binary_expression [68171,68213]" dest="binary_expression [68178,68220]"/>
  <match src="external: external [64833,64841]" dest="external: external [64840,64848]"/>
  <match src="]: ] [62556,62557]" dest="]: ] [62563,62564]"/>
  <match src=",: , [32889,32890]" dest=",: , [32889,32890]"/>
  <match src="}: } [13547,13548]" dest="}: } [13547,13548]"/>
  <match src=".: . [71984,71985]" dest=".: . [71991,71992]"/>
  <match src="string_literal [29314,29357]" dest="string_literal [29314,29357]"/>
  <match src="if_statement [32483,33013]" dest="if_statement [32483,33013]"/>
  <match src="string [65961,65978]" dest="string [65968,65985]"/>
  <match src="if_statement [68130,68620]" dest="if_statement [68137,68627]"/>
  <match src="array_access [79484,79502]" dest="array_access [79491,79509]"/>
  <match src="state_mutability [76869,76873]" dest="state_mutability [76876,76880]"/>
  <match src="call_argument [46963,46971]" dest="call_argument [46963,46971]"/>
  <match src="parameter [52395,52410]" dest="parameter [52395,52410]"/>
  <match src="primitive_type [42914,42920]" dest="primitive_type [42914,42920]"/>
  <match src=",: , [45852,45853]" dest=",: , [45852,45853]"/>
  <match src="(: ( [65279,65280]" dest="(: ( [65286,65287]"/>
  <match src="parameter [12848,12860]" dest="parameter [12848,12860]"/>
  <match src="call_argument [67097,67107]" dest="call_argument [67104,67114]"/>
  <match src="||: || [45127,45129]" dest="||: || [45127,45129]"/>
  <match src="&amp;: &amp; [77703,77704]" dest="&amp;: &amp; [77710,77711]"/>
  <match src="comment: //     uint8 background; The War Room [73653,73690]" dest="comment: //     uint8 background; The War Room [73660,73697]"/>
  <match src="calldata: calldata [80336,80344]" dest="calldata: calldata [80343,80351]"/>
  <match src="type_name [13801,13808]" dest="type_name [13801,13808]"/>
  <match src="calldata: calldata [3051,3059]" dest="calldata: calldata [3051,3059]"/>
  <match src="returns: returns [16137,16144]" dest="returns: returns [16137,16144]"/>
  <match src="string_literal [80917,80933]" dest="string_literal [80924,80940]"/>
  <match src="call_expression [80370,80407]" dest="call_expression [80377,80414]"/>
  <match src="expression_statement [61730,61752]" dest="expression_statement [61737,61759]"/>
  <match src=",: , [30359,30360]" dest=",: , [30359,30360]"/>
  <match src="identifier: id [3688,3690]" dest="identifier: id [3688,3690]"/>
  <match src="identifier: RecoverError [8803,8815]" dest="identifier: RecoverError [8803,8815]"/>
  <match src="(: ( [12838,12839]" dest="(: ( [12838,12839]"/>
  <match src="identifier: r [13478,13479]" dest="identifier: r [13478,13479]"/>
  <match src="(: ( [6800,6801]" dest="(: ( [6800,6801]"/>
  <match src="return_statement [43305,43315]" dest="return_statement [43305,43315]"/>
  <match src="': ' [74913,74914]" dest="': ' [74920,74921]"/>
  <match src=",: , [64055,64056]" dest=",: , [64062,64063]"/>
  <match src="returns: returns [13852,13859]" dest="returns: returns [13852,13859]"/>
  <match src="comment: // error MintToZeroAddress(); [35487,35516]" dest="comment: // error MintToZeroAddress(); [35487,35516]"/>
  <match src="call_argument [45414,45421]" dest="call_argument [45414,45421]"/>
  <match src="): ) [67500,67501]" dest="): ) [67507,67508]"/>
  <match src="state_variable_declaration [37550,37603]" dest="state_variable_declaration [37550,37603]"/>
  <match src="identifier: sender [80880,80886]" dest="identifier: sender [80887,80893]"/>
  <match src="=: = [49472,49473]" dest="=: = [49472,49473]"/>
  <match src="identifier: ICommoner [76883,76892]" dest="identifier: ICommoner [76890,76899]"/>
  <match src="': ' [43313,43314]" dest="': ' [43313,43314]"/>
  <match src="call_argument [50452,50454]" dest="call_argument [50452,50454]"/>
  <match src="primitive_type [1570,1577]" dest="primitive_type [1570,1577]"/>
  <match src="identifier: recover [12240,12247]" dest="identifier: recover [12240,12247]"/>
  <match src="identifier: s [15594,15595]" dest="identifier: s [15594,15595]"/>
  <match src="&quot;: &quot; [49027,49028]" dest="&quot;: &quot; [49027,49028]"/>
  <match src="call_argument [10906,10907]" dest="call_argument [10906,10907]"/>
  <match src="): ) [5924,5925]" dest="): ) [5924,5925]"/>
  <match src="): ) [15712,15713]" dest="): ) [15712,15713]"/>
  <match src="identifier: t [77667,77668]" dest="identifier: t [77674,77675]"/>
  <match src="identifier: IDogewood [61851,61860]" dest="identifier: IDogewood [61858,61867]"/>
  <match src="comment: /**  * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.  *  * These functions can be used to verify that a message was signed by the holder  * of the private keys of a given address.  */ [7992,8202]" dest="comment: /**  * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.  *  * These functions can be used to verify that a message was signed by the holder  * of the private keys of a given address.  */ [7992,8202]"/>
  <match src="identifier: msg [64036,64039]" dest="identifier: msg [64043,64046]"/>
  <match src="function_definition [40003,40140]" dest="function_definition [40003,40140]"/>
  <match src="identifier: TokenPartner [64580,64592]" dest="identifier: TokenPartner [64587,64599]"/>
  <match src="parameter [29147,29161]" dest="parameter [29147,29161]"/>
  <match src="identifier: setPartnerToken [64367,64382]" dest="identifier: setPartnerToken [64374,64389]"/>
  <match src="comment: //     uint8 palette; 1 [71484,71507]" dest="comment: //     uint8 palette; 1 [71491,71514]"/>
  <match src="call_expression [68923,68976]" dest="call_expression [68930,68983]"/>
  <match src="): ) [4872,4873]" dest="): ) [4872,4873]"/>
  <match src="string_literal [67853,67880]" dest="string_literal [67860,67887]"/>
  <match src="binary_expression [66946,66990]" dest="binary_expression [66953,66997]"/>
  <match src="call_expression [64516,64544]" dest="call_expression [64523,64551]"/>
  <match src=",: , [80386,80387]" dest=",: , [80393,80394]"/>
  <match src="assignment_expression [72769,72802]" dest="assignment_expression [72776,72809]"/>
  <match src="{: { [997,998]" dest="{: { [997,998]"/>
  <match src="call_argument [64162,64215]" dest="call_argument [64169,64222]"/>
  <match src="visibility [16123,16131]" dest="visibility [16123,16131]"/>
  <match src="type_name [57848,57855]" dest="type_name [57848,57855]"/>
  <match src="(: ( [77281,77282]" dest="(: ( [77288,77289]"/>
  <match src="call_argument [52702,52714]" dest="call_argument [52702,52714]"/>
  <match src="[: [ [59440,59441]" dest="[: [ [59447,59448]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [28280,28496]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [28280,28496]"/>
  <match src="assignment_expression [71800,71833]" dest="assignment_expression [71807,71840]"/>
  <match src="memory: memory [28594,28600]" dest="memory: memory [28594,28600]"/>
  <match src="): ) [30906,30907]" dest="): ) [30906,30907]"/>
  <match src="member_expression [42921,42937]" dest="member_expression [42921,42937]"/>
  <match src="parameter [64250,64260]" dest="parameter [64257,64267]"/>
  <match src="]: ] [68428,68429]" dest="]: ] [68435,68436]"/>
  <match src="number_literal: 8 [63258,63259]" dest="number_literal: 8 [63265,63266]"/>
  <match src="primitive_type [4827,4833]" dest="primitive_type [4827,4833]"/>
  <match src="interface: interface [67,76]" dest="interface: interface [67,76]"/>
  <match src="call_argument [75469,75473]" dest="call_argument [75476,75480]"/>
  <match src="member_expression [41164,41180]" dest="member_expression [41164,41180]"/>
  <match src="binary_expression [44205,44229]" dest="binary_expression [44205,44229]"/>
  <match src="interface_declaration [3554,3720]" dest="interface_declaration [3554,3720]"/>
  <match src="identifier: user [67370,67374]" dest="identifier: user [67377,67381]"/>
  <match src="identifier: quantity_ [66976,66985]" dest="identifier: quantity_ [66983,66992]"/>
  <match src="struct_member [5224,5238]" dest="struct_member [5224,5238]"/>
  <match src="block_statement [56126,56249]" dest="block_statement [56126,56249]"/>
  <match src="inheritance_specifier [34521,34528]" dest="inheritance_specifier [34521,34528]"/>
  <match src="+: + [68392,68393]" dest="+: + [68399,68400]"/>
  <match src="&quot;: &quot; [67190,67191]" dest="&quot;: &quot; [67197,67198]"/>
  <match src="state_mutability [19108,19112]" dest="state_mutability [19108,19112]"/>
  <match src=",: , [44506,44507]" dest=",: , [44506,44507]"/>
  <match src="type_name [3788,3795]" dest="type_name [3788,3795]"/>
  <match src="): ) [3870,3871]" dest="): ) [3870,3871]"/>
  <match src="returns: returns [81506,81513]" dest="returns: returns [81513,81520]"/>
  <match src="call_argument [76971,76972]" dest="call_argument [76978,76979]"/>
  <match src="function_definition [64358,64677]" dest="function_definition [64365,64684]"/>
  <match src="type_name [59645,59650]" dest="type_name [59652,59657]"/>
  <match src="comment: //     uint8 breed; Pitbull [70457,70484]" dest="comment: //     uint8 breed; Pitbull [70464,70491]"/>
  <match src="call_expression [80541,80582]" dest="call_expression [80548,80589]"/>
  <match src="number_literal: 255 [62303,62306]" dest="number_literal: 255 [62310,62313]"/>
  <match src="type: type [34724,34728]" dest="type: type [34724,34728]"/>
  <match src="identifier: mainhand [1147,1155]" dest="identifier: mainhand [1147,1155]"/>
  <match src="identifier: _currentIndex [49458,49471]" dest="identifier: _currentIndex [49458,49471]"/>
  <match src="): ) [52142,52143]" dest="): ) [52142,52143]"/>
  <match src="call_expression [65752,65799]" dest="call_expression [65759,65806]"/>
  <match src="identifier: pullCallback [3123,3135]" dest="identifier: pullCallback [3123,3135]"/>
  <match src="primitive_type [30771,30776]" dest="primitive_type [30771,30776]"/>
  <match src="{: { [42384,42385]" dest="{: { [42384,42385]"/>
  <match src="call_argument [46004,46008]" dest="call_argument [46004,46008]"/>
  <match src="primitive_type [1533,1537]" dest="primitive_type [1533,1537]"/>
  <match src="(: ( [45176,45177]" dest="(: ( [45176,45177]"/>
  <match src="type_name [67773,67778]" dest="type_name [67780,67785]"/>
  <match src="identifier: quantity_ [69379,69388]" dest="identifier: quantity_ [69386,69395]"/>
  <match src="type_name [55691,55698]" dest="type_name [55691,55698]"/>
  <match src="returns: returns [46746,46753]" dest="returns: returns [46746,46753]"/>
  <match src="visibility [74384,74392]" dest="visibility [74391,74399]"/>
  <match src="(: ( [39564,39565]" dest="(: ( [39564,39565]"/>
  <match src="comment: //     uint8 clothes; Rudy's Smithing Apron [70585,70628]" dest="comment: //     uint8 clothes; Rudy's Smithing Apron [70592,70635]"/>
  <match src="return_type_definition [1524,1538]" dest="return_type_definition [1524,1538]"/>
  <match src="identifier: _msgSender [45106,45116]" dest="identifier: _msgSender [45106,45116]"/>
  <match src="call_argument [67173,67191]" dest="call_argument [67180,67198]"/>
  <match src="(: ( [11193,11194]" dest="(: ( [11193,11194]"/>
  <match src="type_name [1257,1262]" dest="type_name [1257,1262]"/>
  <match src="return_type_definition [19113,19138]" dest="return_type_definition [19113,19138]"/>
  <match src="bool: bool [60355,60359]" dest="bool: bool [60362,60366]"/>
  <match src="identifier: structHash [17247,17257]" dest="identifier: structHash [17247,17257]"/>
  <match src="primitive_type [76348,76354]" dest="primitive_type [76355,76361]"/>
  <match src="true: true [61825,61829]" dest="true: true [61832,61836]"/>
  <match src="parameter [22865,22877]" dest="parameter [22865,22877]"/>
  <match src="primitive_type [61481,61488]" dest="primitive_type [61488,61495]"/>
  <match src="}: } [54790,54791]" dest="}: } [54790,54791]"/>
  <match src="struct_declaration [5105,5371]" dest="struct_declaration [5105,5371]"/>
  <match src="assignment_expression [51774,51828]" dest="assignment_expression [51774,51828]"/>
  <match src="uint256: uint256 [2046,2053]" dest="uint256: uint256 [2046,2053]"/>
  <match src="parameter [44508,44524]" dest="parameter [44508,44524]"/>
  <match src="): ) [45961,45962]" dest="): ) [45961,45962]"/>
  <match src=",: , [62827,62828]" dest=",: , [62834,62835]"/>
  <match src="identifier: vrf [70110,70113]" dest="identifier: vrf [70117,70120]"/>
  <match src="==: == [15210,15212]" dest="==: == [15210,15212]"/>
  <match src="&quot;: &quot; [17336,17337]" dest="&quot;: &quot; [17336,17337]"/>
  <match src="comment: /**     * converts a struct to a 256 bit hash to check for uniqueness     * @param s the struct to pack into a hash     * @return the 256 bit hash of the struct     */ [77754,77925]" dest="comment: /**     * converts a struct to a 256 bit hash to check for uniqueness     * @param s the struct to pack into a hash     * @return the 256 bit hash of the struct     */ [77761,77932]"/>
  <match src="call_argument [48865,48875]" dest="call_argument [48865,48875]"/>
  <match src="internal: internal [31355,31363]" dest="internal: internal [31355,31363]"/>
  <match src="assignment_expression [74145,74180]" dest="assignment_expression [74152,74187]"/>
  <match src="uint8: uint8 [5326,5331]" dest="uint8: uint8 [5326,5331]"/>
  <match src="binary_expression [48781,48804]" dest="binary_expression [48781,48804]"/>
  <match src="identifier: ICommoner [79088,79097]" dest="identifier: ICommoner [79095,79104]"/>
  <match src="[: [ [79493,79494]" dest="[: [ [79500,79501]"/>
  <match src="parameter [40313,40319]" dest="parameter [40313,40319]"/>
  <match src="state_variable_declaration [58129,58166]" dest="state_variable_declaration [58129,58166]"/>
  <match src="}: } [42414,42415]" dest="}: } [42414,42415]"/>
  <match src="identifier: operator [44141,44149]" dest="identifier: operator [44141,44149]"/>
  <match src="): ) [15004,15005]" dest="): ) [15004,15005]"/>
  <match src="identifier: require [29909,29916]" dest="identifier: require [29909,29916]"/>
  <match src="): ) [77295,77296]" dest="): ) [77302,77303]"/>
  <match src="uint256: uint256 [40957,40964]" dest="uint256: uint256 [40957,40964]"/>
  <match src="(: ( [43400,43401]" dest="(: ( [43400,43401]"/>
  <match src="identifier: balance [29839,29846]" dest="identifier: balance [29839,29846]"/>
  <match src="identifier: quantity [48021,48029]" dest="identifier: quantity [48021,48029]"/>
  <match src="(: ( [27186,27187]" dest="(: ( [27186,27187]"/>
  <match src="inheritance_specifier [24156,24163]" dest="inheritance_specifier [24156,24163]"/>
  <match src="{: { [40611,40612]" dest="{: { [40611,40612]"/>
  <match src="primitive_type [60718,60723]" dest="primitive_type [60725,60730]"/>
  <match src=",: , [66094,66095]" dest=",: , [66101,66102]"/>
  <match src="uint8: uint8 [5800,5805]" dest="uint8: uint8 [5800,5805]"/>
  <match src="number_literal: 0 [70893,70894]" dest="number_literal: 0 [70900,70901]"/>
  <match src=",: , [78275,78276]" dest=",: , [78282,78283]"/>
  <match src="if_statement [41159,41888]" dest="if_statement [41159,41888]"/>
  <match src="identifier: require [68034,68041]" dest="identifier: require [68041,68048]"/>
  <match src="member_expression [77168,77178]" dest="member_expression [77175,77185]"/>
  <match src="=: = [66209,66210]" dest="=: = [66216,66217]"/>
  <match src="identifier: this [63936,63940]" dest="identifier: this [63943,63947]"/>
  <match src="&quot;: &quot; [79906,79907]" dest="&quot;: &quot; [79913,79914]"/>
  <match src="{: { [45628,45629]" dest="{: { [45628,45629]"/>
  <match src="=: = [53596,53597]" dest="=: = [53596,53597]"/>
  <match src="primitive_type [69169,69173]" dest="primitive_type [69176,69180]"/>
  <match src="call_argument [15180,15181]" dest="call_argument [15180,15181]"/>
  <match src="}: } [17387,17388]" dest="}: } [17387,17388]"/>
  <match src="if: if [45246,45248]" dest="if: if [45246,45248]"/>
  <match src="return_type_definition [42723,42746]" dest="return_type_definition [42723,42746]"/>
  <match src="type_name [81424,81431]" dest="type_name [81431,81438]"/>
  <match src="function: function [69849,69857]" dest="function: function [69856,69864]"/>
  <match src="internal: internal [39806,39814]" dest="internal: internal [39806,39814]"/>
  <match src="state_mutability [764,768]" dest="state_mutability [764,768]"/>
  <match src="memory: memory [31835,31841]" dest="memory: memory [31835,31841]"/>
  <match src="function_definition [54909,55105]" dest="function_definition [54909,55105]"/>
  <match src="boolean_literal [41615,41619]" dest="boolean_literal [41615,41619]"/>
  <match src="binary_expression [49121,49140]" dest="binary_expression [49121,49140]"/>
  <match src="identifier: keccak256 [17309,17318]" dest="identifier: keccak256 [17309,17318]"/>
  <match src="identifier: RecoverError [8230,8242]" dest="identifier: RecoverError [8230,8242]"/>
  <match src="memory: memory [76902,76908]" dest="memory: memory [76909,76915]"/>
  <match src="state_variable_declaration [58512,58556]" dest="state_variable_declaration [58512,58563]"/>
  <match src="): ) [80406,80407]" dest="): ) [80413,80414]"/>
  <match src="identifier: TokenPartner [60331,60343]" dest="identifier: TokenPartner [60338,60350]"/>
  <match src="&quot;: &quot; [63499,63500]" dest="&quot;: &quot; [63506,63507]"/>
  <match src="identifier: palette [81033,81040]" dest="identifier: palette [81040,81047]"/>
  <match src="external: external [2456,2464]" dest="external: external [2456,2464]"/>
  <match src="identifier: i [7722,7723]" dest="identifier: i [7722,7723]"/>
  <match src="}: } [11428,11429]" dest="}: } [11428,11429]"/>
  <match src="identifier: cooking [79604,79611]" dest="identifier: cooking [79611,79618]"/>
  <match src="type_name [5645,5654]" dest="type_name [5645,5654]"/>
  <match src="uint8: uint8 [15548,15553]" dest="uint8: uint8 [15548,15553]"/>
  <match src="identifier: _beforeTokenTransfers [50424,50445]" dest="identifier: _beforeTokenTransfers [50424,50445]"/>
  <match src="call_argument [66883,66893]" dest="call_argument [66890,66900]"/>
  <match src="call_argument [68042,68104]" dest="call_argument [68049,68111]"/>
  <match src="call_argument [47497,47501]" dest="call_argument [47497,47501]"/>
  <match src=".: . [79146,79147]" dest=".: . [79153,79154]"/>
  <match src="type_name [1747,1756]" dest="type_name [1747,1756]"/>
  <match src="): ) [44870,44871]" dest="): ) [44870,44871]"/>
  <match src="(: ( [67956,67957]" dest="(: ( [67963,67964]"/>
  <match src="address: address [31320,31327]" dest="address: address [31320,31327]"/>
  <match src="if: if [43915,43917]" dest="if: if [43915,43917]"/>
  <match src="call_expression [55818,55830]" dest="call_expression [55818,55830]"/>
  <match src="identifier: topTalents [59923,59933]" dest="identifier: topTalents [59930,59940]"/>
  <match src="true: true [41615,41619]" dest="true: true [41615,41619]"/>
  <match src="type_name [44669,44676]" dest="type_name [44669,44676]"/>
  <match src="assignment_expression [64892,64912]" dest="assignment_expression [64899,64919]"/>
  <match src="call_argument [77275,77296]" dest="call_argument [77282,77303]"/>
  <match src="virtual: virtual [34659,34666]" dest="virtual: virtual [34659,34666]"/>
  <match src="binary_expression [45106,45126]" dest="binary_expression [45106,45126]"/>
  <match src="parameter [45837,45852]" dest="parameter [45837,45852]"/>
  <match src="parameter [18154,18172]" dest="parameter [18154,18172]"/>
  <match src="{: { [4585,4586]" dest="{: { [4585,4586]"/>
  <match src="state_variable_declaration [59890,59934]" dest="state_variable_declaration [59897,59941]"/>
  <match src="(: ( [63991,63992]" dest="(: ( [63998,63999]"/>
  <match src="identifier: functionCallWithValue [28671,28692]" dest="identifier: functionCallWithValue [28671,28692]"/>
  <match src="comment: /**  * @dev Interface of the ERC165 standard, as defined in the  * https://eips.ethereum.org/EIPS/eip-165[EIP].  *  * Implementers can declare support of contract interfaces, which can then be  * queried by others ({ERC165Checker}).  *  * For an implementation, see {ERC165}.  */ [17460,17747]" dest="comment: /**  * @dev Interface of the ERC165 standard, as defined in the  * https://eips.ethereum.org/EIPS/eip-165[EIP].  *  * Implementers can declare support of contract interfaces, which can then be  * queried by others ({ERC165Checker}).  *  * For an implementation, see {ERC165}.  */ [17460,17747]"/>
  <match src="primitive_type [37558,37565]" dest="primitive_type [37558,37565]"/>
  <match src="identifier: hash [10149,10153]" dest="identifier: hash [10149,10153]"/>
  <match src="identifier: smithing [81266,81274]" dest="identifier: smithing [81273,81281]"/>
  <match src="view: view [328,332]" dest="view: view [328,332]"/>
  <match src="parameter [23823,23838]" dest="parameter [23823,23838]"/>
  <match src=",: , [31432,31433]" dest=",: , [31432,31433]"/>
  <match src="parameter [3383,3397]" dest="parameter [3383,3397]"/>
  <match src="if: if [49202,49204]" dest="if: if [49202,49204]"/>
  <match src="identifier: bodyType [81086,81094]" dest="identifier: bodyType [81093,81101]"/>
  <match src="!: ! [42762,42763]" dest="!: ! [42762,42763]"/>
  <match src="): ) [76968,76969]" dest="): ) [76975,76976]"/>
  <match src="(: ( [45230,45231]" dest="(: ( [45230,45231]"/>
  <match src="primitive_type [38800,38807]" dest="primitive_type [38800,38807]"/>
  <match src="(: ( [16711,16712]" dest="(: ( [16711,16712]"/>
  <match src="address: address [20138,20145]" dest="address: address [20138,20145]"/>
  <match src="identifier: tokenId [23831,23838]" dest="identifier: tokenId [23831,23838]"/>
  <match src="return: return [17302,17308]" dest="return: return [17302,17308]"/>
  <match src="memory: memory [30409,30415]" dest="memory: memory [30409,30415]"/>
  <match src="primitive_type [3969,3976]" dest="primitive_type [3969,3976]"/>
  <match src="member_expression [68488,68516]" dest="member_expression [68495,68523]"/>
  <match src="number_literal: 15 [72964,72966]" dest="number_literal: 15 [72971,72973]"/>
  <match src="): ) [41236,41237]" dest="): ) [41236,41237]"/>
  <match src=",: , [47478,47479]" dest=",: , [47478,47479]"/>
  <match src="&quot;: &quot; [8646,8647]" dest="&quot;: &quot; [8646,8647]"/>
  <match src="type_name [5175,5180]" dest="type_name [5175,5180]"/>
  <match src="event_paramater [18489,18509]" dest="event_paramater [18489,18509]"/>
  <match src="identifier: to [46907,46909]" dest="identifier: to [46907,46909]"/>
  <match src="parameter [40275,40288]" dest="parameter [40275,40288]"/>
  <match src="(: ( [1532,1533]" dest="(: ( [1532,1533]"/>
  <match src="identifier: sender [67253,67259]" dest="identifier: sender [67260,67266]"/>
  <match src="interface: interface [3191,3200]" dest="interface: interface [3191,3200]"/>
  <match src="call_expression [66938,67014]" dest="call_expression [66945,67021]"/>
  <match src="call_argument [46338,46340]" dest="call_argument [46338,46340]"/>
  <match src="primitive_type [6793,6800]" dest="primitive_type [6793,6800]"/>
  <match src="(: ( [68170,68171]" dest="(: ( [68177,68178]"/>
  <match src="call_expression [64028,64069]" dest="call_expression [64035,64076]"/>
  <match src="(: ( [5554,5555]" dest="(: ( [5554,5555]"/>
  <match src=",: , [65835,65836]" dest=",: , [65842,65843]"/>
  <match src="member_expression [29825,29846]" dest="member_expression [29825,29846]"/>
  <match src="(: ( [66814,66815]" dest="(: ( [66821,66822]"/>
  <match src="identifier: sender [64865,64871]" dest="identifier: sender [64872,64878]"/>
  <match src="*: * [66173,66174]" dest="*: * [66180,66181]"/>
  <match src="string_literal [43663,43700]" dest="string_literal [43663,43700]"/>
  <match src="identifier: addr [54136,54140]" dest="identifier: addr [54136,54140]"/>
  <match src="member_expression [50863,50889]" dest="member_expression [50863,50889]"/>
  <match src="parameter [30403,30415]" dest="parameter [30403,30415]"/>
  <match src="array_access [68557,68597]" dest="array_access [68564,68604]"/>
  <match src="&quot;: &quot; [65797,65798]" dest="&quot;: &quot; [65804,65805]"/>
  <match src="identifier: treat [61882,61887]" dest="identifier: treat [61889,61894]"/>
  <match src="function: function [1389,1397]" dest="function: function [1389,1397]"/>
  <match src="uint8: uint8 [76401,76406]" dest="uint8: uint8 [76408,76413]"/>
  <match src="=: = [72746,72747]" dest="=: = [72753,72754]"/>
  <match src="return_type_definition [29783,29805]" dest="return_type_definition [29783,29805]"/>
  <match src="function: function [5879,5887]" dest="function: function [5879,5887]"/>
  <match src="string [66830,66846]" dest="string [66837,66853]"/>
  <match src="): ) [39584,39585]" dest="): ) [39584,39585]"/>
  <match src="): ) [64260,64261]" dest="): ) [64267,64268]"/>
  <match src="binary_expression [77282,77295]" dest="binary_expression [77289,77302]"/>
  <match src="number_literal: 16 [77404,77406]" dest="number_literal: 16 [77411,77413]"/>
  <match src="override: override [34667,34675]" dest="override: override [34667,34675]"/>
  <match src="expression_statement [77064,77076]" dest="expression_statement [77071,77083]"/>
  <match src="assembly: assembly [61032,61040]" dest="assembly: assembly [61039,61047]"/>
  <match src="(: ( [22184,22185]" dest="(: ( [22184,22185]"/>
  <match src=".: . [68516,68517]" dest=".: . [68523,68524]"/>
  <match src="): ) [4609,4610]" dest="): ) [4609,4610]"/>
  <match src=".: . [51065,51066]" dest=".: . [51065,51066]"/>
  <match src="identifier: head [1014,1018]" dest="identifier: head [1014,1018]"/>
  <match src="block_statement [11339,11422]" dest="block_statement [11339,11422]"/>
  <match src="override: override [42081,42089]" dest="override: override [42081,42089]"/>
  <match src=",: , [77131,77132]" dest=",: , [77138,77139]"/>
  <match src="): ) [18172,18173]" dest="): ) [18172,18173]"/>
  <match src="): ) [67880,67881]" dest="): ) [67887,67888]"/>
  <match src="): ) [7228,7229]" dest="): ) [7228,7229]"/>
  <match src="number_literal: 3 [63393,63394]" dest="number_literal: 3 [63400,63401]"/>
  <match src="type_alias [58010,58015]" dest="type_alias [58010,58015]"/>
  <match src="expression_statement [63376,63402]" dest="expression_statement [63383,63409]"/>
  <match src="state_mutability [24573,24577]" dest="state_mutability [24573,24577]"/>
  <match src="): ) [68146,68147]" dest="): ) [68153,68154]"/>
  <match src="type_name [674,680]" dest="type_name [674,680]"/>
  <match src=",: , [12946,12947]" dest=",: , [12946,12947]"/>
  <match src=".: . [64190,64191]" dest=".: . [64197,64198]"/>
  <match src="parameter [27064,27078]" dest="parameter [27064,27078]"/>
  <match src=",: , [62970,62971]" dest=",: , [62977,62978]"/>
  <match src="identifier: require [68163,68170]" dest="identifier: require [68170,68177]"/>
  <match src="binary_expression [45950,46023]" dest="binary_expression [45950,46023]"/>
  <match src="=: = [15162,15163]" dest="=: = [15162,15163]"/>
  <match src="identifier: background [77419,77429]" dest="identifier: background [77426,77436]"/>
  <match src="identifier: aliases [62991,62998]" dest="identifier: aliases [62998,63005]"/>
  <match src="variable_declaration [53564,53595]" dest="variable_declaration [53564,53595]"/>
  <match src="(: ( [39183,39184]" dest="(: ( [39183,39184]"/>
  <match src="type_name [80326,80333]" dest="type_name [80333,80340]"/>
  <match src="parenthesized_expression [8620,8648]" dest="parenthesized_expression [8620,8648]"/>
  <match src="): ) [65850,65851]" dest="): ) [65857,65858]"/>
  <match src="function: function [23737,23745]" dest="function: function [23737,23745]"/>
  <match src="number_literal: 0 [41767,41768]" dest="number_literal: 0 [41767,41768]"/>
  <match src="primitive_type [10499,10506]" dest="primitive_type [10499,10506]"/>
  <match src="pure: pure [15612,15616]" dest="pure: pure [15612,15616]"/>
  <match src="function_body [47459,47510]" dest="function_body [47459,47510]"/>
  <match src="type_name [4119,4126]" dest="type_name [4119,4126]"/>
  <match src="function: function [2016,2024]" dest="function: function [2016,2024]"/>
  <match src="string_literal [42788,42819]" dest="string_literal [42788,42819]"/>
  <match src="comment: // 0 - 7 are associated with head, breed, palette, bodyType, clothes, accessory, background, smithing, alchemy, cooking [59520,59639]" dest="comment: // 0 - 7 are associated with head, breed, palette, bodyType, clothes, accessory, background, smithing, alchemy, cooking [59527,59646]"/>
  <match src="type_name [4255,4262]" dest="type_name [4255,4262]"/>
  <match src="{: { [54743,54744]" dest="{: { [54743,54744]"/>
  <match src="identifier: burned [41174,41180]" dest="identifier: burned [41174,41180]"/>
  <match src="identifier: seed [77366,77370]" dest="identifier: seed [77373,77377]"/>
  <match src="state_mutability [16132,16136]" dest="state_mutability [16132,16136]"/>
  <match src="): ) [10177,10178]" dest="): ) [10177,10178]"/>
  <match src="[: [ [72778,72779]" dest="[: [ [72785,72786]"/>
  <match src="memory: memory [42547,42553]" dest="memory: memory [42547,42553]"/>
  <match src="number_literal: 204 [63321,63324]" dest="number_literal: 204 [63328,63331]"/>
  <match src="): ) [69556,69557]" dest="): ) [69563,69564]"/>
  <match src="primitive_type [518,524]" dest="primitive_type [518,524]"/>
  <match src="): ) [39016,39017]" dest="): ) [39016,39017]"/>
  <match src="virtual: virtual [42514,42521]" dest="virtual: virtual [42514,42521]"/>
  <match src="{: { [45069,45070]" dest="{: { [45069,45070]"/>
  <match src="identifier: s [77979,77980]" dest="identifier: s [77986,77987]"/>
  <match src="if: if [41159,41161]" dest="if: if [41159,41161]"/>
  <match src="call_expression [43725,43753]" dest="call_expression [43725,43753]"/>
  <match src="call_argument [53020,53027]" dest="call_argument [53020,53027]"/>
  <match src=",: , [62276,62277]" dest=",: , [62283,62284]"/>
  <match src="identifier: who_ [5575,5579]" dest="identifier: who_ [5575,5579]"/>
  <match src="call_argument [49545,49557]" dest="call_argument [49545,49557]"/>
  <match src="external: external [1703,1711]" dest="external: external [1703,1711]"/>
  <match src="primitive_type [5818,5823]" dest="primitive_type [5818,5823]"/>
  <match src="parameter [64945,64956]" dest="parameter [64952,64963]"/>
  <match src="function_definition [39108,39413]" dest="function_definition [39108,39413]"/>
  <match src="expression_statement [50424,50468]" dest="expression_statement [50424,50468]"/>
  <match src="number_literal: 96 [62782,62784]" dest="number_literal: 96 [62789,62791]"/>
  <match src="identifier: admin [64304,64309]" dest="identifier: admin [64311,64316]"/>
  <match src=",: , [1494,1495]" dest=",: , [1494,1495]"/>
  <match src="expression_statement [72717,72751]" dest="expression_statement [72724,72758]"/>
  <match src="string_literal [16296,16330]" dest="string_literal [16296,16330]"/>
  <match src="uint256: uint256 [7490,7497]" dest="uint256: uint256 [7490,7497]"/>
  <match src="string_literal [7666,7669]" dest="string_literal [7666,7669]"/>
  <match src="bytes: bytes [31336,31341]" dest="bytes: bytes [31336,31341]"/>
  <match src="(: ( [43636,43637]" dest="(: ( [43636,43637]"/>
  <match src="): ) [76910,76911]" dest="): ) [76917,76918]"/>
  <match src="virtual: virtual [42343,42350]" dest="virtual: virtual [42343,42350]"/>
  <match src="identifier: v [10806,10807]" dest="identifier: v [10806,10807]"/>
  <match src=".: . [68379,68380]" dest=".: . [68386,68387]"/>
  <match src="*: * [74978,74979]" dest="*: * [74985,74986]"/>
  <match src="!=: != [6572,6574]" dest="!=: != [6572,6574]"/>
  <match src="parameter [3523,3536]" dest="parameter [3523,3536]"/>
  <match src="mapping: mapping [37661,37668]" dest="mapping: mapping [37661,37668]"/>
  <match src="[: [ [72248,72249]" dest="[: [ [72255,72256]"/>
  <match src="{: { [29253,29254]" dest="{: { [29253,29254]"/>
  <match src="number_literal: 0 [70787,70788]" dest="number_literal: 0 [70794,70795]"/>
  <match src="call_argument [50562,50566]" dest="call_argument [50562,50566]"/>
  <match src="parameter [7022,7035]" dest="parameter [7022,7035]"/>
  <match src="identifier: tokenId [42139,42146]" dest="identifier: tokenId [42139,42146]"/>
  <match src="identifier: smithing [5307,5315]" dest="identifier: smithing [5307,5315]"/>
  <match src=".: . [51032,51033]" dest=".: . [51032,51033]"/>
  <match src="call_expression [44728,44744]" dest="call_expression [44728,44744]"/>
  <match src="primitive_type [58197,58204]" dest="primitive_type [58197,58204]"/>
  <match src="comment: // address =&gt; minted_amount [58917,58944]" dest="comment: // address =&gt; minted_amount [58924,58951]"/>
  <match src="parameter [13338,13347]" dest="parameter [13338,13347]"/>
  <match src="(: ( [8558,8559]" dest="(: ( [8558,8559]"/>
  <match src="function_definition [1718,1780]" dest="function_definition [1718,1780]"/>
  <match src="string_literal [61708,61719]" dest="string_literal [61715,61726]"/>
  <match src="comment: /**      * @dev Gives permission to `to` to transfer `tokenId` token to another account.      * The approval is cleared when the token is transferred.      *      * Only a single account can be approved at a time, so approving the zero address clears previous approvals.      *      * Requirements:      *      * - The caller must own the token or be an approved operator.      * - `tokenId` must exist.      *      * Emits an {Approval} event.      */ [20838,21302]" dest="comment: /**      * @dev Gives permission to `to` to transfer `tokenId` token to another account.      * The approval is cleared when the token is transferred.      *      * Only a single account can be approved at a time, so approving the zero address clears previous approvals.      *      * Requirements:      *      * - The caller must own the token or be an approved operator.      * - `tokenId` must exist.      *      * Emits an {Approval} event.      */ [20838,21302]"/>
  <match src="expression_statement [7245,7254]" dest="expression_statement [7245,7254]"/>
  <match src="binary_expression [39565,39584]" dest="binary_expression [39565,39584]"/>
  <match src="number_literal: 2 [68945,68946]" dest="number_literal: 2 [68952,68953]"/>
  <match src="}: } [71296,71297]" dest="}: } [71303,71304]"/>
  <match src="comment: /**      * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each      * token will be the concatenation of the `baseURI` and the `tokenId`. Empty      * by default, can be overriden in child contracts.      */ [42988,43222]" dest="comment: /**      * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each      * token will be the concatenation of the `baseURI` and the `tokenId`. Empty      * by default, can be overriden in child contracts.      */ [42988,43222]"/>
  <match src="call_expression [15724,15742]" dest="call_expression [15724,15742]"/>
  <match src="string [7845,7879]" dest="string [7845,7879]"/>
  <match src="identifier: require [65372,65379]" dest="identifier: require [65379,65386]"/>
  <match src="parameter [1985,1999]" dest="parameter [1985,1999]"/>
  <match src="identifier: approved [18720,18728]" dest="identifier: approved [18720,18728]"/>
  <match src="internal: internal [32435,32443]" dest="internal: internal [32435,32443]"/>
  <match src="call_argument [67853,67880]" dest="call_argument [67860,67887]"/>
  <match src="string: string [778,784]" dest="string: string [778,784]"/>
  <match src="call_argument [52905,52909]" dest="call_argument [52905,52909]"/>
  <match src="&quot;: &quot; [68021,68022]" dest="&quot;: &quot; [68028,68029]"/>
  <match src="(: ( [31861,31862]" dest="(: ( [31861,31862]"/>
  <match src="member_expression [80981,81000]" dest="member_expression [80988,81007]"/>
  <match src="variable_declaration [6504,6516]" dest="variable_declaration [6504,6516]"/>
  <match src="identifier: sender [66151,66157]" dest="identifier: sender [66158,66164]"/>
  <match src="): ) [75034,75035]" dest="): ) [75041,75042]"/>
  <match src="state_mutability [30389,30393]" dest="state_mutability [30389,30393]"/>
  <match src="type_name [37789,37813]" dest="type_name [37789,37813]"/>
  <match src="variable_declaration [60970,60982]" dest="variable_declaration [60977,60989]"/>
  <match src="false [75029,75034]" dest="false [75036,75041]"/>
  <match src="uint: uint [67142,67146]" dest="uint: uint [67149,67153]"/>
  <match src=",: , [63271,63272]" dest=",: , [63278,63279]"/>
  <match src="[: [ [63194,63195]" dest="[: [ [63201,63202]"/>
  <match src="catch: catch [55968,55973]" dest="catch: catch [55968,55973]"/>
  <match src="identifier: ICommoner [78892,78901]" dest="identifier: ICommoner [78899,78908]"/>
  <match src="identifier: owner [3942,3947]" dest="identifier: owner [3942,3947]"/>
  <match src="identifier: admin [64875,64880]" dest="identifier: admin [64882,64887]"/>
  <match src="call_argument [77366,77379]" dest="call_argument [77373,77386]"/>
  <match src="call_argument [77110,77131]" dest="call_argument [77117,77138]"/>
  <match src=".: . [53447,53448]" dest=".: . [53447,53448]"/>
  <match src="[: [ [81028,81029]" dest="[: [ [81035,81036]"/>
  <match src="(: ( [61899,61900]" dest="(: ( [61906,61907]"/>
  <match src="identifier: nextSlot [51483,51491]" dest="identifier: nextSlot [51483,51491]"/>
  <match src="type_name [4699,4706]" dest="type_name [4699,4706]"/>
  <match src="type_name [40313,40319]" dest="type_name [40313,40319]"/>
  <match src="primitive_type [30345,30352]" dest="primitive_type [30345,30352]"/>
  <match src="identifier: commoners [74033,74042]" dest="identifier: commoners [74040,74049]"/>
  <match src="identifier: _HEX_SYMBOLS [6028,6040]" dest="identifier: _HEX_SYMBOLS [6028,6040]"/>
  <match src="primitive_type [58801,58808]" dest="primitive_type [58808,58815]"/>
  <match src="identifier: value [30043,30048]" dest="identifier: value [30043,30048]"/>
  <match src="identifier: to [50922,50924]" dest="identifier: to [50922,50924]"/>
  <match src="address: address [4485,4492]" dest="address: address [4485,4492]"/>
  <match src="[: [ [62602,62603]" dest="[: [ [62609,62610]"/>
  <match src="expression_statement [41681,41711]" dest="expression_statement [41681,41711]"/>
  <match src="&quot;: &quot; [49244,49245]" dest="&quot;: &quot; [49244,49245]"/>
  <match src="bool: bool [64399,64403]" dest="bool: bool [64406,64410]"/>
  <match src="identifier: balance [53409,53416]" dest="identifier: balance [53409,53416]"/>
  <match src="block_statement [7102,7142]" dest="block_statement [7102,7142]"/>
  <match src="identifier: tokenId [42685,42692]" dest="identifier: tokenId [42685,42692]"/>
  <match src="returns: returns [5595,5602]" dest="returns: returns [5595,5602]"/>
  <match src="parameter [79725,79738]" dest="parameter [79732,79745]"/>
  <match src="(: ( [80683,80684]" dest="(: ( [80690,80691]"/>
  <match src="primitive_type [24276,24282]" dest="primitive_type [24276,24282]"/>
  <match src="function_definition [75345,75900]" dest="function_definition [75352,75907]"/>
  <match src="primitive_type [37448,37455]" dest="primitive_type [37448,37455]"/>
  <match src="&amp;&amp;: &amp;&amp; [48786,48788]" dest="&amp;&amp;: &amp;&amp; [48786,48788]"/>
  <match src="member_expression [26052,26064]" dest="member_expression [26052,26064]"/>
  <match src="identifier: nextSlot [54375,54383]" dest="identifier: nextSlot [54375,54383]"/>
  <match src="array_access [62991,63001]" dest="array_access [62998,63008]"/>
  <match src="struct_member [60469,60487]" dest="struct_member [60476,60494]"/>
  <match src="identifier: msg [33701,33704]" dest="identifier: msg [33701,33704]"/>
  <match src="primitive_type [74456,74463]" dest="primitive_type [74463,74470]"/>
  <match src="address: address [23800,23807]" dest="address: address [23800,23807]"/>
  <match src="bytes: bytes [10155,10160]" dest="bytes: bytes [10155,10160]"/>
  <match src="primitive_type [55717,55722]" dest="primitive_type [55717,55722]"/>
  <match src="primitive_type [1257,1262]" dest="primitive_type [1257,1262]"/>
  <match src="identifier: ownerOf [43481,43488]" dest="identifier: ownerOf [43481,43488]"/>
  <match src="primitive_type [16712,16719]" dest="primitive_type [16712,16719]"/>
  <match src="number_literal: 254 [62660,62663]" dest="number_literal: 254 [62667,62670]"/>
  <match src="primitive_type [3666,3673]" dest="primitive_type [3666,3673]"/>
  <match src="binary_expression [41048,41068]" dest="binary_expression [41048,41068]"/>
  <match src="expression_statement [61762,61794]" dest="expression_statement [61769,61801]"/>
  <match src="(: ( [14778,14779]" dest="(: ( [14778,14779]"/>
  <match src=",: , [66081,66082]" dest=",: , [66088,66089]"/>
  <match src="comment: /**      * @dev See {IERC721-safeTransferFrom}.      */ [45438,45495]" dest="comment: /**      * @dev See {IERC721-safeTransferFrom}.      */ [45438,45495]"/>
  <match src="number_literal: 16 [77073,77075]" dest="number_literal: 16 [77080,77082]"/>
  <match src="yul_path [10706,10707]" dest="yul_path [10706,10707]"/>
  <match src="(: ( [12943,12944]" dest="(: ( [12943,12944]"/>
  <match src="(: ( [8793,8794]" dest="(: ( [8793,8794]"/>
  <match src="identifier: owner [55078,55083]" dest="identifier: owner [55078,55083]"/>
  <match src="call_expression [68042,68055]" dest="call_expression [68049,68062]"/>
  <match src="string: string [646,652]" dest="string: string [646,652]"/>
  <match src="identifier: msg [67129,67132]" dest="identifier: msg [67136,67139]"/>
  <match src=",: , [66775,66776]" dest=",: , [66782,66783]"/>
  <match src="comment: /**      * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.      */ [18763,18882]" dest="comment: /**      * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.      */ [18763,18882]"/>
  <match src="comment: /*///////////////////////////////////////////////////////////////                     Internal methods     //////////////////////////////////////////////////////////////*/ [69668,69841]" dest="comment: /*///////////////////////////////////////////////////////////////                     Internal methods     //////////////////////////////////////////////////////////////*/ [69675,69848]"/>
  <match src="primitive_type [74366,74372]" dest="primitive_type [74373,74379]"/>
  <match src="address: address [3136,3143]" dest="address: address [3136,3143]"/>
  <match src="==: == [8565,8567]" dest="==: == [8565,8567]"/>
  <match src=",: , [1862,1863]" dest=",: , [1862,1863]"/>
  <match src="uint64: uint64 [36972,36978]" dest="uint64: uint64 [36972,36978]"/>
  <match src="struct_member [5350,5364]" dest="struct_member [5350,5364]"/>
  <match src="parameter [5724,5735]" dest="parameter [5724,5735]"/>
  <match src=",: , [63842,63843]" dest=",: , [63849,63850]"/>
  <match src="identifier: breed [80995,81000]" dest="identifier: breed [81002,81007]"/>
  <match src="expression_statement [65030,65049]" dest="expression_statement [65037,65056]"/>
  <match src="variable_declaration_statement [76419,76481]" dest="variable_declaration_statement [76426,76488]"/>
  <match src="array_access [40339,40358]" dest="array_access [40339,40358]"/>
  <match src="}: } [11332,11333]" dest="}: } [11332,11333]"/>
  <match src="binary_expression [69542,69572]" dest="binary_expression [69549,69579]"/>
  <match src="member_expression [34709,34749]" dest="member_expression [34709,34749]"/>
  <match src="string_literal [45675,45677]" dest="string_literal [45675,45677]"/>
  <match src="primitive_type [1595,1602]" dest="primitive_type [1595,1602]"/>
  <match src="parameter [57817,57837]" dest="parameter [57817,57837]"/>
  <match src="call_expression [77263,77300]" dest="call_expression [77270,77307]"/>
  <match src="call_argument [74600,74604]" dest="call_argument [74607,74611]"/>
  <match src="identifier: quantity_ [74373,74382]" dest="identifier: quantity_ [74380,74389]"/>
  <match src="binary_expression [70329,70335]" dest="binary_expression [70336,70342]"/>
  <match src="function: function [64358,64366]" dest="function: function [64365,64373]"/>
  <match src="array_access [67596,67609]" dest="array_access [67603,67616]"/>
  <match src="identifier: owner [43518,43523]" dest="identifier: owner [43518,43523]"/>
  <match src="primitive_type [60355,60359]" dest="primitive_type [60362,60366]"/>
  <match src="expression_statement [74199,74235]" dest="expression_statement [74206,74242]"/>
  <match src="identifier: require [66752,66759]" dest="identifier: require [66759,66766]"/>
  <match src="bytes32: bytes32 [10475,10482]" dest="bytes32: bytes32 [10475,10482]"/>
  <match src="while: while [49401,49406]" dest="while: while [49401,49406]"/>
  <match src="type_name [25777,25784]" dest="type_name [25777,25784]"/>
  <match src="function_definition [3414,3469]" dest="function_definition [3414,3469]"/>
  <match src="=: = [61738,61739]" dest="=: = [61745,61746]"/>
  <match src="uint256: uint256 [29200,29207]" dest="uint256: uint256 [29200,29207]"/>
  <match src="==: == [56029,56031]" dest="==: == [56029,56031]"/>
  <match src="binary_expression [15203,15223]" dest="binary_expression [15203,15223]"/>
  <match src="identifier: to [5905,5907]" dest="identifier: to [5905,5907]"/>
  <match src="type_name [48673,48680]" dest="type_name [48673,48680]"/>
  <match src="returns: returns [28630,28637]" dest="returns: returns [28630,28637]"/>
  <match src="bool: bool [58099,58103]" dest="bool: bool [58099,58103]"/>
  <match src="{: { [24164,24165]" dest="{: { [24164,24165]"/>
  <match src="identifier: sender [64040,64046]" dest="identifier: sender [64047,64053]"/>
  <match src="external: external [4912,4920]" dest="external: external [4912,4920]"/>
  <match src="identifier: nextTokenId [51366,51377]" dest="identifier: nextTokenId [51366,51377]"/>
  <match src="function: function [80296,80304]" dest="function: function [80303,80311]"/>
  <match src="number_literal: 255 [62293,62296]" dest="number_literal: 255 [62300,62303]"/>
  <match src="(: ( [30735,30736]" dest="(: ( [30735,30736]"/>
  <match src="identifier: sender [65284,65290]" dest="identifier: sender [65291,65297]"/>
  <match src="comment: // ecrecover takes the signature parameters, and the only way to get them [10545,10618]" dest="comment: // ecrecover takes the signature parameters, and the only way to get them [10545,10618]"/>
  <match src="yul_function_call [11235,11262]" dest="yul_function_call [11235,11262]"/>
  <match src="struct: struct [36448,36454]" dest="struct: struct [36448,36454]"/>
  <match src=",: , [66157,66158]" dest=",: , [66164,66165]"/>
  <match src="function_definition [30708,31103]" dest="function_definition [30708,31103]"/>
  <match src="*: * [67158,67159]" dest="*: * [67165,67166]"/>
  <match src="primitive_type [29716,29723]" dest="primitive_type [29716,29723]"/>
  <match src="uint256: uint256 [5909,5916]" dest="uint256: uint256 [5909,5916]"/>
  <match src="comment: /**      * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.      *      * See {setApprovalForAll}      */ [22011,22153]" dest="comment: /**      * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.      *      * See {setApprovalForAll}      */ [22011,22153]"/>
  <match src="}: } [46435,46436]" dest="}: } [46435,46436]"/>
  <match src="member_expression [48640,48655]" dest="member_expression [48640,48655]"/>
  <match src="primitive_type [77359,77365]" dest="primitive_type [77366,77372]"/>
  <match src="user_defined_type [39267,39274]" dest="user_defined_type [39267,39274]"/>
  <match src=",: , [27264,27265]" dest=",: , [27264,27265]"/>
  <match src="identifier: owner [22193,22198]" dest="identifier: owner [22193,22198]"/>
  <match src="address: address [36167,36174]" dest="address: address [36167,36174]"/>
  <match src="external: external [20821,20829]" dest="external: external [20821,20829]"/>
  <match src="function: function [22159,22167]" dest="function: function [22159,22167]"/>
  <match src="call_expression [77515,77552]" dest="call_expression [77522,77559]"/>
  <match src="type_name [28587,28593]" dest="type_name [28587,28593]"/>
  <match src="call_expression [10883,10908]" dest="call_expression [10883,10908]"/>
  <match src="expression_statement [77086,77136]" dest="expression_statement [77093,77143]"/>
  <match src="identifier: recipient [27205,27214]" dest="identifier: recipient [27205,27214]"/>
  <match src="primitive_type [76361,76366]" dest="primitive_type [76368,76373]"/>
  <match src="identifier: to [3440,3442]" dest="identifier: to [3440,3442]"/>
  <match src="identifier: sender [67302,67308]" dest="identifier: sender [67309,67315]"/>
  <match src="identifier: ecrecover [15164,15173]" dest="identifier: ecrecover [15164,15173]"/>
  <match src="identifier: to [3605,3607]" dest="identifier: to [3605,3607]"/>
  <match src="comment: // error URIQueryForNonexistentToken(); [35765,35804]" dest="comment: // error URIQueryForNonexistentToken(); [35765,35804]"/>
  <match src="identifier: account [26052,26059]" dest="identifier: account [26052,26059]"/>
  <match src="function: function [54909,54917]" dest="function: function [54909,54917]"/>
  <match src="identifier: quantity [48514,48522]" dest="identifier: quantity [48514,48522]"/>
  <match src="identifier: admin [80890,80895]" dest="identifier: admin [80897,80902]"/>
  <match src="): ) [12367,12368]" dest="): ) [12367,12368]"/>
  <match src="number_literal: 255 [62273,62276]" dest="number_literal: 255 [62280,62283]"/>
  <match src="identifier: buffer [7740,7746]" dest="identifier: buffer [7740,7746]"/>
  <match src="uint256: uint256 [45581,45588]" dest="uint256: uint256 [45581,45588]"/>
  <match src="parameter [28587,28613]" dest="parameter [28587,28613]"/>
  <match src="assignment_expression [72016,72054]" dest="assignment_expression [72023,72061]"/>
  <match src="yul_function_call [10711,10738]" dest="yul_function_call [10711,10738]"/>
  <match src="function: function [65200,65208]" dest="function: function [65207,65215]"/>
  <match src="yul_evm_builtin [10825,10828]" dest="yul_evm_builtin [10825,10828]"/>
  <match src="==: == [69294,69296]" dest="==: == [69301,69303]"/>
  <match src="expression_statement [6732,6744]" dest="expression_statement [6732,6744]"/>
  <match src="call_expression [31862,31880]" dest="call_expression [31862,31880]"/>
  <match src="expression_statement [77333,77385]" dest="expression_statement [77340,77392]"/>
  <match src="identifier: sender [64294,64300]" dest="identifier: sender [64301,64307]"/>
  <match src="identifier: _msgSender [44355,44365]" dest="identifier: _msgSender [44355,44365]"/>
  <match src="assignment_expression [61918,61934]" dest="assignment_expression [61925,61941]"/>
  <match src="identifier: tokenId [204,211]" dest="identifier: tokenId [204,211]"/>
  <match src="if_statement [45246,45316]" dest="if_statement [45246,45316]"/>
  <match src="call_argument [80091,80098]" dest="call_argument [80098,80105]"/>
  <match src="calldata: calldata [22941,22949]" dest="calldata: calldata [22941,22949]"/>
  <match src="(: ( [56945,56946]" dest="(: ( [56945,56946]"/>
  <match src="visibility [65721,65729]" dest="visibility [65728,65736]"/>
  <match src="call_argument [64624,64637]" dest="call_argument [64631,64644]"/>
  <match src="{: { [61041,61042]" dest="{: { [61048,61049]"/>
  <match src="identifier: tokenURITopTalents [264,282]" dest="identifier: tokenURITopTalents [264,282]"/>
  <match src="identifier: cooking [79576,79583]" dest="identifier: cooking [79583,79590]"/>
  <match src="identifier: admin [64050,64055]" dest="identifier: admin [64057,64062]"/>
  <match src="identifier: r [15574,15575]" dest="identifier: r [15574,15575]"/>
  <match src="number_literal: 0 [44787,44788]" dest="number_literal: 0 [44787,44788]"/>
  <match src=",: , [2333,2334]" dest=",: , [2333,2334]"/>
  <match src="=: = [62860,62861]" dest="=: = [62867,62868]"/>
  <match src="expression_statement [80418,80463]" dest="expression_statement [80425,80470]"/>
  <match src="return_statement [33694,33712]" dest="return_statement [33694,33712]"/>
  <match src="type_name [5567,5574]" dest="type_name [5567,5574]"/>
  <match src="yul_path [56207,56213]" dest="yul_path [56207,56213]"/>
  <match src="[: [ [79281,79282]" dest="[: [ [79288,79289]"/>
  <match src="member_expression [67219,67229]" dest="member_expression [67226,67236]"/>
  <match src=".: . [77962,77963]" dest=".: . [77969,77970]"/>
  <match src="identifier: _transfer [49839,49848]" dest="identifier: _transfer [49839,49848]"/>
  <match src="expression_statement [62991,63023]" dest="expression_statement [62998,63030]"/>
  <match src="memory: memory [40938,40944]" dest="memory: memory [40938,40944]"/>
  <match src="comment: //     function transfer(address to, uint256 tokenId) external; [2758,2821]" dest="comment: //     function transfer(address to, uint256 tokenId) external; [2758,2821]"/>
  <match src="identifier: admin [61551,61556]" dest="identifier: admin [61558,61563]"/>
  <match src="(: ( [42963,42964]" dest="(: ( [42963,42964]"/>
  <match src="yul_function_call [11190,11210]" dest="yul_function_call [11190,11210]"/>
  <match src=",: , [62345,62346]" dest=",: , [62352,62353]"/>
  <match src=":: : [79321,79322]" dest=":: : [79328,79329]"/>
  <match src="expression_statement [62538,62558]" dest="expression_statement [62545,62565]"/>
  <match src="(: ( [13471,13472]" dest="(: ( [13471,13472]"/>
  <match src="number_literal: 0 [28707,28708]" dest="number_literal: 0 [28707,28708]"/>
  <match src="identifier: admin [65168,65173]" dest="identifier: admin [65175,65180]"/>
  <match src="primitive_type [28587,28593]" dest="primitive_type [28587,28593]"/>
  <match src="}: } [67616,67617]" dest="}: } [67623,67624]"/>
  <match src="identifier: to [55926,55928]" dest="identifier: to [55926,55928]"/>
  <match src="identifier: seed [4769,4773]" dest="identifier: seed [4769,4773]"/>
  <match src="identifier: finalScore [4421,4431]" dest="identifier: finalScore [4421,4431]"/>
  <match src="bool: bool [45080,45084]" dest="bool: bool [45080,45084]"/>
  <match src="bytes: bytes [47424,47429]" dest="bytes: bytes [47424,47429]"/>
  <match src="state_mutability [8441,8445]" dest="state_mutability [8441,8445]"/>
  <match src="): ) [10952,10953]" dest="): ) [10952,10953]"/>
  <match src="view: view [34654,34658]" dest="view: view [34654,34658]"/>
  <match src="comment: // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature [13895,14003]" dest="comment: // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature [13895,14003]"/>
  <match src="): ) [64309,64310]" dest="): ) [64316,64317]"/>
  <match src=".: . [70936,70937]" dest=".: . [70943,70944]"/>
  <match src="primitive_type [1329,1336]" dest="primitive_type [1329,1336]"/>
  <match src="identifier: tokenId [2054,2061]" dest="identifier: tokenId [2054,2061]"/>
  <match src="function: function [18127,18135]" dest="function: function [18127,18135]"/>
  <match src="type_cast_expression [76433,76444]" dest="type_cast_expression [76440,76451]"/>
  <match src="state_mutability [21569,21573]" dest="state_mutability [21569,21573]"/>
  <match src="parameter [57773,57785]" dest="parameter [57773,57785]"/>
  <match src="array_access [66261,66283]" dest="array_access [66268,66290]"/>
  <match src="(: ( [51482,51483]" dest="(: ( [51482,51483]"/>
  <match src="): ) [15257,15258]" dest="): ) [15257,15258]"/>
  <match src="identifier: burnPartnerToken [63975,63991]" dest="identifier: burnPartnerToken [63982,63998]"/>
  <match src="(: ( [38799,38800]" dest="(: ( [38799,38800]"/>
  <match src="identifier: msg [66147,66150]" dest="identifier: msg [66154,66157]"/>
  <match src="identifier: smithing [77504,77512]" dest="identifier: smithing [77511,77519]"/>
  <match src="): ) [9015,9016]" dest="): ) [9015,9016]"/>
  <match src="identifier: PortalLike [3006,3016]" dest="identifier: PortalLike [3006,3016]"/>
  <match src="yul_function_call [56177,56215]" dest="yul_function_call [56177,56215]"/>
  <match src="yul_evm_builtin [56177,56183]" dest="yul_evm_builtin [56177,56183]"/>
  <match src="bool: bool [2372,2376]" dest="bool: bool [2372,2376]"/>
  <match src="{: { [6717,6718]" dest="{: { [6717,6718]"/>
  <match src="variable_declaration [12873,12882]" dest="variable_declaration [12873,12882]"/>
  <match src="visibility [30380,30388]" dest="visibility [30380,30388]"/>
  <match src="identifier: palette [71876,71883]" dest="identifier: palette [71883,71890]"/>
  <match src="state_variable_declaration [59228,59250]" dest="state_variable_declaration [59235,59257]"/>
  <match src="call_argument [63936,63940]" dest="call_argument [63943,63947]"/>
  <match src="string [68444,68472]" dest="string [68451,68479]"/>
  <match src="type_cast_expression [67142,67157]" dest="type_cast_expression [67149,67164]"/>
  <match src="string: string [236,242]" dest="string: string [236,242]"/>
  <match src="identifier: from [50446,50450]" dest="identifier: from [50446,50450]"/>
  <match src="member_expression [81285,81306]" dest="member_expression [81292,81313]"/>
  <match src="identifier: quantity_ [65394,65403]" dest="identifier: quantity_ [65401,65410]"/>
  <match src="comment: // palette [62366,62376]" dest="comment: // palette [62373,62383]"/>
  <match src="}: } [7141,7142]" dest="}: } [7141,7142]"/>
  <match src="return: return [12438,12444]" dest="return: return [12438,12444]"/>
  <match src="expression_statement [72185,72221]" dest="expression_statement [72192,72228]"/>
  <match src="primitive_type [283,288]" dest="primitive_type [283,288]"/>
  <match src="call_argument [42938,42945]" dest="call_argument [42938,42945]"/>
  <match src="): ) [23900,23901]" dest="): ) [23900,23901]"/>
  <match src="member_expression [71137,71169]" dest="member_expression [71144,71176]"/>
  <match src="type_name [3045,3050]" dest="type_name [3045,3050]"/>
  <match src="(: ( [45343,45344]" dest="(: ( [45343,45344]"/>
  <match src="variable_declaration [49946,49981]" dest="variable_declaration [49946,49981]"/>
  <match src="identifier: tokenId [18547,18554]" dest="identifier: tokenId [18547,18554]"/>
  <match src="identifier: owner [18697,18702]" dest="identifier: owner [18697,18702]"/>
  <match src=",: , [62610,62611]" dest=",: , [62617,62618]"/>
  <match src=",: , [62724,62725]" dest=",: , [62731,62732]"/>
  <match src="identifier: head [72741,72745]" dest="identifier: head [72748,72752]"/>
  <match src="comment: // struct to store each token's traits [940,978]" dest="comment: // struct to store each token's traits [940,978]"/>
  <match src="identifier: to [46254,46256]" dest="identifier: to [46254,46256]"/>
  <match src="parameter [40064,40071]" dest="parameter [40064,40071]"/>
  <match src="if_statement [10432,11422]" dest="if_statement [10432,11422]"/>
  <match src="(: ( [64944,64945]" dest="(: ( [64951,64952]"/>
  <match src=".: . [78324,78325]" dest=".: . [78331,78332]"/>
  <match src="visibility [22962,22970]" dest="visibility [22962,22970]"/>
  <match src="identifier: success [31942,31949]" dest="identifier: success [31942,31949]"/>
  <match src="identifier: msg [80559,80562]" dest="identifier: msg [80566,80569]"/>
  <match src="member_expression [55900,55955]" dest="member_expression [55900,55955]"/>
  <match src="parameter [57031,57047]" dest="parameter [57031,57047]"/>
  <match src="identifier: mintPrice_ [64467,64477]" dest="identifier: mintPrice_ [64474,64484]"/>
  <match src="): ) [161,162]" dest="): ) [161,162]"/>
  <match src="parameter [5517,5524]" dest="parameter [5517,5524]"/>
  <match src=".: . [80008,80009]" dest=".: . [80015,80016]"/>
  <match src="{: { [81523,81524]" dest="{: { [81530,81531]"/>
  <match src="assignment_expression [49458,49486]" dest="assignment_expression [49458,49486]"/>
  <match src="number_literal: 0 [63270,63271]" dest="number_literal: 0 [63277,63278]"/>
  <match src="string [67916,67937]" dest="string [67923,67944]"/>
  <match src="array_access [66946,66973]" dest="array_access [66953,66980]"/>
  <match src="function_body [40073,40140]" dest="function_body [40073,40140]"/>
  <match src="primitive_type [42833,42839]" dest="primitive_type [42833,42839]"/>
  <match src="variable_declaration_statement [15646,15714]" dest="variable_declaration_statement [15646,15714]"/>
  <match src="identifier: signature [10436,10445]" dest="identifier: signature [10436,10445]"/>
  <match src="identifier: require [80418,80425]" dest="identifier: require [80425,80432]"/>
  <match src="): ) [12426,12427]" dest="): ) [12426,12427]"/>
  <match src=",: , [32876,32877]" dest=",: , [32876,32877]"/>
  <match src="address: address [12839,12846]" dest="address: address [12839,12846]"/>
  <match src="number_literal: 0 [61181,61182]" dest="number_literal: 0 [61188,61189]"/>
  <match src="internal: internal [17259,17267]" dest="internal: internal [17259,17267]"/>
  <match src="type_name [5737,5742]" dest="type_name [5737,5742]"/>
  <match src="call_expression [63815,63856]" dest="call_expression [63822,63863]"/>
  <match src="uint8: uint8 [1838,1843]" dest="uint8: uint8 [1838,1843]"/>
  <match src="identifier: onERC721Received [55930,55946]" dest="identifier: onERC721Received [55930,55946]"/>
  <match src="): ) [1769,1770]" dest="): ) [1769,1770]"/>
  <match src="address: address [46899,46906]" dest="address: address [46899,46906]"/>
  <match src="(: ( [39649,39650]" dest="(: ( [39649,39650]"/>
  <match src="primitive_type [12330,12337]" dest="primitive_type [12330,12337]"/>
  <match src="parameter [1851,1862]" dest="parameter [1851,1862]"/>
  <match src="member_expression [66218,66231]" dest="member_expression [66225,66238]"/>
  <match src="): ) [39404,39405]" dest="): ) [39404,39405]"/>
  <match src="): ) [78770,78771]" dest="): ) [78777,78778]"/>
  <match src=",: , [62464,62465]" dest=",: , [62471,62472]"/>
  <match src="call_argument [45656,45660]" dest="call_argument [45656,45660]"/>
  <match src="external: external [78869,78877]" dest="external: external [78876,78884]"/>
  <match src="call_argument [10900,10901]" dest="call_argument [10900,10901]"/>
  <match src=".: . [53740,53741]" dest=".: . [53740,53741]"/>
  <match src=",: , [66443,66444]" dest=",: , [66450,66451]"/>
  <match src="}: } [49283,49284]" dest="}: } [49283,49284]"/>
  <match src="identifier: success [30967,30974]" dest="identifier: success [30967,30974]"/>
  <match src="primitive_type [49882,49889]" dest="primitive_type [49882,49889]"/>
  <match src="identifier: msg [64744,64747]" dest="identifier: msg [64751,64754]"/>
  <match src="): ) [52649,52650]" dest="): ) [52649,52650]"/>
  <match src="parameter [1921,1933]" dest="parameter [1921,1933]"/>
  <match src="]: ] [48564,48565]" dest="]: ] [48564,48565]"/>
  <match src="): ) [45345,45346]" dest="): ) [45345,45346]"/>
  <match src="array_access [79375,79393]" dest="array_access [79382,79400]"/>
  <match src="(: ( [67557,67558]" dest="(: ( [67564,67565]"/>
  <match src="return_statement [76558,76591]" dest="return_statement [76565,76598]"/>
  <match src="parameter [29200,29213]" dest="parameter [29200,29213]"/>
  <match src="string [66777,66795]" dest="string [66784,66802]"/>
  <match src="calldata: calldata [23855,23863]" dest="calldata: calldata [23855,23863]"/>
  <match src="primitive_type [1166,1172]" dest="primitive_type [1166,1172]"/>
  <match src="returns: returns [40055,40062]" dest="returns: returns [40055,40062]"/>
  <match src="virtual: virtual [39167,39174]" dest="virtual: virtual [39167,39174]"/>
  <match src="return_statement [81534,81552]" dest="return_statement [81541,81559]"/>
  <match src="return: return [7891,7897]" dest="return: return [7891,7897]"/>
  <match src="primitive_type [1496,1503]" dest="primitive_type [1496,1503]"/>
  <match src=".: . [58980,58981]" dest=".: . [58987,58988]"/>
  <match src="type_name [1935,1941]" dest="type_name [1935,1941]"/>
  <match src="string [79906,79955]" dest="string [79913,79962]"/>
  <match src="uint256: uint256 [80684,80691]" dest="uint256: uint256 [80691,80698]"/>
  <match src="identifier: to [46338,46340]" dest="identifier: to [46338,46340]"/>
  <match src="): ) [40898,40899]" dest="): ) [40898,40899]"/>
  <match src="): ) [48962,48963]" dest="): ) [48962,48963]"/>
  <match src="variable_declaration [12893,12900]" dest="variable_declaration [12893,12900]"/>
  <match src="primitive_type [68868,68873]" dest="primitive_type [68875,68880]"/>
  <match src="): ) [33641,33642]" dest="): ) [33641,33642]"/>
  <match src="primitive_type [42369,42375]" dest="primitive_type [42369,42375]"/>
  <match src=",: , [32390,32391]" dest=",: , [32390,32391]"/>
  <match src="=&gt;: =&gt; [37566,37568]" dest="=&gt;: =&gt; [37566,37568]"/>
  <match src="[: [ [73217,73218]" dest="[: [ [73224,73225]"/>
  <match src="identifier: tokenId [46723,46730]" dest="identifier: tokenId [46723,46730]"/>
  <match src="binary_expression [14779,14858]" dest="binary_expression [14779,14858]"/>
  <match src="&quot;: &quot; [27141,27142]" dest="&quot;: &quot; [27141,27142]"/>
  <match src="]: ] [5653,5654]" dest="]: ] [5653,5654]"/>
  <match src="string: string [7544,7550]" dest="string: string [7544,7550]"/>
  <match src="member_expression [10436,10452]" dest="member_expression [10436,10452]"/>
  <match src="expression_statement [66214,66232]" dest="expression_statement [66221,66239]"/>
  <match src="identifier: QuestLike [4024,4033]" dest="identifier: QuestLike [4024,4033]"/>
  <match src="call_argument [55818,55830]" dest="call_argument [55818,55830]"/>
  <match src="parameter [302,317]" dest="parameter [302,317]"/>
  <match src="primitive_type [66672,66677]" dest="primitive_type [66679,66684]"/>
  <match src="return_statement [41266,41283]" dest="return_statement [41266,41283]"/>
  <match src="call_expression [77679,77716]" dest="call_expression [77686,77723]"/>
  <match src="variable_declaration [13420,13437]" dest="variable_declaration [13420,13437]"/>
  <match src="(: ( [4665,4666]" dest="(: ( [4665,4666]"/>
  <match src="&gt;: &gt; [79990,79991]" dest="&gt;: &gt; [79997,79998]"/>
  <match src="function: function [63623,63631]" dest="function: function [63630,63638]"/>
  <match src="return: return [78025,78031]" dest="return: return [78032,78038]"/>
  <match src="identifier: InvalidSignatureV [8938,8955]" dest="identifier: InvalidSignatureV [8938,8955]"/>
  <match src="uint8: uint8 [5724,5729]" dest="uint8: uint8 [5724,5729]"/>
  <match src="(: ( [49536,49537]" dest="(: ( [49536,49537]"/>
  <match src="function_body [64505,64677]" dest="function_body [64512,64684]"/>
  <match src="binary_expression [69169,69198]" dest="binary_expression [69176,69205]"/>
  <match src="return_statement [29264,29359]" dest="return_statement [29264,29359]"/>
  <match src="identifier: getTokenTraits [78837,78851]" dest="identifier: getTokenTraits [78844,78858]"/>
  <match src="): ) [68882,68883]" dest="): ) [68889,68890]"/>
  <match src="identifier: numberBurned [40119,40131]" dest="identifier: numberBurned [40119,40131]"/>
  <match src="}: } [46871,46872]" dest="}: } [46871,46872]"/>
  <match src="visibility [77982,77990]" dest="visibility [77989,77997]"/>
  <match src="type_name [31336,31341]" dest="type_name [31336,31341]"/>
  <match src=",: , [78304,78305]" dest=",: , [78311,78312]"/>
  <match src=",: , [466,467]" dest=",: , [466,467]"/>
  <match src="identifier: TokenOwnership [52460,52474]" dest="identifier: TokenOwnership [52460,52474]"/>
  <match src="array_access [78986,79005]" dest="array_access [78993,79012]"/>
  <match src="type_name [64480,64487]" dest="type_name [64487,64494]"/>
  <match src="parameter [34627,34645]" dest="parameter [34627,34645]"/>
  <match src="type_name [5132,5137]" dest="type_name [5132,5137]"/>
  <match src="binary_expression [68357,68403]" dest="binary_expression [68364,68410]"/>
  <match src="}: } [74249,74250]" dest="}: } [74256,74257]"/>
  <match src=",: , [5565,5566]" dest=",: , [5565,5566]"/>
  <match src="call_argument [54562,54569]" dest="call_argument [54562,54569]"/>
  <match src="array_access [74090,74113]" dest="array_access [74097,74120]"/>
  <match src="&quot;: &quot; [50086,50087]" dest="&quot;: &quot; [50086,50087]"/>
  <match src="): ) [69979,69980]" dest="): ) [69986,69987]"/>
  <match src=":=: := [12937,12939]" dest=":=: := [12937,12939]"/>
  <match src="comment: // Prince Pom, Prince of Dogewood Kingdom [73295,73336]" dest="comment: // Prince Pom, Prince of Dogewood Kingdom [73302,73343]"/>
  <match src="call_argument [15705,15706]" dest="call_argument [15705,15706]"/>
  <match src="memory: memory [29178,29184]" dest="memory: memory [29178,29184]"/>
  <match src="type_name [1595,1602]" dest="type_name [1595,1602]"/>
  <match src="string: string [148,154]" dest="string: string [148,154]"/>
  <match src="state_mutability [67409,67413]" dest="state_mutability [67416,67420]"/>
  <match src="else: else [10921,10925]" dest="else: else [10921,10925]"/>
  <match src="number_literal: 16 [77572,77574]" dest="number_literal: 16 [77579,77581]"/>
  <match src="function: function [66649,66657]" dest="function: function [66656,66664]"/>
  <match src="expression_statement [67121,67193]" dest="expression_statement [67128,67200]"/>
  <match src="uint256: uint256 [4413,4420]" dest="uint256: uint256 [4413,4420]"/>
  <match src="uint8: uint8 [64417,64422]" dest="uint8: uint8 [64424,64429]"/>
  <match src="expression_statement [72875,72912]" dest="expression_statement [72882,72919]"/>
  <match src="external: external [1346,1354]" dest="external: external [1346,1354]"/>
  <match src="}: } [57073,57074]" dest="}: } [57073,57074]"/>
  <match src="&quot;: &quot; [66096,66097]" dest="&quot;: &quot; [66103,66104]"/>
  <match src="augmented_assignment_expression [50863,50894]" dest="augmented_assignment_expression [50863,50894]"/>
  <match src=",: , [16826,16827]" dest=",: , [16826,16827]"/>
  <match src="(: ( [64743,64744]" dest="(: ( [64750,64751]"/>
  <match src="+: + [67261,67262]" dest="+: + [67268,67269]"/>
  <match src="call_expression [17309,17377]" dest="call_expression [17309,17377]"/>
  <match src="&quot;: &quot; [29967,29968]" dest="&quot;: &quot; [29967,29968]"/>
  <match src="parameter [64704,64714]" dest="parameter [64711,64721]"/>
  <match src="number_literal: 255 [63326,63329]" dest="number_literal: 255 [63333,63336]"/>
  <match src="expression_statement [68349,68474]" dest="expression_statement [68356,68481]"/>
  <match src=",: , [15575,15576]" dest=",: , [15575,15576]"/>
  <match src=",: , [54947,54948]" dest=",: , [54947,54948]"/>
  <match src="(: ( [14890,14891]" dest="(: ( [14890,14891]"/>
  <match src="number_literal: 219 [62795,62798]" dest="number_literal: 219 [62802,62805]"/>
  <match src="number_literal: 10 [6624,6626]" dest="number_literal: 10 [6624,6626]"/>
  <match src="contract_body [34529,34760]" dest="contract_body [34529,34760]"/>
  <match src="identifier: data [31021,31025]" dest="identifier: data [31021,31025]"/>
  <match src="parenthesized_expression [78791,78812]" dest="parenthesized_expression [78798,78819]"/>
  <match src="identifier: i [66079,66080]" dest="identifier: i [66086,66087]"/>
  <match src=",: , [3858,3859]" dest=",: , [3858,3859]"/>
  <match src="return_statement [39849,39898]" dest="return_statement [39849,39898]"/>
  <match src="identifier: IERC721 [35843,35850]" dest="identifier: IERC721 [35843,35850]"/>
  <match src="(: ( [77690,77691]" dest="(: ( [77697,77698]"/>
  <match src="type_name [54984,54991]" dest="type_name [54984,54991]"/>
  <match src="expression_statement [65810,65852]" dest="expression_statement [65817,65859]"/>
  <match src="identifier: quantity_ [65473,65482]" dest="identifier: quantity_ [65480,65489]"/>
  <match src=",: , [56190,56191]" dest=",: , [56190,56191]"/>
  <match src="identifier: errorMessage [29754,29766]" dest="identifier: errorMessage [29754,29766]"/>
  <match src="type_name [37680,37687]" dest="type_name [37680,37687]"/>
  <match src="array_access [67203,67230]" dest="array_access [67210,67237]"/>
  <match src="array_access [64162,64184]" dest="array_access [64169,64191]"/>
  <match src="expression_statement [64736,64765]" dest="expression_statement [64743,64772]"/>
  <match src="return: return [33694,33700]" dest="return: return [33694,33700]"/>
  <match src="comment: /**      * @dev Returns the address that signed a hashed message (`hash`) with      * `signature`. This address can then be used for verification purposes.      *      * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:      * this function rejects them by requiring the `s` value to be in the lower      * half order, and the `v` value to be either 27 or 28.      *      * IMPORTANT: `hash` _must_ be the result of a hash operation for the      * verification to be secure: it is possible to craft signatures that      * recover to arbitrary addresses for non-hashed data. A safe way to ensure      * this is by receiving a hash of the original message (which may otherwise      * be too long), and then calling {toEthSignedMessageHash} on it.      */ [11437,12225]" dest="comment: /**      * @dev Returns the address that signed a hashed message (`hash`) with      * `signature`. This address can then be used for verification purposes.      *      * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:      * this function rejects them by requiring the `s` value to be in the lower      * half order, and the `v` value to be either 27 or 28.      *      * IMPORTANT: `hash` _must_ be the result of a hash operation for the      * verification to be secure: it is possible to craft signatures that      * recover to arbitrary addresses for non-hashed data. A safe way to ensure      * this is by receiving a hash of the original message (which may otherwise      * be too long), and then calling {toEthSignedMessageHash} on it.      */ [11437,12225]"/>
  <match src="comment: //     After 48hrs the unclaimed supply will go towards the public sale [66572,66643]" dest="comment: //     After 48hrs the unclaimed supply will go towards the public sale [66579,66650]"/>
  <match src="member_expression [72769,72798]" dest="member_expression [72776,72805]"/>
  <match src="memory: memory [155,161]" dest="memory: memory [155,161]"/>
  <match src="function_definition [19290,19362]" dest="function_definition [19290,19362]"/>
  <match src="primitive_type [80736,80741]" dest="primitive_type [80743,80748]"/>
  <match src="identifier: msg [68530,68533]" dest="identifier: msg [68537,68540]"/>
  <match src="): ) [3635,3636]" dest="): ) [3635,3636]"/>
  <match src="payable: payable [68893,68900]" dest="payable: payable [68900,68907]"/>
  <match src="expression_statement [65129,65158]" dest="expression_statement [65136,65165]"/>
  <match src="visibility [43430,43436]" dest="visibility [43430,43436]"/>
  <match src="visibility [3872,3880]" dest="visibility [3872,3880]"/>
  <match src="parameter [13358,13368]" dest="parameter [13358,13368]"/>
  <match src="parameter [39791,39804]" dest="parameter [39791,39804]"/>
  <match src="identifier: tokenId [45845,45852]" dest="identifier: tokenId [45845,45852]"/>
  <match src="=: = [72908,72909]" dest="=: = [72915,72916]"/>
  <match src="call_struct_argument [79418,79459]" dest="call_struct_argument [79425,79466]"/>
  <match src="type_name [59863,59867]" dest="type_name [59870,59874]"/>
  <match src="visibility [59445,59451]" dest="visibility [59452,59458]"/>
  <match src="revert: revert [32966,32972]" dest="revert: revert [32966,32972]"/>
  <match src="type_name [54002,54009]" dest="type_name [54002,54009]"/>
  <match src="}: } [49399,49400]" dest="}: } [49399,49400]"/>
  <match src=",: , [65959,65960]" dest=",: , [65966,65967]"/>
  <match src="=: = [48694,48695]" dest="=: = [48694,48695]"/>
  <match src="(: ( [16295,16296]" dest="(: ( [16295,16296]"/>
  <match src="identifier: isApprovedForAll [22168,22184]" dest="identifier: isApprovedForAll [22168,22184]"/>
  <match src="comment: // more than _currentIndex - _startTokenId() times [38503,38553]" dest="comment: // more than _currentIndex - _startTokenId() times [38503,38553]"/>
  <match src="==: == [68142,68144]" dest="==: == [68149,68151]"/>
  <match src="visibility [59166,59172]" dest="visibility [59173,59179]"/>
  <match src="identifier: r [13809,13810]" dest="identifier: r [13809,13810]"/>
  <match src="string: string [32401,32407]" dest="string: string [32401,32407]"/>
  <match src="number_literal: 153 [63079,63082]" dest="number_literal: 153 [63086,63089]"/>
  <match src="type_name [15647,15654]" dest="type_name [15647,15654]"/>
  <match src="variable_declaration_statement [45924,46078]" dest="variable_declaration_statement [45924,46078]"/>
  <match src="type_name [12262,12267]" dest="type_name [12262,12267]"/>
  <match src="=: = [63387,63388]" dest="=: = [63394,63395]"/>
  <match src="]: ] [79340,79341]" dest="]: ] [79347,79348]"/>
  <match src="call_argument [44714,44744]" dest="call_argument [44714,44744]"/>
  <match src="comment: //     isApprovedForAll(from, _msgSender()) || [50163,50209]" dest="comment: //     isApprovedForAll(from, _msgSender()) || [50163,50209]"/>
  <match src="&quot;: &quot; [29896,29897]" dest="&quot;: &quot; [29896,29897]"/>
  <match src="call_argument [46973,46975]" dest="call_argument [46973,46975]"/>
  <match src="identifier: i [7747,7748]" dest="identifier: i [7747,7748]"/>
  <match src="comment: // Keeps track of burn count with minimal overhead for tokenomics. [36665,36731]" dest="comment: // Keeps track of burn count with minimal overhead for tokenomics. [36665,36731]"/>
  <match src="(: ( [61110,61111]" dest="(: ( [61117,61118]"/>
  <match src="external: external [4677,4685]" dest="external: external [4677,4685]"/>
  <match src="uint8: uint8 [5737,5742]" dest="uint8: uint8 [5737,5742]"/>
  <match src="parameter [29716,29729]" dest="parameter [29716,29729]"/>
  <match src="bool: bool [46755,46759]" dest="bool: bool [46755,46759]"/>
  <match src="identifier: quantity_ [68056,68065]" dest="identifier: quantity_ [68063,68072]"/>
  <match src="call_argument [54608,54618]" dest="call_argument [54608,54618]"/>
  <match src="identifier: sender [80619,80625]" dest="identifier: sender [80626,80632]"/>
  <match src="identifier: timestamp [51096,51105]" dest="identifier: timestamp [51096,51105]"/>
  <match src="identifier: i [65947,65948]" dest="identifier: i [65954,65955]"/>
  <match src="event_definition [60695,60754]" dest="event_definition [60702,60761]"/>
  <match src="==: == [61157,61159]" dest="==: == [61164,61166]"/>
  <match src="identifier: this [27116,27120]" dest="identifier: this [27116,27120]"/>
  <match src="returns: returns [19338,19345]" dest="returns: returns [19338,19345]"/>
  <match src="identifier: addr [42148,42152]" dest="identifier: addr [42148,42152]"/>
  <match src="identifier: seed [74546,74550]" dest="identifier: seed [74553,74557]"/>
  <match src="state_mutability [22227,22231]" dest="state_mutability [22227,22231]"/>
  <match src="}: } [63957,63958]" dest="}: } [63964,63965]"/>
  <match src="contract_body [2281,2381]" dest="contract_body [2281,2381]"/>
  <match src="return_statement [14987,15039]" dest="return_statement [14987,15039]"/>
  <match src="&quot;: &quot; [31440,31441]" dest="&quot;: &quot; [31440,31441]"/>
  <match src="&quot;: &quot; [65440,65441]" dest="&quot;: &quot; [65447,65448]"/>
  <match src="member_expression [80505,80515]" dest="member_expression [80512,80522]"/>
  <match src="call_argument [77200,77213]" dest="call_argument [77207,77220]"/>
  <match src="boolean_literal [47497,47501]" dest="boolean_literal [47497,47501]"/>
  <match src="identifier: tokenId [44677,44684]" dest="identifier: tokenId [44677,44684]"/>
  <match src="primitive_type [5783,5788]" dest="primitive_type [5783,5788]"/>
  <match src="identifier: tokenId [21345,21352]" dest="identifier: tokenId [21345,21352]"/>
  <match src="}: } [24604,24605]" dest="}: } [24604,24605]"/>
  <match src="=: = [51378,51379]" dest="=: = [51378,51379]"/>
  <match src="binary_expression [68042,68065]" dest="binary_expression [68049,68072]"/>
  <match src="identifier: nextSlot [51774,51782]" dest="identifier: nextSlot [51774,51782]"/>
  <match src="expression_statement [81241,81275]" dest="expression_statement [81248,81282]"/>
  <match src="primitive_type [36283,36289]" dest="primitive_type [36283,36289]"/>
  <match src="primitive_type [40883,40890]" dest="primitive_type [40883,40890]"/>
  <match src="): ) [66846,66847]" dest="): ) [66853,66854]"/>
  <match src="{: { [38573,38574]" dest="{: { [38573,38574]"/>
  <match src="call_expression [42126,42147]" dest="call_expression [42126,42147]"/>
  <match src="identifier: NoError [8483,8490]" dest="identifier: NoError [8483,8490]"/>
  <match src="identifier: id [80692,80694]" dest="identifier: id [80699,80701]"/>
  <match src="}: } [33022,33023]" dest="}: } [33022,33023]"/>
  <match src="expression_statement [63180,63214]" dest="expression_statement [63187,63221]"/>
  <match src="identifier: addr [48566,48570]" dest="identifier: addr [48566,48570]"/>
  <match src="identifier: msg [65137,65140]" dest="identifier: msg [65144,65147]"/>
  <match src="returns: returns [23885,23892]" dest="returns: returns [23885,23892]"/>
  <match src="source_file [0,81562]" dest="source_file [0,81569]"/>
  <match src="(: ( [67464,67465]" dest="(: ( [67471,67472]"/>
  <match src="=: = [72050,72051]" dest="=: = [72057,72058]"/>
  <match src="[: [ [64092,64093]" dest="[: [ [64099,64100]"/>
  <match src="call_argument [48881,48893]" dest="call_argument [48881,48893]"/>
  <match src="identifier: owner [40283,40288]" dest="identifier: owner [40283,40288]"/>
  <match src="expression_statement [80981,81009]" dest="expression_statement [80988,81016]"/>
  <match src="): ) [44366,44367]" dest="): ) [44366,44367]"/>
  <match src="type_name [19084,19091]" dest="type_name [19084,19091]"/>
  <match src="=: = [31001,31002]" dest="=: = [31001,31002]"/>
  <match src="(: ( [42761,42762]" dest="(: ( [42761,42762]"/>
  <match src="string [45355,45380]" dest="string [45355,45380]"/>
  <match src="enum_value: InvalidSignatureS [8332,8349]" dest="enum_value: InvalidSignatureS [8332,8349]"/>
  <match src="number_literal: 0 [60985,60986]" dest="number_literal: 0 [60992,60993]"/>
  <match src="number_literal: 255 [62401,62404]" dest="number_literal: 255 [62408,62411]"/>
  <match src="uint: uint [69169,69173]" dest="uint: uint [69176,69180]"/>
  <match src=".: . [69582,69583]" dest=".: . [69589,69590]"/>
  <match src="string: string [28587,28593]" dest="string: string [28587,28593]"/>
  <match src="parameter [13783,13790]" dest="parameter [13783,13790]"/>
  <match src="bytes32: bytes32 [13821,13828]" dest="bytes32: bytes32 [13821,13828]"/>
  <match src="identifier: r [11315,11316]" dest="identifier: r [11315,11316]"/>
  <match src="parameter [1440,1447]" dest="parameter [1440,1447]"/>
  <match src="}: } [65055,65056]" dest="}: } [65062,65063]"/>
  <match src="==: == [7096,7098]" dest="==: == [7096,7098]"/>
  <match src="interface_declaration [913,2242]" dest="interface_declaration [913,2242]"/>
  <match src="(: ( [24407,24408]" dest="(: ( [24407,24408]"/>
  <match src=",: , [21335,21336]" dest=",: , [21335,21336]"/>
  <match src="=: = [62329,62330]" dest="=: = [62336,62337]"/>
  <match src="number_literal: 0 [65834,65835]" dest="number_literal: 0 [65841,65842]"/>
  <match src="string [74912,74914]" dest="string [74919,74921]"/>
  <match src="identifier: r [10706,10707]" dest="identifier: r [10706,10707]"/>
  <match src="): ) [3173,3174]" dest="): ) [3173,3174]"/>
  <match src="(: ( [77526,77527]" dest="(: ( [77533,77534]"/>
  <match src="comment: // safe operation with max batch 10 [74757,74792]" dest="comment: // safe operation with max batch 10 [74764,74799]"/>
  <match src="member_expression [70913,70945]" dest="member_expression [70920,70952]"/>
  <match src="emit_statement [44335,44389]" dest="emit_statement [44335,44389]"/>
  <match src="array_access [70968,70991]" dest="array_access [70975,70998]"/>
  <match src="expression_statement [65453,65484]" dest="expression_statement [65460,65491]"/>
  <match src="call_argument [78176,78186]" dest="call_argument [78183,78193]"/>
  <match src="visibility [64008,64016]" dest="visibility [64015,64023]"/>
  <match src="identifier: msg [61811,61814]" dest="identifier: msg [61818,61821]"/>
  <match src="internal: internal [37190,37198]" dest="internal: internal [37190,37198]"/>
  <match src="identifier: totalClaimed [66378,66390]" dest="identifier: totalClaimed [66385,66397]"/>
  <match src="struct_declaration [984,1297]" dest="struct_declaration [984,1297]"/>
  <match src="type_name [60718,60723]" dest="type_name [60725,60730]"/>
  <match src="}: } [26082,26083]" dest="}: } [26082,26083]"/>
  <match src="identifier: currSlot [53732,53740]" dest="identifier: currSlot [53732,53740]"/>
  <match src="comment: // used to ensure there are no duplicates [59754,59795]" dest="comment: // used to ensure there are no duplicates [59761,59802]"/>
  <match src="identifier: success [32487,32494]" dest="identifier: success [32487,32494]"/>
  <match src="identifier: commoners [79535,79544]" dest="identifier: commoners [79542,79551]"/>
  <match src="uint256: uint256 [2444,2451]" dest="uint256: uint256 [2444,2451]"/>
  <match src="is: is [18360,18362]" dest="is: is [18360,18362]"/>
  <match src="(: ( [42499,42500]" dest="(: ( [42499,42500]"/>
  <match src="number_literal: 122 [62972,62975]" dest="number_literal: 122 [62979,62982]"/>
  <match src="parameter [40026,40039]" dest="parameter [40026,40039]"/>
  <match src="(: ( [39266,39267]" dest="(: ( [39266,39267]"/>
  <match src="parameter [5567,5579]" dest="parameter [5567,5579]"/>
  <match src="identifier: ownership [41111,41120]" dest="identifier: ownership [41111,41120]"/>
  <match src="external: external [24564,24572]" dest="external: external [24564,24572]"/>
  <match src="identifier: head [73732,73736]" dest="identifier: head [73739,73743]"/>
  <match src="string_literal [31882,31922]" dest="string_literal [31882,31922]"/>
  <match src="identifier: t [77086,77087]" dest="identifier: t [77093,77094]"/>
  <match src="parameter [29792,29804]" dest="parameter [29792,29804]"/>
  <match src="member_expression [72239,72270]" dest="member_expression [72246,72277]"/>
  <match src="function_definition [2016,2072]" dest="function_definition [2016,2072]"/>
  <match src="uint64: uint64 [36283,36289]" dest="uint64: uint64 [36283,36289]"/>
  <match src="array_access [62114,62125]" dest="array_access [62121,62132]"/>
  <match src="primitive_type [4515,4520]" dest="primitive_type [4515,4520]"/>
  <match src="override: override [45619,45627]" dest="override: override [45619,45627]"/>
  <match src="address: address [3597,3604]" dest="address: address [3597,3604]"/>
  <match src=",: , [29855,29856]" dest=",: , [29855,29856]"/>
  <match src="]: ] [40640,40641]" dest="]: ] [40640,40641]"/>
  <match src="assignment_expression [73099,73135]" dest="assignment_expression [73106,73142]"/>
  <match src="type_name [58952,58990]" dest="type_name [58959,58997]"/>
  <match src="parameter [80708,80719]" dest="parameter [80715,80726]"/>
  <match src="number_literal: 198 [62815,62818]" dest="number_literal: 198 [62822,62825]"/>
  <match src="comment: // ERC721 receiver [81374,81392]" dest="comment: // ERC721 receiver [81381,81399]"/>
  <match src="function: function [40558,40566]" dest="function: function [40558,40566]"/>
  <match src="identifier: r [15183,15184]" dest="identifier: r [15183,15184]"/>
  <match src="return: return [15314,15320]" dest="return: return [15314,15320]"/>
  <match src="identifier: tokenURI [24538,24546]" dest="identifier: tokenURI [24538,24546]"/>
  <match src="}: } [7814,7815]" dest="}: } [7814,7815]"/>
  <match src="=: = [73953,73954]" dest="=: = [73960,73961]"/>
  <match src="): ) [24289,24290]" dest="): ) [24289,24290]"/>
  <match src="return: return [43305,43311]" dest="return: return [43305,43311]"/>
  <match src="visibility [2001,2009]" dest="visibility [2001,2009]"/>
  <match src="address: address [847,854]" dest="address: address [847,854]"/>
  <match src="(: ( [12308,12309]" dest="(: ( [12308,12309]"/>
  <match src="array_access [76495,76533]" dest="array_access [76502,76540]"/>
  <match src=",: , [20127,20128]" dest=",: , [20127,20128]"/>
  <match src="member_expression [67249,67259]" dest="member_expression [67256,67266]"/>
  <match src=".: . [79897,79898]" dest=".: . [79904,79905]"/>
  <match src="primitive_type [30799,30805]" dest="primitive_type [30799,30805]"/>
  <match src="type_name [22200,22207]" dest="type_name [22200,22207]"/>
  <match src="identifier: topCommoner_ [74043,74055]" dest="identifier: topCommoner_ [74050,74062]"/>
  <match src=",: , [62955,62956]" dest=",: , [62962,62963]"/>
  <match src=",: , [57837,57838]" dest=",: , [57837,57838]"/>
  <match src="number_literal: 0xFFFF [77458,77464]" dest="number_literal: 0xFFFF [77465,77471]"/>
  <match src="call_argument [52511,52518]" dest="call_argument [52511,52518]"/>
  <match src="type_name [1890,1895]" dest="type_name [1890,1895]"/>
  <match src="identifier: smithing [79503,79511]" dest="identifier: smithing [79510,79518]"/>
  <match src="identifier: cooking [77669,77676]" dest="identifier: cooking [77676,77683]"/>
  <match src="identifier: IDrawSvg [374,382]" dest="identifier: IDrawSvg [374,382]"/>
  <match src=",: , [66893,66894]" dest=",: , [66900,66901]"/>
  <match src="uint16: uint16 [65697,65703]" dest="uint16: uint16 [65704,65710]"/>
  <match src="): ) [16830,16831]" dest="): ) [16830,16831]"/>
  <match src="call_argument [66907,66926]" dest="call_argument [66914,66933]"/>
  <match src="member_expression [16279,16295]" dest="member_expression [16279,16295]"/>
  <match src="): ) [32906,32907]" dest="): ) [32906,32907]"/>
  <match src=",: , [62271,62272]" dest=",: , [62278,62279]"/>
  <match src="identifier: commoners [75485,75494]" dest="identifier: commoners [75492,75501]"/>
  <match src="identifier: tokenId [51380,51387]" dest="identifier: tokenId [51380,51387]"/>
  <match src="and: and [12940,12943]" dest="and: and [12940,12943]"/>
  <match src="binary_expression [80876,80895]" dest="binary_expression [80883,80902]"/>
  <match src=".: . [64747,64748]" dest=".: . [64754,64755]"/>
  <match src="identifier: pull [1727,1731]" dest="identifier: pull [1727,1731]"/>
  <match src="primitive_type [80802,80807]" dest="primitive_type [80809,80814]"/>
  <match src="type_name [29200,29207]" dest="type_name [29200,29207]"/>
  <match src="primitive_type [52911,52918]" dest="primitive_type [52911,52918]"/>
  <match src="returns: returns [7535,7542]" dest="returns: returns [7535,7542]"/>
  <match src=",: , [55706,55707]" dest=",: , [55706,55707]"/>
  <match src="address: address [40275,40282]" dest="address: address [40275,40282]"/>
  <match src="type_name [10475,10482]" dest="type_name [10475,10482]"/>
  <match src=",: , [29995,29996]" dest=",: , [29995,29996]"/>
  <match src="type_name [1985,1990]" dest="type_name [1985,1990]"/>
  <match src="[: [ [62261,62262]" dest="[: [ [62268,62269]"/>
  <match src="struct_member [4342,4355]" dest="struct_member [4342,4355]"/>
  <match src="variable_declaration [27187,27199]" dest="variable_declaration [27187,27199]"/>
  <match src="{: { [3211,3212]" dest="{: { [3211,3212]"/>
  <match src="array_access [79430,79448]" dest="array_access [79437,79455]"/>
  <match src=",: , [63706,63707]" dest=",: , [63713,63714]"/>
  <match src="number_literal: 0 [14891,14892]" dest="number_literal: 0 [14891,14892]"/>
  <match src="primitive_type [6224,6230]" dest="primitive_type [6224,6230]"/>
  <match src="!=: != [54334,54336]" dest="!=: != [54334,54336]"/>
  <match src="&quot;: &quot; [68318,68319]" dest="&quot;: &quot; [68325,68326]"/>
  <match src="member_expression [81241,81263]" dest="member_expression [81248,81270]"/>
  <match src="address: address [35893,35900]" dest="address: address [35893,35900]"/>
  <match src="number_literal: 51 [63210,63212]" dest="number_literal: 51 [63217,63219]"/>
  <match src="parameter [23800,23812]" dest="parameter [23800,23812]"/>
  <match src="): ) [10737,10738]" dest="): ) [10737,10738]"/>
  <match src="==: == [46061,46063]" dest="==: == [46061,46063]"/>
  <match src="identifier: _msgSender [52638,52648]" dest="identifier: _msgSender [52638,52648]"/>
  <match src="uint256: uint256 [4935,4942]" dest="uint256: uint256 [4935,4942]"/>
  <match src="return_type_definition [4856,4873]" dest="return_type_definition [4856,4873]"/>
  <match src="identifier: cooking [5356,5363]" dest="identifier: cooking [5356,5363]"/>
  <match src="call_argument [28231,28263]" dest="call_argument [28231,28263]"/>
  <match src="): ) [48804,48805]" dest="): ) [48804,48805]"/>
  <match src="parameter [75380,75392]" dest="parameter [75387,75399]"/>
  <match src="type_name [29983,29987]" dest="type_name [29983,29987]"/>
  <match src="identifier: bodyType [80742,80750]" dest="identifier: bodyType [80749,80757]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [77485,77488]" dest="&gt;&gt;=: &gt;&gt;= [77492,77495]"/>
  <match src="&amp;: &amp; [77621,77622]" dest="&amp;: &amp; [77628,77629]"/>
  <match src="(: ( [6781,6782]" dest="(: ( [6781,6782]"/>
  <match src=",: , [79561,79562]" dest=",: , [79568,79569]"/>
  <match src="=: = [49982,49983]" dest="=: = [49982,49983]"/>
  <match src="uint64: uint64 [4629,4635]" dest="uint64: uint64 [4629,4635]"/>
  <match src="(: ( [23762,23763]" dest="(: ( [23762,23763]"/>
  <match src="(: ( [46754,46755]" dest="(: ( [46754,46755]"/>
  <match src="returns: returns [75403,75410]" dest="returns: returns [75410,75417]"/>
  <match src="comment: // sale variables [58174,58191]" dest="comment: // sale variables [58174,58191]"/>
  <match src="(: ( [14994,14995]" dest="(: ( [14994,14995]"/>
  <match src="type_name [78005,78012]" dest="type_name [78012,78019]"/>
  <match src="parenthesized_expression [42787,42820]" dest="parenthesized_expression [42787,42820]"/>
  <match src="binary_expression [51678,51706]" dest="binary_expression [51678,51706]"/>
  <match src="binary_expression [39247,39340]" dest="binary_expression [39247,39340]"/>
  <match src="view: view [5590,5594]" dest="view: view [5590,5594]"/>
  <match src="type_name [15147,15154]" dest="type_name [15147,15154]"/>
  <match src="{: { [3107,3108]" dest="{: { [3107,3108]"/>
  <match src="call_argument [12382,12386]" dest="call_argument [12382,12386]"/>
  <match src="=: = [74425,74426]" dest="=: = [74432,74433]"/>
  <match src="binary_expression [47959,47975]" dest="binary_expression [47959,47975]"/>
  <match src="call_expression [66866,66905]" dest="call_expression [66873,66912]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [77732,77735]" dest="&gt;&gt;=: &gt;&gt;= [77739,77742]"/>
  <match src="expression_statement [64775,64787]" dest="expression_statement [64782,64794]"/>
  <match src="member_expression [69515,69525]" dest="member_expression [69522,69532]"/>
  <match src="view: view [33652,33656]" dest="view: view [33652,33656]"/>
  <match src="identifier: commoners [79323,79332]" dest="identifier: commoners [79330,79339]"/>
  <match src="(: ( [6679,6680]" dest="(: ( [6679,6680]"/>
  <match src="member_expression [52547,52565]" dest="member_expression [52547,52565]"/>
  <match src="function_definition [3752,3821]" dest="function_definition [3752,3821]"/>
  <match src="variable_declaration [54002,54021]" dest="variable_declaration [54002,54021]"/>
  <match src="parameter [46715,46730]" dest="parameter [46715,46730]"/>
  <match src="]: ] [62684,62685]" dest="]: ] [62691,62692]"/>
  <match src="primitive_type [18730,18737]" dest="primitive_type [18730,18737]"/>
  <match src="(: ( [68850,68851]" dest="(: ( [68857,68858]"/>
  <match src="return_type_definition [227,250]" dest="return_type_definition [227,250]"/>
  <match src="array_access [39650,39669]" dest="array_access [39650,39669]"/>
  <match src="primitive_type [76433,76438]" dest="primitive_type [76440,76445]"/>
  <match src="comment: // error MintZeroQuantity(); [35518,35546]" dest="comment: // error MintZeroQuantity(); [35518,35546]"/>
  <match src="]: ] [67259,67260]" dest="]: ] [67266,67267]"/>
  <match src="comment: // if (to == address(0)) revert TransferToZeroAddress(); [50356,50412]" dest="comment: // if (to == address(0)) revert TransferToZeroAddress(); [50356,50412]"/>
  <match src=",: , [27199,27200]" dest=",: , [27199,27200]"/>
  <match src="call_argument [77382,77383]" dest="call_argument [77389,77390]"/>
  <match src="yul_evm_builtin [56201,56206]" dest="yul_evm_builtin [56201,56206]"/>
  <match src="function: function [12231,12239]" dest="function: function [12231,12239]"/>
  <match src="type_name [3666,3673]" dest="type_name [3666,3673]"/>
  <match src="identifier: TokenOwnership [51406,51420]" dest="identifier: TokenOwnership [51406,51420]"/>
  <match src="parameter [45581,45596]" dest="parameter [45581,45596]"/>
  <match src="[: [ [6764,6765]" dest="[: [ [6764,6765]"/>
  <match src="[: [ [48551,48552]" dest="[: [ [48551,48552]"/>
  <match src="[: [ [79332,79333]" dest="[: [ [79339,79340]"/>
  <match src="]: ] [81253,81254]" dest="]: ] [81260,81261]"/>
  <match src=",: , [3442,3443]" dest=",: , [3442,3443]"/>
  <match src=".: . [79448,79449]" dest=".: . [79455,79456]"/>
  <match src="while_statement [41608,41869]" dest="while_statement [41608,41869]"/>
  <match src="variable_declaration_statement [74848,74862]" dest="variable_declaration_statement [74855,74869]"/>
  <match src="[: [ [62998,62999]" dest="[: [ [63005,63006]"/>
  <match src="call_argument [77714,77715]" dest="call_argument [77721,77722]"/>
  <match src="identifier: sender [63691,63697]" dest="identifier: sender [63698,63704]"/>
  <match src=".: . [79553,79554]" dest=".: . [79560,79561]"/>
  <match src="array_access [73812,73835]" dest="array_access [73819,73842]"/>
  <match src="parameter [30771,30788]" dest="parameter [30771,30788]"/>
  <match src="identifier: _ [61245,61246]" dest="identifier: _ [61252,61253]"/>
  <match src="state_mutability [12825,12829]" dest="state_mutability [12825,12829]"/>
  <match src="identifier: quantity_ [68995,69004]" dest="identifier: quantity_ [69002,69011]"/>
  <match src="address: address [69527,69534]" dest="address: address [69534,69541]"/>
  <match src="&gt;: &gt; [32650,32651]" dest="&gt;: &gt; [32650,32651]"/>
  <match src="number_literal: 0 [7099,7100]" dest="number_literal: 0 [7099,7100]"/>
  <match src="identifier: setTreat [64241,64249]" dest="identifier: setTreat [64248,64256]"/>
  <match src="type_name [29740,29746]" dest="type_name [29740,29746]"/>
  <match src="if: if [8457,8459]" dest="if: if [8457,8459]"/>
  <match src="address: address [59228,59235]" dest="address: address [59235,59242]"/>
  <match src="identifier: from [52905,52909]" dest="identifier: from [52905,52909]"/>
  <match src="(: ( [17281,17282]" dest="(: ( [17281,17282]"/>
  <match src="type_name [23823,23830]" dest="type_name [23823,23830]"/>
  <match src="identifier: tokenId [54562,54569]" dest="identifier: tokenId [54562,54569]"/>
  <match src="number_unit [68208,68213]" dest="number_unit [68215,68220]"/>
  <match src="primitive_type [13821,13828]" dest="primitive_type [13821,13828]"/>
  <match src="[: [ [44303,44304]" dest="[: [ [44303,44304]"/>
  <match src="returns: returns [29230,29237]" dest="returns: returns [29230,29237]"/>
  <match src="primitive_type [17214,17221]" dest="primitive_type [17214,17221]"/>
  <match src="if_statement [69115,69605]" dest="if_statement [69122,69612]"/>
  <match src="variable_declaration_statement [30961,31027]" dest="variable_declaration_statement [30961,31027]"/>
  <match src="number_literal: 10 [74908,74910]" dest="number_literal: 10 [74915,74917]"/>
  <match src="identifier: currSlot [51024,51032]" dest="identifier: currSlot [51024,51032]"/>
  <match src=",: , [438,439]" dest=",: , [438,439]"/>
  <match src="primitive_type [5301,5306]" dest="primitive_type [5301,5306]"/>
  <match src="call_argument [51090,51105]" dest="call_argument [51090,51105]"/>
  <match src="identifier: totalMinted [60417,60428]" dest="identifier: totalMinted [60424,60435]"/>
  <match src="parameter [66672,66687]" dest="parameter [66679,66694]"/>
  <match src="uint256: uint256 [51358,51365]" dest="uint256: uint256 [51358,51365]"/>
  <match src="expression_statement [77229,77241]" dest="expression_statement [77236,77248]"/>
  <match src="return: return [42878,42884]" dest="return: return [42878,42884]"/>
  <match src="]: ] [79602,79603]" dest="]: ] [79609,79610]"/>
  <match src="type_cast_expression [41227,41237]" dest="type_cast_expression [41227,41237]"/>
  <match src="): ) [46793,46794]" dest="): ) [46793,46794]"/>
  <match src="&quot;: &quot; [47984,47985]" dest="&quot;: &quot; [47984,47985]"/>
  <match src="type_name [1008,1013]" dest="type_name [1008,1013]"/>
  <match src="number_literal: 188 [62406,62409]" dest="number_literal: 188 [62413,62416]"/>
  <match src="parameter [196,211]" dest="parameter [196,211]"/>
  <match src="call_expression [79088,79623]" dest="call_expression [79095,79630]"/>
  <match src="event: event [60695,60700]" dest="event: event [60702,60707]"/>
  <match src="==: == [78804,78806]" dest="==: == [78811,78813]"/>
  <match src="uint256: uint256 [7685,7692]" dest="uint256: uint256 [7685,7692]"/>
  <match src="expression_statement [49458,49487]" dest="expression_statement [49458,49487]"/>
  <match src="call_argument [66815,66828]" dest="call_argument [66822,66835]"/>
  <match src="identifier: transfer [64109,64117]" dest="identifier: transfer [64116,64124]"/>
  <match src="comment: // clothes [62568,62578]" dest="comment: // clothes [62575,62585]"/>
  <match src="type_name [3497,3504]" dest="type_name [3497,3504]"/>
  <match src="=&gt;: =&gt; [58526,58528]" dest="=&gt;: =&gt; [58526,58528]"/>
  <match src="expression_statement [62386,62430]" dest="expression_statement [62393,62437]"/>
  <match src="visibility [64262,64270]" dest="visibility [64269,64277]"/>
  <match src="(: ( [38186,38187]" dest="(: ( [38186,38187]"/>
  <match src="yul_assignment [13029,13055]" dest="yul_assignment [13029,13055]"/>
  <match src="binary_expression [77698,77711]" dest="binary_expression [77705,77718]"/>
  <match src="): ) [28263,28264]" dest="): ) [28263,28264]"/>
  <match src=",: , [77380,77381]" dest=",: , [77387,77388]"/>
  <match src="}: } [3719,3720]" dest="}: } [3719,3720]"/>
  <match src=".: . [55946,55947]" dest=".: . [55946,55947]"/>
  <match src="yul_evm_builtin [56184,56187]" dest="yul_evm_builtin [56184,56187]"/>
  <match src="type_name [21583,21590]" dest="type_name [21583,21590]"/>
  <match src="type_name [42732,42738]" dest="type_name [42732,42738]"/>
  <match src="&quot;: &quot; [69200,69201]" dest="&quot;: &quot; [69207,69208]"/>
  <match src="assignment_expression [70807,70840]" dest="assignment_expression [70814,70847]"/>
  <match src=",: , [56199,56200]" dest=",: , [56199,56200]"/>
  <match src="): ) [44743,44744]" dest="): ) [44743,44744]"/>
  <match src="): ) [54630,54631]" dest="): ) [54630,54631]"/>
  <match src="identifier: tokenId [50553,50560]" dest="identifier: tokenId [50553,50560]"/>
  <match src="(: ( [28118,28119]" dest="(: ( [28118,28119]"/>
  <match src="parameter [19122,19137]" dest="parameter [19122,19137]"/>
  <match src="user_defined_type [59186,59190]" dest="user_defined_type [59193,59197]"/>
  <match src="binary_expression [14952,14970]" dest="binary_expression [14952,14970]"/>
  <match src="for_statement [80473,80594]" dest="for_statement [80480,80601]"/>
  <match src="call_argument [55089,55096]" dest="call_argument [55089,55096]"/>
  <match src="private: private [8433,8440]" dest="private: private [8433,8440]"/>
  <match src="call_argument [6876,6882]" dest="call_argument [6876,6882]"/>
  <match src="function_body [52111,52151]" dest="function_body [52111,52151]"/>
  <match src="function_definition [30317,30516]" dest="function_definition [30317,30516]"/>
  <match src="return_statement [78784,78813]" dest="return_statement [78791,78820]"/>
  <match src="yul_evm_builtin [11241,11244]" dest="yul_evm_builtin [11241,11244]"/>
  <match src="primitive_type [1189,1195]" dest="primitive_type [1189,1195]"/>
  <match src="(: ( [43918,43919]" dest="(: ( [43918,43919]"/>
  <match src="array_access [71137,71160]" dest="array_access [71144,71167]"/>
  <match src="identifier: to [45662,45664]" dest="identifier: to [45662,45664]"/>
  <match src="comment: //     _name = name_; [37927,37948]" dest="comment: //     _name = name_; [37927,37948]"/>
  <match src=".: . [48431,48432]" dest=".: . [48431,48432]"/>
  <match src="identifier: bodyType [81075,81083]" dest="identifier: bodyType [81082,81090]"/>
  <match src="view: view [40299,40303]" dest="view: view [40299,40303]"/>
  <match src="type_name [1661,1670]" dest="type_name [1661,1670]"/>
  <match src="identifier: msg [69630,69633]" dest="identifier: msg [69637,69640]"/>
  <match src="yul_evm_builtin [10767,10770]" dest="yul_evm_builtin [10767,10770]"/>
  <match src="): ) [64213,64214]" dest="): ) [64220,64221]"/>
  <match src="parameter [13399,13406]" dest="parameter [13399,13406]"/>
  <match src="virtual: virtual [44173,44180]" dest="virtual: virtual [44173,44180]"/>
  <match src="identifier: ownership [41273,41282]" dest="identifier: ownership [41273,41282]"/>
  <match src="revert: revert [50050,50056]" dest="revert: revert [50050,50056]"/>
  <match src="update_expression [7720,7723]" dest="update_expression [7720,7723]"/>
  <match src="): ) [44568,44569]" dest="): ) [44568,44569]"/>
  <match src="): ) [77217,77218]" dest="): ) [77224,77225]"/>
  <match src="revert_statement [56054,56105]" dest="revert_statement [56054,56105]"/>
  <match src="]: ] [70881,70882]" dest="]: ] [70888,70889]"/>
  <match src="): ) [21599,21600]" dest="): ) [21599,21600]"/>
  <match src="type_name [31749,31754]" dest="type_name [31749,31754]"/>
  <match src="type_name [45581,45588]" dest="type_name [45581,45588]"/>
  <match src="user_defined_type [39184,39190]" dest="user_defined_type [39184,39190]"/>
  <match src="type_name [3621,3628]" dest="type_name [3621,3628]"/>
  <match src="&quot;: &quot; [16797,16798]" dest="&quot;: &quot; [16797,16798]"/>
  <match src="function: function [24237,24245]" dest="function: function [24237,24245]"/>
  <match src="assignment_expression [61762,61793]" dest="assignment_expression [61769,61800]"/>
  <match src="for: for [65862,65865]" dest="for: for [65869,65872]"/>
  <match src="number_literal: 155 [62134,62137]" dest="number_literal: 155 [62141,62144]"/>
  <match src="call_argument [67033,67095]" dest="call_argument [67040,67102]"/>
  <match src="primitive_type [67512,67519]" dest="primitive_type [67519,67526]"/>
  <match src="visibility [59191,59197]" dest="visibility [59198,59204]"/>
  <match src="identifier: ownerOf [44728,44735]" dest="identifier: ownerOf [44728,44735]"/>
  <match src="array_access [73042,73065]" dest="array_access [73049,73072]"/>
  <match src="identifier: breed [81003,81008]" dest="identifier: breed [81010,81015]"/>
  <match src="(: ( [29982,29983]" dest="(: ( [29982,29983]"/>
  <match src="call_argument [69011,69032]" dest="call_argument [69018,69039]"/>
  <match src="=: = [73844,73845]" dest="=: = [73851,73852]"/>
  <match src="number_literal: 8 [7277,7278]" dest="number_literal: 8 [7277,7278]"/>
  <match src="identifier: r [10903,10904]" dest="identifier: r [10903,10904]"/>
  <match src="member_expression [78263,78275]" dest="member_expression [78270,78282]"/>
  <match src=".: . [44717,44718]" dest=".: . [44717,44718]"/>
  <match src=",: , [1903,1904]" dest=",: , [1903,1904]"/>
  <match src="&quot;: &quot; [67853,67854]" dest="&quot;: &quot; [67860,67861]"/>
  <match src="=: = [63570,63571]" dest="=: = [63577,63578]"/>
  <match src="identifier: _operatorApprovals [44588,44606]" dest="identifier: _operatorApprovals [44588,44606]"/>
  <match src="{: { [51512,51513]" dest="{: { [51512,51513]"/>
  <match src="visibility [4999,5007]" dest="visibility [4999,5007]"/>
  <match src="): ) [78802,78803]" dest="): ) [78809,78810]"/>
  <match src=".: . [71103,71104]" dest=".: . [71110,71111]"/>
  <match src="string_literal [61198,61223]" dest="string_literal [61205,61230]"/>
  <match src="struct: struct [5105,5111]" dest="struct: struct [5105,5111]"/>
  <match src="[: [ [67248,67249]" dest="[: [ [67255,67256]"/>
  <match src="string_literal [56061,56103]" dest="string_literal [56061,56103]"/>
  <match src="&quot;: &quot; [43532,43533]" dest="&quot;: &quot; [43532,43533]"/>
  <match src="if_statement [48017,48065]" dest="if_statement [48017,48065]"/>
  <match src="call_argument [65961,65978]" dest="call_argument [65968,65985]"/>
  <match src="identifier: doges_ [66339,66345]" dest="identifier: doges_ [66346,66352]"/>
  <match src="update_expression [6593,6601]" dest="update_expression [6593,6601]"/>
  <match src="(: ( [65696,65697]" dest="(: ( [65703,65704]"/>
  <match src="identifier: signature [67389,67398]" dest="identifier: signature [67396,67405]"/>
  <match src="identifier: temp [6616,6620]" dest="identifier: temp [6616,6620]"/>
  <match src="number_literal: 10 [6838,6840]" dest="number_literal: 10 [6838,6840]"/>
  <match src="call_argument [77451,77464]" dest="call_argument [77458,77471]"/>
  <match src="): ) [63659,63660]" dest="): ) [63666,63667]"/>
  <match src="block_statement [55996,56260]" dest="block_statement [55996,56260]"/>
  <match src="string_literal [66907,66926]" dest="string_literal [66914,66933]"/>
  <match src="identifier: domainSeparator [17222,17237]" dest="identifier: domainSeparator [17222,17237]"/>
  <match src="public: public [58104,58110]" dest="public: public [58104,58110]"/>
  <match src="): ) [13107,13108]" dest="): ) [13107,13108]"/>
  <match src="): ) [7911,7912]" dest="): ) [7911,7912]"/>
  <match src="variable_declaration [76419,76430]" dest="variable_declaration [76426,76437]"/>
  <match src="+: + [48750,48751]" dest="+: + [48750,48751]"/>
  <match src="internal: internal [47450,47458]" dest="internal: internal [47450,47458]"/>
  <match src="identifier: cooking [80839,80846]" dest="identifier: cooking [80846,80853]"/>
  <match src="]: ] [63021,63022]" dest="]: ] [63028,63029]"/>
  <match src="(: ( [49348,49349]" dest="(: ( [49348,49349]"/>
  <match src="state_mutability [7530,7534]" dest="state_mutability [7530,7534]"/>
  <match src="identifier: cooking [78353,78360]" dest="identifier: cooking [78360,78367]"/>
  <match src="parameter [22185,22198]" dest="parameter [22185,22198]"/>
  <match src=",: , [10153,10154]" dest=",: , [10153,10154]"/>
  <match src="type_name [74848,74855]" dest="type_name [74855,74862]"/>
  <match src="=: = [62195,62196]" dest="=: = [62202,62203]"/>
  <match src="primitive_type [11362,11369]" dest="primitive_type [11362,11369]"/>
  <match src="primitive_type [76447,76452]" dest="primitive_type [76454,76459]"/>
  <match src="type_name [59890,59915]" dest="type_name [59897,59922]"/>
  <match src="bool: bool [36362,36366]" dest="bool: bool [36362,36366]"/>
  <match src="call_expression [48077,48138]" dest="call_expression [48077,48138]"/>
  <match src="member_expression [54127,54140]" dest="member_expression [54127,54140]"/>
  <match src="(: ( [76452,76453]" dest="(: ( [76459,76460]"/>
  <match src="&quot;: &quot; [49068,49069]" dest="&quot;: &quot; [49068,49069]"/>
  <match src="): ) [49538,49539]" dest="): ) [49538,49539]"/>
  <match src="member_expression [77333,77344]" dest="member_expression [77340,77351]"/>
  <match src="): ) [57870,57871]" dest="): ) [57870,57871]"/>
  <match src="identifier: to [20146,20148]" dest="identifier: to [20146,20148]"/>
  <match src="==: == [44776,44778]" dest="==: == [44776,44778]"/>
  <match src="return: return [29264,29270]" dest="return: return [29264,29270]"/>
  <match src="expression_statement [62849,62904]" dest="expression_statement [62856,62911]"/>
  <match src="primitive_type [69542,69546]" dest="primitive_type [69549,69553]"/>
  <match src="expression_statement [67949,68024]" dest="expression_statement [67956,68031]"/>
  <match src="identifier: msg [69515,69518]" dest="identifier: msg [69522,69525]"/>
  <match src="state_mutability [78752,78756]" dest="state_mutability [78759,78763]"/>
  <match src="variable_declaration [31937,31949]" dest="variable_declaration [31937,31949]"/>
  <match src="): ) [8833,8834]" dest="): ) [8833,8834]"/>
  <match src="identifier: toEthSignedMessageHash [16086,16108]" dest="identifier: toEthSignedMessageHash [16086,16108]"/>
  <match src="call_expression [38626,38641]" dest="call_expression [38626,38641]"/>
  <match src="}: } [16345,16346]" dest="}: } [16345,16346]"/>
  <match src=",: , [61479,61480]" dest=",: , [61486,61487]"/>
  <match src="public: public [43430,43436]" dest="public: public [43430,43436]"/>
  <match src="identifier: totalSupply [69052,69063]" dest="identifier: totalSupply [69059,69070]"/>
  <match src="}: } [73258,73259]" dest="}: } [73265,73266]"/>
  <match src="]: ] [79501,79502]" dest="]: ] [79508,79509]"/>
  <match src="primitive_type [236,242]" dest="primitive_type [236,242]"/>
  <match src="member_expression [8925,8955]" dest="member_expression [8925,8955]"/>
  <match src="member_expression [16749,16765]" dest="member_expression [16749,16765]"/>
  <match src="call_argument [78986,79021]" dest="call_argument [78993,79028]"/>
  <match src="}: } [78819,78820]" dest="}: } [78826,78827]"/>
  <match src="assignment_expression [64555,64669]" dest="assignment_expression [64562,64676]"/>
  <match src="(: ( [46280,46281]" dest="(: ( [46280,46281]"/>
  <match src="identifier: approved [44316,44324]" dest="identifier: approved [44316,44324]"/>
  <match src="visibility [549,557]" dest="visibility [549,557]"/>
  <match src="=: = [63261,63262]" dest="=: = [63268,63269]"/>
  <match src="=: = [48631,48632]" dest="=: = [48631,48632]"/>
  <match src="visibility [5669,5677]" dest="visibility [5669,5677]"/>
  <match src="member_expression [46779,46864]" dest="member_expression [46779,46864]"/>
  <match src="type_name [59186,59190]" dest="type_name [59193,59197]"/>
  <match src="binary_expression [61125,61183]" dest="binary_expression [61132,61190]"/>
  <match src="identifier: to [48111,48113]" dest="identifier: to [48111,48113]"/>
  <match src="update_expression [66233,66236]" dest="update_expression [66240,66243]"/>
  <match src="type_name [10969,10976]" dest="type_name [10969,10976]"/>
  <match src="revert: revert [41924,41930]" dest="revert: revert [41924,41930]"/>
  <match src="array_access [70169,70193]" dest="array_access [70176,70200]"/>
  <match src="]: ] [51463,51464]" dest="]: ] [51463,51464]"/>
  <match src="type_name [20159,20166]" dest="type_name [20159,20166]"/>
  <match src="(: ( [76882,76883]" dest="(: ( [76889,76890]"/>
  <match src="uint16: uint16 [77444,77450]" dest="uint16: uint16 [77451,77457]"/>
  <match src="function: function [61442,61450]" dest="function: function [61449,61457]"/>
  <match src="}: } [46983,46984]" dest="}: } [46983,46984]"/>
  <match src="call_expression [63867,63950]" dest="call_expression [63874,63957]"/>
  <match src="number_literal: 255 [63200,63203]" dest="number_literal: 255 [63207,63210]"/>
  <match src="call_argument [48640,48655]" dest="call_argument [48640,48655]"/>
  <match src=",: , [80831,80832]" dest=",: , [80838,80839]"/>
  <match src="identifier: tokenId [79494,79501]" dest="identifier: tokenId [79501,79508]"/>
  <match src="number_literal: 229 [62416,62419]" dest="number_literal: 229 [62423,62426]"/>
  <match src="): ) [58541,58542]" dest="): ) [58541,58542]"/>
  <match src="identifier: selectTrait [76336,76347]" dest="identifier: selectTrait [76343,76354]"/>
  <match src="number_literal: 1 [62885,62886]" dest="number_literal: 1 [62892,62893]"/>
  <match src="[: [ [72939,72940]" dest="[: [ [72946,72947]"/>
  <match src="(: ( [7684,7685]" dest="(: ( [7684,7685]"/>
  <match src=",: , [62705,62706]" dest=",: , [62712,62713]"/>
  <match src="state_mutability [12295,12299]" dest="state_mutability [12295,12299]"/>
  <match src="uint256: uint256 [75380,75387]" dest="uint256: uint256 [75387,75394]"/>
  <match src="identifier: require [61581,61588]" dest="identifier: require [61588,61595]"/>
  <match src="state_mutability [1355,1359]" dest="state_mutability [1355,1359]"/>
  <match src="comment: // commoners[tokenId] empty check [79818,79851]" dest="comment: // commoners[tokenId] empty check [79825,79858]"/>
  <match src="function: function [8392,8400]" dest="function: function [8392,8400]"/>
  <match src="boolean_literal [61604,61609]" dest="boolean_literal [61611,61616]"/>
  <match src="identifier: vrf [74553,74556]" dest="identifier: vrf [74560,74563]"/>
  <match src="identifier: commoners [74145,74154]" dest="identifier: commoners [74152,74161]"/>
  <match src="call_argument [29928,29934]" dest="call_argument [29928,29934]"/>
  <match src="identifier: transfer [2025,2033]" dest="identifier: transfer [2025,2033]"/>
  <match src="expression_statement [68488,68609]" dest="expression_statement [68495,68616]"/>
  <match src="): ) [63606,63607]" dest="): ) [63613,63614]"/>
  <match src="identifier: sender [80908,80914]" dest="identifier: sender [80915,80921]"/>
  <match src="(: ( [77615,77616]" dest="(: ( [77622,77623]"/>
  <match src="(: ( [777,778]" dest="(: ( [777,778]"/>
  <match src="}: } [359,360]" dest="}: } [359,360]"/>
  <match src="uint256: uint256 [19307,19314]" dest="uint256: uint256 [19307,19314]"/>
  <match src="): ) [74521,74522]" dest="): ) [74528,74529]"/>
  <match src="variable_declaration_statement [10499,10509]" dest="variable_declaration_statement [10499,10509]"/>
  <match src="&quot;: &quot; [48004,48005]" dest="&quot;: &quot; [48004,48005]"/>
  <match src="if_statement [52790,52860]" dest="if_statement [52790,52860]"/>
  <match src="identifier: returndata [30989,30999]" dest="identifier: returndata [30989,30999]"/>
  <match src="(: ( [39209,39210]" dest="(: ( [39209,39210]"/>
  <match src="primitive_type [37669,37676]" dest="primitive_type [37669,37676]"/>
  <match src="identifier: setTraits [64811,64820]" dest="identifier: setTraits [64818,64827]"/>
  <match src="expression_statement [61806,61830]" dest="expression_statement [61813,61837]"/>
  <match src="(: ( [3847,3848]" dest="(: ( [3847,3848]"/>
  <match src="identifier: index [80517,80522]" dest="identifier: index [80524,80529]"/>
  <match src="call_expression [64853,64881]" dest="call_expression [64860,64888]"/>
  <match src="address: address [61497,61504]" dest="address: address [61504,61511]"/>
  <match src="call_argument [15174,15178]" dest="call_argument [15174,15178]"/>
  <match src="visibility [45604,45610]" dest="visibility [45604,45610]"/>
  <match src="block_statement [14972,15050]" dest="block_statement [14972,15050]"/>
  <match src="=&gt;: =&gt; [58968,58970]" dest="=&gt;: =&gt; [58975,58977]"/>
  <match src="parameter [38800,38807]" dest="parameter [38800,38807]"/>
  <match src=",: , [31438,31439]" dest=",: , [31438,31439]"/>
  <match src="visibility [78743,78751]" dest="visibility [78750,78758]"/>
  <match src="identifier: id [5563,5565]" dest="identifier: id [5563,5565]"/>
  <match src="variable_declaration [45924,45946]" dest="variable_declaration [45924,45946]"/>
  <match src=".: . [81032,81033]" dest=".: . [81039,81040]"/>
  <match src="+: + [54032,54033]" dest="+: + [54032,54033]"/>
  <match src="): ) [67319,67320]" dest="): ) [67326,67327]"/>
  <match src="(: ( [48780,48781]" dest="(: ( [48780,48781]"/>
  <match src="visibility [80848,80856]" dest="visibility [80855,80863]"/>
  <match src="&quot;: &quot; [8738,8739]" dest="&quot;: &quot; [8738,8739]"/>
  <match src="identifier: _throwError [13495,13506]" dest="identifier: _throwError [13495,13506]"/>
  <match src="(: ( [19306,19307]" dest="(: ( [19306,19307]"/>
  <match src="(: ( [52770,52771]" dest="(: ( [52770,52771]"/>
  <match src="number_literal: 0 [45344,45345]" dest="number_literal: 0 [45344,45345]"/>
  <match src="(: ( [10766,10767]" dest="(: ( [10766,10767]"/>
  <match src="identifier: updatedIndex [49365,49377]" dest="identifier: updatedIndex [49365,49377]"/>
  <match src=".: . [73177,73178]" dest=".: . [73184,73185]"/>
  <match src="memory: memory [31784,31790]" dest="memory: memory [31784,31790]"/>
  <match src="comment: // } [78682,78686]" dest="comment: // } [78689,78693]"/>
  <match src="comment: /**  * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including  * the Metadata extension. Built to optimize for lower gas during batch mints.  *  * Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..).  *  * Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.  *  * Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).  */ [34788,35287]" dest="comment: /**  * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including  * the Metadata extension. Built to optimize for lower gas during batch mints.  *  * Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..).  *  * Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.  *  * Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).  */ [34788,35287]"/>
  <match src="identifier: data [30050,30054]" dest="identifier: data [30050,30054]"/>
  <match src="number_literal: 209 [62603,62606]" dest="number_literal: 209 [62610,62613]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [7798,7801]" dest="&gt;&gt;=: &gt;&gt;= [7798,7801]"/>
  <match src="memory: memory [31342,31348]" dest="memory: memory [31342,31348]"/>
  <match src=".: . [67534,67535]" dest=".: . [67541,67542]"/>
  <match src="+=: += [68648,68650]" dest="+=: += [68655,68657]"/>
  <match src="member_expression [64162,64190]" dest="member_expression [64169,64197]"/>
  <match src="state_variable_declaration [6003,6062]" dest="state_variable_declaration [6003,6062]"/>
  <match src="identifier: totalSupply [68042,68053]" dest="identifier: totalSupply [68049,68060]"/>
  <match src="expression_statement [48590,48657]" dest="expression_statement [48590,48657]"/>
  <match src="(: ( [74352,74353]" dest="(: ( [74359,74360]"/>
  <match src="): ) [37687,37688]" dest="): ) [37687,37688]"/>
  <match src="identifier: _currentIndex [74427,74440]" dest="identifier: _currentIndex [74434,74447]"/>
  <match src="primitive_type [55863,55869]" dest="primitive_type [55863,55869]"/>
  <match src="]: ] [7748,7749]" dest="]: ] [7748,7749]"/>
  <match src="identifier: topCommoner_ [71759,71771]" dest="identifier: topCommoner_ [71766,71778]"/>
  <match src="member_expression [8679,8714]" dest="member_expression [8679,8714]"/>
  <match src="array_access [53364,53382]" dest="array_access [53364,53382]"/>
  <match src="binary_expression [52638,52658]" dest="binary_expression [52638,52658]"/>
  <match src="identifier: _currentIndex [61762,61775]" dest="identifier: _currentIndex [61769,61782]"/>
  <match src="assignment_expression [63306,63339]" dest="assignment_expression [63313,63346]"/>
  <match src="identifier: totalMinted [68380,68391]" dest="identifier: totalMinted [68387,68398]"/>
  <match src="identifier: tryRecover [15688,15698]" dest="identifier: tryRecover [15688,15698]"/>
  <match src="identifier: from [3245,3249]" dest="identifier: from [3245,3249]"/>
  <match src=",: , [35833,35834]" dest=",: , [35833,35834]"/>
  <match src="comment: // the valid range for s in (301): 0 &lt; s &lt; secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most [14133,14237]" dest="comment: // the valid range for s in (301): 0 &lt; s &lt; secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most [14133,14237]"/>
  <match src="primitive_type [5800,5805]" dest="primitive_type [5800,5805]"/>
  <match src="identifier: aux [40648,40651]" dest="identifier: aux [40648,40651]"/>
  <match src="identifier: TokenOwnership [53564,53578]" dest="identifier: TokenOwnership [53564,53578]"/>
  <match src="member_expression [72073,72107]" dest="member_expression [72080,72114]"/>
  <match src="inline_array_expression [63068,63087]" dest="inline_array_expression [63075,63094]"/>
  <match src="unary_expression [43601,43639]" dest="unary_expression [43601,43639]"/>
  <match src="function_definition [64928,65056]" dest="function_definition [64935,65063]"/>
  <match src="): ) [69457,69458]" dest="): ) [69464,69465]"/>
  <match src="(: ( [20743,20744]" dest="(: ( [20743,20744]"/>
  <match src="(: ( [80027,80028]" dest="(: ( [80034,80035]"/>
  <match src="): ) [39339,39340]" dest="): ) [39339,39340]"/>
  <match src=",: , [64649,64650]" dest=",: , [64656,64657]"/>
  <match src="type_name [64945,64952]" dest="type_name [64952,64959]"/>
  <match src="identifier: topCommoner_ [71147,71159]" dest="identifier: topCommoner_ [71154,71166]"/>
  <match src="(: ( [15735,15736]" dest="(: ( [15735,15736]"/>
  <match src="]: ] [62263,62264]" dest="]: ] [62270,62271]"/>
  <match src="(: ( [79677,79678]" dest="(: ( [79684,79685]"/>
  <match src="number_literal: 3 [66989,66990]" dest="number_literal: 3 [66996,66997]"/>
  <match src="member_expression [73921,73952]" dest="member_expression [73928,73959]"/>
  <match src="identifier: require [63460,63467]" dest="identifier: require [63467,63474]"/>
  <match src="identifier: seed [77480,77484]" dest="identifier: seed [77487,77491]"/>
  <match src="call_argument [6782,6813]" dest="call_argument [6782,6813]"/>
  <match src="}: } [54491,54492]" dest="}: } [54491,54492]"/>
  <match src="identifier: palette [78150,78157]" dest="identifier: palette [78157,78164]"/>
  <match src="[: [ [72139,72140]" dest="[: [ [72146,72147]"/>
  <match src="call_argument [79799,79806]" dest="call_argument [79806,79813]"/>
  <match src="identifier: tokenId [45208,45215]" dest="identifier: tokenId [45208,45215]"/>
  <match src="): ) [43936,43937]" dest="): ) [43936,43937]"/>
  <match src="): ) [39548,39549]" dest="): ) [39548,39549]"/>
  <match src="&quot;: &quot; [30909,30910]" dest="&quot;: &quot; [30909,30910]"/>
  <match src="&quot;: &quot; [8857,8858]" dest="&quot;: &quot; [8857,8858]"/>
  <match src="array_access [80028,80047]" dest="array_access [80035,80054]"/>
  <match src="): ) [43638,43639]" dest="): ) [43638,43639]"/>
  <match src="identifier: getRandom [4656,4665]" dest="identifier: getRandom [4656,4665]"/>
  <match src="function_definition [827,906]" dest="function_definition [827,906]"/>
  <match src="number_literal: 153 [63205,63208]" dest="number_literal: 153 [63212,63215]"/>
  <match src="==: == [8467,8469]" dest="==: == [8467,8469]"/>
  <match src="(: ( [32631,32632]" dest="(: ( [32631,32632]"/>
  <match src=",: , [44367,44368]" dest=",: , [44367,44368]"/>
  <match src="}: } [40139,40140]" dest="}: } [40139,40140]"/>
  <match src="return_type_definition [31820,31842]" dest="return_type_definition [31820,31842]"/>
  <match src="): ) [77629,77630]" dest="): ) [77636,77637]"/>
  <match src=".: . [72844,72845]" dest=".: . [72851,72852]"/>
  <match src="type_name [7685,7692]" dest="type_name [7685,7692]"/>
  <match src="]: ] [66282,66283]" dest="]: ] [66289,66290]"/>
  <match src=",: , [29705,29706]" dest=",: , [29705,29706]"/>
  <match src=",: , [62553,62554]" dest=",: , [62560,62561]"/>
  <match src="comment: /**      * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.      *      * @param from address representing the previous owner of the given token ID      * @param to target address that will receive the tokens      * @param tokenId uint256 ID of the token to be transferred      * @param _data bytes optional data to send along with the call      * @return bool whether the call correctly returned the expected magic value      */ [55113,55591]" dest="comment: /**      * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.      *      * @param from address representing the previous owner of the given token ID      * @param to target address that will receive the tokens      * @param tokenId uint256 ID of the token to be transferred      * @param _data bytes optional data to send along with the call      * @return bool whether the call correctly returned the expected magic value      */ [55113,55591]"/>
  <match src="call_argument [16332,16336]" dest="call_argument [16332,16336]"/>
  <match src="call_argument [74903,74906]" dest="call_argument [74910,74913]"/>
  <match src="]: ] [80993,80994]" dest="]: ] [81000,81001]"/>
  <match src="assignment_expression [71080,71118]" dest="assignment_expression [71087,71125]"/>
  <match src="binary_expression [38595,38641]" dest="binary_expression [38595,38641]"/>
  <match src="string_literal [80449,80461]" dest="string_literal [80456,80468]"/>
  <match src="memory: memory [49961,49967]" dest="memory: memory [49961,49967]"/>
  <match src="identifier: interfaceId [39142,39153]" dest="identifier: interfaceId [39142,39153]"/>
  <match src="[: [ [48427,48428]" dest="[: [ [48427,48428]"/>
  <match src=".: . [73783,73784]" dest=".: . [73790,73791]"/>
  <match src="function: function [63417,63425]" dest="function: function [63424,63432]"/>
  <match src="identifier: color [1057,1062]" dest="identifier: color [1057,1062]"/>
  <match src=".: . [43480,43481]" dest=".: . [43480,43481]"/>
  <match src="struct_member [1166,1179]" dest="struct_member [1166,1179]"/>
  <match src="-: - [67070,67071]" dest="-: - [67077,67078]"/>
  <match src="parameter [3045,3068]" dest="parameter [3045,3068]"/>
  <match src="expression_statement [61644,61663]" dest="expression_statement [61651,61670]"/>
  <match src="identifier: tokenNo_ [68133,68141]" dest="identifier: tokenNo_ [68140,68148]"/>
  <match src="visibility [32435,32443]" dest="visibility [32435,32443]"/>
  <match src="[: [ [65939,65940]" dest="[: [ [65946,65947]"/>
  <match src="[: [ [73769,73770]" dest="[: [ [73776,73777]"/>
  <match src="type_name [7544,7550]" dest="type_name [7544,7550]"/>
  <match src="identifier: commoners [80945,80954]" dest="identifier: commoners [80952,80961]"/>
  <match src="(: ( [67044,67045]" dest="(: ( [67051,67052]"/>
  <match src="primitive_type [57796,57803]" dest="primitive_type [57796,57803]"/>
  <match src="assignment_expression [44271,44324]" dest="assignment_expression [44271,44324]"/>
  <match src="internal: internal [6201,6209]" dest="internal: internal [6201,6209]"/>
  <match src="return_statement [38588,38642]" dest="return_statement [38588,38642]"/>
  <match src="): ) [43902,43903]" dest="): ) [43902,43903]"/>
  <match src="identifier: error [8794,8799]" dest="identifier: error [8794,8799]"/>
  <match src=".: . [16807,16808]" dest=".: . [16807,16808]"/>
  <match src=".: . [72096,72097]" dest=".: . [72103,72104]"/>
  <match src=",: , [62214,62215]" dest=",: , [62221,62222]"/>
  <match src="primitive_type [40091,40098]" dest="primitive_type [40091,40098]"/>
  <match src="expression_statement [71906,71943]" dest="expression_statement [71913,71950]"/>
  <match src="uint8: uint8 [13783,13788]" dest="uint8: uint8 [13783,13788]"/>
  <match src="(: ( [11189,11190]" dest="(: ( [11189,11190]"/>
  <match src="=: = [45103,45104]" dest="=: = [45103,45104]"/>
  <match src="memory: memory [30862,30868]" dest="memory: memory [30862,30868]"/>
  <match src="identifier: tokenId [46258,46265]" dest="identifier: tokenId [46258,46265]"/>
  <match src="=: = [6773,6774]" dest="=: = [6773,6774]"/>
  <match src=".: . [78234,78235]" dest=".: . [78241,78242]"/>
  <match src="{: { [51708,51709]" dest="{: { [51708,51709]"/>
  <match src="number_literal: 2 [7615,7616]" dest="number_literal: 2 [7615,7616]"/>
  <match src="=: = [71224,71225]" dest="=: = [71231,71232]"/>
  <match src="): ) [15601,15602]" dest="): ) [15601,15602]"/>
  <match src="identifier: svgMainhand [532,543]" dest="identifier: svgMainhand [532,543]"/>
  <match src="): ) [46927,46928]" dest="): ) [46927,46928]"/>
  <match src="public: public [58305,58311]" dest="public: public [58305,58311]"/>
  <match src="identifier: ERC165 [35835,35841]" dest="identifier: ERC165 [35835,35841]"/>
  <match src="member_expression [39650,39677]" dest="member_expression [39650,39677]"/>
  <match src="bytes32: bytes32 [16146,16153]" dest="bytes32: bytes32 [16146,16153]"/>
  <match src="function_definition [43228,43322]" dest="function_definition [43228,43322]"/>
  <match src="return: return [40084,40090]" dest="return: return [40084,40090]"/>
  <match src="(: ( [18488,18489]" dest="(: ( [18488,18489]"/>
  <match src="identifier: length [76473,76479]" dest="identifier: length [76480,76486]"/>
  <match src="function: function [46880,46888]" dest="function: function [46880,46888]"/>
  <match src="string_literal [45355,45380]" dest="string_literal [45355,45380]"/>
  <match src="[: [ [68419,68420]" dest="[: [ [68426,68427]"/>
  <match src="address: address [64821,64828]" dest="address: address [64828,64835]"/>
  <match src="(: ( [10716,10717]" dest="(: ( [10716,10717]"/>
  <match src="type_name [47424,47429]" dest="type_name [47424,47429]"/>
  <match src="primitive_type [66027,66034]" dest="primitive_type [66034,66041]"/>
  <match src=".: . [15019,15020]" dest=".: . [15019,15020]"/>
  <match src="visibility [78869,78877]" dest="visibility [78876,78884]"/>
  <match src="identifier: ITraits [64901,64908]" dest="identifier: ITraits [64908,64915]"/>
  <match src="identifier: accessory [74000,74009]" dest="identifier: accessory [74007,74016]"/>
  <match src="identifier: commoners [79173,79182]" dest="identifier: commoners [79180,79189]"/>
  <match src="identifier: aux [36979,36982]" dest="identifier: aux [36979,36982]"/>
  <match src="): ) [40600,40601]" dest="): ) [40600,40601]"/>
  <match src="primitive_type [3621,3628]" dest="primitive_type [3621,3628]"/>
  <match src="type_name [30361,30366]" dest="type_name [30361,30366]"/>
  <match src="uint256: uint256 [79678,79685]" dest="uint256: uint256 [79685,79692]"/>
  <match src="member_expression [70807,70836]" dest="member_expression [70814,70843]"/>
  <match src="visibility [46732,46740]" dest="visibility [46732,46740]"/>
  <match src="member_expression [42126,42152]" dest="member_expression [42126,42152]"/>
  <match src="identifier: returndata [31070,31080]" dest="identifier: returndata [31070,31080]"/>
  <match src=",: , [77465,77466]" dest=",: , [77472,77473]"/>
  <match src="string [65431,65441]" dest="string [65438,65448]"/>
  <match src="assignment_expression [62675,62729]" dest="assignment_expression [62682,62736]"/>
  <match src="visibility [58570,58576]" dest="visibility [58577,58583]"/>
  <match src="parameter [44564,44568]" dest="parameter [44564,44568]"/>
  <match src="primitive_type [67362,67369]" dest="primitive_type [67369,67376]"/>
  <match src="string_literal [49244,49267]" dest="string_literal [49244,49267]"/>
  <match src="expression_statement [62675,62730]" dest="expression_statement [62682,62737]"/>
  <match src="number_literal: 1 [72273,72274]" dest="number_literal: 1 [72280,72281]"/>
  <match src="(: ( [68188,68189]" dest="(: ( [68195,68196]"/>
  <match src="returns: returns [42360,42367]" dest="returns: returns [42360,42367]"/>
  <match src="[: [ [66338,66339]" dest="[: [ [66345,66346]"/>
  <match src=",: , [3619,3620]" dest=",: , [3619,3620]"/>
  <match src="&quot;: &quot; [52857,52858]" dest="&quot;: &quot; [52857,52858]"/>
  <match src="assignment_expression [71749,71781]" dest="assignment_expression [71756,71788]"/>
  <match src="member_expression [73760,73789]" dest="member_expression [73767,73796]"/>
  <match src="array_access [69542,69582]" dest="array_access [69549,69589]"/>
  <match src="&amp;: &amp; [76960,76961]" dest="&amp;: &amp; [76967,76968]"/>
  <match src="member_expression [77251,77260]" dest="member_expression [77258,77267]"/>
  <match src="identifier: from [50562,50566]" dest="identifier: from [50562,50566]"/>
  <match src="identifier: value [7833,7838]" dest="identifier: value [7833,7838]"/>
  <match src="bytes: bytes [16673,16678]" dest="bytes: bytes [16673,16678]"/>
  <match src="variable_declaration_statement [48673,48709]" dest="variable_declaration_statement [48673,48709]"/>
  <match src="string [64057,64068]" dest="string [64064,64075]"/>
  <match src="visibility [2349,2357]" dest="visibility [2349,2357]"/>
  <match src="address: address [64945,64952]" dest="address: address [64952,64959]"/>
  <match src="call_argument [65837,65850]" dest="call_argument [65844,65857]"/>
  <match src="identifier: balance [48432,48439]" dest="identifier: balance [48432,48439]"/>
  <match src="identifier: bodyType [72899,72907]" dest="identifier: bodyType [72906,72914]"/>
  <match src=".: . [72153,72154]" dest=".: . [72160,72161]"/>
  <match src="primitive_type [12248,12255]" dest="primitive_type [12248,12255]"/>
  <match src="parameter [20798,20813]" dest="parameter [20798,20813]"/>
  <match src="): ) [76533,76534]" dest="): ) [76540,76541]"/>
  <match src="identifier: adjust [5693,5699]" dest="identifier: adjust [5693,5699]"/>
  <match src="string [67173,67191]" dest="string [67180,67198]"/>
  <match src="[: [ [80038,80039]" dest="[: [ [80045,80046]"/>
  <match src="): ) [58989,58990]" dest="): ) [58996,58997]"/>
  <match src="identifier: tokenId [79686,79693]" dest="identifier: tokenId [79693,79700]"/>
  <match src="{: { [11339,11340]" dest="{: { [11339,11340]"/>
  <match src="{: { [40321,40322]" dest="{: { [40321,40322]"/>
  <match src="member_expression [61011,61021]" dest="member_expression [61018,61028]"/>
  <match src="member_expression [78233,78244]" dest="member_expression [78240,78251]"/>
  <match src="identifier: ids [1766,1769]" dest="identifier: ids [1766,1769]"/>
  <match src="true [47497,47501]" dest="true [47497,47501]"/>
  <match src="): ) [79693,79694]" dest="): ) [79700,79701]"/>
  <match src="uint256: uint256 [21543,21550]" dest="uint256: uint256 [21543,21550]"/>
  <match src="): ) [48803,48804]" dest="): ) [48803,48804]"/>
  <match src="): ) [39214,39215]" dest="): ) [39214,39215]"/>
  <match src="binary_expression [42885,42911]" dest="binary_expression [42885,42911]"/>
  <match src="+=: += [48440,48442]" dest="+=: += [48440,48442]"/>
  <match src="uint8: uint8 [5153,5158]" dest="uint8: uint8 [5153,5158]"/>
  <match src=".: . [27214,27215]" dest=".: . [27214,27215]"/>
  <match src="binary_expression [63823,63842]" dest="binary_expression [63830,63849]"/>
  <match src="call_argument [77216,77217]" dest="call_argument [77223,77224]"/>
  <match src="]: ] [81031,81032]" dest="]: ] [81038,81039]"/>
  <match src="primitive_type [78717,78724]" dest="primitive_type [78724,78731]"/>
  <match src="string [27141,27172]" dest="string [27141,27172]"/>
  <match src="): ) [39836,39837]" dest="): ) [39836,39837]"/>
  <match src="variable_declaration [10499,10508]" dest="variable_declaration [10499,10508]"/>
  <match src="identifier: to [3519,3521]" dest="identifier: to [3519,3521]"/>
  <match src="): ) [61233,61234]" dest="): ) [61240,61241]"/>
  <match src="comment: /**      * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.      *      * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]      *      * _Available since v4.3._      */ [12470,12719]" dest="comment: /**      * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.      *      * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]      *      * _Available since v4.3._      */ [12470,12719]"/>
  <match src="(: ( [67146,67147]" dest="(: ( [67153,67154]"/>
  <match src="call_expression [67465,67500]" dest="call_expression [67472,67507]"/>
  <match src="member_expression [31978,31997]" dest="member_expression [31978,31997]"/>
  <match src="(: ( [1439,1440]" dest="(: ( [1439,1440]"/>
  <match src="assignment_expression [70913,70949]" dest="assignment_expression [70920,70956]"/>
  <match src="[: [ [73875,73876]" dest="[: [ [73882,73883]"/>
  <match src="identifier: bodyType [73890,73898]" dest="identifier: bodyType [73897,73905]"/>
  <match src="type_name [81442,81449]" dest="type_name [81449,81456]"/>
  <match src="(: ( [31936,31937]" dest="(: ( [31936,31937]"/>
  <match src="number_literal: 6 [62946,62947]" dest="number_literal: 6 [62953,62954]"/>
  <match src="state_mutability [1519,1523]" dest="state_mutability [1519,1523]"/>
  <match src="primitive_type [48443,48449]" dest="primitive_type [48443,48449]"/>
  <match src="identifier: burn [3305,3309]" dest="identifier: burn [3305,3309]"/>
  <match src="identifier: to [57804,57806]" dest="identifier: to [57804,57806]"/>
  <match src="identifier: topCommoner_ [70094,70106]" dest="identifier: topCommoner_ [70101,70113]"/>
  <match src="identifier: _msgSender [45220,45230]" dest="identifier: _msgSender [45220,45230]"/>
  <match src="function_definition [4647,4713]" dest="function_definition [4647,4713]"/>
  <match src="primitive_type [29663,29670]" dest="primitive_type [29663,29670]"/>
  <match src="primitive_type [4255,4262]" dest="primitive_type [4255,4262]"/>
  <match src="revert: revert [46114,46120]" dest="revert: revert [46114,46120]"/>
  <match src="state_mutability [43872,43876]" dest="state_mutability [43872,43876]"/>
  <match src=",: , [29189,29190]" dest=",: , [29189,29190]"/>
  <match src="comment: /**      * @dev Returns the address that signed a hashed message (`hash`) with      * `signature` or error string. This address can then be used for verification purposes.      *      * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:      * this function rejects them by requiring the `s` value to be in the lower      * half order, and the `v` value to be either 27 or 28.      *      * IMPORTANT: `hash` _must_ be the result of a hash operation for the      * verification to be secure: it is possible to craft signatures that      * recover to arbitrary addresses for non-hashed data. A safe way to ensure      * this is by receiving a hash of the original message (which may otherwise      * be too long), and then calling {toEthSignedMessageHash} on it.      *      * Documentation for signature generation:      * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]      * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]      *      * _Available since v4.3._      */ [9043,10115]" dest="comment: /**      * @dev Returns the address that signed a hashed message (`hash`) with      * `signature` or error string. This address can then be used for verification purposes.      *      * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:      * this function rejects them by requiring the `s` value to be in the lower      * half order, and the `v` value to be either 27 or 28.      *      * IMPORTANT: `hash` _must_ be the result of a hash operation for the      * verification to be secure: it is possible to craft signatures that      * recover to arbitrary addresses for non-hashed data. A safe way to ensure      * this is by receiving a hash of the original message (which may otherwise      * be too long), and then calling {toEthSignedMessageHash} on it.      *      * Documentation for signature generation:      * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]      * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]      *      * _Available since v4.3._      */ [9043,10115]"/>
  <match src=",: , [31880,31881]" dest=",: , [31880,31881]"/>
  <match src="(: ( [4864,4865]" dest="(: ( [4864,4865]"/>
  <match src="identifier: aliases [62849,62856]" dest="identifier: aliases [62856,62863]"/>
  <match src="primitive_type [39541,39548]" dest="primitive_type [39541,39548]"/>
  <match src="call_expression [17319,17376]" dest="call_expression [17319,17376]"/>
  <match src="function_definition [68826,69660]" dest="function_definition [68833,69667]"/>
  <match src="override: override [42714,42722]" dest="override: override [42714,42722]"/>
  <match src="returns: returns [44555,44562]" dest="returns: returns [44555,44562]"/>
  <match src=",: , [54973,54974]" dest=",: , [54973,54974]"/>
  <match src="number_literal: 255 [62411,62414]" dest="number_literal: 255 [62418,62421]"/>
  <match src=".: . [52560,52561]" dest=".: . [52560,52561]"/>
  <match src="variable_declaration_statement [74404,74441]" dest="variable_declaration_statement [74411,74448]"/>
  <match src=",: , [69640,69641]" dest=",: , [69647,69648]"/>
  <match src="address: address [37797,37804]" dest="address: address [37797,37804]"/>
  <match src="call_expression [78062,78375]" dest="call_expression [78069,78382]"/>
  <match src="type_name [5021,5025]" dest="type_name [5021,5025]"/>
  <match src="contract_declaration [34493,34760]" dest="contract_declaration [34493,34760]"/>
  <match src="identifier: to [44665,44667]" dest="identifier: to [44665,44667]"/>
  <match src="type_name [1877,1882]" dest="type_name [1877,1882]"/>
  <match src="call_expression [80002,80057]" dest="call_expression [80009,80064]"/>
  <match src="identifier: safe [48781,48785]" dest="identifier: safe [48781,48785]"/>
  <match src="identifier: length [65825,65831]" dest="identifier: length [65832,65838]"/>
  <match src="external: external [19099,19107]" dest="external: external [19099,19107]"/>
  <match src="binary_expression [41209,41237]" dest="binary_expression [41209,41237]"/>
  <match src="state_mutability [5503,5507]" dest="state_mutability [5503,5507]"/>
  <match src="primitive_type [4761,4768]" dest="primitive_type [4761,4768]"/>
  <match src="[: [ [63257,63258]" dest="[: [ [63264,63265]"/>
  <match src="call_argument [61861,61870]" dest="call_argument [61868,61877]"/>
  <match src="identifier: Transfer [48856,48864]" dest="identifier: Transfer [48856,48864]"/>
  <match src="parameter [55717,55735]" dest="parameter [55717,55735]"/>
  <match src="identifier: _exists [43920,43927]" dest="identifier: _exists [43920,43927]"/>
  <match src="(: ( [50056,50057]" dest="(: ( [50056,50057]"/>
  <match src="type_name [3609,3616]" dest="type_name [3609,3616]"/>
  <match src="identifier: vrf_ [61505,61509]" dest="identifier: vrf_ [61512,61516]"/>
  <match src="type_name [18932,18939]" dest="type_name [18932,18939]"/>
  <match src="return_type_definition [38178,38195]" dest="return_type_definition [38178,38195]"/>
  <match src="string [7640,7643]" dest="string [7640,7643]"/>
  <match src="type_name [37440,37474]" dest="type_name [37440,37474]"/>
  <match src="identifier: mintQuantity [69415,69427]" dest="identifier: mintQuantity [69422,69434]"/>
  <match src="(: ( [52695,52696]" dest="(: ( [52695,52696]"/>
  <match src="primitive_type [76846,76853]" dest="primitive_type [76853,76860]"/>
  <match src="primitive_type [4897,4904]" dest="primitive_type [4897,4904]"/>
  <match src="struct_member [4365,4379]" dest="struct_member [4365,4379]"/>
  <match src="number_literal: 5_001 [58285,58290]" dest="number_literal: 5_001 [58285,58290]"/>
  <match src="identifier: commoners [70968,70977]" dest="identifier: commoners [70975,70984]"/>
  <match src="&amp;: &amp; [77040,77041]" dest="&amp;: &amp; [77047,77048]"/>
  <match src="parameter [55975,55994]" dest="parameter [55975,55994]"/>
  <match src="identifier: treat [64321,64326]" dest="identifier: treat [64328,64333]"/>
  <match src="identifier: id [2452,2454]" dest="identifier: id [2452,2454]"/>
  <match src="}: } [72289,72290]" dest="}: } [72296,72297]"/>
  <match src=",: , [48963,48964]" dest=",: , [48963,48964]"/>
  <match src="identifier: _msgSender [55818,55828]" dest="identifier: _msgSender [55818,55828]"/>
  <match src="identifier: classRerollCount [1967,1983]" dest="identifier: classRerollCount [1967,1983]"/>
  <match src="string [47984,48005]" dest="string [47984,48005]"/>
  <match src="visibility [58255,58261]" dest="visibility [58255,58261]"/>
  <match src="expression_statement [64080,64217]" dest="expression_statement [64087,64224]"/>
  <match src="number_literal: 0 [48873,48874]" dest="number_literal: 0 [48873,48874]"/>
  <match src="identifier: tokenId [81464,81471]" dest="identifier: tokenId [81471,81478]"/>
  <match src="]: ] [63000,63001]" dest="]: ] [63007,63008]"/>
  <match src="bytes32: bytes32 [12755,12762]" dest="bytes32: bytes32 [12755,12762]"/>
  <match src="primitive_type [74802,74806]" dest="primitive_type [74809,74813]"/>
  <match src="primitive_type [27037,27052]" dest="primitive_type [27037,27052]"/>
  <match src="type_name [52612,52616]" dest="type_name [52612,52616]"/>
  <match src=",: , [45011,45012]" dest=",: , [45011,45012]"/>
  <match src="type_name [13315,13322]" dest="type_name [13315,13322]"/>
  <match src="identifier: seed [76984,76988]" dest="identifier: seed [76991,76995]"/>
  <match src="(: ( [64660,64661]" dest="(: ( [64667,64668]"/>
  <match src="(: ( [4470,4471]" dest="(: ( [4470,4471]"/>
  <match src=",: , [7843,7844]" dest=",: , [7843,7844]"/>
  <match src="identifier: target [30900,30906]" dest="identifier: target [30900,30906]"/>
  <match src="==: == [8800,8802]" dest="==: == [8800,8802]"/>
  <match src="call_argument [65380,65429]" dest="call_argument [65387,65436]"/>
  <match src="identifier: topCommoner_ [72831,72843]" dest="identifier: topCommoner_ [72838,72850]"/>
  <match src="call_argument [65468,65471]" dest="call_argument [65475,65478]"/>
  <match src="inheritance_specifier [18363,18370]" dest="inheritance_specifier [18363,18370]"/>
  <match src="function: function [25757,25765]" dest="function: function [25757,25765]"/>
  <match src="identifier: commoners [73866,73875]" dest="identifier: commoners [73873,73882]"/>
  <match src="call_argument [50456,50463]" dest="call_argument [50456,50463]"/>
  <match src="member_expression [61811,61821]" dest="member_expression [61818,61828]"/>
  <match src="block_statement [6578,6638]" dest="block_statement [6578,6638]"/>
  <match src="comment: // error ApproveToCaller(); [35382,35409]" dest="comment: // error ApproveToCaller(); [35382,35409]"/>
  <match src="identifier: seed [77117,77121]" dest="identifier: seed [77124,77128]"/>
  <match src="parameter [13315,13327]" dest="parameter [13315,13327]"/>
  <match src="}: } [12461,12462]" dest="}: } [12461,12462]"/>
  <match src=",: , [62424,62425]" dest=",: , [62431,62432]"/>
  <match src="string [44798,44823]" dest="string [44798,44823]"/>
  <match src="uint256: uint256 [4533,4540]" dest="uint256: uint256 [4533,4540]"/>
  <match src="identifier: addr [41219,41223]" dest="identifier: addr [41219,41223]"/>
  <match src="returns: returns [13390,13397]" dest="returns: returns [13390,13397]"/>
  <match src="virtual: virtual [45896,45903]" dest="virtual: virtual [45896,45903]"/>
  <match src="identifier: commoners [59000,59009]" dest="identifier: commoners [59007,59016]"/>
  <match src="): ) [46759,46760]" dest="): ) [46759,46760]"/>
  <match src="): ) [80461,80462]" dest="): ) [80468,80469]"/>
  <match src="expression_statement [73760,73794]" dest="expression_statement [73767,73801]"/>
  <match src=",: , [79349,79350]" dest=",: , [79356,79357]"/>
  <match src="assignment_expression [53668,53717]" dest="assignment_expression [53668,53717]"/>
  <match src="identifier: accessory [5254,5263]" dest="identifier: accessory [5254,5263]"/>
  <match src="(: ( [30402,30403]" dest="(: ( [30402,30403]"/>
  <match src="inheritance_specifier [35826,35833]" dest="inheritance_specifier [35826,35833]"/>
  <match src="parameter [32458,32470]" dest="parameter [32458,32470]"/>
  <match src="identifier: id [78800,78802]" dest="identifier: id [78807,78809]"/>
  <match src="identifier: quantity_ [67762,67771]" dest="identifier: quantity_ [67769,67778]"/>
  <match src="}: } [30515,30516]" dest="}: } [30515,30516]"/>
  <match src="type_name [1095,1100]" dest="type_name [1095,1100]"/>
  <match src="binary_expression [61146,61169]" dest="binary_expression [61153,61176]"/>
  <match src="uint: uint [4987,4991]" dest="uint: uint [4987,4991]"/>
  <match src="call_expression [68671,68708]" dest="call_expression [68678,68715]"/>
  <match src="call_argument [77632,77633]" dest="call_argument [77639,77640]"/>
  <match src="expression_statement [78930,78968]" dest="expression_statement [78937,78975]"/>
  <match src="address: address [65239,65246]" dest="address: address [65246,65253]"/>
  <match src="expression_statement [75007,75036]" dest="expression_statement [75014,75043]"/>
  <match src="binary_expression [65380,65429]" dest="binary_expression [65387,65436]"/>
  <match src="): ) [18201,18202]" dest="): ) [18201,18202]"/>
  <match src="!: ! [63520,63521]" dest="!: ! [63527,63528]"/>
  <match src="identifier: cooking [71270,71277]" dest="identifier: cooking [71277,71284]"/>
  <match src="type_name [54050,54064]" dest="type_name [54050,54064]"/>
  <match src="identifier: require [65994,66001]" dest="identifier: require [66001,66008]"/>
  <match src="call_argument [46332,46336]" dest="call_argument [46332,46336]"/>
  <match src="identifier: initialize [61451,61461]" dest="identifier: initialize [61458,61468]"/>
  <match src="uint256: uint256 [40883,40890]" dest="uint256: uint256 [40883,40890]"/>
  <match src="(: ( [53700,53701]" dest="(: ( [53700,53701]"/>
  <match src="type_name [74404,74411]" dest="type_name [74411,74418]"/>
  <match src="bool: bool [59863,59867]" dest="bool: bool [59870,59874]"/>
  <match src="function_body [78919,79631]" dest="function_body [78926,79638]"/>
  <match src="}: } [81365,81366]" dest="}: } [81372,81373]"/>
  <match src="expression_statement [63054,63088]" dest="expression_statement [63061,63095]"/>
  <match src="type_name [58247,58254]" dest="type_name [58247,58254]"/>
  <match src="(: ( [282,283]" dest="(: ( [282,283]"/>
  <match src="): ) [1447,1448]" dest="): ) [1447,1448]"/>
  <match src="public: public [35984,35990]" dest="public: public [35984,35990]"/>
  <match src="identifier: ERC20Like [58675,58684]" dest="identifier: ERC20Like [58682,58691]"/>
  <match src="=: = [48735,48736]" dest="=: = [48735,48736]"/>
  <match src="identifier: TokenOwnership [54050,54064]" dest="identifier: TokenOwnership [54050,54064]"/>
  <match src="state_variable_declaration [59801,59857]" dest="state_variable_declaration [59808,59864]"/>
  <match src="identifier: AddressData [36455,36466]" dest="identifier: AddressData [36455,36466]"/>
  <match src="identifier: cooking [73232,73239]" dest="identifier: cooking [73239,73246]"/>
  <match src="expression_statement [29817,29899]" dest="expression_statement [29817,29899]"/>
  <match src="): ) [30054,30055]" dest="): ) [30054,30055]"/>
  <match src="]: ] [79238,79239]" dest="]: ] [79245,79246]"/>
  <match src="comment: // commonerId =&gt; topTalentNo (1~4) [59935,59969]" dest="comment: // commonerId =&gt; topTalentNo (1~4) [59942,59976]"/>
  <match src="pure: pure [7530,7534]" dest="pure: pure [7530,7534]"/>
  <match src="binary_expression [66214,66231]" dest="binary_expression [66221,66238]"/>
  <match src="comment: // function doges(uint256 id) external view returns(uint8 head, uint8 breed, uint8 color, uint8 class, uint8 armor, uint8 offhand, uint8 mainhand, uint16 level); [2078,2239]" dest="comment: // function doges(uint256 id) external view returns(uint8 head, uint8 breed, uint8 color, uint8 class, uint8 armor, uint8 offhand, uint8 mainhand, uint16 level); [2078,2239]"/>
  <match src="identifier: token [64103,64108]" dest="identifier: token [64110,64115]"/>
  <match src="&lt;=: &lt;= [69005,69007]" dest="&lt;=: &lt;= [69012,69014]"/>
  <match src="identifier: smithing [79474,79482]" dest="identifier: smithing [79481,79489]"/>
  <match src="identifier: hash [13472,13476]" dest="identifier: hash [13472,13476]"/>
  <match src="call_argument [28217,28223]" dest="call_argument [28217,28223]"/>
  <match src="): ) [29934,29935]" dest="): ) [29934,29935]"/>
  <match src="comment: // If the ownership slot of tokenId+1 is not explicitly set, that means the burn initiator owns it. [53771,53870]" dest="comment: // If the ownership slot of tokenId+1 is not explicitly set, that means the burn initiator owns it. [53771,53870]"/>
  <match src="comment: // function getGenesisSupply() external pure returns (uint256) { [78577,78641]" dest="comment: // function getGenesisSupply() external pure returns (uint256) { [78584,78648]"/>
  <match src="call_expression [27249,27327]" dest="call_expression [27249,27327]"/>
  <match src="call_expression [77016,77053]" dest="call_expression [77023,77060]"/>
  <match src="[: [ [63137,63138]" dest="[: [ [63144,63145]"/>
  <match src="struct_member [60439,60459]" dest="struct_member [60446,60466]"/>
  <match src="member_expression [70110,70123]" dest="member_expression [70117,70130]"/>
  <match src="primitive_type [7596,7601]" dest="primitive_type [7596,7601]"/>
  <match src="struct_expression [27205,27234]" dest="struct_expression [27205,27234]"/>
  <match src="parameter [80784,80800]" dest="parameter [80791,80807]"/>
  <match src="parameter [28534,28548]" dest="parameter [28534,28548]"/>
  <match src="number_literal: 114 [62169,62172]" dest="number_literal: 114 [62176,62179]"/>
  <match src="primitive_type [19347,19354]" dest="primitive_type [19347,19354]"/>
  <match src="identifier: i [73268,73269]" dest="identifier: i [73275,73276]"/>
  <match src="identifier: background [79449,79459]" dest="identifier: background [79456,79466]"/>
  <match src="(: ( [11240,11241]" dest="(: ( [11240,11241]"/>
  <match src=".: . [80907,80908]" dest=".: . [80914,80915]"/>
  <match src="=: = [70238,70239]" dest="=: = [70245,70246]"/>
  <match src="identifier: target [28693,28699]" dest="identifier: target [28693,28699]"/>
  <match src="identifier: burn [66142,66146]" dest="identifier: burn [66149,66153]"/>
  <match src="assignment_expression [81019,81050]" dest="assignment_expression [81026,81057]"/>
  <match src="identifier: admin [35991,35996]" dest="identifier: admin [35991,35996]"/>
  <match src="(: ( [37557,37558]" dest="(: ( [37557,37558]"/>
  <match src="binary_expression [6705,6715]" dest="binary_expression [6705,6715]"/>
  <match src="yul_hex_number: 0x20 [10732,10736]" dest="yul_hex_number: 0x20 [10732,10736]"/>
  <match src="call_expression [69148,69219]" dest="call_expression [69155,69226]"/>
  <match src="(: ( [69051,69052]" dest="(: ( [69058,69059]"/>
  <match src="call_argument [30462,30466]" dest="call_argument [30462,30466]"/>
  <match src="&quot;: &quot; [66310,66311]" dest="&quot;: &quot; [66317,66318]"/>
  <match src="=: = [70837,70838]" dest="=: = [70844,70845]"/>
  <match src="returns: returns [79716,79723]" dest="returns: returns [79723,79730]"/>
  <match src="(: ( [13304,13305]" dest="(: ( [13304,13305]"/>
  <match src="[: [ [74042,74043]" dest="[: [ [74049,74050]"/>
  <match src="}: } [80659,80660]" dest="}: } [80666,80667]"/>
  <match src="): ) [69651,69652]" dest="): ) [69658,69659]"/>
  <match src="=: = [73899,73900]" dest="=: = [73906,73907]"/>
  <match src="identifier: accessory [73009,73018]" dest="identifier: accessory [73016,73025]"/>
  <match src=",: , [78157,78158]" dest=",: , [78164,78165]"/>
  <match src="}: } [39412,39413]" dest="}: } [39412,39413]"/>
  <match src="): ) [1615,1616]" dest="): ) [1615,1616]"/>
  <match src="function: function [75345,75353]" dest="function: function [75352,75360]"/>
  <match src=".: . [68297,68298]" dest=".: . [68304,68305]"/>
  <match src="if_statement [41017,41903]" dest="if_statement [41017,41903]"/>
  <match src="binary_expression [61589,61609]" dest="binary_expression [61596,61616]"/>
  <match src="comment: // Mapping from token ID to approved address [37611,37655]" dest="comment: // Mapping from token ID to approved address [37611,37655]"/>
  <match src="internal: internal [58991,58999]" dest="internal: internal [58998,59006]"/>
  <match src="expression_statement [64555,64670]" dest="expression_statement [64562,64677]"/>
  <match src="state_mutability [222,226]" dest="state_mutability [222,226]"/>
  <match src="number_literal: 48 [6788,6790]" dest="number_literal: 48 [6788,6790]"/>
  <match src=",: , [44377,44378]" dest=",: , [44377,44378]"/>
  <match src="identifier: cooking [81351,81358]" dest="identifier: cooking [81358,81365]"/>
  <match src="memory: memory [30982,30988]" dest="memory: memory [30982,30988]"/>
  <match src="type_name [1369,1374]" dest="type_name [1369,1374]"/>
  <match src="identifier: returndata_size [32891,32906]" dest="identifier: returndata_size [32891,32906]"/>
  <match src="interface: interface [3724,3733]" dest="interface: interface [3724,3733]"/>
  <match src="(: ( [78799,78800]" dest="(: ( [78806,78807]"/>
  <match src="(: ( [68041,68042]" dest="(: ( [68048,68049]"/>
  <match src="identifier: balanceOf [64191,64200]" dest="identifier: balanceOf [64198,64207]"/>
  <match src="revert_statement [44791,44825]" dest="revert_statement [44791,44825]"/>
  <match src="number_literal: 0 [39582,39583]" dest="number_literal: 0 [39582,39583]"/>
  <match src="identifier: seed [77645,77649]" dest="identifier: seed [77652,77656]"/>
  <match src="identifier: tokenId [46809,46816]" dest="identifier: tokenId [46809,46816]"/>
  <match src="primitive_type [80818,80823]" dest="primitive_type [80825,80830]"/>
  <match src="address: address [44657,44664]" dest="address: address [44657,44664]"/>
  <match src="uint8: uint8 [1141,1146]" dest="uint8: uint8 [1141,1146]"/>
  <match src="block_statement [54733,54784]" dest="block_statement [54733,54784]"/>
  <match src="binary_expression [69921,69947]" dest="binary_expression [69928,69954]"/>
  <match src="identifier: mintReserve [65209,65220]" dest="identifier: mintReserve [65216,65227]"/>
  <match src="if_statement [32628,33002]" dest="if_statement [32628,33002]"/>
  <match src="contract_body [3745,4010]" dest="contract_body [3745,4010]"/>
  <match src="[: [ [73930,73931]" dest="[: [ [73937,73938]"/>
  <match src="]: ] [72739,72740]" dest="]: ] [72746,72747]"/>
  <match src="identifier: mint [3964,3968]" dest="identifier: mint [3964,3968]"/>
  <match src="revert: revert [45270,45276]" dest="revert: revert [45270,45276]"/>
  <match src="visibility [15603,15611]" dest="visibility [15603,15611]"/>
  <match src="&gt;: &gt; [66825,66826]" dest="&gt;: &gt; [66832,66833]"/>
  <match src="parameter [33778,33792]" dest="parameter [33778,33792]"/>
  <match src=",: , [54627,54628]" dest=",: , [54627,54628]"/>
  <match src="member_expression [67530,67557]" dest="member_expression [67537,67564]"/>
  <match src="member_expression [66002,66071]" dest="member_expression [66009,66078]"/>
  <match src="address: address [81442,81449]" dest="address: address [81449,81456]"/>
  <match src="primitive_type [1095,1100]" dest="primitive_type [1095,1100]"/>
  <match src="call_argument [77534,77547]" dest="call_argument [77541,77554]"/>
  <match src="number_literal: 4 [74233,74234]" dest="number_literal: 4 [74240,74241]"/>
  <match src="memory: memory [31379,31385]" dest="memory: memory [31379,31385]"/>
  <match src="number_literal: 16 [74012,74014]" dest="number_literal: 16 [74019,74021]"/>
  <match src="): ) [45677,45678]" dest="): ) [45677,45678]"/>
  <match src="add: add [10825,10828]" dest="add: add [10825,10828]"/>
  <match src="type_name [68851,68856]" dest="type_name [68858,68863]"/>
  <match src="interface: interface [4014,4023]" dest="interface: interface [4014,4023]"/>
  <match src="primitive_type [79678,79685]" dest="primitive_type [79685,79692]"/>
  <match src="uint256: uint256 [39541,39548]" dest="uint256: uint256 [39541,39548]"/>
  <match src="boolean_literal [66352,66356]" dest="boolean_literal [66359,66363]"/>
  <match src="type_name [58148,58152]" dest="type_name [58148,58152]"/>
  <match src="number_literal: 244 [62962,62965]" dest="number_literal: 244 [62969,62972]"/>
  <match src="primitive_type [2323,2330]" dest="primitive_type [2323,2330]"/>
  <match src="number_literal: 0 [72855,72856]" dest="number_literal: 0 [72862,72863]"/>
  <match src="address: address [56956,56963]" dest="address: address [56956,56963]"/>
  <match src=",: , [1836,1837]" dest=",: , [1836,1837]"/>
  <match src="type_cast_expression [39642,39678]" dest="type_cast_expression [39642,39678]"/>
  <match src="): ) [68233,68234]" dest="): ) [68240,68241]"/>
  <match src="address: address [29825,29832]" dest="address: address [29825,29832]"/>
  <match src=",: , [62455,62456]" dest=",: , [62462,62463]"/>
  <match src="&amp;: &amp; [77371,77372]" dest="&amp;: &amp; [77378,77379]"/>
  <match src="struct: struct [4041,4047]" dest="struct: struct [4041,4047]"/>
  <match src="&quot;: &quot; [39593,39594]" dest="&quot;: &quot; [39593,39594]"/>
  <match src="identifier: startTimestamp [51814,51828]" dest="identifier: startTimestamp [51814,51828]"/>
  <match src="revert: revert [56177,56183]" dest="revert: revert [56177,56183]"/>
  <match src="primitive_type [1985,1990]" dest="primitive_type [1985,1990]"/>
  <match src="identifier: key [4636,4639]" dest="identifier: key [4636,4639]"/>
  <match src="||: || [39353,39355]" dest="||: || [39353,39355]"/>
  <match src="(: ( [65090,65091]" dest="(: ( [65097,65098]"/>
  <match src="): ) [12397,12398]" dest="): ) [12397,12398]"/>
  <match src="call_expression [77181,77218]" dest="call_expression [77188,77225]"/>
  <match src=",: , [45549,45550]" dest=",: , [45549,45550]"/>
  <match src="identifier: recovered [13428,13437]" dest="identifier: recovered [13428,13437]"/>
  <match src="identifier: target [31003,31009]" dest="identifier: target [31003,31009]"/>
  <match src="user_defined_type [37459,37473]" dest="user_defined_type [37459,37473]"/>
  <match src="{: { [73276,73277]" dest="{: { [73283,73284]"/>
  <match src="block_statement [68148,68246]" dest="block_statement [68155,68253]"/>
  <match src="primitive_type [17239,17246]" dest="primitive_type [17239,17246]"/>
  <match src="}: } [66474,66475]" dest="}: } [66481,66482]"/>
  <match src="parameter [148,161]" dest="parameter [148,161]"/>
  <match src="address: address [50541,50548]" dest="address: address [50541,50548]"/>
  <match src="revert_statement [48036,48065]" dest="revert_statement [48036,48065]"/>
  <match src="yul_function_call [11241,11261]" dest="yul_function_call [11241,11261]"/>
  <match src="contract_declaration [33588,33831]" dest="contract_declaration [33588,33831]"/>
  <match src="identifier: returndata [30010,30020]" dest="identifier: returndata [30010,30020]"/>
  <match src="type_name [30403,30408]" dest="type_name [30403,30408]"/>
  <match src="assignment_expression [80981,81008]" dest="assignment_expression [80988,81015]"/>
  <match src="type_name [4071,4077]" dest="type_name [4071,4077]"/>
  <match src=".: . [77252,77253]" dest=".: . [77259,77260]"/>
  <match src="identifier: _msgSender [46064,46074]" dest="identifier: _msgSender [46064,46074]"/>
  <match src="comment: /**      * @dev Returns the number of tokens in ``owner``'s account.      */ [18981,19059]" dest="comment: /**      * @dev Returns the number of tokens in ``owner``'s account.      */ [18981,19059]"/>
  <match src="primitive_type [42099,42106]" dest="primitive_type [42099,42106]"/>
  <match src="{: { [64271,64272]" dest="{: { [64278,64279]"/>
  <match src="identifier: nextTokenId [51678,51689]" dest="identifier: nextTokenId [51678,51689]"/>
  <match src="block_statement [52597,52871]" dest="block_statement [52597,52871]"/>
  <match src="identifier: block [53701,53706]" dest="identifier: block [53701,53706]"/>
  <match src="primitive_type [29147,29154]" dest="primitive_type [29147,29154]"/>
  <match src="member_expression [8803,8833]" dest="member_expression [8803,8833]"/>
  <match src="state_mutability [13385,13389]" dest="state_mutability [13385,13389]"/>
  <match src="call_argument [13478,13479]" dest="call_argument [13478,13479]"/>
  <match src="call_argument [27235,27237]" dest="call_argument [27235,27237]"/>
  <match src="comment: // init erc721a [61675,61690]" dest="comment: // init erc721a [61682,61697]"/>
  <match src="expression_statement [7268,7279]" dest="expression_statement [7268,7279]"/>
  <match src="function_definition [5879,5935]" dest="function_definition [5879,5935]"/>
  <match src="identifier: drawSvgNew [600,610]" dest="identifier: drawSvgNew [600,610]"/>
  <match src="binary_expression [7602,7612]" dest="binary_expression [7602,7612]"/>
  <match src="(: ( [47983,47984]" dest="(: ( [47983,47984]"/>
  <match src="identifier: length [10940,10946]" dest="identifier: length [10940,10946]"/>
  <match src="function_definition [63767,63958]" dest="function_definition [63774,63965]"/>
  <match src="expression_statement [63731,63752]" dest="expression_statement [63738,63759]"/>
  <match src="identifier: admin [63701,63706]" dest="identifier: admin [63708,63713]"/>
  <match src="identifier: ERC721A [35815,35822]" dest="identifier: ERC721A [35815,35822]"/>
  <match src="identifier: value [3531,3536]" dest="identifier: value [3531,3536]"/>
  <match src="): ) [37580,37581]" dest="): ) [37580,37581]"/>
  <match src="comment: /**      * @dev Returns the account approved for `tokenId` token.      *      * Requirements:      *      * - `tokenId` must exist.      */ [21371,21516]" dest="comment: /**      * @dev Returns the account approved for `tokenId` token.      *      * Requirements:      *      * - `tokenId` must exist.      */ [21371,21516]"/>
  <match src="call_argument [15186,15187]" dest="call_argument [15186,15187]"/>
  <match src="identifier: from [53649,53653]" dest="identifier: from [53649,53653]"/>
  <match src=",: , [74910,74911]" dest=",: , [74917,74918]"/>
  <match src="uint256: uint256 [74538,74545]" dest="uint256: uint256 [74545,74552]"/>
  <match src="primitive_type [39856,39863]" dest="primitive_type [39856,39863]"/>
  <match src="]: ] [79887,79888]" dest="]: ] [79894,79895]"/>
  <match src=".: . [77418,77419]" dest=".: . [77425,77426]"/>
  <match src=",: , [15706,15707]" dest=",: , [15706,15707]"/>
  <match src=":: : [79482,79483]" dest=":: : [79489,79490]"/>
  <match src="public: public [39155,39161]" dest="public: public [39155,39161]"/>
  <match src="call_expression [45950,45962]" dest="call_expression [45950,45962]"/>
  <match src="(: ( [21582,21583]" dest="(: ( [21582,21583]"/>
  <match src="call_argument [54616,54617]" dest="call_argument [54616,54617]"/>
  <match src="primitive_type [16109,16116]" dest="primitive_type [16109,16116]"/>
  <match src="primitive_type [32367,32372]" dest="primitive_type [32367,32372]"/>
  <match src="+=: += [53461,53463]" dest="+=: += [53461,53463]"/>
  <match src="identifier: call [30031,30035]" dest="identifier: call [30031,30035]"/>
  <match src="type_name [59050,59077]" dest="type_name [59057,59084]"/>
  <match src="user_defined_type [53330,53341]" dest="user_defined_type [53330,53341]"/>
  <match src="number_literal: 6 [62878,62879]" dest="number_literal: 6 [62885,62886]"/>
  <match src="identifier: commoners [70859,70868]" dest="identifier: commoners [70866,70875]"/>
  <match src="if: if [41017,41019]" dest="if: if [41017,41019]"/>
  <match src="primitive_type [58099,58103]" dest="primitive_type [58099,58103]"/>
  <match src="&quot;: &quot; [67879,67880]" dest="&quot;: &quot; [67886,67887]"/>
  <match src="identifier: score [4397,4402]" dest="identifier: score [4397,4402]"/>
  <match src="primitive_type [7060,7066]" dest="primitive_type [7060,7066]"/>
  <match src="||: || [39288,39290]" dest="||: || [39288,39290]"/>
  <match src="type_name [58793,58817]" dest="type_name [58800,58824]"/>
  <match src="identifier: amount [27227,27233]" dest="identifier: amount [27227,27233]"/>
  <match src="}: } [64349,64350]" dest="}: } [64356,64357]"/>
  <match src="primitive_type [78766,78770]" dest="primitive_type [78773,78777]"/>
  <match src="variable_declaration_statement [51358,51392]" dest="variable_declaration_statement [51358,51392]"/>
  <match src="member_expression [39247,39352]" dest="member_expression [39247,39352]"/>
  <match src="{: { [2281,2282]" dest="{: { [2281,2282]"/>
  <match src="address: address [54550,54557]" dest="address: address [54550,54557]"/>
  <match src="identifier: _addressData [50863,50875]" dest="identifier: _addressData [50863,50875]"/>
  <match src="identifier: to [46959,46961]" dest="identifier: to [46959,46961]"/>
  <match src="identifier: to [20785,20787]" dest="identifier: to [20785,20787]"/>
  <match src="==: == [73270,73272]" dest="==: == [73277,73279]"/>
  <match src="(: ( [32869,32870]" dest="(: ( [32869,32870]"/>
  <match src="(: ( [49848,49849]" dest="(: ( [49848,49849]"/>
  <match src="if: if [51674,51676]" dest="if: if [51674,51676]"/>
  <match src="): ) [49427,49428]" dest="): ) [49427,49428]"/>
  <match src="primitive_type [80721,80726]" dest="primitive_type [80728,80733]"/>
  <match src="identifier: owner [40352,40357]" dest="identifier: owner [40352,40357]"/>
  <match src="return_statement [38207,38216]" dest="return_statement [38207,38216]"/>
  <match src="(: ( [10828,10829]" dest="(: ( [10828,10829]"/>
  <match src="identifier: background [81220,81230]" dest="identifier: background [81227,81237]"/>
  <match src="array_access [79128,79146]" dest="array_access [79135,79153]"/>
  <match src="primitive_type [49903,49910]" dest="primitive_type [49903,49910]"/>
  <match src="}: } [79621,79622]" dest="}: } [79628,79629]"/>
  <match src="call_argument [29301,29305]" dest="call_argument [29301,29305]"/>
  <match src="identifier: error [8916,8921]" dest="identifier: error [8916,8921]"/>
  <match src="{: { [41002,41003]" dest="{: { [41002,41003]"/>
  <match src="identifier: require [65129,65136]" dest="identifier: require [65136,65143]"/>
  <match src="call_argument [52932,52933]" dest="call_argument [52932,52933]"/>
  <match src=":: : [69961,69962]" dest=":: : [69968,69969]"/>
  <match src="boolean_literal [52137,52142]" dest="boolean_literal [52137,52142]"/>
  <match src="revert_statement [43938,43983]" dest="revert_statement [43938,43983]"/>
  <match src="yul_function_call [10761,10788]" dest="yul_function_call [10761,10788]"/>
  <match src="number_literal: 183 [62967,62970]" dest="number_literal: 183 [62974,62977]"/>
  <match src="string [8857,8893]" dest="string [8857,8893]"/>
  <match src="identifier: number [79898,79904]" dest="identifier: number [79905,79911]"/>
  <match src="identifier: approvalCheck [52417,52430]" dest="identifier: approvalCheck [52417,52430]"/>
  <match src="type_cast_expression [40091,40132]" dest="type_cast_expression [40091,40132]"/>
  <match src="identifier: quantity_ [67263,67272]" dest="identifier: quantity_ [67270,67279]"/>
  <match src="=: = [74955,74956]" dest="=: = [74962,74963]"/>
  <match src="binary_expression [46809,46832]" dest="binary_expression [46809,46832]"/>
  <match src="block_statement [51708,51848]" dest="block_statement [51708,51848]"/>
  <match src="(: ( [69259,69260]" dest="(: ( [69266,69267]"/>
  <match src="=: = [61849,61850]" dest="=: = [61856,61857]"/>
  <match src="identifier: to [51906,51908]" dest="identifier: to [51906,51908]"/>
  <match src="type_name [25817,25821]" dest="type_name [25817,25821]"/>
  <match src="identifier: transferFrom [3761,3773]" dest="identifier: transferFrom [3761,3773]"/>
  <match src=",: , [22898,22899]" dest=",: , [22898,22899]"/>
  <match src="parameter [10202,10209]" dest="parameter [10202,10209]"/>
  <match src="identifier: msg [66962,66965]" dest="identifier: msg [66969,66972]"/>
  <match src="function_definition [66649,67328]" dest="function_definition [66656,67335]"/>
  <match src="internal: internal [40602,40610]" dest="internal: internal [40602,40610]"/>
  <match src="primitive_type [42052,42059]" dest="primitive_type [42052,42059]"/>
  <match src="[: [ [75494,75495]" dest="[: [ [75501,75502]"/>
  <match src="binary_expression [67836,67851]" dest="binary_expression [67843,67858]"/>
  <match src="member_expression [79535,79561]" dest="member_expression [79542,79568]"/>
  <match src="type_name [15566,15573]" dest="type_name [15566,15573]"/>
  <match src="string [66294,66311]" dest="string [66301,66318]"/>
  <match src="type_name [13760,13767]" dest="type_name [13760,13767]"/>
  <match src="identifier: signature [10930,10939]" dest="identifier: signature [10930,10939]"/>
  <match src="[: [ [61810,61811]" dest="[: [ [61817,61818]"/>
  <match src="number_literal: 0xFFFF [77124,77130]" dest="number_literal: 0xFFFF [77131,77137]"/>
  <match src="visibility [43865,43871]" dest="visibility [43865,43871]"/>
  <match src="[: [ [63314,63315]" dest="[: [ [63321,63322]"/>
  <match src="expression_statement [43725,43754]" dest="expression_statement [43725,43754]"/>
  <match src=",: , [62718,62719]" dest=",: , [62725,62726]"/>
  <match src="identifier: admin [63482,63487]" dest="identifier: admin [63489,63494]"/>
  <match src="&lt;=: &lt;= [70011,70013]" dest="&lt;=: &lt;= [70018,70020]"/>
  <match src="type_name [43895,43902]" dest="type_name [43895,43902]"/>
  <match src="=: = [62949,62950]" dest="=: = [62956,62957]"/>
  <match src="{: { [2418,2419]" dest="{: { [2418,2419]"/>
  <match src="pure: pure [6210,6214]" dest="pure: pure [6210,6214]"/>
  <match src="true [41615,41619]" dest="true [41615,41619]"/>
  <match src="user_defined_type [57987,57994]" dest="user_defined_type [57987,57994]"/>
  <match src="identifier: require [69044,69051]" dest="identifier: require [69051,69058]"/>
  <match src="primitive_type [50541,50548]" dest="primitive_type [50541,50548]"/>
  <match src="primitive_type [5224,5229]" dest="primitive_type [5224,5229]"/>
  <match src="identifier: totalMinted [69365,69376]" dest="identifier: totalMinted [69372,69383]"/>
  <match src="parameter [80752,80765]" dest="parameter [80759,80772]"/>
  <match src="returns: returns [43270,43277]" dest="returns: returns [43270,43277]"/>
  <match src="function: function [3752,3760]" dest="function: function [3752,3760]"/>
  <match src="state_mutability [39518,39522]" dest="state_mutability [39518,39522]"/>
  <match src="assignment_expression [63124,63149]" dest="assignment_expression [63131,63156]"/>
  <match src="(: ( [28216,28217]" dest="(: ( [28216,28217]"/>
  <match src="number_literal: 0xFFFF [77541,77547]" dest="number_literal: 0xFFFF [77548,77554]"/>
  <match src="type_name [59645,59652]" dest="type_name [59652,59659]"/>
  <match src="address: address [44978,44985]" dest="address: address [44978,44985]"/>
  <match src="call_argument [51508,51509]" dest="call_argument [51508,51509]"/>
  <match src="primitive_type [66689,66694]" dest="primitive_type [66696,66701]"/>
  <match src="external: external [1771,1779]" dest="external: external [1771,1779]"/>
  <match src="number_literal: 16 [77320,77322]" dest="number_literal: 16 [77327,77329]"/>
  <match src="return_type_definition [769,792]" dest="return_type_definition [769,792]"/>
  <match src="(: ( [195,196]" dest="(: ( [195,196]"/>
  <match src="return: return [79081,79087]" dest="return: return [79088,79094]"/>
  <match src="identifier: whitelistMinted [66946,66961]" dest="identifier: whitelistMinted [66953,66968]"/>
  <match src=",: , [300,301]" dest=",: , [300,301]"/>
  <match src="state_mutability [42509,42513]" dest="state_mutability [42509,42513]"/>
  <match src="block_statement [73276,74250]" dest="block_statement [73283,74257]"/>
  <match src="member_expression [44847,44857]" dest="member_expression [44847,44857]"/>
  <match src="&quot;: &quot; [63548,63549]" dest="&quot;: &quot; [63555,63556]"/>
  <match src="contract_body [2418,2491]" dest="contract_body [2418,2491]"/>
  <match src="variable_declaration_statement [52612,52774]" dest="variable_declaration_statement [52612,52774]"/>
  <match src="primitive_type [31724,31731]" dest="primitive_type [31724,31731]"/>
  <match src="member_expression [64080,64117]" dest="member_expression [64087,64124]"/>
  <match src=".: . [63941,63942]" dest=".: . [63948,63949]"/>
  <match src="=: = [51745,51746]" dest="=: = [51745,51746]"/>
  <match src="primitive_type [28135,28140]" dest="primitive_type [28135,28140]"/>
  <match src=".: . [66436,66437]" dest=".: . [66443,66444]"/>
  <match src="identifier: abi [16749,16752]" dest="identifier: abi [16749,16752]"/>
  <match src="comment: //     uint8 clothes; Royal Chef's Apron [72545,72585]" dest="comment: //     uint8 clothes; Royal Chef's Apron [72552,72592]"/>
  <match src=",: , [18930,18931]" dest=",: , [18930,18931]"/>
  <match src="address: address [43895,43902]" dest="address: address [43895,43902]"/>
  <match src="{: { [41182,41183]" dest="{: { [41182,41183]"/>
  <match src="(: ( [46187,46188]" dest="(: ( [46187,46188]"/>
  <match src="identifier: alchemy [72209,72216]" dest="identifier: alchemy [72216,72223]"/>
  <match src="comment: // A.J. Walker's Alias Algorithm [62055,62087]" dest="comment: // A.J. Walker's Alias Algorithm [62062,62094]"/>
  <match src="virtual: virtual [38170,38177]" dest="virtual: virtual [38170,38177]"/>
  <match src="payable: payable [27045,27052]" dest="payable: payable [27045,27052]"/>
  <match src="identifier: dogeClaimed [66327,66338]" dest="identifier: dogeClaimed [66334,66345]"/>
  <match src="identifier: s [10906,10907]" dest="identifier: s [10906,10907]"/>
  <match src="internal: internal [47888,47896]" dest="internal: internal [47888,47896]"/>
  <match src="address: address [44133,44140]" dest="address: address [44133,44140]"/>
  <match src="external: external [3538,3546]" dest="external: external [3538,3546]"/>
  <match src="call_argument [48873,48874]" dest="call_argument [48873,48874]"/>
  <match src="struct_member [1141,1156]" dest="struct_member [1141,1156]"/>
  <match src="parameter [411,438]" dest="parameter [411,438]"/>
  <match src="yul_function_call [32863,32907]" dest="yul_function_call [32863,32907]"/>
  <match src="==: == [80438,80440]" dest="==: == [80445,80447]"/>
  <match src="!=: != [42907,42909]" dest="!=: != [42907,42909]"/>
  <match src="identifier: alchemy [5332,5339]" dest="identifier: alchemy [5332,5339]"/>
  <match src="number_literal: 12 [62707,62709]" dest="number_literal: 12 [62714,62716]"/>
  <match src="uint16: uint16 [77275,77281]" dest="uint16: uint16 [77282,77288]"/>
  <match src="identifier: prevOwnership [50022,50035]" dest="identifier: prevOwnership [50022,50035]"/>
  <match src="override_specifier [42081,42089]" dest="override_specifier [42081,42089]"/>
  <match src="type_name [36972,36978]" dest="type_name [36972,36978]"/>
  <match src="call_argument [31426,31432]" dest="call_argument [31426,31432]"/>
  <match src="primitive_type [3904,3911]" dest="primitive_type [3904,3911]"/>
  <match src="augmented_assignment_expression [77146,77157]" dest="augmented_assignment_expression [77153,77164]"/>
  <match src="): ) [69218,69219]" dest="): ) [69225,69226]"/>
  <match src=",: , [81440,81441]" dest=",: , [81447,81448]"/>
  <match src="variable_declaration_tuple [13419,13458]" dest="variable_declaration_tuple [13419,13458]"/>
  <match src="memory: memory [881,887]" dest="memory: memory [881,887]"/>
  <match src="identifier: functionCall [28106,28118]" dest="identifier: functionCall [28106,28118]"/>
  <match src="(: ( [10435,10436]" dest="(: ( [10435,10436]"/>
  <match src="function_definition [1632,1712]" dest="function_definition [1632,1712]"/>
  <match src="variable_declaration [7685,7694]" dest="variable_declaration [7685,7694]"/>
  <match src="type_name [43457,43464]" dest="type_name [43457,43464]"/>
  <match src="state_mutability [10188,10192]" dest="state_mutability [10188,10192]"/>
  <match src="type_cast_expression [48633,48656]" dest="type_cast_expression [48633,48656]"/>
  <match src="(: ( [63437,63438]" dest="(: ( [63444,63445]"/>
  <match src="member_expression [72717,72745]" dest="member_expression [72724,72752]"/>
  <match src="{: { [78772,78773]" dest="{: { [78779,78780]"/>
  <match src="(: ( [7021,7022]" dest="(: ( [7021,7022]"/>
  <match src="memory: memory [47430,47436]" dest="memory: memory [47430,47436]"/>
  <match src="=: = [64327,64328]" dest="=: = [64334,64335]"/>
  <match src="expression_statement [31854,31924]" dest="expression_statement [31854,31924]"/>
  <match src="variable_declaration [51406,51437]" dest="variable_declaration [51406,51437]"/>
  <match src="identifier: i [71306,71307]" dest="identifier: i [71313,71314]"/>
  <match src="identifier: topCommoner_ [74155,74167]" dest="identifier: topCommoner_ [74162,74174]"/>
  <match src="visibility [4677,4685]" dest="visibility [4677,4685]"/>
  <match src="binary_expression [77200,77213]" dest="binary_expression [77207,77220]"/>
  <match src="parameter [44978,44990]" dest="parameter [44978,44990]"/>
  <match src="identifier: tokenPartner [68575,68587]" dest="identifier: tokenPartner [68582,68594]"/>
  <match src="type_name [13420,13427]" dest="type_name [13420,13427]"/>
  <match src="identifier: onERC721Received [55801,55817]" dest="identifier: onERC721Received [55801,55817]"/>
  <match src="identifier: data [33816,33820]" dest="identifier: data [33816,33820]"/>
  <match src="number_literal: 0xFFFF [77705,77711]" dest="number_literal: 0xFFFF [77712,77718]"/>
  <match src="': ' [45675,45676]" dest="': ' [45675,45676]"/>
  <match src="internal: internal [25794,25802]" dest="internal: internal [25794,25802]"/>
  <match src="!: ! [45250,45251]" dest="!: ! [45250,45251]"/>
  <match src="identifier: CastleLike [3096,3106]" dest="identifier: CastleLike [3096,3106]"/>
  <match src="-=: -= [6739,6741]" dest="-=: -= [6739,6741]"/>
  <match src="address: address [5567,5574]" dest="address: address [5567,5574]"/>
  <match src="function_body [30417,30516]" dest="function_body [30417,30516]"/>
  <match src=".: . [69364,69365]" dest=".: . [69371,69372]"/>
  <match src="comment: //     uint8 palette; 1 [70502,70525]" dest="comment: //     uint8 palette; 1 [70509,70532]"/>
  <match src="(: ( [46198,46199]" dest="(: ( [46198,46199]"/>
  <match src="(: ( [42770,42771]" dest="(: ( [42770,42771]"/>
  <match src="number_literal: 7 [62335,62336]" dest="number_literal: 7 [62342,62343]"/>
  <match src="uint256: uint256 [78005,78012]" dest="uint256: uint256 [78012,78019]"/>
  <match src="return_statement [16732,16832]" dest="return_statement [16732,16832]"/>
  <match src="pure: pure [32444,32448]" dest="pure: pure [32444,32448]"/>
  <match src="return: return [80068,80074]" dest="return: return [80075,80081]"/>
  <match src="string [66096,66111]" dest="string [66103,66118]"/>
  <match src="contract_body [33614,33831]" dest="contract_body [33614,33831]"/>
  <match src="update_expression [7245,7253]" dest="update_expression [7245,7253]"/>
  <match src="identifier: to [56987,56989]" dest="identifier: to [56987,56989]"/>
  <match src="bool: bool [5604,5608]" dest="bool: bool [5604,5608]"/>
  <match src="{: { [78919,78920]" dest="{: { [78926,78927]"/>
  <match src="): ) [39804,39805]" dest="): ) [39804,39805]"/>
  <match src="identifier: length [66166,66172]" dest="identifier: length [66173,66179]"/>
  <match src="yul_function_call [61064,61080]" dest="yul_function_call [61071,61087]"/>
  <match src="address: address [35976,35983]" dest="address: address [35976,35983]"/>
  <match src="=: = [69919,69920]" dest="=: = [69926,69927]"/>
  <match src="string [16296,16330]" dest="string [16296,16330]"/>
  <match src=",: , [45164,45165]" dest=",: , [45164,45165]"/>
  <match src="string_literal [66096,66111]" dest="string_literal [66103,66118]"/>
  <match src=",: , [67171,67172]" dest=",: , [67178,67179]"/>
  <match src="uint256: uint256 [38401,38408]" dest="uint256: uint256 [38401,38408]"/>
  <match src="): ) [53017,53018]" dest="): ) [53017,53018]"/>
  <match src="identifier: hash [67530,67534]" dest="identifier: hash [67537,67541]"/>
  <match src="call_argument [61611,61632]" dest="call_argument [61618,61639]"/>
  <match src="identifier: curr [41135,41139]" dest="identifier: curr [41135,41139]"/>
  <match src="return_statement [34702,34750]" dest="return_statement [34702,34750]"/>
  <match src="]: ] [62124,62125]" dest="]: ] [62131,62132]"/>
  <match src="(: ( [33744,33745]" dest="(: ( [33744,33745]"/>
  <match src="type_name [4389,4396]" dest="type_name [4389,4396]"/>
  <match src="expression_statement [66327,66357]" dest="expression_statement [66334,66364]"/>
  <match src="): ) [13483,13484]" dest="): ) [13483,13484]"/>
  <match src="type_name [10211,10223]" dest="type_name [10211,10223]"/>
  <match src="external: external [549,557]" dest="external: external [549,557]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [77069,77072]" dest="&gt;&gt;=: &gt;&gt;= [77076,77079]"/>
  <match src="call_expression [70110,70126]" dest="call_expression [70117,70133]"/>
  <match src="): ) [1537,1538]" dest="): ) [1537,1538]"/>
  <match src="): ) [42146,42147]" dest="): ) [42146,42147]"/>
  <match src="function: function [47347,47355]" dest="function: function [47347,47355]"/>
  <match src="visibility [3251,3259]" dest="visibility [3251,3259]"/>
  <match src="if: if [47955,47957]" dest="if: if [47955,47957]"/>
  <match src="primitive_type [58297,58304]" dest="primitive_type [58297,58304]"/>
  <match src="parameter [47397,47413]" dest="parameter [47397,47413]"/>
  <match src=",: , [80915,80916]" dest=",: , [80922,80923]"/>
  <match src="identifier: balanceOf [39486,39495]" dest="identifier: balanceOf [39486,39495]"/>
  <match src="): ) [41768,41769]" dest="): ) [41768,41769]"/>
  <match src="=: = [63192,63193]" dest="=: = [63199,63200]"/>
  <match src="[: [ [76583,76584]" dest="[: [ [76590,76591]"/>
  <match src=",: , [62137,62138]" dest=",: , [62144,62145]"/>
  <match src="primitive_type [5909,5916]" dest="primitive_type [5909,5916]"/>
  <match src="parameter [5897,5907]" dest="parameter [5897,5907]"/>
  <match src="]: ] [66348,66349]" dest="]: ] [66355,66356]"/>
  <match src="identifier: who_ [1504,1508]" dest="identifier: who_ [1504,1508]"/>
  <match src="}: } [74313,74314]" dest="}: } [74320,74321]"/>
  <match src="(: ( [65391,65392]" dest="(: ( [65398,65399]"/>
  <match src="identifier: toTypedDataHash [17198,17213]" dest="identifier: toTypedDataHash [17198,17213]"/>
  <match src="external: external [80350,80358]" dest="external: external [80357,80365]"/>
  <match src="identifier: signature [10829,10838]" dest="identifier: signature [10829,10838]"/>
  <match src="number_literal: 5 [62866,62867]" dest="number_literal: 5 [62873,62874]"/>
  <match src="primitive_type [3383,3390]" dest="primitive_type [3383,3390]"/>
  <match src="[: [ [44613,44614]" dest="[: [ [44613,44614]"/>
  <match src="string_literal [46973,46975]" dest="string_literal [46973,46975]"/>
  <match src="contract_body [24164,24605]" dest="contract_body [24164,24605]"/>
  <match src="}: } [6637,6638]" dest="}: } [6637,6638]"/>
  <match src="): ) [61906,61907]" dest="): ) [61913,61914]"/>
  <match src="public: public [59916,59922]" dest="public: public [59923,59929]"/>
  <match src="primitive_type [67440,67447]" dest="primitive_type [67447,67454]"/>
  <match src="expression_statement [81285,81317]" dest="expression_statement [81292,81324]"/>
  <match src="identifier: setAuth [64937,64944]" dest="identifier: setAuth [64944,64951]"/>
  <match src="function_definition [44467,44631]" dest="function_definition [44467,44631]"/>
  <match src="function: function [64928,64936]" dest="function: function [64935,64943]"/>
  <match src="parameter [20777,20787]" dest="parameter [20777,20787]"/>
  <match src="if_statement [42758,42821]" dest="if_statement [42758,42821]"/>
  <match src="identifier: commoners [71192,71201]" dest="identifier: commoners [71199,71208]"/>
  <match src="{: { [7725,7726]" dest="{: { [7725,7726]"/>
  <match src="type_name [5909,5916]" dest="type_name [5909,5916]"/>
  <match src="): ) [67156,67157]" dest="): ) [67163,67164]"/>
  <match src="returns: returns [55854,55861]" dest="returns: returns [55854,55861]"/>
  <match src="binary_expression [69342,69404]" dest="binary_expression [69349,69411]"/>
  <match src="member_expression [72821,72852]" dest="member_expression [72828,72859]"/>
  <match src="!=: != [7224,7226]" dest="!=: != [7224,7226]"/>
  <match src="): ) [55994,55995]" dest="): ) [55994,55995]"/>
  <match src="assignment_expression [72821,72856]" dest="assignment_expression [72828,72863]"/>
  <match src="): ) [65107,65108]" dest="): ) [65114,65115]"/>
  <match src="string_literal [52821,52858]" dest="string_literal [52821,52858]"/>
  <match src="function_definition [44946,45430]" dest="function_definition [44946,45430]"/>
  <match src="identifier: doges_ [66452,66458]" dest="identifier: doges_ [66459,66465]"/>
  <match src="identifier: require [65752,65759]" dest="identifier: require [65759,65766]"/>
  <match src="assignment_expression [62937,62980]" dest="assignment_expression [62944,62987]"/>
  <match src="identifier: traits [79772,79778]" dest="identifier: traits [79779,79785]"/>
  <match src="primitive_type [20798,20805]" dest="primitive_type [20798,20805]"/>
  <match src="identifier: require [65810,65817]" dest="identifier: require [65817,65824]"/>
  <match src="call_expression [7825,7880]" dest="call_expression [7825,7880]"/>
  <match src="return: return [13524,13530]" dest="return: return [13524,13530]"/>
  <match src=",: , [27062,27063]" dest=",: , [27062,27063]"/>
  <match src="identifier: initialSaleMinted [67957,67974]" dest="identifier: initialSaleMinted [67964,67981]"/>
  <match src="primitive_type [874,880]" dest="primitive_type [874,880]"/>
  <match src="function_body [38809,39036]" dest="function_body [38809,39036]"/>
  <match src="call_argument [63520,63529]" dest="call_argument [63527,63536]"/>
  <match src="identifier: quantity [48129,48137]" dest="identifier: quantity [48129,48137]"/>
  <match src="uint16: uint16 [1960,1966]" dest="uint16: uint16 [1960,1966]"/>
  <match src="]: ] [39668,39669]" dest="]: ] [39668,39669]"/>
  <match src="function_body [49935,51979]" dest="function_body [49935,51979]"/>
  <match src="override_specifier [45619,45627]" dest="override_specifier [45619,45627]"/>
  <match src=",: , [46340,46341]" dest=",: , [46340,46341]"/>
  <match src="identifier: t_ [64339,64341]" dest="identifier: t_ [64346,64348]"/>
  <match src="address: address [64201,64208]" dest="address: address [64208,64215]"/>
  <match src="identifier: status_ [63744,63751]" dest="identifier: status_ [63751,63758]"/>
  <match src="[: [ [62551,62552]" dest="[: [ [62558,62559]"/>
  <match src=",: , [61183,61184]" dest=",: , [61190,61191]"/>
  <match src="&quot;: &quot; [6481,6482]" dest="&quot;: &quot; [6481,6482]"/>
  <match src="identifier: bodyType [70937,70945]" dest="identifier: bodyType [70944,70952]"/>
  <match src=",: , [30974,30975]" dest=",: , [30974,30975]"/>
  <match src="primitive_type [35976,35983]" dest="primitive_type [35976,35983]"/>
  <match src="public: public [58710,58716]" dest="public: public [58717,58723]"/>
  <match src="type_name [37459,37473]" dest="type_name [37459,37473]"/>
  <match src="number_literal: 0 [65878,65879]" dest="number_literal: 0 [65885,65886]"/>
  <match src="identifier: aliases [62318,62325]" dest="identifier: aliases [62325,62332]"/>
  <match src="call_argument [53008,53018]" dest="call_argument [53008,53018]"/>
  <match src="]: ] [76525,76526]" dest="]: ] [76532,76533]"/>
  <match src="): ) [50566,50567]" dest="): ) [50566,50567]"/>
  <match src="return: return [32511,32517]" dest="return: return [32511,32517]"/>
  <match src="[: [ [71032,71033]" dest="[: [ [71039,71040]"/>
  <match src="identifier: errorMessage [31082,31094]" dest="identifier: errorMessage [31082,31094]"/>
  <match src="}: } [41972,41973]" dest="}: } [41972,41973]"/>
  <match src="{: { [74393,74394]" dest="{: { [74400,74401]"/>
  <match src="call_argument [44369,44377]" dest="call_argument [44369,44377]"/>
  <match src="&quot;: &quot; [42818,42819]" dest="&quot;: &quot; [42818,42819]"/>
  <match src="array_access [69342,69364]" dest="array_access [69349,69371]"/>
  <match src="comment: /**      * Returns the number of tokens burned by or on behalf of `owner`.      */ [39913,39997]" dest="comment: /**      * Returns the number of tokens burned by or on behalf of `owner`.      */ [39913,39997]"/>
  <match src="member_expression [14895,14925]" dest="member_expression [14895,14925]"/>
  <match src="string: string [700,706]" dest="string: string [700,706]"/>
  <match src="): ) [40039,40040]" dest="): ) [40039,40040]"/>
  <match src="identifier: tokenId [75495,75502]" dest="identifier: tokenId [75502,75509]"/>
  <match src="visibility [25794,25802]" dest="visibility [25794,25802]"/>
  <match src="primitive_type [51083,51089]" dest="primitive_type [51083,51089]"/>
  <match src="memory: memory [12268,12274]" dest="memory: memory [12268,12274]"/>
  <match src="return_type_definition [19338,19361]" dest="return_type_definition [19338,19361]"/>
  <match src="string_literal [63531,63549]" dest="string_literal [63538,63556]"/>
  <match src="revert: revert [8972,8978]" dest="revert: revert [8972,8978]"/>
  <match src="identifier: id [1822,1824]" dest="identifier: id [1822,1824]"/>
  <match src="identifier: artStyle [1991,1999]" dest="identifier: artStyle [1991,1999]"/>
  <match src="if: if [52790,52792]" dest="if: if [52790,52792]"/>
  <match src="(: ( [78078,78079]" dest="(: ( [78085,78086]"/>
  <match src="member_expression [68488,68529]" dest="member_expression [68495,68536]"/>
  <match src="call_argument [51960,51967]" dest="call_argument [51960,51967]"/>
  <match src="identifier: tokenId [54966,54973]" dest="identifier: tokenId [54966,54973]"/>
  <match src="identifier: sender [63472,63478]" dest="identifier: sender [63479,63485]"/>
  <match src="(: ( [21959,21960]" dest="(: ( [21959,21960]"/>
  <match src="primitive_type [2335,2342]" dest="primitive_type [2335,2342]"/>
  <match src=",: , [10817,10818]" dest=",: , [10817,10818]"/>
  <match src="comment: //     function doges(uint256 id) external view returns(uint8 head, uint8 breed, uint8 color, uint8 class, uint8 armor, uint8 offhand, uint8 mainhand, uint16 level); [2823,2988]" dest="comment: //     function doges(uint256 id) external view returns(uint8 head, uint8 breed, uint8 color, uint8 class, uint8 armor, uint8 offhand, uint8 mainhand, uint16 level); [2823,2988]"/>
  <match src="number_literal [66175,66183]" dest="number_literal [66182,66190]"/>
  <match src=",: , [67374,67375]" dest=",: , [67381,67382]"/>
  <match src="&lt;=: &lt;= [67057,67059]" dest="&lt;=: &lt;= [67064,67066]"/>
  <match src="}: } [2380,2381]" dest="}: } [2380,2381]"/>
  <match src="parameter [12755,12767]" dest="parameter [12755,12767]"/>
  <match src="): ) [27120,27121]" dest="): ) [27120,27121]"/>
  <match src="primitive_type [15647,15654]" dest="primitive_type [15647,15654]"/>
  <match src="primitive_type [3597,3604]" dest="primitive_type [3597,3604]"/>
  <match src="identifier: seed [4841,4845]" dest="identifier: seed [4841,4845]"/>
  <match src="type_name [44133,44140]" dest="type_name [44133,44140]"/>
  <match src="type_cast_expression [77193,77214]" dest="type_cast_expression [77200,77221]"/>
  <match src="binary_expression [80427,80447]" dest="binary_expression [80434,80454]"/>
  <match src="identifier: returndata [32878,32888]" dest="identifier: returndata [32878,32888]"/>
  <match src=",: , [62458,62459]" dest=",: , [62465,62466]"/>
  <match src="number_literal: 12 [62726,62728]" dest="number_literal: 12 [62733,62735]"/>
  <match src="primitive_type [2479,2486]" dest="primitive_type [2479,2486]"/>
  <match src="identifier: msg [61130,61133]" dest="identifier: msg [61137,61140]"/>
  <match src="&quot;: &quot; [69031,69032]" dest="&quot;: &quot; [69038,69039]"/>
  <match src="call_expression [64329,64342]" dest="call_expression [64336,64349]"/>
  <match src="}: } [15776,15777]" dest="}: } [15776,15777]"/>
  <match src="uint8: uint8 [80721,80726]" dest="uint8: uint8 [80728,80733]"/>
  <match src="array_access [62849,62859]" dest="array_access [62856,62866]"/>
  <match src="struct: struct [984,990]" dest="struct: struct [984,990]"/>
  <match src="returns: returns [34676,34683]" dest="returns: returns [34676,34683]"/>
  <match src="=: = [77345,77346]" dest="=: = [77352,77353]"/>
  <match src="call_argument [49357,49358]" dest="call_argument [49357,49358]"/>
  <match src="comment: // Set traits of top talents - commoners[topCommoner_] [70258,70312]" dest="comment: // Set traits of top talents - commoners[topCommoner_] [70265,70319]"/>
  <match src="type_name [22185,22192]" dest="type_name [22185,22192]"/>
  <match src="type_name [1864,1869]" dest="type_name [1864,1869]"/>
  <match src="(: ( [27115,27116]" dest="(: ( [27115,27116]"/>
  <match src="}: } [23904,23905]" dest="}: } [23904,23905]"/>
  <match src="identifier: tokenPartner [58543,58555]" dest="identifier: tokenPartner [58550,58562]"/>
  <match src="): ) [64831,64832]" dest="): ) [64838,64839]"/>
  <match src="yul_evm_builtin [11190,11193]" dest="yul_evm_builtin [11190,11193]"/>
  <match src="member_expression [8470,8490]" dest="member_expression [8470,8490]"/>
  <match src="type_name [6186,6193]" dest="type_name [6186,6193]"/>
  <match src="call_expression [67121,67192]" dest="call_expression [67128,67199]"/>
  <match src="identifier: transfer [3839,3847]" dest="identifier: transfer [3839,3847]"/>
  <match src="call_expression [66002,66094]" dest="call_expression [66009,66101]"/>
  <match src="identifier: commoners [70807,70816]" dest="identifier: commoners [70814,70823]"/>
  <match src="identifier: selectTraits [76833,76845]" dest="identifier: selectTraits [76840,76852]"/>
  <match src="mapping: mapping [58952,58959]" dest="mapping: mapping [58959,58966]"/>
  <match src="=: = [81349,81350]" dest="=: = [81356,81357]"/>
  <match src="function_body [64017,64224]" dest="function_body [64024,64231]"/>
  <match src="identifier: getRandom [74557,74566]" dest="identifier: getRandom [74564,74573]"/>
  <match src="): ) [67013,67014]" dest="): ) [67020,67021]"/>
  <match src="call_argument [15736,15741]" dest="call_argument [15736,15741]"/>
  <match src="): ) [30831,30832]" dest="): ) [30831,30832]"/>
  <match src="identifier: tokenId [75371,75378]" dest="identifier: tokenId [75378,75385]"/>
  <match src=",: , [62634,62635]" dest=",: , [62641,62642]"/>
  <match src="type_cast_expression [77028,77049]" dest="type_cast_expression [77035,77056]"/>
  <match src="number_literal: 255 [63074,63077]" dest="number_literal: 255 [63081,63084]"/>
  <match src="bytes: bytes [6648,6653]" dest="bytes: bytes [6648,6653]"/>
  <match src="uint256: uint256 [80326,80333]" dest="uint256: uint256 [80333,80340]"/>
  <match src="identifier: _numberBurned [40012,40025]" dest="identifier: _numberBurned [40012,40025]"/>
  <match src="primitive_type [44493,44500]" dest="primitive_type [44493,44500]"/>
  <match src=".: . [71875,71876]" dest=".: . [71882,71883]"/>
  <match src="struct_member [4173,4191]" dest="struct_member [4173,4191]"/>
  <match src="{: { [76408,76409]" dest="{: { [76415,76416]"/>
  <match src="binary_expression [68557,68587]" dest="binary_expression [68564,68594]"/>
  <match src="primitive_type [63992,63997]" dest="primitive_type [63999,64004]"/>
  <match src="[: [ [51451,51452]" dest="[: [ [51451,51452]"/>
  <match src="identifier: owner [39799,39804]" dest="identifier: owner [39799,39804]"/>
  <match src="number_literal: 255 [62283,62286]" dest="number_literal: 255 [62290,62293]"/>
  <match src="parameter [617,644]" dest="parameter [617,644]"/>
  <match src="[: [ [41704,41705]" dest="[: [ [41704,41705]"/>
  <match src="binary_expression [8794,8833]" dest="binary_expression [8794,8833]"/>
  <match src="function: function [42315,42323]" dest="function: function [42315,42323]"/>
  <match src="type_name [67512,67519]" dest="type_name [67519,67526]"/>
  <match src="): ) [11260,11261]" dest="): ) [11260,11261]"/>
  <match src="primitive_type [27064,27071]" dest="primitive_type [27064,27071]"/>
  <match src="struct_member [60381,60400]" dest="struct_member [60388,60407]"/>
  <match src="string [67994,68022]" dest="string [68001,68029]"/>
  <match src="): ) [43523,43524]" dest="): ) [43523,43524]"/>
  <match src="call_argument [64209,64213]" dest="call_argument [64216,64220]"/>
  <match src="uint8: uint8 [6782,6787]" dest="uint8: uint8 [6782,6787]"/>
  <match src="comment: // breed [62235,62243]" dest="comment: // breed [62242,62250]"/>
  <match src=",: , [62965,62966]" dest=",: , [62972,62973]"/>
  <match src="(: ( [3665,3666]" dest="(: ( [3665,3666]"/>
  <match src="memory: memory [65706,65712]" dest="memory: memory [65713,65719]"/>
  <match src="+: + [68091,68092]" dest="+: + [68098,68099]"/>
  <match src="&lt;: &lt; [76505,76506]" dest="&lt;: &lt; [76512,76513]"/>
  <match src="comment: // total claimed amount of genesis doge holders [58326,58373]" dest="comment: // total claimed amount of genesis doge holders [58326,58373]"/>
  <match src="string: string [4827,4833]" dest="string: string [4827,4833]"/>
  <match src="(: ( [56060,56061]" dest="(: ( [56060,56061]"/>
  <match src="identifier: t [75525,75526]" dest="identifier: t [75532,75533]"/>
  <match src=",: , [80324,80325]" dest=",: , [80331,80332]"/>
  <match src="struct_field_assignment [27220,27233]" dest="struct_field_assignment [27220,27233]"/>
  <match src="binary_expression [69260,69301]" dest="binary_expression [69267,69308]"/>
  <match src="member_expression [77585,77594]" dest="member_expression [77592,77601]"/>
  <match src="binary_expression [45106,45232]" dest="binary_expression [45106,45232]"/>
  <match src="call_argument [52696,52700]" dest="call_argument [52696,52700]"/>
  <match src="member_expression [66147,66157]" dest="member_expression [66154,66164]"/>
  <match src="=: = [72108,72109]" dest="=: = [72115,72116]"/>
  <match src="call_expression [32021,32072]" dest="call_expression [32021,32072]"/>
  <match src="address: address [29147,29154]" dest="address: address [29147,29154]"/>
  <match src="array_access [62538,62548]" dest="array_access [62545,62555]"/>
  <match src="primitive_type [4342,4349]" dest="primitive_type [4342,4349]"/>
  <match src="block_statement [38563,38653]" dest="block_statement [38563,38653]"/>
  <match src="number_literal: 1 [53420,53421]" dest="number_literal: 1 [53420,53421]"/>
  <match src=".: . [14907,14908]" dest=".: . [14907,14908]"/>
  <match src="comment: // minted amount of initial public sale [58596,58635]" dest="comment: // minted amount of initial public sale [58603,58642]"/>
  <match src="{: { [66741,66742]" dest="{: { [66748,66749]"/>
  <match src="comment: /*///////////////////////////////////////////////////////////////                 EVENTS     //////////////////////////////////////////////////////////////*/ [60528,60687]" dest="comment: /*///////////////////////////////////////////////////////////////                 EVENTS     //////////////////////////////////////////////////////////////*/ [60535,60694]"/>
  <match src="return_statement [30066,30125]" dest="return_statement [30066,30125]"/>
  <match src="number_unit [67166,67171]" dest="number_unit [67173,67178]"/>
  <match src="&quot;: &quot; [61631,61632]" dest="&quot;: &quot; [61638,61639]"/>
  <match src="uint256: uint256 [48673,48680]" dest="uint256: uint256 [48673,48680]"/>
  <match src="comment: /**      * @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes      * minting.      * And also called after one token has been burned.      *      * startTokenId - the first token id to be transferred      * quantity - the amount to be transferred      *      * Calling conditions:      *      * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been      * transferred to `to`.      * - When `from` is zero, `tokenId` has been minted for `to`.      * - When `to` is zero, `tokenId` has been burned by `from`.      * - `from` and `to` are never both zero.      */ [57082,57727]" dest="comment: /**      * @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes      * minting.      * And also called after one token has been burned.      *      * startTokenId - the first token id to be transferred      * quantity - the amount to be transferred      *      * Calling conditions:      *      * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been      * transferred to `to`.      * - When `from` is zero, `tokenId` has been minted for `to`.      * - When `to` is zero, `tokenId` has been burned by `from`.      * - `from` and `to` are never both zero.      */ [57082,57727]"/>
  <match src="variable_declaration_statement [12873,12883]" dest="variable_declaration_statement [12873,12883]"/>
  <match src="uint256: uint256 [7022,7029]" dest="uint256: uint256 [7022,7029]"/>
  <match src="unary_expression [45250,45268]" dest="unary_expression [45250,45268]"/>
  <match src="uint256: uint256 [81456,81463]" dest="uint256: uint256 [81463,81470]"/>
  <match src="type_name [148,154]" dest="type_name [148,154]"/>
  <match src="user_defined_type [40923,40937]" dest="user_defined_type [40923,40937]"/>
  <match src="meta_type_expression [34724,34737]" dest="meta_type_expression [34724,34737]"/>
  <match src="bytes: bytes [7570,7575]" dest="bytes: bytes [7570,7575]"/>
  <match src="if_statement [56011,56249]" dest="if_statement [56011,56249]"/>
  <match src="]: ] [71268,71269]" dest="]: ] [71275,71276]"/>
  <match src="identifier: topCommoner_ [73822,73834]" dest="identifier: topCommoner_ [73829,73841]"/>
  <match src=",: , [80816,80817]" dest=",: , [80823,80824]"/>
  <match src="identifier: clothes [81119,81126]" dest="identifier: clothes [81126,81133]"/>
  <match src="call_argument [44847,44857]" dest="call_argument [44847,44857]"/>
  <match src="yul_identifier [11179,11180]" dest="yul_identifier [11179,11180]"/>
  <match src="return_statement [42566,42581]" dest="return_statement [42566,42581]"/>
  <match src="number_literal: 0 [69130,69131]" dest="number_literal: 0 [69137,69138]"/>
  <match src="expression_statement [6758,6815]" dest="expression_statement [6758,6815]"/>
  <match src=",: , [80719,80720]" dest=",: , [80726,80727]"/>
  <match src="type_name [74538,74545]" dest="type_name [74545,74552]"/>
  <match src="identifier: bodyType [77170,77178]" dest="identifier: bodyType [77177,77185]"/>
  <match src="comment: // 32 is the length in bytes of hash, [16166,16203]" dest="comment: // 32 is the length in bytes of hash, [16166,16203]"/>
  <match src="number_literal: 198 [62810,62813]" dest="number_literal: 198 [62817,62820]"/>
  <match src="modifier_invocation [66730,66740]" dest="modifier_invocation [66737,66747]"/>
  <match src="member_expression [30024,30035]" dest="member_expression [30024,30035]"/>
  <match src="identifier: _mintCommoners [74338,74352]" dest="identifier: _mintCommoners [74345,74359]"/>
  <match src="): ) [8597,8598]" dest="): ) [8597,8598]"/>
  <match src="member_expression [68357,68442]" dest="member_expression [68364,68449]"/>
  <match src="}: } [51847,51848]" dest="}: } [51847,51848]"/>
  <match src="function_definition [21933,22003]" dest="function_definition [21933,22003]"/>
  <match src="primitive_type [64945,64952]" dest="primitive_type [64952,64959]"/>
  <match src="returns: returns [78757,78764]" dest="returns: returns [78764,78771]"/>
  <match src="primitive_type [15586,15593]" dest="primitive_type [15586,15593]"/>
  <match src="}: } [42587,42588]" dest="}: } [42587,42588]"/>
  <match src="[: [ [44606,44607]" dest="[: [ [44606,44607]"/>
  <match src=".: . [26059,26060]" dest=".: . [26059,26060]"/>
  <match src="): ) [48874,48875]" dest="): ) [48874,48875]"/>
  <match src="type_name [778,784]" dest="type_name [778,784]"/>
  <match src="{: { [55996,55997]" dest="{: { [55996,55997]"/>
  <match src="): ) [8490,8491]" dest="): ) [8490,8491]"/>
  <match src="view: view [33756,33760]" dest="view: view [33756,33760]"/>
  <match src="identifier: _burn [52122,52127]" dest="identifier: _burn [52122,52127]"/>
  <match src="type_name [39210,39214]" dest="type_name [39210,39214]"/>
  <match src="parenthesized_expression [49243,49268]" dest="parenthesized_expression [49243,49268]"/>
  <match src="primitive_type [55691,55698]" dest="primitive_type [55691,55698]"/>
  <match src="yul_identifier [10771,10780]" dest="yul_identifier [10771,10780]"/>
  <match src="call_argument [64290,64309]" dest="call_argument [64297,64316]"/>
  <match src="): ) [80348,80349]" dest="): ) [80355,80356]"/>
  <match src="expression_statement [63561,63577]" dest="expression_statement [63568,63584]"/>
  <match src="}: } [76597,76598]" dest="}: } [76604,76605]"/>
  <match src="(: ( [8460,8461]" dest="(: ( [8460,8461]"/>
  <match src="(: ( [4896,4897]" dest="(: ( [4896,4897]"/>
  <match src="primitive_type [7022,7029]" dest="primitive_type [7022,7029]"/>
  <match src="uint64: uint64 [36741,36747]" dest="uint64: uint64 [36741,36747]"/>
  <match src="number_literal: 198 [62636,62639]" dest="number_literal: 198 [62643,62646]"/>
  <match src="]: ] [64576,64577]" dest="]: ] [64583,64584]"/>
  <match src="identifier: data [31349,31353]" dest="identifier: data [31349,31353]"/>
  <match src="(: ( [41766,41767]" dest="(: ( [41766,41767]"/>
  <match src="state_mutability [76387,76391]" dest="state_mutability [76394,76398]"/>
  <match src="identifier: tokenURI [42668,42676]" dest="identifier: tokenURI [42668,42676]"/>
  <match src="): ) [38775,38776]" dest="): ) [38775,38776]"/>
  <match src="address: address [29663,29670]" dest="address: address [29663,29670]"/>
  <match src="comment: // Initial Public Sale [67625,67647]" dest="comment: // Initial Public Sale [67632,67654]"/>
  <match src="struct_member [1029,1041]" dest="struct_member [1029,1041]"/>
  <match src="function: function [5532,5540]" dest="function: function [5532,5540]"/>
  <match src="identifier: quantity [47823,47831]" dest="identifier: quantity [47823,47831]"/>
  <match src="identifier: tokenId [46052,46059]" dest="identifier: tokenId [46052,46059]"/>
  <match src="identifier: token_ [64488,64494]" dest="identifier: token_ [64495,64501]"/>
  <match src="=&gt;: =&gt; [58883,58885]" dest="=&gt;: =&gt; [58890,58892]"/>
  <match src="returns: returns [31820,31827]" dest="returns: returns [31820,31827]"/>
  <match src="(: ( [47972,47973]" dest="(: ( [47972,47973]"/>
  <match src="primitive_type [24408,24414]" dest="primitive_type [24408,24414]"/>
  <match src="identifier: nonce [4992,4997]" dest="identifier: nonce [4992,4997]"/>
  <match src="&quot;: &quot; [61568,61569]" dest="&quot;: &quot; [61575,61576]"/>
  <match src="binary_expression [79970,79993]" dest="binary_expression [79977,80000]"/>
  <match src="): ) [48893,48894]" dest="): ) [48893,48894]"/>
  <match src="function_body [32472,33020]" dest="function_body [32472,33020]"/>
  <match src="array_access [80876,80915]" dest="array_access [80883,80922]"/>
  <match src="visibility [4847,4855]" dest="visibility [4847,4855]"/>
  <match src="identifier: to [45330,45332]" dest="identifier: to [45330,45332]"/>
  <match src="{: { [30417,30418]" dest="{: { [30417,30418]"/>
  <match src="call_argument [67298,67308]" dest="call_argument [67305,67315]"/>
  <match src="primitive_type [3934,3941]" dest="primitive_type [3934,3941]"/>
  <match src="if: if [72296,72298]" dest="if: if [72303,72305]"/>
  <match src="(: ( [45782,45783]" dest="(: ( [45782,45783]"/>
  <match src="identifier: verifyCallResult [30073,30089]" dest="identifier: verifyCallResult [30073,30089]"/>
  <match src="identifier: to [3856,3858]" dest="identifier: to [3856,3858]"/>
  <match src="call_expression [44837,44871]" dest="call_expression [44837,44871]"/>
  <match src="call_argument [80640,80646]" dest="call_argument [80647,80653]"/>
  <match src="expression_statement [66418,66468]" dest="expression_statement [66425,66475]"/>
  <match src="string [61708,61719]" dest="string [61715,61726]"/>
  <match src=".: . [39883,39884]" dest=".: . [39883,39884]"/>
  <match src="identifier: head [80959,80963]" dest="identifier: head [80966,80970]"/>
  <match src="type_name [3981,3988]" dest="type_name [3981,3988]"/>
  <match src="primitive_type [646,652]" dest="primitive_type [646,652]"/>
  <match src="member_expression [51483,51496]" dest="member_expression [51483,51496]"/>
  <match src="]: ] [70778,70779]" dest="]: ] [70785,70786]"/>
  <match src="type_name [411,417]" dest="type_name [411,417]"/>
  <match src="call_expression [6670,6687]" dest="call_expression [6670,6687]"/>
  <match src="visibility [75394,75402]" dest="visibility [75401,75409]"/>
  <match src="type_cast_expression [45336,45346]" dest="type_cast_expression [45336,45346]"/>
  <match src="primitive_type [80833,80838]" dest="primitive_type [80840,80845]"/>
  <match src="(: ( [65136,65137]" dest="(: ( [65143,65144]"/>
  <match src="identifier: tokenNo_ [69273,69281]" dest="identifier: tokenNo_ [69280,69288]"/>
  <match src="identifier: abi [16279,16282]" dest="identifier: abi [16279,16282]"/>
  <match src="block_statement [8716,8784]" dest="block_statement [8716,8784]"/>
  <match src="identifier: alchemy [74169,74176]" dest="identifier: alchemy [74176,74183]"/>
  <match src="identifier: bodyType [5205,5213]" dest="identifier: bodyType [5205,5213]"/>
  <match src="identifier: tokenId [310,317]" dest="identifier: tokenId [310,317]"/>
  <match src="type_name [3151,3160]" dest="type_name [3151,3160]"/>
  <match src="': ' [42971,42972]" dest="': ' [42971,42972]"/>
  <match src="internal: internal [57872,57880]" dest="internal: internal [57872,57880]"/>
  <match src="]: ] [71045,71046]" dest="]: ] [71052,71053]"/>
  <match src="comment: /**     * selects the species and all of its traits based on the seed value     * @param seed a pseudorandom 256 bit number to derive traits from     * @return t -  a struct of randomly selected traits     */ [76606,76818]" dest="comment: /**     * selects the species and all of its traits based on the seed value     * @param seed a pseudorandom 256 bit number to derive traits from     * @return t -  a struct of randomly selected traits     */ [76613,76825]"/>
  <match src="{: { [79740,79741]" dest="{: { [79747,79748]"/>
  <match src="==: == [46177,46179]" dest="==: == [46177,46179]"/>
  <match src="number_literal: 1 [62714,62715]" dest="number_literal: 1 [62721,62722]"/>
  <match src="type_name [4761,4768]" dest="type_name [4761,4768]"/>
  <match src="expression_statement [65372,65443]" dest="expression_statement [65379,65450]"/>
  <match src="number_literal: 1 [63005,63006]" dest="number_literal: 1 [63012,63013]"/>
  <match src="identifier: commoners [71906,71915]" dest="identifier: commoners [71913,71922]"/>
  <match src="uint256: uint256 [14779,14786]" dest="uint256: uint256 [14779,14786]"/>
  <match src=".: . [68510,68511]" dest=".: . [68517,68518]"/>
  <match src="identifier: Action [4237,4243]" dest="identifier: Action [4237,4243]"/>
  <match src="identifier: getApproved [43836,43847]" dest="identifier: getApproved [43836,43847]"/>
  <match src="==: == [64755,64757]" dest="==: == [64762,64764]"/>
  <match src="(: ( [10140,10141]" dest="(: ( [10140,10141]"/>
  <match src="string_literal [67994,68022]" dest="string_literal [68001,68029]"/>
  <match src="identifier: entryFee [4127,4135]" dest="identifier: entryFee [4127,4135]"/>
  <match src="(: ( [2371,2372]" dest="(: ( [2371,2372]"/>
  <match src="parameter [3609,3619]" dest="parameter [3609,3619]"/>
  <match src="parameter [68868,68882]" dest="parameter [68875,68889]"/>
  <match src="=: = [72271,72272]" dest="=: = [72278,72279]"/>
  <match src="(: ( [56206,56207]" dest="(: ( [56206,56207]"/>
  <match src="uint8: uint8 [80767,80772]" dest="uint8: uint8 [80774,80779]"/>
  <match src="primitive_type [5153,5158]" dest="primitive_type [5153,5158]"/>
  <match src=",: , [43624,43625]" dest=",: , [43624,43625]"/>
  <match src="binary_expression [68931,68946]" dest="binary_expression [68938,68953]"/>
  <match src="binary_expression [7765,7776]" dest="binary_expression [7765,7776]"/>
  <match src="{: { [6578,6579]" dest="{: { [6578,6579]"/>
  <match src="address: address [51500,51507]" dest="address: address [51500,51507]"/>
  <match src="override_specifier [39175,39200]" dest="override_specifier [39175,39200]"/>
  <match src=",: , [28708,28709]" dest=",: , [28708,28709]"/>
  <match src="call_argument [67900,67914]" dest="call_argument [67907,67921]"/>
  <match src="}: } [5370,5371]" dest="}: } [5370,5371]"/>
  <match src="identifier: svgMainhand [738,749]" dest="identifier: svgMainhand [738,749]"/>
  <match src="==: == [8922,8924]" dest="==: == [8922,8924]"/>
  <match src=",: , [78244,78245]" dest=",: , [78251,78252]"/>
  <match src="array_access [63180,63191]" dest="array_access [63187,63198]"/>
  <match src="]: ] [71983,71984]" dest="]: ] [71990,71991]"/>
  <match src="identifier: returndata [30099,30109]" dest="identifier: returndata [30099,30109]"/>
  <match src="identifier: to [48965,48967]" dest="identifier: to [48965,48967]"/>
  <match src="member_expression [64080,64108]" dest="member_expression [64087,64115]"/>
  <match src="): ) [7519,7520]" dest="): ) [7519,7520]"/>
  <match src="identifier: IERC721Receiver [55910,55925]" dest="identifier: IERC721Receiver [55910,55925]"/>
  <match src="function: function [13730,13738]" dest="function: function [13730,13738]"/>
  <match src="user_defined_type [58529,58541]" dest="user_defined_type [58529,58541]"/>
  <match src="identifier: topCommoner_ [70869,70881]" dest="identifier: topCommoner_ [70876,70888]"/>
  <match src="uint256: uint256 [18531,18538]" dest="uint256: uint256 [18531,18538]"/>
  <match src="bytes: bytes [31951,31956]" dest="bytes: bytes [31951,31956]"/>
  <match src="identifier: class [1079,1084]" dest="identifier: class [1079,1084]"/>
  <match src="binary_expression [6788,6812]" dest="binary_expression [6788,6812]"/>
  <match src="visibility [39806,39814]" dest="visibility [39806,39814]"/>
  <match src="type_name [47794,47801]" dest="type_name [47794,47801]"/>
  <match src="identifier: from [55655,55659]" dest="identifier: from [55655,55659]"/>
  <match src="identifier: topTalents [79970,79980]" dest="identifier: topTalents [79977,79987]"/>
  <match src="event_definition [18474,18556]" dest="event_definition [18474,18556]"/>
  <match src="(: ( [51507,51508]" dest="(: ( [51507,51508]"/>
  <match src="): ) [43558,43559]" dest="): ) [43558,43559]"/>
  <match src="user_defined_type [1369,1374]" dest="user_defined_type [1369,1374]"/>
  <match src="identifier: Commoner [58981,58989]" dest="identifier: Commoner [58988,58996]"/>
  <match src="]: ] [54107,54108]" dest="]: ] [54107,54108]"/>
  <match src="identifier: _approved [21983,21992]" dest="identifier: _approved [21983,21992]"/>
  <match src="identifier: functionCallWithValue [29271,29292]" dest="identifier: functionCallWithValue [29271,29292]"/>
  <match src="uint16: uint16 [64438,64444]" dest="uint16: uint16 [64445,64451]"/>
  <match src=",: , [62788,62789]" dest=",: , [62795,62796]"/>
  <match src="identifier: smithing [78296,78304]" dest="identifier: smithing [78303,78311]"/>
  <match src="type_name [236,242]" dest="type_name [236,242]"/>
  <match src="binary_expression [6801,6811]" dest="binary_expression [6801,6811]"/>
  <match src="comment: // Reentrancy protection [49160,49184]" dest="comment: // Reentrancy protection [49160,49184]"/>
  <match src="): ) [30947,30948]" dest="): ) [30947,30948]"/>
  <match src="expression_statement [81019,81051]" dest="expression_statement [81026,81058]"/>
  <match src="identifier: to [48789,48791]" dest="identifier: to [48789,48791]"/>
  <match src="): ) [3996,3997]" dest="): ) [3996,3997]"/>
  <match src="address: address [3237,3244]" dest="address: address [3237,3244]"/>
  <match src="identifier: _currentIndex [47931,47944]" dest="identifier: _currentIndex [47931,47944]"/>
  <match src="pure: pure [12295,12299]" dest="pure: pure [12295,12299]"/>
  <match src="indexed: indexed [18689,18696]" dest="indexed: indexed [18689,18696]"/>
  <match src="}: } [1296,1297]" dest="}: } [1296,1297]"/>
  <match src="&quot;: &quot; [7666,7667]" dest="&quot;: &quot; [7666,7667]"/>
  <match src=",: , [29935,29936]" dest=",: , [29935,29936]"/>
  <match src="memory: memory [32373,32379]" dest="memory: memory [32373,32379]"/>
  <match src="number_literal: 0xFFFF [77289,77295]" dest="number_literal: 0xFFFF [77296,77302]"/>
  <match src="address: address [68542,68549]" dest="address: address [68549,68556]"/>
  <match src="(: ( [10201,10202]" dest="(: ( [10201,10202]"/>
  <match src="}: } [55966,55967]" dest="}: } [55966,55967]"/>
  <match src="identifier: tokenId [43421,43428]" dest="identifier: tokenId [43421,43428]"/>
  <match src="type_name [49882,49889]" dest="type_name [49882,49889]"/>
  <match src="return_type_definition [81506,81522]" dest="return_type_definition [81513,81529]"/>
  <match src="]: ] [66281,66282]" dest="]: ] [66288,66289]"/>
  <match src="call_struct_argument [79576,79611]" dest="call_struct_argument [79583,79618]"/>
  <match src="): ) [56033,56034]" dest="): ) [56033,56034]"/>
  <match src="primitive_type [35939,35946]" dest="primitive_type [35939,35946]"/>
  <match src="external: external [64716,64724]" dest="external: external [64723,64731]"/>
  <match src="number_literal: 0 [76971,76972]" dest="number_literal: 0 [76978,76979]"/>
  <match src=",: , [52410,52411]" dest=",: , [52410,52411]"/>
  <match src="(: ( [64592,64593]" dest="(: ( [64599,64600]"/>
  <match src="): ) [30507,30508]" dest="): ) [30507,30508]"/>
  <match src="yul_function_call [10825,10845]" dest="yul_function_call [10825,10845]"/>
  <match src="return: return [33805,33811]" dest="return: return [33805,33811]"/>
  <match src="identifier: tokenId [55838,55845]" dest="identifier: tokenId [55838,55845]"/>
  <match src="memory: memory [30367,30373]" dest="memory: memory [30367,30373]"/>
  <match src="identifier: ITraits [77,84]" dest="identifier: ITraits [77,84]"/>
  <match src="uint256: uint256 [43413,43420]" dest="uint256: uint256 [43413,43420]"/>
  <match src="{: { [36118,36119]" dest="{: { [36118,36119]"/>
  <match src="identifier: origin [61163,61169]" dest="identifier: origin [61170,61176]"/>
  <match src="uint8: uint8 [5783,5788]" dest="uint8: uint8 [5783,5788]"/>
  <match src="=: = [45947,45948]" dest="=: = [45947,45948]"/>
  <match src="constant: constant [58212,58220]" dest="constant: constant [58212,58220]"/>
  <match src="=: = [51438,51439]" dest="=: = [51438,51439]"/>
  <match src=".: . [17322,17323]" dest=".: . [17322,17323]"/>
  <match src="member_expression [71080,71114]" dest="member_expression [71087,71121]"/>
  <match src="number_literal: 153 [62421,62424]" dest="number_literal: 153 [62428,62431]"/>
  <match src="): ) [76376,76377]" dest="): ) [76383,76384]"/>
  <match src="string [61558,61569]" dest="string [61565,61576]"/>
  <match src="uint256: uint256 [37448,37455]" dest="uint256: uint256 [37448,37455]"/>
  <match src="member_expression [78122,78129]" dest="member_expression [78129,78136]"/>
  <match src="return_statement [32511,32529]" dest="return_statement [32511,32529]"/>
  <match src="uint256: uint256 [4761,4768]" dest="uint256: uint256 [4761,4768]"/>
  <match src="expression_statement [70968,71005]" dest="expression_statement [70975,71012]"/>
  <match src="number_literal: 206 [62144,62147]" dest="number_literal: 206 [62151,62154]"/>
  <match src="}: } [75042,75043]" dest="}: } [75049,75050]"/>
  <match src="primitive_type [5350,5355]" dest="primitive_type [5350,5355]"/>
  <match src="=: = [53647,53648]" dest="=: = [53647,53648]"/>
  <match src="&quot;: &quot; [64067,64068]" dest="&quot;: &quot; [64074,64075]"/>
  <match src="type_name [23773,23780]" dest="type_name [23773,23780]"/>
  <match src="false: false [61604,61609]" dest="false: false [61611,61616]"/>
  <match src="override: override [44181,44189]" dest="override: override [44181,44189]"/>
  <match src=",: , [52921,52922]" dest=",: , [52921,52922]"/>
  <match src="return_type_definition [40304,40320]" dest="return_type_definition [40304,40320]"/>
  <match src="(: ( [46247,46248]" dest="(: ( [46247,46248]"/>
  <match src="expression_statement [69252,69320]" dest="expression_statement [69259,69327]"/>
  <match src="call_argument [32038,32045]" dest="call_argument [32038,32045]"/>
  <match src="struct_member [5175,5189]" dest="struct_member [5175,5189]"/>
  <match src=",: , [57806,57807]" dest=",: , [57806,57807]"/>
  <match src="identifier: data [28701,28705]" dest="identifier: data [28701,28705]"/>
  <match src=",: , [644,645]" dest=",: , [644,645]"/>
  <match src="identifier: commoners [73154,73163]" dest="identifier: commoners [73161,73170]"/>
  <match src="): ) [51917,51918]" dest="): ) [51917,51918]"/>
  <match src="(: ( [42182,42183]" dest="(: ( [42182,42183]"/>
  <match src="number_literal: 1 [50465,50466]" dest="number_literal: 1 [50465,50466]"/>
  <match src="expression_statement [6593,6602]" dest="expression_statement [6593,6602]"/>
  <match src="call_expression [63512,63550]" dest="call_expression [63519,63557]"/>
  <match src="array_access [48474,48490]" dest="array_access [48474,48490]"/>
  <match src="external: external [22218,22226]" dest="external: external [22218,22226]"/>
  <match src="parameter [23849,23868]" dest="parameter [23849,23868]"/>
  <match src="call_struct_argument [79364,79403]" dest="call_struct_argument [79371,79410]"/>
  <match src="array_access [62503,62514]" dest="array_access [62510,62521]"/>
  <match src="type_name [19307,19314]" dest="type_name [19307,19314]"/>
  <match src="uint256: uint256 [4793,4800]" dest="uint256: uint256 [4793,4800]"/>
  <match src="call_argument [80378,80386]" dest="call_argument [80385,80393]"/>
  <match src=".: . [81160,81161]" dest=".: . [81167,81168]"/>
  <match src="=: = [75454,75455]" dest="=: = [75461,75462]"/>
  <match src="}: } [41887,41888]" dest="}: } [41887,41888]"/>
  <match src="if_statement [8555,9028]" dest="if_statement [8555,9028]"/>
  <match src=".: . [48565,48566]" dest=".: . [48565,48566]"/>
  <match src="function: function [3652,3660]" dest="function: function [3652,3660]"/>
  <match src="visibility [28621,28629]" dest="visibility [28621,28629]"/>
  <match src="block_statement [74882,74934]" dest="block_statement [74889,74941]"/>
  <match src="number_literal: 0 [41235,41236]" dest="number_literal: 0 [41235,41236]"/>
  <match src="yul_identifier [61056,61060]" dest="yul_identifier [61063,61067]"/>
  <match src="comment: // error TransferFromIncorrectOwner(); [35638,35676]" dest="comment: // error TransferFromIncorrectOwner(); [35638,35676]"/>
  <match src="identifier: toHexString [7478,7489]" dest="identifier: toHexString [7478,7489]"/>
  <match src="{: { [78014,78015]" dest="{: { [78021,78022]"/>
  <match src=",: , [62624,62625]" dest=",: , [62631,62632]"/>
  <match src="visibility [37241,37249]" dest="visibility [37241,37249]"/>
  <match src="call_argument [46052,46059]" dest="call_argument [46052,46059]"/>
  <match src="(: ( [69876,69877]" dest="(: ( [69883,69884]"/>
  <match src="identifier: saleStatus [58717,58727]" dest="identifier: saleStatus [58724,58734]"/>
  <match src="yul_identifier [11194,11203]" dest="yul_identifier [11194,11203]"/>
  <match src="binary_expression [44773,44789]" dest="binary_expression [44773,44789]"/>
  <match src="identifier: digits [6765,6771]" dest="identifier: digits [6765,6771]"/>
  <match src="member_expression [31003,31020]" dest="member_expression [31003,31020]"/>
  <match src="): ) [895,896]" dest="): ) [895,896]"/>
  <match src="binary_expression [8916,8955]" dest="binary_expression [8916,8955]"/>
  <match src="address: address [14995,15002]" dest="address: address [14995,15002]"/>
  <match src="string [45277,45314]" dest="string [45277,45314]"/>
  <match src="primitive_type [3788,3795]" dest="primitive_type [3788,3795]"/>
  <match src="function_body [27089,27335]" dest="function_body [27089,27335]"/>
  <match src=",: , [80734,80735]" dest=",: , [80741,80742]"/>
  <match src="bytes32: bytes32 [13338,13345]" dest="bytes32: bytes32 [13338,13345]"/>
  <match src=":: : [30041,30042]" dest=":: : [30041,30042]"/>
  <match src="identifier: tokenNo_ [64093,64101]" dest="identifier: tokenNo_ [64100,64108]"/>
  <match src="): ) [41180,41181]" dest="): ) [41180,41181]"/>
  <match src="identifier: toHexString [7307,7318]" dest="identifier: toHexString [7307,7318]"/>
  <match src="identifier: _beforeTokenTransfers [48077,48098]" dest="identifier: _beforeTokenTransfers [48077,48098]"/>
  <match src="user_defined_type [12349,12361]" dest="user_defined_type [12349,12361]"/>
  <match src="identifier: data [81488,81492]" dest="identifier: data [81495,81499]"/>
  <match src="address: address [42099,42106]" dest="address: address [42099,42106]"/>
  <match src="}: } [8548,8549]" dest="}: } [8548,8549]"/>
  <match src="(: ( [42138,42139]" dest="(: ( [42138,42139]"/>
  <match src="type_name [2046,2053]" dest="type_name [2046,2053]"/>
  <match src="identifier: signer [15203,15209]" dest="identifier: signer [15203,15209]"/>
  <match src="comment: //Lame requirement from opensea [35998,36029]" dest="comment: //Lame requirement from opensea [35998,36029]"/>
  <match src="identifier: errorMessage [30813,30825]" dest="identifier: errorMessage [30813,30825]"/>
  <match src="identifier: i [74863,74864]" dest="identifier: i [74870,74871]"/>
  <match src="identifier: to [49361,49363]" dest="identifier: to [49361,49363]"/>
  <match src="function_definition [4742,4802]" dest="function_definition [4742,4802]"/>
  <match src="function: function [90,98]" dest="function: function [90,98]"/>
  <match src="function_body [28653,28731]" dest="function_body [28653,28731]"/>
  <match src=",: , [31334,31335]" dest=",: , [31334,31335]"/>
  <match src="return_type_definition [42090,42107]" dest="return_type_definition [42090,42107]"/>
  <match src="]: ] [41139,41140]" dest="]: ] [41139,41140]"/>
  <match src="identifier: interfaceId [34634,34645]" dest="identifier: interfaceId [34634,34645]"/>
  <match src="(: ( [77034,77035]" dest="(: ( [77041,77042]"/>
  <match src="parameter [5818,5832]" dest="parameter [5818,5832]"/>
  <match src="identifier: encodePacked [16283,16295]" dest="identifier: encodePacked [16283,16295]"/>
  <match src="identifier: msg [80904,80907]" dest="identifier: msg [80911,80914]"/>
  <match src="parameter [80310,80324]" dest="parameter [80317,80331]"/>
  <match src="{: { [7102,7103]" dest="{: { [7102,7103]"/>
  <match src="revert: revert [46374,46380]" dest="revert: revert [46374,46380]"/>
  <match src="&lt;=: &lt;= [69076,69078]" dest="&lt;=: &lt;= [69083,69085]"/>
  <match src="): ) [56198,56199]" dest="): ) [56198,56199]"/>
  <match src="string [43312,43314]" dest="string [43312,43314]"/>
  <match src="return_type_definition [17273,17290]" dest="return_type_definition [17273,17290]"/>
  <match src="&amp;&amp;: &amp;&amp; [14960,14962]" dest="&amp;&amp;: &amp;&amp; [14960,14962]"/>
  <match src="identifier: id [81251,81253]" dest="identifier: id [81258,81260]"/>
  <match src="primitive_type [3609,3616]" dest="primitive_type [3609,3616]"/>
  <match src="function_definition [16077,16346]" dest="function_definition [16077,16346]"/>
  <match src="virtual: virtual [42706,42713]" dest="virtual: virtual [42706,42713]"/>
  <match src="call_expression [52883,52934]" dest="call_expression [52883,52934]"/>
  <match src="identifier: balance [27122,27129]" dest="identifier: balance [27122,27129]"/>
  <match src="comment: // OpenZeppelin Contracts v4.4.0 (utils/cryptography/ECDSA.sol) [7927,7990]" dest="comment: // OpenZeppelin Contracts v4.4.0 (utils/cryptography/ECDSA.sol) [7927,7990]"/>
  <match src=",: , [51908,51909]" dest=",: , [51908,51909]"/>
  <match src="identifier: baseURI [42847,42854]" dest="identifier: baseURI [42847,42854]"/>
  <match src="comment: /**      * @dev See {IERC721Metadata-name}.      */ [42256,42309]" dest="comment: /**      * @dev See {IERC721Metadata-name}.      */ [42256,42309]"/>
  <match src="array_access [62675,62685]" dest="array_access [62682,62692]"/>
  <match src="number_literal: 0 [53016,53017]" dest="number_literal: 0 [53016,53017]"/>
  <match src="identifier: sender [63827,63833]" dest="identifier: sender [63834,63840]"/>
  <match src=",: , [28223,28224]" dest=",: , [28223,28224]"/>
  <match src=",: , [15703,15704]" dest=",: , [15703,15704]"/>
  <match src="if_statement [41737,41846]" dest="if_statement [41737,41846]"/>
  <match src=":: : [79428,79429]" dest=":: : [79435,79436]"/>
  <match src="address: address [20777,20784]" dest="address: address [20777,20784]"/>
  <match src="identifier: block [51090,51095]" dest="identifier: block [51090,51095]"/>
  <match src="emit: emit [51886,51890]" dest="emit: emit [51886,51890]"/>
  <match src="parameter [81473,81492]" dest="parameter [81480,81499]"/>
  <match src="identifier: tokenNo_ [68588,68596]" dest="identifier: tokenNo_ [68595,68603]"/>
  <match src="identifier: ownership [41681,41690]" dest="identifier: ownership [41681,41690]"/>
  <match src="return_type_definition [40055,40072]" dest="return_type_definition [40055,40072]"/>
  <match src="comment: //     uint8 clothes; Goggles of Science [71567,71607]" dest="comment: //     uint8 clothes; Goggles of Science [71574,71614]"/>
  <match src="struct_member [1257,1272]" dest="struct_member [1257,1272]"/>
  <match src="identifier: v [13029,13030]" dest="identifier: v [13029,13030]"/>
  <match src="parameter [64480,64494]" dest="parameter [64487,64501]"/>
  <match src="expression_statement [74033,74072]" dest="expression_statement [74040,74079]"/>
  <match src="{: { [8716,8717]" dest="{: { [8716,8717]"/>
  <match src="identifier: palette [73836,73843]" dest="identifier: palette [73843,73850]"/>
  <match src="&quot;: &quot; [65977,65978]" dest="&quot;: &quot; [65984,65985]"/>
  <match src="identifier: data [31434,31438]" dest="identifier: data [31434,31438]"/>
  <match src="assignment_expression [54375,54395]" dest="assignment_expression [54375,54395]"/>
  <match src="identifier: classRerollCount [1230,1246]" dest="identifier: classRerollCount [1230,1246]"/>
  <match src="+: + [70142,70143]" dest="+: + [70149,70150]"/>
  <match src="(: ( [32333,32334]" dest="(: ( [32333,32334]"/>
  <match src="yul_function_call [11184,11211]" dest="yul_function_call [11184,11211]"/>
  <match src="expression_statement [45639,45679]" dest="expression_statement [45639,45679]"/>
  <match src="{: { [44695,44696]" dest="{: { [44695,44696]"/>
  <match src=":=: := [10758,10760]" dest=":=: := [10758,10760]"/>
  <match src="binary_expression [79869,79904]" dest="binary_expression [79876,79911]"/>
  <match src="{: { [38196,38197]" dest="{: { [38196,38197]"/>
  <match src="identifier: errorMessage [28601,28613]" dest="identifier: errorMessage [28601,28613]"/>
  <match src="visibility [4912,4920]" dest="visibility [4912,4920]"/>
  <match src="primitive_type [59433,59438]" dest="primitive_type [59440,59445]"/>
  <match src=",: , [55836,55837]" dest=",: , [55836,55837]"/>
  <match src="comment: // Clear approvals from the previous owner [50480,50522]" dest="comment: // Clear approvals from the previous owner [50480,50522]"/>
  <match src="call_expression [52702,52714]" dest="call_expression [52702,52714]"/>
  <match src="internal: internal [46732,46740]" dest="internal: internal [46732,46740]"/>
  <match src="identifier: to [51956,51958]" dest="identifier: to [51956,51958]"/>
  <match src="identifier: currSlot [51057,51065]" dest="identifier: currSlot [51057,51065]"/>
  <match src="=: = [81127,81128]" dest="=: = [81134,81135]"/>
  <match src="if_statement [72296,74250]" dest="if_statement [72303,74257]"/>
  <match src="identifier: clothes [79314,79321]" dest="identifier: clothes [79321,79328]"/>
  <match src="type_name [2034,2041]" dest="type_name [2034,2041]"/>
  <match src="function_body [80857,81366]" dest="function_body [80864,81373]"/>
  <match src="type_cast_expression [64201,64214]" dest="type_cast_expression [64208,64221]"/>
  <match src="function_definition [18127,18203]" dest="function_definition [18127,18203]"/>
  <match src="expression_statement [79861,79957]" dest="expression_statement [79868,79964]"/>
  <match src="array_access [72821,72844]" dest="array_access [72828,72851]"/>
  <match src="[: [ [69354,69355]" dest="[: [ [69361,69362]"/>
  <match src="comment: /*///////////////////////////////////////////////////////////////                     VIEWERS     //////////////////////////////////////////////////////////////*/ [78405,78569]" dest="comment: /*///////////////////////////////////////////////////////////////                     VIEWERS     //////////////////////////////////////////////////////////////*/ [78412,78576]"/>
  <match src="identifier: addr [54384,54388]" dest="identifier: addr [54384,54388]"/>
  <match src="identifier: transferFrom [68517,68529]" dest="identifier: transferFrom [68524,68536]"/>
  <match src="number_literal: 0 [54152,54153]" dest="number_literal: 0 [54152,54153]"/>
  <match src="expression_statement [77502,77553]" dest="expression_statement [77509,77560]"/>
  <match src="returns: returns [42723,42730]" dest="returns: returns [42723,42730]"/>
  <match src="struct_member [5301,5316]" dest="struct_member [5301,5316]"/>
  <match src="identifier: id [80955,80957]" dest="identifier: id [80962,80964]"/>
  <match src="call_argument [67310,67319]" dest="call_argument [67317,67326]"/>
  <match src="&quot;: &quot; [65837,65838]" dest="&quot;: &quot; [65844,65845]"/>
  <match src="function_definition [28097,28272]" dest="function_definition [28097,28272]"/>
  <match src="string_literal [8979,9015]" dest="string_literal [8979,9015]"/>
  <match src="identifier: i [70017,70018]" dest="identifier: i [70024,70025]"/>
  <match src="identifier: value [7090,7095]" dest="identifier: value [7090,7095]"/>
  <match src=".: . [51782,51783]" dest=".: . [51782,51783]"/>
  <match src="visibility [5494,5502]" dest="visibility [5494,5502]"/>
  <match src="function: function [3218,3226]" dest="function: function [3218,3226]"/>
  <match src="variable_declaration [10969,10978]" dest="variable_declaration [10969,10978]"/>
  <match src="=: = [73077,73078]" dest="=: = [73084,73085]"/>
  <match src="primitive_type [44779,44786]" dest="primitive_type [44779,44786]"/>
  <match src="call_argument [80648,80651]" dest="call_argument [80655,80658]"/>
  <match src="memory: memory [16679,16685]" dest="memory: memory [16679,16685]"/>
  <match src=".: . [78901,78902]" dest=".: . [78908,78909]"/>
  <match src=",: , [5750,5751]" dest=",: , [5750,5751]"/>
  <match src="!: ! [43601,43602]" dest="!: ! [43601,43602]"/>
  <match src=".: . [63826,63827]" dest=".: . [63833,63834]"/>
  <match src="primitive_type [5403,5410]" dest="primitive_type [5403,5410]"/>
  <match src=",: , [3607,3608]" dest=",: , [3607,3608]"/>
  <match src="uint8: uint8 [4515,4520]" dest="uint8: uint8 [4515,4520]"/>
  <match src="type_name [21978,21982]" dest="type_name [21978,21982]"/>
  <match src="identifier: Approval [18672,18680]" dest="identifier: Approval [18672,18680]"/>
  <match src="add: add [56184,56187]" dest="add: add [56184,56187]"/>
  <match src="type_name [35939,35946]" dest="type_name [35939,35946]"/>
  <match src="(: ( [16108,16109]" dest="(: ( [16108,16109]"/>
  <match src="memory: memory [28645,28651]" dest="memory: memory [28645,28651]"/>
  <match src="expression_statement [74897,74923]" dest="expression_statement [74904,74930]"/>
  <match src="): ) [69064,69065]" dest="): ) [69071,69072]"/>
  <match src="function_body [13408,13548]" dest="function_body [13408,13548]"/>
  <match src="number_literal: 1 [71280,71281]" dest="number_literal: 1 [71287,71288]"/>
  <match src="member_expression [81147,81170]" dest="member_expression [81154,81177]"/>
  <match src="): ) [56103,56104]" dest="): ) [56103,56104]"/>
  <match src="(: ( [27036,27037]" dest="(: ( [27036,27037]"/>
  <match src="mload: mload [10711,10716]" dest="mload: mload [10711,10716]"/>
  <match src="): ) [42964,42965]" dest="): ) [42964,42965]"/>
  <match src="call_argument [43626,43638]" dest="call_argument [43626,43638]"/>
  <match src="user_defined_type [76883,76901]" dest="user_defined_type [76890,76908]"/>
  <match src="type_name [80326,80335]" dest="type_name [80333,80342]"/>
  <match src="visibility [80350,80358]" dest="visibility [80357,80365]"/>
  <match src="number_literal: 1 [67850,67851]" dest="number_literal: 1 [67857,67858]"/>
  <match src="}: } [28730,28731]" dest="}: } [28730,28731]"/>
  <match src="(: ( [70109,70110]" dest="(: ( [70116,70117]"/>
  <match src="bytes32: bytes32 [13760,13767]" dest="bytes32: bytes32 [13760,13767]"/>
  <match src="primitive_type [45336,45343]" dest="primitive_type [45336,45343]"/>
  <match src="bytes16: bytes16 [6003,6010]" dest="bytes16: bytes16 [6003,6010]"/>
  <match src="identifier: sender [66966,66972]" dest="identifier: sender [66973,66979]"/>
  <match src="identifier: tokenPartner [64080,64092]" dest="identifier: tokenPartner [64087,64099]"/>
  <match src="type_name [58512,58542]" dest="type_name [58512,58542]"/>
  <match src="block_statement [6457,6494]" dest="block_statement [6457,6494]"/>
  <match src="(: ( [42787,42788]" dest="(: ( [42787,42788]"/>
  <match src="): ) [8647,8648]" dest="): ) [8647,8648]"/>
  <match src="identifier: msg [61537,61540]" dest="identifier: msg [61544,61547]"/>
  <match src=",: , [62696,62697]" dest=",: , [62703,62704]"/>
  <match src="=: = [51038,51039]" dest="=: = [51038,51039]"/>
  <match src="comment: // tokenId =&gt; isClaimed [58838,58861]" dest="comment: // tokenId =&gt; isClaimed [58845,58868]"/>
  <match src="): ) [14858,14859]" dest="): ) [14858,14859]"/>
  <match src="[: [ [1754,1755]" dest="[: [ [1754,1755]"/>
  <match src="(: ( [8669,8670]" dest="(: ( [8669,8670]"/>
  <match src="identifier: _baseURI [42857,42865]" dest="identifier: _baseURI [42857,42865]"/>
  <match src="(: ( [30453,30454]" dest="(: ( [30453,30454]"/>
  <match src=".: . [74222,74223]" dest=".: . [74229,74230]"/>
  <match src="{: { [10460,10461]" dest="{: { [10460,10461]"/>
  <match src="(: ( [49120,49121]" dest="(: ( [49120,49121]"/>
  <match src="identifier: updatedIndex [49121,49133]" dest="identifier: updatedIndex [49121,49133]"/>
  <match src="member_expression [48474,48503]" dest="member_expression [48474,48503]"/>
  <match src="type_cast_expression [41759,41769]" dest="type_cast_expression [41759,41769]"/>
  <match src="type_name [80833,80838]" dest="type_name [80840,80845]"/>
  <match src="identifier: seed [76439,76443]" dest="identifier: seed [76446,76450]"/>
  <match src=",: , [62217,62218]" dest=",: , [62224,62225]"/>
  <match src="if: if [8790,8792]" dest="if: if [8790,8792]"/>
  <match src="identifier: t [75506,75507]" dest="identifier: t [75513,75514]"/>
  <match src="assembly_statement [12911,13066]" dest="assembly_statement [12911,13066]"/>
  <match src="identifier: owner [1740,1745]" dest="identifier: owner [1740,1745]"/>
  <match src="bytes32: bytes32 [10969,10976]" dest="bytes32: bytes32 [10969,10976]"/>
  <match src="expression_statement [71023,71062]" dest="expression_statement [71030,71069]"/>
  <match src="string [46199,46224]" dest="string [46199,46224]"/>
  <match src="number_literal: 1 [7710,7711]" dest="number_literal: 1 [7710,7711]"/>
  <match src="==: == [64535,64537]" dest="==: == [64542,64544]"/>
  <match src="}: } [68245,68246]" dest="}: } [68252,68253]"/>
  <match src=".: . [61540,61541]" dest=".: . [61547,61548]"/>
  <match src="visibility [55743,55750]" dest="visibility [55743,55750]"/>
  <match src="identifier: IDogewood [923,932]" dest="identifier: IDogewood [923,932]"/>
  <match src="number_literal: 255 [62298,62301]" dest="number_literal: 255 [62305,62308]"/>
  <match src="): ) [80056,80057]" dest="): ) [80063,80064]"/>
  <match src="call_argument [11315,11316]" dest="call_argument [11315,11316]"/>
  <match src="identifier: sender [44718,44724]" dest="identifier: sender [44718,44724]"/>
  <match src="): ) [73274,73275]" dest="): ) [73281,73282]"/>
  <match src="parameter [19347,19360]" dest="parameter [19347,19360]"/>
  <match src="parameter [42732,42745]" dest="parameter [42732,42745]"/>
  <match src="variable_declaration_statement [29982,30056]" dest="variable_declaration_statement [29982,30056]"/>
  <match src="member_expression [80876,80886]" dest="member_expression [80883,80893]"/>
  <match src="assignment_expression [63731,63751]" dest="assignment_expression [63738,63758]"/>
  <match src="interface_declaration [67,360]" dest="interface_declaration [67,360]"/>
  <match src="uint8: uint8 [66672,66677]" dest="uint8: uint8 [66679,66684]"/>
  <match src="}: } [74320,74321]" dest="}: } [74327,74328]"/>
  <match src=".: . [30030,30031]" dest=".: . [30030,30031]"/>
  <match src="identifier: i [70329,70330]" dest="identifier: i [70336,70337]"/>
  <match src="comment: //     uint8 breed; Pomeranian [73396,73426]" dest="comment: //     uint8 breed; Pomeranian [73403,73433]"/>
  <match src="member_expression [71749,71777]" dest="member_expression [71756,71784]"/>
  <match src="parameter [5700,5710]" dest="parameter [5700,5710]"/>
  <match src="primitive_type [57848,57855]" dest="primitive_type [57848,57855]"/>
  <match src="function_definition [55597,56267]" dest="function_definition [55597,56267]"/>
  <match src="identifier: tokenId [55089,55096]" dest="identifier: tokenId [55089,55096]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [77151,77154]" dest="&gt;&gt;=: &gt;&gt;= [77158,77161]"/>
  <match src="else: else [71298,71302]" dest="else: else [71305,71309]"/>
  <match src="type_name [55760,55764]" dest="type_name [55760,55764]"/>
  <match src="state_variable_declaration [58643,58669]" dest="state_variable_declaration [58650,58676]"/>
  <match src="number_literal: 7 [62332,62333]" dest="number_literal: 7 [62339,62340]"/>
  <match src="=: = [74177,74178]" dest="=: = [74184,74185]"/>
  <match src="assignment_expression [70213,70241]" dest="assignment_expression [70220,70248]"/>
  <match src="=: = [15686,15687]" dest="=: = [15686,15687]"/>
  <match src="identifier: _mint [47778,47783]" dest="identifier: _mint [47778,47783]"/>
  <match src="parameter [44657,44667]" dest="parameter [44657,44667]"/>
  <match src="expression_statement [68163,68235]" dest="expression_statement [68170,68242]"/>
  <match src="(: ( [46173,46174]" dest="(: ( [46173,46174]"/>
  <match src="assignment_expression [73760,73793]" dest="assignment_expression [73767,73800]"/>
  <match src="number_literal: 0x8c8bbDB5C8D9c35FfB4493490172D2787648cAD8 [63875,63917]" dest="number_literal: 0x8c8bbDB5C8D9c35FfB4493490172D2787648cAD8 [63882,63924]"/>
  <match src="&quot;: &quot; [6060,6061]" dest="&quot;: &quot; [6060,6061]"/>
  <match src="call_argument [68215,68233]" dest="call_argument [68222,68240]"/>
  <match src="parameter [724,749]" dest="parameter [724,749]"/>
  <match src="expression_statement [61581,61634]" dest="expression_statement [61588,61641]"/>
  <match src="uint256: uint256 [2323,2330]" dest="uint256: uint256 [2323,2330]"/>
  <match src="state_mutability [38786,38790]" dest="state_mutability [38786,38790]"/>
  <match src="): ) [44789,44790]" dest="): ) [44789,44790]"/>
  <match src="): ) [6811,6812]" dest="): ) [6811,6812]"/>
  <match src="]: ] [62728,62729]" dest="]: ] [62735,62736]"/>
  <match src="identifier: amount [27072,27078]" dest="identifier: amount [27072,27078]"/>
  <match src="]: ] [44622,44623]" dest="]: ] [44622,44623]"/>
  <match src=",: , [75023,75024]" dest=",: , [75030,75031]"/>
  <match src="state_variable_declaration [37050,37081]" dest="state_variable_declaration [37050,37081]"/>
  <match src="call_argument [63687,63706]" dest="call_argument [63694,63713]"/>
  <match src="primitive_type [7152,7159]" dest="primitive_type [7152,7159]"/>
  <match src="return: return [10876,10882]" dest="return: return [10876,10882]"/>
  <match src="assignment_expression [81193,81230]" dest="assignment_expression [81200,81237]"/>
  <match src="&quot;: &quot; [46422,46423]" dest="&quot;: &quot; [46422,46423]"/>
  <match src="primitive_type [10155,10160]" dest="primitive_type [10155,10160]"/>
  <match src="type_name [45537,45544]" dest="type_name [45537,45544]"/>
  <match src="parameter [32344,32356]" dest="parameter [32344,32356]"/>
  <match src="expression_statement [52122,52144]" dest="expression_statement [52122,52144]"/>
  <match src="(: ( [64908,64909]" dest="(: ( [64915,64916]"/>
  <match src="private: private [6011,6018]" dest="private: private [6011,6018]"/>
  <match src="identifier: this [29833,29837]" dest="identifier: this [29833,29837]"/>
  <match src="(: ( [1483,1484]" dest="(: ( [1483,1484]"/>
  <match src="type_name [39791,39798]" dest="type_name [39791,39798]"/>
  <match src="call_argument [52748,52755]" dest="call_argument [52748,52755]"/>
  <match src="bytes: bytes [29997,30002]" dest="bytes: bytes [29997,30002]"/>
  <match src="address: address [67362,67369]" dest="address: address [67369,67376]"/>
  <match src=",: , [49543,49544]" dest=",: , [49543,49544]"/>
  <match src="string [68318,68333]" dest="string [68325,68340]"/>
  <match src="identifier: owner [40112,40117]" dest="identifier: owner [40112,40117]"/>
  <match src="state_mutability [24262,24266]" dest="state_mutability [24262,24266]"/>
  <match src="comment: // Whether the token has been burned. [36315,36352]" dest="comment: // Whether the token has been burned. [36315,36352]"/>
  <match src="(: ( [77358,77359]" dest="(: ( [77365,77366]"/>
  <match src="uint256: uint256 [3800,3807]" dest="uint256: uint256 [3800,3807]"/>
  <match src="parameter [39496,39509]" dest="parameter [39496,39509]"/>
  <match src="update_expression [48969,48983]" dest="update_expression [48969,48983]"/>
  <match src="): ) [65156,65157]" dest="): ) [65163,65164]"/>
  <match src="call_argument [78233,78244]" dest="call_argument [78240,78251]"/>
  <match src="member_expression [69156,69165]" dest="member_expression [69163,69172]"/>
  <match src="if_statement [54318,54492]" dest="if_statement [54318,54492]"/>
  <match src="primitive_type [27108,27115]" dest="primitive_type [27108,27115]"/>
  <match src="array_access [70859,70882]" dest="array_access [70866,70889]"/>
  <match src="identifier: seed [75469,75473]" dest="identifier: seed [75476,75480]"/>
  <match src="uint256: uint256 [57848,57855]" dest="uint256: uint256 [57848,57855]"/>
  <match src="variable_declaration_statement [15147,15189]" dest="variable_declaration_statement [15147,15189]"/>
  <match src="comment: //   tokenNo values =&gt; [0: ETH, 1: $ZUG, 2: $CHEETH, 3: $MES, 4: $HONEYD, 5: $SHELL] [58422,58506]" dest="comment: //   tokenNo values =&gt; [0: ETH, 1: $ZUG, 2: $CHEETH, 3: $MES, 4: $HONEYD, 5: $SHELL] [58422,58506]"/>
  <match src="if_statement [44201,44259]" dest="if_statement [44201,44259]"/>
  <match src="comment: //     uint8 bodyType; A [70543,70567]" dest="comment: //     uint8 bodyType; A [70550,70574]"/>
  <match src="identifier: tokenId [79799,79806]" dest="identifier: tokenId [79806,79813]"/>
  <match src="=: = [63318,63319]" dest="=: = [63325,63326]"/>
  <match src="augmented_assignment_expression [77563,77574]" dest="augmented_assignment_expression [77570,77581]"/>
  <match src=",: , [67851,67852]" dest=",: , [67858,67859]"/>
  <match src="memory: memory [349,355]" dest="memory: memory [349,355]"/>
  <match src="binary_expression [56015,56033]" dest="binary_expression [56015,56033]"/>
  <match src="number_literal: 7 [72110,72111]" dest="number_literal: 7 [72117,72118]"/>
  <match src="): ) [40131,40132]" dest="): ) [40131,40132]"/>
  <match src="else: else [11334,11338]" dest="else: else [11334,11338]"/>
  <match src="address: address [3666,3673]" dest="address: address [3666,3673]"/>
  <match src="address: address [13420,13427]" dest="address: address [13420,13427]"/>
  <match src="): ) [64215,64216]" dest="): ) [64222,64223]"/>
  <match src="visibility [897,905]" dest="visibility [897,905]"/>
  <match src="assignment_expression [53732,53754]" dest="assignment_expression [53732,53754]"/>
  <match src="call_expression [65129,65157]" dest="call_expression [65136,65164]"/>
  <match src="uint16: uint16 [60410,60416]" dest="uint16: uint16 [60417,60423]"/>
  <match src="identifier: id [870,872]" dest="identifier: id [870,872]"/>
  <match src="variable_declaration_statement [12893,12901]" dest="variable_declaration_statement [12893,12901]"/>
  <match src="}: } [47509,47510]" dest="}: } [47509,47510]"/>
  <match src="function: function [39477,39485]" dest="function: function [39477,39485]"/>
  <match src="call_argument [66027,66044]" dest="call_argument [66034,66051]"/>
  <match src="call_expression [69252,69319]" dest="call_expression [69259,69326]"/>
  <match src="visibility [19099,19107]" dest="visibility [19099,19107]"/>
  <match src="variable_declaration [54050,54081]" dest="variable_declaration [54050,54081]"/>
  <match src="string_literal [27235,27237]" dest="string_literal [27235,27237]"/>
  <match src="identifier: signature [67568,67577]" dest="identifier: signature [67575,67584]"/>
  <match src="internal: internal [16689,16697]" dest="internal: internal [16689,16697]"/>
  <match src="memory: memory [1605,1611]" dest="memory: memory [1605,1611]"/>
  <match src="comment: // I know this looks weird but it saves users gas by making lookup O(1) [61974,62045]" dest="comment: // I know this looks weird but it saves users gas by making lookup O(1) [61981,62052]"/>
  <match src="): ) [31481,31482]" dest="): ) [31481,31482]"/>
  <match src="): ) [29968,29969]" dest="): ) [29968,29969]"/>
  <match src=",: , [62208,62209]" dest=",: , [62215,62216]"/>
  <match src="type_name [46715,46722]" dest="type_name [46715,46722]"/>
  <match src="variable_declaration_statement [53330,53383]" dest="variable_declaration_statement [53330,53383]"/>
  <match src="storage: storage [53579,53586]" dest="storage: storage [53579,53586]"/>
  <match src="assignment_expression [7654,7669]" dest="assignment_expression [7654,7669]"/>
  <match src="identifier: tryRecover [11298,11308]" dest="identifier: tryRecover [11298,11308]"/>
  <match src="identifier: topCommoner_ [72026,72038]" dest="identifier: topCommoner_ [72033,72045]"/>
  <match src="identifier: commoners [72821,72830]" dest="identifier: commoners [72828,72837]"/>
  <match src="primitive_type [64383,64388]" dest="primitive_type [64390,64395]"/>
  <match src="call_expression [75007,75035]" dest="call_expression [75014,75042]"/>
  <match src="identifier: totalSupply [67033,67044]" dest="identifier: totalSupply [67040,67051]"/>
  <match src="memory: memory [624,630]" dest="memory: memory [624,630]"/>
  <match src="member_expression [66433,66443]" dest="member_expression [66440,66450]"/>
  <match src="(: ( [68053,68054]" dest="(: ( [68060,68061]"/>
  <match src="member_expression [40339,40362]" dest="member_expression [40339,40362]"/>
  <match src="[: [ [74099,74100]" dest="[: [ [74106,74107]"/>
  <match src="parameter [108,123]" dest="parameter [108,123]"/>
  <match src="type_name [440,446]" dest="type_name [440,446]"/>
  <match src="&quot;: &quot; [7129,7130]" dest="&quot;: &quot; [7129,7130]"/>
  <match src="identifier: clothes [77253,77260]" dest="identifier: clothes [77260,77267]"/>
  <match src="&quot;: &quot; [7668,7669]" dest="&quot;: &quot; [7668,7669]"/>
  <match src="call_argument [29825,29855]" dest="call_argument [29825,29855]"/>
  <match src="primitive_type [78040,78047]" dest="primitive_type [78047,78054]"/>
  <match src="identifier: tokenURI [79669,79677]" dest="identifier: tokenURI [79676,79684]"/>
  <match src="[: [ [76526,76527]" dest="[: [ [76533,76534]"/>
  <match src="(: ( [78985,78986]" dest="(: ( [78992,78993]"/>
  <match src="inline_array_expression [62776,62838]" dest="inline_array_expression [62783,62845]"/>
  <match src="call_argument [69527,69540]" dest="call_argument [69534,69547]"/>
  <match src="comment: // } [75837,75841]" dest="comment: // } [75844,75848]"/>
  <match src="{: { [56154,56155]" dest="{: { [56154,56155]"/>
  <match src="function: function [22829,22837]" dest="function: function [22829,22837]"/>
  <match src="parameter [75412,75439]" dest="parameter [75419,75446]"/>
  <match src="call_argument [28707,28708]" dest="call_argument [28707,28708]"/>
  <match src="identifier: tokenId [53610,53617]" dest="identifier: tokenId [53610,53617]"/>
  <match src="&lt;=: &lt;= [65404,65406]" dest="&lt;=: &lt;= [65411,65413]"/>
  <match src="member_expression [64036,64046]" dest="member_expression [64043,64053]"/>
  <match src="binary_expression [68069,68104]" dest="binary_expression [68076,68111]"/>
  <match src="(: ( [46003,46004]" dest="(: ( [46003,46004]"/>
  <match src="returns: returns [30394,30401]" dest="returns: returns [30394,30401]"/>
  <match src="if_statement [46170,46226]" dest="if_statement [46170,46226]"/>
  <match src="call_argument [41235,41236]" dest="call_argument [41235,41236]"/>
  <match src="identifier: commoners [72985,72994]" dest="identifier: commoners [72992,73001]"/>
  <match src="binary_expression [74970,74981]" dest="binary_expression [74977,74988]"/>
  <match src="member_expression [68357,68391]" dest="member_expression [68364,68398]"/>
  <match src="identifier: addr [51033,51037]" dest="identifier: addr [51033,51037]"/>
  <match src="): ) [16121,16122]" dest="): ) [16121,16122]"/>
  <match src="number_literal: 6 [62999,63000]" dest="number_literal: 6 [63006,63007]"/>
  <match src="uint8: uint8 [80818,80823]" dest="uint8: uint8 [80825,80830]"/>
  <match src="comment: // There will always be an ownership that has an address and is not burned [41363,41437]" dest="comment: // There will always be an ownership that has an address and is not burned [41363,41437]"/>
  <match src="{: { [72307,72308]" dest="{: { [72314,72315]"/>
  <match src="type_name [59909,59914]" dest="type_name [59916,59921]"/>
  <match src="identifier: quantity_ [68651,68660]" dest="identifier: quantity_ [68658,68667]"/>
  <match src="return_type_definition [43886,43903]" dest="return_type_definition [43886,43903]"/>
  <match src="identifier: to_ [74361,74364]" dest="identifier: to_ [74368,74371]"/>
  <match src="primitive_type [52612,52616]" dest="primitive_type [52612,52616]"/>
  <match src="string_literal [79906,79955]" dest="string_literal [79913,79962]"/>
  <match src="identifier: to [49541,49543]" dest="identifier: to [49541,49543]"/>
  <match src="returns: returns [28163,28170]" dest="returns: returns [28163,28170]"/>
  <match src="type_name [80802,80807]" dest="type_name [80809,80814]"/>
  <match src="identifier: length [7191,7197]" dest="identifier: length [7191,7197]"/>
  <match src="identifier: quantity_ [74957,74966]" dest="identifier: quantity_ [74964,74973]"/>
  <match src="comment: // Compiler will pack this into a single 256bit word. [36037,36090]" dest="comment: // Compiler will pack this into a single 256bit word. [36037,36090]"/>
  <match src="&quot;: &quot; [80449,80450]" dest="&quot;: &quot; [80456,80457]"/>
  <match src="identifier: _afterTokenTransfers [57742,57762]" dest="identifier: _afterTokenTransfers [57742,57762]"/>
  <match src="member_expression [26052,26071]" dest="member_expression [26052,26071]"/>
  <match src="parameter [2323,2333]" dest="parameter [2323,2333]"/>
  <match src="type_name [10993,11000]" dest="type_name [10993,11000]"/>
  <match src="]: ] [76589,76590]" dest="]: ] [76596,76597]"/>
  <match src="identifier: length [56022,56028]" dest="identifier: length [56022,56028]"/>
  <match src="binary_expression [66946,66985]" dest="binary_expression [66953,66992]"/>
  <match src="member_expression [63687,63697]" dest="member_expression [63694,63704]"/>
  <match src="identifier: commoners [71023,71032]" dest="identifier: commoners [71030,71039]"/>
  <match src="primitive_type [54608,54615]" dest="primitive_type [54608,54615]"/>
  <match src="new: new [7592,7595]" dest="new: new [7592,7595]"/>
  <match src="(: ( [16278,16279]" dest="(: ( [16278,16279]"/>
  <match src="identifier: i [74856,74857]" dest="identifier: i [74863,74864]"/>
  <match src="function: function [32308,32316]" dest="function: function [32308,32316]"/>
  <match src="(: ( [75012,75013]" dest="(: ( [75019,75020]"/>
  <match src="uint256: uint256 [20159,20166]" dest="uint256: uint256 [20159,20166]"/>
  <match src="(: ( [44846,44847]" dest="(: ( [44846,44847]"/>
  <match src="identifier: require [64516,64523]" dest="identifier: require [64523,64530]"/>
  <match src=",: , [62813,62814]" dest=",: , [62820,62821]"/>
  <match src="(: ( [41208,41209]" dest="(: ( [41208,41209]"/>
  <match src=",: , [46349,46350]" dest=",: , [46349,46350]"/>
  <match src="primitive_type [57773,57780]" dest="primitive_type [57773,57780]"/>
  <match src="identifier: cooking [5855,5862]" dest="identifier: cooking [5855,5862]"/>
  <match src="call_argument [75013,75016]" dest="call_argument [75020,75023]"/>
  <match src="(: ( [3968,3969]" dest="(: ( [3968,3969]"/>
  <match src="): ) [66904,66905]" dest="): ) [66911,66912]"/>
  <match src="call_argument [49537,49538]" dest="call_argument [49537,49538]"/>
  <match src="identifier: length [66459,66465]" dest="identifier: length [66466,66472]"/>
  <match src="identifier: seed [77534,77538]" dest="identifier: seed [77541,77545]"/>
  <match src="primitive_type [12778,12785]" dest="primitive_type [12778,12785]"/>
  <match src=",: , [5722,5723]" dest=",: , [5722,5723]"/>
  <match src="call_argument [16828,16829]" dest="call_argument [16828,16829]"/>
  <match src="for: for [80473,80476]" dest="for: for [80480,80483]"/>
  <match src="primitive_type [21543,21550]" dest="primitive_type [21543,21550]"/>
  <match src="identifier: RecoverError [15330,15342]" dest="identifier: RecoverError [15330,15342]"/>
  <match src="user_defined_type [5443,5451]" dest="user_defined_type [5443,5451]"/>
  <match src=".: . [61133,61134]" dest=".: . [61140,61141]"/>
  <match src="{: { [8218,8219]" dest="{: { [8218,8219]"/>
  <match src="view: view [2358,2362]" dest="view: view [2358,2362]"/>
  <match src="if: if [8666,8668]" dest="if: if [8666,8668]"/>
  <match src="uint: uint [4978,4982]" dest="uint: uint [4978,4982]"/>
  <match src="identifier: topCommoner_ [74289,74301]" dest="identifier: topCommoner_ [74296,74308]"/>
  <match src="call_argument [66895,66904]" dest="call_argument [66902,66911]"/>
  <match src="identifier: traitType [76573,76582]" dest="identifier: traitType [76580,76589]"/>
  <match src="expression_statement [62253,62308]" dest="expression_statement [62260,62315]"/>
  <match src="{: { [60959,60960]" dest="{: { [60966,60967]"/>
  <match src=",: , [62142,62143]" dest=",: , [62149,62150]"/>
  <match src="memory: memory [32464,32470]" dest="memory: memory [32464,32470]"/>
  <match src="&lt;: &lt; [66216,66217]" dest="&lt;: &lt; [66223,66224]"/>
  <match src="type_name [40575,40582]" dest="type_name [40575,40582]"/>
  <match src="function_definition [8392,9035]" dest="function_definition [8392,9035]"/>
  <match src="]: ] [71102,71103]" dest="]: ] [71109,71110]"/>
  <match src="bytes4: bytes4 [34627,34633]" dest="bytes4: bytes4 [34627,34633]"/>
  <match src="identifier: tokenId [43738,43745]" dest="identifier: tokenId [43738,43745]"/>
  <match src="bool: bool [18958,18962]" dest="bool: bool [18958,18962]"/>
  <match src="assignment_expression [71961,71997]" dest="assignment_expression [71968,72004]"/>
  <match src="(: ( [74995,74996]" dest="(: ( [75002,75003]"/>
  <match src="type_name [58971,58989]" dest="type_name [58978,58996]"/>
  <match src="): ) [52714,52715]" dest="): ) [52714,52715]"/>
  <match src="type_name [57000,57007]" dest="type_name [57000,57007]"/>
  <match src="array_access [64080,64102]" dest="array_access [64087,64109]"/>
  <match src="type_cast_expression [7898,7912]" dest="type_cast_expression [7898,7912]"/>
  <match src="): ) [46076,46077]" dest="): ) [46076,46077]"/>
  <match src="block_statement [15225,15302]" dest="block_statement [15225,15302]"/>
  <match src="identifier: commoners [79272,79281]" dest="identifier: commoners [79279,79288]"/>
  <match src="&quot;: &quot; [31882,31883]" dest="&quot;: &quot; [31882,31883]"/>
  <match src="parameter [12839,12846]" dest="parameter [12839,12846]"/>
  <match src="number_literal: 0 [51508,51509]" dest="number_literal: 0 [51508,51509]"/>
  <match src="identifier: admin [42235,42240]" dest="identifier: admin [42235,42240]"/>
  <match src="call_argument [30090,30097]" dest="call_argument [30090,30097]"/>
  <match src="=: = [54389,54390]" dest="=: = [54389,54390]"/>
  <match src="call_argument [63531,63549]" dest="call_argument [63538,63556]"/>
  <match src="uint256: uint256 [49903,49910]" dest="uint256: uint256 [49903,49910]"/>
  <match src="function: function [21933,21941]" dest="function: function [21933,21941]"/>
  <match src="function: function [42035,42043]" dest="function: function [42035,42043]"/>
  <match src="type_name [40957,40964]" dest="type_name [40957,40964]"/>
  <match src="primitive_type [12309,12316]" dest="primitive_type [12309,12316]"/>
  <match src="visibility [33747,33755]" dest="visibility [33747,33755]"/>
  <match src="(: ( [30961,30962]" dest="(: ( [30961,30962]"/>
  <match src="function: function [29106,29114]" dest="function: function [29106,29114]"/>
  <match src=".: . [42924,42925]" dest=".: . [42924,42925]"/>
  <match src="identifier: seed [77229,77233]" dest="identifier: seed [77236,77240]"/>
  <match src=",: , [46252,46253]" dest=",: , [46252,46253]"/>
  <match src="identifier: error [12421,12426]" dest="identifier: error [12421,12426]"/>
  <match src="boolean_literal [74916,74921]" dest="boolean_literal [74923,74928]"/>
  <match src="boolean_literal [63572,63576]" dest="boolean_literal [63579,63583]"/>
  <match src="]: ] [74055,74056]" dest="]: ] [74062,74063]"/>
  <match src="tuple_expression [14882,14926]" dest="tuple_expression [14882,14926]"/>
  <match src="external: external [66713,66721]" dest="external: external [66720,66728]"/>
  <match src="}: } [69659,69660]" dest="}: } [69666,69667]"/>
  <match src="type_cast_expression [63928,63941]" dest="type_cast_expression [63935,63948]"/>
  <match src="call_argument [63489,63500]" dest="call_argument [63496,63507]"/>
  <match src="parameter [74353,74364]" dest="parameter [74360,74371]"/>
  <match src="return_statement [7300,7334]" dest="return_statement [7300,7334]"/>
  <match src="identifier: burn [3661,3665]" dest="identifier: burn [3661,3665]"/>
  <match src="number_literal: 0 [54558,54559]" dest="number_literal: 0 [54558,54559]"/>
  <match src="return_type_definition [2363,2377]" dest="return_type_definition [2363,2377]"/>
  <match src="identifier: target [30454,30460]" dest="identifier: target [30454,30460]"/>
  <match src="string [50057,50087]" dest="string [50057,50087]"/>
  <match src=",: , [8321,8322]" dest=",: , [8321,8322]"/>
  <match src="if_statement [46277,46436]" dest="if_statement [46277,46436]"/>
  <match src="yul_path [12935,12936]" dest="yul_path [12935,12936]"/>
  <match src="contract: contract [35806,35814]" dest="contract: contract [35806,35814]"/>
  <match src="): ) [54559,54560]" dest="): ) [54559,54560]"/>
  <match src="catch_clause [55968,56260]" dest="catch_clause [55968,56260]"/>
  <match src="identifier: require [31854,31861]" dest="identifier: require [31854,31861]"/>
  <match src="identifier: amount [3700,3706]" dest="identifier: amount [3700,3706]"/>
  <match src="identifier: doges_ [66072,66078]" dest="identifier: doges_ [66079,66085]"/>
  <match src="expression_statement [62762,62839]" dest="expression_statement [62769,62846]"/>
  <match src="primitive_type [58247,58254]" dest="primitive_type [58247,58254]"/>
  <match src="number_literal: 4 [70014,70015]" dest="number_literal: 4 [70021,70022]"/>
  <match src="identifier: quantity [48752,48760]" dest="identifier: quantity [48752,48760]"/>
  <match src="identifier: InvalidSignatureLength [11387,11409]" dest="identifier: InvalidSignatureLength [11387,11409]"/>
  <match src="assignment_expression [81285,81316]" dest="assignment_expression [81292,81323]"/>
  <match src="primitive_type [5700,5707]" dest="primitive_type [5700,5707]"/>
  <match src="comment: // Mapping owner address to address data [37504,37544]" dest="comment: // Mapping owner address to address data [37504,37544]"/>
  <match src="parenthesized_expression [52637,52773]" dest="parenthesized_expression [52637,52773]"/>
  <match src="{: { [38964,38965]" dest="{: { [38964,38965]"/>
  <match src="(: ( [42890,42891]" dest="(: ( [42890,42891]"/>
  <match src="&quot;: &quot; [27235,27236]" dest="&quot;: &quot; [27235,27236]"/>
  <match src="view: view [42194,42198]" dest="view: view [42194,42198]"/>
  <match src="&quot;: &quot; [30506,30507]" dest="&quot;: &quot; [30506,30507]"/>
  <match src="variable_declaration_statement [27186,27239]" dest="variable_declaration_statement [27186,27239]"/>
  <match src="function_body [43904,44034]" dest="function_body [43904,44034]"/>
  <match src="call_expression [30073,30124]" dest="call_expression [30073,30124]"/>
  <match src="]: ] [66972,66973]" dest="]: ] [66979,66980]"/>
  <match src="): ) [5608,5609]" dest="): ) [5608,5609]"/>
  <match src="): ) [47975,47976]" dest="): ) [47975,47976]"/>
  <match src="comment: /**      * @dev Safely mints `quantity` tokens and transfers them to `to`.      *      * Requirements:      *      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called for each safe transfer.      * - `quantity` must be greater than 0.      *      * Emits a {Transfer} event.      */ [46992,47341]" dest="comment: /**      * @dev Safely mints `quantity` tokens and transfers them to `to`.      *      * Requirements:      *      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called for each safe transfer.      * - `quantity` must be greater than 0.      *      * Emits a {Transfer} event.      */ [46992,47341]"/>
  <match src="primitive_type [47965,47972]" dest="primitive_type [47965,47972]"/>
  <match src=".: . [67468,67469]" dest=".: . [67475,67476]"/>
  <match src="struct_member [4119,4136]" dest="struct_member [4119,4136]"/>
  <match src="{: { [46359,46360]" dest="{: { [46359,46360]"/>
  <match src="variable_declaration [10523,10530]" dest="variable_declaration [10523,10530]"/>
  <match src="type_name [1073,1078]" dest="type_name [1073,1078]"/>
  <match src="memory: memory [67382,67388]" dest="memory: memory [67389,67395]"/>
  <match src="number_literal: 3 [62546,62547]" dest="number_literal: 3 [62553,62554]"/>
  <match src="): ) [6455,6456]" dest="): ) [6455,6456]"/>
  <match src="type_name [40026,40033]" dest="type_name [40026,40033]"/>
  <match src="type_name [30799,30805]" dest="type_name [30799,30805]"/>
  <match src="call_expression [52122,52143]" dest="call_expression [52122,52143]"/>
  <match src="call_expression [31978,32003]" dest="call_expression [31978,32003]"/>
  <match src="array_access [40099,40118]" dest="array_access [40099,40118]"/>
  <match src="expression_statement [67025,67109]" dest="expression_statement [67032,67116]"/>
  <match src="parameter [572,585]" dest="parameter [572,585]"/>
  <match src="identifier: numberMinted [48491,48503]" dest="identifier: numberMinted [48491,48503]"/>
  <match src="identifier: tokenNo_ [69118,69126]" dest="identifier: tokenNo_ [69125,69133]"/>
  <match src="type_cast_expression [48865,48875]" dest="type_cast_expression [48865,48875]"/>
  <match src="return_statement [32014,32073]" dest="return_statement [32014,32073]"/>
  <match src="(: ( [54321,54322]" dest="(: ( [54321,54322]"/>
  <match src="identifier: setRevealed [63426,63437]" dest="identifier: setRevealed [63433,63444]"/>
  <match src="memory: memory [43286,43292]" dest="memory: memory [43286,43292]"/>
  <match src="call_argument [11370,11371]" dest="call_argument [11370,11371]"/>
  <match src="uint: uint [74802,74806]" dest="uint: uint [74809,74813]"/>
  <match src="type_name [1329,1336]" dest="type_name [1329,1336]"/>
  <match src="&quot;: &quot; [42788,42789]" dest="&quot;: &quot; [42788,42789]"/>
  <match src="call_argument [74908,74910]" dest="call_argument [74915,74917]"/>
  <match src="identifier: armor [1883,1888]" dest="identifier: armor [1883,1888]"/>
  <match src=".: . [8937,8938]" dest=".: . [8937,8938]"/>
  <match src="function: function [4880,4888]" dest="function: function [4880,4888]"/>
  <match src="identifier: tryRecover [13083,13093]" dest="identifier: tryRecover [13083,13093]"/>
  <match src="): ) [5418,5419]" dest="): ) [5418,5419]"/>
  <match src="comment: // if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved(); [50276,50346]" dest="comment: // if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved(); [50276,50346]"/>
  <match src="if_statement [70326,74250]" dest="if_statement [70333,74257]"/>
  <match src="return: return [39635,39641]" dest="return: return [39635,39641]"/>
  <match src="string [6479,6482]" dest="string [6479,6482]"/>
  <match src="identifier: tokenId [1337,1344]" dest="identifier: tokenId [1337,1344]"/>
  <match src="call_argument [28693,28699]" dest="call_argument [28693,28699]"/>
  <match src="type_name [30746,30753]" dest="type_name [30746,30753]"/>
  <match src="{: { [48828,48829]" dest="{: { [48828,48829]"/>
  <match src="primitive_type [5248,5253]" dest="primitive_type [5248,5253]"/>
  <match src="identifier: value [29850,29855]" dest="identifier: value [29850,29855]"/>
  <match src="call_argument [45344,45345]" dest="call_argument [45344,45345]"/>
  <match src="identifier: value [6445,6450]" dest="identifier: value [6445,6450]"/>
  <match src=".: . [80508,80509]" dest=".: . [80515,80516]"/>
  <match src="parameter [3666,3678]" dest="parameter [3666,3678]"/>
  <match src="): ) [16337,16338]" dest="): ) [16337,16338]"/>
  <match src="(: ( [29292,29293]" dest="(: ( [29292,29293]"/>
  <match src="emit: emit [49335,49339]" dest="emit: emit [49335,49339]"/>
  <match src="identifier: commoners [81241,81250]" dest="identifier: commoners [81248,81257]"/>
  <match src="function_definition [61442,63409]" dest="function_definition [61449,63416]"/>
  <match src="returns: returns [22232,22239]" dest="returns: returns [22232,22239]"/>
  <match src="identifier: InvalidSignature [8581,8597]" dest="identifier: InvalidSignature [8581,8597]"/>
  <match src="if: if [73265,73267]" dest="if: if [73272,73274]"/>
  <match src="primitive_type [37050,37057]" dest="primitive_type [37050,37057]"/>
  <match src="type_name [12309,12316]" dest="type_name [12309,12316]"/>
  <match src="identifier: error [8461,8466]" dest="identifier: error [8461,8466]"/>
  <match src="identifier: owner [3144,3149]" dest="identifier: owner [3144,3149]"/>
  <match src="): ) [20819,20820]" dest="): ) [20819,20820]"/>
  <match src=".: . [77334,77335]" dest=".: . [77341,77342]"/>
  <match src="call_argument [80551,80557]" dest="call_argument [80558,80564]"/>
  <match src="member_expression [48789,48802]" dest="member_expression [48789,48802]"/>
  <match src="identifier: hash [15174,15178]" dest="identifier: hash [15174,15178]"/>
  <match src="uint256: uint256 [52077,52084]" dest="uint256: uint256 [52077,52084]"/>
  <match src="[: [ [63383,63384]" dest="[: [ [63390,63391]"/>
  <match src="call_argument [55085,55087]" dest="call_argument [55085,55087]"/>
  <match src=".: . [41750,41751]" dest=".: . [41750,41751]"/>
  <match src="parameter [27037,27062]" dest="parameter [27037,27062]"/>
  <match src="identifier: length [66401,66407]" dest="identifier: length [66408,66414]"/>
  <match src="type_name [5555,5562]" dest="type_name [5555,5562]"/>
  <match src="type_name [862,869]" dest="type_name [862,869]"/>
  <match src="block_statement [49290,49444]" dest="block_statement [49290,49444]"/>
  <match src="): ) [56214,56215]" dest="): ) [56214,56215]"/>
  <match src="&quot;: &quot; [44822,44823]" dest="&quot;: &quot; [44822,44823]"/>
  <match src="member_expression [27108,27129]" dest="member_expression [27108,27129]"/>
  <match src="yul_identifier [12944,12946]" dest="yul_identifier [12944,12946]"/>
  <match src="uint256: uint256 [58562,58569]" dest="uint256: uint256 [58569,58576]"/>
  <match src="uint8: uint8 [68851,68856]" dest="uint8: uint8 [68858,68863]"/>
  <match src="assignment_expression [63376,63401]" dest="assignment_expression [63383,63408]"/>
  <match src="yul_evm_builtin [10819,10824]" dest="yul_evm_builtin [10819,10824]"/>
  <match src="call_expression [64901,64912]" dest="call_expression [64908,64919]"/>
  <match src=",: , [12347,12348]" dest=",: , [12347,12348]"/>
  <match src="member_expression [54418,54441]" dest="member_expression [54418,54441]"/>
  <match src="identifier: t [77006,77007]" dest="identifier: t [77013,77014]"/>
  <match src="type_name [55717,55722]" dest="type_name [55717,55722]"/>
  <match src="call_argument [74286,74287]" dest="call_argument [74293,74294]"/>
  <match src="identifier: tokenId [79545,79552]" dest="identifier: tokenId [79552,79559]"/>
  <match src=".: . [31009,31010]" dest=".: . [31009,31010]"/>
  <match src=",: , [17237,17238]" dest=",: , [17237,17238]"/>
  <match src="call_argument [39393,39404]" dest="call_argument [39393,39404]"/>
  <match src="(: ( [29791,29792]" dest="(: ( [29791,29792]"/>
  <match src="call_argument [65431,65441]" dest="call_argument [65438,65448]"/>
  <match src="struct: struct [60324,60330]" dest="struct: struct [60331,60337]"/>
  <match src="{: { [5996,5997]" dest="{: { [5996,5997]"/>
  <match src="): ) [77048,77049]" dest="): ) [77055,77056]"/>
  <match src="identifier: tokenId [79183,79190]" dest="identifier: tokenId [79190,79197]"/>
  <match src="): ) [10736,10737]" dest="): ) [10736,10737]"/>
  <match src="type_name [60970,60977]" dest="type_name [60977,60984]"/>
  <match src="comment: /*///////////////////////////////////////////////////////////////                     Travel FUNCTIONS     //////////////////////////////////////////////////////////////*/ [80115,80288]" dest="comment: /*///////////////////////////////////////////////////////////////                     Travel FUNCTIONS     //////////////////////////////////////////////////////////////*/ [80122,80295]"/>
  <match src="identifier: msg [66433,66436]" dest="identifier: msg [66440,66443]"/>
  <match src=",: , [31068,31069]" dest=",: , [31068,31069]"/>
  <match src="for_statement [65862,66124]" dest="for_statement [65869,66131]"/>
  <match src="new_expression [7592,7601]" dest="new_expression [7592,7601]"/>
  <match src="primitive_type [77527,77533]" dest="primitive_type [77534,77540]"/>
  <match src="number_literal: 0 [66211,66212]" dest="number_literal: 0 [66218,66219]"/>
  <match src="identifier: pull [80305,80309]" dest="identifier: pull [80312,80316]"/>
  <match src="identifier: nextSlot [54127,54135]" dest="identifier: nextSlot [54127,54135]"/>
  <match src="identifier: topCommoner_ [71862,71874]" dest="identifier: topCommoner_ [71869,71881]"/>
  <match src="return: return [41266,41272]" dest="return: return [41266,41272]"/>
  <match src="address: address [2335,2342]" dest="address: address [2335,2342]"/>
  <match src="uint8: uint8 [5834,5839]" dest="uint8: uint8 [5834,5839]"/>
  <match src=",: , [48127,48128]" dest=",: , [48127,48128]"/>
  <match src="identifier: owner [43747,43752]" dest="identifier: owner [43747,43752]"/>
  <match src=",: , [4513,4514]" dest=",: , [4513,4514]"/>
  <match src="type_name [4793,4800]" dest="type_name [4793,4800]"/>
  <match src="]: ] [70829,70830]" dest="]: ] [70836,70837]"/>
  <match src="(: ( [32486,32487]" dest="(: ( [32486,32487]"/>
  <match src="call_argument [30889,30907]" dest="call_argument [30889,30907]"/>
  <match src="member_expression [65280,65290]" dest="member_expression [65287,65297]"/>
  <match src="assignment_expression [40622,40651]" dest="assignment_expression [40622,40651]"/>
  <match src="using: using [58004,58009]" dest="using: using [58004,58009]"/>
  <match src="): ) [39509,39510]" dest="): ) [39509,39510]"/>
  <match src="identifier: owner [42177,42182]" dest="identifier: owner [42177,42182]"/>
  <match src="string_literal [66830,66846]" dest="string_literal [66837,66853]"/>
  <match src="type_name [1814,1821]" dest="type_name [1814,1821]"/>
  <match src="call_argument [79023,79069]" dest="call_argument [79030,79076]"/>
  <match src="): ) [45421,45422]" dest="): ) [45421,45422]"/>
  <match src=",: , [62867,62868]" dest=",: , [62874,62875]"/>
  <match src="array_access [71023,71046]" dest="array_access [71030,71053]"/>
  <match src="type_cast_expression [76447,76480]" dest="type_cast_expression [76454,76487]"/>
  <match src="(: ( [58959,58960]" dest="(: ( [58966,58967]"/>
  <match src="{: { [6457,6458]" dest="{: { [6457,6458]"/>
  <match src="inline_array_expression [63320,63339]" dest="inline_array_expression [63327,63346]"/>
  <match src="&amp;&amp;: &amp;&amp; [43598,43600]" dest="&amp;&amp;: &amp;&amp; [43598,43600]"/>
  <match src="function: function [65064,65072]" dest="function: function [65071,65079]"/>
  <match src="identifier: IERC165 [17759,17766]" dest="identifier: IERC165 [17759,17766]"/>
  <match src="type_name [39324,39339]" dest="type_name [39324,39339]"/>
  <match src="primitive_type [76419,76424]" dest="primitive_type [76426,76431]"/>
  <match src="function: function [4950,4958]" dest="function: function [4950,4958]"/>
  <match src="identifier: aux [40359,40362]" dest="identifier: aux [40359,40362]"/>
  <match src="(: ( [2478,2479]" dest="(: ( [2478,2479]"/>
  <match src="type_name [81456,81463]" dest="type_name [81463,81470]"/>
  <match src="identifier: tokenId [46342,46349]" dest="identifier: tokenId [46342,46349]"/>
  <match src="array_access [73708,73731]" dest="array_access [73715,73738]"/>
  <match src="primitive_type [39642,39649]" dest="primitive_type [39642,39649]"/>
  <match src="parameter [16146,16153]" dest="parameter [16146,16153]"/>
  <match src="call_expression [68034,68117]" dest="call_expression [68041,68124]"/>
  <match src="add: add [13034,13037]" dest="add: add [13034,13037]"/>
  <match src="type_name [74802,74806]" dest="type_name [74809,74813]"/>
  <match src="?: ? [42912,42913]" dest="?: ? [42912,42913]"/>
  <match src="identifier: coolBlocks [78986,78996]" dest="identifier: coolBlocks [78993,79003]"/>
  <match src="(: ( [45655,45656]" dest="(: ( [45655,45656]"/>
  <match src="primitive_type [30746,30753]" dest="primitive_type [30746,30753]"/>
  <match src="identifier: require [67828,67835]" dest="identifier: require [67835,67842]"/>
  <match src="type_name [28559,28564]" dest="type_name [28559,28564]"/>
  <match src=",: , [53027,53028]" dest=",: , [53027,53028]"/>
  <match src="type_name [8413,8425]" dest="type_name [8413,8425]"/>
  <match src="external: external [4999,5007]" dest="external: external [4999,5007]"/>
  <match src="number_literal: 255 [62278,62281]" dest="number_literal: 255 [62285,62288]"/>
  <match src="parameter [78005,78012]" dest="parameter [78012,78019]"/>
  <match src="uint256: uint256 [78032,78039]" dest="uint256: uint256 [78039,78046]"/>
  <match src="public: public [44526,44532]" dest="public: public [44526,44532]"/>
  <match src="parameter [30746,30760]" dest="parameter [30746,30760]"/>
  <match src="identifier: palette [5743,5750]" dest="identifier: palette [5743,5750]"/>
  <match src="=: = [76431,76432]" dest="=: = [76438,76439]"/>
  <match src="member_expression [61160,61169]" dest="member_expression [61167,61176]"/>
  <match src="identifier: getApproved [46040,46051]" dest="identifier: getApproved [46040,46051]"/>
  <match src="number_literal: 51 [63336,63338]" dest="number_literal: 51 [63343,63345]"/>
  <match src=",: , [62286,62287]" dest=",: , [62293,62294]"/>
  <match src="(: ( [44735,44736]" dest="(: ( [44735,44736]"/>
  <match src="uint64: uint64 [40313,40319]" dest="uint64: uint64 [40313,40319]"/>
  <match src="type_name [36167,36174]" dest="type_name [36167,36174]"/>
  <match src="string [42788,42819]" dest="string [42788,42819]"/>
  <match src="(: ( [19121,19122]" dest="(: ( [19121,19122]"/>
  <match src="call_argument [45404,45408]" dest="call_argument [45404,45408]"/>
  <match src="call_expression [30889,30907]" dest="call_expression [30889,30907]"/>
  <match src="parameter [55670,55680]" dest="parameter [55670,55680]"/>
  <match src="variable_declaration_statement [13419,13485]" dest="variable_declaration_statement [13419,13485]"/>
  <match src="comment: // cooking [63286,63296]" dest="comment: // cooking [63293,63303]"/>
  <match src="&quot;: &quot; [68444,68445]" dest="&quot;: &quot; [68451,68452]"/>
  <match src="if_statement [74993,75036]" dest="if_statement [75000,75043]"/>
  <match src="function_body [6239,6891]" dest="function_body [6239,6891]"/>
  <match src="array_access [63124,63134]" dest="array_access [63131,63141]"/>
  <match src="variable_declaration [7152,7164]" dest="variable_declaration [7152,7164]"/>
  <match src="number_literal: 6 [77467,77468]" dest="number_literal: 6 [77474,77475]"/>
  <match src="external: external [64496,64504]" dest="external: external [64503,64511]"/>
  <match src="comment: /**      * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.      */ [24431,24523]" dest="comment: /**      * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.      */ [24431,24523]"/>
  <match src="(: ( [64998,64999]" dest="(: ( [65005,65006]"/>
  <match src="identifier: code [26060,26064]" dest="identifier: code [26060,26064]"/>
  <match src="assignment_expression [63561,63576]" dest="assignment_expression [63568,63583]"/>
  <match src="=: = [71939,71940]" dest="=: = [71946,71947]"/>
  <match src=",: , [28229,28230]" dest=",: , [28229,28230]"/>
  <match src="comment: /**  * Should be:         treat.setMinter(commoners, true)  */ [57898,57963]" dest="comment: /**  * Should be:         treat.setMinter(commoners, true)  */ [57898,57963]"/>
  <match src="number_literal: 0 [49537,49538]" dest="number_literal: 0 [49537,49538]"/>
  <match src="identifier: Commoner [75422,75430]" dest="identifier: Commoner [75429,75437]"/>
  <match src="identifier: numBatch [74970,74978]" dest="identifier: numBatch [74977,74985]"/>
  <match src="string_literal [30468,30507]" dest="string_literal [30468,30507]"/>
  <match src="': ' [46973,46974]" dest="': ' [46973,46974]"/>
  <match src="comment: //     uint8 background; The Forge [70704,70738]" dest="comment: //     uint8 background; The Forge [70711,70745]"/>
  <match src="primitive_type [74353,74360]" dest="primitive_type [74360,74367]"/>
  <match src="binary_expression [63468,63487]" dest="binary_expression [63475,63494]"/>
  <match src="&quot;: &quot; [46223,46224]" dest="&quot;: &quot; [46223,46224]"/>
  <match src="type_name [2335,2342]" dest="type_name [2335,2342]"/>
  <match src="(: ( [69063,69064]" dest="(: ( [69070,69071]"/>
  <match src="]: ] [72261,72262]" dest="]: ] [72268,72269]"/>
  <match src="view: view [2465,2469]" dest="view: view [2465,2469]"/>
  <match src="identifier: temp [7160,7164]" dest="identifier: temp [7160,7164]"/>
  <match src="primitive_type [40575,40582]" dest="primitive_type [40575,40582]"/>
  <match src="identifier: t [77585,77586]" dest="identifier: t [77592,77593]"/>
  <match src="function_definition [57733,57891]" dest="function_definition [57733,57891]"/>
  <match src=",: , [47831,47832]" dest=",: , [47831,47832]"/>
  <match src="primitive_type [30361,30366]" dest="primitive_type [30361,30366]"/>
  <match src="[: [ [69572,69573]" dest="[: [ [69579,69580]"/>
  <match src="type_name [44657,44664]" dest="type_name [44657,44664]"/>
  <match src="view: view [1426,1430]" dest="view: view [1426,1430]"/>
  <match src="comment: // address public admin; [58069,58093]" dest="comment: // address public admin; [58069,58093]"/>
  <match src="call_argument [47480,47488]" dest="call_argument [47480,47488]"/>
  <match src=",: , [62889,62890]" dest=",: , [62896,62897]"/>
  <match src="uint16: uint16 [1223,1229]" dest="uint16: uint16 [1223,1229]"/>
  <match src="identifier: data [28572,28576]" dest="identifier: data [28572,28576]"/>
  <match src="type_name [56979,56986]" dest="type_name [56979,56986]"/>
  <match src="number_literal: 114 [62164,62167]" dest="number_literal: 114 [62171,62174]"/>
  <match src="address: address [3511,3518]" dest="address: address [3511,3518]"/>
  <match src="type_name [80721,80726]" dest="type_name [80728,80733]"/>
  <match src=",: , [80047,80048]" dest=",: , [80054,80055]"/>
  <match src="call_argument [47973,47974]" dest="call_argument [47973,47974]"/>
  <match src="primitive_type [60734,60741]" dest="primitive_type [60741,60748]"/>
  <match src="library_declaration [24749,33023]" dest="library_declaration [24749,33023]"/>
  <match src=",: , [78186,78187]" dest=",: , [78193,78194]"/>
  <match src="visibility [58893,58899]" dest="visibility [58900,58906]"/>
  <match src="=: = [77595,77596]" dest="=: = [77602,77603]"/>
  <match src="expression_statement [68987,69034]" dest="expression_statement [68994,69041]"/>
  <match src="': ' [75025,75026]" dest="': ' [75032,75033]"/>
  <match src="function_definition [42315,42415]" dest="function_definition [42315,42415]"/>
  <match src=",: , [62202,62203]" dest=",: , [62209,62210]"/>
  <match src="identifier: balance [63942,63949]" dest="identifier: balance [63949,63956]"/>
  <match src="member_expression [63468,63478]" dest="member_expression [63475,63485]"/>
  <match src="type_name [31320,31327]" dest="type_name [31320,31327]"/>
  <match src=":=: := [11232,11234]" dest=":=: := [11232,11234]"/>
  <match src="string [67482,67493]" dest="string [67489,67500]"/>
  <match src="memory: memory [243,249]" dest="memory: memory [243,249]"/>
  <match src=",: , [67308,67309]" dest=",: , [67315,67316]"/>
  <match src="number_literal: 0 [6575,6576]" dest="number_literal: 0 [6575,6576]"/>
  <match src="parameter [5021,5025]" dest="parameter [5021,5025]"/>
  <match src="call_argument [74567,74570]" dest="call_argument [74574,74577]"/>
  <match src="returns: returns [12830,12837]" dest="returns: returns [12830,12837]"/>
  <match src="(: ( [52510,52511]" dest="(: ( [52510,52511]"/>
  <match src="identifier: vs [12806,12808]" dest="identifier: vs [12806,12808]"/>
  <match src="[: [ [71758,71759]" dest="[: [ [71765,71766]"/>
  <match src="=: = [62686,62687]" dest="=: = [62693,62694]"/>
  <match src="identifier: data [30784,30788]" dest="identifier: data [30784,30788]"/>
  <match src="binary_expression [55900,55929]" dest="binary_expression [55900,55929]"/>
  <match src="identifier: noCheaters [67806,67816]" dest="identifier: noCheaters [67813,67823]"/>
  <match src=".: . [65824,65825]" dest=".: . [65831,65832]"/>
  <match src="): ) [76858,76859]" dest="): ) [76865,76866]"/>
  <match src="address: address [64480,64487]" dest="address: address [64487,64494]"/>
  <match src="identifier: _HEX_SYMBOLS [7752,7764]" dest="identifier: _HEX_SYMBOLS [7752,7764]"/>
  <match src="call_argument [42947,42965]" dest="call_argument [42947,42965]"/>
  <match src="state_mutability [6210,6214]" dest="state_mutability [6210,6214]"/>
  <match src="if_statement [79751,79808]" dest="if_statement [79758,79815]"/>
  <match src="identifier: _currentIndex [37067,37080]" dest="identifier: _currentIndex [37067,37080]"/>
  <match src="(: ( [68274,68275]" dest="(: ( [68281,68282]"/>
  <match src="): ) [12284,12285]" dest="): ) [12284,12285]"/>
  <match src="primitive_type [68557,68561]" dest="primitive_type [68564,68568]"/>
  <match src="identifier: min [4973,4976]" dest="identifier: min [4973,4976]"/>
  <match src="identifier: IERC165 [34521,34528]" dest="identifier: IERC165 [34521,34528]"/>
  <match src="(: ( [63927,63928]" dest="(: ( [63934,63935]"/>
  <match src="visibility [45889,45895]" dest="visibility [45889,45895]"/>
  <match src="comment: //     uint8 palette; 1 [72462,72485]" dest="comment: //     uint8 palette; 1 [72469,72492]"/>
  <match src="visibility [21354,21362]" dest="visibility [21354,21362]"/>
  <match src="call_argument [45208,45215]" dest="call_argument [45208,45215]"/>
  <match src="parameter [25817,25821]" dest="parameter [25817,25821]"/>
  <match src="parenthesized_expression [52820,52859]" dest="parenthesized_expression [52820,52859]"/>
  <match src="number_literal: 6 [70839,70840]" dest="number_literal: 6 [70846,70847]"/>
  <match src="primitive_type [21325,21332]" dest="primitive_type [21325,21332]"/>
  <match src="comment: // head [62097,62104]" dest="comment: // head [62104,62111]"/>
  <match src="identifier: alchemy [5840,5847]" dest="identifier: alchemy [5840,5847]"/>
  <match src="call_argument [66159,66183]" dest="call_argument [66166,66190]"/>
  <match src="parameter [67376,67398]" dest="parameter [67383,67405]"/>
  <match src="comment: // mapping from hashed(tokenTrait) to the tokenId it's associated with [59678,59748]" dest="comment: // mapping from hashed(tokenTrait) to the tokenId it's associated with [59685,59755]"/>
  <match src="block_statement [72307,73259]" dest="block_statement [72314,73266]"/>
  <match src="primitive_type [22200,22207]" dest="primitive_type [22200,22207]"/>
  <match src="assignment_expression [72073,72111]" dest="assignment_expression [72080,72118]"/>
  <match src="state_variable_declaration [58704,58728]" dest="state_variable_declaration [58711,58735]"/>
  <match src="yul_identifier [10829,10838]" dest="yul_identifier [10829,10838]"/>
  <match src="): ) [63719,63720]" dest="): ) [63726,63727]"/>
  <match src="primitive_type [4365,4372]" dest="primitive_type [4365,4372]"/>
  <match src="identifier: s [16686,16687]" dest="identifier: s [16686,16687]"/>
  <match src="parameter [4533,4549]" dest="parameter [4533,4549]"/>
  <match src="return_statement [30428,30509]" dest="return_statement [30428,30509]"/>
  <match src="primitive_type [44978,44985]" dest="primitive_type [44978,44985]"/>
  <match src="identifier: setApprovalForAll [44115,44132]" dest="identifier: setApprovalForAll [44115,44132]"/>
  <match src="(: ( [78791,78792]" dest="(: ( [78798,78799]"/>
  <match src="primitive_type [22888,22895]" dest="primitive_type [22888,22895]"/>
  <match src="public: public [58154,58160]" dest="public: public [58154,58160]"/>
  <match src="mapping: mapping [58129,58136]" dest="mapping: mapping [58129,58136]"/>
  <match src="parameter [44493,44506]" dest="parameter [44493,44506]"/>
  <match src="parameter [23894,23900]" dest="parameter [23894,23900]"/>
  <match src="(: ( [37447,37448]" dest="(: ( [37447,37448]"/>
  <match src="ether: ether [66178,66183]" dest="ether: ether [66185,66190]"/>
  <match src="comment: // Inspired by OraclizeAPI's implementation - MIT licence [6250,6307]" dest="comment: // Inspired by OraclizeAPI's implementation - MIT licence [6250,6307]"/>
  <match src="}: } [27233,27234]" dest="}: } [27233,27234]"/>
  <match src="yul_path [61076,61079]" dest="yul_path [61083,61086]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [77400,77403]" dest="&gt;&gt;=: &gt;&gt;= [77407,77410]"/>
  <match src="bool: bool [21978,21982]" dest="bool: bool [21978,21982]"/>
  <match src="yul_evm_builtin [13034,13037]" dest="yul_evm_builtin [13034,13037]"/>
  <match src="{: { [60344,60345]" dest="{: { [60351,60352]"/>
  <match src="number_literal: 8 [73079,73080]" dest="number_literal: 8 [73086,73087]"/>
  <match src="member_expression [65885,65898]" dest="member_expression [65892,65905]"/>
  <match src="call_argument [31082,31094]" dest="call_argument [31082,31094]"/>
  <match src="type_name [81473,81478]" dest="type_name [81480,81485]"/>
  <match src="identifier: value [6705,6710]" dest="identifier: value [6705,6710]"/>
  <match src="member_expression [77086,77095]" dest="member_expression [77093,77102]"/>
  <match src="): ) [13014,13015]" dest="): ) [13014,13015]"/>
  <match src="identifier: value [6519,6524]" dest="identifier: value [6519,6524]"/>
  <match src="string [49244,49267]" dest="string [49244,49267]"/>
  <match src="identifier: cooking [81341,81348]" dest="identifier: cooking [81348,81355]"/>
  <match src=".: . [63471,63472]" dest=".: . [63478,63479]"/>
  <match src="public: public [38380,38386]" dest="public: public [38380,38386]"/>
  <match src="address: address [52911,52918]" dest="address: address [52911,52918]"/>
  <match src="identifier: size [60978,60982]" dest="identifier: size [60985,60989]"/>
  <match src="call_expression [43473,43497]" dest="call_expression [43473,43497]"/>
  <match src="contract_body [822,909]" dest="contract_body [822,909]"/>
  <match src="contract_body [933,2242]" dest="contract_body [933,2242]"/>
  <match src="type_name [18154,18160]" dest="type_name [18154,18160]"/>
  <match src="): ) [5862,5863]" dest="): ) [5862,5863]"/>
  <match src="==: == [63698,63700]" dest="==: == [63705,63707]"/>
  <match src="identifier: commoners [73976,73985]" dest="identifier: commoners [73983,73992]"/>
  <match src="member_expression [74145,74176]" dest="member_expression [74152,74183]"/>
  <match src="event: event [18474,18479]" dest="event: event [18474,18479]"/>
  <match src="revert_statement [39586,39625]" dest="revert_statement [39586,39625]"/>
  <match src="identifier: to [50452,50454]" dest="identifier: to [50452,50454]"/>
  <match src="state_mutability [134,138]" dest="state_mutability [134,138]"/>
  <match src="uint8: uint8 [1905,1910]" dest="uint8: uint8 [1905,1910]"/>
  <match src="return_type_definition [24399,24422]" dest="return_type_definition [24399,24422]"/>
  <match src="for_statement [74451,74662]" dest="for_statement [74458,74669]"/>
  <match src="call_argument [68275,68316]" dest="call_argument [68282,68323]"/>
  <match src="assignment_expression [72185,72220]" dest="assignment_expression [72192,72227]"/>
  <match src="external: external [319,327]" dest="external: external [319,327]"/>
  <match src="state_mutability [16698,16702]" dest="state_mutability [16698,16702]"/>
  <match src=",: , [62873,62874]" dest=",: , [62880,62881]"/>
  <match src="==: == [10453,10455]" dest="==: == [10453,10455]"/>
  <match src="call_expression [65380,65393]" dest="call_expression [65387,65400]"/>
  <match src="number_unit [69193,69198]" dest="number_unit [69200,69205]"/>
  <match src="): ) [14925,14926]" dest="): ) [14925,14926]"/>
  <match src="comment: // _mint(to_, quantity_, '', false); [74711,74747]" dest="comment: // _mint(to_, quantity_, '', false); [74718,74754]"/>
  <match src="identifier: require [65272,65279]" dest="identifier: require [65279,65286]"/>
  <match src="array_access [72875,72898]" dest="array_access [72882,72905]"/>
  <match src="): ) [3068,3069]" dest="): ) [3068,3069]"/>
  <match src="expression_statement [73042,73081]" dest="expression_statement [73049,73088]"/>
  <match src="identifier: require [67121,67128]" dest="identifier: require [67128,67135]"/>
  <match src="expression_statement [67283,67321]" dest="expression_statement [67290,67328]"/>
  <match src="{: { [8243,8244]" dest="{: { [8243,8244]"/>
  <match src="identifier: topCommoner_ [73876,73888]" dest="identifier: topCommoner_ [73883,73895]"/>
  <match src="parameter [12778,12787]" dest="parameter [12778,12787]"/>
  <match src="bool: bool [25817,25821]" dest="bool: bool [25817,25821]"/>
  <match src="external: external [897,905]" dest="external: external [897,905]"/>
  <match src="primitive_type [44133,44140]" dest="primitive_type [44133,44140]"/>
  <match src="block_statement [68252,68620]" dest="block_statement [68259,68627]"/>
  <match src="expression_statement [65272,65301]" dest="expression_statement [65279,65308]"/>
  <match src="function: function [47769,47777]" dest="function: function [47769,47777]"/>
  <match src="(: ( [54601,54602]" dest="(: ( [54601,54602]"/>
  <match src="identifier: revealed [79755,79763]" dest="identifier: revealed [79762,79770]"/>
  <match src="identifier: _addressData [40622,40634]" dest="identifier: _addressData [40622,40634]"/>
  <match src="primitive_type [45001,45008]" dest="primitive_type [45001,45008]"/>
  <match src=".: . [34737,34738]" dest=".: . [34737,34738]"/>
  <match src="array_access [66339,66348]" dest="array_access [66346,66355]"/>
  <match src="(: ( [49026,49027]" dest="(: ( [49026,49027]"/>
  <match src=".: . [15272,15273]" dest=".: . [15272,15273]"/>
  <match src="call_argument [64651,64668]" dest="call_argument [64658,64675]"/>
  <match src="identifier: r [15708,15709]" dest="identifier: r [15708,15709]"/>
  <match src="[: [ [79879,79880]" dest="[: [ [79886,79887]"/>
  <match src="return_type_definition [139,162]" dest="return_type_definition [139,162]"/>
  <match src="call_argument [64201,64214]" dest="call_argument [64208,64221]"/>
  <match src="type_name [283,288]" dest="type_name [283,288]"/>
  <match src="identifier: background [74057,74067]" dest="identifier: background [74064,74074]"/>
  <match src="(: ( [75411,75412]" dest="(: ( [75418,75419]"/>
  <match src="number_literal: 0 [7842,7843]" dest="number_literal: 0 [7842,7843]"/>
  <match src="identifier: quantity_ [69547,69556]" dest="identifier: quantity_ [69554,69563]"/>
  <match src="{: { [383,384]" dest="{: { [383,384]"/>
  <match src="identifier: signer [15155,15161]" dest="identifier: signer [15155,15161]"/>
  <match src="[: [ [3158,3159]" dest="[: [ [3158,3159]"/>
  <match src="[: [ [71915,71916]" dest="[: [ [71922,71923]"/>
  <match src="identifier: noCheaters [65730,65740]" dest="identifier: noCheaters [65737,65747]"/>
  <match src="(: ( [65927,65928]" dest="(: ( [65934,65935]"/>
  <match src="identifier: quantity [49559,49567]" dest="identifier: quantity [49559,49567]"/>
  <match src="if: if [14948,14950]" dest="if: if [14948,14950]"/>
  <match src="yul_decimal_number: 27 [13052,13054]" dest="yul_decimal_number: 27 [13052,13054]"/>
  <match src="identifier: hash [15699,15703]" dest="identifier: hash [15699,15703]"/>
  <match src="(: ( [64035,64036]" dest="(: ( [64042,64043]"/>
  <match src="identifier: initialized [61644,61655]" dest="identifier: initialized [61651,61662]"/>
  <match src="): ) [65978,65979]" dest="): ) [65985,65986]"/>
  <match src="type_cast_expression [14995,15005]" dest="type_cast_expression [14995,15005]"/>
  <match src=".: . [69501,69502]" dest=".: . [69508,69509]"/>
  <match src="identifier: commoners [72016,72025]" dest="identifier: commoners [72023,72032]"/>
  <match src="=: = [71115,71116]" dest="=: = [71122,71123]"/>
  <match src="identifier: head [79122,79126]" dest="identifier: head [79129,79133]"/>
  <match src="number_literal: 0 [68145,68146]" dest="number_literal: 0 [68152,68153]"/>
  <match src=".: . [80081,80082]" dest=".: . [80088,80089]"/>
  <match src="uint256: uint256 [38800,38807]" dest="uint256: uint256 [38800,38807]"/>
  <match src="type_name [65091,65098]" dest="type_name [65098,65105]"/>
  <match src="internal: internal [57055,57063]" dest="internal: internal [57055,57063]"/>
  <match src="expression_statement [77585,77635]" dest="expression_statement [77592,77642]"/>
  <match src="call_argument [30909,30947]" dest="call_argument [30909,30947]"/>
  <match src="identifier: IDogewoodForCommonerSale [66002,66026]" dest="identifier: IDogewoodForCommonerSale [66009,66033]"/>
  <match src="{: { [66238,66239]" dest="{: { [66245,66246]"/>
  <match src="binary_expression [74484,74514]" dest="binary_expression [74491,74521]"/>
  <match src="identifier: id_ [74484,74487]" dest="identifier: id_ [74491,74494]"/>
  <match src="type_name [13439,13451]" dest="type_name [13439,13451]"/>
  <match src="variable_declaration_statement [6504,6525]" dest="variable_declaration_statement [6504,6525]"/>
  <match src="): ) [59827,59828]" dest="): ) [59834,59835]"/>
  <match src="): ) [63549,63550]" dest="): ) [63556,63557]"/>
  <match src="primitive_type [45581,45588]" dest="primitive_type [45581,45588]"/>
  <match src="call_argument [69515,69525]" dest="call_argument [69522,69532]"/>
  <match src="yul_evm_builtin [10761,10766]" dest="yul_evm_builtin [10761,10766]"/>
  <match src="identifier: block [79009,79014]" dest="identifier: block [79016,79021]"/>
  <match src="]: ] [62396,62397]" dest="]: ] [62403,62404]"/>
  <match src="primitive_type [63928,63935]" dest="primitive_type [63935,63942]"/>
  <match src=",: , [63265,63266]" dest=",: , [63272,63273]"/>
  <match src="(: ( [1368,1369]" dest="(: ( [1368,1369]"/>
  <match src="identifier: tokenId [20167,20174]" dest="identifier: tokenId [20167,20174]"/>
  <match src="identifier: startTimestamp [48616,48630]" dest="identifier: startTimestamp [48616,48630]"/>
  <match src="binary_expression [65407,65429]" dest="binary_expression [65414,65436]"/>
  <match src="inline_array_expression [62453,62471]" dest="inline_array_expression [62460,62478]"/>
  <match src="augmented_assignment_expression [77727,77738]" dest="augmented_assignment_expression [77734,77745]"/>
  <match src="identifier: _name [42402,42407]" dest="identifier: _name [42402,42407]"/>
  <match src="identifier: owner [39877,39882]" dest="identifier: owner [39877,39882]"/>
  <match src="): ) [66183,66184]" dest="): ) [66190,66191]"/>
  <match src="primitive_type [5567,5574]" dest="primitive_type [5567,5574]"/>
  <match src="type_cast_expression [48099,48109]" dest="type_cast_expression [48099,48109]"/>
  <match src="identifier: owner [39663,39668]" dest="identifier: owner [39663,39668]"/>
  <match src="solidity: solidity [7,15]" dest="solidity: solidity [7,15]"/>
  <match src="): ) [64068,64069]" dest="): ) [64075,64076]"/>
  <match src="call_expression [77347,77384]" dest="call_expression [77354,77391]"/>
  <match src="(: ( [52076,52077]" dest="(: ( [52076,52077]"/>
  <match src="parenthesized_expression [8856,8894]" dest="parenthesized_expression [8856,8894]"/>
  <match src="primitive_type [10141,10148]" dest="primitive_type [10141,10148]"/>
  <match src="type_name [20777,20784]" dest="type_name [20777,20784]"/>
  <match src="(: ( [48098,48099]" dest="(: ( [48098,48099]"/>
  <match src="yul_function_call [32870,32889]" dest="yul_function_call [32870,32889]"/>
  <match src="array_access [61806,61822]" dest="array_access [61813,61829]"/>
  <match src=",: , [79197,79198]" dest=",: , [79204,79205]"/>
  <match src="primitive_type [18197,18201]" dest="primitive_type [18197,18201]"/>
  <match src="primitive_type [64459,64466]" dest="primitive_type [64466,64473]"/>
  <match src="primitive_type [30976,30981]" dest="primitive_type [30976,30981]"/>
  <match src="indexed: indexed [18497,18504]" dest="indexed: indexed [18497,18504]"/>
  <match src="parameter [22909,22924]" dest="parameter [22909,22924]"/>
  <match src="public: public [43865,43871]" dest="public: public [43865,43871]"/>
  <match src="(: ( [39790,39791]" dest="(: ( [39790,39791]"/>
  <match src="identifier: require [80868,80875]" dest="identifier: require [80875,80882]"/>
  <match src="return_statement [43995,44027]" dest="return_statement [43995,44027]"/>
  <match src="uint8: uint8 [76433,76438]" dest="uint8: uint8 [76440,76445]"/>
  <match src="identifier: palette [72845,72852]" dest="identifier: palette [72852,72859]"/>
  <match src="(: ( [52747,52748]" dest="(: ( [52747,52748]"/>
  <match src="binary_expression [69156,69198]" dest="binary_expression [69163,69205]"/>
  <match src="type_name [3237,3244]" dest="type_name [3237,3244]"/>
  <match src="number_literal: 153 [63331,63334]" dest="number_literal: 153 [63338,63341]"/>
  <match src="binary_expression [77117,77130]" dest="binary_expression [77124,77137]"/>
  <match src="contract_body [4735,5030]" dest="contract_body [4735,5030]"/>
  <match src="]: ] [1755,1756]" dest="]: ] [1755,1756]"/>
  <match src="number_literal: 0xFFFF [77207,77213]" dest="number_literal: 0xFFFF [77214,77220]"/>
  <match src="type_name [75412,75430]" dest="type_name [75419,75437]"/>
  <match src=",: , [63139,63140]" dest=",: , [63146,63147]"/>
  <match src="variable_declaration [74848,74857]" dest="variable_declaration [74855,74864]"/>
  <match src="!: ! [41163,41164]" dest="!: ! [41163,41164]"/>
  <match src="parameter [1877,1888]" dest="parameter [1877,1888]"/>
  <match src="mload: mload [10819,10824]" dest="mload: mload [10819,10824]"/>
  <match src="identifier: startTokenId [74412,74424]" dest="identifier: startTokenId [74419,74431]"/>
  <match src=".: . [80618,80619]" dest=".: . [80625,80626]"/>
  <match src=",: , [78727,78728]" dest=",: , [78734,78735]"/>
  <match src="call_argument [49541,49543]" dest="call_argument [49541,49543]"/>
  <match src="augmented_assignment_expression [6616,6626]" dest="augmented_assignment_expression [6616,6626]"/>
  <match src="augmented_assignment_expression [7792,7803]" dest="augmented_assignment_expression [7792,7803]"/>
  <match src="identifier: AddressData [37569,37580]" dest="identifier: AddressData [37569,37580]"/>
  <match src="[: [ [62325,62326]" dest="[: [ [62332,62333]"/>
  <match src="uint256: uint256 [3860,3867]" dest="uint256: uint256 [3860,3867]"/>
  <match src="identifier: commoners [73708,73717]" dest="identifier: commoners [73715,73724]"/>
  <match src="returns: returns [33769,33776]" dest="returns: returns [33769,33776]"/>
  <match src="identifier: nextSlot [51429,51437]" dest="identifier: nextSlot [51429,51437]"/>
  <match src="identifier: sender [61541,61547]" dest="identifier: sender [61548,61554]"/>
  <match src="]: ] [62598,62599]" dest="]: ] [62605,62606]"/>
  <match src="): ) [11320,11321]" dest="): ) [11320,11321]"/>
  <match src="variable_declaration_statement [67440,67502]" dest="variable_declaration_statement [67447,67509]"/>
  <match src="&quot;: &quot; [29314,29315]" dest="&quot;: &quot; [29314,29315]"/>
  <match src="(: ( [5491,5492]" dest="(: ( [5491,5492]"/>
  <match src=",: , [18529,18530]" dest=",: , [18529,18530]"/>
  <match src="primitive_type [5199,5204]" dest="primitive_type [5199,5204]"/>
  <match src="call_argument [13472,13476]" dest="call_argument [13472,13476]"/>
  <match src="call_argument [54620,54627]" dest="call_argument [54620,54627]"/>
  <match src="array_access [70756,70779]" dest="array_access [70763,70786]"/>
  <match src="call_argument [77133,77134]" dest="call_argument [77140,77141]"/>
  <match src="assignment_expression [48540,48575]" dest="assignment_expression [48540,48575]"/>
  <match src="&quot;: &quot; [39622,39623]" dest="&quot;: &quot; [39622,39623]"/>
  <match src="): ) [17289,17290]" dest="): ) [17289,17290]"/>
  <match src="identifier: safeTransferFrom [20088,20104]" dest="identifier: safeTransferFrom [20088,20104]"/>
  <match src="expression_statement [50863,50895]" dest="expression_statement [50863,50895]"/>
  <match src="identifier: mintPrice_ [64639,64649]" dest="identifier: mintPrice_ [64646,64656]"/>
  <match src="primitive_type [3136,3143]" dest="primitive_type [3136,3143]"/>
  <match src="type_name [60734,60741]" dest="type_name [60741,60748]"/>
  <match src="parameter [56979,56989]" dest="parameter [56979,56989]"/>
  <match src="parameter [30799,30825]" dest="parameter [30799,30825]"/>
  <match src="type_name [1484,1491]" dest="type_name [1484,1491]"/>
  <match src="identifier: smithing [73123,73131]" dest="identifier: smithing [73130,73138]"/>
  <match src="uint8: uint8 [1095,1100]" dest="uint8: uint8 [1095,1100]"/>
  <match src="identifier: totalClaimed [58312,58324]" dest="identifier: totalClaimed [58312,58324]"/>
  <match src="(: ( [8620,8621]" dest="(: ( [8620,8621]"/>
  <match src="identifier: commoners [81327,81336]" dest="identifier: commoners [81334,81343]"/>
  <match src="string: string [30799,30805]" dest="string: string [30799,30805]"/>
  <match src="address: address [15647,15654]" dest="address: address [15647,15654]"/>
  <match src="identifier: from [53377,53381]" dest="identifier: from [53377,53381]"/>
  <match src="number_literal: 5 [62460,62461]" dest="number_literal: 5 [62467,62468]"/>
  <match src="primitive_type [36635,36641]" dest="primitive_type [36635,36641]"/>
  <match src="view: view [38786,38790]" dest="view: view [38786,38790]"/>
  <match src="identifier: artStyle [1263,1271]" dest="identifier: artStyle [1263,1271]"/>
  <match src="identifier: from [23808,23812]" dest="identifier: from [23808,23812]"/>
  <match src="call_argument [46254,46256]" dest="call_argument [46254,46256]"/>
  <match src="comment: // OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol) [18210,18269]" dest="comment: // OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol) [18210,18269]"/>
  <match src="call_argument [69174,69183]" dest="call_argument [69181,69190]"/>
  <match src="return: return [78784,78790]" dest="return: return [78791,78797]"/>
  <match src="yul_path [10721,10730]" dest="yul_path [10721,10730]"/>
  <match src="identifier: errorMessage [31791,31803]" dest="identifier: errorMessage [31791,31803]"/>
  <match src="parameter [2444,2454]" dest="parameter [2444,2454]"/>
  <match src="identifier: _msgSender [43576,43586]" dest="identifier: _msgSender [43576,43586]"/>
  <match src="call_argument [16749,16830]" dest="call_argument [16749,16830]"/>
  <match src="identifier: onERC721Received [23746,23762]" dest="identifier: onERC721Received [23746,23762]"/>
  <match src="primitive_type [4500,4507]" dest="primitive_type [4500,4507]"/>
  <match src="identifier: r [12786,12787]" dest="identifier: r [12786,12787]"/>
  <match src="member_expression [15260,15289]" dest="member_expression [15260,15289]"/>
  <match src="call_argument [50553,50560]" dest="call_argument [50553,50560]"/>
  <match src="}: } [7289,7290]" dest="}: } [7289,7290]"/>
  <match src="function_definition [24529,24602]" dest="function_definition [24529,24602]"/>
  <match src="member_expression [71961,71992]" dest="member_expression [71968,71999]"/>
  <match src="): ) [31353,31354]" dest="): ) [31353,31354]"/>
  <match src="[: [ [81070,81071]" dest="[: [ [81077,81078]"/>
  <match src="member_expression [70968,70999]" dest="member_expression [70975,71006]"/>
  <match src="number_literal: 1 [77051,77052]" dest="number_literal: 1 [77058,77059]"/>
  <match src="binary_expression [48737,48760]" dest="binary_expression [48737,48760]"/>
  <match src="}: } [68715,68716]" dest="}: } [68722,68723]"/>
  <match src="(: ( [81423,81424]" dest="(: ( [81430,81431]"/>
  <match src="): ) [69877,69878]" dest="): ) [69884,69885]"/>
  <match src="): ) [11210,11211]" dest="): ) [11210,11211]"/>
  <match src="string_literal [49027,49069]" dest="string_literal [49027,49069]"/>
  <match src="number_literal: 5 [77382,77383]" dest="number_literal: 5 [77389,77390]"/>
  <match src="]: ] [62306,62307]" dest="]: ] [62313,62314]"/>
  <match src="identifier: tokenId [79333,79340]" dest="identifier: tokenId [79340,79347]"/>
  <match src="identifier: returndata [32380,32390]" dest="identifier: returndata [32380,32390]"/>
  <match src="calldata: calldata [81479,81487]" dest="calldata: calldata [81486,81494]"/>
  <match src="identifier: from [46332,46336]" dest="identifier: from [46332,46336]"/>
  <match src="primitive_type [38401,38408]" dest="primitive_type [38401,38408]"/>
  <match src="interface: interface [17749,17758]" dest="interface: interface [17749,17758]"/>
  <match src="function_body [29253,29366]" dest="function_body [29253,29366]"/>
  <match src="(: ( [21542,21543]" dest="(: ( [21542,21543]"/>
  <match src="interface: interface [800,809]" dest="interface: interface [800,809]"/>
  <match src="identifier: topCommoner_ [71810,71822]" dest="identifier: topCommoner_ [71817,71829]"/>
  <match src="number_literal: 7 [77550,77551]" dest="number_literal: 7 [77557,77558]"/>
  <match src="identifier: baseURI [42891,42898]" dest="identifier: baseURI [42891,42898]"/>
  <match src="memory: memory [55723,55729]" dest="memory: memory [55723,55729]"/>
  <match src="identifier: aliases [62538,62545]" dest="identifier: aliases [62545,62552]"/>
  <match src="struct_member [4071,4086]" dest="struct_member [4071,4086]"/>
  <match src="function: function [255,263]" dest="function: function [255,263]"/>
  <match src="type_name [5224,5229]" dest="type_name [5224,5229]"/>
  <match src="expression_statement [72821,72857]" dest="expression_statement [72828,72864]"/>
  <match src="string [27235,27237]" dest="string [27235,27237]"/>
  <match src="binary_expression [65928,65959]" dest="binary_expression [65935,65966]"/>
  <match src="call_expression [45106,45118]" dest="call_expression [45106,45118]"/>
  <match src="}: } [64919,64920]" dest="}: } [64926,64927]"/>
  <match src="binary_expression [14952,14959]" dest="binary_expression [14952,14959]"/>
  <match src="[: [ [80333,80334]" dest="[: [ [80340,80341]"/>
  <match src="identifier: quantity_ [74505,74514]" dest="identifier: quantity_ [74512,74521]"/>
  <match src="): ) [29772,29773]" dest="): ) [29772,29773]"/>
  <match src="identifier: dogeClaimed [58825,58836]" dest="identifier: dogeClaimed [58832,58843]"/>
  <match src="comment: // [0.5, 0.3, 0.15, 0.05] [63341,63366]" dest="comment: // [0.5, 0.3, 0.15, 0.05] [63348,63373]"/>
  <match src="user_defined_type [51406,51420]" dest="user_defined_type [51406,51420]"/>
  <match src="identifier: ITraits [59158,59165]" dest="identifier: ITraits [59165,59172]"/>
  <match src="number_literal: 0 [62207,62208]" dest="number_literal: 0 [62214,62215]"/>
  <match src="function_definition [1545,1626]" dest="function_definition [1545,1626]"/>
  <match src="variable_declaration [50955,50986]" dest="variable_declaration [50955,50986]"/>
  <match src="call_argument [45160,45164]" dest="call_argument [45160,45164]"/>
  <match src="type_name [65867,65873]" dest="type_name [65874,65880]"/>
  <match src="identifier: clothes [81129,81136]" dest="identifier: clothes [81136,81143]"/>
  <match src="string [43532,43558]" dest="string [43532,43558]"/>
  <match src="array_access [61125,61141]" dest="array_access [61132,61148]"/>
  <match src="primitive_type [48953,48960]" dest="primitive_type [48953,48960]"/>
  <match src="(: ( [64338,64339]" dest="(: ( [64345,64346]"/>
  <match src="/=: /= [6621,6623]" dest="/=: /= [6621,6623]"/>
  <match src="identifier: operator [23781,23789]" dest="identifier: operator [23781,23789]"/>
  <match src="function: function [3475,3483]" dest="function: function [3475,3483]"/>
  <match src="): ) [27201,27202]" dest="): ) [27201,27202]"/>
  <match src="identifier: coolBlocks [59085,59095]" dest="identifier: coolBlocks [59092,59102]"/>
  <match src="variable_declaration [15666,15684]" dest="variable_declaration [15666,15684]"/>
  <match src="(: ( [55817,55818]" dest="(: ( [55817,55818]"/>
  <match src="yul_path [12944,12946]" dest="yul_path [12944,12946]"/>
  <match src="): ) [42500,42501]" dest="): ) [42500,42501]"/>
  <match src="string_literal [46199,46224]" dest="string_literal [46199,46224]"/>
  <match src="uint256: uint256 [4389,4396]" dest="uint256: uint256 [4389,4396]"/>
  <match src="expression_statement [77251,77301]" dest="expression_statement [77258,77308]"/>
  <match src="parameter [81424,81440]" dest="parameter [81431,81447]"/>
  <match src="string [46973,46975]" dest="string [46973,46975]"/>
  <match src="number_literal: 6 [62698,62699]" dest="number_literal: 6 [62705,62706]"/>
  <match src="string_literal [47984,48005]" dest="string_literal [47984,48005]"/>
  <match src="(: ( [54557,54558]" dest="(: ( [54557,54558]"/>
  <match src="member_expression [41741,41755]" dest="member_expression [41741,41755]"/>
  <match src="number_literal: 27 [14957,14959]" dest="number_literal: 27 [14957,14959]"/>
  <match src="virtual: virtual [33761,33768]" dest="virtual: virtual [33761,33768]"/>
  <match src="}: } [41913,41914]" dest="}: } [41913,41914]"/>
  <match src="): ) [28619,28620]" dest="): ) [28619,28620]"/>
  <match src="(: ( [80614,80615]" dest="(: ( [80621,80622]"/>
  <match src="identifier: s [78323,78324]" dest="identifier: s [78330,78331]"/>
  <match src="identifier: totalClaimed [67083,67095]" dest="identifier: totalClaimed [67090,67102]"/>
  <match src="uint256: uint256 [78717,78724]" dest="uint256: uint256 [78724,78731]"/>
  <match src="view: view [1355,1359]" dest="view: view [1355,1359]"/>
  <match src="identifier: traitType [76516,76525]" dest="identifier: traitType [76523,76532]"/>
  <match src="parameter [1890,1903]" dest="parameter [1890,1903]"/>
  <match src="identifier: v [13100,13101]" dest="identifier: v [13100,13101]"/>
  <match src="variable_declaration [51358,51377]" dest="variable_declaration [51358,51377]"/>
  <match src="number_literal: 0 [15256,15257]" dest="number_literal: 0 [15256,15257]"/>
  <match src="identifier: ERC165 [34511,34517]" dest="identifier: ERC165 [34511,34517]"/>
  <match src="bytes: bytes [30771,30776]" dest="bytes: bytes [30771,30776]"/>
  <match src="}: } [57890,57891]" dest="}: } [57890,57891]"/>
  <match src="call_expression [65453,65483]" dest="call_expression [65460,65490]"/>
  <match src="): ) [63855,63856]" dest="): ) [63862,63863]"/>
  <match src=",: , [1824,1825]" dest=",: , [1824,1825]"/>
  <match src="type_name [64821,64828]" dest="type_name [64828,64835]"/>
  <match src=",: , [67493,67494]" dest=",: , [67500,67501]"/>
  <match src="{: { [39550,39551]" dest="{: { [39550,39551]"/>
  <match src="address: address [30746,30753]" dest="address: address [30746,30753]"/>
  <match src=",: , [17346,17347]" dest=",: , [17346,17347]"/>
  <match src="primitive_type [80752,80757]" dest="primitive_type [80759,80764]"/>
  <match src="&quot;: &quot; [45379,45380]" dest="&quot;: &quot; [45379,45380]"/>
  <match src="function_body [65261,65491]" dest="function_body [65268,65498]"/>
  <match src="view: view [19108,19112]" dest="view: view [19108,19112]"/>
  <match src="uint8: uint8 [12893,12898]" dest="uint8: uint8 [12893,12898]"/>
  <match src="return: return [15240,15246]" dest="return: return [15240,15246]"/>
  <match src="): ) [10907,10908]" dest="): ) [10907,10908]"/>
  <match src="(: ( [76494,76495]" dest="(: ( [76501,76502]"/>
  <match src="view: view [22227,22231]" dest="view: view [22227,22231]"/>
  <match src="identifier: data [29185,29189]" dest="identifier: data [29185,29189]"/>
  <match src="identifier: msg [61146,61149]" dest="identifier: msg [61153,61156]"/>
  <match src="comment: // Look for revert reason and bubble it up if present [32561,32614]" dest="comment: // Look for revert reason and bubble it up if present [32561,32614]"/>
  <match src="): ) [65299,65300]" dest="): ) [65306,65307]"/>
  <match src=",: , [3149,3150]" dest=",: , [3149,3150]"/>
  <match src="): ) [58891,58892]" dest="): ) [58898,58899]"/>
  <match src="call_argument [80388,80406]" dest="call_argument [80395,80413]"/>
  <match src="function: function [49830,49838]" dest="function: function [49830,49838]"/>
  <match src="identifier: mintActive [68298,68308]" dest="identifier: mintActive [68305,68315]"/>
  <match src="external: external [24385,24393]" dest="external: external [24385,24393]"/>
  <match src="address: address [35939,35946]" dest="address: address [35939,35946]"/>
  <match src="identifier: i [65900,65901]" dest="identifier: i [65907,65908]"/>
  <match src="primitive_type [14995,15002]" dest="primitive_type [14995,15002]"/>
  <match src="identifier: s [78205,78206]" dest="identifier: s [78212,78213]"/>
  <match src="type_name [49946,49960]" dest="type_name [49946,49960]"/>
  <match src="primitive_type [39135,39141]" dest="primitive_type [39135,39141]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a delegate call.      *      * _Available since v3.4._      */ [31111,31284]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a delegate call.      *      * _Available since v3.4._      */ [31111,31284]"/>
  <match src="call_argument [54558,54559]" dest="call_argument [54558,54559]"/>
  <match src="struct_member [36635,36655]" dest="struct_member [36635,36655]"/>
  <match src="payable_conversion_expression [63867,63918]" dest="payable_conversion_expression [63874,63925]"/>
  <match src="): ) [42898,42899]" dest="): ) [42898,42899]"/>
  <match src="=&gt;: =&gt; [37805,37807]" dest="=&gt;: =&gt; [37805,37807]"/>
  <match src=",: , [5766,5767]" dest=",: , [5766,5767]"/>
  <match src="(: ( [63519,63520]" dest="(: ( [63526,63527]"/>
  <match src="function: function [1786,1794]" dest="function: function [1786,1794]"/>
  <match src="block_statement [56035,56120]" dest="block_statement [56035,56120]"/>
  <match src="): ) [63917,63918]" dest="): ) [63924,63925]"/>
  <match src="(: ( [49243,49244]" dest="(: ( [49243,49244]"/>
  <match src="member_expression [55781,55817]" dest="member_expression [55781,55817]"/>
  <match src="call_argument [48969,48983]" dest="call_argument [48969,48983]"/>
  <match src=",: , [8349,8350]" dest=",: , [8349,8350]"/>
  <match src="(: ( [67755,67756]" dest="(: ( [67762,67763]"/>
  <match src=".: . [42147,42148]" dest=".: . [42147,42148]"/>
  <match src="identifier: doge [4350,4354]" dest="identifier: doge [4350,4354]"/>
  <match src="identifier: require [78978,78985]" dest="identifier: require [78985,78992]"/>
  <match src="return_statement [79995,80058]" dest="return_statement [80002,80065]"/>
  <match src="identifier: account [25785,25792]" dest="identifier: account [25785,25792]"/>
  <match src="(: ( [30888,30889]" dest="(: ( [30888,30889]"/>
  <match src="type_name [78717,78724]" dest="type_name [78724,78731]"/>
  <match src="binary_expression [7697,7711]" dest="binary_expression [7697,7711]"/>
  <match src="number_literal: 0 [62213,62214]" dest="number_literal: 0 [62220,62221]"/>
  <match src="identifier: getGenesisSupply [1398,1414]" dest="identifier: getGenesisSupply [1398,1414]"/>
  <match src="call_argument [69260,69301]" dest="call_argument [69267,69308]"/>
  <match src="identifier: abi [42921,42924]" dest="identifier: abi [42921,42924]"/>
  <match src="call_argument [13481,13483]" dest="call_argument [13481,13483]"/>
  <match src="memory: memory [24415,24421]" dest="memory: memory [24415,24421]"/>
  <match src="primitive_type [1814,1821]" dest="primitive_type [1814,1821]"/>
  <match src="call_argument [30111,30123]" dest="call_argument [30111,30123]"/>
  <match src="address: address [28534,28541]" dest="address: address [28534,28541]"/>
  <match src="): ) [19137,19138]" dest="): ) [19137,19138]"/>
  <match src="identifier: from [18505,18509]" dest="identifier: from [18505,18509]"/>
  <match src="primitive_type [29983,29987]" dest="primitive_type [29983,29987]"/>
  <match src="number_literal: 16 [77238,77240]" dest="number_literal: 16 [77245,77247]"/>
  <match src="string_literal [66777,66795]" dest="string_literal [66784,66802]"/>
  <match src="function_body [38196,38223]" dest="function_body [38196,38223]"/>
  <match src="public: public [34647,34653]" dest="public: public [34647,34653]"/>
  <match src="identifier: noCheaters [66730,66740]" dest="identifier: noCheaters [66737,66747]"/>
  <match src="address: address [64704,64711]" dest="address: address [64711,64718]"/>
  <match src="parameter [81442,81454]" dest="parameter [81449,81461]"/>
  <match src="[: [ [48601,48602]" dest="[: [ [48601,48602]"/>
  <match src="expression_statement [68630,68661]" dest="expression_statement [68637,68668]"/>
  <match src="): ) [70125,70126]" dest="): ) [70132,70133]"/>
  <match src="identifier: hash [13094,13098]" dest="identifier: hash [13094,13098]"/>
  <match src="identifier: treat_ [61900,61906]" dest="identifier: treat_ [61907,61913]"/>
  <match src=",: , [45570,45571]" dest=",: , [45570,45571]"/>
  <match src="identifier: symbol [24376,24382]" dest="identifier: symbol [24376,24382]"/>
  <match src="number_literal: 10 [59653,59655]" dest="number_literal: 10 [59660,59662]"/>
  <match src="identifier: RecoverError [15007,15019]" dest="identifier: RecoverError [15007,15019]"/>
  <match src="variable_declaration [30962,30974]" dest="variable_declaration [30962,30974]"/>
  <match src="enum_value: InvalidSignatureV [8360,8377]" dest="enum_value: InvalidSignatureV [8360,8377]"/>
  <match src="assignment_expression [70968,71004]" dest="assignment_expression [70975,71011]"/>
  <match src="contract_body [3017,3082]" dest="contract_body [3017,3082]"/>
  <match src="parameter [5800,5816]" dest="parameter [5800,5816]"/>
  <match src="address: address [54144,54151]" dest="address: address [54144,54151]"/>
  <match src="private: private [37582,37589]" dest="private: private [37582,37589]"/>
  <match src="call_struct_argument [79122,79151]" dest="call_struct_argument [79129,79158]"/>
  <match src="revert: revert [43656,43662]" dest="revert: revert [43656,43662]"/>
  <match src="expression_statement [48077,48139]" dest="expression_statement [48077,48139]"/>
  <match src="type_name [64250,64257]" dest="type_name [64257,64264]"/>
  <match src="call_expression [42857,42867]" dest="call_expression [42857,42867]"/>
  <match src="block_statement [74523,74662]" dest="block_statement [74530,74669]"/>
  <match src="primitive_type [4119,4126]" dest="primitive_type [4119,4126]"/>
  <match src=",: , [1875,1876]" dest=",: , [1875,1876]"/>
  <match src="]: ] [81073,81074]" dest="]: ] [81080,81081]"/>
  <match src="if: if [69115,69117]" dest="if: if [69122,69124]"/>
  <match src="parameter [3237,3249]" dest="parameter [3237,3249]"/>
  <match src="function: function [21522,21530]" dest="function: function [21522,21530]"/>
  <match src="uint256: uint256 [3523,3530]" dest="uint256: uint256 [3523,3530]"/>
  <match src="primitive_type [15626,15633]" dest="primitive_type [15626,15633]"/>
  <match src="(: ( [8856,8857]" dest="(: ( [8856,8857]"/>
  <match src="primitive_type [80708,80713]" dest="primitive_type [80715,80720]"/>
  <match src="visibility [57055,57063]" dest="visibility [57055,57063]"/>
  <match src="inline_array_expression [62331,62355]" dest="inline_array_expression [62338,62362]"/>
  <match src="comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [26091,27012]" dest="comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [26091,27012]"/>
  <match src="primitive_type [5326,5331]" dest="primitive_type [5326,5331]"/>
  <match src="parameter [63992,64006]" dest="parameter [63999,64013]"/>
  <match src="+=: += [66391,66393]" dest="+=: += [66398,66400]"/>
  <match src="): ) [59076,59077]" dest="): ) [59083,59084]"/>
  <match src="-: - [39000,39001]" dest="-: - [39000,39001]"/>
  <match src="): ) [44257,44258]" dest="): ) [44257,44258]"/>
  <match src="binary_expression [64036,64055]" dest="binary_expression [64043,64062]"/>
  <match src="(: ( [32972,32973]" dest="(: ( [32972,32973]"/>
  <match src="address: address [3310,3317]" dest="address: address [3310,3317]"/>
  <match src="visibility [17259,17267]" dest="visibility [17259,17267]"/>
  <match src="comment: // - case 65: r,s,v signature (standard) [10275,10315]" dest="comment: // - case 65: r,s,v signature (standard) [10275,10315]"/>
  <match src="uint256: uint256 [3151,3158]" dest="uint256: uint256 [3151,3158]"/>
  <match src="parameter [40883,40898]" dest="parameter [40883,40898]"/>
  <match src="): ) [46356,46357]" dest="): ) [46356,46357]"/>
  <match src="address: address [3848,3855]" dest="address: address [3848,3855]"/>
  <match src=".: . [77503,77504]" dest=".: . [77510,77511]"/>
  <match src="identifier: id [78725,78727]" dest="identifier: id [78732,78734]"/>
  <match src="identifier: _mintCommoners [66418,66432]" dest="identifier: _mintCommoners [66425,66439]"/>
  <match src="): ) [75473,75474]" dest="): ) [75480,75481]"/>
  <match src=",: , [13790,13791]" dest=",: , [13790,13791]"/>
  <match src="comment: // For miscellaneous variable(s) pertaining to the address [36771,36829]" dest="comment: // For miscellaneous variable(s) pertaining to the address [36771,36829]"/>
  <match src="binary_expression [65760,65775]" dest="binary_expression [65767,65782]"/>
  <match src="identifier: tokenId [5917,5924]" dest="identifier: tokenId [5917,5924]"/>
  <match src="type_name [15626,15633]" dest="type_name [15626,15633]"/>
  <match src="call_argument [68106,68116]" dest="call_argument [68113,68123]"/>
  <match src="identifier: curr [41048,41052]" dest="identifier: curr [41048,41052]"/>
  <match src="contract: contract [34502,34510]" dest="contract: contract [34502,34510]"/>
  <match src="identifier: v [14963,14964]" dest="identifier: v [14963,14964]"/>
  <match src="struct_member [36972,36983]" dest="struct_member [36972,36983]"/>
  <match src="call_argument [47476,47478]" dest="call_argument [47476,47478]"/>
  <match src="(: ( [41020,41021]" dest="(: ( [41020,41021]"/>
  <match src="identifier: cooking [72263,72270]" dest="identifier: cooking [72270,72277]"/>
  <match src="identifier: add [64953,64956]" dest="identifier: add [64960,64963]"/>
  <match src=".: . [77087,77088]" dest=".: . [77094,77095]"/>
  <match src="memory: memory [28178,28184]" dest="memory: memory [28178,28184]"/>
  <match src="type_name [1685,1691]" dest="type_name [1685,1691]"/>
  <match src="(: ( [22240,22241]" dest="(: ( [22240,22241]"/>
  <match src="function_definition [64802,64920]" dest="function_definition [64809,64927]"/>
  <match src="parameter [57796,57806]" dest="parameter [57796,57806]"/>
  <match src="identifier: safe [47876,47880]" dest="identifier: safe [47876,47880]"/>
  <match src="visibility [27080,27088]" dest="visibility [27080,27088]"/>
  <match src="type_name [3273,3280]" dest="type_name [3273,3280]"/>
  <match src="parameter [61462,61479]" dest="parameter [61469,61486]"/>
  <match src="identifier: offhand [1896,1903]" dest="identifier: offhand [1896,1903]"/>
  <match src="}: } [54783,54784]" dest="}: } [54783,54784]"/>
  <match src="function_body [78772,78820]" dest="function_body [78779,78827]"/>
  <match src="internal: internal [52094,52102]" dest="internal: internal [52094,52102]"/>
  <match src="identifier: mintPrice [60477,60486]" dest="identifier: mintPrice [60484,60493]"/>
  <match src="function: function [52380,52388]" dest="function: function [52380,52388]"/>
  <match src="function: function [3414,3422]" dest="function: function [3414,3422]"/>
  <match src="]: ] [72152,72153]" dest="]: ] [72159,72160]"/>
  <match src="(: ( [48449,48450]" dest="(: ( [48449,48450]"/>
  <match src="if_statement [51674,51848]" dest="if_statement [51674,51848]"/>
  <match src="address: address [42208,42215]" dest="address: address [42208,42215]"/>
  <match src="identifier: balanceOf [3227,3236]" dest="identifier: balanceOf [3227,3236]"/>
  <match src="primitive_type [37797,37804]" dest="primitive_type [37797,37804]"/>
  <match src="mapping: mapping [59050,59057]" dest="mapping: mapping [59057,59064]"/>
  <match src="primitive_type [34685,34689]" dest="primitive_type [34685,34689]"/>
  <match src="function_body [42217,42248]" dest="function_body [42217,42248]"/>
  <match src="external: external [1617,1625]" dest="external: external [1617,1625]"/>
  <match src="(: ( [63467,63468]" dest="(: ( [63474,63475]"/>
  <match src="}: } [15358,15359]" dest="}: } [15358,15359]"/>
  <match src="parameter [67756,67771]" dest="parameter [67763,67778]"/>
  <match src="&quot;: &quot; [31480,31481]" dest="&quot;: &quot; [31480,31481]"/>
  <match src="return_statement [17302,17378]" dest="return_statement [17302,17378]"/>
  <match src="number_literal: 10 [74979,74981]" dest="number_literal: 10 [74986,74988]"/>
  <match src="identifier: id [3808,3810]" dest="identifier: id [3808,3810]"/>
  <match src="variable_declaration [10993,11003]" dest="variable_declaration [10993,11003]"/>
  <match src="): ) [18753,18754]" dest="): ) [18753,18754]"/>
  <match src="identifier: IERC721Metadata [35852,35867]" dest="identifier: IERC721Metadata [35852,35867]"/>
  <match src="visibility [58710,58716]" dest="visibility [58717,58723]"/>
  <match src="string: string [43279,43285]" dest="string: string [43279,43285]"/>
  <match src="type_name [1570,1577]" dest="type_name [1570,1577]"/>
  <match src=",: , [23838,23839]" dest=",: , [23838,23839]"/>
  <match src="assignment_expression [71246,71281]" dest="assignment_expression [71253,71288]"/>
  <match src=".: . [40641,40642]" dest=".: . [40641,40642]"/>
  <match src="): ) [42382,42383]" dest="): ) [42382,42383]"/>
  <match src="type_name [5274,5279]" dest="type_name [5274,5279]"/>
  <match src="(: ( [38774,38775]" dest="(: ( [38774,38775]"/>
  <match src=",: , [62822,62823]" dest=",: , [62829,62830]"/>
  <match src="identifier: tokenNo_ [68874,68882]" dest="identifier: tokenNo_ [68881,68889]"/>
  <match src="comment: // Counter underflow is impossible as _currentIndex does not decrement, [38820,38891]" dest="comment: // Counter underflow is impossible as _currentIndex does not decrement, [38820,38891]"/>
  <match src="struct_member [60410,60429]" dest="struct_member [60417,60436]"/>
  <match src="identifier: tokenId [79880,79887]" dest="identifier: tokenId [79887,79894]"/>
  <match src="expression_statement [27100,27174]" dest="expression_statement [27100,27174]"/>
  <match src="primitive_type [42732,42738]" dest="primitive_type [42732,42738]"/>
  <match src=",: , [79247,79248]" dest=",: , [79254,79255]"/>
  <match src="identifier: tokenId [79282,79289]" dest="identifier: tokenId [79289,79296]"/>
  <match src="identifier: transferFrom [44955,44967]" dest="identifier: transferFrom [44955,44967]"/>
  <match src="parameter [28135,28152]" dest="parameter [28135,28152]"/>
  <match src="): ) [48991,48992]" dest="): ) [48991,48992]"/>
  <match src="(: ( [64200,64201]" dest="(: ( [64207,64208]"/>
  <match src="identifier: dogeClaimed [66261,66272]" dest="identifier: dogeClaimed [66268,66279]"/>
  <match src="identifier: isContract [46284,46294]" dest="identifier: isContract [46284,46294]"/>
  <match src="variable_declaration_tuple [12329,12368]" dest="variable_declaration_tuple [12329,12368]"/>
  <match src="uint64: uint64 [53694,53700]" dest="uint64: uint64 [53694,53700]"/>
  <match src="member_expression [67129,67138]" dest="member_expression [67136,67145]"/>
  <match src="type_name [646,652]" dest="type_name [646,652]"/>
  <match src="identifier: from [57781,57785]" dest="identifier: from [57781,57785]"/>
  <match src="=: = [27203,27204]" dest="=: = [27203,27204]"/>
  <match src="binary_expression [52638,52715]" dest="binary_expression [52638,52715]"/>
  <match src="(: ( [77192,77193]" dest="(: ( [77199,77200]"/>
  <match src="identifier: mintQuantity_ [64445,64458]" dest="identifier: mintQuantity_ [64452,64465]"/>
  <match src="bytes32: bytes32 [16109,16116]" dest="bytes32: bytes32 [16109,16116]"/>
  <match src="identifier: accessory [81161,81170]" dest="identifier: accessory [81168,81177]"/>
  <match src="function_definition [3114,3184]" dest="function_definition [3114,3184]"/>
  <match src="memory: memory [29747,29753]" dest="memory: memory [29747,29753]"/>
  <match src="comment: // updatedIndex overflows if _currentIndex + quantity &gt; 1.2e77 (2**256) - 1 [48305,48380]" dest="comment: // updatedIndex overflows if _currentIndex + quantity &gt; 1.2e77 (2**256) - 1 [48305,48380]"/>
  <match src="variable_declaration_statement [10523,10531]" dest="variable_declaration_statement [10523,10531]"/>
  <match src="event_definition [18666,18755]" dest="event_definition [18666,18755]"/>
  <match src="]: ] [76471,76472]" dest="]: ] [76478,76479]"/>
  <match src=",: , [52930,52931]" dest=",: , [52930,52931]"/>
  <match src="}: } [43760,43761]" dest="}: } [43760,43761]"/>
  <match src="&quot;: &quot; [48062,48063]" dest="&quot;: &quot; [48062,48063]"/>
  <match src="identifier: getRandom [4751,4760]" dest="identifier: getRandom [4751,4760]"/>
  <match src="type_name [10499,10506]" dest="type_name [10499,10506]"/>
  <match src=",: , [66687,66688]" dest=",: , [66694,66695]"/>
  <match src=",: , [62832,62833]" dest=",: , [62839,62840]"/>
  <match src="number_literal: 76 [62426,62428]" dest="number_literal: 76 [62433,62435]"/>
  <match src="block_statement [48806,49284]" dest="block_statement [48806,49284]"/>
  <match src="type_name [64704,64711]" dest="type_name [64711,64718]"/>
  <match src="do: do [70072,70074]" dest="do: do [70079,70081]"/>
  <match src="primitive_type [1747,1754]" dest="primitive_type [1747,1754]"/>
  <match src="expression_statement [74090,74127]" dest="expression_statement [74097,74134]"/>
  <match src="): ) [78811,78812]" dest="): ) [78818,78819]"/>
  <match src=",: , [48875,48876]" dest=",: , [48875,48876]"/>
  <match src="}: } [3081,3082]" dest="}: } [3081,3082]"/>
  <match src="function_definition [38753,39036]" dest="function_definition [38753,39036]"/>
  <match src="call_argument [51956,51958]" dest="call_argument [51956,51958]"/>
  <match src="comment: // Underflow of the sender's balance is impossible because we check for [53047,53118]" dest="comment: // Underflow of the sender's balance is impossible because we check for [53047,53118]"/>
  <match src="function_definition [3024,3079]" dest="function_definition [3024,3079]"/>
  <match src="comment: // Token name [37164,37177]" dest="comment: // Token name [37164,37177]"/>
  <match src="function_definition [45501,45686]" dest="function_definition [45501,45686]"/>
  <match src=",: , [15005,15006]" dest=",: , [15005,15006]"/>
  <match src="identifier: tokenNo_ [69355,69363]" dest="identifier: tokenNo_ [69362,69370]"/>
  <match src="(: ( [65817,65818]" dest="(: ( [65824,65825]"/>
  <match src="primitive_type [25777,25784]" dest="primitive_type [25777,25784]"/>
  <match src="(: ( [76347,76348]" dest="(: ( [76354,76355]"/>
  <match src="primitive_type [5555,5562]" dest="primitive_type [5555,5562]"/>
  <match src="true: true [63572,63576]" dest="true: true [63579,63583]"/>
  <match src="bytes: bytes [31749,31754]" dest="bytes: bytes [31749,31754]"/>
  <match src="revert_statement [47977,48007]" dest="revert_statement [47977,48007]"/>
  <match src="[: [ [72082,72083]" dest="[: [ [72089,72090]"/>
  <match src="): ) [65018,65019]" dest="): ) [65025,65026]"/>
  <match src="]: ] [50880,50881]" dest="]: ] [50880,50881]"/>
  <match src=",: , [67914,67915]" dest=",: , [67921,67922]"/>
  <match src="&quot;: &quot; [69456,69457]" dest="&quot;: &quot; [69463,69464]"/>
  <match src="identifier: balance [50882,50889]" dest="identifier: balance [50882,50889]"/>
  <match src="member_expression [70756,70784]" dest="member_expression [70763,70791]"/>
  <match src="parenthesized_expression [49026,49070]" dest="parenthesized_expression [49026,49070]"/>
  <match src="identifier: ids [3170,3173]" dest="identifier: ids [3170,3173]"/>
  <match src="number_literal: 2 [77133,77134]" dest="number_literal: 2 [77140,77141]"/>
  <match src="function: function [44639,44647]" dest="function: function [44639,44647]"/>
  <match src="expression_statement [69148,69220]" dest="expression_statement [69155,69227]"/>
  <match src="uint256: uint256 [57817,57824]" dest="uint256: uint256 [57817,57824]"/>
  <match src=",: , [62333,62334]" dest=",: , [62340,62341]"/>
  <match src="call_argument [70124,70125]" dest="call_argument [70131,70132]"/>
  <match src="parameter [5403,5418]" dest="parameter [5403,5418]"/>
  <match src="primitive_type [18489,18496]" dest="primitive_type [18489,18496]"/>
  <match src=".: . [72740,72741]" dest=".: . [72747,72748]"/>
  <match src="=: = [44314,44315]" dest="=: = [44314,44315]"/>
  <match src="}: } [44878,44879]" dest="}: } [44878,44879]"/>
  <match src="while: while [70162,70167]" dest="while: while [70169,70174]"/>
  <match src="(: ( [52648,52649]" dest="(: ( [52648,52649]"/>
  <match src=",: , [62521,62522]" dest=",: , [62528,62529]"/>
  <match src="address: address [4365,4372]" dest="address: address [4365,4372]"/>
  <match src="[: [ [40111,40112]" dest="[: [ [40111,40112]"/>
  <match src="while: while [41608,41613]" dest="while: while [41608,41613]"/>
  <match src="++: ++ [48981,48983]" dest="++: ++ [48981,48983]"/>
  <match src="identifier: id [3868,3870]" dest="identifier: id [3868,3870]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [77316,77319]" dest="&gt;&gt;=: &gt;&gt;= [77323,77326]"/>
  <match src="state_mutability [5429,5433]" dest="state_mutability [5429,5433]"/>
  <match src="expression_statement [64282,64311]" dest="expression_statement [64289,64318]"/>
  <match src="block_statement [51512,51863]" dest="block_statement [51512,51863]"/>
  <match src="member_expression [81327,81348]" dest="member_expression [81334,81355]"/>
  <match src="true [68312,68316]" dest="true [68319,68323]"/>
  <match src="member_expression [69342,69427]" dest="member_expression [69349,69434]"/>
  <match src="primitive_type [80310,80317]" dest="primitive_type [80317,80324]"/>
  <match src="bytes32: bytes32 [15586,15593]" dest="bytes32: bytes32 [15586,15593]"/>
  <match src="primitive_type [46899,46906]" dest="primitive_type [46899,46906]"/>
  <match src="}: } [13065,13066]" dest="}: } [13065,13066]"/>
  <match src="assignment_expression [71023,71061]" dest="assignment_expression [71030,71068]"/>
  <match src="identifier: IERC165 [18363,18370]" dest="identifier: IERC165 [18363,18370]"/>
  <match src="type_name [3860,3867]" dest="type_name [3860,3867]"/>
  <match src="identifier: commoners [72717,72726]" dest="identifier: commoners [72724,72733]"/>
  <match src=",: , [1593,1594]" dest=",: , [1593,1594]"/>
  <match src="&lt;: &lt; [74488,74489]" dest="&lt;: &lt; [74495,74496]"/>
  <match src="binary_expression [77616,77629]" dest="binary_expression [77623,77636]"/>
  <match src="=: = [73240,73241]" dest="=: = [73247,73248]"/>
  <match src="comment: // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls. [53884,53988]" dest="comment: // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls. [53884,53988]"/>
  <match src="(: ( [7601,7602]" dest="(: ( [7601,7602]"/>
  <match src="boolean_literal [53750,53754]" dest="boolean_literal [53750,53754]"/>
  <match src="identifier: level [1173,1178]" dest="identifier: level [1173,1178]"/>
  <match src="call_argument [48111,48113]" dest="call_argument [48111,48113]"/>
  <match src="interface: interface [913,922]" dest="interface: interface [913,922]"/>
  <match src="type_alias [35881,35888]" dest="type_alias [35881,35888]"/>
  <match src="parameter [1329,1344]" dest="parameter [1329,1344]"/>
  <match src="type_name [7490,7497]" dest="type_name [7490,7497]"/>
  <match src=",: , [45408,45409]" dest=",: , [45408,45409]"/>
  <match src="assignment_expression [62318,62355]" dest="assignment_expression [62325,62362]"/>
  <match src="type_name [47376,47383]" dest="type_name [47376,47383]"/>
  <match src="comment: // Check the signature length [10236,10265]" dest="comment: // Check the signature length [10236,10265]"/>
  <match src="assignment_expression [51057,51106]" dest="assignment_expression [51057,51106]"/>
  <match src="identifier: saleStatus [65760,65770]" dest="identifier: saleStatus [65767,65777]"/>
  <match src="type_cast_expression [51083,51106]" dest="type_cast_expression [51083,51106]"/>
  <match src="identifier: existingCombinations [59836,59856]" dest="identifier: existingCombinations [59843,59863]"/>
  <match src="): ) [55928,55929]" dest="): ) [55928,55929]"/>
  <match src="function_body [8446,9035]" dest="function_body [8446,9035]"/>
  <match src="): ) [77379,77380]" dest="): ) [77386,77387]"/>
  <match src="string: string [24276,24282]" dest="string: string [24276,24282]"/>
  <match src="identifier: tokenId [79231,79238]" dest="identifier: tokenId [79238,79245]"/>
  <match src="call_argument [6680,6686]" dest="call_argument [6680,6686]"/>
  <match src="identifier: msg [80615,80618]" dest="identifier: msg [80622,80625]"/>
  <match src="{: { [14860,14861]" dest="{: { [14860,14861]"/>
  <match src="storage: storage [53342,53349]" dest="storage: storage [53342,53349]"/>
  <match src="call_argument [68171,68213]" dest="call_argument [68178,68220]"/>
  <match src="member_expression [72185,72216]" dest="member_expression [72192,72223]"/>
  <match src="expression_statement [12409,12428]" dest="expression_statement [12409,12428]"/>
  <match src="(: ( [13419,13420]" dest="(: ( [13419,13420]"/>
  <match src="member_expression [73976,74009]" dest="member_expression [73983,74016]"/>
  <match src="bool: bool [32344,32348]" dest="bool: bool [32344,32348]"/>
  <match src="memory: memory [42739,42745]" dest="memory: memory [42739,42745]"/>
  <match src="struct: struct [4230,4236]" dest="struct: struct [4230,4236]"/>
  <match src="identifier: auth [61125,61129]" dest="identifier: auth [61132,61136]"/>
  <match src="primitive_type [55975,55980]" dest="primitive_type [55975,55980]"/>
  <match src="type_name [3800,3807]" dest="type_name [3800,3807]"/>
  <match src="address: address [47376,47383]" dest="address: address [47376,47383]"/>
  <match src="primitive_type [23823,23830]" dest="primitive_type [23823,23830]"/>
  <match src="visibility [81494,81500]" dest="visibility [81501,81507]"/>
  <match src="(: ( [5896,5897]" dest="(: ( [5896,5897]"/>
  <match src="return_type_definition [16137,16154]" dest="return_type_definition [16137,16154]"/>
  <match src="): ) [53033,53034]" dest="): ) [53033,53034]"/>
  <match src="{: { [48993,48994]" dest="{: { [48993,48994]"/>
  <match src="parameter [24587,24600]" dest="parameter [24587,24600]"/>
  <match src="call_argument [48877,48879]" dest="call_argument [48877,48879]"/>
  <match src="bytes32: bytes32 [10993,11000]" dest="bytes32: bytes32 [10993,11000]"/>
  <match src="call_argument [42921,42966]" dest="call_argument [42921,42966]"/>
  <match src="string_literal [65837,65850]" dest="string_literal [65844,65857]"/>
  <match src=",: , [20766,20767]" dest=",: , [20766,20767]"/>
  <match src="struct_member [4413,4432]" dest="struct_member [4413,4432]"/>
  <match src="identifier: TokenOwnership [41089,41103]" dest="identifier: TokenOwnership [41089,41103]"/>
  <match src="(: ( [44204,44205]" dest="(: ( [44204,44205]"/>
  <match src="type_cast_expression [14779,14789]" dest="type_cast_expression [14779,14789]"/>
  <match src="primitive_type [10202,10209]" dest="primitive_type [10202,10209]"/>
  <match src="returns: returns [15617,15624]" dest="returns: returns [15617,15624]"/>
  <match src="augmented_assignment_expression [77645,77656]" dest="augmented_assignment_expression [77652,77663]"/>
  <match src="type_name [57031,57038]" dest="type_name [57031,57038]"/>
  <match src="identifier: balance [3281,3288]" dest="identifier: balance [3281,3288]"/>
  <match src="number_literal: 1 [6742,6743]" dest="number_literal: 1 [6742,6743]"/>
  <match src="identifier: id [81115,81117]" dest="identifier: id [81122,81124]"/>
  <match src="identifier: s [16828,16829]" dest="identifier: s [16828,16829]"/>
  <match src="function: function [78694,78702]" dest="function: function [78701,78709]"/>
  <match src="if: if [44201,44203]" dest="if: if [44201,44203]"/>
  <match src="parameter [5752,5766]" dest="parameter [5752,5766]"/>
  <match src="-: - [65417,65418]" dest="-: - [65424,65425]"/>
  <match src="user_defined_type [59158,59165]" dest="user_defined_type [59165,59172]"/>
  <match src="payable: payable [63796,63803]" dest="payable: payable [63803,63810]"/>
  <match src="identifier: seed [75388,75392]" dest="identifier: seed [75395,75399]"/>
  <match src="parameter [1496,1508]" dest="parameter [1496,1508]"/>
  <match src="identifier: approved [44379,44387]" dest="identifier: approved [44379,44387]"/>
  <match src="if: if [70326,70328]" dest="if: if [70333,70335]"/>
  <match src="identifier: tokenId [44863,44870]" dest="identifier: tokenId [44863,44870]"/>
  <match src="function: function [40003,40011]" dest="function: function [40003,40011]"/>
  <match src="address: address [45560,45567]" dest="address: address [45560,45567]"/>
  <match src="type_name [3310,3317]" dest="type_name [3310,3317]"/>
  <match src="(: ( [6787,6788]" dest="(: ( [6787,6788]"/>
  <match src="bytes: bytes [30856,30861]" dest="bytes: bytes [30856,30861]"/>
  <match src="revert: revert [47977,47983]" dest="revert: revert [47977,47983]"/>
  <match src="revert: revert [52814,52820]" dest="revert: revert [52814,52820]"/>
  <match src="identifier: sender [66437,66443]" dest="identifier: sender [66444,66450]"/>
  <match src="identifier: rarities [62503,62511]" dest="identifier: rarities [62510,62518]"/>
  <match src="external: external [23876,23884]" dest="external: external [23876,23884]"/>
  <match src="visibility [69879,69887]" dest="visibility [69886,69894]"/>
  <match src="parameter [44151,44164]" dest="parameter [44151,44164]"/>
  <match src="+: + [67974,67975]" dest="+: + [67981,67982]"/>
  <match src="[: [ [62517,62518]" dest="[: [ [62524,62525]"/>
  <match src="): ) [52812,52813]" dest="): ) [52812,52813]"/>
  <match src="variable_declaration_statement [52460,52520]" dest="variable_declaration_statement [52460,52520]"/>
  <match src="primitive_type [3444,3451]" dest="primitive_type [3444,3451]"/>
  <match src="state_variable_declaration [37126,37156]" dest="state_variable_declaration [37126,37156]"/>
  <match src="identifier: tokenid [3989,3996]" dest="identifier: tokenid [3989,3996]"/>
  <match src="comment: //     Max mint per WL = 3 [66513,66539]" dest="comment: //     Max mint per WL = 3 [66520,66546]"/>
  <match src="(: ( [6566,6567]" dest="(: ( [6566,6567]"/>
  <match src="(: ( [43575,43576]" dest="(: ( [43575,43576]"/>
  <match src="string_literal [61558,61569]" dest="string_literal [61565,61576]"/>
  <match src=",: , [68104,68105]" dest=",: , [68111,68112]"/>
  <match src="internal: internal [30380,30388]" dest="internal: internal [30380,30388]"/>
  <match src="(: ( [48106,48107]" dest="(: ( [48106,48107]"/>
  <match src="member_expression [66394,66407]" dest="member_expression [66401,66414]"/>
  <match src=",: , [10730,10731]" dest=",: , [10730,10731]"/>
  <match src="binary_expression [69052,69089]" dest="binary_expression [69059,69096]"/>
  <match src="): ) [69032,69033]" dest="): ) [69039,69040]"/>
  <match src="internal: internal [28154,28162]" dest="internal: internal [28154,28162]"/>
  <match src="): ) [67787,67788]" dest="): ) [67794,67795]"/>
  <match src="parameter [32367,32390]" dest="parameter [32367,32390]"/>
  <match src="function_definition [24237,24291]" dest="function_definition [24237,24291]"/>
  <match src="[: [ [1668,1669]" dest="[: [ [1668,1669]"/>
  <match src="&amp;&amp;: &amp;&amp; [41045,41047]" dest="&amp;&amp;: &amp;&amp; [41045,41047]"/>
  <match src="identifier: super [39369,39374]" dest="identifier: super [39369,39374]"/>
  <match src="identifier: sendValue [27027,27036]" dest="identifier: sendValue [27027,27036]"/>
  <match src=",: , [50560,50561]" dest=",: , [50560,50561]"/>
  <match src="identifier: armor [1101,1106]" dest="identifier: armor [1101,1106]"/>
  <match src=",: , [62818,62819]" dest=",: , [62825,62826]"/>
  <match src="call_argument [66294,66311]" dest="call_argument [66301,66318]"/>
  <match src=".: . [53676,53677]" dest=".: . [53676,53677]"/>
  <match src="expression_statement [66136,66185]" dest="expression_statement [66143,66192]"/>
  <match src="call_expression [29917,29935]" dest="call_expression [29917,29935]"/>
  <match src="call_argument [27116,27120]" dest="call_argument [27116,27120]"/>
  <match src="override_specifier [44181,44189]" dest="override_specifier [44181,44189]"/>
  <match src="function_body [67817,68716]" dest="function_body [67824,68723]"/>
  <match src="identifier: who_ [2343,2347]" dest="identifier: who_ [2343,2347]"/>
  <match src=",: , [30466,30467]" dest=",: , [30466,30467]"/>
  <match src="uint256: uint256 [4173,4180]" dest="uint256: uint256 [4173,4180]"/>
  <match src=",: , [45664,45665]" dest=",: , [45664,45665]"/>
  <match src="type_name [18511,18518]" dest="type_name [18511,18518]"/>
  <match src="yul_evm_builtin [11235,11240]" dest="yul_evm_builtin [11235,11240]"/>
  <match src="(: ( [68930,68931]" dest="(: ( [68937,68938]"/>
  <match src="): ) [77547,77548]" dest="): ) [77554,77555]"/>
  <match src="identifier: admin [64758,64763]" dest="identifier: admin [64765,64770]"/>
  <match src=".: . [65140,65141]" dest=".: . [65147,65148]"/>
  <match src="interface_declaration [800,909]" dest="interface_declaration [800,909]"/>
  <match src="parameter [52077,52092]" dest="parameter [52077,52092]"/>
  <match src="identifier: tokenURI [99,107]" dest="identifier: tokenURI [99,107]"/>
  <match src="parameter [80818,80831]" dest="parameter [80825,80838]"/>
  <match src="state_mutability [328,332]" dest="state_mutability [328,332]"/>
  <match src="[: [ [62447,62448]" dest="[: [ [62454,62455]"/>
  <match src="parameter [30361,30378]" dest="parameter [30361,30378]"/>
  <match src="type_name [67376,67381]" dest="type_name [67383,67388]"/>
  <match src="assignment_expression [72930,72966]" dest="assignment_expression [72937,72973]"/>
  <match src="bytes32: bytes32 [67440,67447]" dest="bytes32: bytes32 [67447,67454]"/>
  <match src="&amp;&amp;: &amp;&amp; [61170,61172]" dest="&amp;&amp;: &amp;&amp; [61177,61179]"/>
  <match src="parameter [30345,30359]" dest="parameter [30345,30359]"/>
  <match src="call_argument [10903,10904]" dest="call_argument [10903,10904]"/>
  <match src="returns: returns [4691,4698]" dest="returns: returns [4691,4698]"/>
  <match src="primitive_type [4315,4321]" dest="primitive_type [4315,4321]"/>
  <match src="number_literal: 3 [62512,62513]" dest="number_literal: 3 [62519,62520]"/>
  <match src="uint256: uint256 [46911,46918]" dest="uint256: uint256 [46911,46918]"/>
  <match src="primitive_type [28534,28541]" dest="primitive_type [28534,28541]"/>
  <match src="identifier: value [29307,29312]" dest="identifier: value [29307,29312]"/>
  <match src="identifier: transferFrom [20731,20743]" dest="identifier: transferFrom [20731,20743]"/>
  <match src="identifier: topCommoner_ [74100,74112]" dest="identifier: topCommoner_ [74107,74119]"/>
  <match src="): ) [34736,34737]" dest="): ) [34736,34737]"/>
  <match src="): ) [57053,57054]" dest="): ) [57053,57054]"/>
  <match src="[: [ [5652,5653]" dest="[: [ [5652,5653]"/>
  <match src="(: ( [48513,48514]" dest="(: ( [48513,48514]"/>
  <match src="uint8: uint8 [5301,5306]" dest="uint8: uint8 [5301,5306]"/>
  <match src="identifier: t [77502,77503]" dest="identifier: t [77509,77510]"/>
  <match src="identifier: sender [66887,66893]" dest="identifier: sender [66894,66900]"/>
  <match src="): ) [44524,44525]" dest="): ) [44524,44525]"/>
  <match src="visibility [1617,1625]" dest="visibility [1617,1625]"/>
  <match src="type_name [30856,30861]" dest="type_name [30856,30861]"/>
  <match src="binary_expression [41021,41044]" dest="binary_expression [41021,41044]"/>
  <match src="uint8: uint8 [58520,58525]" dest="uint8: uint8 [58520,58525]"/>
  <match src="): ) [64341,64342]" dest="): ) [64348,64349]"/>
  <match src="!: ! [79754,79755]" dest="!: ! [79761,79762]"/>
  <match src="return_type_definition [1360,1382]" dest="return_type_definition [1360,1382]"/>
  <match src="identifier: topCommoner_ [72940,72952]" dest="identifier: topCommoner_ [72947,72959]"/>
  <match src=",: , [74364,74365]" dest=",: , [74371,74372]"/>
  <match src="): ) [42183,42184]" dest="): ) [42183,42184]"/>
  <match src="comment: // If the signature is valid (and not malleable), return the signer address [15062,15137]" dest="comment: // If the signature is valid (and not malleable), return the signer address [15062,15137]"/>
  <match src="{: { [30870,30871]" dest="{: { [30870,30871]"/>
  <match src="): ) [27326,27327]" dest="): ) [27326,27327]"/>
  <match src="&quot;: &quot; [9014,9015]" dest="&quot;: &quot; [9014,9015]"/>
  <match src="call_argument [67916,67937]" dest="call_argument [67923,67944]"/>
  <match src="identifier: abi [17319,17322]" dest="identifier: abi [17319,17322]"/>
  <match src="function_definition [22159,22247]" dest="function_definition [22159,22247]"/>
  <match src="identifier: msg [64999,65002]" dest="identifier: msg [65006,65009]"/>
  <match src="}: } [31489,31490]" dest="}: } [31489,31490]"/>
  <match src="(: ( [58519,58520]" dest="(: ( [58519,58520]"/>
  <match src="call_expression [7592,7617]" dest="call_expression [7592,7617]"/>
  <match src="(: ( [27107,27108]" dest="(: ( [27107,27108]"/>
  <match src="binary_expression [45106,45179]" dest="binary_expression [45106,45179]"/>
  <match src="function_definition [33621,33719]" dest="function_definition [33621,33719]"/>
  <match src="number_literal: 1 [51969,51970]" dest="number_literal: 1 [51969,51970]"/>
  <match src="{: { [75441,75442]" dest="{: { [75448,75449]"/>
  <match src="&quot;: &quot; [63531,63532]" dest="&quot;: &quot; [63538,63539]"/>
  <match src="type_name [77953,77971]" dest="type_name [77960,77978]"/>
  <match src="member_expression [71852,71883]" dest="member_expression [71859,71890]"/>
  <match src="returns: returns [38791,38798]" dest="returns: returns [38791,38798]"/>
  <match src="(: ( [56187,56188]" dest="(: ( [56187,56188]"/>
  <match src="type_name [196,203]" dest="type_name [196,203]"/>
  <match src="binary_expression [7713,7718]" dest="binary_expression [7713,7718]"/>
  <match src="unary_expression [63520,63529]" dest="unary_expression [63527,63536]"/>
  <match src="if_statement [43915,43983]" dest="if_statement [43915,43983]"/>
  <match src="number_literal: 6 [67913,67914]" dest="number_literal: 6 [67920,67921]"/>
  <match src="]: ] [79190,79191]" dest="]: ] [79197,79198]"/>
  <match src="view: view [44533,44537]" dest="view: view [44533,44537]"/>
  <match src="member_expression [80615,80625]" dest="member_expression [80622,80632]"/>
  <match src="primitive_type [6003,6010]" dest="primitive_type [6003,6010]"/>
  <match src="primitive_type [54144,54151]" dest="primitive_type [54144,54151]"/>
  <match src="array_access [62386,62397]" dest="array_access [62393,62404]"/>
  <match src="number_literal: 1 [51390,51391]" dest="number_literal: 1 [51390,51391]"/>
  <match src="uint16: uint16 [77193,77199]" dest="uint16: uint16 [77200,77206]"/>
  <match src="interface_declaration [4720,5030]" dest="interface_declaration [4720,5030]"/>
  <match src="identifier: commoners [71080,71089]" dest="identifier: commoners [71087,71096]"/>
  <match src="(: ( [54926,54927]" dest="(: ( [54926,54927]"/>
  <match src="=: = [40646,40647]" dest="=: = [40646,40647]"/>
  <match src="identifier: isApprovedOrOwner [45929,45946]" dest="identifier: isApprovedOrOwner [45929,45946]"/>
  <match src="expression_statement [72769,72803]" dest="expression_statement [72776,72810]"/>
  <match src="address: address [19084,19091]" dest="address: address [19084,19091]"/>
  <match src="parameter [28172,28184]" dest="parameter [28172,28184]"/>
  <match src="}: } [7340,7341]" dest="}: } [7340,7341]"/>
  <match src="array_access [7752,7777]" dest="array_access [7752,7777]"/>
  <match src="call_argument [13507,13512]" dest="call_argument [13507,13512]"/>
  <match src="{: { [71314,71315]" dest="{: { [71321,71322]"/>
  <match src="=: = [72799,72800]" dest="=: = [72806,72807]"/>
  <match src="&quot;: &quot; [7845,7846]" dest="&quot;: &quot; [7845,7846]"/>
  <match src="yul_identifier [56207,56213]" dest="yul_identifier [56207,56213]"/>
  <match src="]: ] [73730,73731]" dest="]: ] [73737,73738]"/>
  <match src="function: function [44106,44114]" dest="function: function [44106,44114]"/>
  <match src="): ) [74921,74922]" dest="): ) [74928,74929]"/>
  <match src="library: library [5980,5987]" dest="library: library [5980,5987]"/>
  <match src="identifier: length [80509,80515]" dest="identifier: length [80516,80522]"/>
  <match src="primitive_type [3310,3317]" dest="primitive_type [3310,3317]"/>
  <match src="parameter [45816,45826]" dest="parameter [45816,45826]"/>
  <match src="]: ] [62223,62224]" dest="]: ] [62230,62231]"/>
  <match src="=: = [51798,51799]" dest="=: = [51798,51799]"/>
  <match src="[: [ [53376,53377]" dest="[: [ [53376,53377]"/>
  <match src="string_literal [75025,75027]" dest="string_literal [75032,75034]"/>
  <match src="&quot;: &quot; [67173,67174]" dest="&quot;: &quot; [67180,67181]"/>
  <match src="(: ( [54543,54544]" dest="(: ( [54543,54544]"/>
  <match src="false: false [61956,61961]" dest="false: false [61963,61968]"/>
  <match src="parameter [3981,3996]" dest="parameter [3981,3996]"/>
  <match src="type_name [23894,23900]" dest="type_name [23894,23900]"/>
  <match src="revert: revert [49237,49243]" dest="revert: revert [49237,49243]"/>
  <match src="): ) [67937,67938]" dest="): ) [67944,67945]"/>
  <match src="identifier: nextSlot [54073,54081]" dest="identifier: nextSlot [54073,54081]"/>
  <match src="member_expression [53436,53460]" dest="member_expression [53436,53460]"/>
  <match src="=: = [77179,77180]" dest="=: = [77186,77187]"/>
  <match src=".: . [79778,79779]" dest=".: . [79785,79786]"/>
  <match src="comment: /**      * @dev See {IERC721-transferFrom}.      */ [44887,44940]" dest="comment: /**      * @dev See {IERC721-transferFrom}.      */ [44887,44940]"/>
  <match src="assignment_expression [61945,61961]" dest="assignment_expression [61952,61968]"/>
  <match src="{: { [8446,8447]" dest="{: { [8446,8447]"/>
  <match src="identifier: transferFrom [3484,3496]" dest="identifier: transferFrom [3484,3496]"/>
  <match src="): ) [14788,14789]" dest="): ) [14788,14789]"/>
  <match src="]: ] [48614,48615]" dest="]: ] [48614,48615]"/>
  <match src="type_name [7505,7512]" dest="type_name [7505,7512]"/>
  <match src="number_literal: 2 [72801,72802]" dest="number_literal: 2 [72808,72809]"/>
  <match src=",: , [51954,51955]" dest=",: , [51954,51955]"/>
  <match src="]: ] [81205,81206]" dest="]: ] [81212,81213]"/>
  <match src="]: ] [80046,80047]" dest="]: ] [80053,80054]"/>
  <match src="&quot;: &quot; [44756,44757]" dest="&quot;: &quot; [44756,44757]"/>
  <match src="member_expression [53397,53416]" dest="member_expression [53397,53416]"/>
  <match src="number_literal: 0 [63020,63021]" dest="number_literal: 0 [63027,63028]"/>
  <match src="number_literal: 4 [62597,62598]" dest="number_literal: 4 [62604,62605]"/>
  <match src="type_name [4413,4420]" dest="type_name [4413,4420]"/>
  <match src="bytes32: bytes32 [15566,15573]" dest="bytes32: bytes32 [15566,15573]"/>
  <match src="identifier: c_ [64712,64714]" dest="identifier: c_ [64719,64721]"/>
  <match src="return: return [67589,67595]" dest="return: return [67596,67602]"/>
  <match src="identifier: _ownerships [54084,54095]" dest="identifier: _ownerships [54084,54095]"/>
  <match src="==: == [69127,69129]" dest="==: == [69134,69136]"/>
  <match src="call_expression [43576,43588]" dest="call_expression [43576,43588]"/>
  <match src="return_type_definition [34676,34690]" dest="return_type_definition [34676,34690]"/>
  <match src="identifier: startTokenId [48696,48708]" dest="identifier: startTokenId [48696,48708]"/>
  <match src="call_expression [66418,66467]" dest="call_expression [66425,66474]"/>
  <match src="yul_identifier [13047,13049]" dest="yul_identifier [13047,13049]"/>
  <match src="call_expression [69615,69652]" dest="call_expression [69622,69659]"/>
  <match src="yul_hex_number: 0x20 [11205,11209]" dest="yul_hex_number: 0x20 [11205,11209]"/>
  <match src=".: . [26064,26065]" dest=".: . [26064,26065]"/>
  <match src="}: } [65490,65491]" dest="}: } [65497,65498]"/>
  <match src="primitive_type [66200,66206]" dest="primitive_type [66207,66213]"/>
  <match src="parameter [3310,3322]" dest="parameter [3310,3322]"/>
  <match src=",: , [47488,47489]" dest=",: , [47488,47489]"/>
  <match src="member_expression [73154,73185]" dest="member_expression [73161,73192]"/>
  <match src="number_literal: 255 [62139,62142]" dest="number_literal: 255 [62146,62149]"/>
  <match src="identifier: commoners [74199,74208]" dest="identifier: commoners [74206,74215]"/>
  <match src="return: return [34702,34708]" dest="return: return [34702,34708]"/>
  <match src="call_argument [64744,64763]" dest="call_argument [64751,64770]"/>
  <match src="identifier: tokenId [46798,46805]" dest="identifier: tokenId [46798,46805]"/>
  <match src="member_expression [66883,66893]" dest="member_expression [66890,66900]"/>
  <match src="type_cast_expression [51500,51510]" dest="type_cast_expression [51500,51510]"/>
  <match src="identifier: to_ [65247,65250]" dest="identifier: to_ [65254,65257]"/>
  <match src="mapping: mapping [58793,58800]" dest="mapping: mapping [58800,58807]"/>
  <match src="{: { [76912,76913]" dest="{: { [76919,76920]"/>
  <match src="primitive_type [65239,65246]" dest="primitive_type [65246,65253]"/>
  <match src="primitive_type [40957,40964]" dest="primitive_type [40957,40964]"/>
  <match src="type_name [80818,80823]" dest="type_name [80825,80830]"/>
  <match src="yul_function_call [10767,10787]" dest="yul_function_call [10767,10787]"/>
  <match src="identifier: validateOwnerOfDoge [1464,1483]" dest="identifier: validateOwnerOfDoge [1464,1483]"/>
  <match src="type_name [29239,29244]" dest="type_name [29239,29244]"/>
  <match src="identifier: Commoner [78902,78910]" dest="identifier: Commoner [78909,78917]"/>
  <match src="visibility [58305,58311]" dest="visibility [58305,58311]"/>
  <match src="primitive_type [37234,37240]" dest="primitive_type [37234,37240]"/>
  <match src="primitive_type [64821,64828]" dest="primitive_type [64828,64835]"/>
  <match src="type_name [55863,55869]" dest="type_name [55863,55869]"/>
  <match src="block_statement [66238,66368]" dest="block_statement [66245,66375]"/>
  <match src="type_name [29716,29723]" dest="type_name [29716,29723]"/>
  <match src="for_statement [66195,66368]" dest="for_statement [66202,66375]"/>
  <match src=".: . [77586,77587]" dest=".: . [77593,77594]"/>
  <match src="identifier: generate [74586,74594]" dest="identifier: generate [74593,74601]"/>
  <match src="(: ( [16145,16146]" dest="(: ( [16145,16146]"/>
  <match src="identifier: _transfer [44837,44846]" dest="identifier: _transfer [44837,44846]"/>
  <match src=".: . [68597,68598]" dest=".: . [68604,68605]"/>
  <match src=".: . [67132,67133]" dest=".: . [67139,67140]"/>
  <match src="string: string [42833,42839]" dest="string: string [42833,42839]"/>
  <match src="comment: // smithing [63033,63044]" dest="comment: // smithing [63040,63051]"/>
  <match src="identifier: signature [10771,10780]" dest="identifier: signature [10771,10780]"/>
  <match src="return_type_definition [31364,31386]" dest="return_type_definition [31364,31386]"/>
  <match src="): ) [64494,64495]" dest="): ) [64501,64502]"/>
  <match src="%: % [70127,70128]" dest="%: % [70134,70135]"/>
  <match src="return_type_definition [5508,5525]" dest="return_type_definition [5508,5525]"/>
  <match src="call_argument [69429,69457]" dest="call_argument [69436,69464]"/>
  <match src="type_name [37770,37814]" dest="type_name [37770,37814]"/>
  <match src="(: ( [67567,67568]" dest="(: ( [67574,67575]"/>
  <match src="type_name [64417,64422]" dest="type_name [64424,64429]"/>
  <match src="number_literal: 198 [62641,62644]" dest="number_literal: 198 [62648,62651]"/>
  <match src="call_struct_argument [79262,79299]" dest="call_struct_argument [79269,79306]"/>
  <match src="(: ( [79969,79970]" dest="(: ( [79976,79977]"/>
  <match src="meta_type_expression [39319,39340]" dest="meta_type_expression [39319,39340]"/>
  <match src="): ) [1415,1416]" dest="): ) [1415,1416]"/>
  <match src="expression_statement [64853,64882]" dest="expression_statement [64860,64889]"/>
  <match src="parameter [29172,29189]" dest="parameter [29172,29189]"/>
  <match src="string [7666,7669]" dest="string [7666,7669]"/>
  <match src="parameter [38401,38408]" dest="parameter [38401,38408]"/>
  <match src="(: ( [42328,42329]" dest="(: ( [42328,42329]"/>
  <match src="contract_declaration [57965,81562]" dest="contract_declaration [57965,81569]"/>
  <match src=",: , [80800,80801]" dest=",: , [80807,80808]"/>
  <match src="identifier: tokenNo_ [68501,68509]" dest="identifier: tokenNo_ [68508,68516]"/>
  <match src="identifier: RecoverError [8470,8482]" dest="identifier: RecoverError [8470,8482]"/>
  <match src="state_variable_declaration [58247,58291]" dest="state_variable_declaration [58247,58291]"/>
  <match src="(: ( [58136,58137]" dest="(: ( [58136,58137]"/>
  <match src="call_argument [48961,48962]" dest="call_argument [48961,48962]"/>
  <match src="identifier: validateOwner [78703,78716]" dest="identifier: validateOwner [78710,78723]"/>
  <match src=".: . [79393,79394]" dest=".: . [79400,79401]"/>
  <match src="string: string [42914,42920]" dest="string: string [42914,42920]"/>
  <match src="(: ( [70168,70169]" dest="(: ( [70175,70176]"/>
  <match src="primitive_type [3511,3518]" dest="primitive_type [3511,3518]"/>
  <match src="state_variable_declaration [37440,37496]" dest="state_variable_declaration [37440,37496]"/>
  <match src="identifier: sender [80431,80437]" dest="identifier: sender [80438,80444]"/>
  <match src="function_definition [20722,20830]" dest="function_definition [20722,20830]"/>
  <match src="[: [ [81250,81251]" dest="[: [ [81257,81258]"/>
  <match src="uint256: uint256 [27064,27071]" dest="uint256: uint256 [27064,27071]"/>
  <match src="identifier: startTokenId [49223,49235]" dest="identifier: startTokenId [49223,49235]"/>
  <match src="(: ( [55828,55829]" dest="(: ( [55828,55829]"/>
  <match src="(: ( [70328,70329]" dest="(: ( [70335,70336]"/>
  <match src="}: } [70160,70161]" dest="}: } [70167,70168]"/>
  <match src="memory: memory [24283,24289]" dest="memory: memory [24283,24289]"/>
  <match src="override_specifier [45904,45912]" dest="override_specifier [45904,45912]"/>
  <match src="call_expression [42947,42965]" dest="call_expression [42947,42965]"/>
  <match src="string [68106,68116]" dest="string [68113,68123]"/>
  <match src="string [80388,80406]" dest="string [80395,80413]"/>
  <match src="call_argument [64118,64160]" dest="call_argument [64125,64167]"/>
  <match src="revert_statement [8731,8773]" dest="revert_statement [8731,8773]"/>
  <match src=".: . [8815,8816]" dest=".: . [8815,8816]"/>
  <match src="primitive_type [3800,3807]" dest="primitive_type [3800,3807]"/>
  <match src=".: . [73122,73123]" dest=".: . [73129,73130]"/>
  <match src="update_expression [70017,70020]" dest="update_expression [70024,70027]"/>
  <match src="expression_statement [44706,44759]" dest="expression_statement [44706,44759]"/>
  <match src="block_statement [8835,8906]" dest="block_statement [8835,8906]"/>
  <match src=",: , [77712,77713]" dest=",: , [77719,77720]"/>
  <match src="type_cast_expression [42914,42967]" dest="type_cast_expression [42914,42967]"/>
  <match src="): ) [55096,55097]" dest="): ) [55096,55097]"/>
  <match src="identifier: id [81071,81073]" dest="identifier: id [81078,81080]"/>
  <match src="identifier: admin [64538,64543]" dest="identifier: admin [64545,64550]"/>
  <match src="--: -- [41652,41654]" dest="--: -- [41652,41654]"/>
  <match src="(: ( [39592,39593]" dest="(: ( [39592,39593]"/>
  <match src="identifier: dogewood_ [61470,61479]" dest="identifier: dogewood_ [61477,61486]"/>
  <match src="type_name [17282,17289]" dest="type_name [17282,17289]"/>
  <match src="identifier: _safeMint [46889,46898]" dest="identifier: _safeMint [46889,46898]"/>
  <match src="function_body [33683,33719]" dest="function_body [33683,33719]"/>
  <match src="user_defined_type [35835,35841]" dest="user_defined_type [35835,35841]"/>
  <match src="): ) [46975,46976]" dest="): ) [46975,46976]"/>
  <match src="[: [ [50875,50876]" dest="[: [ [50875,50876]"/>
  <match src=".: . [33704,33705]" dest=".: . [33704,33705]"/>
  <match src="function_definition [3296,3349]" dest="function_definition [3296,3349]"/>
  <match src="identifier: revealed [80378,80386]" dest="identifier: revealed [80385,80393]"/>
  <match src="number_literal: 0 [80494,80495]" dest="number_literal: 0 [80501,80502]"/>
  <match src="boolean_literal [61658,61662]" dest="boolean_literal [61665,61669]"/>
  <match src=",: , [75016,75017]" dest=",: , [75023,75024]"/>
  <match src="type_alias [35913,35920]" dest="type_alias [35913,35920]"/>
  <match src="==: == [65148,65150]" dest="==: == [65155,65157]"/>
  <match src="]: ] [62428,62429]" dest="]: ] [62435,62436]"/>
  <match src="visibility [1417,1425]" dest="visibility [1417,1425]"/>
  <match src="identifier: RecoverError [15666,15678]" dest="identifier: RecoverError [15666,15678]"/>
  <match src="identifier: timestamp [53707,53716]" dest="identifier: timestamp [53707,53716]"/>
  <match src="(: ( [17335,17336]" dest="(: ( [17335,17336]"/>
  <match src="identifier: errorMessage [32973,32985]" dest="identifier: errorMessage [32973,32985]"/>
  <match src="): ) [56213,56214]" dest="): ) [56213,56214]"/>
  <match src="&amp;: &amp; [77122,77123]" dest="&amp;: &amp; [77129,77130]"/>
  <match src="type_name [60381,60386]" dest="type_name [60388,60393]"/>
  <match src="user_defined_type [34521,34528]" dest="user_defined_type [34521,34528]"/>
  <match src="identifier: sender [69634,69640]" dest="identifier: sender [69641,69647]"/>
  <match src="): ) [52772,52773]" dest="): ) [52772,52773]"/>
  <match src="identifier: initialized [58111,58122]" dest="identifier: initialized [58111,58122]"/>
  <match src="call_argument [67957,67992]" dest="call_argument [67964,67999]"/>
  <match src="if: if [56011,56013]" dest="if: if [56011,56013]"/>
  <match src="call_argument [66445,66466]" dest="call_argument [66452,66473]"/>
  <match src="}: } [5937,5938]" dest="}: } [5937,5938]"/>
  <match src="): ) [21992,21993]" dest="): ) [21992,21993]"/>
  <match src=",: , [48113,48114]" dest=",: , [48113,48114]"/>
  <match src="{: { [43446,43447]" dest="{: { [43446,43447]"/>
  <match src="event_paramater [18704,18728]" dest="event_paramater [18704,18728]"/>
  <match src="if: if [68130,68132]" dest="if: if [68137,68139]"/>
  <match src="returns: returns [1431,1438]" dest="returns: returns [1431,1438]"/>
  <match src="parameter [5849,5862]" dest="parameter [5849,5862]"/>
  <match src="(: ( [69341,69342]" dest="(: ( [69348,69349]"/>
  <match src="): ) [43935,43936]" dest="): ) [43935,43936]"/>
  <match src="emit_statement [48851,48895]" dest="emit_statement [48851,48895]"/>
  <match src="call_expression [68163,68234]" dest="call_expression [68170,68241]"/>
  <match src="identifier: background [71104,71114]" dest="identifier: background [71111,71121]"/>
  <match src="string_literal [61611,61632]" dest="string_literal [61618,61639]"/>
  <match src="binary_expression [52638,52772]" dest="binary_expression [52638,52772]"/>
  <match src="primitive_type [4485,4492]" dest="primitive_type [4485,4492]"/>
  <match src="&quot;: &quot; [67936,67937]" dest="&quot;: &quot; [67943,67944]"/>
  <match src="parameter [7490,7503]" dest="parameter [7490,7503]"/>
  <match src=".: . [75421,75422]" dest=".: . [75428,75429]"/>
  <match src="]: ] [39882,39883]" dest="]: ] [39882,39883]"/>
  <match src="{: { [28186,28187]" dest="{: { [28186,28187]"/>
  <match src="identifier: svgOffhand [482,492]" dest="identifier: svgOffhand [482,492]"/>
  <match src="type_name [58020,58027]" dest="type_name [58020,58027]"/>
  <match src="&quot;: &quot; [44256,44257]" dest="&quot;: &quot; [44256,44257]"/>
  <match src="function: function [5616,5624]" dest="function: function [5616,5624]"/>
  <match src="[: [ [66078,66079]" dest="[: [ [66085,66086]"/>
  <match src=",: , [62793,62794]" dest=",: , [62800,62801]"/>
  <match src="yul_evm_builtin [32870,32873]" dest="yul_evm_builtin [32870,32873]"/>
  <match src="add: add [10767,10770]" dest="add: add [10767,10770]"/>
  <match src="revert: revert [44791,44797]" dest="revert: revert [44791,44797]"/>
  <match src="uint256: uint256 [1595,1602]" dest="uint256: uint256 [1595,1602]"/>
  <match src="identifier: quantity_ [68189,68198]" dest="identifier: quantity_ [68196,68205]"/>
  <match src="address: address [13399,13406]" dest="address: address [13399,13406]"/>
  <match src="return: return [76558,76564]" dest="return: return [76565,76571]"/>
  <match src="): ) [68554,68555]" dest="): ) [68561,68562]"/>
  <match src="identifier: currSlot [50978,50986]" dest="identifier: currSlot [50978,50986]"/>
  <match src=",: , [62648,62649]" dest=",: , [62655,62656]"/>
  <match src="number_literal: 5 [72219,72220]" dest="number_literal: 5 [72226,72227]"/>
  <match src="revert: revert [43525,43531]" dest="revert: revert [43525,43531]"/>
  <match src="identifier: tokenId [44018,44025]" dest="identifier: tokenId [44018,44025]"/>
  <match src=",: , [29312,29313]" dest=",: , [29312,29313]"/>
  <match src="type_name [46755,46759]" dest="type_name [46755,46759]"/>
  <match src="(: ( [31872,31873]" dest="(: ( [31872,31873]"/>
  <match src="if_statement [43572,43713]" dest="if_statement [43572,43713]"/>
  <match src="type_cast_expression [15248,15258]" dest="type_cast_expression [15248,15258]"/>
  <match src="call_expression [77432,77469]" dest="call_expression [77439,77476]"/>
  <match src="state_mutability [5008,5012]" dest="state_mutability [5008,5012]"/>
  <match src="): ) [65798,65799]" dest="): ) [65805,65806]"/>
  <match src="type_name [3774,3781]" dest="type_name [3774,3781]"/>
  <match src="==: == [7839,7841]" dest="==: == [7839,7841]"/>
  <match src="identifier: vs [11229,11231]" dest="identifier: vs [11229,11231]"/>
  <match src="}: } [9034,9035]" dest="}: } [9034,9035]"/>
  <match src="=: = [77513,77514]" dest="=: = [77520,77521]"/>
  <match src="parameter [646,672]" dest="parameter [646,672]"/>
  <match src="identifier: to [3796,3798]" dest="identifier: to [3796,3798]"/>
  <match src=",: , [48109,48110]" dest=",: , [48109,48110]"/>
  <match src="uint8: uint8 [1008,1013]" dest="uint8: uint8 [1008,1013]"/>
  <match src="parameter [3273,3288]" dest="parameter [3273,3288]"/>
  <match src="uint256: uint256 [3383,3390]" dest="uint256: uint256 [3383,3390]"/>
  <match src="&quot;: &quot; [66794,66795]" dest="&quot;: &quot; [66801,66802]"/>
  <match src="parameter [1905,1919]" dest="parameter [1905,1919]"/>
  <match src="assignment_expression [77006,77053]" dest="assignment_expression [77013,77060]"/>
  <match src="comment: // } [2990,2994]" dest="comment: // } [2990,2994]"/>
  <match src="binary_expression [34709,34737]" dest="binary_expression [34709,34737]"/>
  <match src="identifier: msg [67298,67301]" dest="identifier: msg [67305,67308]"/>
  <match src="{: { [15635,15636]" dest="{: { [15635,15636]"/>
  <match src=",: , [1849,1850]" dest=",: , [1849,1850]"/>
  <match src=",: , [10904,10905]" dest=",: , [10904,10905]"/>
  <match src="[: [ [63062,63063]" dest="[: [ [63069,63070]"/>
  <match src="number_literal: 7 [62350,62351]" dest="number_literal: 7 [62357,62358]"/>
  <match src="visibility [21560,21568]" dest="visibility [21560,21568]"/>
  <match src="expression_statement [66378,66408]" dest="expression_statement [66385,66415]"/>
  <match src=",: , [62301,62302]" dest=",: , [62308,62309]"/>
  <match src="): ) [27237,27238]" dest="): ) [27237,27238]"/>
  <match src="primitive_type [22865,22872]" dest="primitive_type [22865,22872]"/>
  <match src="call_argument [80559,80569]" dest="call_argument [80566,80576]"/>
  <match src="&amp;&amp;: &amp;&amp; [46833,46835]" dest="&amp;&amp;: &amp;&amp; [46833,46835]"/>
  <match src="parameter [23773,23789]" dest="parameter [23773,23789]"/>
  <match src="identifier: unstakeForQuest [1554,1569]" dest="identifier: unstakeForQuest [1554,1569]"/>
  <match src="do: do [49309,49311]" dest="do: do [49309,49311]"/>
  <match src="expression_statement [76927,76974]" dest="expression_statement [76934,76981]"/>
  <match src="}: } [51978,51979]" dest="}: } [51978,51979]"/>
  <match src="comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain `call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [27343,28091]" dest="comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain `call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [27343,28091]"/>
  <match src=",: , [78103,78104]" dest=",: , [78110,78111]"/>
  <match src="[: [ [62688,62689]" dest="[: [ [62695,62696]"/>
  <match src="): ) [20180,20181]" dest="): ) [20180,20181]"/>
  <match src="identifier: error [13452,13457]" dest="identifier: error [13452,13457]"/>
  <match src="call_argument [63823,63842]" dest="call_argument [63830,63849]"/>
  <match src="comment: // If the ownership slot of tokenId+1 is not explicitly set, that means the transfer initiator owns it. [51123,51226]" dest="comment: // If the ownership slot of tokenId+1 is not explicitly set, that means the transfer initiator owns it. [51123,51226]"/>
  <match src="visibility [5926,5934]" dest="visibility [5926,5934]"/>
  <match src="call_expression [27100,27173]" dest="call_expression [27100,27173]"/>
  <match src="primitive_type [4865,4872]" dest="primitive_type [4865,4872]"/>
  <match src="(: ( [64860,64861]" dest="(: ( [64867,64868]"/>
  <match src="function_definition [42168,42248]" dest="function_definition [42168,42248]"/>
  <match src="==: == [61178,61180]" dest="==: == [61185,61187]"/>
  <match src="binary_expression [67142,67171]" dest="binary_expression [67149,67178]"/>
  <match src="string_literal [64057,64068]" dest="string_literal [64064,64075]"/>
  <match src="identifier: tokenId [5411,5418]" dest="identifier: tokenId [5411,5418]"/>
  <match src="identifier: Transfer [49340,49348]" dest="identifier: Transfer [49340,49348]"/>
  <match src="[: [ [72726,72727]" dest="[: [ [72733,72734]"/>
  <match src="comment: /** RENDER */ [79639,79652]" dest="comment: /** RENDER */ [79646,79659]"/>
  <match src="): ) [37813,37814]" dest="): ) [37813,37814]"/>
  <match src="array_access [54084,54108]" dest="array_access [54084,54108]"/>
  <match src="variable_declaration_statement [69899,69981]" dest="variable_declaration_statement [69906,69988]"/>
  <match src="primitive_type [36741,36747]" dest="primitive_type [36741,36747]"/>
  <match src="==: == [44725,44727]" dest="==: == [44725,44727]"/>
  <match src="expression_statement [61103,61235]" dest="expression_statement [61110,61242]"/>
  <match src="identifier: _throwError [12409,12420]" dest="identifier: _throwError [12409,12420]"/>
  <match src="type_name [5834,5839]" dest="type_name [5834,5839]"/>
  <match src=",: , [18509,18510]" dest=",: , [18509,18510]"/>
  <match src="return_statement [6862,6884]" dest="return_statement [6862,6884]"/>
  <match src="identifier: sender [68690,68696]" dest="identifier: sender [68697,68703]"/>
  <match src="type_name [76348,76354]" dest="type_name [76355,76361]"/>
  <match src="array_access [63250,63260]" dest="array_access [63257,63267]"/>
  <match src="primitive_type [7544,7550]" dest="primitive_type [7544,7550]"/>
  <match src="returns: returns [139,146]" dest="returns: returns [139,146]"/>
  <match src="user_defined_type [58971,58989]" dest="user_defined_type [58978,58996]"/>
  <match src="type_name [80767,80772]" dest="type_name [80774,80779]"/>
  <match src="bytes: bytes [81473,81478]" dest="bytes: bytes [81480,81485]"/>
  <match src="identifier: balanceOf [19074,19083]" dest="identifier: balanceOf [19074,19083]"/>
  <match src="public: public [42331,42337]" dest="public: public [42331,42337]"/>
  <match src="]: ] [63086,63087]" dest="]: ] [63093,63094]"/>
  <match src="(: ( [45276,45277]" dest="(: ( [45276,45277]"/>
  <match src="identifier: from [45801,45805]" dest="identifier: from [45801,45805]"/>
  <match src="variable_declaration [48723,48734]" dest="variable_declaration [48723,48734]"/>
  <match src="uint256: uint256 [1814,1821]" dest="uint256: uint256 [1814,1821]"/>
  <match src="primitive_type [5712,5717]" dest="primitive_type [5712,5717]"/>
  <match src="interface: interface [23205,23214]" dest="interface: interface [23205,23214]"/>
  <match src="): ) [6199,6200]" dest="): ) [6199,6200]"/>
  <match src="): ) [48034,48035]" dest="): ) [48034,48035]"/>
  <match src="): ) [43587,43588]" dest="): ) [43587,43588]"/>
  <match src="(: ( [43586,43587]" dest="(: ( [43586,43587]"/>
  <match src="(: ( [10824,10825]" dest="(: ( [10824,10825]"/>
  <match src="return_statement [33805,33821]" dest="return_statement [33805,33821]"/>
  <match src="modifier: modifier [60937,60945]" dest="modifier: modifier [60944,60952]"/>
  <match src="identifier: signature [66702,66711]" dest="identifier: signature [66709,66718]"/>
  <match src="=: = [71993,71994]" dest="=: = [72000,72001]"/>
  <match src=":: : [79171,79172]" dest=":: : [79178,79179]"/>
  <match src="{: { [64980,64981]" dest="{: { [64987,64988]"/>
  <match src="=: = [71884,71885]" dest="=: = [71891,71892]"/>
  <match src="expression_statement [48474,48524]" dest="expression_statement [48474,48524]"/>
  <match src="identifier: MAX_SUPPLY [68069,68079]" dest="identifier: MAX_SUPPLY [68076,68086]"/>
  <match src="{: { [16721,16722]" dest="{: { [16721,16722]"/>
  <match src="): ) [81492,81493]" dest="): ) [81499,81500]"/>
  <match src="comment: //     uint8 head; Content [72375,72401]" dest="comment: //     uint8 head; Content [72382,72408]"/>
  <match src="string [43663,43700]" dest="string [43663,43700]"/>
  <match src="library: library [8204,8211]" dest="library: library [8204,8211]"/>
  <match src="(: ( [55077,55078]" dest="(: ( [55077,55078]"/>
  <match src="type_name [74353,74360]" dest="type_name [74360,74367]"/>
  <match src="primitive_type [46911,46918]" dest="primitive_type [46911,46918]"/>
  <match src="primitive_type [29200,29207]" dest="primitive_type [29200,29207]"/>
  <match src="bytes32: bytes32 [12778,12785]" dest="bytes32: bytes32 [12778,12785]"/>
  <match src="identifier: CastleLike [80604,80614]" dest="identifier: CastleLike [80611,80621]"/>
  <match src="(: ( [4698,4699]" dest="(: ( [4698,4699]"/>
  <match src=",: , [50450,50451]" dest=",: , [50450,50451]"/>
  <match src="type_name [32344,32348]" dest="type_name [32344,32348]"/>
  <match src="array_access [69473,69495]" dest="array_access [69480,69502]"/>
  <match src="type_name [3324,3331]" dest="type_name [3324,3331]"/>
  <match src="identifier: owner [39504,39509]" dest="identifier: owner [39504,39509]"/>
  <match src="identifier: length [7326,7332]" dest="identifier: length [7326,7332]"/>
  <match src="identifier: quantity [47405,47413]" dest="identifier: quantity [47405,47413]"/>
  <match src="if: if [48917,48919]" dest="if: if [48917,48919]"/>
  <match src="(: ( [32457,32458]" dest="(: ( [32457,32458]"/>
  <match src=".: . [73008,73009]" dest=".: . [73015,73016]"/>
  <match src="comment: // function init(string memory name_, string memory symbol_) internal { [37850,37921]" dest="comment: // function init(string memory name_, string memory symbol_) internal { [37850,37921]"/>
  <match src=":=: := [32821,32823]" dest=":=: := [32821,32823]"/>
  <match src="]: ] [81339,81340]" dest="]: ] [81346,81347]"/>
  <match src="): ) [64911,64912]" dest="): ) [64918,64919]"/>
  <match src="(: ( [48960,48961]" dest="(: ( [48960,48961]"/>
  <match src="): ) [42965,42966]" dest="): ) [42965,42966]"/>
  <match src="augmented_assignment_expression [68630,68660]" dest="augmented_assignment_expression [68637,68667]"/>
  <match src="identifier: IERC721 [24156,24163]" dest="identifier: IERC721 [24156,24163]"/>
  <match src="identifier: palette [79240,79247]" dest="identifier: palette [79247,79254]"/>
  <match src="variable_declaration [41089,41120]" dest="variable_declaration [41089,41120]"/>
  <match src="identifier: success [30090,30097]" dest="identifier: success [30090,30097]"/>
  <match src="false [52137,52142]" dest="false [52137,52142]"/>
  <match src="identifier: cooking [74223,74230]" dest="identifier: cooking [74230,74237]"/>
  <match src="(: ( [27234,27235]" dest="(: ( [27234,27235]"/>
  <match src="(: ( [80477,80478]" dest="(: ( [80484,80485]"/>
  <match src="=&gt;: =&gt; [59066,59068]" dest="=&gt;: =&gt; [59073,59075]"/>
  <match src="else: else [49285,49289]" dest="else: else [49285,49289]"/>
  <match src="(: ( [69629,69630]" dest="(: ( [69636,69637]"/>
  <match src="(: ( [76845,76846]" dest="(: ( [76852,76853]"/>
  <match src="=: = [81084,81085]" dest="=: = [81091,81092]"/>
  <match src="string [78948,78966]" dest="string [78955,78973]"/>
  <match src="(: ( [38400,38401]" dest="(: ( [38400,38401]"/>
  <match src="}: } [39035,39036]" dest="}: } [39035,39036]"/>
  <match src="public: public [59829,59835]" dest="public: public [59836,59842]"/>
  <match src="string [31440,31481]" dest="string [31440,31481]"/>
  <match src="parameter [22241,22245]" dest="parameter [22241,22245]"/>
  <match src="identifier: encodePacked [16753,16765]" dest="identifier: encodePacked [16753,16765]"/>
  <match src="address: address [20115,20122]" dest="address: address [20115,20122]"/>
  <match src="identifier: ICastleForCommonerSale [2395,2417]" dest="identifier: ICastleForCommonerSale [2395,2417]"/>
  <match src="!: ! [43919,43920]" dest="!: ! [43919,43920]"/>
  <match src="identifier: id [81157,81159]" dest="identifier: id [81164,81166]"/>
  <match src="call_argument [61198,61223]" dest="call_argument [61205,61230]"/>
  <match src=",: , [47413,47414]" dest=",: , [47413,47414]"/>
  <match src="visibility [79695,79701]" dest="visibility [79702,79708]"/>
  <match src="identifier: encodePacked [42925,42937]" dest="identifier: encodePacked [42925,42937]"/>
  <match src="number_literal: 2 [62395,62396]" dest="number_literal: 2 [62402,62403]"/>
  <match src=",: , [31738,31739]" dest=",: , [31738,31739]"/>
  <match src="pure: pure [10188,10192]" dest="pure: pure [10188,10192]"/>
  <match src="): ) [77052,77053]" dest="): ) [77059,77060]"/>
  <match src="identifier: dogewood [66035,66043]" dest="identifier: dogewood [66042,66050]"/>
  <match src="number_literal: 1 [62222,62223]" dest="number_literal: 1 [62229,62230]"/>
  <match src="primitive_type [33778,33783]" dest="primitive_type [33778,33783]"/>
  <match src="call_argument [55832,55836]" dest="call_argument [55832,55836]"/>
  <match src="function_body [44695,44879]" dest="function_body [44695,44879]"/>
  <match src="primitive_type [32458,32463]" dest="primitive_type [32458,32463]"/>
  <match src="(: ( [69963,69964]" dest="(: ( [69970,69971]"/>
  <match src="virtual: virtual [52103,52110]" dest="virtual: virtual [52103,52110]"/>
  <match src="type_name [1960,1966]" dest="type_name [1960,1966]"/>
  <match src="number_literal: 0 [63273,63274]" dest="number_literal: 0 [63280,63281]"/>
  <match src="return_statement [14875,14927]" dest="return_statement [14875,14927]"/>
  <match src="identifier: changeName [836,846]" dest="identifier: changeName [836,846]"/>
  <match src="identifier: tokenPartner [69260,69272]" dest="identifier: tokenPartner [69267,69279]"/>
  <match src="{: { [49312,49313]" dest="{: { [49312,49313]"/>
  <match src="block_statement [41070,41903]" dest="block_statement [41070,41903]"/>
  <match src="[: [ [62191,62192]" dest="[: [ [62198,62199]"/>
  <match src="string_literal [43945,43981]" dest="string_literal [43945,43981]"/>
  <match src=",: , [17363,17364]" dest=",: , [17363,17364]"/>
  <match src="array_access [69260,69282]" dest="array_access [69267,69289]"/>
  <match src="primitive_type [1029,1034]" dest="primitive_type [1029,1034]"/>
  <match src="): ) [45232,45233]" dest="): ) [45232,45233]"/>
  <match src="call_argument [68542,68555]" dest="call_argument [68549,68562]"/>
  <match src="[: [ [62862,62863]" dest="[: [ [62869,62870]"/>
  <match src="visibility [64971,64979]" dest="visibility [64978,64986]"/>
  <match src="primitive_type [2034,2041]" dest="primitive_type [2034,2041]"/>
  <match src="visibility [3538,3546]" dest="visibility [3538,3546]"/>
  <match src="array_access [70913,70936]" dest="array_access [70920,70943]"/>
  <match src="primitive_type [28119,28126]" dest="primitive_type [28119,28126]"/>
  <match src="primitive_type [3432,3439]" dest="primitive_type [3432,3439]"/>
  <match src="member_expression [42885,42906]" dest="member_expression [42885,42906]"/>
  <match src="(: ( [67297,67298]" dest="(: ( [67304,67305]"/>
  <match src="identifier: to [55051,55053]" dest="identifier: to [55051,55053]"/>
  <match src="): ) [45602,45603]" dest="): ) [45602,45603]"/>
  <match src="uint256: uint256 [54958,54965]" dest="uint256: uint256 [54958,54965]"/>
  <match src="function: function [388,396]" dest="function: function [388,396]"/>
  <match src=":: : [79126,79127]" dest=":: : [79133,79134]"/>
  <match src="comment: /**      * @dev See {IERC165-supportsInterface}.      */ [34536,34594]" dest="comment: /**      * @dev See {IERC165-supportsInterface}.      */ [34536,34594]"/>
  <match src="==: == [66284,66286]" dest="==: == [66291,66293]"/>
  <match src="function: function [16641,16649]" dest="function: function [16641,16649]"/>
  <match src="string_literal [44798,44823]" dest="string_literal [44798,44823]"/>
  <match src=".: . [72262,72263]" dest=".: . [72269,72270]"/>
  <match src="): ) [33681,33682]" dest="): ) [33681,33682]"/>
  <match src="struct_declaration [4230,4439]" dest="struct_declaration [4230,4439]"/>
  <match src="identifier: tokenNo_ [69486,69494]" dest="identifier: tokenNo_ [69493,69501]"/>
  <match src="(: ( [29832,29833]" dest="(: ( [29832,29833]"/>
  <match src=".: . [31984,31985]" dest=".: . [31984,31985]"/>
  <match src="=: = [67231,67232]" dest="=: = [67238,67239]"/>
  <match src="==: == [63834,63836]" dest="==: == [63841,63843]"/>
  <match src="assignment_expression [64775,64786]" dest="assignment_expression [64782,64793]"/>
  <match src="[: [ [62545,62546]" dest="[: [ [62552,62553]"/>
  <match src="identifier: ids [80571,80574]" dest="identifier: ids [80578,80581]"/>
  <match src="call_argument [15256,15257]" dest="call_argument [15256,15257]"/>
  <match src="[: [ [54095,54096]" dest="[: [ [54095,54096]"/>
  <match src="): ) [22216,22217]" dest="): ) [22216,22217]"/>
  <match src="): ) [51970,51971]" dest="): ) [51970,51971]"/>
  <match src="(: ( [2322,2323]" dest="(: ( [2322,2323]"/>
  <match src="): ) [22245,22246]" dest="): ) [22245,22246]"/>
  <match src="if_statement [6441,6494]" dest="if_statement [6441,6494]"/>
  <match src="uint16: uint16 [66445,66451]" dest="uint16: uint16 [66452,66458]"/>
  <match src="member_expression [48540,48570]" dest="member_expression [48540,48570]"/>
  <match src="type_name [4533,4540]" dest="type_name [4533,4540]"/>
  <match src="parameter [65697,65719]" dest="parameter [65704,65726]"/>
  <match src="primitive_type [3369,3376]" dest="primitive_type [3369,3376]"/>
  <match src="primitive_type [59898,59905]" dest="primitive_type [59905,59912]"/>
  <match src="identifier: clothes [70992,70999]" dest="identifier: clothes [70999,71006]"/>
  <match src="expression_statement [65994,66113]" dest="expression_statement [66001,66120]"/>
  <match src="bool: bool [67423,67427]" dest="bool: bool [67430,67434]"/>
  <match src="{: { [25823,25824]" dest="{: { [25823,25824]"/>
  <match src="identifier: seed [74600,74604]" dest="identifier: seed [74607,74611]"/>
  <match src=".: . [66141,66142]" dest=".: . [66148,66149]"/>
  <match src="identifier: require [61529,61536]" dest="identifier: require [61536,61543]"/>
  <match src="parameter [1685,1701]" dest="parameter [1685,1701]"/>
  <match src="call_argument [53016,53017]" dest="call_argument [53016,53017]"/>
  <match src="view: view [222,226]" dest="view: view [222,226]"/>
  <match src="type_name [49903,49910]" dest="type_name [49903,49910]"/>
  <match src="}: } [66367,66368]" dest="}: } [66374,66375]"/>
  <match src="function: function [3830,3838]" dest="function: function [3830,3838]"/>
  <match src="identifier: aux [40597,40600]" dest="identifier: aux [40597,40600]"/>
  <match src="revert_statement [44231,44259]" dest="revert_statement [44231,44259]"/>
  <match src="interface_declaration [4567,4716]" dest="interface_declaration [4567,4716]"/>
  <match src="function: function [56915,56923]" dest="function: function [56915,56923]"/>
  <match src="{: { [70022,70023]" dest="{: { [70029,70030]"/>
  <match src=",: , [63324,63325]" dest=",: , [63331,63332]"/>
  <match src="=: = [40970,40971]" dest="=: = [40970,40971]"/>
  <match src="uint256: uint256 [3324,3331]" dest="uint256: uint256 [3324,3331]"/>
  <match src=",: , [46256,46257]" dest=",: , [46256,46257]"/>
  <match src="identifier: NoError [15343,15350]" dest="identifier: NoError [15343,15350]"/>
  <match src="identifier: sender [80563,80569]" dest="identifier: sender [80570,80576]"/>
  <match src=",: , [30109,30110]" dest=",: , [30109,30110]"/>
  <match src="primitive_type [36972,36978]" dest="primitive_type [36972,36978]"/>
  <match src="uint: uint [69542,69546]" dest="uint: uint [69549,69553]"/>
  <match src="identifier: value [68175,68180]" dest="identifier: value [68182,68187]"/>
  <match src="expression_statement [76984,76996]" dest="expression_statement [76991,77003]"/>
  <match src="type_name [35893,35900]" dest="type_name [35893,35900]"/>
  <match src="primitive_type [34627,34633]" dest="primitive_type [34627,34633]"/>
  <match src=".: . [71772,71773]" dest=".: . [71779,71780]"/>
  <match src="primitive_type [862,869]" dest="primitive_type [862,869]"/>
  <match src="returns: returns [21574,21581]" dest="returns: returns [21574,21581]"/>
  <match src="++: ++ [54770,54772]" dest="++: ++ [54770,54772]"/>
  <match src="identifier: from [45656,45660]" dest="identifier: from [45656,45660]"/>
  <match src="identifier: accessory [72040,72049]" dest="identifier: accessory [72047,72056]"/>
  <match src="function: function [31684,31692]" dest="function: function [31684,31692]"/>
  <match src="string: string [7898,7904]" dest="string: string [7898,7904]"/>
  <match src="block_statement [38954,39029]" dest="block_statement [38954,39029]"/>
  <match src="identifier: RecoverError [8413,8425]" dest="identifier: RecoverError [8413,8425]"/>
  <match src="block_statement [69237,69605]" dest="block_statement [69244,69612]"/>
  <match src="call_argument [79906,79955]" dest="call_argument [79913,79962]"/>
  <match src="comment: // 0 : not in sale, 1: claim &amp; WL &amp; public, 2: public sale [58729,58787]" dest="comment: // 0 : not in sale, 1: claim &amp; WL &amp; public, 2: public sale [58736,58794]"/>
  <match src="identifier: encodePacked [17323,17335]" dest="identifier: encodePacked [17323,17335]"/>
  <match src="]: ] [63190,63191]" dest="]: ] [63197,63198]"/>
  <match src="(: ( [31020,31021]" dest="(: ( [31020,31021]"/>
  <match src="call_argument [63708,63719]" dest="call_argument [63715,63726]"/>
  <match src="view: view [134,138]" dest="view: view [134,138]"/>
  <match src="memory: memory [7067,7073]" dest="memory: memory [7067,7073]"/>
  <match src="type_name [4471,4478]" dest="type_name [4471,4478]"/>
  <match src="comment: /**      * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.      */ [18564,18660]" dest="comment: /**      * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.      */ [18564,18660]"/>
  <match src="identifier: temp [7219,7223]" dest="identifier: temp [7219,7223]"/>
  <match src="identifier: mintQuantity_ [64624,64637]" dest="identifier: mintQuantity_ [64631,64644]"/>
  <match src="): ) [5524,5525]" dest="): ) [5524,5525]"/>
  <match src="]: ] [41709,41710]" dest="]: ] [41709,41710]"/>
  <match src="memory: memory [32408,32414]" dest="memory: memory [32408,32414]"/>
  <match src="string [52821,52858]" dest="string [52821,52858]"/>
  <match src="(: ( [11369,11370]" dest="(: ( [11369,11370]"/>
  <match src="assignment_expression [7740,7777]" dest="assignment_expression [7740,7777]"/>
  <match src="call_argument [66433,66443]" dest="call_argument [66440,66450]"/>
  <match src="expression_statement [61245,61247]" dest="expression_statement [61252,61254]"/>
  <match src="binary_expression [39304,39340]" dest="binary_expression [39304,39340]"/>
  <match src="view: view [21569,21573]" dest="view: view [21569,21573]"/>
  <match src="function: function [64802,64810]" dest="function: function [64809,64817]"/>
  <match src="&quot;: &quot; [67482,67483]" dest="&quot;: &quot; [67489,67490]"/>
  <match src="type_name [108,115]" dest="type_name [108,115]"/>
  <match src="call_argument [49997,50004]" dest="call_argument [49997,50004]"/>
  <match src="]: ] [62663,62664]" dest="]: ] [62670,62671]"/>
  <match src="): ) [47448,47449]" dest="): ) [47448,47449]"/>
  <match src="identifier: doges_ [65940,65946]" dest="identifier: doges_ [65947,65953]"/>
  <match src="yul_decimal_number: 255 [13042,13045]" dest="yul_decimal_number: 255 [13042,13045]"/>
  <match src="call_argument [17348,17363]" dest="call_argument [17348,17363]"/>
  <match src="visibility [3708,3716]" dest="visibility [3708,3716]"/>
  <match src="}: } [32079,32080]" dest="}: } [32079,32080]"/>
  <match src="(: ( [66071,66072]" dest="(: ( [66078,66079]"/>
  <match src="augmented_assignment_expression [77480,77491]" dest="augmented_assignment_expression [77487,77498]"/>
  <match src="identifier: MAX_SUPPLY [58221,58231]" dest="identifier: MAX_SUPPLY [58221,58231]"/>
  <match src="&gt;&gt;: &gt;&gt; [76500,76502]" dest="&gt;&gt;: &gt;&gt; [76507,76509]"/>
  <match src="number_literal: 16 [73955,73957]" dest="number_literal: 16 [73962,73964]"/>
  <match src="{: { [4244,4245]" dest="{: { [4244,4245]"/>
  <match src="comment: // address implementation_; [58036,58063]" dest="comment: // address implementation_; [58036,58063]"/>
  <match src="parameter [80684,80694]" dest="parameter [80691,80701]"/>
  <match src="identifier: functionCallWithValue [29631,29652]" dest="identifier: functionCallWithValue [29631,29652]"/>
  <match src="string_literal [48043,48063]" dest="string_literal [48043,48063]"/>
  <match src="function: function [20079,20087]" dest="function: function [20079,20087]"/>
  <match src="{: { [63668,63669]" dest="{: { [63675,63676]"/>
  <match src="(: ( [28523,28524]" dest="(: ( [28523,28524]"/>
  <match src="binary_expression [46779,46832]" dest="binary_expression [46779,46832]"/>
  <match src="state_mutability [79702,79706]" dest="state_mutability [79709,79713]"/>
  <match src="): ) [60957,60958]" dest="): ) [60964,60965]"/>
  <match src="address: address [54937,54944]" dest="address: address [54937,54944]"/>
  <match src="override_specifier [43877,43885]" dest="override_specifier [43877,43885]"/>
  <match src="(: ( [10893,10894]" dest="(: ( [10893,10894]"/>
  <match src="uint256: uint256 [59820,59827]" dest="uint256: uint256 [59827,59834]"/>
  <match src="==: == [39316,39318]" dest="==: == [39316,39318]"/>
  <match src=".: . [78149,78150]" dest=".: . [78156,78157]"/>
  <match src="function_definition [3955,4007]" dest="function_definition [3955,4007]"/>
  <match src="(: ( [24275,24276]" dest="(: ( [24275,24276]"/>
  <match src="parameter [45001,45011]" dest="parameter [45001,45011]"/>
  <match src="function_definition [4447,4560]" dest="function_definition [4447,4560]"/>
  <match src="): ) [8955,8956]" dest="): ) [8955,8956]"/>
  <match src="(: ( [1660,1661]" dest="(: ( [1660,1661]"/>
  <match src="identifier: tokenNo_ [69573,69581]" dest="identifier: tokenNo_ [69580,69588]"/>
  <match src="type_name [4666,4672]" dest="type_name [4666,4672]"/>
  <match src="return_statement [11354,11411]" dest="return_statement [11354,11411]"/>
  <match src="uint256: uint256 [40091,40098]" dest="uint256: uint256 [40091,40098]"/>
  <match src="returns: returns [333,340]" dest="returns: returns [333,340]"/>
  <match src="identifier: InvalidSignatureLength [8692,8714]" dest="identifier: InvalidSignatureLength [8692,8714]"/>
  <match src=",: , [15181,15182]" dest=",: , [15181,15182]"/>
  <match src=".: . [71160,71161]" dest=".: . [71167,71168]"/>
  <match src="string_literal [69303,69318]" dest="string_literal [69310,69325]"/>
  <match src="{: { [822,823]" dest="{: { [822,823]"/>
  <match src="struct_member [4096,4109]" dest="struct_member [4096,4109]"/>
  <match src="identifier: buffer [7905,7911]" dest="identifier: buffer [7905,7911]"/>
  <match src="): ) [211,212]" dest="): ) [211,212]"/>
  <match src="internal: internal [7037,7045]" dest="internal: internal [7037,7045]"/>
  <match src="(: ( [77608,77609]" dest="(: ( [77615,77616]"/>
  <match src="comment: // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256. [50747,50828]" dest="comment: // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256. [50747,50828]"/>
  <match src="string [79023,79069]" dest="string [79030,79076]"/>
  <match src="address: address [44493,44500]" dest="address: address [44493,44500]"/>
  <match src="parameter [44669,44684]" dest="parameter [44669,44684]"/>
  <match src=",: , [22877,22878]" dest=",: , [22877,22878]"/>
  <match src="identifier: data [28148,28152]" dest="identifier: data [28148,28152]"/>
  <match src="(: ( [68994,68995]" dest="(: ( [69001,69002]"/>
  <match src="identifier: require [63512,63519]" dest="identifier: require [63519,63526]"/>
  <match src="identifier: tokenURINotRevealed [176,195]" dest="identifier: tokenURINotRevealed [176,195]"/>
  <match src="identifier: rarities [63054,63062]" dest="identifier: rarities [63061,63069]"/>
  <match src="identifier: s [12935,12936]" dest="identifier: s [12935,12936]"/>
  <match src="number_literal: 1 [62888,62889]" dest="number_literal: 1 [62895,62896]"/>
  <match src="): ) [585,586]" dest="): ) [585,586]"/>
  <match src=",: , [28699,28700]" dest=",: , [28699,28700]"/>
  <match src=",: , [63334,63335]" dest=",: , [63341,63342]"/>
  <match src=",: , [47860,47861]" dest=",: , [47860,47861]"/>
  <match src="&quot;: &quot; [46199,46200]" dest="&quot;: &quot; [46199,46200]"/>
  <match src="comment: // unique id to distinguish activities [4267,4305]" dest="comment: // unique id to distinguish activities [4267,4305]"/>
  <match src="view: view [42701,42705]" dest="view: view [42701,42705]"/>
  <match src="struct_member [36741,36761]" dest="struct_member [36741,36761]"/>
  <match src="return: return [42395,42401]" dest="return: return [42395,42401]"/>
  <match src="expression_statement [61700,61720]" dest="expression_statement [61707,61727]"/>
  <match src="(: ( [69117,69118]" dest="(: ( [69124,69125]"/>
  <match src="function: function [39768,39776]" dest="function: function [39768,39776]"/>
  <match src="type_name [76401,76406]" dest="type_name [76408,76413]"/>
  <match src="{: { [4060,4061]" dest="{: { [4060,4061]"/>
  <match src="type_name [1189,1195]" dest="type_name [1189,1195]"/>
  <match src="function_definition [65064,65192]" dest="function_definition [65071,65199]"/>
  <match src="&quot;: &quot; [7642,7643]" dest="&quot;: &quot; [7642,7643]"/>
  <match src="call_argument [15003,15004]" dest="call_argument [15003,15004]"/>
  <match src="identifier: transfer [5888,5896]" dest="identifier: transfer [5888,5896]"/>
  <match src="string_literal [44746,44757]" dest="string_literal [44746,44757]"/>
  <match src="}: } [2241,2242]" dest="}: } [2241,2242]"/>
  <match src="identifier: topCommoner_ [71090,71102]" dest="identifier: topCommoner_ [71097,71109]"/>
  <match src="): ) [64006,64007]" dest="): ) [64013,64014]"/>
  <match src="function_body [45069,45430]" dest="function_body [45069,45430]"/>
  <match src="address: address [45336,45343]" dest="address: address [45336,45343]"/>
  <match src="internal: internal [43248,43256]" dest="internal: internal [43248,43256]"/>
  <match src="]: ] [7636,7637]" dest="]: ] [7636,7637]"/>
  <match src="uint256: uint256 [1484,1491]" dest="uint256: uint256 [1484,1491]"/>
  <match src="identifier: background [5806,5816]" dest="identifier: background [5806,5816]"/>
  <match src="function: function [827,835]" dest="function: function [827,835]"/>
  <match src="binary_expression [51483,51510]" dest="binary_expression [51483,51510]"/>
  <match src="member_expression [50909,50933]" dest="member_expression [50909,50933]"/>
  <match src="string_literal [50057,50087]" dest="string_literal [50057,50087]"/>
  <match src="(: ( [5402,5403]" dest="(: ( [5402,5403]"/>
  <match src="-: - [38609,38610]" dest="-: - [38609,38610]"/>
  <match src="): ) [44823,44824]" dest="): ) [44823,44824]"/>
  <match src="parameter [45537,45549]" dest="parameter [45537,45549]"/>
  <match src="(: ( [67128,67129]" dest="(: ( [67135,67136]"/>
  <match src="parameter [17282,17289]" dest="parameter [17282,17289]"/>
  <match src="primitive_type [1141,1146]" dest="primitive_type [1141,1146]"/>
  <match src="return: return [30066,30072]" dest="return: return [30066,30072]"/>
  <match src="): ) [46189,46190]" dest="): ) [46189,46190]"/>
  <match src="emit_statement [55064,55098]" dest="emit_statement [55064,55098]"/>
  <match src="uint256: uint256 [55691,55698]" dest="uint256: uint256 [55691,55698]"/>
  <match src="): ) [77213,77214]" dest="): ) [77220,77221]"/>
  <match src="(: ( [55759,55760]" dest="(: ( [55759,55760]"/>
  <match src="): ) [19097,19098]" dest="): ) [19097,19098]"/>
  <match src="primitive_type [6535,6542]" dest="primitive_type [6535,6542]"/>
  <match src="--: -- [7720,7722]" dest="--: -- [7720,7722]"/>
  <match src="): ) [30999,31000]" dest="): ) [30999,31000]"/>
  <match src="call_argument [66777,66795]" dest="call_argument [66784,66802]"/>
  <match src="uint256: uint256 [39829,39836]" dest="uint256: uint256 [39829,39836]"/>
  <match src=",: , [62281,62282]" dest=",: , [62288,62289]"/>
  <match src="yul_identifier [13029,13030]" dest="yul_identifier [13029,13030]"/>
  <match src="(: ( [59808,59809]" dest="(: ( [59815,59816]"/>
  <match src="function: function [24367,24375]" dest="function: function [24367,24375]"/>
  <match src="type_name [4500,4507]" dest="type_name [4500,4507]"/>
  <match src="primitive_type [20777,20784]" dest="primitive_type [20777,20784]"/>
  <match src="): ) [51509,51510]" dest="): ) [51509,51510]"/>
  <match src="number_literal: 66 [62786,62788]" dest="number_literal: 66 [62793,62795]"/>
  <match src=".: . [72039,72040]" dest=".: . [72046,72047]"/>
  <match src="tuple_expression [11361,11410]" dest="tuple_expression [11361,11410]"/>
  <match src="type_name [13399,13406]" dest="type_name [13399,13406]"/>
  <match src="): ) [39199,39200]" dest="): ) [39199,39200]"/>
  <match src="number_literal: 0 [54616,54617]" dest="number_literal: 0 [54616,54617]"/>
  <match src="internal: internal [37241,37249]" dest="internal: internal [37241,37249]"/>
  <match src="function_definition [67336,67617]" dest="function_definition [67343,67624]"/>
  <match src="&quot;: &quot; [65777,65778]" dest="&quot;: &quot; [65784,65785]"/>
  <match src="parameter [46755,46759]" dest="parameter [46755,46759]"/>
  <match src="internal: internal [40041,40049]" dest="internal: internal [40041,40049]"/>
  <match src="(: ( [40312,40313]" dest="(: ( [40312,40313]"/>
  <match src="uint8: uint8 [5175,5180]" dest="uint8: uint8 [5175,5180]"/>
  <match src="type_cast_expression [11362,11372]" dest="type_cast_expression [11362,11372]"/>
  <match src="call_argument [76453,76479]" dest="call_argument [76460,76486]"/>
  <match src=",: , [23812,23813]" dest=",: , [23812,23813]"/>
  <match src="return_statement [15753,15770]" dest="return_statement [15753,15770]"/>
  <match src="external: external [44686,44694]" dest="external: external [44686,44694]"/>
  <match src="[: [ [79439,79440]" dest="[: [ [79446,79447]"/>
  <match src="(: ( [77952,77953]" dest="(: ( [77959,77960]"/>
  <match src="state_mutability [30842,30846]" dest="state_mutability [30842,30846]"/>
  <match src="primitive_type [54937,54944]" dest="primitive_type [54937,54944]"/>
  <match src="&quot;: &quot; [78948,78949]" dest="&quot;: &quot; [78955,78956]"/>
  <match src=",: , [22198,22199]" dest=",: , [22198,22199]"/>
  <match src="string [30468,30507]" dest="string [30468,30507]"/>
  <match src="identifier: id [5708,5710]" dest="identifier: id [5708,5710]"/>
  <match src="visibility [1510,1518]" dest="visibility [1510,1518]"/>
  <match src=",: , [31949,31950]" dest=",: , [31949,31950]"/>
  <match src="&quot;: &quot; [68115,68116]" dest="&quot;: &quot; [68122,68123]"/>
  <match src="string_literal [7640,7643]" dest="string_literal [7640,7643]"/>
  <match src="): ) [50550,50551]" dest="): ) [50550,50551]"/>
  <match src="identifier: _msgSender [52702,52712]" dest="identifier: _msgSender [52702,52712]"/>
  <match src="contract_body [5054,5938]" dest="contract_body [5054,5938]"/>
  <match src="for: for [74451,74454]" dest="for: for [74458,74461]"/>
  <match src=",: , [63198,63199]" dest=",: , [63205,63206]"/>
  <match src="string_literal [63708,63719]" dest="string_literal [63715,63726]"/>
  <match src="identifier: Transfer [51891,51899]" dest="identifier: Transfer [51891,51899]"/>
  <match src="&quot;: &quot; [44798,44799]" dest="&quot;: &quot; [44798,44799]"/>
  <match src="uint256: uint256 [5645,5652]" dest="uint256: uint256 [5645,5652]"/>
  <match src="block_statement [50838,51874]" dest="block_statement [50838,51874]"/>
  <match src="function_definition [3652,3717]" dest="function_definition [3652,3717]"/>
  <match src="): ) [42745,42746]" dest="): ) [42745,42746]"/>
  <match src="==: == [6451,6453]" dest="==: == [6451,6453]"/>
  <match src="identifier: commoners [79484,79493]" dest="identifier: commoners [79491,79500]"/>
  <match src="visibility [59829,59835]" dest="visibility [59836,59842]"/>
  <match src="call_argument [80571,80581]" dest="call_argument [80578,80588]"/>
  <match src="call_expression [67530,67578]" dest="call_expression [67537,67585]"/>
  <match src="]: ] [71874,71875]" dest="]: ] [71881,71882]"/>
  <match src="identifier: t [77168,77169]" dest="identifier: t [77175,77176]"/>
  <match src="member_expression [79375,79403]" dest="member_expression [79382,79410]"/>
  <match src="type_name [37550,37581]" dest="type_name [37550,37581]"/>
  <match src="type_cast_expression [77691,77712]" dest="type_cast_expression [77698,77719]"/>
  <match src=",: , [7503,7504]" dest=",: , [7503,7504]"/>
  <match src="address: address [19347,19354]" dest="address: address [19347,19354]"/>
  <match src="=: = [51081,51082]" dest="=: = [51081,51082]"/>
  <match src="[: [ [69404,69405]" dest="[: [ [69411,69412]"/>
  <match src="state_mutability [18183,18187]" dest="state_mutability [18183,18187]"/>
  <match src="identifier: _addressData [48415,48427]" dest="identifier: _addressData [48415,48427]"/>
  <match src="yul_hex_number: 0x40 [10782,10786]" dest="yul_hex_number: 0x40 [10782,10786]"/>
  <match src="view: view [76387,76391]" dest="view: view [76394,76398]"/>
  <match src="type_name [21325,21332]" dest="type_name [21325,21332]"/>
  <match src="primitive_type [59228,59235]" dest="primitive_type [59235,59242]"/>
  <match src="type_name [10155,10160]" dest="type_name [10155,10160]"/>
  <match src="user_defined_type [37569,37580]" dest="user_defined_type [37569,37580]"/>
  <match src="identifier: breed [77008,77013]" dest="identifier: breed [77015,77020]"/>
  <match src="(: ( [25776,25777]" dest="(: ( [25776,25777]"/>
  <match src="function_definition [15498,15777]" dest="function_definition [15498,15777]"/>
  <match src="comment: // ownership above and the recipient's balance can't realistically overflow. [50661,50737]" dest="comment: // ownership above and the recipient's balance can't realistically overflow. [50661,50737]"/>
  <match src="number_literal: 0 [63014,63015]" dest="number_literal: 0 [63021,63022]"/>
  <match src="return: return [7117,7123]" dest="return: return [7117,7123]"/>
  <match src="if: if [41737,41739]" dest="if: if [41737,41739]"/>
  <match src="identifier: toEthSignedMessageHash [67535,67557]" dest="identifier: toEthSignedMessageHash [67542,67564]"/>
  <match src="string_literal [65431,65441]" dest="string_literal [65438,65448]"/>
  <match src="primitive_type [32344,32348]" dest="primitive_type [32344,32348]"/>
  <match src="unary_expression [48921,48991]" dest="unary_expression [48921,48991]"/>
  <match src="call_argument [31998,32002]" dest="call_argument [31998,32002]"/>
  <match src="identifier: tokenId [51960,51967]" dest="identifier: tokenId [51960,51967]"/>
  <match src="view: view [39162,39166]" dest="view: view [39162,39166]"/>
  <match src="identifier: tx [61160,61162]" dest="identifier: tx [61167,61169]"/>
  <match src="number_literal: 14 [71995,71997]" dest="number_literal: 14 [72002,72004]"/>
  <match src="visibility [37815,37822]" dest="visibility [37815,37822]"/>
  <match src="function: function [30708,30716]" dest="function: function [30708,30716]"/>
  <match src="comment: //     uint8 bodyType; A [73485,73509]" dest="comment: //     uint8 bodyType; A [73492,73516]"/>
  <match src="struct_declaration [4041,4224]" dest="struct_declaration [4041,4224]"/>
  <match src="type_name [12248,12255]" dest="type_name [12248,12255]"/>
  <match src="binary_expression [10930,10952]" dest="binary_expression [10930,10952]"/>
  <match src="address: address [49529,49536]" dest="address: address [49529,49536]"/>
  <match src="string_literal [8621,8647]" dest="string_literal [8621,8647]"/>
  <match src="external: external [5494,5502]" dest="external: external [5494,5502]"/>
  <match src="): ) [16336,16337]" dest="): ) [16336,16337]"/>
  <match src="view: view [3260,3264]" dest="view: view [3260,3264]"/>
  <match src="parameter [49903,49918]" dest="parameter [49903,49918]"/>
  <match src="type_name [1440,1447]" dest="type_name [1440,1447]"/>
  <match src="type_name [40883,40890]" dest="type_name [40883,40890]"/>
  <match src="}: } [43321,43322]" dest="}: } [43321,43322]"/>
  <match src="&quot;: &quot; [79068,79069]" dest="&quot;: &quot; [79075,79076]"/>
  <match src=",: , [49557,49558]" dest=",: , [49557,49558]"/>
  <match src="uint256: uint256 [3273,3280]" dest="uint256: uint256 [3273,3280]"/>
  <match src="&quot;: &quot; [67994,67995]" dest="&quot;: &quot; [68001,68002]"/>
  <match src="type_name [59433,59444]" dest="type_name [59440,59451]"/>
  <match src="): ) [33745,33746]" dest="): ) [33745,33746]"/>
  <match src="uint256: uint256 [58247,58254]" dest="uint256: uint256 [58247,58254]"/>
  <match src="identifier: totalSupply [38366,38377]" dest="identifier: totalSupply [38366,38377]"/>
  <match src="(: ( [73267,73268]" dest="(: ( [73274,73275]"/>
  <match src="string [43945,43981]" dest="string [43945,43981]"/>
  <match src="[: [ [62682,62683]" dest="[: [ [62689,62690]"/>
  <match src="external: external [5864,5872]" dest="external: external [5864,5872]"/>
  <match src="): ) [77980,77981]" dest="): ) [77987,77988]"/>
  <match src="identifier: breed [70831,70836]" dest="identifier: breed [70838,70843]"/>
  <match src=".: . [70991,70992]" dest=".: . [70998,70999]"/>
  <match src="uint8: uint8 [76361,76366]" dest="uint8: uint8 [76368,76373]"/>
  <match src="virtual: virtual [43262,43269]" dest="virtual: virtual [43262,43269]"/>
  <match src="[: [ [68500,68501]" dest="[: [ [68507,68508]"/>
  <match src="identifier: quantity_ [74818,74827]" dest="identifier: quantity_ [74825,74834]"/>
  <match src="comment: // as a burned slot cannot contain the zero address. [51604,51656]" dest="comment: // as a burned slot cannot contain the zero address. [51604,51656]"/>
  <match src="identifier: from [44986,44990]" dest="identifier: from [44986,44990]"/>
  <match src="call_argument [63875,63917]" dest="call_argument [63882,63924]"/>
  <match src="expression_statement [63250,63276]" dest="expression_statement [63257,63283]"/>
  <match src="(: ( [40098,40099]" dest="(: ( [40098,40099]"/>
  <match src="identifier: this [64209,64213]" dest="identifier: this [64216,64220]"/>
  <match src="return_type_definition [4691,4712]" dest="return_type_definition [4691,4712]"/>
  <match src="identifier: commoners [81105,81114]" dest="identifier: commoners [81112,81121]"/>
  <match src="comment: // This method relies on extcodesize/address.code.length, which returns 0 [25834,25907]" dest="comment: // This method relies on extcodesize/address.code.length, which returns 0 [25834,25907]"/>
  <match src="(: ( [48864,48865]" dest="(: ( [48864,48865]"/>
  <match src="(: ( [31828,31829]" dest="(: ( [31828,31829]"/>
  <match src="type_name [37569,37580]" dest="type_name [37569,37580]"/>
  <match src="emit: emit [54530,54534]" dest="emit: emit [54530,54534]"/>
  <match src="type_name [6003,6010]" dest="type_name [6003,6010]"/>
  <match src="number_literal: 0 [73846,73847]" dest="number_literal: 0 [73853,73854]"/>
  <match src="]: ] [80334,80335]" dest="]: ] [80341,80342]"/>
  <match src="}: } [36380,36381]" dest="}: } [36380,36381]"/>
  <match src="==: == [68942,68944]" dest="==: == [68949,68951]"/>
  <match src="member_expression [46281,46294]" dest="member_expression [46281,46294]"/>
  <match src="call_expression [30024,30055]" dest="call_expression [30024,30055]"/>
  <match src="(: ( [57762,57763]" dest="(: ( [57762,57763]"/>
  <match src="comment: // currently is to use assembly. [10632,10664]" dest="comment: // currently is to use assembly. [10632,10664]"/>
  <match src="identifier: left_ [74996,75001]" dest="identifier: left_ [75003,75008]"/>
  <match src="]: ] [79988,79989]" dest="]: ] [79995,79996]"/>
  <match src="bytes: bytes [55717,55722]" dest="bytes: bytes [55717,55722]"/>
  <match src="identifier: tryRecover [10130,10140]" dest="identifier: tryRecover [10130,10140]"/>
  <match src="]: ] [62513,62514]" dest="]: ] [62520,62521]"/>
  <match src="{: { [67429,67430]" dest="{: { [67436,67437]"/>
  <match src="internal: internal [49926,49934]" dest="internal: internal [49926,49934]"/>
  <match src="comment: /**      * Returns the number of tokens minted by `owner`.      */ [39694,39762]" dest="comment: /**      * Returns the number of tokens minted by `owner`.      */ [39694,39762]"/>
  <match src="address: address [45537,45544]" dest="address: address [45537,45544]"/>
  <match src="expression_statement [63587,63608]" dest="expression_statement [63594,63615]"/>
  <match src="type_name [58704,58709]" dest="type_name [58711,58716]"/>
  <match src="): ) [5025,5026]" dest="): ) [5025,5026]"/>
  <match src="primitive_type [47871,47875]" dest="primitive_type [47871,47875]"/>
  <match src="=: = [73737,73738]" dest="=: = [73744,73745]"/>
  <match src="parameter [12309,12316]" dest="parameter [12309,12316]"/>
  <match src=",: , [44857,44858]" dest=",: , [44857,44858]"/>
  <match src="comment: //     _symbol = symbol_; [37954,37979]" dest="comment: //     _symbol = symbol_; [37954,37979]"/>
  <match src="struct_expression [30024,30049]" dest="struct_expression [30024,30049]"/>
  <match src="identifier: dogewood [61840,61848]" dest="identifier: dogewood [61847,61855]"/>
  <match src="&quot;: &quot; [61222,61223]" dest="&quot;: &quot; [61229,61230]"/>
  <match src="function_body [7559,7920]" dest="function_body [7559,7920]"/>
  <match src="string [66907,66926]" dest="string [66914,66933]"/>
  <match src="(: ( [78039,78040]" dest="(: ( [78046,78047]"/>
  <match src="identifier: from [45160,45164]" dest="identifier: from [45160,45164]"/>
  <match src="): ) [16153,16154]" dest="): ) [16153,16154]"/>
  <match src="{: { [70337,70338]" dest="{: { [70344,70345]"/>
  <match src="): ) [58152,58153]" dest="): ) [58152,58153]"/>
  <match src="&lt;=: &lt;= [68404,68406]" dest="&lt;=: &lt;= [68411,68413]"/>
  <match src="identifier: msg [63823,63826]" dest="identifier: msg [63830,63833]"/>
  <match src="identifier: tryRecover [12734,12744]" dest="identifier: tryRecover [12734,12744]"/>
  <match src="function: function [3296,3304]" dest="function: function [3296,3304]"/>
  <match src="member_expression [79430,79459]" dest="member_expression [79437,79466]"/>
  <match src="identifier: from [52696,52700]" dest="identifier: from [52696,52700]"/>
  <match src="identifier: who_ [78807,78811]" dest="identifier: who_ [78814,78818]"/>
  <match src="identifier: from [50044,50048]" dest="identifier: from [50044,50048]"/>
  <match src="(: ( [54126,54127]" dest="(: ( [54126,54127]"/>
  <match src="identifier: i [70002,70003]" dest="identifier: i [70009,70010]"/>
  <match src="primitive_type [4987,4991]" dest="primitive_type [4987,4991]"/>
  <match src="array_access [81061,81074]" dest="array_access [81068,81081]"/>
  <match src="==: == [8676,8678]" dest="==: == [8676,8678]"/>
  <match src=".: . [78098,78099]" dest=".: . [78105,78106]"/>
  <match src="return: return [16262,16268]" dest="return: return [16262,16268]"/>
  <match src="=: = [63742,63743]" dest="=: = [63749,63750]"/>
  <match src="identifier: require [69334,69341]" dest="identifier: require [69341,69348]"/>
  <match src=".: . [15342,15343]" dest=".: . [15342,15343]"/>
  <match src="parameter [15586,15595]" dest="parameter [15586,15595]"/>
  <match src="(: ( [7543,7544]" dest="(: ( [7543,7544]"/>
  <match src="call_argument [78800,78802]" dest="call_argument [78807,78809]"/>
  <match src="assignment_expression [70094,70145]" dest="assignment_expression [70101,70152]"/>
  <match src="comment: /**      * To change the starting tokenId, please override this function.      */ [38042,38125]" dest="comment: /**      * To change the starting tokenId, please override this function.      */ [38042,38125]"/>
  <match src="array_access [81193,81206]" dest="array_access [81200,81213]"/>
  <match src="override: override [43437,43445]" dest="override: override [43437,43445]"/>
  <match src="parameter [57000,57020]" dest="parameter [57000,57020]"/>
  <match src="identifier: tryRecover [13461,13471]" dest="identifier: tryRecover [13461,13471]"/>
  <match src="{: { [42108,42109]" dest="{: { [42108,42109]"/>
  <match src="assembly: assembly [12911,12919]" dest="assembly: assembly [12911,12919]"/>
  <match src="function: function [42659,42667]" dest="function: function [42659,42667]"/>
  <match src=",: , [1888,1889]" dest=",: , [1888,1889]"/>
  <match src="state_mutability [33756,33760]" dest="state_mutability [33756,33760]"/>
  <match src="): ) [38194,38195]" dest="): ) [38194,38195]"/>
  <match src="call_argument [68931,68946]" dest="call_argument [68938,68953]"/>
  <match src="identifier: currSlot [53587,53595]" dest="identifier: currSlot [53587,53595]"/>
  <match src="identifier: topCommoner_ [73164,73176]" dest="identifier: topCommoner_ [73171,73183]"/>
  <match src="identifier: _startTokenId [38626,38639]" dest="identifier: _startTokenId [38626,38639]"/>
  <match src="view: view [78878,78882]" dest="view: view [78885,78889]"/>
  <match src=",: , [62342,62343]" dest=",: , [62349,62350]"/>
  <match src="identifier: msg [63687,63690]" dest="identifier: msg [63694,63697]"/>
  <match src="identifier: from [81450,81454]" dest="identifier: from [81457,81461]"/>
  <match src="type_name [40064,40071]" dest="type_name [40064,40071]"/>
  <match src=",: , [62895,62896]" dest=",: , [62902,62903]"/>
  <match src="yul_path [10806,10807]" dest="yul_path [10806,10807]"/>
  <match src="internal: internal [30833,30841]" dest="internal: internal [30833,30841]"/>
  <match src="}: } [81561,81562]" dest="}: } [81568,81569]"/>
  <match src="return_type_definition [76392,76407]" dest="return_type_definition [76399,76414]"/>
  <match src="call_expression [29271,29358]" dest="call_expression [29271,29358]"/>
  <match src="(: ( [7089,7090]" dest="(: ( [7089,7090]"/>
  <match src="): ) [27172,27173]" dest="): ) [27172,27173]"/>
  <match src="type_name [4897,4904]" dest="type_name [4897,4904]"/>
  <match src="identifier: talentId [60724,60732]" dest="identifier: talentId [60731,60739]"/>
  <match src="update_expression [80517,80524]" dest="update_expression [80524,80531]"/>
  <match src="primitive_type [57000,57007]" dest="primitive_type [57000,57007]"/>
  <match src="?: ? [69948,69949]" dest="?: ? [69955,69956]"/>
  <match src="identifier: TokenOwnership [40923,40937]" dest="identifier: TokenOwnership [40923,40937]"/>
  <match src="revert_statement [52814,52860]" dest="revert_statement [52814,52860]"/>
  <match src="identifier: require [66253,66260]" dest="identifier: require [66260,66267]"/>
  <match src="parameter [13861,13868]" dest="parameter [13861,13868]"/>
  <match src="{: { [52111,52112]" dest="{: { [52111,52112]"/>
  <match src="parameter [31829,31841]" dest="parameter [31829,31841]"/>
  <match src="call_expression [39002,39017]" dest="call_expression [39002,39017]"/>
  <match src="type_name [12778,12785]" dest="type_name [12778,12785]"/>
  <match src="parameter [39210,39214]" dest="parameter [39210,39214]"/>
  <match src="call_argument [54602,54606]" dest="call_argument [54602,54606]"/>
  <match src="type_name [28639,28644]" dest="type_name [28639,28644]"/>
  <match src="}: } [34759,34760]" dest="}: } [34759,34760]"/>
  <match src="comment: /**      * @dev Transfers `tokenId` from `from` to `to`.      *      * Requirements:      *      * - `to` cannot be the zero address.      * - `tokenId` token must be owned by `from`.      *      * Emits a {Transfer} event.      */ [49584,49824]" dest="comment: /**      * @dev Transfers `tokenId` from `from` to `to`.      *      * Requirements:      *      * - `to` cannot be the zero address.      * - `tokenId` token must be owned by `from`.      *      * Emits a {Transfer} event.      */ [49584,49824]"/>
  <match src="type_name [38401,38408]" dest="type_name [38401,38408]"/>
  <match src="return_type_definition [38392,38409]" dest="return_type_definition [38392,38409]"/>
  <match src="[: [ [70816,70817]" dest="[: [ [70823,70824]"/>
  <match src="identifier: ownership [41209,41218]" dest="identifier: ownership [41209,41218]"/>
  <match src="binary_expression [7697,7707]" dest="binary_expression [7697,7707]"/>
  <match src="(: ( [39015,39016]" dest="(: ( [39015,39016]"/>
  <match src="if: if [54123,54125]" dest="if: if [54123,54125]"/>
  <match src="number_literal: 15 [73021,73023]" dest="number_literal: 15 [73028,73030]"/>
  <match src="primitive_type [81515,81521]" dest="primitive_type [81522,81528]"/>
  <match src="public: public [58205,58211]" dest="public: public [58205,58211]"/>
  <match src="comment: // as a burned slot cannot contain the zero address. [54248,54300]" dest="comment: // as a burned slot cannot contain the zero address. [54248,54300]"/>
  <match src="function: function [77931,77939]" dest="function: function [77938,77946]"/>
  <match src="identifier: selectTrait [76936,76947]" dest="identifier: selectTrait [76943,76954]"/>
  <match src="expression_statement [27249,27328]" dest="expression_statement [27249,27328]"/>
  <match src="): ) [65719,65720]" dest="): ) [65726,65727]"/>
  <match src="identifier: score [4508,4513]" dest="identifier: score [4508,4513]"/>
  <match src="): ) [50004,50005]" dest="): ) [50004,50005]"/>
  <match src="(: ( [18196,18197]" dest="(: ( [18196,18197]"/>
  <match src="identifier: topCommoner_ [72995,73007]" dest="identifier: topCommoner_ [73002,73014]"/>
  <match src="user_defined_type [35852,35867]" dest="user_defined_type [35852,35867]"/>
  <match src="expression_statement [54758,54773]" dest="expression_statement [54758,54773]"/>
  <match src="internal: internal [75394,75402]" dest="internal: internal [75401,75409]"/>
  <match src="identifier: seed [77395,77399]" dest="identifier: seed [77402,77406]"/>
  <match src="memory: memory [681,687]" dest="memory: memory [681,687]"/>
  <match src="uint256: uint256 [45022,45029]" dest="uint256: uint256 [45022,45029]"/>
  <match src="type_name [39541,39548]" dest="type_name [39541,39548]"/>
  <match src="identifier: c_ [64784,64786]" dest="identifier: c_ [64791,64793]"/>
  <match src="identifier: value [7167,7172]" dest="identifier: value [7167,7172]"/>
  <match src=".: . [54135,54136]" dest=".: . [54135,54136]"/>
  <match src="binary_expression [64524,64543]" dest="binary_expression [64531,64550]"/>
  <match src="=: = [7198,7199]" dest="=: = [7198,7199]"/>
  <match src=",: , [63077,63078]" dest=",: , [63084,63085]"/>
  <match src="uint256: uint256 [5700,5707]" dest="uint256: uint256 [5700,5707]"/>
  <match src="identifier: initPrize [4181,4190]" dest="identifier: initPrize [4181,4190]"/>
  <match src="identifier: isApprovedForAll [44476,44492]" dest="identifier: isApprovedForAll [44476,44492]"/>
  <match src="(: ( [44227,44228]" dest="(: ( [44227,44228]"/>
  <match src="type_name [1595,1604]" dest="type_name [1595,1604]"/>
  <match src="primitive_type [52412,52416]" dest="primitive_type [52412,52416]"/>
  <match src="identifier: IERC721 [18352,18359]" dest="identifier: IERC721 [18352,18359]"/>
  <match src="): ) [6715,6716]" dest="): ) [6715,6716]"/>
  <match src="parenthesized_expression [45354,45381]" dest="parenthesized_expression [45354,45381]"/>
  <match src="type_name [69899,69906]" dest="type_name [69906,69913]"/>
  <match src="=: = [81041,81042]" dest="=: = [81048,81049]"/>
  <match src="[: [ [63131,63132]" dest="[: [ [63138,63139]"/>
  <match src="augmented_assignment_expression [53436,53465]" dest="augmented_assignment_expression [53436,53465]"/>
  <match src="binary_expression [45950,46076]" dest="binary_expression [45950,46076]"/>
  <match src="): ) [4773,4774]" dest="): ) [4773,4774]"/>
  <match src=",: , [56989,56990]" dest=",: , [56989,56990]"/>
  <match src="identifier: numBatch [74867,74875]" dest="identifier: numBatch [74874,74882]"/>
  <match src="): ) [4549,4550]" dest="): ) [4549,4550]"/>
  <match src="string [63489,63500]" dest="string [63496,63507]"/>
  <match src="abstract: abstract [33588,33596]" dest="abstract: abstract [33588,33596]"/>
  <match src="bytes32: bytes32 [15525,15532]" dest="bytes32: bytes32 [15525,15532]"/>
  <match src="binary_expression [8461,8490]" dest="binary_expression [8461,8490]"/>
  <match src="{: { [61518,61519]" dest="{: { [61525,61526]"/>
  <match src="call_argument [27108,27139]" dest="call_argument [27108,27139]"/>
  <match src="identifier: owner [19092,19097]" dest="identifier: owner [19092,19097]"/>
  <match src=",: , [63268,63269]" dest=",: , [63275,63276]"/>
  <match src="returns: returns [19113,19120]" dest="returns: returns [19113,19120]"/>
  <match src="member_expression [39864,39896]" dest="member_expression [39864,39896]"/>
  <match src="expression_statement [6616,6627]" dest="expression_statement [6616,6627]"/>
  <match src="+: + [74503,74504]" dest="+: + [74510,74511]"/>
  <match src=",: , [66292,66293]" dest=",: , [66299,66300]"/>
  <match src="return_statement [78025,78388]" dest="return_statement [78032,78395]"/>
  <match src="uint256: uint256 [18730,18737]" dest="uint256: uint256 [18730,18737]"/>
  <match src="identifier: require [61103,61110]" dest="identifier: require [61110,61117]"/>
  <match src="call_argument [78205,78214]" dest="call_argument [78212,78221]"/>
  <match src="identifier: functionDelegateCall [31693,31713]" dest="identifier: functionDelegateCall [31693,31713]"/>
  <match src="call_argument [64621,64622]" dest="call_argument [64628,64629]"/>
  <match src="type_name [30345,30352]" dest="type_name [30345,30352]"/>
  <match src="type_cast_expression [27108,27121]" dest="type_cast_expression [27108,27121]"/>
  <match src=".: . [81206,81207]" dest=".: . [81213,81214]"/>
  <match src="number_literal: 1 [62469,62470]" dest="number_literal: 1 [62476,62477]"/>
  <match src="primitive_type [43848,43855]" dest="primitive_type [43848,43855]"/>
  <match src="identifier: traitType [76462,76471]" dest="identifier: traitType [76469,76478]"/>
  <match src="primitive_type [4793,4800]" dest="primitive_type [4793,4800]"/>
  <match src="type_name [21543,21550]" dest="type_name [21543,21550]"/>
  <match src="internal: internal [29221,29229]" dest="internal: internal [29221,29229]"/>
  <match src="(: ( [37796,37797]" dest="(: ( [37796,37797]"/>
  <match src="identifier: to [49890,49892]" dest="identifier: to [49890,49892]"/>
  <match src="=: = [52635,52636]" dest="=: = [52635,52636]"/>
  <match src="expression_statement [80945,80971]" dest="expression_statement [80952,80978]"/>
  <match src="function: function [74329,74337]" dest="function: function [74336,74344]"/>
  <match src="{: { [34529,34530]" dest="{: { [34529,34530]"/>
  <match src=",: , [81454,81455]" dest=",: , [81461,81462]"/>
  <match src="identifier: _throwError [15724,15735]" dest="identifier: _throwError [15724,15735]"/>
  <match src=".: . [66086,66087]" dest=".: . [66093,66094]"/>
  <match src="]: ] [62193,62194]" dest="]: ] [62200,62201]"/>
  <match src="string_literal [78948,78966]" dest="string_literal [78955,78973]"/>
  <match src="identifier: _msgSender [33630,33640]" dest="identifier: _msgSender [33630,33640]"/>
  <match src="call_argument [69091,69101]" dest="call_argument [69098,69108]"/>
  <match src="identifier: commoners [81147,81156]" dest="identifier: commoners [81154,81163]"/>
  <match src="call_expression [44355,44367]" dest="call_expression [44355,44367]"/>
  <match src="expression_statement [63124,63150]" dest="expression_statement [63131,63157]"/>
  <match src="number_literal: 0x000000000000000000000000000000000000dEaD [64118,64160]" dest="number_literal: 0x000000000000000000000000000000000000dEaD [64125,64167]"/>
  <match src="variable_declaration_statement [40957,40980]" dest="variable_declaration_statement [40957,40980]"/>
  <match src="member_expression [80945,80963]" dest="member_expression [80952,80970]"/>
  <match src="parameter [67773,67787]" dest="parameter [67780,67794]"/>
  <match src="}: } [28271,28272]" dest="}: } [28271,28272]"/>
  <match src="identifier: signature [10168,10177]" dest="identifier: signature [10168,10177]"/>
  <match src="==: == [39259,39261]" dest="==: == [39259,39261]"/>
  <match src="assembly_statement [11151,11277]" dest="assembly_statement [11151,11277]"/>
  <match src="function: function [10121,10129]" dest="function: function [10121,10129]"/>
  <match src="identifier: s [78148,78149]" dest="identifier: s [78155,78156]"/>
  <match src="identifier: returndata [32830,32840]" dest="identifier: returndata [32830,32840]"/>
  <match src=".: . [51095,51096]" dest=".: . [51095,51096]"/>
  <match src="user_defined_type [77953,77971]" dest="user_defined_type [77960,77978]"/>
  <match src="identifier: token [69496,69501]" dest="identifier: token [69503,69508]"/>
  <match src=".: . [79014,79015]" dest=".: . [79021,79022]"/>
  <match src="[: [ [70977,70978]" dest="[: [ [70984,70985]"/>
  <match src="[: [ [62400,62401]" dest="[: [ [62407,62408]"/>
  <match src="parenthesized_expression [32972,32986]" dest="parenthesized_expression [32972,32986]"/>
  <match src="augmented_assignment_expression [77064,77075]" dest="augmented_assignment_expression [77071,77082]"/>
  <match src="address: address [22888,22895]" dest="address: address [22888,22895]"/>
  <match src="primitive_type [1051,1056]" dest="primitive_type [1051,1056]"/>
  <match src="number_literal: 0 [62695,62696]" dest="number_literal: 0 [62702,62703]"/>
  <match src="identifier: operator [21968,21976]" dest="identifier: operator [21968,21976]"/>
  <match src="}: } [4715,4716]" dest="}: } [4715,4716]"/>
  <match src="primitive_type [7685,7692]" dest="primitive_type [7685,7692]"/>
  <match src="visibility [59236,59242]" dest="visibility [59243,59249]"/>
  <match src="yul_identifier [32878,32888]" dest="yul_identifier [32878,32888]"/>
  <match src="): ) [61632,61633]" dest="): ) [61639,61640]"/>
  <match src="if: if [42758,42760]" dest="if: if [42758,42760]"/>
  <match src=",: , [63082,63083]" dest=",: , [63089,63090]"/>
  <match src="uint64: uint64 [48443,48449]" dest="uint64: uint64 [48443,48449]"/>
  <match src="member_expression [79088,79106]" dest="member_expression [79095,79113]"/>
  <match src="(: ( [31425,31426]" dest="(: ( [31425,31426]"/>
  <match src="comment: // return generate(tokenId, random(seed)); [75851,75893]" dest="comment: // return generate(tokenId, random(seed)); [75858,75900]"/>
  <match src="returns: returns [42090,42097]" dest="returns: returns [42090,42097]"/>
  <match src="block_statement [48390,49498]" dest="block_statement [48390,49498]"/>
  <match src="uint64: uint64 [48633,48639]" dest="uint64: uint64 [48633,48639]"/>
  <match src="yul_path [32830,32840]" dest="yul_path [32830,32840]"/>
  <match src="parameter [78717,78727]" dest="parameter [78724,78734]"/>
  <match src="member_expression [72985,73018]" dest="member_expression [72992,73025]"/>
  <match src="!: ! [48921,48922]" dest="!: ! [48921,48922]"/>
  <match src="bytes: bytes [30976,30981]" dest="bytes: bytes [30976,30981]"/>
  <match src="unary_expression [42762,42779]" dest="unary_expression [42762,42779]"/>
  <match src="=: = [61656,61657]" dest="=: = [61663,61664]"/>
  <match src="for: for [74843,74846]" dest="for: for [74850,74853]"/>
  <match src="true: true [68312,68316]" dest="true: true [68319,68323]"/>
  <match src="member_expression [51090,51105]" dest="member_expression [51090,51105]"/>
  <match src="call_argument [16817,16825]" dest="call_argument [16817,16825]"/>
  <match src="binary_expression [65818,65835]" dest="binary_expression [65825,65842]"/>
  <match src="type_name [58562,58569]" dest="type_name [58569,58576]"/>
  <match src="uint256: uint256 [5517,5524]" dest="uint256: uint256 [5517,5524]"/>
  <match src="]: ] [64101,64102]" dest="]: ] [64108,64109]"/>
  <match src="!=: != [79006,79008]" dest="!=: != [79013,79015]"/>
  <match src="comment: /**  * @dev Required interface of an ERC721 compliant contract.  */ [18271,18340]" dest="comment: /**  * @dev Required interface of an ERC721 compliant contract.  */ [18271,18340]"/>
  <match src="): ) [2347,2348]" dest="): ) [2347,2348]"/>
  <match src=",: , [10209,10210]" dest=",: , [10209,10210]"/>
  <match src="visibility [6201,6209]" dest="visibility [6201,6209]"/>
  <match src="state_mutability [40909,40913]" dest="state_mutability [40909,40913]"/>
  <match src="returns: returns [29783,29790]" dest="returns: returns [29783,29790]"/>
  <match src="visibility [125,133]" dest="visibility [125,133]"/>
  <match src="memory: memory [41104,41110]" dest="memory: memory [41104,41110]"/>
  <match src="identifier: _mintCommoners [68671,68685]" dest="identifier: _mintCommoners [68678,68692]"/>
  <match src="override_specifier [45060,45068]" dest="override_specifier [45060,45068]"/>
  <match src="(: ( [38639,38640]" dest="(: ( [38639,38640]"/>
  <match src="identifier: breedRerollCount [1196,1212]" dest="identifier: breedRerollCount [1196,1212]"/>
  <match src="yul_path [11179,11180]" dest="yul_path [11179,11180]"/>
  <match src="primitive_type [43279,43285]" dest="primitive_type [43279,43285]"/>
  <match src="variable_declaration_statement [54050,54109]" dest="variable_declaration_statement [54050,54109]"/>
  <match src="public: public [45604,45610]" dest="public: public [45604,45610]"/>
  <match src="address: address [74353,74360]" dest="address: address [74360,74367]"/>
  <match src="parameter [78766,78770]" dest="parameter [78773,78777]"/>
  <match src="external: external [64262,64270]" dest="external: external [64269,64277]"/>
  <match src="primitive_type [18531,18538]" dest="primitive_type [18531,18538]"/>
  <match src="visibility [29221,29229]" dest="visibility [29221,29229]"/>
  <match src="(: ( [77533,77534]" dest="(: ( [77540,77541]"/>
  <match src="member_expression [72130,72162]" dest="member_expression [72137,72169]"/>
  <match src="&quot;: &quot; [29857,29858]" dest="&quot;: &quot; [29857,29858]"/>
  <match src=",: , [3381,3382]" dest=",: , [3381,3382]"/>
  <match src="primitive_type [64201,64208]" dest="primitive_type [64208,64215]"/>
  <match src="function: function [52062,52070]" dest="function: function [52062,52070]"/>
  <match src="number_literal: 1 [50893,50894]" dest="number_literal: 1 [50893,50894]"/>
  <match src=",: , [52700,52701]" dest=",: , [52700,52701]"/>
  <match src="binary_expression [67957,67992]" dest="binary_expression [67964,67999]"/>
  <match src="struct_member [1117,1131]" dest="struct_member [1117,1131]"/>
  <match src="address: address [3369,3376]" dest="address: address [3369,3376]"/>
  <match src="returns: returns [39201,39208]" dest="returns: returns [39201,39208]"/>
  <match src="identifier: tokenNo_ [69405,69413]" dest="identifier: tokenNo_ [69412,69420]"/>
  <match src=",: , [81471,81472]" dest=",: , [81478,81479]"/>
  <match src="type_name [5326,5331]" dest="type_name [5326,5331]"/>
  <match src="number_literal: 0xFFFF [77042,77048]" dest="number_literal: 0xFFFF [77049,77055]"/>
  <match src="primitive_type [59820,59827]" dest="primitive_type [59827,59834]"/>
  <match src="identifier: updatedIndex [48969,48981]" dest="identifier: updatedIndex [48969,48981]"/>
  <match src="=: = [65876,65877]" dest="=: = [65883,65884]"/>
  <match src="comment: /**  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [33081,33586]" dest="comment: /**  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [33081,33586]"/>
  <match src=",: , [56968,56969]" dest=",: , [56968,56969]"/>
  <match src="]: ] [68509,68510]" dest="]: ] [68516,68517]"/>
  <match src="call_argument [44863,44870]" dest="call_argument [44863,44870]"/>
  <match src="parameter [3511,3521]" dest="parameter [3511,3521]"/>
  <match src="type_name [28119,28126]" dest="type_name [28119,28126]"/>
  <match src=",: , [62709,62710]" dest=",: , [62716,62717]"/>
  <match src="}: } [45429,45430]" dest="}: } [45429,45430]"/>
  <match src="expression_statement [63460,63502]" dest="expression_statement [63467,63509]"/>
  <match src="comment: /**      * @dev See {IERC165-supportsInterface}.      */ [39044,39102]" dest="comment: /**      * @dev See {IERC165-supportsInterface}.      */ [39044,39102]"/>
  <match src="number_literal: 8 [71832,71833]" dest="number_literal: 8 [71839,71840]"/>
  <match src="(: ( [12381,12382]" dest="(: ( [12381,12382]"/>
  <match src="type_name [15666,15678]" dest="type_name [15666,15678]"/>
  <match src="identifier: to [48573,48575]" dest="identifier: to [48573,48575]"/>
  <match src="[: [ [66272,66273]" dest="[: [ [66279,66280]"/>
  <match src="parenthesized_expression [43531,43559]" dest="parenthesized_expression [43531,43559]"/>
  <match src="visibility [49926,49934]" dest="visibility [49926,49934]"/>
  <match src="assignment_expression [65030,65048]" dest="assignment_expression [65037,65055]"/>
  <match src="): ) [63500,63501]" dest="): ) [63507,63508]"/>
  <match src="expression_statement [51024,51043]" dest="expression_statement [51024,51043]"/>
  <match src="++: ++ [7251,7253]" dest="++: ++ [7251,7253]"/>
  <match src="parameter [78892,78917]" dest="parameter [78899,78924]"/>
  <match src="state_mutability [19333,19337]" dest="state_mutability [19333,19337]"/>
  <match src="identifier: tokenId [50456,50463]" dest="identifier: tokenId [50456,50463]"/>
  <match src="primitive_type [44564,44568]" dest="primitive_type [44564,44568]"/>
  <match src="identifier: ids [80345,80348]" dest="identifier: ids [80352,80355]"/>
  <match src="state_mutability [5590,5594]" dest="state_mutability [5590,5594]"/>
  <match src="solidity_pragma_token [7,21]" dest="solidity_pragma_token [7,21]"/>
  <match src="call_argument [31440,31481]" dest="call_argument [31440,31481]"/>
  <match src="comment: // OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol) [17392,17458]" dest="comment: // OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol) [17392,17458]"/>
  <match src="block_statement [53305,54518]" dest="block_statement [53305,54518]"/>
  <match src="block_statement [43641,43713]" dest="block_statement [43641,43713]"/>
  <match src="expression_statement [77395,77407]" dest="expression_statement [77402,77414]"/>
  <match src="bool: bool [30962,30966]" dest="bool: bool [30962,30966]"/>
  <match src="memory: memory [29245,29251]" dest="memory: memory [29245,29251]"/>
  <match src="contract_body [57995,81562]" dest="contract_body [57995,81569]"/>
  <match src="identifier: require [69148,69155]" dest="identifier: require [69155,69162]"/>
  <match src="]: ] [40357,40358]" dest="]: ] [40357,40358]"/>
  <match src="revert: revert [46192,46198]" dest="revert: revert [46192,46198]"/>
  <match src="primitive_type [37126,37133]" dest="primitive_type [37126,37133]"/>
  <match src="parameter [2046,2061]" dest="parameter [2046,2061]"/>
  <match src="identifier: getGenesisSupply [5475,5491]" dest="identifier: getGenesisSupply [5475,5491]"/>
  <match src="block_statement [48828,49113]" dest="block_statement [48828,49113]"/>
  <match src="returns: returns [2470,2477]" dest="returns: returns [2470,2477]"/>
  <match src="primitive_type [45022,45029]" dest="primitive_type [45022,45029]"/>
  <match src="binary_expression [10436,10458]" dest="binary_expression [10436,10458]"/>
  <match src="number_literal: 0 [62216,62217]" dest="number_literal: 0 [62223,62224]"/>
  <match src="(: ( [61536,61537]" dest="(: ( [61543,61544]"/>
  <match src="identifier: r [13346,13347]" dest="identifier: r [13346,13347]"/>
  <match src="identifier: returndata [31964,31974]" dest="identifier: returndata [31964,31974]"/>
  <match src="variable_declaration_statement [67512,67579]" dest="variable_declaration_statement [67519,67586]"/>
  <match src="identifier: owner_ [80318,80324]" dest="identifier: owner_ [80325,80331]"/>
  <match src="identifier: _throwError [8401,8412]" dest="identifier: _throwError [8401,8412]"/>
  <match src=",: , [80750,80751]" dest=",: , [80757,80758]"/>
  <match src="internal: internal [16123,16131]" dest="internal: internal [16123,16131]"/>
  <match src="identifier: combatId [4541,4549]" dest="identifier: combatId [4541,4549]"/>
  <match src="bytes: bytes [29688,29693]" dest="bytes: bytes [29688,29693]"/>
  <match src=",: , [77630,77631]" dest=",: , [77637,77638]"/>
  <match src="string [63531,63549]" dest="string [63538,63556]"/>
  <match src="visibility [37190,37198]" dest="visibility [37190,37198]"/>
  <match src="bytes: bytes [28135,28140]" dest="bytes: bytes [28135,28140]"/>
  <match src="parenthesized_expression [46120,46159]" dest="parenthesized_expression [46120,46159]"/>
  <match src="): ) [55829,55830]" dest="): ) [55829,55830]"/>
  <match src="override_specifier [79707,79715]" dest="override_specifier [79714,79722]"/>
  <match src="type_name [1496,1503]" dest="type_name [1496,1503]"/>
  <match src="): ) [28184,28185]" dest="): ) [28184,28185]"/>
  <match src="identifier: mintQuantity [68430,68442]" dest="identifier: mintQuantity [68437,68449]"/>
  <match src="primitive_type [20115,20122]" dest="primitive_type [20115,20122]"/>
  <match src="mapping: mapping [37550,37557]" dest="mapping: mapping [37550,37557]"/>
  <match src="external: external [68884,68892]" dest="external: external [68891,68899]"/>
  <match src="primitive_type [5768,5773]" dest="primitive_type [5768,5773]"/>
  <match src=",: , [79403,79404]" dest=",: , [79410,79411]"/>
  <match src="type_name [60410,60416]" dest="type_name [60417,60423]"/>
  <match src="]: ] [40117,40118]" dest="]: ] [40117,40118]"/>
  <match src="identifier: palette [70883,70890]" dest="identifier: palette [70890,70897]"/>
  <match src="identifier: mintQuantity [60446,60458]" dest="identifier: mintQuantity [60453,60465]"/>
  <match src=".: . [68689,68690]" dest=".: . [68696,68697]"/>
  <match src="member_expression [67530,67567]" dest="member_expression [67537,67574]"/>
  <match src="}: } [30131,30132]" dest="}: } [30131,30132]"/>
  <match src="revert: revert [44231,44237]" dest="revert: revert [44231,44237]"/>
  <match src="expression_statement [71749,71782]" dest="expression_statement [71756,71789]"/>
  <match src="parameter [3151,3173]" dest="parameter [3151,3173]"/>
  <match src="call_expression [55781,55800]" dest="call_expression [55781,55800]"/>
  <match src="string: string [6224,6230]" dest="string: string [6224,6230]"/>
  <match src="identifier: _mint [47470,47475]" dest="identifier: _mint [47470,47475]"/>
  <match src="call_argument [64339,64341]" dest="call_argument [64346,64348]"/>
  <match src="uint256: uint256 [3444,3451]" dest="uint256: uint256 [3444,3451]"/>
  <match src="(: ( [40063,40064]" dest="(: ( [40063,40064]"/>
  <match src="identifier: mintPrice [69583,69592]" dest="identifier: mintPrice [69590,69599]"/>
  <match src="call_argument [48953,48963]" dest="call_argument [48953,48963]"/>
  <match src="if_statement [8912,9028]" dest="if_statement [8912,9028]"/>
  <match src="identifier: traitType [76367,76376]" dest="identifier: traitType [76374,76383]"/>
  <match src="returns: returns [67414,67421]" dest="returns: returns [67421,67428]"/>
  <match src="identifier: request [4601,4608]" dest="identifier: request [4601,4608]"/>
  <match src="identifier: isContract [30889,30899]" dest="identifier: isContract [30889,30899]"/>
  <match src="number_literal: 65 [10456,10458]" dest="number_literal: 65 [10456,10458]"/>
  <match src="function_definition [31290,31490]" dest="function_definition [31290,31490]"/>
  <match src=",: , [62147,62148]" dest=",: , [62154,62155]"/>
  <match src="external: external [2063,2071]" dest="external: external [2063,2071]"/>
  <match src="type_name [27037,27052]" dest="type_name [27037,27052]"/>
  <match src="(: ( [4608,4609]" dest="(: ( [4608,4609]"/>
  <match src="true: true [53750,53754]" dest="true: true [53750,53754]"/>
  <match src="(: ( [8915,8916]" dest="(: ( [8915,8916]"/>
  <match src="member_expression [71192,71223]" dest="member_expression [71199,71230]"/>
  <match src="primitive_type [77609,77615]" dest="primitive_type [77616,77622]"/>
  <match src="type_cast_expression [14883,14893]" dest="type_cast_expression [14883,14893]"/>
  <match src="{: { [3745,3746]" dest="{: { [3745,3746]"/>
  <match src="&quot;: &quot; [69100,69101]" dest="&quot;: &quot; [69107,69108]"/>
  <match src="identifier: owner [39565,39570]" dest="identifier: owner [39565,39570]"/>
  <match src="): ) [79955,79956]" dest="): ) [79962,79963]"/>
  <match src="state_mutability [34654,34658]" dest="state_mutability [34654,34658]"/>
  <match src="memory: memory [418,424]" dest="memory: memory [418,424]"/>
  <match src=",: , [63009,63010]" dest=",: , [63016,63017]"/>
  <match src="binary_expression [46779,46805]" dest="binary_expression [46779,46805]"/>
  <match src="(: ( [39581,39582]" dest="(: ( [39581,39582]"/>
  <match src="comment: /**      * @dev See {IERC721Metadata-symbol}.      */ [42423,42478]" dest="comment: /**      * @dev See {IERC721Metadata-symbol}.      */ [42423,42478]"/>
  <match src="number_literal: 132 [62824,62827]" dest="number_literal: 132 [62831,62834]"/>
  <match src="+: + [69065,69066]" dest="+: + [69072,69073]"/>
  <match src="call_expression [69334,69458]" dest="call_expression [69341,69465]"/>
  <match src="number_literal: 2 [71311,71312]" dest="number_literal: 2 [71318,71319]"/>
  <match src="uint256: uint256 [43848,43855]" dest="uint256: uint256 [43848,43855]"/>
  <match src="call_argument [80049,80056]" dest="call_argument [80056,80063]"/>
  <match src="{: { [50848,50849]" dest="{: { [50848,50849]"/>
  <match src="&quot;: &quot; [41931,41932]" dest="&quot;: &quot; [41931,41932]"/>
  <match src="number_literal: 7 [63132,63133]" dest="number_literal: 7 [63139,63140]"/>
  <match src="state_mutability [4921,4925]" dest="state_mutability [4921,4925]"/>
  <match src="identifier: topCommoner_ [71202,71214]" dest="identifier: topCommoner_ [71209,71221]"/>
  <match src="type_name [35976,35983]" dest="type_name [35976,35983]"/>
  <match src="&quot;: &quot; [68215,68216]" dest="&quot;: &quot; [68222,68223]"/>
  <match src="[: [ [80990,80991]" dest="[: [ [80997,80998]"/>
  <match src="parameter [42540,42553]" dest="parameter [42540,42553]"/>
  <match src="identifier: from [49867,49871]" dest="identifier: from [49867,49871]"/>
  <match src="binary_expression [68133,68146]" dest="binary_expression [68140,68153]"/>
  <match src="identifier: require [63815,63822]" dest="identifier: require [63822,63829]"/>
  <match src="): ) [46357,46358]" dest="): ) [46357,46358]"/>
  <match src=".: . [61149,61150]" dest=".: . [61156,61157]"/>
  <match src="number_literal: 1 [73134,73135]" dest="number_literal: 1 [73141,73142]"/>
  <match src="identifier: INameChange [810,821]" dest="identifier: INameChange [810,821]"/>
  <match src="identifier: background [81207,81217]" dest="identifier: background [81214,81224]"/>
  <match src="type_name [20798,20805]" dest="type_name [20798,20805]"/>
  <match src="number_literal: 1 [54034,54035]" dest="number_literal: 1 [54034,54035]"/>
  <match src="assignment_expression [71192,71227]" dest="assignment_expression [71199,71234]"/>
  <match src=",: , [63329,63330]" dest=",: , [63336,63337]"/>
  <match src="}: } [17384,17385]" dest="}: } [17384,17385]"/>
  <match src="new: new [6670,6673]" dest="new: new [6670,6673]"/>
  <match src="identifier: maxMintPerTx [60387,60399]" dest="identifier: maxMintPerTx [60394,60406]"/>
  <match src="=: = [71000,71001]" dest="=: = [71007,71008]"/>
  <match src=",: , [5816,5817]" dest=",: , [5816,5817]"/>
  <match src="expression_statement [71852,71888]" dest="expression_statement [71859,71895]"/>
  <match src="call_argument [31021,31025]" dest="call_argument [31021,31025]"/>
  <match src="): ) [28651,28652]" dest="): ) [28651,28652]"/>
  <match src=",: , [43736,43737]" dest=",: , [43736,43737]"/>
  <match src="memory: memory [4834,4840]" dest="memory: memory [4834,4840]"/>
  <match src="identifier: vs [12944,12946]" dest="identifier: vs [12944,12946]"/>
  <match src="bytes32: bytes32 [13315,13322]" dest="bytes32: bytes32 [13315,13322]"/>
  <match src="call_expression [31003,31026]" dest="call_expression [31003,31026]"/>
  <match src="(: ( [67032,67033]" dest="(: ( [67039,67040]"/>
  <match src="parameter [5783,5798]" dest="parameter [5783,5798]"/>
  <match src="call_argument [61537,61556]" dest="call_argument [61544,61563]"/>
  <match src="comment: // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol [6317,6429]" dest="comment: // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol [6317,6429]"/>
  <match src="inline_array_expression [62128,62173]" dest="inline_array_expression [62135,62180]"/>
  <match src="uint8: uint8 [1877,1882]" dest="uint8: uint8 [1877,1882]"/>
  <match src="(: ( [3496,3497]" dest="(: ( [3496,3497]"/>
  <match src="type_name [28534,28541]" dest="type_name [28534,28541]"/>
  <match src="call_argument [43734,43736]" dest="call_argument [43734,43736]"/>
  <match src="identifier: RecoverError [11374,11386]" dest="identifier: RecoverError [11374,11386]"/>
  <match src="true [66352,66356]" dest="true [66359,66363]"/>
  <match src="external: external [4775,4783]" dest="external: external [4775,4783]"/>
  <match src="identifier: from [45404,45408]" dest="identifier: from [45404,45408]"/>
  <match src="): ) [2454,2455]" dest="): ) [2454,2455]"/>
  <match src="type_name [494,500]" dest="type_name [494,500]"/>
  <match src="public: public [63661,63667]" dest="public: public [63668,63674]"/>
  <match src="call_expression [12409,12427]" dest="call_expression [12409,12427]"/>
  <match src="external: external [3399,3407]" dest="external: external [3399,3407]"/>
  <match src="identifier: maxMintPerTx_ [64606,64619]" dest="identifier: maxMintPerTx_ [64613,64626]"/>
  <match src="(: ( [52637,52638]" dest="(: ( [52637,52638]"/>
  <match src="type_name [3136,3143]" dest="type_name [3136,3143]"/>
  <match src="): ) [7879,7880]" dest="): ) [7879,7880]"/>
  <match src="return: return [26045,26051]" dest="return: return [26045,26051]"/>
  <match src="(: ( [31319,31320]" dest="(: ( [31319,31320]"/>
  <match src="(: ( [80377,80378]" dest="(: ( [80384,80385]"/>
  <match src="comment: // - case 64: r,vs signature (cf https://eips.ethereum.org/EIPS/eip-2098) _Available since v4.1._ [10325,10422]" dest="comment: // - case 64: r,vs signature (cf https://eips.ethereum.org/EIPS/eip-2098) _Available since v4.1._ [10325,10422]"/>
  <match src="call_argument [52923,52930]" dest="call_argument [52923,52930]"/>
  <match src="identifier: addr [51740,51744]" dest="identifier: addr [51740,51744]"/>
  <match src="==: == [52651,52653]" dest="==: == [52651,52653]"/>
  <match src="&amp;: &amp; [77205,77206]" dest="&amp;: &amp; [77212,77213]"/>
  <match src="address: address [30345,30352]" dest="address: address [30345,30352]"/>
  <match src="primitive_type [59058,59065]" dest="primitive_type [59065,59072]"/>
  <match src="expression_statement [63815,63857]" dest="expression_statement [63822,63864]"/>
  <match src="event_paramater [18909,18930]" dest="event_paramater [18909,18930]"/>
  <match src="): ) [13512,13513]" dest="): ) [13512,13513]"/>
  <match src="{: { [41239,41240]" dest="{: { [41239,41240]"/>
  <match src="identifier: s [78122,78123]" dest="identifier: s [78129,78130]"/>
  <match src="&gt;: &gt; [7715,7716]" dest="&gt;: &gt; [7715,7716]"/>
  <match src="): ) [1701,1702]" dest="): ) [1701,1702]"/>
  <match src="call_argument [74912,74914]" dest="call_argument [74919,74921]"/>
  <match src="identifier: clothes [73945,73952]" dest="identifier: clothes [73952,73959]"/>
  <match src="{: { [67817,67818]" dest="{: { [67824,67825]"/>
  <match src="identifier: target [30754,30760]" dest="identifier: target [30754,30760]"/>
  <match src="address: address [58875,58882]" dest="address: address [58882,58889]"/>
  <match src="]: ] [63212,63213]" dest="]: ] [63219,63220]"/>
  <match src="=: = [65040,65041]" dest="=: = [65047,65048]"/>
  <match src=",: , [10780,10781]" dest=",: , [10780,10781]"/>
  <match src="call_argument [42771,42778]" dest="call_argument [42771,42778]"/>
  <match src="): ) [65392,65393]" dest="): ) [65399,65400]"/>
  <match src="parameter [47794,47804]" dest="parameter [47794,47804]"/>
  <match src="identifier: value [6829,6834]" dest="identifier: value [6829,6834]"/>
  <match src="call_argument [64036,64055]" dest="call_argument [64043,64062]"/>
  <match src="identifier: getRand [4889,4896]" dest="identifier: getRand [4889,4896]"/>
  <match src=".: . [61014,61015]" dest=".: . [61021,61022]"/>
  <match src="): ) [67577,67578]" dest="): ) [67584,67585]"/>
  <match src="expression_statement [81061,81095]" dest="expression_statement [81068,81102]"/>
  <match src="state_mutability [24394,24398]" dest="state_mutability [24394,24398]"/>
  <match src="(: ( [51677,51678]" dest="(: ( [51677,51678]"/>
  <match src="comment: // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept [14609,14717]" dest="comment: // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept [14609,14717]"/>
  <match src="return: return [42228,42234]" dest="return: return [42228,42234]"/>
  <match src="]: ] [64183,64184]" dest="]: ] [64190,64191]"/>
  <match src="function_definition [44106,44396]" dest="function_definition [44106,44396]"/>
  <match src="): ) [29357,29358]" dest="): ) [29357,29358]"/>
  <match src="identifier: s [15186,15187]" dest="identifier: s [15186,15187]"/>
  <match src="): ) [12814,12815]" dest="): ) [12814,12815]"/>
  <match src="function_definition [52062,52151]" dest="function_definition [52062,52151]"/>
  <match src=".: . [79239,79240]" dest=".: . [79246,79247]"/>
  <match src="bool: bool [44151,44155]" dest="bool: bool [44151,44155]"/>
  <match src="primitive_type [64704,64711]" dest="primitive_type [64711,64718]"/>
  <match src="call_expression [45166,45178]" dest="call_expression [45166,45178]"/>
  <match src="(: ( [74969,74970]" dest="(: ( [74976,74977]"/>
  <match src="identifier: operator [44516,44524]" dest="identifier: operator [44516,44524]"/>
  <match src="(: ( [52904,52905]" dest="(: ( [52904,52905]"/>
  <match src="identifier: end [49137,49140]" dest="identifier: end [49137,49140]"/>
  <match src="indexed: indexed [18539,18546]" dest="indexed: indexed [18539,18546]"/>
  <match src="identifier: end [49424,49427]" dest="identifier: end [49424,49427]"/>
  <match src="array_access [79173,79191]" dest="array_access [79180,79198]"/>
  <match src="identifier: vrf [59198,59201]" dest="identifier: vrf [59205,59208]"/>
  <match src="parameter [3432,3442]" dest="parameter [3432,3442]"/>
  <match src="struct_member [4255,4266]" dest="struct_member [4255,4266]"/>
  <match src=".: . [81074,81075]" dest=".: . [81081,81082]"/>
  <match src="augmented_assignment_expression [53397,53421]" dest="augmented_assignment_expression [53397,53421]"/>
  <match src=",: , [69427,69428]" dest=",: , [69434,69435]"/>
  <match src="type_name [80736,80741]" dest="type_name [80743,80748]"/>
  <match src=",: , [66828,66829]" dest=",: , [66835,66836]"/>
  <match src="(: ( [12420,12421]" dest="(: ( [12420,12421]"/>
  <match src="type_name [64383,64388]" dest="type_name [64390,64395]"/>
  <match src="call_argument [32059,32071]" dest="call_argument [32059,32071]"/>
  <match src="(: ( [40922,40923]" dest="(: ( [40922,40923]"/>
  <match src="&quot;: &quot; [68332,68333]" dest="&quot;: &quot; [68339,68340]"/>
  <match src="uint8: uint8 [5224,5229]" dest="uint8: uint8 [5224,5229]"/>
  <match src="public: public [81494,81500]" dest="public: public [81501,81507]"/>
  <match src="parameter [21960,21976]" dest="parameter [21960,21976]"/>
  <match src="type_name [68868,68873]" dest="type_name [68875,68880]"/>
  <match src="uint256: uint256 [3692,3699]" dest="uint256: uint256 [3692,3699]"/>
  <match src="identifier: s [78294,78295]" dest="identifier: s [78301,78302]"/>
  <match src="identifier: getApproved [21531,21542]" dest="identifier: getApproved [21531,21542]"/>
  <match src="primitive_type [81456,81463]" dest="primitive_type [81463,81470]"/>
  <match src="comment: //     uint8 palette; 1 [73444,73467]" dest="comment: //     uint8 palette; 1 [73451,73474]"/>
  <match src="address: address [12309,12316]" dest="address: address [12309,12316]"/>
  <match src="call_argument [68189,68198]" dest="call_argument [68196,68205]"/>
  <match src="parameter [42208,42215]" dest="parameter [42208,42215]"/>
  <match src="identifier: buffer [7654,7660]" dest="identifier: buffer [7654,7660]"/>
  <match src="type_name [80752,80757]" dest="type_name [80759,80764]"/>
  <match src="type_name [60439,60445]" dest="type_name [60446,60452]"/>
  <match src="type_name [3383,3390]" dest="type_name [3383,3390]"/>
  <match src="internal: internal [13376,13384]" dest="internal: internal [13376,13384]"/>
  <match src="type_cast_expression [78040,78386]" dest="type_cast_expression [78047,78393]"/>
  <match src="call_expression [65810,65851]" dest="call_expression [65817,65858]"/>
  <match src="parameter [76401,76406]" dest="parameter [76408,76413]"/>
  <match src="type_name [67362,67369]" dest="type_name [67369,67376]"/>
  <match src=",: , [68540,68541]" dest=",: , [68547,68548]"/>
  <match src="array_access [80981,80994]" dest="array_access [80988,81001]"/>
  <match src="(: ( [65220,65221]" dest="(: ( [65227,65228]"/>
  <match src="expression_statement [41648,41655]" dest="expression_statement [41648,41655]"/>
  <match src="member_expression [77417,77429]" dest="member_expression [77424,77436]"/>
  <match src="(: ( [74566,74567]" dest="(: ( [74573,74574]"/>
  <match src="state_mutability [2358,2362]" dest="state_mutability [2358,2362]"/>
  <match src="parameter [43279,43292]" dest="parameter [43279,43292]"/>
  <match src="external: external [67789,67797]" dest="external: external [67796,67804]"/>
  <match src="function_definition [255,357]" dest="function_definition [255,357]"/>
  <match src="bytes: bytes [6674,6679]" dest="bytes: bytes [6674,6679]"/>
  <match src="(: ( [43733,43734]" dest="(: ( [43733,43734]"/>
  <match src="function_body [44570,44631]" dest="function_body [44570,44631]"/>
  <match src="call_argument [65137,65156]" dest="call_argument [65144,65163]"/>
  <match src="=: = [81171,81172]" dest="=: = [81178,81179]"/>
  <match src="type_name [302,309]" dest="type_name [302,309]"/>
  <match src="identifier: topCommoner_ [70224,70236]" dest="identifier: topCommoner_ [70231,70243]"/>
  <match src="uint16: uint16 [65221,65227]" dest="uint16: uint16 [65228,65234]"/>
  <match src="): ) [55764,55765]" dest="): ) [55764,55765]"/>
  <match src="yul_function_call [10811,10847]" dest="yul_function_call [10811,10847]"/>
  <match src="member_expression [77502,77512]" dest="member_expression [77509,77519]"/>
  <match src="revert_statement [32966,32987]" dest="revert_statement [32966,32987]"/>
  <match src="parameter [10211,10223]" dest="parameter [10211,10223]"/>
  <match src="): ) [68116,68117]" dest="): ) [68123,68124]"/>
  <match src="identifier: error [12362,12367]" dest="identifier: error [12362,12367]"/>
  <match src="): ) [68022,68023]" dest="): ) [68029,68030]"/>
  <match src="call_argument [77051,77052]" dest="call_argument [77058,77059]"/>
  <match src="&quot;: &quot; [16766,16767]" dest="&quot;: &quot; [16766,16767]"/>
  <match src="identifier: implementation_ [35954,35969]" dest="identifier: implementation_ [35954,35969]"/>
  <match src="): ) [80933,80934]" dest="): ) [80940,80941]"/>
  <match src="identifier: svgBreedColor [425,438]" dest="identifier: svgBreedColor [425,438]"/>
  <match src="struct_member [36283,36305]" dest="struct_member [36283,36305]"/>
  <match src="]: ] [63133,63134]" dest="]: ] [63140,63141]"/>
  <match src="(: ( [74285,74286]" dest="(: ( [74292,74293]"/>
  <match src="identifier: to [44773,44775]" dest="identifier: to [44773,44775]"/>
  <match src="type_cast_expression [48507,48523]" dest="type_cast_expression [48507,48523]"/>
  <match src="state_variable_declaration [59433,59461]" dest="state_variable_declaration [59440,59468]"/>
  <match src="memory: memory [6231,6237]" dest="memory: memory [6231,6237]"/>
  <match src="type_name [1732,1739]" dest="type_name [1732,1739]"/>
  <match src="return_statement [15314,15352]" dest="return_statement [15314,15352]"/>
  <match src="bytes: bytes [66689,66694]" dest="bytes: bytes [66696,66701]"/>
  <match src="revert_statement [46374,46425]" dest="revert_statement [46374,46425]"/>
  <match src="): ) [13882,13883]" dest="): ) [13882,13883]"/>
  <match src="identifier: ownership [41164,41173]" dest="identifier: ownership [41164,41173]"/>
  <match src="comment: // error TransferToNonERC721ReceiverImplementer(); [35678,35728]" dest="comment: // error TransferToNonERC721ReceiverImplementer(); [35678,35728]"/>
  <match src="else: else [73260,73264]" dest="else: else [73267,73271]"/>
  <match src="identifier: doQuestByAdmin [4456,4470]" dest="identifier: doQuestByAdmin [4456,4470]"/>
  <match src="(: ( [61928,61929]" dest="(: ( [61935,61936]"/>
  <match src="uint256: uint256 [7183,7190]" dest="uint256: uint256 [7183,7190]"/>
  <match src="assignment_expression [74199,74234]" dest="assignment_expression [74206,74241]"/>
  <match src="identifier: owner [43465,43470]" dest="identifier: owner [43465,43470]"/>
  <match src="): ) [61569,61570]" dest="): ) [61576,61577]"/>
  <match src=".: . [71823,71824]" dest=".: . [71830,71831]"/>
  <match src="function_definition [81398,81559]" dest="function_definition [81405,81566]"/>
  <match src=",: , [64956,64957]" dest=",: , [64963,64964]"/>
  <match src="function_body [33794,33828]" dest="function_body [33794,33828]"/>
  <match src="primitive_type [46755,46759]" dest="primitive_type [46755,46759]"/>
  <match src="identifier: tokenId [52923,52930]" dest="identifier: tokenId [52923,52930]"/>
  <match src="{: { [47459,47460]" dest="{: { [47459,47460]"/>
  <match src="identifier: commoners [71749,71758]" dest="identifier: commoners [71756,71765]"/>
  <match src="using_directive [35907,35933]" dest="using_directive [35907,35933]"/>
  <match src="visibility [7037,7045]" dest="visibility [7037,7045]"/>
  <match src="call_expression [66807,66847]" dest="call_expression [66814,66854]"/>
  <match src="expression_statement [77563,77575]" dest="expression_statement [77570,77582]"/>
  <match src="member_expression [69630,69640]" dest="member_expression [69637,69647]"/>
  <match src="public: public [79695,79701]" dest="public: public [79702,79708]"/>
  <match src=",: , [13476,13477]" dest=",: , [13476,13477]"/>
  <match src="): ) [41035,41036]" dest="): ) [41035,41036]"/>
  <match src="primitive_type [1851,1856]" dest="primitive_type [1851,1856]"/>
  <match src="primitive_type [60439,60445]" dest="primitive_type [60446,60452]"/>
  <match src="identifier: approvalCheck [52582,52595]" dest="identifier: approvalCheck [52582,52595]"/>
  <match src="{: { [38410,38411]" dest="{: { [38410,38411]"/>
  <match src="identifier: seed [77451,77455]" dest="identifier: seed [77458,77462]"/>
  <match src="identifier: trait [76584,76589]" dest="identifier: trait [76591,76596]"/>
  <match src="identifier: msg [64861,64864]" dest="identifier: msg [64868,64871]"/>
  <match src="uint16: uint16 [77359,77365]" dest="uint16: uint16 [77366,77372]"/>
  <match src="}: } [4223,4224]" dest="}: } [4223,4224]"/>
  <match src="interface: interface [2385,2394]" dest="interface: interface [2385,2394]"/>
  <match src="indexed: indexed [18738,18745]" dest="indexed: indexed [18738,18745]"/>
  <match src="[: [ [64174,64175]" dest="[: [ [64181,64182]"/>
  <match src="identifier: getTokenTraits [1314,1328]" dest="identifier: getTokenTraits [1314,1328]"/>
  <match src="parameter [28639,28651]" dest="parameter [28639,28651]"/>
  <match src="[: [ [81156,81157]" dest="[: [ [81163,81164]"/>
  <match src=",: , [50454,50455]" dest=",: , [50454,50455]"/>
  <match src="member_expression [79009,79021]" dest="member_expression [79016,79028]"/>
  <match src="identifier: _currentIndex [54337,54350]" dest="identifier: _currentIndex [54337,54350]"/>
  <match src="identifier: tokenId [78997,79004]" dest="identifier: tokenId [79004,79011]"/>
  <match src="primitive_type [61462,61469]" dest="primitive_type [61469,61476]"/>
  <match src="variable_declaration [7570,7589]" dest="variable_declaration [7570,7589]"/>
  <match src="}: } [38652,38653]" dest="}: } [38652,38653]"/>
  <match src="==: == [51497,51499]" dest="==: == [51497,51499]"/>
  <match src="{: { [34691,34692]" dest="{: { [34691,34692]"/>
  <match src="=: = [67453,67454]" dest="=: = [67460,67461]"/>
  <match src=",: , [63203,63204]" dest=",: , [63210,63211]"/>
  <match src="view: view [18183,18187]" dest="view: view [18183,18187]"/>
  <match src="public: public [59078,59084]" dest="public: public [59085,59091]"/>
  <match src="array_access [73154,73177]" dest="array_access [73161,73184]"/>
  <match src="member_expression [77006,77013]" dest="member_expression [77013,77020]"/>
  <match src="type_cast_expression [52911,52921]" dest="type_cast_expression [52911,52921]"/>
  <match src=":: : [79219,79220]" dest=":: : [79226,79227]"/>
  <match src="visibility [37058,37066]" dest="visibility [37058,37066]"/>
  <match src=",: , [54560,54561]" dest=",: , [54560,54561]"/>
  <match src="(: ( [79798,79799]" dest="(: ( [79805,79806]"/>
  <match src="): ) [11371,11372]" dest="): ) [11371,11372]"/>
  <match src="returns: returns [33665,33672]" dest="returns: returns [33665,33672]"/>
  <match src="identifier: _data [48985,48990]" dest="identifier: _data [48985,48990]"/>
  <match src="inline_array_expression [62862,62903]" dest="inline_array_expression [62869,62910]"/>
  <match src="bool: bool [55760,55764]" dest="bool: bool [55760,55764]"/>
  <match src="mload: mload [56201,56206]" dest="mload: mload [56201,56206]"/>
  <match src="identifier: toString [42955,42963]" dest="identifier: toString [42955,42963]"/>
  <match src="identifier: topCommoner_ [72885,72897]" dest="identifier: topCommoner_ [72892,72904]"/>
  <match src=",: , [28705,28706]" dest=",: , [28705,28706]"/>
  <match src="address: address [18909,18916]" dest="address: address [18909,18916]"/>
  <match src="comment: /*///////////////////////////////////////////////////////////////                     Public methods     //////////////////////////////////////////////////////////////*/ [65499,65670]" dest="comment: /*///////////////////////////////////////////////////////////////                     Public methods     //////////////////////////////////////////////////////////////*/ [65506,65677]"/>
  <match src="): ) [76972,76973]" dest="): ) [76979,76980]"/>
  <match src="identifier: tokenPartner [69473,69485]" dest="identifier: tokenPartner [69480,69492]"/>
  <match src="=: = [67528,67529]" dest="=: = [67535,67536]"/>
  <match src="state_variable_declaration [58675,58698]" dest="state_variable_declaration [58682,58705]"/>
  <match src="variable_declaration [15147,15161]" dest="variable_declaration [15147,15161]"/>
  <match src="call_expression [52736,52756]" dest="call_expression [52736,52756]"/>
  <match src="]: ] [69363,69364]" dest="]: ] [69370,69371]"/>
  <match src="): ) [30123,30124]" dest="): ) [30123,30124]"/>
  <match src="type_name [6504,6511]" dest="type_name [6504,6511]"/>
  <match src="address: address [47794,47801]" dest="address: address [47794,47801]"/>
  <match src="identifier: isApprovedForAll [43602,43618]" dest="identifier: isApprovedForAll [43602,43618]"/>
  <match src="number_literal: 0 [62123,62124]" dest="number_literal: 0 [62130,62131]"/>
  <match src="type_cast_expression [44779,44789]" dest="type_cast_expression [44779,44789]"/>
  <match src="call_argument [44859,44861]" dest="call_argument [44859,44861]"/>
  <match src="identifier: user [67495,67499]" dest="identifier: user [67502,67506]"/>
  <match src="type_name [31951,31956]" dest="type_name [31951,31956]"/>
  <match src="(: ( [4628,4629]" dest="(: ( [4628,4629]"/>
  <match src="identifier: signature [66895,66904]" dest="identifier: signature [66902,66911]"/>
  <match src="uint8: uint8 [60718,60723]" dest="uint8: uint8 [60725,60730]"/>
  <match src="identifier: commoners [79375,79384]" dest="identifier: commoners [79382,79391]"/>
  <match src="string_literal [80388,80406]" dest="string_literal [80395,80413]"/>
  <match src="identifier: rarities [62762,62770]" dest="identifier: rarities [62769,62777]"/>
  <match src="calldata: calldata [1757,1765]" dest="calldata: calldata [1757,1765]"/>
  <match src="number_literal: 0 [62463,62464]" dest="number_literal: 0 [62470,62471]"/>
  <match src="mload: mload [11184,11189]" dest="mload: mload [11184,11189]"/>
  <match src="): ) [29804,29805]" dest="): ) [29804,29805]"/>
  <match src="]: ] [53381,53382]" dest="]: ] [53381,53382]"/>
  <match src="internal: internal [38777,38785]" dest="internal: internal [38777,38785]"/>
  <match src="parameter [39829,39836]" dest="parameter [39829,39836]"/>
  <match src="variable_declaration_statement [74456,74483]" dest="variable_declaration_statement [74463,74490]"/>
  <match src="call_argument [69642,69651]" dest="call_argument [69649,69658]"/>
  <match src="call_argument [50541,50551]" dest="call_argument [50541,50551]"/>
  <match src="{: { [57995,57996]" dest="{: { [57995,57996]"/>
  <match src="user_defined_type [13870,13882]" dest="user_defined_type [13870,13882]"/>
  <match src="primitive_type [5737,5742]" dest="primitive_type [5737,5742]"/>
  <match src="comment: // error ApprovalCallerNotOwnerNorApproved(); [35289,35334]" dest="comment: // error ApprovalCallerNotOwnerNorApproved(); [35289,35334]"/>
  <match src="identifier: require [66807,66814]" dest="identifier: require [66814,66821]"/>
  <match src="call_argument [69630,69640]" dest="call_argument [69637,69647]"/>
  <match src="yul_identifier [10706,10707]" dest="yul_identifier [10706,10707]"/>
  <match src="&quot;: &quot; [66925,66926]" dest="&quot;: &quot; [66932,66933]"/>
  <match src="): ) [49140,49141]" dest="): ) [49140,49141]"/>
  <match src="&quot;: &quot; [31921,31922]" dest="&quot;: &quot; [31921,31922]"/>
  <match src="type_name [5350,5355]" dest="type_name [5350,5355]"/>
  <match src="number_literal: 13 [71002,71004]" dest="number_literal: 13 [71009,71011]"/>
  <match src="): ) [43428,43429]" dest="): ) [43428,43429]"/>
  <match src="identifier: airdropMax_ [70129,70140]" dest="identifier: airdropMax_ [70136,70147]"/>
  <match src="call_argument [14787,14788]" dest="call_argument [14787,14788]"/>
  <match src="uint8: uint8 [10523,10528]" dest="uint8: uint8 [10523,10528]"/>
  <match src="type_name [19122,19129]" dest="type_name [19122,19129]"/>
  <match src="call_argument [68318,68333]" dest="call_argument [68325,68340]"/>
  <match src="identifier: maxMintPerTx_ [64423,64436]" dest="identifier: maxMintPerTx_ [64430,64443]"/>
  <match src="binary_expression [69118,69131]" dest="binary_expression [69125,69138]"/>
  <match src="number_literal: 13 [71059,71061]" dest="number_literal: 13 [71066,71068]"/>
  <match src="variable_declaration [60997,61008]" dest="variable_declaration [61004,61015]"/>
  <match src="type_name [42052,42059]" dest="type_name [42052,42059]"/>
  <match src="parameter [45793,45805]" dest="parameter [45793,45805]"/>
  <match src="identifier: tokenId [55040,55047]" dest="identifier: tokenId [55040,55047]"/>
  <match src="identifier: commoners [79585,79594]" dest="identifier: commoners [79592,79601]"/>
  <match src="function_definition [10121,11429]" dest="function_definition [10121,11429]"/>
  <match src="type_name [5897,5904]" dest="type_name [5897,5904]"/>
  <match src="address: address [48953,48960]" dest="address: address [48953,48960]"/>
  <match src="primitive_type [3860,3867]" dest="primitive_type [3860,3867]"/>
  <match src="{: { [31387,31388]" dest="{: { [31387,31388]"/>
  <match src="identifier: sender [69519,69525]" dest="identifier: sender [69526,69532]"/>
  <match src="variable_declaration_statement [51406,51465]" dest="variable_declaration_statement [51406,51465]"/>
  <match src="identifier: _msgData [33736,33744]" dest="identifier: _msgData [33736,33744]"/>
  <match src="call_expression [28204,28264]" dest="call_expression [28204,28264]"/>
  <match src="&quot;: &quot; [66845,66846]" dest="&quot;: &quot; [66852,66853]"/>
  <match src="identifier: trait [76527,76532]" dest="identifier: trait [76534,76539]"/>
  <match src="visibility [2063,2071]" dest="visibility [2063,2071]"/>
  <match src="identifier: treat [58692,58697]" dest="identifier: treat [58699,58704]"/>
  <match src="comment: // Rudy Hammerpaw, Master Blacksmith [70356,70392]" dest="comment: // Rudy Hammerpaw, Master Blacksmith [70363,70399]"/>
  <match src="address: address [47965,47972]" dest="address: address [47965,47972]"/>
  <match src="number_literal: 9 [63384,63385]" dest="number_literal: 9 [63391,63392]"/>
  <match src="pure: pure [77991,77995]" dest="pure: pure [77998,78002]"/>
  <match src="number_literal: 5 [62771,62772]" dest="number_literal: 5 [62778,62779]"/>
  <match src="type_name [44151,44155]" dest="type_name [44151,44155]"/>
  <match src=".: . [80879,80880]" dest=".: . [80886,80887]"/>
  <match src="binary_expression [6445,6455]" dest="binary_expression [6445,6455]"/>
  <match src="identifier: nextTokenId [54010,54021]" dest="identifier: nextTokenId [54010,54021]"/>
  <match src="identifier: to [45568,45570]" dest="identifier: to [45568,45570]"/>
  <match src="call_expression [78978,79070]" dest="call_expression [78985,79077]"/>
  <match src="identifier: doges_ [66394,66400]" dest="identifier: doges_ [66401,66407]"/>
  <match src="return_statement [67589,67610]" dest="return_statement [67596,67617]"/>
  <match src="yul_evm_builtin [10717,10720]" dest="yul_evm_builtin [10717,10720]"/>
  <match src="function_body [67429,67617]" dest="function_body [67436,67624]"/>
  <match src="(: ( [60717,60718]" dest="(: ( [60724,60725]"/>
  <match src="binary_expression [61146,61182]" dest="binary_expression [61153,61189]"/>
  <match src="identifier: length [42900,42906]" dest="identifier: length [42900,42906]"/>
  <match src="return_statement [13524,13541]" dest="return_statement [13524,13541]"/>
  <match src="type_name [81515,81521]" dest="type_name [81522,81528]"/>
  <match src="visibility [47450,47458]" dest="visibility [47450,47458]"/>
  <match src="!: ! [52794,52795]" dest="!: ! [52794,52795]"/>
  <match src="identifier: topCommoner_ [73218,73230]" dest="identifier: topCommoner_ [73225,73237]"/>
  <match src="identifier: t [76927,76928]" dest="identifier: t [76934,76935]"/>
  <match src="uint256: uint256 [302,309]" dest="uint256: uint256 [302,309]"/>
  <match src="member_expression [72930,72961]" dest="member_expression [72937,72968]"/>
  <match src="event_paramater [18511,18529]" dest="event_paramater [18511,18529]"/>
  <match src="function_body [46761,46872]" dest="function_body [46761,46872]"/>
  <match src="call_expression [69473,69593]" dest="call_expression [69480,69600]"/>
  <match src="assignment_expression [81147,81182]" dest="assignment_expression [81154,81189]"/>
  <match src="type_name [36362,36366]" dest="type_name [36362,36366]"/>
  <match src="identifier: t_ [64909,64911]" dest="identifier: t_ [64916,64918]"/>
  <match src="{: { [29806,29807]" dest="{: { [29806,29807]"/>
  <match src="number_literal: 0 [70948,70949]" dest="number_literal: 0 [70955,70956]"/>
  <match src="primitive_type [24547,24554]" dest="primitive_type [24547,24554]"/>
  <match src="): ) [47974,47975]" dest="): ) [47974,47975]"/>
  <match src=".: . [10939,10940]" dest=".: . [10939,10940]"/>
  <match src="block_statement [70022,74314]" dest="block_statement [70029,74321]"/>
  <match src="identifier: _data [47855,47860]" dest="identifier: _data [47855,47860]"/>
  <match src="identifier: index [80575,80580]" dest="identifier: index [80582,80587]"/>
  <match src="]: ] [61821,61822]" dest="]: ] [61828,61829]"/>
  <match src="parameter [61497,61509]" dest="parameter [61504,61516]"/>
  <match src="parameter [847,860]" dest="parameter [847,860]"/>
  <match src="bytes: bytes [29239,29244]" dest="bytes: bytes [29239,29244]"/>
  <match src="identifier: dogeOwner [2434,2443]" dest="identifier: dogeOwner [2434,2443]"/>
  <match src="if: if [50018,50020]" dest="if: if [50018,50020]"/>
  <match src="string: string [37183,37189]" dest="string: string [37183,37189]"/>
  <match src=",: , [2044,2045]" dest=",: , [2044,2045]"/>
  <match src="user_defined_type [13439,13451]" dest="user_defined_type [13439,13451]"/>
  <match src="primitive_type [57817,57824]" dest="primitive_type [57817,57824]"/>
  <match src="returns: returns [1360,1367]" dest="returns: returns [1360,1367]"/>
  <match src="=: = [41691,41692]" dest="=: = [41691,41692]"/>
  <match src="call_argument [67482,67493]" dest="call_argument [67489,67500]"/>
  <match src="memory: memory [28565,28571]" dest="memory: memory [28565,28571]"/>
  <match src="&quot;: &quot; [7124,7125]" dest="&quot;: &quot; [7124,7125]"/>
  <match src="(: ( [78716,78717]" dest="(: ( [78723,78724]"/>
  <match src="identifier: require [7825,7832]" dest="identifier: require [7825,7832]"/>
  <match src="member_expression [68171,68180]" dest="member_expression [68178,68187]"/>
  <match src="): ) [4711,4712]" dest="): ) [4711,4712]"/>
  <match src="identifier: selectTrait [77347,77358]" dest="identifier: selectTrait [77354,77365]"/>
  <match src="member_expression [80427,80437]" dest="member_expression [80434,80444]"/>
  <match src="function_body [76912,77746]" dest="function_body [76919,77753]"/>
  <match src="comment: /**      * @dev Approve `to` to operate on `tokenId`      *      * Emits a {Approval} event.      */ [54799,54903]" dest="comment: /**      * @dev Approve `to` to operate on `tokenId`      *      * Emits a {Approval} event.      */ [54799,54903]"/>
  <match src="parameter [77953,77980]" dest="parameter [77960,77987]"/>
  <match src="type_name [7022,7029]" dest="type_name [7022,7029]"/>
  <match src="call_argument [53701,53716]" dest="call_argument [53701,53716]"/>
  <match src="(: ( [80639,80640]" dest="(: ( [80646,80647]"/>
  <match src="identifier: t_ [64258,64260]" dest="identifier: t_ [64265,64267]"/>
  <match src="&quot;: &quot; [45277,45278]" dest="&quot;: &quot; [45277,45278]"/>
  <match src="primitive_type [77444,77450]" dest="primitive_type [77451,77457]"/>
  <match src="string_literal [8738,8771]" dest="string_literal [8738,8771]"/>
  <match src=",: , [62803,62804]" dest=",: , [62810,62811]"/>
  <match src="if: if [32628,32630]" dest="if: if [32628,32630]"/>
  <match src="return_type_definition [39820,39837]" dest="return_type_definition [39820,39837]"/>
  <match src="): ) [52933,52934]" dest="): ) [52933,52934]"/>
  <match src="interface_declaration [364,796]" dest="interface_declaration [364,796]"/>
  <match src="): ) [123,124]" dest="): ) [123,124]"/>
  <match src="member_expression [43473,43488]" dest="member_expression [43473,43488]"/>
  <match src="call_expression [79861,79956]" dest="call_expression [79868,79963]"/>
  <match src="call_expression [74897,74922]" dest="call_expression [74904,74929]"/>
  <match src="parameter [43848,43863]" dest="parameter [43848,43863]"/>
  <match src="expression_statement [68671,68709]" dest="expression_statement [68678,68716]"/>
  <match src="type_name [64399,64403]" dest="type_name [64406,64410]"/>
  <match src="bytes: bytes [3045,3050]" dest="bytes: bytes [3045,3050]"/>
  <match src="=: = [77096,77097]" dest="=: = [77103,77104]"/>
  <match src="user_defined_type [54050,54064]" dest="user_defined_type [54050,54064]"/>
  <match src="&lt;=: &lt;= [67985,67987]" dest="&lt;=: &lt;= [67992,67994]"/>
  <match src="(: ( [49356,49357]" dest="(: ( [49356,49357]"/>
  <match src="): ) [78385,78386]" dest="): ) [78392,78393]"/>
  <match src="state_variable_declaration [37183,37205]" dest="state_variable_declaration [37183,37205]"/>
  <match src="==: == [39571,39573]" dest="==: == [39571,39573]"/>
  <match src="number_literal: 8 [77632,77633]" dest="number_literal: 8 [77639,77640]"/>
  <match src="augmented_assignment_expression [7268,7278]" dest="augmented_assignment_expression [7268,7278]"/>
  <match src=",: , [22924,22925]" dest=",: , [22924,22925]"/>
  <match src="bytes: bytes [31373,31378]" dest="bytes: bytes [31373,31378]"/>
  <match src="return_type_definition [7051,7074]" dest="return_type_definition [7051,7074]"/>
  <match src="primitive_type [46180,46187]" dest="primitive_type [46180,46187]"/>
  <match src="uint: uint [68557,68561]" dest="uint: uint [68564,68568]"/>
  <match src="uint16: uint16 [77028,77034]" dest="uint16: uint16 [77035,77041]"/>
  <match src="identifier: target [31978,31984]" dest="identifier: target [31978,31984]"/>
  <match src="expression_statement [71246,71282]" dest="expression_statement [71253,71289]"/>
  <match src=",: , [67771,67772]" dest=",: , [67778,67779]"/>
  <match src="address: address [56979,56986]" dest="address: address [56979,56986]"/>
  <match src="string_literal [67097,67107]" dest="string_literal [67104,67114]"/>
  <match src="comment: /**      * @dev Approve or remove `operator` as an operator for the caller.      * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.      *      * Requirements:      *      * - The `operator` cannot be the caller.      *      * Emits an {ApprovalForAll} event.      */ [21609,21927]" dest="comment: /**      * @dev Approve or remove `operator` as an operator for the caller.      * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.      *      * Requirements:      *      * - The `operator` cannot be the caller.      *      * Emits an {ApprovalForAll} event.      */ [21609,21927]"/>
  <match src="binary_expression [27108,27139]" dest="binary_expression [27108,27139]"/>
  <match src="interface: interface [4720,4729]" dest="interface: interface [4720,4729]"/>
  <match src=".: . [72208,72209]" dest=".: . [72215,72216]"/>
  <match src="revert_statement [50050,50089]" dest="revert_statement [50050,50089]"/>
  <match src="comment: // Final Public Sale [68724,68744]" dest="comment: // Final Public Sale [68731,68751]"/>
  <match src="mload: mload [10761,10766]" dest="mload: mload [10761,10766]"/>
  <match src="member_expression [74638,74650]" dest="member_expression [74645,74657]"/>
  <match src="identifier: commonerId [60742,60752]" dest="identifier: commonerId [60749,60759]"/>
  <match src="call_argument [13103,13104]" dest="call_argument [13103,13104]"/>
  <match src="comment: // OpenZeppelin Contracts v4.4.1 (utils/Context.sol) [33027,33079]" dest="comment: // OpenZeppelin Contracts v4.4.1 (utils/Context.sol) [33027,33079]"/>
  <match src="comment: // Hence, curr will not underflow. [41552,41586]" dest="comment: // Hence, curr will not underflow. [41552,41586]"/>
  <match src="address: address [21583,21590]" dest="address: address [21583,21590]"/>
  <match src="!=: != [79889,79891]" dest="!=: != [79896,79898]"/>
  <match src="calldata: calldata [5655,5663]" dest="calldata: calldata [5655,5663]"/>
  <match src="address: address [12330,12337]" dest="address: address [12330,12337]"/>
  <match src="uint8: uint8 [5199,5204]" dest="uint8: uint8 [5199,5204]"/>
  <match src=".: . [53408,53409]" dest=".: . [53408,53409]"/>
  <match src=",: , [8288,8289]" dest=",: , [8288,8289]"/>
  <match src="identifier: tokenId [43928,43935]" dest="identifier: tokenId [43928,43935]"/>
  <match src="||: || [52716,52718]" dest="||: || [52716,52718]"/>
  <match src="=: = [7664,7665]" dest="=: = [7664,7665]"/>
  <match src="comment: // If there are multiple variables, please pack them into a uint64. [36895,36962]" dest="comment: // If there are multiple variables, please pack them into a uint64. [36895,36962]"/>
  <match src="identifier: _currentIndex [51693,51706]" dest="identifier: _currentIndex [51693,51706]"/>
  <match src="primitive_type [6648,6653]" dest="primitive_type [6648,6653]"/>
  <match src="(: ( [29652,29653]" dest="(: ( [29652,29653]"/>
  <match src="identifier: RecoverError [13870,13882]" dest="identifier: RecoverError [13870,13882]"/>
  <match src="identifier: _msgSender [52760,52770]" dest="identifier: _msgSender [52760,52770]"/>
  <match src="visibility [28154,28162]" dest="visibility [28154,28162]"/>
  <match src="identifier: quantity_ [65228,65237]" dest="identifier: quantity_ [65235,65244]"/>
  <match src="&quot;: &quot; [46157,46158]" dest="&quot;: &quot; [46157,46158]"/>
  <match src="primitive_type [21960,21967]" dest="primitive_type [21960,21967]"/>
  <match src="for_statement [74843,74934]" dest="for_statement [74850,74941]"/>
  <match src="contract_body [3211,3550]" dest="contract_body [3211,3550]"/>
  <match src="visibility [23876,23884]" dest="visibility [23876,23884]"/>
  <match src="interface: interface [4567,4576]" dest="interface: interface [4567,4576]"/>
  <match src="string_literal [69011,69032]" dest="string_literal [69018,69039]"/>
  <match src="yul_function_call [10819,10846]" dest="yul_function_call [10819,10846]"/>
  <match src="binary_expression [65280,65299]" dest="binary_expression [65287,65306]"/>
  <match src="string_literal [63844,63855]" dest="string_literal [63851,63862]"/>
  <match src="identifier: dogewood_ [61861,61870]" dest="identifier: dogewood_ [61868,61877]"/>
  <match src="call_argument [49365,49379]" dest="call_argument [49365,49379]"/>
  <match src="number_literal: 3 [62897,62898]" dest="number_literal: 3 [62904,62905]"/>
  <match src="inline_array_expression [62400,62429]" dest="inline_array_expression [62407,62436]"/>
  <match src="): ) [46190,46191]" dest="): ) [46190,46191]"/>
  <match src="visibility [61511,61517]" dest="visibility [61518,61524]"/>
  <match src="parameter [12248,12260]" dest="parameter [12248,12260]"/>
  <match src="member_expression [51774,51797]" dest="member_expression [51774,51797]"/>
  <match src="parameter [64821,64831]" dest="parameter [64828,64838]"/>
  <match src="member_expression [64290,64300]" dest="member_expression [64297,64307]"/>
  <match src=".: . [70830,70831]" dest=".: . [70837,70838]"/>
  <match src="[: [ [63389,63390]" dest="[: [ [63396,63397]"/>
  <match src="variable_declaration [6535,6549]" dest="variable_declaration [6535,6549]"/>
  <match src="identifier: IVRF [59186,59190]" dest="identifier: IVRF [59193,59197]"/>
  <match src="library_declaration [8204,17388]" dest="library_declaration [8204,17388]"/>
  <match src="primitive_type [7898,7904]" dest="primitive_type [7898,7904]"/>
  <match src="primitive_type [674,680]" dest="primitive_type [674,680]"/>
  <match src=".: . [78264,78265]" dest=".: . [78271,78272]"/>
  <match src="uint256: uint256 [3680,3687]" dest="uint256: uint256 [3680,3687]"/>
  <match src="call_expression [67025,67108]" dest="call_expression [67032,67115]"/>
  <match src="function_body [55766,56267]" dest="function_body [55766,56267]"/>
  <match src="yul_identifier [11245,11254]" dest="yul_identifier [11245,11254]"/>
  <match src="primitive_type [7505,7512]" dest="primitive_type [7505,7512]"/>
  <match src="visibility [3916,3924]" dest="visibility [3916,3924]"/>
  <match src="identifier: data [23864,23868]" dest="identifier: data [23864,23868]"/>
  <match src=",: , [62879,62880]" dest=",: , [62886,62887]"/>
  <match src="primitive_type [78852,78859]" dest="primitive_type [78859,78866]"/>
  <match src="call_expression [52679,52715]" dest="call_expression [52679,52715]"/>
  <match src="): ) [79622,79623]" dest="): ) [79629,79630]"/>
  <match src="contract: contract [33597,33605]" dest="contract: contract [33597,33605]"/>
  <match src="binary_expression [64861,64880]" dest="binary_expression [64868,64887]"/>
  <match src="(: ( [24586,24587]" dest="(: ( [24586,24587]"/>
  <match src="type_cast_expression [68184,68199]" dest="type_cast_expression [68191,68206]"/>
  <match src="call_argument [66096,66111]" dest="call_argument [66103,66118]"/>
  <match src="identifier: bodyType [79291,79299]" dest="identifier: bodyType [79298,79306]"/>
  <match src="function: function [64232,64240]" dest="function: function [64239,64247]"/>
  <match src="number_literal: 10 [59441,59443]" dest="number_literal: 10 [59448,59450]"/>
  <match src="memory: memory [42376,42382]" dest="memory: memory [42376,42382]"/>
  <match src="function: function [7001,7009]" dest="function: function [7001,7009]"/>
  <match src="): ) [7616,7617]" dest="): ) [7616,7617]"/>
  <match src="!=: != [41756,41758]" dest="!=: != [41756,41758]"/>
  <match src="[: [ [63188,63189]" dest="[: [ [63195,63196]"/>
  <match src="number_literal: 2 [7697,7698]" dest="number_literal: 2 [7697,7698]"/>
  <match src="identifier: msg [69156,69159]" dest="identifier: msg [69163,69166]"/>
  <match src="type_name [37661,37688]" dest="type_name [37661,37688]"/>
  <match src="parameter [67423,67427]" dest="parameter [67430,67434]"/>
  <match src="): ) [43496,43497]" dest="): ) [43496,43497]"/>
  <match src="function: function [30317,30325]" dest="function: function [30317,30325]"/>
  <match src="parameter [518,543]" dest="parameter [518,543]"/>
  <match src="type_name [78729,78736]" dest="type_name [78736,78743]"/>
  <match src="(: ( [3044,3045]" dest="(: ( [3044,3045]"/>
  <match src="binary_expression [77366,77379]" dest="binary_expression [77373,77386]"/>
  <match src="call_expression [44290,44302]" dest="call_expression [44290,44302]"/>
  <match src="array_access [81147,81160]" dest="array_access [81154,81167]"/>
  <match src="expression_statement [44837,44872]" dest="expression_statement [44837,44872]"/>
  <match src="): ) [30020,30021]" dest="): ) [30020,30021]"/>
  <match src="identifier: s [16817,16818]" dest="identifier: s [16817,16818]"/>
  <match src="-: - [74967,74968]" dest="-: - [74974,74975]"/>
  <match src="identifier: from [3318,3322]" dest="identifier: from [3318,3322]"/>
  <match src="identifier: startTimestamp [51066,51080]" dest="identifier: startTimestamp [51066,51080]"/>
  <match src="(: ( [7059,7060]" dest="(: ( [7059,7060]"/>
  <match src="memory: memory [447,453]" dest="memory: memory [447,453]"/>
  <match src=",: , [47495,47496]" dest=",: , [47495,47496]"/>
  <match src="comment: //     uint8 bodyType; A [72503,72527]" dest="comment: //     uint8 bodyType; A [72510,72534]"/>
  <match src="comment: // random generator [59203,59222]" dest="comment: // random generator [59210,59229]"/>
  <match src="uint64: uint64 [48507,48513]" dest="uint64: uint64 [48507,48513]"/>
  <match src="call_expression [67455,67501]" dest="call_expression [67462,67508]"/>
  <match src="identifier: id [81029,81031]" dest="identifier: id [81036,81038]"/>
  <match src="]: ] [66347,66348]" dest="]: ] [66354,66355]"/>
  <match src="identifier: ERC20Like [64651,64660]" dest="identifier: ERC20Like [64658,64667]"/>
  <match src="identifier: RecoverError [8679,8691]" dest="identifier: RecoverError [8679,8691]"/>
  <match src="identifier: target [30353,30359]" dest="identifier: target [30353,30359]"/>
  <match src="identifier: to [18527,18529]" dest="identifier: to [18527,18529]"/>
  <match src="override_specifier [39523,39531]" dest="override_specifier [39523,39531]"/>
  <match src="=: = [62451,62452]" dest="=: = [62458,62459]"/>
  <match src="identifier: tokenId [78860,78867]" dest="identifier: tokenId [78867,78874]"/>
  <match src="identifier: commoners [72769,72778]" dest="identifier: commoners [72776,72785]"/>
  <match src="if: if [8555,8557]" dest="if: if [8555,8557]"/>
  <match src="[: [ [73051,73052]" dest="[: [ [73058,73059]"/>
  <match src="function_definition [2425,2488]" dest="function_definition [2425,2488]"/>
  <match src="): ) [4675,4676]" dest="): ) [4675,4676]"/>
  <match src="view: view [39815,39819]" dest="view: view [39815,39819]"/>
  <match src="type_name [58129,58153]" dest="type_name [58129,58153]"/>
  <match src="{: { [7230,7231]" dest="{: { [7230,7231]"/>
  <match src="revert_statement [46114,46160]" dest="revert_statement [46114,46160]"/>
  <match src="): ) [13374,13375]" dest="): ) [13374,13375]"/>
  <match src="identifier: generate [75354,75362]" dest="identifier: generate [75361,75369]"/>
  <match src="return_type_definition [3265,3289]" dest="return_type_definition [3265,3289]"/>
  <match src="return_statement [79081,79624]" dest="return_statement [79088,79631]"/>
  <match src="binary_expression [39247,39275]" dest="binary_expression [39247,39275]"/>
  <match src="[: [ [64567,64568]" dest="[: [ [64574,64575]"/>
  <match src="number_literal: 0 [63399,63400]" dest="number_literal: 0 [63406,63407]"/>
  <match src="call_argument [30050,30054]" dest="call_argument [30050,30054]"/>
  <match src="=: = [42855,42856]" dest="=: = [42855,42856]"/>
  <match src="parameter [4978,4986]" dest="parameter [4978,4986]"/>
  <match src="[: [ [74630,74631]" dest="[: [ [74637,74638]"/>
  <match src="parameter [1661,1683]" dest="parameter [1661,1683]"/>
  <match src="return: return [46772,46778]" dest="return: return [46772,46778]"/>
  <match src="identifier: breed [5159,5164]" dest="identifier: breed [5159,5164]"/>
  <match src="parameter [15548,15555]" dest="parameter [15548,15555]"/>
  <match src="struct_member [60497,60513]" dest="struct_member [60504,60520]"/>
  <match src="primitive_type [1960,1966]" dest="primitive_type [1960,1966]"/>
  <match src="(: ( [15625,15626]" dest="(: ( [15625,15626]"/>
  <match src="{: { [27089,27090]" dest="{: { [27089,27090]"/>
  <match src="): ) [24251,24252]" dest="): ) [24251,24252]"/>
  <match src=".: . [66224,66225]" dest=".: . [66231,66232]"/>
  <match src=".: . [80626,80627]" dest=".: . [80633,80634]"/>
  <match src="extcodesize: extcodesize [61064,61075]" dest="extcodesize: extcodesize [61071,61082]"/>
  <match src="type_name [76419,76424]" dest="type_name [76426,76431]"/>
  <match src="{: { [23231,23232]" dest="{: { [23231,23232]"/>
  <match src="): ) [49358,49359]" dest="): ) [49358,49359]"/>
  <match src=",: , [62639,62640]" dest=",: , [62646,62647]"/>
  <match src="type_name [20115,20122]" dest="type_name [20115,20122]"/>
  <match src="address: address [57773,57780]" dest="address: address [57773,57780]"/>
  <match src="identifier: quantity [57856,57864]" dest="identifier: quantity [57856,57864]"/>
  <match src="do_while_statement [48825,49142]" dest="do_while_statement [48825,49142]"/>
  <match src="identifier: treat [66136,66141]" dest="identifier: treat [66143,66148]"/>
  <match src=".: . [66886,66887]" dest=".: . [66893,66894]"/>
  <match src="++: ++ [80522,80524]" dest="++: ++ [80529,80531]"/>
  <match src="number_literal: 2 [62454,62455]" dest="number_literal: 2 [62461,62462]"/>
  <match src="binary_expression [66760,66775]" dest="binary_expression [66767,66782]"/>
  <match src="identifier: auth [67596,67600]" dest="identifier: auth [67603,67607]"/>
  <match src="memory: memory [31957,31963]" dest="memory: memory [31957,31963]"/>
  <match src="uint256: uint256 [4500,4507]" dest="uint256: uint256 [4500,4507]"/>
  <match src="uint256: uint256 [196,203]" dest="uint256: uint256 [196,203]"/>
  <match src=",: , [75378,75379]" dest=",: , [75385,75386]"/>
  <match src="=: = [74123,74124]" dest="=: = [74130,74131]"/>
  <match src="bytes: bytes [29792,29797]" dest="bytes: bytes [29792,29797]"/>
  <match src="}: } [63758,63759]" dest="}: } [63765,63766]"/>
  <match src="primitive_type [29740,29746]" dest="primitive_type [29740,29746]"/>
  <match src="variable_declaration_statement [60970,60987]" dest="variable_declaration_statement [60977,60994]"/>
  <match src="&quot;: &quot; [6479,6480]" dest="&quot;: &quot; [6479,6480]"/>
  <match src="]: ] [44312,44313]" dest="]: ] [44312,44313]"/>
  <match src="address: address [65091,65098]" dest="address: address [65098,65105]"/>
  <match src="external: external [80848,80856]" dest="external: external [80855,80863]"/>
  <match src="function_body [81523,81559]" dest="function_body [81530,81566]"/>
  <match src="primitive_type [45837,45844]" dest="primitive_type [45837,45844]"/>
  <match src="primitive_type [3981,3988]" dest="primitive_type [3981,3988]"/>
  <match src="identifier: _operatorApprovals [44271,44289]" dest="identifier: _operatorApprovals [44271,44289]"/>
  <match src="event: event [18888,18893]" dest="event: event [18888,18893]"/>
  <match src="view: view [67409,67413]" dest="view: view [67416,67420]"/>
  <match src="identifier: ownerOf [78792,78799]" dest="identifier: ownerOf [78799,78806]"/>
  <match src="(: ( [19083,19084]" dest="(: ( [19083,19084]"/>
  <match src=",: , [69198,69199]" dest=",: , [69205,69206]"/>
  <match src="expression_statement [61882,61908]" dest="expression_statement [61889,61915]"/>
  <match src="binary_expression [68069,68091]" dest="binary_expression [68076,68098]"/>
  <match src="]: ] [73007,73008]" dest="]: ] [73014,73015]"/>
  <match src=",: , [80765,80766]" dest=",: , [80772,80773]"/>
  <match src="identifier: head [76929,76933]" dest="identifier: head [76936,76940]"/>
  <match src="&lt;=: &lt;= [46795,46797]" dest="&lt;=: &lt;= [46795,46797]"/>
  <match src="binary_expression [70110,70140]" dest="binary_expression [70117,70147]"/>
  <match src=".: . [70779,70780]" dest=".: . [70786,70787]"/>
  <match src="virtual: virtual [44538,44545]" dest="virtual: virtual [44538,44545]"/>
  <match src="identifier: length [26065,26071]" dest="identifier: length [26065,26071]"/>
  <match src="%: % [6807,6808]" dest="%: % [6807,6808]"/>
  <match src="uint16: uint16 [77609,77615]" dest="uint16: uint16 [77616,77622]"/>
  <match src="bool: bool [1533,1537]" dest="bool: bool [1533,1537]"/>
  <match src="=: = [74068,74069]" dest="=: = [74075,74076]"/>
  <match src="): ) [7073,7074]" dest="): ) [7073,7074]"/>
  <match src="call_argument [69052,69089]" dest="call_argument [69059,69096]"/>
  <match src=",: , [18702,18703]" dest=",: , [18702,18703]"/>
  <match src="parameter [5645,5667]" dest="parameter [5645,5667]"/>
  <match src="identifier: id [4263,4265]" dest="identifier: id [4263,4265]"/>
  <match src="call_argument [17319,17376]" dest="call_argument [17319,17376]"/>
  <match src="number_literal: 1 [53464,53465]" dest="number_literal: 1 [53464,53465]"/>
  <match src=",: , [79021,79022]" dest=",: , [79028,79029]"/>
  <match src="call_expression [67828,67881]" dest="call_expression [67835,67888]"/>
  <match src="member_expression [65137,65147]" dest="member_expression [65144,65154]"/>
  <match src="returns: returns [76874,76881]" dest="returns: returns [76881,76888]"/>
  <match src="primitive_type [42885,42890]" dest="primitive_type [42885,42890]"/>
  <match src="identifier: coolBlocks [79869,79879]" dest="identifier: coolBlocks [79876,79886]"/>
  <match src="mapping: mapping [37770,37777]" dest="mapping: mapping [37770,37777]"/>
  <match src="parameter [20754,20766]" dest="parameter [20754,20766]"/>
  <match src="function: function [4447,4455]" dest="function: function [4447,4455]"/>
  <match src="variable_declaration_statement [10475,10485]" dest="variable_declaration_statement [10475,10485]"/>
  <match src="state_mutability [68893,68900]" dest="state_mutability [68900,68907]"/>
  <match src="(: ( [68561,68562]" dest="(: ( [68568,68569]"/>
  <match src="expression_statement [74863,74876]" dest="expression_statement [74870,74883]"/>
  <match src="member_expression [63928,63949]" dest="member_expression [63935,63956]"/>
  <match src="primitive_type [3045,3050]" dest="primitive_type [3045,3050]"/>
  <match src="identifier: recovered [12338,12347]" dest="identifier: recovered [12338,12347]"/>
  <match src="type_name [18531,18538]" dest="type_name [18531,18538]"/>
  <match src="uint256: uint256 [74404,74411]" dest="uint256: uint256 [74411,74418]"/>
  <match src="identifier: data [29701,29705]" dest="identifier: data [29701,29705]"/>
  <match src="identifier: _ownershipOf [42126,42138]" dest="identifier: _ownershipOf [42126,42138]"/>
  <match src="number_literal: 4 [62863,62864]" dest="number_literal: 4 [62870,62871]"/>
  <match src="{: { [55013,55014]" dest="{: { [55013,55014]"/>
  <match src="returns: returns [10193,10200]" dest="returns: returns [10193,10200]"/>
  <match src="{: { [33794,33795]" dest="{: { [33794,33795]"/>
  <match src=",: , [15178,15179]" dest=",: , [15178,15179]"/>
  <match src="(: ( [19346,19347]" dest="(: ( [19346,19347]"/>
  <match src="external: external [4847,4855]" dest="external: external [4847,4855]"/>
  <match src="return_type_definition [18188,18202]" dest="return_type_definition [18188,18202]"/>
  <match src="identifier: _mintCommoners [69615,69629]" dest="identifier: _mintCommoners [69622,69636]"/>
  <match src="identifier: structHash [17365,17375]" dest="identifier: structHash [17365,17375]"/>
  <match src="identifier: functionStaticCall [30435,30453]" dest="identifier: functionStaticCall [30435,30453]"/>
  <match src="assignment_expression [62386,62429]" dest="assignment_expression [62393,62436]"/>
  <match src="type_name [18489,18496]" dest="type_name [18489,18496]"/>
  <match src="unary_expression [52794,52812]" dest="unary_expression [52794,52812]"/>
  <match src="array_access [63376,63386]" dest="array_access [63383,63393]"/>
  <match src="type_name [5443,5451]" dest="type_name [5443,5451]"/>
  <match src="primitive_type [47908,47915]" dest="primitive_type [47908,47915]"/>
  <match src="parameter [65239,65250]" dest="parameter [65246,65257]"/>
  <match src="uint8: uint8 [5274,5279]" dest="uint8: uint8 [5274,5279]"/>
  <match src="if: if [74993,74995]" dest="if: if [75000,75002]"/>
  <match src="address: address [14883,14890]" dest="address: address [14883,14890]"/>
  <match src="identifier: _beforeTokenTransfers [56924,56945]" dest="identifier: _beforeTokenTransfers [56924,56945]"/>
  <match src="type_name [29663,29670]" dest="type_name [29663,29670]"/>
  <match src=",: , [51967,51968]" dest=",: , [51967,51968]"/>
  <match src="identifier: getApproved [45196,45207]" dest="identifier: getApproved [45196,45207]"/>
  <match src=",: , [49539,49540]" dest=",: , [49539,49540]"/>
  <match src="): ) [32494,32495]" dest="): ) [32494,32495]"/>
  <match src="member_expression [61130,61140]" dest="member_expression [61137,61147]"/>
  <match src="type_name [3904,3911]" dest="type_name [3904,3911]"/>
  <match src=",: , [62132,62133]" dest=",: , [62139,62140]"/>
  <match src="type_name [5604,5608]" dest="type_name [5604,5608]"/>
  <match src="[: [ [62596,62597]" dest="[: [ [62603,62604]"/>
  <match src=",: , [10901,10902]" dest=",: , [10901,10902]"/>
  <match src="uint256: uint256 [59069,59076]" dest="uint256: uint256 [59076,59083]"/>
  <match src="==: == [48030,48032]" dest="==: == [48030,48032]"/>
  <match src="type_name [65697,65705]" dest="type_name [65704,65712]"/>
  <match src="function_definition [63623,63759]" dest="function_definition [63630,63766]"/>
  <match src="identifier: ICommoner [5044,5053]" dest="identifier: ICommoner [5044,5053]"/>
  <match src="uint256: uint256 [44669,44676]" dest="uint256: uint256 [44669,44676]"/>
  <match src="identifier: tokenPartner [68488,68500]" dest="identifier: tokenPartner [68495,68507]"/>
  <match src="identifier: pullCallback [80627,80639]" dest="identifier: pullCallback [80634,80646]"/>
  <match src=",: , [13101,13102]" dest=",: , [13101,13102]"/>
  <match src="return_type_definition [23885,23901]" dest="return_type_definition [23885,23901]"/>
  <match src="type_name [5724,5729]" dest="type_name [5724,5729]"/>
  <match src="(: ( [49205,49206]" dest="(: ( [49205,49206]"/>
  <match src="call_argument [15699,15703]" dest="call_argument [15699,15703]"/>
  <match src="]: ] [1669,1670]" dest="]: ] [1669,1670]"/>
  <match src="(: ( [15202,15203]" dest="(: ( [15202,15203]"/>
  <match src="): ) [27078,27079]" dest="): ) [27078,27079]"/>
  <match src="yul_identifier [10721,10730]" dest="yul_identifier [10721,10730]"/>
  <match src="type_name [21337,21344]" dest="type_name [21337,21344]"/>
  <match src="identifier: safeTransferFrom [45766,45782]" dest="identifier: safeTransferFrom [45766,45782]"/>
  <match src="(: ( [15002,15003]" dest="(: ( [15002,15003]"/>
  <match src="identifier: who_ [78737,78741]" dest="identifier: who_ [78744,78748]"/>
  <match src="identifier: breed [1035,1040]" dest="identifier: breed [1035,1040]"/>
  <match src="(: ( [6444,6445]" dest="(: ( [6444,6445]"/>
  <match src="identifier: tokenPartner [68407,68419]" dest="identifier: tokenPartner [68414,68426]"/>
  <match src="false [61956,61961]" dest="false [61963,61968]"/>
  <match src="): ) [71312,71313]" dest="): ) [71319,71320]"/>
  <match src="function: function [5684,5692]" dest="function: function [5684,5692]"/>
  <match src="&lt;=: &lt;= [69389,69391]" dest="&lt;=: &lt;= [69396,69398]"/>
  <match src="primitive_type [65221,65227]" dest="primitive_type [65228,65234]"/>
  <match src=",: , [64622,64623]" dest=",: , [64629,64630]"/>
  <match src="): ) [22960,22961]" dest="): ) [22960,22961]"/>
  <match src="number_literal: 112 [62631,62634]" dest="number_literal: 112 [62638,62641]"/>
  <match src="identifier: tokenId [49911,49918]" dest="identifier: tokenId [49911,49918]"/>
  <match src=".: . [50035,50036]" dest=".: . [50035,50036]"/>
  <match src="identifier: AirdropTopTalent [60701,60717]" dest="identifier: AirdropTopTalent [60708,60724]"/>
  <match src="state_mutability [33652,33656]" dest="state_mutability [33652,33656]"/>
  <match src="parameter [74366,74382]" dest="parameter [74373,74389]"/>
  <match src="type_name [572,578]" dest="type_name [572,578]"/>
  <match src="bytes32: bytes32 [13801,13808]" dest="bytes32: bytes32 [13801,13808]"/>
  <match src="ether: ether [69193,69198]" dest="ether: ether [69200,69205]"/>
  <match src="=: = [63066,63067]" dest="=: = [63073,63074]"/>
  <match src="bytes: bytes [55975,55980]" dest="bytes: bytes [55975,55980]"/>
  <match src="function: function [28502,28510]" dest="function: function [28502,28510]"/>
  <match src="binary_expression [14963,14970]" dest="binary_expression [14963,14970]"/>
  <match src="expression_statement [73812,73848]" dest="expression_statement [73819,73855]"/>
  <match src="[: [ [79384,79385]" dest="[: [ [79391,79392]"/>
  <match src="identifier: quantity_ [67975,67984]" dest="identifier: quantity_ [67982,67991]"/>
  <match src="function: function [15498,15506]" dest="function: function [15498,15506]"/>
  <match src="): ) [17257,17258]" dest="): ) [17257,17258]"/>
  <match src="identifier: returndata [32518,32528]" dest="identifier: returndata [32518,32528]"/>
  <match src="identifier: startTokenId [49545,49557]" dest="identifier: startTokenId [49545,49557]"/>
  <match src="address: address [55670,55677]" dest="address: address [55670,55677]"/>
  <match src="&quot;: &quot; [46381,46382]" dest="&quot;: &quot; [46381,46382]"/>
  <match src="[: [ [63320,63321]" dest="[: [ [63327,63328]"/>
  <match src="interface: interface [3086,3095]" dest="interface: interface [3086,3095]"/>
  <match src="primitive_type [28559,28564]" dest="primitive_type [28559,28564]"/>
  <match src="expression_statement [65168,65185]" dest="expression_statement [65175,65192]"/>
  <match src="bytes32: bytes32 [12873,12880]" dest="bytes32: bytes32 [12873,12880]"/>
  <match src="function_body [65118,65192]" dest="function_body [65125,65199]"/>
  <match src=",: , [44744,44745]" dest=",: , [44744,44745]"/>
  <match src=",: , [68946,68947]" dest=",: , [68953,68954]"/>
  <match src="public: public [42694,42700]" dest="public: public [42694,42700]"/>
  <match src="type_cast_expression [47965,47975]" dest="type_cast_expression [47965,47975]"/>
  <match src="type_name [74456,74463]" dest="type_name [74463,74470]"/>
  <match src=".: . [48791,48792]" dest=".: . [48791,48792]"/>
  <match src="): ) [52092,52093]" dest="): ) [52092,52093]"/>
  <match src="identifier: reason [56192,56198]" dest="identifier: reason [56192,56198]"/>
  <match src="{: { [3576,3577]" dest="{: { [3576,3577]"/>
  <match src="identifier: ECDSA [58010,58015]" dest="identifier: ECDSA [58010,58015]"/>
  <match src="identifier: Approval [55069,55077]" dest="identifier: Approval [55069,55077]"/>
  <match src="==: == [71308,71310]" dest="==: == [71315,71317]"/>
  <match src="member_expression [48415,48439]" dest="member_expression [48415,48439]"/>
  <match src="yul_function_call [56201,56214]" dest="yul_function_call [56201,56214]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [76989,76992]" dest="&gt;&gt;=: &gt;&gt;= [76996,76999]"/>
  <match src="address: address [49349,49356]" dest="address: address [49349,49356]"/>
  <match src=".: . [66045,66046]" dest=".: . [66052,66053]"/>
  <match src="]: ] [53617,53618]" dest="]: ] [53617,53618]"/>
  <match src="identifier: topCommoner_ [70766,70778]" dest="identifier: topCommoner_ [70773,70785]"/>
  <match src="(: ( [5516,5517]" dest="(: ( [5516,5517]"/>
  <match src="call_argument [45666,45673]" dest="call_argument [45666,45673]"/>
  <match src="(: ( [610,611]" dest="(: ( [610,611]"/>
  <match src="parameter [31336,31353]" dest="parameter [31336,31353]"/>
  <match src="memory: memory [29798,29804]" dest="memory: memory [29798,29804]"/>
  <match src="): ) [76443,76444]" dest="): ) [76450,76451]"/>
  <match src="visibility [58104,58110]" dest="visibility [58104,58110]"/>
  <match src="primitive_type [43413,43420]" dest="primitive_type [43413,43420]"/>
  <match src="): ) [79738,79739]" dest="): ) [79745,79746]"/>
  <match src="visibility [55005,55012]" dest="visibility [55005,55012]"/>
  <match src=".: . [54426,54427]" dest=".: . [54426,54427]"/>
  <match src="identifier: _data [55847,55852]" dest="identifier: _data [55847,55852]"/>
  <match src="array_access [73921,73944]" dest="array_access [73928,73951]"/>
  <match src="primitive_type [53008,53015]" dest="primitive_type [53008,53015]"/>
  <match src="function_definition [5684,5873]" dest="function_definition [5684,5873]"/>
  <match src="binary_expression [69964,69979]" dest="binary_expression [69971,69986]"/>
  <match src="expression_statement [50909,50939]" dest="expression_statement [50909,50939]"/>
  <match src="primitive_type [13760,13767]" dest="primitive_type [13760,13767]"/>
  <match src="address: address [44508,44515]" dest="address: address [44508,44515]"/>
  <match src="primitive_type [1440,1447]" dest="primitive_type [1440,1447]"/>
  <match src="assignment_expression [73154,73189]" dest="assignment_expression [73161,73196]"/>
  <match src="comment: /**      * @dev See {IERC721Metadata-tokenURI}.      */ [42596,42653]" dest="comment: /**      * @dev See {IERC721Metadata-tokenURI}.      */ [42596,42653]"/>
  <match src="binary_expression [7219,7228]" dest="binary_expression [7219,7228]"/>
  <match src="(: ( [7218,7219]" dest="(: ( [7218,7219]"/>
  <match src="(: ( [61791,61792]" dest="(: ( [61798,61799]"/>
  <match src="&quot;: &quot; [61740,61741]" dest="&quot;: &quot; [61747,61748]"/>
  <match src="number_literal: 1 [70144,70145]" dest="number_literal: 1 [70151,70152]"/>
  <match src="[: [ [61129,61130]" dest="[: [ [61136,61137]"/>
  <match src="type_name [32458,32463]" dest="type_name [32458,32463]"/>
  <match src="return_statement [79765,79808]" dest="return_statement [79772,79815]"/>
  <match src="identifier: initialSaleMinted [58577,58594]" dest="identifier: initialSaleMinted [58584,58601]"/>
  <match src="add: add [11190,11193]" dest="add: add [11190,11193]"/>
  <match src="identifier: tokenId [80091,80098]" dest="identifier: tokenId [80098,80105]"/>
  <match src="): ) [2486,2487]" dest="): ) [2486,2487]"/>
  <match src="member_expression [63823,63833]" dest="member_expression [63830,63840]"/>
  <match src="function_body [63804,63958]" dest="function_body [63811,63965]"/>
  <match src="internal: internal [29774,29782]" dest="internal: internal [29774,29782]"/>
  <match src="uint8: uint8 [1073,1078]" dest="uint8: uint8 [1073,1078]"/>
  <match src="payable: payable [63867,63874]" dest="payable: payable [63874,63881]"/>
  <match src="number_literal: 0 [46188,46189]" dest="number_literal: 0 [46188,46189]"/>
  <match src="yul_path [32878,32888]" dest="yul_path [32878,32888]"/>
  <match src="identifier: topCommoner_ [70180,70192]" dest="identifier: topCommoner_ [70187,70199]"/>
  <match src="assignment_expression [81105,81136]" dest="assignment_expression [81112,81143]"/>
  <match src=".: . [64527,64528]" dest=".: . [64534,64535]"/>
  <match src="{: { [52449,52450]" dest="{: { [52449,52450]"/>
  <match src="identifier: quantity_ [68698,68707]" dest="identifier: quantity_ [68705,68714]"/>
  <match src="[: [ [62197,62198]" dest="[: [ [62204,62205]"/>
  <match src="identifier: topCommoner_ [72083,72095]" dest="identifier: topCommoner_ [72090,72102]"/>
  <match src="identifier: _numberMinted [39777,39790]" dest="identifier: _numberMinted [39777,39790]"/>
  <match src="=: = [73132,73133]" dest="=: = [73139,73140]"/>
  <match src="identifier: head [78099,78103]" dest="identifier: head [78106,78110]"/>
  <match src="identifier: id_ [74464,74467]" dest="identifier: id_ [74471,74474]"/>
  <match src="visibility [13376,13384]" dest="visibility [13376,13384]"/>
  <match src="identifier: seed [76495,76499]" dest="identifier: seed [76502,76506]"/>
  <match src="type_name [27064,27071]" dest="type_name [27064,27071]"/>
  <match src="number_literal [67160,67171]" dest="number_literal [67167,67178]"/>
  <match src="boolean_literal [65954,65959]" dest="boolean_literal [65961,65966]"/>
  <match src="&quot;: &quot; [79023,79024]" dest="&quot;: &quot; [79030,79031]"/>
  <match src="uint: uint [4968,4972]" dest="uint: uint [4968,4972]"/>
  <match src="type_name [44493,44500]" dest="type_name [44493,44500]"/>
  <match src="primitive_type [52395,52402]" dest="primitive_type [52395,52402]"/>
  <match src="identifier: auth [80899,80903]" dest="identifier: auth [80906,80910]"/>
  <match src="identifier: size [61056,61060]" dest="identifier: size [61063,61067]"/>
  <match src="address: address [21960,21967]" dest="address: address [21960,21967]"/>
  <match src="call_struct_argument [79526,79561]" dest="call_struct_argument [79533,79568]"/>
  <match src="primitive_type [4389,4396]" dest="primitive_type [4389,4396]"/>
  <match src="): ) [44301,44302]" dest="): ) [44301,44302]"/>
  <match src="identifier: commoners [72130,72139]" dest="identifier: commoners [72137,72146]"/>
  <match src="): ) [45215,45216]" dest="): ) [45215,45216]"/>
  <match src=".: . [48490,48491]" dest=".: . [48490,48491]"/>
  <match src=",: , [62419,62420]" dest=",: , [62426,62427]"/>
  <match src="add: add [11241,11244]" dest="add: add [11241,11244]"/>
  <match src="}: } [52150,52151]" dest="}: } [52150,52151]"/>
  <match src="}: } [40369,40370]" dest="}: } [40369,40370]"/>
  <match src="string [6043,6061]" dest="string [6043,6061]"/>
  <match src="identifier: commoners [79430,79439]" dest="identifier: commoners [79437,79446]"/>
  <match src=",: , [62296,62297]" dest=",: , [62303,62304]"/>
  <match src="(: ( [56014,56015]" dest="(: ( [56014,56015]"/>
  <match src=",: , [63397,63398]" dest=",: , [63404,63405]"/>
  <match src="type_name [4827,4833]" dest="type_name [4827,4833]"/>
  <match src="function_definition [3355,3408]" dest="function_definition [3355,3408]"/>
  <match src="call_argument [78148,78157]" dest="call_argument [78155,78164]"/>
  <match src="}: } [65191,65192]" dest="}: } [65198,65199]"/>
  <match src="identifier: doges_ [65885,65891]" dest="identifier: doges_ [65892,65898]"/>
  <match src="comment: // 0 - 7 are associated with head, breed, palette, bodyType, clothes, accessory, background, smithing, alchemy, cooking [59308,59427]" dest="comment: // 0 - 7 are associated with head, breed, palette, bodyType, clothes, accessory, background, smithing, alchemy, cooking [59315,59434]"/>
  <match src="==: == [47962,47964]" dest="==: == [47962,47964]"/>
  <match src="number_literal: 3 [62894,62895]" dest="number_literal: 3 [62901,62902]"/>
  <match src="identifier: success [29988,29995]" dest="identifier: success [29988,29995]"/>
  <match src="identifier: topCommoner_ [70978,70990]" dest="identifier: topCommoner_ [70985,70997]"/>
  <match src="identifier: _startTokenId [46779,46792]" dest="identifier: _startTokenId [46779,46792]"/>
  <match src="member_expression [73708,73736]" dest="member_expression [73715,73743]"/>
  <match src="primitive_type [64417,64422]" dest="primitive_type [64424,64429]"/>
  <match src="&quot;: &quot; [78965,78966]" dest="&quot;: &quot; [78972,78973]"/>
  <match src="(: ( [44772,44773]" dest="(: ( [44772,44773]"/>
  <match src="parameter [24408,24421]" dest="parameter [24408,24421]"/>
  <match src="address: address [45793,45800]" dest="address: address [45793,45800]"/>
  <match src="number_literal: 0 [49357,49358]" dest="number_literal: 0 [49357,49358]"/>
  <match src="identifier: aliases [62440,62447]" dest="identifier: aliases [62447,62454]"/>
  <match src=".: . [50881,50882]" dest=".: . [50881,50882]"/>
  <match src="true: true [47497,47501]" dest="true: true [47497,47501]"/>
  <match src=",: , [13050,13051]" dest=",: , [13050,13051]"/>
  <match src="]: ] [63385,63386]" dest="]: ] [63392,63393]"/>
  <match src="identifier: isContract [25766,25776]" dest="identifier: isContract [25766,25776]"/>
  <match src="string: string [79725,79731]" dest="string: string [79732,79738]"/>
  <match src="return_type_definition [16703,16720]" dest="return_type_definition [16703,16720]"/>
  <match src="mapping: mapping [58512,58519]" dest="mapping: mapping [58512,58519]"/>
  <match src="comment: /**      * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients      * are aware of the ERC721 protocol to prevent tokens from being forever locked.      *      * Requirements:      *      * - `from` cannot be the zero address.      * - `to` cannot be the zero address.      * - `tokenId` token must exist and be owned by `from`.      * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.      *      * Emits a {Transfer} event.      */ [19370,20073]" dest="comment: /**      * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients      * are aware of the ERC721 protocol to prevent tokens from being forever locked.      *      * Requirements:      *      * - `from` cannot be the zero address.      * - `to` cannot be the zero address.      * - `tokenId` token must exist and be owned by `from`.      * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.      *      * Emits a {Transfer} event.      */ [19370,20073]"/>
  <match src="private: private [37815,37822]" dest="private: private [37815,37822]"/>
  <match src="call_argument [68948,68975]" dest="call_argument [68955,68982]"/>
  <match src="identifier: background [78265,78275]" dest="identifier: background [78272,78282]"/>
  <match src="string: string [24587,24593]" dest="string: string [24587,24593]"/>
  <match src="type_name [724,730]" dest="type_name [724,730]"/>
  <match src="(: ( [55796,55797]" dest="(: ( [55796,55797]"/>
  <match src="): ) [16687,16688]" dest="): ) [16687,16688]"/>
  <match src="]: ] [6771,6772]" dest="]: ] [6771,6772]"/>
  <match src="call_argument [48107,48108]" dest="call_argument [48107,48108]"/>
  <match src="identifier: owner [18925,18930]" dest="identifier: owner [18925,18930]"/>
  <match src="memory: memory [24594,24600]" dest="memory: memory [24594,24600]"/>
  <match src="number_literal: 8 [63189,63190]" dest="number_literal: 8 [63196,63197]"/>
  <match src=",: , [48879,48880]" dest=",: , [48879,48880]"/>
  <match src="expression_statement [55024,55054]" dest="expression_statement [55024,55054]"/>
  <match src="external: external [1510,1518]" dest="external: external [1510,1518]"/>
  <match src="expression_statement [74586,74606]" dest="expression_statement [74593,74613]"/>
  <match src="identifier: to [55678,55680]" dest="identifier: to [55678,55680]"/>
  <match src="address: address [45816,45823]" dest="address: address [45816,45823]"/>
  <match src="visibility [35984,35990]" dest="visibility [35984,35990]"/>
  <match src="identifier: ApprovalForAll [18894,18908]" dest="identifier: ApprovalForAll [18894,18908]"/>
  <match src="primitive_type [5274,5279]" dest="primitive_type [5274,5279]"/>
  <match src="type_name [13338,13345]" dest="type_name [13338,13345]"/>
  <match src="): ) [69318,69319]" dest="): ) [69325,69326]"/>
  <match src="type_name [59820,59827]" dest="type_name [59827,59834]"/>
  <match src="call_argument [31873,31879]" dest="call_argument [31873,31879]"/>
  <match src="(: ( [44300,44301]" dest="(: ( [44300,44301]"/>
  <match src="identifier: _symbol [37250,37257]" dest="identifier: _symbol [37250,37257]"/>
  <match src=".: . [63690,63691]" dest=".: . [63697,63698]"/>
  <match src="identifier: s [14787,14788]" dest="identifier: s [14787,14788]"/>
  <match src="primitive_type [10969,10976]" dest="primitive_type [10969,10976]"/>
  <match src="identifier: Context [33606,33613]" dest="identifier: Context [33606,33613]"/>
  <match src="identifier: require [69252,69259]" dest="identifier: require [69259,69266]"/>
  <match src="array_access [72185,72208]" dest="array_access [72192,72215]"/>
  <match src="*: * [68573,68574]" dest="*: * [68580,68581]"/>
  <match src=",: , [15537,15538]" dest=",: , [15537,15538]"/>
  <match src=".: . [70113,70114]" dest=".: . [70120,70121]"/>
  <match src="public: public [42069,42075]" dest="public: public [42069,42075]"/>
  <match src="identifier: clothes [5774,5781]" dest="identifier: clothes [5774,5781]"/>
  <match src="(: ( [30344,30345]" dest="(: ( [30344,30345]"/>
  <match src="uint16: uint16 [1921,1927]" dest="uint16: uint16 [1921,1927]"/>
  <match src="string_literal [43312,43314]" dest="string_literal [43312,43314]"/>
  <match src="): ) [43637,43638]" dest="): ) [43637,43638]"/>
  <match src="number_literal: 66 [62612,62614]" dest="number_literal: 66 [62619,62621]"/>
  <match src="): ) [41964,41965]" dest="): ) [41964,41965]"/>
  <match src=",: , [62876,62877]" dest=",: , [62883,62884]"/>
  <match src="(: ( [64382,64383]" dest="(: ( [64389,64390]"/>
  <match src=",: , [67095,67096]" dest=",: , [67102,67103]"/>
  <match src="expression_statement [73921,73958]" dest="expression_statement [73928,73965]"/>
  <match src="identifier: svgBreedColor [631,644]" dest="identifier: svgBreedColor [631,644]"/>
  <match src="identifier: to [45009,45011]" dest="identifier: to [45009,45011]"/>
  <match src="identifier: IVRF [4730,4734]" dest="identifier: IVRF [4730,4734]"/>
  <match src="yul_evm_builtin [32863,32869]" dest="yul_evm_builtin [32863,32869]"/>
  <match src=",: , [64458,64459]" dest=",: , [64465,64466]"/>
  <match src="function_definition [74329,75043]" dest="function_definition [74336,75050]"/>
  <match src="identifier: id_ [74516,74519]" dest="identifier: id_ [74523,74526]"/>
  <match src="identifier: IDogewood [58643,58652]" dest="identifier: IDogewood [58650,58659]"/>
  <match src=".: . [33815,33816]" dest=".: . [33815,33816]"/>
  <match src="[: [ [80954,80955]" dest="[: [ [80961,80962]"/>
  <match src="function_definition [388,587]" dest="function_definition [388,587]"/>
  <match src=",: , [11313,11314]" dest=",: , [11313,11314]"/>
  <match src="parameter [47842,47860]" dest="parameter [47842,47860]"/>
  <match src="assignment_expression [73866,73902]" dest="assignment_expression [73873,73909]"/>
  <match src="type_name [1117,1122]" dest="type_name [1117,1122]"/>
  <match src="identifier: r [10977,10978]" dest="identifier: r [10977,10978]"/>
  <match src="external: external [3340,3348]" dest="external: external [3340,3348]"/>
  <match src="[: [ [67218,67219]" dest="[: [ [67225,67226]"/>
  <match src="identifier: tryRecover [10883,10893]" dest="identifier: tryRecover [10883,10893]"/>
  <match src="{: { [69888,69889]" dest="{: { [69895,69896]"/>
  <match src="{: { [46938,46939]" dest="{: { [46938,46939]"/>
  <match src="[: [ [50921,50922]" dest="[: [ [50921,50922]"/>
  <match src="parameter [47815,47831]" dest="parameter [47815,47831]"/>
  <match src="function_definition [6168,6891]" dest="function_definition [6168,6891]"/>
  <match src="): ) [47501,47502]" dest="): ) [47501,47502]"/>
  <match src="comment: /**      * @dev See {IERC721-approve}.      */ [43330,43378]" dest="comment: /**      * @dev See {IERC721-approve}.      */ [43330,43378]"/>
  <match src="function: function [31290,31298]" dest="function: function [31290,31298]"/>
  <match src="): ) [46730,46731]" dest="): ) [46730,46731]"/>
  <match src=",: , [62152,62153]" dest=",: , [62159,62160]"/>
  <match src="identifier: msg [64290,64293]" dest="identifier: msg [64297,64300]"/>
  <match src="type_name [65221,65227]" dest="type_name [65228,65234]"/>
  <match src="}: } [46442,46443]" dest="}: } [46442,46443]"/>
  <match src="let: let [32801,32804]" dest="let: let [32801,32804]"/>
  <match src="call_argument [61558,61569]" dest="call_argument [61565,61576]"/>
  <match src="number_literal: 9 [77714,77715]" dest="number_literal: 9 [77721,77722]"/>
  <match src="visibility [24385,24393]" dest="visibility [24385,24393]"/>
  <match src="expression_statement [75452,75475]" dest="expression_statement [75459,75482]"/>
  <match src="parameter [79678,79693]" dest="parameter [79685,79700]"/>
  <match src="identifier: commoners [72930,72939]" dest="identifier: commoners [72937,72946]"/>
  <match src="expression_statement [62114,62174]" dest="expression_statement [62121,62181]"/>
  <match src="=: = [70785,70786]" dest="=: = [70792,70793]"/>
  <match src="identifier: call [27215,27219]" dest="identifier: call [27215,27219]"/>
  <match src="if: if [79751,79753]" dest="if: if [79758,79760]"/>
  <match src="array_access [44588,44623]" dest="array_access [44588,44623]"/>
  <match src="function_body [7075,7341]" dest="function_body [7075,7341]"/>
  <match src="block_statement [32546,33013]" dest="block_statement [32546,33013]"/>
  <match src="function_definition [42659,42980]" dest="function_definition [42659,42980]"/>
  <match src="[: [ [81336,81337]" dest="[: [ [81343,81344]"/>
  <match src="member_expression [65818,65831]" dest="member_expression [65825,65838]"/>
  <match src="(: ( [50540,50541]" dest="(: ( [50540,50541]"/>
  <match src="primitive_type [13338,13345]" dest="primitive_type [13338,13345]"/>
  <match src="(: ( [66671,66672]" dest="(: ( [66678,66679]"/>
  <match src="!: ! [46300,46301]" dest="!: ! [46300,46301]"/>
  <match src="call_argument [66830,66846]" dest="call_argument [66837,66853]"/>
  <match src="function_body [45913,46443]" dest="function_body [45913,46443]"/>
  <match src="returns: returns [42199,42206]" dest="returns: returns [42199,42206]"/>
  <match src="expression_statement [80497,80516]" dest="expression_statement [80504,80523]"/>
  <match src=",: , [4976,4977]" dest=",: , [4976,4977]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [7273,7276]" dest="&gt;&gt;=: &gt;&gt;= [7273,7276]"/>
  <match src="(: ( [40574,40575]" dest="(: ( [40574,40575]"/>
  <match src="parameter [80833,80846]" dest="parameter [80840,80853]"/>
  <match src="]: ] [51008,51009]" dest="]: ] [51008,51009]"/>
  <match src="member_expression [51024,51037]" dest="member_expression [51024,51037]"/>
  <match src="identifier: isContract [31862,31872]" dest="identifier: isContract [31862,31872]"/>
  <match src="comment: //     Max mint per Tx = 6 [68750,68776]" dest="comment: //     Max mint per Tx = 6 [68757,68783]"/>
  <match src="array_access [46779,46857]" dest="array_access [46779,46857]"/>
  <match src="primitive_type [59863,59867]" dest="primitive_type [59870,59874]"/>
  <match src="block_statement [46359,46436]" dest="block_statement [46359,46436]"/>
  <match src="identifier: curr [41648,41652]" dest="identifier: curr [41648,41652]"/>
  <match src="function: function [67729,67737]" dest="function: function [67736,67744]"/>
  <match src="=: = [62774,62775]" dest="=: = [62781,62782]"/>
  <match src="identifier: _approve [52999,53007]" dest="identifier: _approve [52999,53007]"/>
  <match src="primitive_type [52532,52539]" dest="primitive_type [52532,52539]"/>
  <match src="type_name [5301,5306]" dest="type_name [5301,5306]"/>
  <match src="identifier: tokenId [22917,22924]" dest="identifier: tokenId [22917,22924]"/>
  <match src="[: [ [7746,7747]" dest="[: [ [7746,7747]"/>
  <match src="call_argument [46258,46265]" dest="call_argument [46258,46265]"/>
  <match src="else: else [8550,8554]" dest="else: else [8550,8554]"/>
  <match src="pragma: pragma [0,6]" dest="pragma: pragma [0,6]"/>
  <match src="=: = [52545,52546]" dest="=: = [52545,52546]"/>
  <match src="identifier: isAuth [65042,65048]" dest="identifier: isAuth [65049,65055]"/>
  <match src="identifier: v [14952,14953]" dest="identifier: v [14952,14953]"/>
  <match src="primitive_type [494,500]" dest="primitive_type [494,500]"/>
  <match src=".: . [48645,48646]" dest=".: . [48645,48646]"/>
  <match src="string_literal [43532,43558]" dest="string_literal [43532,43558]"/>
  <match src="return_type_definition [77996,78013]" dest="return_type_definition [78003,78020]"/>
  <match src="number_literal: 6 [62704,62705]" dest="number_literal: 6 [62711,62712]"/>
  <match src="): ) [1344,1345]" dest="): ) [1344,1345]"/>
  <match src="identifier: toString [16808,16816]" dest="identifier: toString [16808,16816]"/>
  <match src="call_argument [55926,55928]" dest="call_argument [55926,55928]"/>
  <match src="call_expression [28671,28723]" dest="call_expression [28671,28723]"/>
  <match src="comment: // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls. [51240,51344]" dest="comment: // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls. [51240,51344]"/>
  <match src="identifier: IERC721Receiver [55781,55796]" dest="identifier: IERC721Receiver [55781,55796]"/>
  <match src="parameter [700,722]" dest="parameter [700,722]"/>
  <match src="number_literal: 0 [15221,15222]" dest="number_literal: 0 [15221,15222]"/>
  <match src="identifier: IERC165 [34729,34736]" dest="identifier: IERC165 [34729,34736]"/>
  <match src="interface_declaration [2996,3082]" dest="interface_declaration [2996,3082]"/>
  <match src="if: if [44769,44771]" dest="if: if [44769,44771]"/>
  <match src="member_expression [78205,78214]" dest="member_expression [78212,78221]"/>
  <match src="pure: pure [8441,8445]" dest="pure: pure [8441,8445]"/>
  <match src="function: function [19065,19073]" dest="function: function [19065,19073]"/>
  <match src="memory: memory [7576,7582]" dest="memory: memory [7576,7582]"/>
  <match src=",: , [75027,75028]" dest=",: , [75034,75035]"/>
  <match src="uint8: uint8 [1029,1034]" dest="uint8: uint8 [1029,1034]"/>
  <match src="assignment_expression [81241,81274]" dest="assignment_expression [81248,81281]"/>
  <match src="external: external [64971,64979]" dest="external: external [64978,64986]"/>
  <match src="struct_member [5248,5264]" dest="struct_member [5248,5264]"/>
  <match src="function_definition [29106,29366]" dest="function_definition [29106,29366]"/>
  <match src="): ) [16825,16826]" dest="): ) [16825,16826]"/>
  <match src="string_literal [69429,69457]" dest="string_literal [69436,69464]"/>
  <match src="function_body [31387,31490]" dest="function_body [31387,31490]"/>
  <match src="returns: returns [55751,55758]" dest="returns: returns [55751,55758]"/>
  <match src="(: ( [46051,46052]" dest="(: ( [46051,46052]"/>
  <match src="expression_statement [51731,51752]" dest="expression_statement [51731,51752]"/>
  <match src="(: ( [12744,12745]" dest="(: ( [12744,12745]"/>
  <match src="identifier: require [79861,79868]" dest="identifier: require [79868,79875]"/>
  <match src="string [69200,69218]" dest="string [69207,69225]"/>
  <match src="&quot;: &quot; [30946,30947]" dest="&quot;: &quot; [30946,30947]"/>
  <match src="uint8: uint8 [80802,80807]" dest="uint8: uint8 [80809,80814]"/>
  <match src="identifier: timestamp [48646,48655]" dest="identifier: timestamp [48646,48655]"/>
  <match src="[: [ [62453,62454]" dest="[: [ [62460,62461]"/>
  <match src="bytes: bytes [30361,30366]" dest="bytes: bytes [30361,30366]"/>
  <match src="identifier: _addressData [50909,50921]" dest="identifier: _addressData [50909,50921]"/>
  <match src="(: ( [47783,47784]" dest="(: ( [47783,47784]"/>
  <match src="identifier: InvalidSignature [15273,15289]" dest="identifier: InvalidSignature [15273,15289]"/>
  <match src="type_name [700,706]" dest="type_name [700,706]"/>
  <match src="uint256: uint256 [1747,1754]" dest="uint256: uint256 [1747,1754]"/>
  <match src="number_literal: 1 [63138,63139]" dest="number_literal: 1 [63145,63146]"/>
  <match src="): ) [43292,43293]" dest="): ) [43292,43293]"/>
  <match src="(: ( [15255,15256]" dest="(: ( [15255,15256]"/>
  <match src="identifier: left_ [75018,75023]" dest="identifier: left_ [75025,75030]"/>
  <match src="comment: // Counter underflow is impossible as _burnCounter cannot be incremented [38421,38493]" dest="comment: // Counter underflow is impossible as _burnCounter cannot be incremented [38421,38493]"/>
  <match src="constant: constant [58262,58270]" dest="constant: constant [58262,58270]"/>
  <match src="}: } [42159,42160]" dest="}: } [42159,42160]"/>
  <match src="identifier: require [44706,44713]" dest="identifier: require [44706,44713]"/>
  <match src="identifier: approve [21317,21324]" dest="identifier: approve [21317,21324]"/>
  <match src="call_argument [77616,77629]" dest="call_argument [77623,77636]"/>
  <match src="(: ( [66945,66946]" dest="(: ( [66952,66953]"/>
  <match src="user_defined_type [35843,35850]" dest="user_defined_type [35843,35850]"/>
  <match src="identifier: from [45545,45549]" dest="identifier: from [45545,45549]"/>
  <match src="member_expression [80002,80027]" dest="member_expression [80009,80034]"/>
  <match src="{: { [3017,3018]" dest="{: { [3017,3018]"/>
  <match src="call_argument [65777,65798]" dest="call_argument [65784,65805]"/>
  <match src="identifier: owner [19355,19360]" dest="identifier: owner [19355,19360]"/>
  <match src="function: function [4592,4600]" dest="function: function [4592,4600]"/>
  <match src="returns: returns [12300,12307]" dest="returns: returns [12300,12307]"/>
  <match src="type_name [3969,3976]" dest="type_name [3969,3976]"/>
  <match src="address: address [3788,3795]" dest="address: address [3788,3795]"/>
  <match src=":: : [79373,79374]" dest=":: : [79380,79381]"/>
  <match src="assignment_expression [62588,62664]" dest="assignment_expression [62595,62671]"/>
  <match src="bool: bool [45924,45928]" dest="bool: bool [45924,45928]"/>
  <match src="struct_member [1189,1213]" dest="struct_member [1189,1213]"/>
  <match src="{: { [65741,65742]" dest="{: { [65748,65749]"/>
  <match src="primitive_type [43401,43408]" dest="primitive_type [43401,43408]"/>
  <match src="identifier: id_ [74595,74598]" dest="identifier: id_ [74602,74605]"/>
  <match src="type_name [40590,40596]" dest="type_name [40590,40596]"/>
  <match src=",: , [46961,46962]" dest=",: , [46961,46962]"/>
  <match src="primitive_type [468,474]" dest="primitive_type [468,474]"/>
  <match src=",: , [68442,68443]" dest=",: , [68449,68450]"/>
  <match src="(: ( [55862,55863]" dest="(: ( [55862,55863]"/>
  <match src="identifier: tokenId [40972,40979]" dest="identifier: tokenId [40972,40979]"/>
  <match src="identifier: svgArmor [508,516]" dest="identifier: svgArmor [508,516]"/>
  <match src="call_argument [12421,12426]" dest="call_argument [12421,12426]"/>
  <match src="tuple_expression [15321,15351]" dest="tuple_expression [15321,15351]"/>
  <match src="return_statement [7117,7131]" dest="return_statement [7117,7131]"/>
  <match src="address: address [37558,37565]" dest="address: address [37558,37565]"/>
  <match src="(: ( [11361,11362]" dest="(: ( [11361,11362]"/>
  <match src="primitive_type [17282,17289]" dest="primitive_type [17282,17289]"/>
  <match src="block_statement [14860,14938]" dest="block_statement [14860,14938]"/>
  <match src="=: = [66350,66351]" dest="=: = [66357,66358]"/>
  <match src="return: return [6472,6478]" dest="return: return [6472,6478]"/>
  <match src="variable_declaration_tuple [31936,31975]" dest="variable_declaration_tuple [31936,31975]"/>
  <match src="identifier: _ownerships [53598,53609]" dest="identifier: _ownerships [53598,53609]"/>
  <match src="identifier: tokenId [79595,79602]" dest="identifier: tokenId [79602,79609]"/>
  <match src="yul_evm_builtin [12940,12943]" dest="yul_evm_builtin [12940,12943]"/>
  <match src="variable_declaration [74944,74954]" dest="variable_declaration [74951,74961]"/>
  <match src="string: string [42369,42375]" dest="string: string [42369,42375]"/>
  <match src="identifier: end [48731,48734]" dest="identifier: end [48731,48734]"/>
  <match src="yul_path [10771,10780]" dest="yul_path [10771,10780]"/>
  <match src="string_literal [68948,68975]" dest="string_literal [68955,68982]"/>
  <match src="view: view [42076,42080]" dest="view: view [42076,42080]"/>
  <match src="): ) [25792,25793]" dest="): ) [25792,25793]"/>
  <match src="primitive_type [45793,45800]" dest="primitive_type [45793,45800]"/>
  <match src="+: + [68055,68056]" dest="+: + [68062,68063]"/>
  <match src="visibility [58154,58160]" dest="visibility [58154,58160]"/>
  <match src="external: external [3251,3259]" dest="external: external [3251,3259]"/>
  <match src="identifier: commoners [72875,72884]" dest="identifier: commoners [72882,72891]"/>
  <match src="identifier: seed [77563,77567]" dest="identifier: seed [77570,77574]"/>
  <match src="primitive_type [5752,5757]" dest="primitive_type [5752,5757]"/>
  <match src="identifier: t_ [64829,64831]" dest="identifier: t_ [64836,64838]"/>
  <match src="external: external [22962,22970]" dest="external: external [22962,22970]"/>
  <match src=",: , [68866,68867]" dest=",: , [68873,68874]"/>
  <match src="primitive_type [43457,43464]" dest="primitive_type [43457,43464]"/>
  <match src="=: = [72163,72164]" dest="=: = [72170,72171]"/>
  <match src="): ) [4942,4943]" dest="): ) [4942,4943]"/>
  <match src="variable_declaration_statement [70037,70058]" dest="variable_declaration_statement [70044,70065]"/>
  <match src="(: ( [55636,55637]" dest="(: ( [55636,55637]"/>
  <match src="identifier: symbol [42493,42499]" dest="identifier: symbol [42493,42499]"/>
  <match src="identifier: breed [1844,1849]" dest="identifier: breed [1844,1849]"/>
  <match src="number_literal: 1 [7717,7718]" dest="number_literal: 1 [7717,7718]"/>
  <match src="function: function [43228,43236]" dest="function: function [43228,43236]"/>
  <match src=",: , [69089,69090]" dest=",: , [69096,69097]"/>
  <match src="number_literal: 16 [77654,77656]" dest="number_literal: 16 [77661,77663]"/>
  <match src="identifier: head [80702,80706]" dest="identifier: head [80709,80713]"/>
  <match src="member_expression [74553,74566]" dest="member_expression [74560,74573]"/>
  <match src="}: } [30048,30049]" dest="}: } [30048,30049]"/>
  <match src=",: , [79511,79512]" dest=",: , [79518,79519]"/>
  <match src="number_literal: 5 [63008,63009]" dest="number_literal: 5 [63015,63016]"/>
  <match src="address: address [22865,22872]" dest="address: address [22865,22872]"/>
  <match src=",: , [5735,5736]" dest=",: , [5735,5736]"/>
  <match src="identifier: newName [888,895]" dest="identifier: newName [888,895]"/>
  <match src="member_expression [81019,81040]" dest="member_expression [81026,81047]"/>
  <match src="[: [ [53609,53610]" dest="[: [ [53609,53610]"/>
  <match src="(: ( [13041,13042]" dest="(: ( [13041,13042]"/>
  <match src="): ) [61079,61080]" dest="): ) [61086,61087]"/>
  <match src="identifier: commoners [71800,71809]" dest="identifier: commoners [71807,71816]"/>
  <match src="identifier: require [27249,27256]" dest="identifier: require [27249,27256]"/>
  <match src="primitive_type [342,348]" dest="primitive_type [342,348]"/>
  <match src="identifier: data [29301,29305]" dest="identifier: data [29301,29305]"/>
  <match src="identifier: data [30374,30378]" dest="identifier: data [30374,30378]"/>
  <match src="[: [ [62776,62777]" dest="[: [ [62783,62784]"/>
  <match src="identifier: _exists [42763,42770]" dest="identifier: _exists [42763,42770]"/>
  <match src="identifier: hash [16332,16336]" dest="identifier: hash [16332,16336]"/>
  <match src="string: string [37234,37240]" dest="string: string [37234,37240]"/>
  <match src="{: { [64842,64843]" dest="{: { [64849,64850]"/>
  <match src="identifier: to [22896,22898]" dest="identifier: to [22896,22898]"/>
  <match src="identifier: reason [56015,56021]" dest="identifier: reason [56015,56021]"/>
  <match src="number_literal: 0 [15003,15004]" dest="number_literal: 0 [15003,15004]"/>
  <match src="identifier: from [45122,45126]" dest="identifier: from [45122,45126]"/>
  <match src="call_argument [53029,53033]" dest="call_argument [53029,53033]"/>
  <match src="(: ( [77697,77698]" dest="(: ( [77704,77705]"/>
  <match src="parameter [3848,3858]" dest="parameter [3848,3858]"/>
  <match src=".: . [76892,76893]" dest=".: . [76899,76900]"/>
  <match src="identifier: quantity_ [67047,67056]" dest="identifier: quantity_ [67054,67063]"/>
  <match src="call_expression [43626,43638]" dest="call_expression [43626,43638]"/>
  <match src="state_variable_declaration [59863,59884]" dest="state_variable_declaration [59870,59891]"/>
  <match src="member_expression [39247,39287]" dest="member_expression [39247,39287]"/>
  <match src="bytes: bytes [47842,47847]" dest="bytes: bytes [47842,47847]"/>
  <match src="view: view [76869,76873]" dest="view: view [76876,76880]"/>
  <match src="identifier: error [8559,8564]" dest="identifier: error [8559,8564]"/>
  <match src="identifier: digits [6732,6738]" dest="identifier: digits [6732,6738]"/>
  <match src="type_name [3934,3941]" dest="type_name [3934,3941]"/>
  <match src="): ) [42553,42554]" dest="): ) [42553,42554]"/>
  <match src=",: , [74906,74907]" dest=",: , [74913,74914]"/>
  <match src="boolean_literal [61825,61829]" dest="boolean_literal [61832,61836]"/>
  <match src="state_variable_declaration [35976,35997]" dest="state_variable_declaration [35976,35997]"/>
  <match src="event: event [18666,18671]" dest="event: event [18666,18671]"/>
  <match src="}: } [4009,4010]" dest="}: } [4009,4010]"/>
  <match src="identifier: burned [36367,36373]" dest="identifier: burned [36367,36373]"/>
  <match src="primitive_type [5834,5839]" dest="primitive_type [5834,5839]"/>
  <match src="type_name [49859,49866]" dest="type_name [49859,49866]"/>
  <match src="{: { [74882,74883]" dest="{: { [74889,74890]"/>
  <match src="): ) [12860,12861]" dest="): ) [12860,12861]"/>
  <match src="struct_declaration [36448,36990]" dest="struct_declaration [36448,36990]"/>
  <match src="uint: uint [68184,68188]" dest="uint: uint [68191,68195]"/>
  <match src="{: { [12920,12921]" dest="{: { [12920,12921]"/>
  <match src="identifier: breed [78124,78129]" dest="identifier: breed [78131,78136]"/>
  <match src="parameter [65221,65237]" dest="parameter [65228,65244]"/>
  <match src="uint256: uint256 [76846,76853]" dest="uint256: uint256 [76853,76860]"/>
  <match src="uint8: uint8 [1257,1262]" dest="uint8: uint8 [1257,1262]"/>
  <match src="return_type_definition [12830,12861]" dest="return_type_definition [12830,12861]"/>
  <match src="address: address [15213,15220]" dest="address: address [15213,15220]"/>
  <match src="identifier: require [67892,67899]" dest="identifier: require [67899,67906]"/>
  <match src="address: address [15626,15633]" dest="address: address [15626,15633]"/>
  <match src="parameter [1369,1381]" dest="parameter [1369,1381]"/>
  <match src="bytes: bytes [45863,45868]" dest="bytes: bytes [45863,45868]"/>
  <match src="primitive_type [54002,54009]" dest="primitive_type [54002,54009]"/>
  <match src="expression_statement [77727,77739]" dest="expression_statement [77734,77746]"/>
  <match src="identifier: i [66346,66347]" dest="identifier: i [66353,66354]"/>
  <match src="call_argument [74916,74921]" dest="call_argument [74923,74928]"/>
  <match src="type_name [67423,67427]" dest="type_name [67430,67434]"/>
  <match src="call_argument [43928,43935]" dest="call_argument [43928,43935]"/>
  <match src="type_name [44564,44568]" dest="type_name [44564,44568]"/>
  <match src="call_expression [52498,52519]" dest="call_expression [52498,52519]"/>
  <match src="}: } [16838,16839]" dest="}: } [16838,16839]"/>
  <match src="): ) [49235,49236]" dest="): ) [49235,49236]"/>
  <match src="identifier: target [29155,29161]" dest="identifier: target [29155,29161]"/>
  <match src="type_name [3680,3687]" dest="type_name [3680,3687]"/>
  <match src="identifier: accessory [79364,79373]" dest="identifier: accessory [79371,79380]"/>
  <match src="identifier: from [54544,54548]" dest="identifier: from [54544,54548]"/>
  <match src="primitive_type [1484,1491]" dest="primitive_type [1484,1491]"/>
  <match src="binary_expression [61537,61556]" dest="binary_expression [61544,61563]"/>
  <match src="call_argument [16766,16798]" dest="call_argument [16766,16798]"/>
  <match src="identifier: topCommoner_ [72140,72152]" dest="identifier: topCommoner_ [72147,72159]"/>
  <match src="type_name [37183,37189]" dest="type_name [37183,37189]"/>
  <match src="primitive_type [20754,20761]" dest="primitive_type [20754,20761]"/>
  <match src="identifier: transfer [3423,3431]" dest="identifier: transfer [3423,3431]"/>
  <match src="returns: returns [24399,24406]" dest="returns: returns [24399,24406]"/>
  <match src="return: return [38588,38594]" dest="return: return [38588,38594]"/>
  <match src=",: , [78214,78215]" dest=",: , [78221,78222]"/>
  <match src="bytes: bytes [32458,32463]" dest="bytes: bytes [32458,32463]"/>
  <match src="number_literal: 3 [72304,72305]" dest="number_literal: 3 [72311,72312]"/>
  <match src="function_definition [40861,41973]" dest="function_definition [40861,41973]"/>
  <match src="&quot;: &quot; [61708,61709]" dest="&quot;: &quot; [61715,61716]"/>
  <match src="): ) [48137,48138]" dest="): ) [48137,48138]"/>
  <match src="visibility [63440,63448]" dest="visibility [63447,63455]"/>
  <match src="expression_statement [70009,70016]" dest="expression_statement [70016,70023]"/>
  <match src="identifier: msg [61011,61014]" dest="identifier: msg [61018,61021]"/>
  <match src="=: = [63135,63136]" dest="=: = [63142,63143]"/>
  <match src="try: try [55777,55780]" dest="try: try [55777,55780]"/>
  <match src="parenthesized_expression [45949,46077]" dest="parenthesized_expression [45949,46077]"/>
  <match src="=&gt;: =&gt; [59817,59819]" dest="=&gt;: =&gt; [59824,59826]"/>
  <match src="primitive_type [48633,48639]" dest="primitive_type [48633,48639]"/>
  <match src="call_argument [44355,44367]" dest="call_argument [44355,44367]"/>
  <match src="uint8: uint8 [80784,80789]" dest="uint8: uint8 [80791,80796]"/>
  <match src="uint8: uint8 [59909,59914]" dest="uint8: uint8 [59916,59921]"/>
  <match src="parameter [43413,43428]" dest="parameter [43413,43428]"/>
  <match src="member_expression [17319,17335]" dest="member_expression [17319,17335]"/>
  <match src="type_name [22909,22916]" dest="type_name [22909,22916]"/>
  <match src="bytes: bytes [42885,42890]" dest="bytes: bytes [42885,42890]"/>
  <match src="yul_path [56192,56198]" dest="yul_path [56192,56198]"/>
  <match src="(: ( [15247,15248]" dest="(: ( [15247,15248]"/>
  <match src="identifier: length [7245,7251]" dest="identifier: length [7245,7251]"/>
  <match src="view: view [78752,78756]" dest="view: view [78759,78763]"/>
  <match src="identifier: castle [64775,64781]" dest="identifier: castle [64782,64788]"/>
  <match src="assignment_expression [72130,72166]" dest="assignment_expression [72137,72173]"/>
  <match src="identifier: returndata_size [32805,32820]" dest="identifier: returndata_size [32805,32820]"/>
  <match src="type_name [3523,3530]" dest="type_name [3523,3530]"/>
  <match src="state_mutability [81501,81505]" dest="state_mutability [81508,81512]"/>
  <match src="expression_statement [44271,44325]" dest="expression_statement [44271,44325]"/>
  <match src="return: return [11291,11297]" dest="return: return [11291,11297]"/>
  <match src=",: , [45826,45827]" dest=",: , [45826,45827]"/>
  <match src="number_literal: 16 [77736,77738]" dest="number_literal: 16 [77743,77745]"/>
  <match src="external: external [5926,5934]" dest="external: external [5926,5934]"/>
  <match src="type_cast_expression [6869,6883]" dest="type_cast_expression [6869,6883]"/>
  <match src="identifier: require [68349,68356]" dest="identifier: require [68356,68363]"/>
  <match src="primitive_type [37808,37812]" dest="primitive_type [37808,37812]"/>
  <match src="add: add [10717,10720]" dest="add: add [10717,10720]"/>
  <match src="]: ] [72952,72953]" dest="]: ] [72959,72960]"/>
  <match src="&lt;: &lt; [74865,74866]" dest="&lt;: &lt; [74872,74873]"/>
  <match src="public: public [39511,39517]" dest="public: public [39511,39517]"/>
  <match src="member_expression [53668,53691]" dest="member_expression [53668,53691]"/>
  <match src="identifier: ERC721Like [3734,3744]" dest="identifier: ERC721Like [3734,3744]"/>
  <match src="identifier: updatedIndex [48681,48693]" dest="identifier: updatedIndex [48681,48693]"/>
  <match src=",: , [29677,29678]" dest=",: , [29677,29678]"/>
  <match src="identifier: tokenId [52403,52410]" dest="identifier: tokenId [52403,52410]"/>
  <match src="{: { [69133,69134]" dest="{: { [69140,69141]"/>
  <match src="[: [ [81294,81295]" dest="[: [ [81301,81302]"/>
  <match src="event_paramater [18681,18702]" dest="event_paramater [18681,18702]"/>
  <match src="): ) [11209,11210]" dest="): ) [11209,11210]"/>
  <match src="bytes: bytes [28172,28177]" dest="bytes: bytes [28172,28177]"/>
  <match src="string [46121,46158]" dest="string [46121,46158]"/>
  <match src="=: = [73186,73187]" dest="=: = [73193,73194]"/>
  <match src="(: ( [46792,46793]" dest="(: ( [46792,46793]"/>
  <match src="): ) [34689,34690]" dest="): ) [34689,34690]"/>
  <match src="): ) [61792,61793]" dest="): ) [61799,61800]"/>
  <match src="primitive_type [6775,6781]" dest="primitive_type [6775,6781]"/>
  <match src="identifier: _ownershipOf [40870,40882]" dest="identifier: _ownershipOf [40870,40882]"/>
  <match src="primitive_type [3273,3280]" dest="primitive_type [3273,3280]"/>
  <match src=",: , [29299,29300]" dest=",: , [29299,29300]"/>
  <match src="number_literal: 4 [74179,74180]" dest="number_literal: 4 [74186,74187]"/>
  <match src="!=: != [51690,51692]" dest="!=: != [51690,51692]"/>
  <match src="member_expression [44714,44724]" dest="member_expression [44714,44724]"/>
  <match src="identifier: s [15711,15712]" dest="identifier: s [15711,15712]"/>
  <match src="binary_expression [64290,64309]" dest="binary_expression [64297,64316]"/>
  <match src="call_argument [65760,65775]" dest="call_argument [65767,65782]"/>
  <match src="[: [ [62331,62332]" dest="[: [ [62338,62339]"/>
  <match src="number_literal: 153 [62790,62793]" dest="number_literal: 153 [62797,62800]"/>
  <match src="=: = [73790,73791]" dest="=: = [73797,73798]"/>
  <match src="type_name [4096,4102]" dest="type_name [4096,4102]"/>
  <match src="return_type_definition [4620,4640]" dest="return_type_definition [4620,4640]"/>
  <match src="&quot;: &quot; [67097,67098]" dest="&quot;: &quot; [67104,67105]"/>
  <match src="&quot;: &quot; [44746,44747]" dest="&quot;: &quot; [44746,44747]"/>
  <match src="visibility [64496,64504]" dest="visibility [64503,64511]"/>
  <match src="type_name [24408,24414]" dest="type_name [24408,24414]"/>
  <match src="comment: //     uint8 head; Excited [71396,71422]" dest="comment: //     uint8 head; Excited [71403,71429]"/>
  <match src="call_expression [45196,45216]" dest="call_expression [45196,45216]"/>
  <match src="): ) [68333,68334]" dest="): ) [68340,68341]"/>
  <match src="&quot;: &quot; [63718,63719]" dest="&quot;: &quot; [63725,63726]"/>
  <match src="number_literal: 8 [76503,76504]" dest="number_literal: 8 [76510,76511]"/>
  <match src="number_literal: 204 [63195,63198]" dest="number_literal: 204 [63202,63205]"/>
  <match src="binary_expression [77451,77464]" dest="binary_expression [77458,77471]"/>
  <match src="primitive_type [3523,3530]" dest="primitive_type [3523,3530]"/>
  <match src="=: = [43471,43472]" dest="=: = [43471,43472]"/>
  <match src="identifier: owner_ [80551,80557]" dest="identifier: owner_ [80558,80564]"/>
  <match src="): ) [13049,13050]" dest="): ) [13049,13050]"/>
  <match src="assembly: assembly [10678,10686]" dest="assembly: assembly [10678,10686]"/>
  <match src="identifier: tokenPartner [69342,69354]" dest="identifier: tokenPartner [69349,69361]"/>
  <match src="): ) [317,318]" dest="): ) [317,318]"/>
  <match src="): ) [41237,41238]" dest="): ) [41237,41238]"/>
  <match src="call_argument [80028,80047]" dest="call_argument [80035,80054]"/>
  <match src="contract_body [23231,23905]" dest="contract_body [23231,23905]"/>
  <match src="binary_expression [80876,80903]" dest="binary_expression [80883,80910]"/>
  <match src="call_argument [44746,44757]" dest="call_argument [44746,44757]"/>
  <match src="bytes32: bytes32 [12248,12255]" dest="bytes32: bytes32 [12248,12255]"/>
  <match src="&quot;: &quot; [68106,68107]" dest="&quot;: &quot; [68113,68114]"/>
  <match src="number_literal: 3 [77216,77217]" dest="number_literal: 3 [77223,77224]"/>
  <match src="binary_expression [7090,7100]" dest="binary_expression [7090,7100]"/>
  <match src="binary_expression [43512,43523]" dest="binary_expression [43512,43523]"/>
  <match src="identifier: isApprovedOrOwner [46095,46112]" dest="identifier: isApprovedOrOwner [46095,46112]"/>
  <match src="]: ] [69281,69282]" dest="]: ] [69288,69289]"/>
  <match src="identifier: tokenId [79981,79988]" dest="identifier: tokenId [79988,79995]"/>
  <match src="parameter [21978,21992]" dest="parameter [21978,21992]"/>
  <match src="number_literal: 204 [63069,63072]" dest="number_literal: 204 [63076,63079]"/>
  <match src="primitive_type [13420,13427]" dest="primitive_type [13420,13427]"/>
  <match src="member_expression [74199,74230]" dest="member_expression [74206,74237]"/>
  <match src="else: else [56121,56125]" dest="else: else [56121,56125]"/>
  <match src="(: ( [56183,56184]" dest="(: ( [56183,56184]"/>
  <match src="interface_declaration [23205,23905]" dest="interface_declaration [23205,23905]"/>
  <match src="comment: //     Cost 0.035 ETH [66545,66566]" dest="comment: //     Cost 0.035 ETH [66552,66573]"/>
  <match src="(: ( [29916,29917]" dest="(: ( [29916,29917]"/>
  <match src="type_name [57773,57780]" dest="type_name [57773,57780]"/>
  <match src="user_defined_type [58643,58652]" dest="user_defined_type [58650,58659]"/>
  <match src="call_argument [64524,64543]" dest="call_argument [64531,64550]"/>
  <match src="address: address [18511,18518]" dest="address: address [18511,18518]"/>
  <match src="function_body [44190,44396]" dest="function_body [44190,44396]"/>
  <match src="(: ( [66865,66866]" dest="(: ( [66872,66873]"/>
  <match src="): ) [46295,46296]" dest="): ) [46295,46296]"/>
  <match src="identifier: AddressData [53330,53341]" dest="identifier: AddressData [53330,53341]"/>
  <match src="==: == [68309,68311]" dest="==: == [68316,68318]"/>
  <match src="}: } [60519,60520]" dest="}: } [60526,60527]"/>
  <match src="function: function [19290,19298]" dest="function: function [19290,19298]"/>
  <match src="call_argument [48099,48109]" dest="call_argument [48099,48109]"/>
  <match src="uint8: uint8 [5752,5757]" dest="uint8: uint8 [5752,5757]"/>
  <match src="]: ] [69494,69495]" dest="]: ] [69501,69502]"/>
  <match src="): ) [6813,6814]" dest="): ) [6813,6814]"/>
  <match src="contract_body [8218,17388]" dest="contract_body [8218,17388]"/>
  <match src="&quot;: &quot; [63489,63490]" dest="&quot;: &quot; [63496,63497]"/>
  <match src="function_body [28186,28272]" dest="function_body [28186,28272]"/>
  <match src="number_literal: 96 [62608,62610]" dest="number_literal: 96 [62615,62617]"/>
  <match src="call_argument [43619,43624]" dest="call_argument [43619,43624]"/>
  <match src="||: || [80896,80898]" dest="||: || [80903,80905]"/>
  <match src="memory: memory [7551,7557]" dest="memory: memory [7551,7557]"/>
  <match src="primitive_type [572,578]" dest="primitive_type [572,578]"/>
  <match src="library_declaration [5980,7923]" dest="library_declaration [5980,7923]"/>
  <match src=",: , [64637,64638]" dest=",: , [64644,64645]"/>
  <match src="for_statement [69991,74314]" dest="for_statement [69998,74321]"/>
  <match src="bool: bool [29983,29987]" dest="bool: bool [29983,29987]"/>
  <match src="bytes4: bytes4 [55863,55869]" dest="bytes4: bytes4 [55863,55869]"/>
  <match src="comment: // The address of the owner. [36129,36157]" dest="comment: // The address of the owner. [36129,36157]"/>
  <match src=",: , [12846,12847]" dest=",: , [12846,12847]"/>
  <match src="identifier: hash [13768,13772]" dest="identifier: hash [13768,13772]"/>
  <match src="interface_declaration [3086,3187]" dest="interface_declaration [3086,3187]"/>
  <match src="]: ] [62449,62450]" dest="]: ] [62456,62457]"/>
  <match src="parameter [4935,4942]" dest="parameter [4935,4942]"/>
  <match src="): ) [2376,2377]" dest="): ) [2376,2377]"/>
  <match src="): ) [10844,10845]" dest="): ) [10844,10845]"/>
  <match src="identifier: safeTransferFrom [45510,45526]" dest="identifier: safeTransferFrom [45510,45526]"/>
  <match src="identifier: RecoverError [12349,12361]" dest="identifier: RecoverError [12349,12361]"/>
  <match src="identifier: addressData [53350,53361]" dest="identifier: addressData [53350,53361]"/>
  <match src="&quot;: &quot; [56061,56062]" dest="&quot;: &quot; [56061,56062]"/>
  <match src="address: address [33674,33681]" dest="address: address [33674,33681]"/>
  <match src="public: public [58893,58899]" dest="public: public [58900,58906]"/>
  <match src="(: ( [4792,4793]" dest="(: ( [4792,4793]"/>
  <match src="return_type_definition [40914,40945]" dest="return_type_definition [40914,40945]"/>
  <match src="): ) [77383,77384]" dest="): ) [77390,77391]"/>
  <match src="identifier: errorMessage [32415,32427]" dest="identifier: errorMessage [32415,32427]"/>
  <match src="call_argument [66083,66093]" dest="call_argument [66090,66100]"/>
  <match src="function: function [76327,76335]" dest="function: function [76334,76342]"/>
  <match src="bool: bool [58812,58816]" dest="bool: bool [58819,58823]"/>
  <match src="call_argument [13106,13107]" dest="call_argument [13106,13107]"/>
  <match src="identifier: require [68987,68994]" dest="identifier: require [68994,69001]"/>
  <match src="): ) [39583,39584]" dest="): ) [39583,39584]"/>
  <match src="type_cast_expression [69527,69540]" dest="type_cast_expression [69534,69547]"/>
  <match src="(: ( [67481,67482]" dest="(: ( [67488,67489]"/>
  <match src=".: . [69633,69634]" dest=".: . [69640,69641]"/>
  <match src=".: . [41173,41174]" dest=".: . [41173,41174]"/>
  <match src="expression_statement [80868,80935]" dest="expression_statement [80875,80942]"/>
  <match src="call_expression [66002,66045]" dest="call_expression [66009,66052]"/>
  <match src="expression_statement [68923,68977]" dest="expression_statement [68930,68984]"/>
  <match src="identifier: seed [77200,77204]" dest="identifier: seed [77207,77211]"/>
  <match src=",: , [62461,62462]" dest=",: , [62468,62469]"/>
  <match src="): ) [55876,55877]" dest="): ) [55876,55877]"/>
  <match src="&quot;: &quot; [27236,27237]" dest="&quot;: &quot; [27236,27237]"/>
  <match src="identifier: aliases [59664,59671]" dest="identifier: aliases [59671,59678]"/>
  <match src="identifier: quantity_ [66815,66824]" dest="identifier: quantity_ [66822,66831]"/>
  <match src=",: , [4531,4532]" dest=",: , [4531,4532]"/>
  <match src=",: , [3322,3323]" dest=",: , [3322,3323]"/>
  <match src="function: function [3955,3963]" dest="function: function [3955,3963]"/>
  <match src="struct_member [36362,36374]" dest="struct_member [36362,36374]"/>
  <match src="identifier: IERC721Metadata [39324,39339]" dest="identifier: IERC721Metadata [39324,39339]"/>
  <match src="): ) [43752,43753]" dest="): ) [43752,43753]"/>
  <match src="primitive_type [45924,45928]" dest="primitive_type [45924,45928]"/>
  <match src="primitive_type [31373,31378]" dest="primitive_type [31373,31378]"/>
  <match src="parameter [440,466]" dest="parameter [440,466]"/>
  <match src="call_expression [61581,61633]" dest="call_expression [61588,61640]"/>
  <match src="primitive_type [5724,5729]" dest="primitive_type [5724,5729]"/>
  <match src="type_name [2372,2376]" dest="type_name [2372,2376]"/>
  <match src="string_literal [29937,29968]" dest="string_literal [29937,29968]"/>
  <match src="visibility [6011,6018]" dest="visibility [6011,6018]"/>
  <match src="identifier: tokenId [116,123]" dest="identifier: tokenId [116,123]"/>
  <match src="identifier: trait [76425,76430]" dest="identifier: trait [76432,76437]"/>
  <match src="identifier: from [22873,22877]" dest="identifier: from [22873,22877]"/>
  <match src="type_name [67756,67761]" dest="type_name [67763,67768]"/>
  <match src="public: public [59445,59451]" dest="public: public [59452,59458]"/>
  <match src="identifier: id_ [74567,74570]" dest="identifier: id_ [74574,74577]"/>
  <match src="function: function [3583,3591]" dest="function: function [3583,3591]"/>
  <match src="uint256: uint256 [35925,35932]" dest="uint256: uint256 [35925,35932]"/>
  <match src="parameter [3860,3870]" dest="parameter [3860,3870]"/>
  <match src="emit: emit [48851,48855]" dest="emit: emit [48851,48855]"/>
  <match src="): ) [69183,69184]" dest="): ) [69190,69191]"/>
  <match src="(: ( [7489,7490]" dest="(: ( [7489,7490]"/>
  <match src="type_cast_expression [46180,46190]" dest="type_cast_expression [46180,46190]"/>
  <match src="identifier: vs [13481,13483]" dest="identifier: vs [13481,13483]"/>
  <match src="parameter [1960,1983]" dest="parameter [1960,1983]"/>
  <match src="call_argument [28701,28705]" dest="call_argument [28701,28705]"/>
  <match src="primitive_type [2046,2053]" dest="primitive_type [2046,2053]"/>
  <match src="binary_expression [41741,41769]" dest="binary_expression [41741,41769]"/>
  <match src="function_definition [17189,17385]" dest="function_definition [17189,17385]"/>
  <match src="}: } [31102,31103]" dest="}: } [31102,31103]"/>
  <match src="binary_expression [65137,65156]" dest="binary_expression [65144,65163]"/>
  <match src="string [69091,69101]" dest="string [69098,69108]"/>
  <match src="primitive_type [60997,61004]" dest="primitive_type [61004,61011]"/>
  <match src="call_expression [52999,53034]" dest="call_expression [52999,53034]"/>
  <match src="visibility [24564,24572]" dest="visibility [24564,24572]"/>
  <match src="bytes: bytes [23849,23854]" dest="bytes: bytes [23849,23854]"/>
  <match src="uint256: uint256 [47815,47822]" dest="uint256: uint256 [47815,47822]"/>
  <match src="return_type_definition [15617,15634]" dest="return_type_definition [15617,15634]"/>
  <match src="{: { [32778,32779]" dest="{: { [32778,32779]"/>
  <match src="type_name [45022,45029]" dest="type_name [45022,45029]"/>
  <match src="identifier: tokenURI [80082,80090]" dest="identifier: tokenURI [80089,80097]"/>
  <match src="type_name [45837,45844]" dest="type_name [45837,45844]"/>
  <match src="identifier: rand [4707,4711]" dest="identifier: rand [4707,4711]"/>
  <match src="assignment_expression [81327,81358]" dest="assignment_expression [81334,81365]"/>
  <match src="primitive_type [20159,20166]" dest="primitive_type [20159,20166]"/>
  <match src="): ) [61509,61510]" dest="): ) [61516,61517]"/>
  <match src="view: view [42338,42342]" dest="view: view [42338,42342]"/>
  <match src="[: [ [80574,80575]" dest="[: [ [80581,80582]"/>
  <match src="array_access [80571,80581]" dest="array_access [80578,80588]"/>
  <match src="comment: // background [62914,62927]" dest="comment: // background [62921,62934]"/>
  <match src="array_access [66273,66282]" dest="array_access [66280,66289]"/>
  <match src="identifier: addr [53642,53646]" dest="identifier: addr [53642,53646]"/>
  <match src="call_argument [15711,15712]" dest="call_argument [15711,15712]"/>
  <match src="uint256: uint256 [3904,3911]" dest="uint256: uint256 [3904,3911]"/>
  <match src="(: ( [45949,45950]" dest="(: ( [45949,45950]"/>
  <match src="): ) [40319,40320]" dest="): ) [40319,40320]"/>
  <match src="=: = [77261,77262]" dest="=: = [77268,77269]"/>
  <match src="): ) [30378,30379]" dest="): ) [30378,30379]"/>
  <match src=",: , [13347,13348]" dest=",: , [13347,13348]"/>
  <match src=",: , [62702,62703]" dest=",: , [62709,62710]"/>
  <match src="bytes: bytes [22935,22940]" dest="bytes: bytes [22935,22940]"/>
  <match src="do_while_statement [49309,49429]" dest="do_while_statement [49309,49429]"/>
  <match src="): ) [32071,32072]" dest="): ) [32071,32072]"/>
  <match src="parameter [45022,45037]" dest="parameter [45022,45037]"/>
  <match src="}: } [36989,36990]" dest="}: } [36989,36990]"/>
  <match src="function: function [68826,68834]" dest="function: function [68833,68841]"/>
  <match src="while: while [6698,6703]" dest="while: while [6698,6703]"/>
  <match src=".: . [61162,61163]" dest=".: . [61169,61170]"/>
  <match src="): ) [21352,21353]" dest="): ) [21352,21353]"/>
  <match src="type_name [58867,58892]" dest="type_name [58874,58899]"/>
  <match src="parameter [19084,19097]" dest="parameter [19084,19097]"/>
  <match src="array_access [50989,51009]" dest="array_access [50989,51009]"/>
  <match src="(: ( [5603,5604]" dest="(: ( [5603,5604]"/>
  <match src="&quot;: &quot; [27325,27326]" dest="&quot;: &quot; [27325,27326]"/>
  <match src="identifier: addressData [53436,53447]" dest="identifier: addressData [53436,53447]"/>
  <match src="(: ( [54151,54152]" dest="(: ( [54151,54152]"/>
  <match src="{: { [63449,63450]" dest="{: { [63456,63457]"/>
  <match src="binary_expression [63687,63706]" dest="binary_expression [63694,63713]"/>
  <match src="primitive_type [65091,65098]" dest="primitive_type [65098,65105]"/>
  <match src="&quot;: &quot; [56102,56103]" dest="&quot;: &quot; [56102,56103]"/>
  <match src="user_defined_type [39192,39199]" dest="user_defined_type [39192,39199]"/>
  <match src="binary_expression [65380,65403]" dest="binary_expression [65387,65410]"/>
  <match src="call_argument [67495,67499]" dest="call_argument [67502,67506]"/>
  <match src="array_access [50909,50925]" dest="array_access [50909,50925]"/>
  <match src="identifier: quantity_ [69174,69183]" dest="identifier: quantity_ [69181,69190]"/>
  <match src="state_mutability [66722,66729]" dest="state_mutability [66729,66736]"/>
  <match src="visibility [42694,42700]" dest="visibility [42694,42700]"/>
  <match src="type_name [45560,45567]" dest="type_name [45560,45567]"/>
  <match src="view: view [30389,30393]" dest="view: view [30389,30393]"/>
  <match src="expression_statement [72930,72967]" dest="expression_statement [72937,72974]"/>
  <match src="call_expression [69044,69102]" dest="call_expression [69051,69109]"/>
  <match src="(: ( [71305,71306]" dest="(: ( [71312,71313]"/>
  <match src="solidity_version:  0.8.7 [15,21]" dest="solidity_version:  0.8.7 [15,21]"/>
  <match src="identifier: add [65035,65038]" dest="identifier: add [65042,65045]"/>
  <match src="&quot;: &quot; [46121,46122]" dest="&quot;: &quot; [46121,46122]"/>
  <match src="comment: // OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol) [24609,24676]" dest="comment: // OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol) [24609,24676]"/>
  <match src="return_type_definition [42360,42383]" dest="return_type_definition [42360,42383]"/>
  <match src=",: , [29161,29162]" dest=",: , [29161,29162]"/>
  <match src="(: ( [15698,15699]" dest="(: ( [15698,15699]"/>
  <match src="identifier: tokenNo_ [68420,68428]" dest="identifier: tokenNo_ [68427,68435]"/>
  <match src="parameter [1814,1824]" dest="parameter [1814,1824]"/>
  <match src="user_defined_type [10211,10223]" dest="user_defined_type [10211,10223]"/>
  <match src="number_literal: 4 [62689,62690]" dest="number_literal: 4 [62696,62697]"/>
  <match src="uint64: uint64 [40590,40596]" dest="uint64: uint64 [40590,40596]"/>
  <match src="return_type_definition [2470,2487]" dest="return_type_definition [2470,2487]"/>
  <match src="block_statement [54156,54507]" dest="block_statement [54156,54507]"/>
  <match src="): ) [67191,67192]" dest="): ) [67198,67199]"/>
  <match src="public: public [61511,61517]" dest="public: public [61518,61524]"/>
  <match src="visibility [3175,3183]" dest="visibility [3175,3183]"/>
  <match src="=: = [64578,64579]" dest="=: = [64585,64586]"/>
  <match src="call_expression [42921,42966]" dest="call_expression [42921,42966]"/>
  <match src="primitive_type [54550,54557]" dest="primitive_type [54550,54557]"/>
  <match src="user_defined_type [58675,58684]" dest="user_defined_type [58682,58691]"/>
  <match src=",: , [40588,40589]" dest=",: , [40588,40589]"/>
  <match src="expression_statement [62440,62472]" dest="expression_statement [62447,62479]"/>
  <match src="parameter [283,300]" dest="parameter [283,300]"/>
  <match src="identifier: getRange [4959,4967]" dest="identifier: getRange [4959,4967]"/>
  <match src="identifier: mainhand [1911,1919]" dest="identifier: mainhand [1911,1919]"/>
  <match src="boolean_literal [68312,68316]" dest="boolean_literal [68319,68323]"/>
  <match src="call_argument [17336,17346]" dest="call_argument [17336,17346]"/>
  <match src="identifier: success [27257,27264]" dest="identifier: success [27257,27264]"/>
  <match src="function_body [12862,13116]" dest="function_body [12862,13116]"/>
  <match src="identifier: id [1492,1494]" dest="identifier: id [1492,1494]"/>
  <match src="identifier: _addressData [53364,53376]" dest="identifier: _addressData [53364,53376]"/>
  <match src="member_expression [69260,69293]" dest="member_expression [69267,69300]"/>
  <match src="array_access [81241,81254]" dest="array_access [81248,81261]"/>
  <match src="type_name [37808,37812]" dest="type_name [37808,37812]"/>
  <match src="expression_statement [67892,67939]" dest="expression_statement [67899,67946]"/>
  <match src="=: = [61009,61010]" dest="=: = [61016,61017]"/>
  <match src="assignment_expression [61644,61662]" dest="assignment_expression [61651,61669]"/>
  <match src="member_expression [51731,51744]" dest="member_expression [51731,51744]"/>
  <match src="type_name [1223,1229]" dest="type_name [1223,1229]"/>
  <match src="primitive_type [78032,78039]" dest="primitive_type [78039,78046]"/>
  <match src="number_literal: 3 [63267,63268]" dest="number_literal: 3 [63274,63275]"/>
  <match src="binary_expression [45196,45232]" dest="binary_expression [45196,45232]"/>
  <match src="external: external [3460,3468]" dest="external: external [3460,3468]"/>
  <match src="=: = [72853,72854]" dest="=: = [72860,72861]"/>
  <match src="[: [ [71861,71862]" dest="[: [ [71868,71869]"/>
  <match src="): ) [39677,39678]" dest="): ) [39677,39678]"/>
  <match src="identifier: tokenId [79385,79392]" dest="identifier: tokenId [79392,79399]"/>
  <match src="comment: // [14359,14361]" dest="comment: // [14359,14361]"/>
  <match src="identifier: totalClaimed [68092,68104]" dest="identifier: totalClaimed [68099,68111]"/>
  <match src="]: ] [72897,72898]" dest="]: ] [72904,72905]"/>
  <match src="expression_statement [65752,65800]" dest="expression_statement [65759,65807]"/>
  <match src="comment: // list of probabilities for each trait type [59258,59302]" dest="comment: // list of probabilities for each trait type [59265,59309]"/>
  <match src="identifier: aliases [62675,62682]" dest="identifier: aliases [62682,62689]"/>
  <match src="): ) [38408,38409]" dest="): ) [38408,38409]"/>
  <match src="while_statement [6698,6852]" dest="while_statement [6698,6852]"/>
  <match src="call_argument [77298,77299]" dest="call_argument [77305,77306]"/>
  <match src="primitive_type [1826,1831]" dest="primitive_type [1826,1831]"/>
  <match src="call_argument [54544,54548]" dest="call_argument [54544,54548]"/>
  <match src="]: ] [76582,76583]" dest="]: ] [76589,76590]"/>
  <match src="override: override [43877,43885]" dest="override: override [43877,43885]"/>
  <match src="(: ( [51089,51090]" dest="(: ( [51089,51090]"/>
  <match src="identifier: _ownerships [41693,41704]" dest="identifier: _ownerships [41693,41704]"/>
  <match src="visibility [65252,65260]" dest="visibility [65259,65267]"/>
  <match src="member_expression [78323,78332]" dest="member_expression [78330,78339]"/>
  <match src="identifier: to [51040,51042]" dest="identifier: to [51040,51042]"/>
  <match src="primitive_type [48507,48513]" dest="primitive_type [48507,48513]"/>
  <match src="number_literal: 255 [62288,62291]" dest="number_literal: 255 [62295,62298]"/>
  <match src=".: . [41218,41219]" dest=".: . [41218,41219]"/>
  <match src="member_expression [71800,71829]" dest="member_expression [71807,71836]"/>
  <match src="identifier: smithing [80808,80816]" dest="identifier: smithing [80815,80823]"/>
  <match src="expression_statement [29909,29970]" dest="expression_statement [29909,29970]"/>
  <match src="}: } [69230,69231]" dest="}: } [69237,69238]"/>
  <match src="identifier: value [7319,7324]" dest="identifier: value [7319,7324]"/>
  <match src="type_cast_expression [77527,77548]" dest="type_cast_expression [77534,77555]"/>
  <match src="type: type [39319,39323]" dest="type: type [39319,39323]"/>
  <match src="else: else [68247,68251]" dest="else: else [68254,68258]"/>
  <match src="function: function [3024,3032]" dest="function: function [3024,3032]"/>
  <match src="call_argument [7326,7332]" dest="call_argument [7326,7332]"/>
  <match src="function_definition [12231,12462]" dest="function_definition [12231,12462]"/>
  <match src=",: , [62339,62340]" dest=",: , [62346,62347]"/>
  <match src="identifier: ERC1155Like [3564,3575]" dest="identifier: ERC1155Like [3564,3575]"/>
  <match src="(: ( [61145,61146]" dest="(: ( [61152,61153]"/>
  <match src="identifier: prevOwnership [52547,52560]" dest="identifier: prevOwnership [52547,52560]"/>
  <match src="=: = [71057,71058]" dest="=: = [71064,71065]"/>
  <match src="comment: /*///////////////////////////////////////////////////////////////                 DATA STRUCTURE     //////////////////////////////////////////////////////////////*/ [60149,60316]" dest="comment: /*///////////////////////////////////////////////////////////////                 DATA STRUCTURE     //////////////////////////////////////////////////////////////*/ [60156,60323]"/>
  <match src="identifier: palette [81043,81050]" dest="identifier: palette [81050,81057]"/>
  <match src="yul_variable_declaration [32801,32841]" dest="yul_variable_declaration [32801,32841]"/>
  <match src="type_name [13870,13882]" dest="type_name [13870,13882]"/>
  <match src="comment: /**      * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the      * revert reason using the provided one.      *      * _Available since v4.3._      */ [32088,32302]" dest="comment: /**      * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the      * revert reason using the provided one.      *      * _Available since v4.3._      */ [32088,32302]"/>
  <match src="identifier: _airdropTopTalents [69858,69876]" dest="identifier: _airdropTopTalents [69865,69883]"/>
  <match src="array_access [68275,68297]" dest="array_access [68282,68304]"/>
  <match src="function_body [39838,39905]" dest="function_body [39838,39905]"/>
  <match src="call_expression [64282,64310]" dest="call_expression [64289,64317]"/>
  <match src=",: , [54548,54549]" dest=",: , [54548,54549]"/>
  <match src="identifier: to [47384,47386]" dest="identifier: to [47384,47386]"/>
  <match src="identifier: s [78263,78264]" dest="identifier: s [78270,78271]"/>
  <match src="identifier: id [80991,80993]" dest="identifier: id [80998,81000]"/>
  <match src="view: view [558,562]" dest="view: view [558,562]"/>
  <match src="type_name [18681,18688]" dest="type_name [18681,18688]"/>
  <match src="identifier: addr [41751,41755]" dest="identifier: addr [41751,41755]"/>
  <match src="address: address [57796,57803]" dest="address: address [57796,57803]"/>
  <match src="memory: memory [1671,1677]" dest="memory: memory [1671,1677]"/>
  <match src="false [74916,74921]" dest="false [74923,74928]"/>
  <match src="(: ( [52581,52582]" dest="(: ( [52581,52582]"/>
  <match src="type_name [31937,31941]" dest="type_name [31937,31941]"/>
  <match src="primitive_type [23849,23854]" dest="primitive_type [23849,23854]"/>
  <match src="primitive_type [6186,6193]" dest="primitive_type [6186,6193]"/>
  <match src="parameter [46899,46909]" dest="parameter [46899,46909]"/>
  <match src="parameter [4515,4531]" dest="parameter [4515,4531]"/>
  <match src="&quot;: &quot; [43699,43700]" dest="&quot;: &quot; [43699,43700]"/>
  <match src="(: ( [53007,53008]" dest="(: ( [53007,53008]"/>
  <match src="type_cast_expression [53008,53018]" dest="type_cast_expression [53008,53018]"/>
  <match src="identifier: topCommoner_ [74209,74221]" dest="identifier: topCommoner_ [74216,74228]"/>
  <match src=",: , [61609,61610]" dest=",: , [61616,61617]"/>
  <match src="parameter [43401,43411]" dest="parameter [43401,43411]"/>
  <match src="identifier: clothes [78207,78214]" dest="identifier: clothes [78214,78221]"/>
  <match src="member_expression [15330,15350]" dest="member_expression [15330,15350]"/>
  <match src="{: { [65261,65262]" dest="{: { [65268,65269]"/>
  <match src="type_name [52077,52084]" dest="type_name [52077,52084]"/>
  <match src="expression_statement [73154,73190]" dest="expression_statement [73161,73197]"/>
  <match src="expression_statement [64991,65020]" dest="expression_statement [64998,65027]"/>
  <match src="bytes4: bytes4 [18154,18160]" dest="bytes4: bytes4 [18154,18160]"/>
  <match src=",: , [63529,63530]" dest=",: , [63536,63537]"/>
  <match src="internal: internal [77982,77990]" dest="internal: internal [77989,77997]"/>
  <match src="call_expression [45220,45232]" dest="call_expression [45220,45232]"/>
  <match src="identifier: token [68511,68516]" dest="identifier: token [68518,68523]"/>
  <match src="type_name [39267,39274]" dest="type_name [39267,39274]"/>
  <match src=":: : [27225,27226]" dest=":: : [27225,27226]"/>
  <match src="function: function [40861,40869]" dest="function: function [40861,40869]"/>
  <match src="call_expression [46040,46060]" dest="call_expression [46040,46060]"/>
  <match src="primitive_type [18681,18688]" dest="primitive_type [18681,18688]"/>
  <match src="identifier: InvalidSignatureS [14908,14925]" dest="identifier: InvalidSignatureS [14908,14925]"/>
  <match src="identifier: updatedIndex [49408,49420]" dest="identifier: updatedIndex [49408,49420]"/>
  <match src="uint256: uint256 [38187,38194]" dest="uint256: uint256 [38187,38194]"/>
  <match src="member_expression [73812,73843]" dest="member_expression [73819,73850]"/>
  <match src=",: , [13437,13438]" dest=",: , [13437,13438]"/>
  <match src="type_name [15548,15553]" dest="type_name [15548,15553]"/>
  <match src="number_literal: 7 [63063,63064]" dest="number_literal: 7 [63070,63071]"/>
  <match src="call_expression [43920,43936]" dest="call_expression [43920,43936]"/>
  <match src="||: || [52659,52661]" dest="||: || [52659,52661]"/>
  <match src="internal: internal [46929,46937]" dest="internal: internal [46929,46937]"/>
  <match src="identifier: number [74644,74650]" dest="identifier: number [74651,74657]"/>
  <match src="return: return [42119,42125]" dest="return: return [42119,42125]"/>
  <match src="comment: /**      * @dev Overload of {ECDSA-recover} that receives the `v`,      * `r` and `s` signature fields separately.      */ [15367,15492]" dest="comment: /**      * @dev Overload of {ECDSA-recover} that receives the `v`,      * `r` and `s` signature fields separately.      */ [15367,15492]"/>
  <match src=",: , [45412,45413]" dest=",: , [45412,45413]"/>
  <match src="return_type_definition [55751,55765]" dest="return_type_definition [55751,55765]"/>
  <match src="uint256: uint256 [57000,57007]" dest="uint256: uint256 [57000,57007]"/>
  <match src="identifier: id_ [74631,74634]" dest="identifier: id_ [74638,74641]"/>
  <match src="function_definition [1455,1539]" dest="function_definition [1455,1539]"/>
  <match src="type_name [18704,18711]" dest="type_name [18704,18711]"/>
  <match src="call_argument [66147,66157]" dest="call_argument [66154,66164]"/>
  <match src="primitive_type [69996,70001]" dest="primitive_type [70003,70008]"/>
  <match src="number_literal: 4 [77298,77299]" dest="number_literal: 4 [77305,77306]"/>
  <match src=",: , [672,673]" dest=",: , [672,673]"/>
  <match src="type_name [66689,66694]" dest="type_name [66696,66701]"/>
  <match src="call_argument [80615,80625]" dest="call_argument [80622,80632]"/>
  <match src="return_type_definition [44555,44569]" dest="return_type_definition [44555,44569]"/>
  <match src="false: false [66287,66292]" dest="false: false [66294,66299]"/>
  <match src=",: , [77214,77215]" dest=",: , [77221,77222]"/>
  <match src="type_name [2444,2451]" dest="type_name [2444,2451]"/>
  <match src="): ) [55799,55800]" dest="): ) [55799,55800]"/>
  <match src="identifier: _name [37199,37204]" dest="identifier: _name [37199,37204]"/>
  <match src="parenthesized_expression [47983,48006]" dest="parenthesized_expression [47983,48006]"/>
  <match src="type_name [5818,5823]" dest="type_name [5818,5823]"/>
  <match src="parameter [80696,80706]" dest="parameter [80703,80713]"/>
  <match src="call_expression [66858,66927]" dest="call_expression [66865,66934]"/>
  <match src="): ) [68054,68055]" dest="): ) [68061,68062]"/>
  <match src="identifier: block [79892,79897]" dest="identifier: block [79899,79904]"/>
  <match src="comment: /**  * @dev Implementation of the {IERC165} interface.  *  * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check  * for the additional interface id that will be supported. For example:  *  * ```solidity  * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {  *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);  * }  * ```  *  * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.  */ [33902,34491]" dest="comment: /**  * @dev Implementation of the {IERC165} interface.  *  * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check  * for the additional interface id that will be supported. For example:  *  * ```solidity  * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {  *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);  * }  * ```  *  * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.  */ [33902,34491]"/>
  <match src="{: { [80526,80527]" dest="{: { [80533,80534]"/>
  <match src="call_argument [15183,15184]" dest="call_argument [15183,15184]"/>
  <match src="function_definition [32308,33020]" dest="function_definition [32308,33020]"/>
  <match src="primitive_type [5645,5652]" dest="primitive_type [5645,5652]"/>
  <match src="==: == [34721,34723]" dest="==: == [34721,34723]"/>
  <match src="number_literal: 0 [63011,63012]" dest="number_literal: 0 [63018,63019]"/>
  <match src="primitive_type [13315,13322]" dest="primitive_type [13315,13322]"/>
  <match src="call_expression [50424,50467]" dest="call_expression [50424,50467]"/>
  <match src="identifier: tokenId [20806,20813]" dest="identifier: tokenId [20806,20813]"/>
  <match src="function: function [81398,81406]" dest="function: function [81405,81413]"/>
  <match src="interface: interface [24127,24136]" dest="interface: interface [24127,24136]"/>
  <match src="return: return [43995,44001]" dest="return: return [43995,44001]"/>
  <match src="identifier: commoners [74090,74099]" dest="identifier: commoners [74097,74106]"/>
  <match src="call_argument [63928,63949]" dest="call_argument [63935,63956]"/>
  <match src="[: [ [69485,69486]" dest="[: [ [69492,69493]"/>
  <match src="binary_expression [46779,46848]" dest="binary_expression [46779,46848]"/>
  <match src="identifier: revealed [59875,59883]" dest="identifier: revealed [59882,59890]"/>
  <match src=",: , [62157,62158]" dest=",: , [62164,62165]"/>
  <match src="uint8: uint8 [1851,1856]" dest="uint8: uint8 [1851,1856]"/>
  <match src="call_expression [45987,46023]" dest="call_expression [45987,46023]"/>
  <match src="array_access [76565,76590]" dest="array_access [76572,76597]"/>
  <match src="identifier: dogeClaimed [65928,65939]" dest="identifier: dogeClaimed [65935,65946]"/>
  <match src=",: , [69525,69526]" dest=",: , [69532,69533]"/>
  <match src="identifier: staticcall [31010,31020]" dest="identifier: staticcall [31010,31020]"/>
  <match src="=: = [61888,61889]" dest="=: = [61895,61896]"/>
  <match src="uint8: uint8 [5350,5355]" dest="uint8: uint8 [5350,5355]"/>
  <match src="number_literal: 28 [14968,14970]" dest="number_literal: 28 [14968,14970]"/>
  <match src=",: , [1983,1984]" dest=",: , [1983,1984]"/>
  <match src="number_literal: 0 [62192,62193]" dest="number_literal: 0 [62199,62200]"/>
  <match src="return: return [13076,13082]" dest="return: return [13076,13082]"/>
  <match src="(: ( [66759,66760]" dest="(: ( [66766,66767]"/>
  <match src="array_access [71749,71772]" dest="array_access [71756,71779]"/>
  <match src="identifier: t [76909,76910]" dest="identifier: t [76916,76917]"/>
  <match src="): ) [41068,41069]" dest="): ) [41068,41069]"/>
  <match src="call_argument [74595,74598]" dest="call_argument [74602,74605]"/>
  <match src=",: , [12260,12261]" dest=",: , [12260,12261]"/>
  <match src="member_expression [66083,66093]" dest="member_expression [66090,66100]"/>
  <match src="function: function [46698,46706]" dest="function: function [46698,46706]"/>
  <match src="identifier: returndata [32047,32057]" dest="identifier: returndata [32047,32057]"/>
  <match src="identifier: sender [65003,65009]" dest="identifier: sender [65010,65016]"/>
  <match src="identifier: _startTokenId [39002,39015]" dest="identifier: _startTokenId [39002,39015]"/>
  <match src="=: = [74010,74011]" dest="=: = [74017,74018]"/>
  <match src="(: ( [15220,15221]" dest="(: ( [15220,15221]"/>
  <match src="primitive_type [7183,7190]" dest="primitive_type [7183,7190]"/>
  <match src=".: . [63918,63919]" dest=".: . [63925,63926]"/>
  <match src="primitive_type [58704,58709]" dest="primitive_type [58711,58716]"/>
  <match src="function_body [69888,74321]" dest="function_body [69895,74328]"/>
  <match src="identifier: tokenId [52128,52135]" dest="identifier: tokenId [52128,52135]"/>
  <match src="visibility [38777,38785]" dest="visibility [38777,38785]"/>
  <match src="(: ( [74902,74903]" dest="(: ( [74909,74910]"/>
  <match src=".: . [64102,64103]" dest=".: . [64109,64110]"/>
  <match src="expression_statement [30881,30949]" dest="expression_statement [30881,30949]"/>
  <match src="type_name [874,880]" dest="type_name [874,880]"/>
  <match src="(: ( [37777,37778]" dest="(: ( [37777,37778]"/>
  <match src="(: ( [3309,3310]" dest="(: ( [3309,3310]"/>
  <match src="external: external [24253,24261]" dest="external: external [24253,24261]"/>
  <match src="member_expression [74090,74122]" dest="member_expression [74097,74129]"/>
  <match src="&quot;: &quot; [68974,68975]" dest="&quot;: &quot; [68981,68982]"/>
  <match src="identifier: addr [36175,36179]" dest="identifier: addr [36175,36179]"/>
  <match src="primitive_type [60970,60977]" dest="primitive_type [60977,60984]"/>
  <match src="parenthesized_expression [45276,45315]" dest="parenthesized_expression [45276,45315]"/>
  <match src="number_literal: 1 [62717,62718]" dest="number_literal: 1 [62724,62725]"/>
  <match src="]: ] [69413,69414]" dest="]: ] [69420,69421]"/>
  <match src="+: + [6791,6792]" dest="+: + [6791,6792]"/>
  <match src="identifier: alchemy [80824,80831]" dest="identifier: alchemy [80831,80838]"/>
  <match src="identifier: require [65920,65927]" dest="identifier: require [65927,65934]"/>
  <match src="type_name [5153,5158]" dest="type_name [5153,5158]"/>
  <match src="number_literal: 0 [70196,70197]" dest="number_literal: 0 [70203,70204]"/>
  <match src="call_argument [66946,66990]" dest="call_argument [66953,66997]"/>
  <match src="type_name [1533,1537]" dest="type_name [1533,1537]"/>
  <match src="primitive_type [3692,3699]" dest="primitive_type [3692,3699]"/>
  <match src=".: . [40358,40359]" dest=".: . [40358,40359]"/>
  <match src="function_body [12318,12462]" dest="function_body [12318,12462]"/>
  <match src="identifier: MAX_SUPPLY [69950,69960]" dest="identifier: MAX_SUPPLY [69957,69967]"/>
  <match src="&quot;: &quot; [66777,66778]" dest="&quot;: &quot; [66784,66785]"/>
  <match src="identifier: selectTrait [77679,77690]" dest="identifier: selectTrait [77686,77697]"/>
  <match src="yul_path [61056,61060]" dest="yul_path [61063,61067]"/>
  <match src="view: view [24394,24398]" dest="view: view [24394,24398]"/>
  <match src="(: ( [10929,10930]" dest="(: ( [10929,10930]"/>
  <match src="contract_body [85,360]" dest="contract_body [85,360]"/>
  <match src="state_variable_declaration [58952,59010]" dest="state_variable_declaration [58959,59017]"/>
  <match src="): ) [76406,76407]" dest="): ) [76413,76414]"/>
  <match src="identifier: whitelistMinted [58900,58915]" dest="identifier: whitelistMinted [58907,58922]"/>
  <match src="do_while_statement [70072,70199]" dest="do_while_statement [70079,70206]"/>
  <match src="): ) [14970,14971]" dest="): ) [14970,14971]"/>
  <match src="identifier: to_ [74903,74906]" dest="identifier: to_ [74910,74913]"/>
  <match src="identifier: mintActive_ [64593,64604]" dest="identifier: mintActive_ [64600,64611]"/>
  <match src="variable_declaration_tuple [27186,27202]" dest="variable_declaration_tuple [27186,27202]"/>
  <match src="identifier: _burn [52389,52394]" dest="identifier: _burn [52389,52394]"/>
  <match src="number_literal: 255 [62518,62521]" dest="number_literal: 255 [62525,62528]"/>
  <match src="): ) [38640,38641]" dest="): ) [38640,38641]"/>
  <match src="identifier: quantity_ [69642,69651]" dest="identifier: quantity_ [69649,69658]"/>
  <match src="uint256: uint256 [4255,4262]" dest="uint256: uint256 [4255,4262]"/>
  <match src="assignment_expression [66327,66356]" dest="assignment_expression [66334,66363]"/>
  <match src="]: ] [74167,74168]" dest="]: ] [74174,74175]"/>
  <match src="function_definition [167,251]" dest="function_definition [167,251]"/>
  <match src="type_name [6674,6679]" dest="type_name [6674,6679]"/>
  <match src="=: = [70004,70005]" dest="=: = [70011,70012]"/>
  <match src="uint256: uint256 [59898,59905]" dest="uint256: uint256 [59905,59912]"/>
  <match src="): ) [44164,44165]" dest="): ) [44164,44165]"/>
  <match src="): ) [32653,32654]" dest="): ) [32653,32654]"/>
  <match src="comment: /*///////////////////////////////////////////////////////////////             --- End of data     //////////////////////////////////////////////////////////////*/ [59977,60141]" dest="comment: /*///////////////////////////////////////////////////////////////             --- End of data     //////////////////////////////////////////////////////////////*/ [59984,60148]"/>
  <match src="&lt;=: &lt;= [41037,41039]" dest="&lt;=: &lt;= [41037,41039]"/>
  <match src="visibility [65109,65117]" dest="visibility [65116,65124]"/>
  <match src="visibility [44526,44532]" dest="visibility [44526,44532]"/>
  <match src="}: } [11421,11422]" dest="}: } [11421,11422]"/>
  <match src="parameter [4471,4483]" dest="parameter [4471,4483]"/>
  <match src="string_literal [42970,42972]" dest="string_literal [42970,42972]"/>
  <match src="+: + [67046,67047]" dest="+: + [67053,67054]"/>
  <match src="identifier: from [53029,53033]" dest="identifier: from [53029,53033]"/>
  <match src="array_access [44271,44303]" dest="array_access [44271,44303]"/>
  <match src="mload: mload [11235,11240]" dest="mload: mload [11235,11240]"/>
  <match src="[: [ [70223,70224]" dest="[: [ [70230,70231]"/>
  <match src="parameter [20115,20127]" dest="parameter [20115,20127]"/>
  <match src="uint: uint [5021,5025]" dest="uint: uint [5021,5025]"/>
  <match src="number_literal: 1000 [67988,67992]" dest="number_literal: 1000 [67995,67999]"/>
  <match src="primitive_type [58020,58027]" dest="primitive_type [58020,58027]"/>
  <match src="type_name [13358,13365]" dest="type_name [13358,13365]"/>
  <match src="(: ( [10770,10771]" dest="(: ( [10770,10771]"/>
  <match src="type_name [1826,1831]" dest="type_name [1826,1831]"/>
  <match src="{: { [38809,38810]" dest="{: { [38809,38810]"/>
  <match src="identifier: tokenId [51910,51917]" dest="identifier: tokenId [51910,51917]"/>
  <match src="expression_statement [80604,80653]" dest="expression_statement [80611,80660]"/>
  <match src="type_name [46899,46906]" dest="type_name [46899,46906]"/>
  <match src="call_expression [41021,41036]" dest="call_expression [41021,41036]"/>
  <match src="}: } [64793,64794]" dest="}: } [64800,64801]"/>
  <match src="type_name [52395,52402]" dest="type_name [52395,52402]"/>
  <match src="primitive_type [35925,35932]" dest="primitive_type [35925,35932]"/>
  <match src="return_type_definition [32449,32471]" dest="return_type_definition [32449,32471]"/>
  <match src="bytes32: bytes32 [12798,12805]" dest="bytes32: bytes32 [12798,12805]"/>
  <match src="(: ( [47365,47366]" dest="(: ( [47365,47366]"/>
  <match src="binary_expression [46040,46076]" dest="binary_expression [46040,46076]"/>
  <match src="(: ( [48042,48043]" dest="(: ( [48042,48043]"/>
  <match src="visibility [59657,59663]" dest="visibility [59664,59670]"/>
  <match src="==: == [80887,80889]" dest="==: == [80894,80896]"/>
  <match src="call_expression [75456,75474]" dest="call_expression [75463,75481]"/>
  <match src="expression_statement [77667,77717]" dest="expression_statement [77674,77724]"/>
  <match src="else: else [8907,8911]" dest="else: else [8907,8911]"/>
  <match src="parameter [6186,6199]" dest="parameter [6186,6199]"/>
  <match src="identifier: commoners [72185,72194]" dest="identifier: commoners [72192,72201]"/>
  <match src="binary_expression [8670,8714]" dest="binary_expression [8670,8714]"/>
  <match src="identifier: hash [13323,13327]" dest="identifier: hash [13323,13327]"/>
  <match src="primitive_type [30403,30408]" dest="primitive_type [30403,30408]"/>
  <match src="identifier: i [74877,74878]" dest="identifier: i [74884,74885]"/>
  <match src="type_name [29688,29693]" dest="type_name [29688,29693]"/>
  <match src="function: function [39108,39116]" dest="function: function [39108,39116]"/>
  <match src="identifier: to [47802,47804]" dest="identifier: to [47802,47804]"/>
  <match src="yul_decimal_number: 0 [10816,10817]" dest="yul_decimal_number: 0 [10816,10817]"/>
  <match src="byte: byte [10811,10815]" dest="byte: byte [10811,10815]"/>
  <match src="expression_statement [61945,61962]" dest="expression_statement [61952,61969]"/>
  <match src="primitive_type [81442,81449]" dest="primitive_type [81449,81456]"/>
  <match src="call_argument [79869,79904]" dest="call_argument [79876,79911]"/>
  <match src="identifier: require [30881,30888]" dest="identifier: require [30881,30888]"/>
  <match src="binary_expression [78986,79021]" dest="binary_expression [78993,79028]"/>
  <match src="}: } [56259,56260]" dest="}: } [56259,56260]"/>
  <match src="type_cast_expression [48953,48963]" dest="type_cast_expression [48953,48963]"/>
  <match src="identifier: to [44859,44861]" dest="identifier: to [44859,44861]"/>
  <match src="type_name [44978,44985]" dest="type_name [44978,44985]"/>
  <match src="emit_statement [54530,54571]" dest="emit_statement [54530,54571]"/>
  <match src="function: function [1718,1726]" dest="function: function [1718,1726]"/>
  <match src="): ) [18554,18555]" dest="): ) [18554,18555]"/>
  <match src="): ) [77134,77135]" dest="): ) [77141,77142]"/>
  <match src=",: , [65471,65472]" dest=",: , [65478,65479]"/>
  <match src="block_statement [71314,72290]" dest="block_statement [71321,72297]"/>
  <match src="parameter [1570,1593]" dest="parameter [1570,1593]"/>
  <match src="variable_declaration [31951,31974]" dest="variable_declaration [31951,31974]"/>
  <match src="user_defined_type [18363,18370]" dest="user_defined_type [18363,18370]"/>
  <match src="identifier: ICommoner [75412,75421]" dest="identifier: ICommoner [75419,75428]"/>
  <match src="add: add [32870,32873]" dest="add: add [32870,32873]"/>
  <match src="number_literal: 2 [7602,7603]" dest="number_literal: 2 [7602,7603]"/>
  <match src="=: = [6517,6518]" dest="=: = [6517,6518]"/>
  <match src="expression_statement [74145,74181]" dest="expression_statement [74152,74188]"/>
  <match src="primitive_type [42677,42684]" dest="primitive_type [42677,42684]"/>
  <match src="]: ] [73230,73231]" dest="]: ] [73237,73238]"/>
  <match src=",: , [62784,62785]" dest=",: , [62791,62792]"/>
  <match src="parameter [5834,5847]" dest="parameter [5834,5847]"/>
  <match src="address: address [3432,3439]" dest="address: address [3432,3439]"/>
  <match src="state_variable_declaration [58562,58595]" dest="state_variable_declaration [58569,58602]"/>
  <match src="identifier: amount [27133,27139]" dest="identifier: amount [27133,27139]"/>
  <match src="parameter [28559,28576]" dest="parameter [28559,28576]"/>
  <match src="primitive_type [2372,2376]" dest="primitive_type [2372,2376]"/>
  <match src="): ) [28722,28723]" dest="): ) [28722,28723]"/>
  <match src="&amp;: &amp; [77287,77288]" dest="&amp;: &amp; [77294,77295]"/>
  <match src="): ) [74981,74982]" dest="): ) [74988,74989]"/>
  <match src="==: == [65010,65012]" dest="==: == [65017,65019]"/>
  <match src="&quot;: &quot; [48043,48044]" dest="&quot;: &quot; [48043,48044]"/>
  <match src="state_mutability [39162,39166]" dest="state_mutability [39162,39166]"/>
  <match src="array_access [62184,62194]" dest="array_access [62191,62201]"/>
  <match src="&quot;: &quot; [69011,69012]" dest="&quot;: &quot; [69018,69019]"/>
  <match src="variable_declaration [43457,43470]" dest="variable_declaration [43457,43470]"/>
  <match src="variable_declaration [15647,15664]" dest="variable_declaration [15647,15664]"/>
  <match src="call_argument [68550,68554]" dest="call_argument [68557,68561]"/>
  <match src="type_name [58529,58541]" dest="type_name [58529,58541]"/>
  <match src="identifier: s [12881,12882]" dest="identifier: s [12881,12882]"/>
  <match src="number_literal: 0 [63017,63018]" dest="number_literal: 0 [63024,63025]"/>
  <match src="identifier: i [7693,7694]" dest="identifier: i [7693,7694]"/>
  <match src="bytes4: bytes4 [39135,39141]" dest="bytes4: bytes4 [39135,39141]"/>
  <match src="(: ( [18680,18681]" dest="(: ( [18680,18681]"/>
  <match src="internal: internal [76378,76386]" dest="internal: internal [76385,76393]"/>
  <match src="revert: revert [8614,8620]" dest="revert: revert [8614,8620]"/>
  <match src="assembly_statement [10678,10862]" dest="assembly_statement [10678,10862]"/>
  <match src="identifier: bodyType [71930,71938]" dest="identifier: bodyType [71937,71945]"/>
  <match src="{: { [65118,65119]" dest="{: { [65125,65126]"/>
  <match src="uint256: uint256 [74848,74855]" dest="uint256: uint256 [74855,74862]"/>
  <match src="member_expression [63867,63927]" dest="member_expression [63874,63934]"/>
  <match src="(: ( [28692,28693]" dest="(: ( [28692,28693]"/>
  <match src="array_access [65030,65039]" dest="array_access [65037,65046]"/>
  <match src="returns: returns [24578,24585]" dest="returns: returns [24578,24585]"/>
  <match src="storage: storage [50970,50977]" dest="storage: storage [50970,50977]"/>
  <match src="address: address [41759,41766]" dest="address: address [41759,41766]"/>
  <match src="&quot;: &quot; [27171,27172]" dest="&quot;: &quot; [27171,27172]"/>
  <match src="identifier: selectTrait [77515,77526]" dest="identifier: selectTrait [77522,77533]"/>
  <match src="(: ( [1328,1329]" dest="(: ( [1328,1329]"/>
  <match src="(: ( [147,148]" dest="(: ( [147,148]"/>
  <match src="binary_expression [8559,8597]" dest="binary_expression [8559,8597]"/>
  <match src="address: address [49882,49889]" dest="address: address [49882,49889]"/>
  <match src="contract_body [35868,57894]" dest="contract_body [35868,57894]"/>
  <match src="identifier: topTalents [70213,70223]" dest="identifier: topTalents [70220,70230]"/>
  <match src="=: = [81218,81219]" dest="=: = [81225,81226]"/>
  <match src="identifier: ownership [41809,41818]" dest="identifier: ownership [41809,41818]"/>
  <match src="uint16: uint16 [1189,1195]" dest="uint16: uint16 [1189,1195]"/>
  <match src="): ) [63940,63941]" dest="): ) [63947,63948]"/>
  <match src="call_argument [77691,77712]" dest="call_argument [77698,77719]"/>
  <match src="call_argument [54152,54153]" dest="call_argument [54152,54153]"/>
  <match src="return: return [14875,14881]" dest="return: return [14875,14881]"/>
  <match src="yul_identifier [10756,10757]" dest="yul_identifier [10756,10757]"/>
  <match src="(: ( [44786,44787]" dest="(: ( [44786,44787]"/>
  <match src="identifier: Strings [5988,5995]" dest="identifier: Strings [5988,5995]"/>
  <match src="uint: uint [74944,74948]" dest="uint: uint [74951,74955]"/>
  <match src=":: : [42968,42969]" dest=":: : [42968,42969]"/>
  <match src="pure: pure [16698,16702]" dest="pure: pure [16698,16702]"/>
  <match src=".: . [74056,74057]" dest=".: . [74063,74064]"/>
  <match src="expression_statement [65920,65980]" dest="expression_statement [65927,65987]"/>
  <match src="identifier: length [10446,10452]" dest="identifier: length [10446,10452]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [77568,77571]" dest="&gt;&gt;=: &gt;&gt;= [77575,77578]"/>
  <match src="identifier: IVRF [61924,61928]" dest="identifier: IVRF [61931,61935]"/>
  <match src="&quot;: &quot; [17345,17346]" dest="&quot;: &quot; [17345,17346]"/>
  <match src="emit: emit [44335,44339]" dest="emit: emit [44335,44339]"/>
  <match src="identifier: baseURI [42938,42945]" dest="identifier: baseURI [42938,42945]"/>
  <match src=",: , [8261,8262]" dest=",: , [8261,8262]"/>
  <match src="}: } [8659,8660]" dest="}: } [8659,8660]"/>
  <match src="contract_body [4034,4563]" dest="contract_body [4034,4563]"/>
  <match src="parameter [54937,54947]" dest="parameter [54937,54947]"/>
  <match src="identifier: functionDelegateCall [31299,31319]" dest="identifier: functionDelegateCall [31299,31319]"/>
  <match src="returns: returns [5434,5441]" dest="returns: returns [5434,5441]"/>
  <match src="parameter [80802,80816]" dest="parameter [80809,80823]"/>
  <match src=",: , [62644,62645]" dest=",: , [62651,62652]"/>
  <match src="expression_statement [71800,71834]" dest="expression_statement [71807,71841]"/>
  <match src="): ) [75005,75006]" dest="): ) [75012,75013]"/>
  <match src="return_statement [39635,39679]" dest="return_statement [39635,39679]"/>
  <match src="function_definition [40558,40659]" dest="function_definition [40558,40659]"/>
  <match src="identifier: temp [6567,6571]" dest="identifier: temp [6567,6571]"/>
  <match src="override: override [45904,45912]" dest="override: override [45904,45912]"/>
  <match src="(: ( [67835,67836]" dest="(: ( [67842,67843]"/>
  <match src=",: , [63145,63146]" dest=",: , [63152,63153]"/>
  <match src="address: address [49859,49866]" dest="address: address [49859,49866]"/>
  <match src=",: , [43745,43746]" dest=",: , [43745,43746]"/>
  <match src="parameter [6224,6237]" dest="parameter [6224,6237]"/>
  <match src="string_literal [27141,27172]" dest="string_literal [27141,27172]"/>
  <match src="type_name [54958,54965]" dest="type_name [54958,54965]"/>
  <match src="identifier: RecoverError [15260,15272]" dest="identifier: RecoverError [15260,15272]"/>
  <match src="state_mutability [3260,3264]" dest="state_mutability [3260,3264]"/>
  <match src="assignment_expression [63180,63213]" dest="assignment_expression [63187,63220]"/>
  <match src="identifier: aliases [63250,63257]" dest="identifier: aliases [63257,63264]"/>
  <match src="user_defined_type [49946,49960]" dest="user_defined_type [49946,49960]"/>
  <match src="type_cast_expression [49349,49359]" dest="type_cast_expression [49349,49359]"/>
  <match src="yul_identifier [61076,61079]" dest="yul_identifier [61083,61086]"/>
  <match src="function: function [17189,17197]" dest="function: function [17189,17197]"/>
  <match src="identifier: commoners [73921,73930]" dest="identifier: commoners [73928,73937]"/>
  <match src="function: function [1545,1553]" dest="function: function [1545,1553]"/>
  <match src="call_expression [31854,31923]" dest="call_expression [31854,31923]"/>
  <match src="return_statement [76535,76548]" dest="return_statement [76542,76555]"/>
  <match src="bool: bool [44564,44568]" dest="bool: bool [44564,44568]"/>
  <match src="block_statement [80526,80594]" dest="block_statement [80533,80601]"/>
  <match src="primitive_type [4071,4077]" dest="primitive_type [4071,4077]"/>
  <match src=",: , [4498,4499]" dest=",: , [4498,4499]"/>
  <match src="type_name [60469,60476]" dest="type_name [60476,60483]"/>
  <match src="expression_statement [66858,66928]" dest="expression_statement [66865,66935]"/>
  <match src="==: == [55907,55909]" dest="==: == [55907,55909]"/>
  <match src="interface_declaration [3724,4010]" dest="interface_declaration [3724,4010]"/>
  <match src="=: = [53362,53363]" dest="=: = [53362,53363]"/>
  <match src="identifier: topCommoner_ [70923,70935]" dest="identifier: topCommoner_ [70930,70942]"/>
  <match src="(: ( [7318,7319]" dest="(: ( [7318,7319]"/>
  <match src="identifier: admin [65151,65156]" dest="identifier: admin [65158,65163]"/>
  <match src="call_expression [43602,43639]" dest="call_expression [43602,43639]"/>
  <match src="comment: // Overflows are incredibly unrealistic. [48151,48191]" dest="comment: // Overflows are incredibly unrealistic. [48151,48191]"/>
  <match src="function: function [33727,33735]" dest="function: function [33727,33735]"/>
  <match src="identifier: _afterTokenTransfers [54581,54601]" dest="identifier: _afterTokenTransfers [54581,54601]"/>
  <match src="type_name [36283,36289]" dest="type_name [36283,36289]"/>
  <match src="expression_statement [77168,77219]" dest="expression_statement [77175,77226]"/>
  <match src="]: ] [65038,65039]" dest="]: ] [65045,65046]"/>
  <match src="identifier: msg [80427,80430]" dest="identifier: msg [80434,80437]"/>
  <match src="public: public [59236,59242]" dest="public: public [59243,59249]"/>
  <match src="{: { [5054,5055]" dest="{: { [5054,5055]"/>
  <match src=".: . [79502,79503]" dest=".: . [79509,79510]"/>
  <match src="uint256: uint256 [58801,58808]" dest="uint256: uint256 [58808,58815]"/>
  <match src="number_literal: 1 [62711,62712]" dest="number_literal: 1 [62718,62719]"/>
  <match src="return_statement [7891,7913]" dest="return_statement [7891,7913]"/>
  <match src="address: address [37778,37785]" dest="address: address [37778,37785]"/>
  <match src=".: . [51491,51492]" dest=".: . [51491,51492]"/>
  <match src="identifier: token [60507,60512]" dest="identifier: token [60514,60519]"/>
  <match src=",: , [80447,80448]" dest=",: , [80454,80455]"/>
  <match src="(: ( [32037,32038]" dest="(: ( [32037,32038]"/>
  <match src="(: ( [61461,61462]" dest="(: ( [61468,61469]"/>
  <match src="string [42970,42972]" dest="string [42970,42972]"/>
  <match src="number_literal: 0xf [7773,7776]" dest="number_literal: 0xf [7773,7776]"/>
  <match src=".: . [72792,72793]" dest=".: . [72799,72800]"/>
  <match src="identifier: MAX_SUPPLY [67060,67070]" dest="identifier: MAX_SUPPLY [67067,67077]"/>
  <match src=",: , [44861,44862]" dest=",: , [44861,44862]"/>
  <match src="primitive_type [18154,18160]" dest="primitive_type [18154,18160]"/>
  <match src="if: if [46170,46172]" dest="if: if [46170,46172]"/>
  <match src="binary_expression [69342,69388]" dest="binary_expression [69349,69395]"/>
  <match src="expression_statement [72016,72055]" dest="expression_statement [72023,72062]"/>
  <match src="yul_path [10829,10838]" dest="yul_path [10829,10838]"/>
  <match src="expression_statement [72130,72167]" dest="expression_statement [72137,72174]"/>
  <match src="assignment_expression [54418,54472]" dest="assignment_expression [54418,54472]"/>
  <match src="inheritance_specifier [35843,35850]" dest="inheritance_specifier [35843,35850]"/>
  <match src="(: ( [69534,69535]" dest="(: ( [69541,69542]"/>
  <match src="revert: revert [43938,43944]" dest="revert: revert [43938,43944]"/>
  <match src="primitive_type [31749,31754]" dest="primitive_type [31749,31754]"/>
  <match src="call_expression [68267,68334]" dest="call_expression [68274,68341]"/>
  <match src="type_cast_expression [50541,50551]" dest="type_cast_expression [50541,50551]"/>
  <match src="uint256: uint256 [22909,22916]" dest="uint256: uint256 [22909,22916]"/>
  <match src="type_name [18909,18916]" dest="type_name [18909,18916]"/>
  <match src="identifier: startTokenId [74490,74502]" dest="identifier: startTokenId [74497,74509]"/>
  <match src="primitive_type [57031,57038]" dest="primitive_type [57031,57038]"/>
  <match src="assignment_expression [61882,61907]" dest="assignment_expression [61889,61914]"/>
  <match src="type_name [47815,47822]" dest="type_name [47815,47822]"/>
  <match src="): ) [5579,5580]" dest="): ) [5579,5580]"/>
  <match src="expression_statement [45394,45423]" dest="expression_statement [45394,45423]"/>
  <match src="call_argument [52128,52135]" dest="call_argument [52128,52135]"/>
  <match src="variable_declaration [29997,30020]" dest="variable_declaration [29997,30020]"/>
  <match src="struct_member [4315,4332]" dest="struct_member [4315,4332]"/>
  <match src="): ) [7035,7036]" dest="): ) [7035,7036]"/>
  <match src="(: ( [47958,47959]" dest="(: ( [47958,47959]"/>
  <match src=",: , [80782,80783]" dest=",: , [80789,80790]"/>
  <match src="comment: // 0: new, 1: old [1273,1290]" dest="comment: // 0: new, 1: old [1273,1290]"/>
  <match src="=&gt;: =&gt; [58809,58811]" dest="=&gt;: =&gt; [58816,58818]"/>
  <match src="&quot;: &quot; [8979,8980]" dest="&quot;: &quot; [8979,8980]"/>
  <match src="}: } [56266,56267]" dest="}: } [56266,56267]"/>
  <match src="number_literal [68202,68213]" dest="number_literal [68209,68220]"/>
  <match src="member_expression [78062,78078]" dest="member_expression [78069,78085]"/>
  <match src=",: , [50551,50552]" dest=",: , [50551,50552]"/>
  <match src="parameter [55647,55659]" dest="parameter [55647,55659]"/>
  <match src="(: ( [34684,34685]" dest="(: ( [34684,34685]"/>
  <match src="call_argument [47490,47495]" dest="call_argument [47490,47495]"/>
  <match src="number_literal: 0 [48107,48108]" dest="number_literal: 0 [48107,48108]"/>
  <match src="parenthesized_expression [41930,41965]" dest="parenthesized_expression [41930,41965]"/>
  <match src="identifier: selectTrait [77098,77109]" dest="identifier: selectTrait [77105,77116]"/>
  <match src="identifier: sender [61815,61821]" dest="identifier: sender [61822,61828]"/>
  <match src="external: external [20182,20190]" dest="external: external [20182,20190]"/>
  <match src="uint256: uint256 [4699,4706]" dest="uint256: uint256 [4699,4706]"/>
  <match src="return: return [39227,39233]" dest="return: return [39227,39233]"/>
  <match src=",: , [698,699]" dest=",: , [698,699]"/>
  <match src="identifier: commoners [81061,81070]" dest="identifier: commoners [81068,81077]"/>
  <match src="identifier: smithing [5824,5832]" dest="identifier: smithing [5824,5832]"/>
  <match src="internal: internal [7521,7529]" dest="internal: internal [7521,7529]"/>
  <match src="identifier: error [8426,8431]" dest="identifier: error [8426,8431]"/>
  <match src=",: , [3979,3980]" dest=",: , [3979,3980]"/>
  <match src="uint8: uint8 [1826,1831]" dest="uint8: uint8 [1826,1831]"/>
  <match src="primitive_type [23800,23807]" dest="primitive_type [23800,23807]"/>
  <match src="identifier: RecoverError [12848,12860]" dest="identifier: RecoverError [12848,12860]"/>
  <match src="identifier: msg [44847,44850]" dest="identifier: msg [44847,44850]"/>
  <match src="call_argument [68686,68696]" dest="call_argument [68693,68703]"/>
  <match src="primitive_type [29792,29797]" dest="primitive_type [29792,29797]"/>
  <match src="expression_statement [66938,67015]" dest="expression_statement [66945,67022]"/>
  <match src="==: == [61548,61550]" dest="==: == [61555,61557]"/>
  <match src="yul_evm_builtin [10811,10815]" dest="yul_evm_builtin [10811,10815]"/>
  <match src="identifier: abi [78062,78065]" dest="identifier: abi [78069,78072]"/>
  <match src="member_expression [8568,8597]" dest="member_expression [8568,8597]"/>
  <match src="array_access [74199,74222]" dest="array_access [74206,74229]"/>
  <match src="identifier: doge [4479,4483]" dest="identifier: doge [4479,4483]"/>
  <match src="return_type_definition [4926,4943]" dest="return_type_definition [4926,4943]"/>
  <match src="primitive_type [45863,45868]" dest="primitive_type [45863,45868]"/>
  <match src="primitive_type [46715,46722]" dest="primitive_type [46715,46722]"/>
  <match src="parameter [5768,5781]" dest="parameter [5768,5781]"/>
  <match src="expression_statement [46238,46267]" dest="expression_statement [46238,46267]"/>
  <match src="member_expression [54375,54388]" dest="member_expression [54375,54388]"/>
  <match src="number_literal: 4 [62683,62684]" dest="number_literal: 4 [62690,62691]"/>
  <match src="member_expression [79772,79798]" dest="member_expression [79779,79805]"/>
  <match src="return_type_definition [6215,6238]" dest="return_type_definition [6215,6238]"/>
  <match src="identifier: doges [1678,1683]" dest="identifier: doges [1678,1683]"/>
  <match src="identifier: to [55085,55087]" dest="identifier: to [55085,55087]"/>
  <match src="function_definition [7001,7341]" dest="function_definition [7001,7341]"/>
  <match src="emit_statement [51886,51919]" dest="emit_statement [51886,51919]"/>
  <match src="assignment_expression [73708,73741]" dest="assignment_expression [73715,73748]"/>
  <match src="block_statement [32496,32540]" dest="block_statement [32496,32540]"/>
  <match src="): ) [78867,78868]" dest="): ) [78874,78875]"/>
  <match src="{: { [65905,65906]" dest="{: { [65912,65913]"/>
  <match src="identifier: supportsInterface [18136,18153]" dest="identifier: supportsInterface [18136,18153]"/>
  <match src="=: = [7638,7639]" dest="=: = [7638,7639]"/>
  <match src="internal: internal [76860,76868]" dest="internal: internal [76867,76875]"/>
  <match src="identifier: seed [76854,76858]" dest="identifier: seed [76861,76865]"/>
  <match src="&quot;: &quot; [41963,41964]" dest="&quot;: &quot; [41963,41964]"/>
  <match src="enum_declaration [8225,8384]" dest="enum_declaration [8225,8384]"/>
  <match src="call_argument [51906,51908]" dest="call_argument [51906,51908]"/>
  <match src="): ) [18971,18972]" dest="): ) [18971,18972]"/>
  <match src="identifier: aux [40642,40645]" dest="identifier: aux [40642,40645]"/>
  <match src="assignment_expression [72239,72274]" dest="assignment_expression [72246,72281]"/>
  <match src="(: ( [31060,31061]" dest="(: ( [31060,31061]"/>
  <match src="comment: // error BalanceQueryForZeroAddress(); [35447,35485]" dest="comment: // error BalanceQueryForZeroAddress(); [35447,35485]"/>
  <match src="function: function [20722,20730]" dest="function: function [20722,20730]"/>
  <match src="&quot;: &quot; [44238,44239]" dest="&quot;: &quot; [44238,44239]"/>
  <match src="]: ] [71822,71823]" dest="]: ] [71829,71830]"/>
  <match src=",: , [69009,69010]" dest=",: , [69016,69017]"/>
  <match src="library: library [24749,24756]" dest="library: library [24749,24756]"/>
  <match src="expression_statement [6829,6841]" dest="expression_statement [6829,6841]"/>
  <match src="member_expression [16817,16825]" dest="member_expression [16817,16825]"/>
  <match src="]: ] [65948,65949]" dest="]: ] [65955,65956]"/>
  <match src="identifier: commoners [73760,73769]" dest="identifier: commoners [73767,73776]"/>
  <match src="assignment_expression [62538,62557]" dest="assignment_expression [62545,62564]"/>
  <match src="): ) [547,548]" dest="): ) [547,548]"/>
  <match src="(: ( [79868,79869]" dest="(: ( [79875,79876]"/>
  <match src="state_mutability [63796,63803]" dest="state_mutability [63803,63810]"/>
  <match src="function: function [13288,13296]" dest="function: function [13288,13296]"/>
  <match src="type_name [29147,29154]" dest="type_name [29147,29154]"/>
  <match src="{: { [17291,17292]" dest="{: { [17291,17292]"/>
  <match src="identifier: _totalMinted [38762,38774]" dest="identifier: _totalMinted [38762,38774]"/>
  <match src=".: . [53641,53642]" dest=".: . [53641,53642]"/>
  <match src="string [29857,29897]" dest="string [29857,29897]"/>
  <match src="}: } [33001,33002]" dest="}: } [33001,33002]"/>
  <match src="==: == [65771,65773]" dest="==: == [65778,65780]"/>
  <match src="array_access [79970,79989]" dest="array_access [79977,79996]"/>
  <match src="assignment_expression [48590,48656]" dest="assignment_expression [48590,48656]"/>
  <match src="identifier: v [15180,15181]" dest="identifier: v [15180,15181]"/>
  <match src="identifier: _ownerships [37484,37495]" dest="identifier: _ownerships [37484,37495]"/>
  <match src="string [41931,41964]" dest="string [41931,41964]"/>
  <match src="function_definition [591,793]" dest="function_definition [591,793]"/>
  <match src=",: , [62699,62700]" dest=",: , [62706,62707]"/>
  <match src="state_variable_declaration [58793,58837]" dest="state_variable_declaration [58800,58844]"/>
  <match src="type_name [5199,5204]" dest="type_name [5199,5204]"/>
  <match src="): ) [7100,7101]" dest="): ) [7100,7101]"/>
  <match src="function: function [3355,3363]" dest="function: function [3355,3363]"/>
  <match src="if: if [14775,14777]" dest="if: if [14775,14777]"/>
  <match src="number_literal: 206 [62149,62152]" dest="number_literal: 206 [62156,62159]"/>
  <match src="call_argument [67465,67500]" dest="call_argument [67472,67507]"/>
  <match src="binary_expression [67060,67095]" dest="binary_expression [67067,67102]"/>
  <match src="assignment_expression [51731,51751]" dest="assignment_expression [51731,51751]"/>
  <match src="): ) [10845,10846]" dest="): ) [10845,10846]"/>
  <match src="primitive_type [440,446]" dest="primitive_type [440,446]"/>
  <match src="(: ( [63686,63687]" dest="(: ( [63693,63694]"/>
  <match src="): ) [68472,68473]" dest="): ) [68479,68480]"/>
  <match src=".: . [74113,74114]" dest=".: . [74120,74121]"/>
  <match src="&gt;: &gt; [14790,14791]" dest="&gt;: &gt; [14790,14791]"/>
  <match src="number_literal: 0xFFFF [76962,76968]" dest="number_literal: 0xFFFF [76969,76975]"/>
  <match src="primitive_type [1890,1895]" dest="primitive_type [1890,1895]"/>
  <match src="memory: memory [75431,75437]" dest="memory: memory [75438,75444]"/>
  <match src="string_literal [31440,31481]" dest="string_literal [31440,31481]"/>
  <match src="number_literal: 12 [62881,62883]" dest="number_literal: 12 [62888,62890]"/>
  <match src="(: ( [52820,52821]" dest="(: ( [52820,52821]"/>
  <match src="parameter [236,249]" dest="parameter [236,249]"/>
  <match src="state_variable_declaration [35939,35970]" dest="state_variable_declaration [35939,35970]"/>
  <match src="call_argument [78948,78966]" dest="call_argument [78955,78973]"/>
  <match src="]: ] [69581,69582]" dest="]: ] [69588,69589]"/>
  <match src="identifier: _msgSender [44217,44227]" dest="identifier: _msgSender [44217,44227]"/>
  <match src="identifier: i [7713,7714]" dest="identifier: i [7713,7714]"/>
  <match src="number_literal: 0xFFFF [77373,77379]" dest="number_literal: 0xFFFF [77380,77386]"/>
  <match src="string: string [674,680]" dest="string: string [674,680]"/>
  <match src="identifier: hash [12382,12386]" dest="identifier: hash [12382,12386]"/>
  <match src="public: public [58255,58261]" dest="public: public [58255,58261]"/>
  <match src="uint256: uint256 [42677,42684]" dest="uint256: uint256 [42677,42684]"/>
  <match src="comment: /**      * @dev Returns the token collection symbol.      */ [24299,24361]" dest="comment: /**      * @dev Returns the token collection symbol.      */ [24299,24361]"/>
  <match src="(: ( [41930,41931]" dest="(: ( [41930,41931]"/>
  <match src="comment: // Keeps track of the start time of ownership with minimal overhead for tokenomics. [36190,36273]" dest="comment: // Keeps track of the start time of ownership with minimal overhead for tokenomics. [36190,36273]"/>
  <match src="variable_declaration [10475,10484]" dest="variable_declaration [10475,10484]"/>
  <match src="type_cast_expression [39856,39897]" dest="type_cast_expression [39856,39897]"/>
  <match src="=: = [48571,48572]" dest="=: = [48571,48572]"/>
  <match src="(: ( [404,405]" dest="(: ( [404,405]"/>
  <match src="parameter [64459,64477]" dest="parameter [64466,64484]"/>
  <match src="function_body [38410,38660]" dest="function_body [38410,38660]"/>
  <match src="augmented_assignment_expression [6829,6840]" dest="augmented_assignment_expression [6829,6840]"/>
  <match src="(: ( [80090,80091]" dest="(: ( [80097,80098]"/>
  <match src="primitive_type [16673,16678]" dest="primitive_type [16673,16678]"/>
  <match src="}: } [32925,32926]" dest="}: } [32925,32926]"/>
  <match src="call_expression [68488,68608]" dest="call_expression [68495,68615]"/>
  <match src="struct_member [1073,1085]" dest="struct_member [1073,1085]"/>
  <match src="uint8: uint8 [80833,80838]" dest="uint8: uint8 [80840,80845]"/>
  <match src="identifier: signature [12275,12284]" dest="identifier: signature [12275,12284]"/>
  <match src="identifier: v [15705,15706]" dest="identifier: v [15705,15706]"/>
  <match src=",: , [10838,10839]" dest=",: , [10838,10839]"/>
  <match src="]: ] [80914,80915]" dest="]: ] [80921,80922]"/>
  <match src="]: ] [62172,62173]" dest="]: ] [62179,62180]"/>
  <match src="type_name [12893,12898]" dest="type_name [12893,12898]"/>
  <match src="memory: memory [42840,42846]" dest="memory: memory [42840,42846]"/>
  <match src=".: . [65891,65892]" dest=".: . [65898,65899]"/>
  <match src="(: ( [64703,64704]" dest="(: ( [64710,64711]"/>
  <match src="call_expression [29909,29969]" dest="call_expression [29909,29969]"/>
  <match src="assignment_expression [73812,73847]" dest="assignment_expression [73819,73854]"/>
  <match src="else: else [8785,8789]" dest="else: else [8785,8789]"/>
  <match src="uint256: uint256 [862,869]" dest="uint256: uint256 [862,869]"/>
  <match src="[: [ [79544,79545]" dest="[: [ [79551,79552]"/>
  <match src="): ) [64880,64881]" dest="): ) [64887,64888]"/>
  <match src="[: [ [65034,65035]" dest="[: [ [65041,65042]"/>
  <match src="member_expression [69542,69592]" dest="member_expression [69549,69599]"/>
  <match src=".: . [81118,81119]" dest=".: . [81125,81126]"/>
  <match src="array_access [53598,53618]" dest="array_access [53598,53618]"/>
  <match src=".: . [10445,10446]" dest=".: . [10445,10446]"/>
  <match src="identifier: to [48877,48879]" dest="identifier: to [48877,48879]"/>
  <match src="): ) [65441,65442]" dest="): ) [65448,65449]"/>
  <match src="identifier: tokenId [80039,80046]" dest="identifier: tokenId [80046,80053]"/>
  <match src="number_literal: 107 [62626,62629]" dest="number_literal: 107 [62633,62636]"/>
  <match src=".: . [66400,66401]" dest=".: . [66407,66408]"/>
  <match src="comment: //     _currentIndex = _startTokenId(); [37985,38024]" dest="comment: //     _currentIndex = _startTokenId(); [37985,38024]"/>
  <match src="return_type_definition [33769,33793]" dest="return_type_definition [33769,33793]"/>
  <match src="parameter [2335,2347]" dest="parameter [2335,2347]"/>
  <match src="identifier: toString [6177,6185]" dest="identifier: toString [6177,6185]"/>
  <match src="identifier: max [4983,4986]" dest="identifier: max [4983,4986]"/>
  <match src=",: , [35841,35842]" dest=",: , [35841,35842]"/>
  <match src="): ) [12316,12317]" dest="): ) [12316,12317]"/>
  <match src="identifier: aliases [76565,76572]" dest="identifier: aliases [76572,76579]"/>
  <match src="bool: bool [37808,37812]" dest="bool: bool [37808,37812]"/>
  <match src=",: , [63391,63392]" dest=",: , [63398,63399]"/>
  <match src="identifier: background [5280,5290]" dest="identifier: background [5280,5290]"/>
  <match src="call_expression [64580,64669]" dest="call_expression [64587,64676]"/>
  <match src="(: ( [32873,32874]" dest="(: ( [32873,32874]"/>
  <match src="if_statement [14948,15050]" dest="if_statement [14948,15050]"/>
  <match src="return_statement [42878,42973]" dest="return_statement [42878,42973]"/>
  <match src="=&gt;: =&gt; [37786,37788]" dest="=&gt;: =&gt; [37786,37788]"/>
  <match src="): ) [46224,46225]" dest="): ) [46224,46225]"/>
  <match src="): ) [48655,48656]" dest="): ) [48655,48656]"/>
  <match src="++: ++ [49377,49379]" dest="++: ++ [49377,49379]"/>
  <match src="struct_member [36534,36549]" dest="struct_member [36534,36549]"/>
  <match src="variable_declaration [6648,6667]" dest="variable_declaration [6648,6667]"/>
  <match src="expression_statement [54581,54632]" dest="expression_statement [54581,54632]"/>
  <match src="(: ( [27256,27257]" dest="(: ( [27256,27257]"/>
  <match src=",: , [49359,49360]" dest=",: , [49359,49360]"/>
  <match src="type_name [55647,55654]" dest="type_name [55647,55654]"/>
  <match src="identifier: signature [11194,11203]" dest="identifier: signature [11194,11203]"/>
  <match src="identifier: startTimestamp [51783,51797]" dest="identifier: startTimestamp [51783,51797]"/>
  <match src="identifier: updatedIndex [49474,49486]" dest="identifier: updatedIndex [49474,49486]"/>
  <match src="): ) [46075,46076]" dest="): ) [46075,46076]"/>
  <match src=",: , [62606,62607]" dest=",: , [62613,62614]"/>
  <match src="primitive_type [48099,48106]" dest="primitive_type [48099,48106]"/>
  <match src="identifier: isContract [48792,48802]" dest="identifier: isContract [48792,48802]"/>
  <match src="string_literal [66992,67013]" dest="string_literal [66999,67020]"/>
  <match src="identifier: tokenNo_ [63998,64006]" dest="identifier: tokenNo_ [64005,64013]"/>
  <match src="true [61825,61829]" dest="true [61832,61836]"/>
  <match src="[: [ [65946,65947]" dest="[: [ [65953,65954]"/>
  <match src="identifier: IERC165 [39192,39199]" dest="identifier: IERC165 [39192,39199]"/>
  <match src="identifier: totalSupply [65380,65391]" dest="identifier: totalSupply [65387,65398]"/>
  <match src="identifier: whitelistMint [66658,66671]" dest="identifier: whitelistMint [66665,66678]"/>
  <match src="call_expression [61890,61907]" dest="call_expression [61897,61914]"/>
  <match src="(: ( [48952,48953]" dest="(: ( [48952,48953]"/>
  <match src="comment: /**  * @title ERC721 token receiver interface  * @dev Interface for any contract that wants to support safeTransfers  * from ERC721 asset contracts.  */ [23047,23203]" dest="comment: /**  * @title ERC721 token receiver interface  * @dev Interface for any contract that wants to support safeTransfers  * from ERC721 asset contracts.  */ [23047,23203]"/>
  <match src="parameter [40923,40944]" dest="parameter [40923,40944]"/>
  <match src="primitive_type [4978,4982]" dest="primitive_type [4978,4982]"/>
  <match src="public: public [58570,58576]" dest="public: public [58577,58583]"/>
  <match src="number_literal: 8 [62204,62205]" dest="number_literal: 8 [62211,62212]"/>
  <match src="&quot;: &quot; [63708,63709]" dest="&quot;: &quot; [63715,63716]"/>
  <match src="primitive_type [29997,30002]" dest="primitive_type [29997,30002]"/>
  <match src="struct_declaration [36096,36381]" dest="struct_declaration [36096,36381]"/>
  <match src="): ) [15187,15188]" dest="): ) [15187,15188]"/>
  <match src="(: ( [74455,74456]" dest="(: ( [74462,74463]"/>
  <match src="type_name [2479,2486]" dest="type_name [2479,2486]"/>
  <match src=".: . [74643,74644]" dest=".: . [74650,74651]"/>
  <match src="uint256: uint256 [6186,6193]" dest="uint256: uint256 [6186,6193]"/>
  <match src="binary_expression [77534,77547]" dest="binary_expression [77541,77554]"/>
  <match src="expression_statement [69615,69653]" dest="expression_statement [69622,69660]"/>
  <match src="identifier: to [43409,43411]" dest="identifier: to [43409,43411]"/>
  <match src="uint16: uint16 [1935,1941]" dest="uint16: uint16 [1935,1941]"/>
  <match src="parameter [42677,42692]" dest="parameter [42677,42692]"/>
  <match src="(: ( [43662,43663]" dest="(: ( [43662,43663]"/>
  <match src="function: function [12725,12733]" dest="function: function [12725,12733]"/>
  <match src="): ) [6576,6577]" dest="): ) [6576,6577]"/>
  <match src="): ) [6882,6883]" dest="): ) [6882,6883]"/>
  <match src="identifier: operator [18948,18956]" dest="identifier: operator [18948,18956]"/>
  <match src="[: [ [59652,59653]" dest="[: [ [59659,59660]"/>
  <match src="call_argument [77698,77711]" dest="call_argument [77705,77718]"/>
  <match src="identifier: seed [77064,77068]" dest="identifier: seed [77071,77075]"/>
  <match src="parameter [494,516]" dest="parameter [494,516]"/>
  <match src="parenthesized_expression [48042,48064]" dest="parenthesized_expression [48042,48064]"/>
  <match src="): ) [64969,64970]" dest="): ) [64976,64977]"/>
  <match src="(: ( [13749,13750]" dest="(: ( [13749,13750]"/>
  <match src="function: function [2425,2433]" dest="function: function [2425,2433]"/>
  <match src="call_argument [64661,64667]" dest="call_argument [64668,64674]"/>
  <match src="[: [ [62511,62512]" dest="[: [ [62518,62519]"/>
  <match src="return_statement [26045,26076]" dest="return_statement [26045,26076]"/>
  <match src="call_struct_argument [79314,79349]" dest="call_struct_argument [79321,79356]"/>
  <match src="{: { [74523,74524]" dest="{: { [74530,74531]"/>
  <match src="identifier: _startTokenId [61778,61791]" dest="identifier: _startTokenId [61785,61798]"/>
  <match src="): ) [5667,5668]" dest="): ) [5667,5668]"/>
  <match src="(: ( [77109,77110]" dest="(: ( [77116,77117]"/>
  <match src="): ) [42866,42867]" dest="): ) [42866,42867]"/>
  <match src="}: } [11276,11277]" dest="}: } [11276,11277]"/>
  <match src="type_name [47908,47915]" dest="type_name [47908,47915]"/>
  <match src="=: = [54442,54443]" dest="=: = [54442,54443]"/>
  <match src="function_definition [4808,4874]" dest="function_definition [4808,4874]"/>
  <match src="type_name [58812,58816]" dest="type_name [58819,58823]"/>
  <match src="&quot;: &quot; [43663,43664]" dest="&quot;: &quot; [43663,43664]"/>
  <match src="=: = [71170,71171]" dest="=: = [71177,71178]"/>
  <match src="(: ( [45207,45208]" dest="(: ( [45207,45208]"/>
  <match src="(: ( [13860,13861]" dest="(: ( [13860,13861]"/>
  <match src="type_name [5403,5410]" dest="type_name [5403,5410]"/>
  <match src="identifier: _tokenApprovals [37697,37712]" dest="identifier: _tokenApprovals [37697,37712]"/>
  <match src="primitive_type [37183,37189]" dest="primitive_type [37183,37189]"/>
  <match src="expression_statement [64516,64545]" dest="expression_statement [64523,64552]"/>
  <match src="call_argument [31061,31068]" dest="call_argument [31061,31068]"/>
  <match src="]: ] [79004,79005]" dest="]: ] [79011,79012]"/>
  <match src="primitive_type [68184,68188]" dest="primitive_type [68191,68195]"/>
  <match src="&quot;: &quot; [43557,43558]" dest="&quot;: &quot; [43557,43558]"/>
  <match src="): ) [10787,10788]" dest="): ) [10787,10788]"/>
  <match src="comment: //     uint8 accessory; Von Schbeagle's Lab Coat [71625,71673]" dest="comment: //     uint8 accessory; Von Schbeagle's Lab Coat [71632,71680]"/>
  <match src="call_expression [80418,80462]" dest="call_expression [80425,80469]"/>
  <match src="call_argument [68357,68442]" dest="call_argument [68364,68449]"/>
  <match src="identifier: topCommoner_ [70817,70829]" dest="identifier: topCommoner_ [70824,70836]"/>
  <match src="(: ( [64249,64250]" dest="(: ( [64256,64257]"/>
  <match src="): ) [52595,52596]" dest="): ) [52595,52596]"/>
  <match src="(: ( [34626,34627]" dest="(: ( [34626,34627]"/>
  <match src="): ) [66795,66796]" dest="): ) [66802,66803]"/>
  <match src="type_name [6224,6230]" dest="type_name [6224,6230]"/>
  <match src="identifier: isApprovedForAll [52679,52695]" dest="identifier: isApprovedForAll [52679,52695]"/>
  <match src="parameter [2372,2376]" dest="parameter [2372,2376]"/>
  <match src="identifier: sender [61015,61021]" dest="identifier: sender [61022,61028]"/>
  <match src="): ) [79993,79994]" dest="): ) [80000,80001]"/>
  <match src="call_expression [52760,52772]" dest="call_expression [52760,52772]"/>
  <match src="number_literal: 5 [73242,73243]" dest="number_literal: 5 [73249,73250]"/>
  <match src="primitive_type [31320,31327]" dest="primitive_type [31320,31327]"/>
  <match src="block_statement [69133,69231]" dest="block_statement [69140,69238]"/>
  <match src="type_name [78892,78910]" dest="type_name [78899,78917]"/>
  <match src="uint256: uint256 [4897,4904]" dest="uint256: uint256 [4897,4904]"/>
  <match src="primitive_type [1935,1941]" dest="primitive_type [1935,1941]"/>
  <match src="while: while [7212,7217]" dest="while: while [7212,7217]"/>
  <match src="identifier: target [29293,29299]" dest="identifier: target [29293,29299]"/>
  <match src="identifier: RecoverError [8925,8937]" dest="identifier: RecoverError [8925,8937]"/>
  <match src="type_name [31724,31731]" dest="type_name [31724,31731]"/>
  <match src="]: ] [61140,61141]" dest="]: ] [61147,61148]"/>
  <match src="identifier: data [31998,32002]" dest="identifier: data [31998,32002]"/>
  <match src="call_argument [48450,48458]" dest="call_argument [48450,48458]"/>
  <match src="primitive_type [51358,51365]" dest="primitive_type [51358,51365]"/>
  <match src="string [31882,31922]" dest="string [31882,31922]"/>
  <match src=",: , [49892,49893]" dest=",: , [49892,49893]"/>
  <match src="interface: interface [18342,18351]" dest="interface: interface [18342,18351]"/>
  <match src="call_argument [64057,64068]" dest="call_argument [64064,64075]"/>
  <match src="return: return [76535,76541]" dest="return: return [76542,76548]"/>
  <match src="=: = [74468,74469]" dest="=: = [74475,74476]"/>
  <match src="identifier: msg [64524,64527]" dest="identifier: msg [64531,64534]"/>
  <match src="call_argument [64639,64649]" dest="call_argument [64646,64656]"/>
  <match src="assignment_expression [53633,53653]" dest="assignment_expression [53633,53653]"/>
  <match src="{: { [28653,28654]" dest="{: { [28653,28654]"/>
  <match src="&quot;: &quot; [61611,61612]" dest="&quot;: &quot; [61618,61619]"/>
  <match src="expression_statement [7740,7778]" dest="expression_statement [7740,7778]"/>
  <match src="comment: //     return GENESIS_SUPPLY; [78647,78676]" dest="comment: //     return GENESIS_SUPPLY; [78654,78683]"/>
  <match src="parenthesized_expression [44797,44824]" dest="parenthesized_expression [44797,44824]"/>
  <match src="state_mutability [32444,32448]" dest="state_mutability [32444,32448]"/>
  <match src=",: , [48983,48984]" dest=",: , [48983,48984]"/>
  <match src="): ) [55003,55004]" dest="): ) [55003,55004]"/>
  <match src="return_statement [75518,75527]" dest="return_statement [75525,75534]"/>
  <match src="uint256: uint256 [59058,59065]" dest="uint256: uint256 [59065,59072]"/>
  <match src="call_argument [52919,52920]" dest="call_argument [52919,52920]"/>
  <match src="identifier: IDogewoodForCommonerSale [2256,2280]" dest="identifier: IDogewoodForCommonerSale [2256,2280]"/>
  <match src="expression_statement [66807,66848]" dest="expression_statement [66814,66855]"/>
  <match src="assignment_expression [77086,77135]" dest="assignment_expression [77093,77142]"/>
  <match src="comment: //     existingCombinations[structToHash(t)] = tokenId; [75746,75801]" dest="comment: //     existingCombinations[structToHash(t)] = tokenId; [75753,75808]"/>
  <match src="virtual: virtual [57064,57071]" dest="virtual: virtual [57064,57071]"/>
  <match src="&amp;: &amp; [77539,77540]" dest="&amp;: &amp; [77546,77547]"/>
  <match src="function: function [40258,40266]" dest="function: function [40258,40266]"/>
  <match src="+: + [69377,69378]" dest="+: + [69384,69385]"/>
  <match src="]: ] [63274,63275]" dest="]: ] [63281,63282]"/>
  <match src="variable_declaration_statement [10993,11004]" dest="variable_declaration_statement [10993,11004]"/>
  <match src="call_argument [69200,69218]" dest="call_argument [69207,69225]"/>
  <match src="call_argument [31882,31922]" dest="call_argument [31882,31922]"/>
  <match src="expression_statement [75485,75508]" dest="expression_statement [75492,75515]"/>
  <match src="visibility [3637,3645]" dest="visibility [3637,3645]"/>
  <match src="==: == [54141,54143]" dest="==: == [54141,54143]"/>
  <match src="member_expression [42947,42963]" dest="member_expression [42947,42963]"/>
  <match src="function_definition [5379,5460]" dest="function_definition [5379,5460]"/>
  <match src="(: ( [29824,29825]" dest="(: ( [29824,29825]"/>
  <match src="member_expression [51800,51828]" dest="member_expression [51800,51828]"/>
  <match src="): ) [77711,77712]" dest="): ) [77718,77719]"/>
  <match src="identifier: tokenId [45589,45596]" dest="identifier: tokenId [45589,45596]"/>
  <match src="identifier: _ownershipOf [49984,49996]" dest="identifier: _ownershipOf [49984,49996]"/>
  <match src="override: override [39523,39531]" dest="override: override [39523,39531]"/>
  <match src=",: , [55087,55088]" dest=",: , [55087,55088]"/>
  <match src="number_literal: 1 [63390,63391]" dest="number_literal: 1 [63397,63398]"/>
  <match src="=&gt;: =&gt; [58145,58147]" dest="=&gt;: =&gt; [58145,58147]"/>
  <match src=".: . [66458,66459]" dest=".: . [66465,66466]"/>
  <match src="[: [ [70868,70869]" dest="[: [ [70875,70876]"/>
  <match src="type_name [47842,47847]" dest="type_name [47842,47847]"/>
  <match src="&quot;: &quot; [29356,29357]" dest="&quot;: &quot; [29356,29357]"/>
  <match src="user_defined_type [15666,15678]" dest="user_defined_type [15666,15678]"/>
  <match src="parameter [3969,3979]" dest="parameter [3969,3979]"/>
  <match src="function: function [24529,24537]" dest="function: function [24529,24537]"/>
  <match src="parameter [1864,1875]" dest="parameter [1864,1875]"/>
  <match src="comment: // Creator: Chiru Labs [34764,34786]" dest="comment: // Creator: Chiru Labs [34764,34786]"/>
  <match src="binary_expression [68042,68104]" dest="binary_expression [68049,68111]"/>
  <match src="parameter [76883,76910]" dest="parameter [76890,76917]"/>
  <match src="binary_expression [7833,7843]" dest="binary_expression [7833,7843]"/>
  <match src="parenthesized_expression [50056,50088]" dest="parenthesized_expression [50056,50088]"/>
  <match src="{: { [40946,40947]" dest="{: { [40946,40947]"/>
  <match src="): ) [64714,64715]" dest="): ) [64721,64722]"/>
  <match src="return: return [42566,42572]" dest="return: return [42566,42572]"/>
  <match src="(: ( [43894,43895]" dest="(: ( [43894,43895]"/>
  <match src="number_literal: 1 [62555,62556]" dest="number_literal: 1 [62562,62563]"/>
  <match src="]: ] [62947,62948]" dest="]: ] [62954,62955]"/>
  <match src="identifier: quantity_ [67147,67156]" dest="identifier: quantity_ [67154,67163]"/>
  <match src="type_cast_expression [78032,78387]" dest="type_cast_expression [78039,78394]"/>
  <match src="view: view [19333,19337]" dest="view: view [19333,19337]"/>
  <match src="identifier: transferOwnership [65073,65090]" dest="identifier: transferOwnership [65080,65097]"/>
  <match src="(: ( [66260,66261]" dest="(: ( [66267,66268]"/>
  <match src="array_access [62588,62599]" dest="array_access [62595,62606]"/>
  <match src="memory: memory [525,531]" dest="memory: memory [525,531]"/>
  <match src="(: ( [107,108]" dest="(: ( [107,108]"/>
  <match src="assignment_expression [75485,75507]" dest="assignment_expression [75492,75514]"/>
  <match src="function: function [42168,42176]" dest="function: function [42168,42176]"/>
  <match src="&quot;: &quot; [30468,30469]" dest="&quot;: &quot; [30468,30469]"/>
  <match src="]: ] [59443,59444]" dest="]: ] [59450,59451]"/>
  <match src="function: function [38753,38761]" dest="function: function [38753,38761]"/>
  <match src="function_definition [39477,39686]" dest="function_definition [39477,39686]"/>
  <match src="): ) [15222,15223]" dest="): ) [15222,15223]"/>
  <match src="uint256: uint256 [78852,78859]" dest="uint256: uint256 [78859,78866]"/>
  <match src="parameter [33674,33681]" dest="parameter [33674,33681]"/>
  <match src="uint256: uint256 [6793,6800]" dest="uint256: uint256 [6793,6800]"/>
  <match src="identifier: r [11179,11180]" dest="identifier: r [11179,11180]"/>
  <match src="external: external [4551,4559]" dest="external: external [4551,4559]"/>
  <match src="(: ( [13093,13094]" dest="(: ( [13093,13094]"/>
  <match src="call_argument [77117,77130]" dest="call_argument [77124,77137]"/>
  <match src="identifier: quantity [47480,47488]" dest="identifier: quantity [47480,47488]"/>
  <match src="type_name [58675,58684]" dest="type_name [58682,58691]"/>
  <match src="identifier: owner [43592,43597]" dest="identifier: owner [43592,43597]"/>
  <match src="number_literal: 1 [62891,62892]" dest="number_literal: 1 [62898,62899]"/>
  <match src="): ) [45117,45118]" dest="): ) [45117,45118]"/>
  <match src="function: function [27018,27026]" dest="function: function [27018,27026]"/>
  <match src="identifier: hash [16117,16121]" dest="identifier: hash [16117,16121]"/>
  <match src="true [63572,63576]" dest="true [63579,63583]"/>
  <match src="visibility [755,763]" dest="visibility [755,763]"/>
  <match src="}: } [64676,64677]" dest="}: } [64683,64684]"/>
  <match src=".: . [46857,46858]" dest=".: . [46857,46858]"/>
  <match src="{: { [54352,54353]" dest="{: { [54352,54353]"/>
  <match src="yul_function_call [12940,13015]" dest="yul_function_call [12940,13015]"/>
  <match src="variable_declaration [74456,74467]" dest="variable_declaration [74463,74474]"/>
  <match src="memory: memory [45869,45875]" dest="memory: memory [45869,45875]"/>
  <match src="state_mutability [1426,1430]" dest="state_mutability [1426,1430]"/>
  <match src="identifier: nextSlot [54418,54426]" dest="identifier: nextSlot [54418,54426]"/>
  <match src="parameter [10141,10153]" dest="parameter [10141,10153]"/>
  <match src="uint256: uint256 [1329,1336]" dest="uint256: uint256 [1329,1336]"/>
  <match src="comment: /**      * @dev See {IERC721-safeTransferFrom}.      */ [45694,45751]" dest="comment: /**      * @dev See {IERC721-safeTransferFrom}.      */ [45694,45751]"/>
  <match src="boolean_literal [66287,66292]" dest="boolean_literal [66294,66299]"/>
  <match src=".: . [16818,16819]" dest=".: . [16818,16819]"/>
  <match src="type_name [12755,12762]" dest="type_name [12755,12762]"/>
  <match src="expression_statement [52883,52935]" dest="expression_statement [52883,52935]"/>
  <match src="identifier: whitelistMinted [67233,67248]" dest="identifier: whitelistMinted [67240,67255]"/>
  <match src="*: * [7699,7700]" dest="*: * [7699,7700]"/>
  <match src="): ) [51706,51707]" dest="): ) [51706,51707]"/>
  <match src="return_type_definition [10193,10224]" dest="return_type_definition [10193,10224]"/>
  <match src="parameter [29740,29766]" dest="parameter [29740,29766]"/>
  <match src="&quot;: &quot; [8770,8771]" dest="&quot;: &quot; [8770,8771]"/>
  <match src="if: if [39561,39563]" dest="if: if [39561,39563]"/>
  <match src="revert_statement [45270,45316]" dest="revert_statement [45270,45316]"/>
  <match src=",: , [55830,55831]" dest=",: , [55830,55831]"/>
  <match src="): ) [50048,50049]" dest="): ) [50048,50049]"/>
  <match src="state_mutability [39815,39819]" dest="state_mutability [39815,39819]"/>
  <match src="assignment_expression [70859,70894]" dest="assignment_expression [70866,70901]"/>
  <match src="call_argument [63844,63855]" dest="call_argument [63851,63862]"/>
  <match src="uint256: uint256 [108,115]" dest="uint256: uint256 [108,115]"/>
  <match src="variable_declaration [48673,48693]" dest="variable_declaration [48673,48693]"/>
  <match src="state_variable_declaration [59645,59672]" dest="state_variable_declaration [59652,59679]"/>
  <match src="type_name [80784,80789]" dest="type_name [80791,80796]"/>
  <match src="augmented_assignment_expression [77311,77322]" dest="augmented_assignment_expression [77318,77329]"/>
  <match src="comment: /**      * @dev Returns true if this contract implements the interface defined by      * `interfaceId`. See the corresponding      * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]      * to learn more about how these ids are created.      *      * This function call must use less than 30 000 gas.      */ [17774,18121]" dest="comment: /**      * @dev Returns true if this contract implements the interface defined by      * `interfaceId`. See the corresponding      * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]      * to learn more about how these ids are created.      *      * This function call must use less than 30 000 gas.      */ [17774,18121]"/>
  <match src="(: ( [12247,12248]" dest="(: ( [12247,12248]"/>
  <match src="identifier: _addressData [48474,48486]" dest="identifier: _addressData [48474,48486]"/>
  <match src="parenthesized_expression [43944,43982]" dest="parenthesized_expression [43944,43982]"/>
  <match src="return: return [6862,6868]" dest="return: return [6862,6868]"/>
  <match src="&quot;: &quot; [67106,67107]" dest="&quot;: &quot; [67113,67114]"/>
  <match src="call_expression [64080,64216]" dest="call_expression [64087,64223]"/>
  <match src="call_argument [39650,39677]" dest="call_argument [39650,39677]"/>
  <match src="comment: // of the constructor execution. [26001,26033]" dest="comment: // of the constructor execution. [26001,26033]"/>
  <match src="primitive_type [19084,19091]" dest="primitive_type [19084,19091]"/>
  <match src="string [68948,68975]" dest="string [68955,68982]"/>
  <match src="revert_statement [49020,49071]" dest="revert_statement [49020,49071]"/>
  <match src="): ) [15223,15224]" dest="): ) [15223,15224]"/>
  <match src="type_name [48723,48730]" dest="type_name [48723,48730]"/>
  <match src="mapping: mapping [59801,59808]" dest="mapping: mapping [59808,59815]"/>
  <match src="identifier: Doge2 [991,996]" dest="identifier: Doge2 [991,996]"/>
  <match src="identifier: i [66280,66281]" dest="identifier: i [66287,66288]"/>
  <match src="primitive_type [53694,53700]" dest="primitive_type [53694,53700]"/>
  <match src="visibility [2456,2464]" dest="visibility [2456,2464]"/>
  <match src="array_access [62318,62328]" dest="array_access [62325,62335]"/>
  <match src=",: , [55680,55681]" dest=",: , [55680,55681]"/>
  <match src="primitive_type [36534,36540]" dest="primitive_type [36534,36540]"/>
  <match src="contract_body [3576,3720]" dest="contract_body [3576,3720]"/>
  <match src="expression_statement [73208,73244]" dest="expression_statement [73215,73251]"/>
  <match src="(: ( [41234,41235]" dest="(: ( [41234,41235]"/>
  <match src="identifier: startTimestamp [36290,36304]" dest="identifier: startTimestamp [36290,36304]"/>
  <match src="]: ] [81159,81160]" dest="]: ] [81166,81167]"/>
  <match src="visibility [38380,38386]" dest="visibility [38380,38386]"/>
  <match src="call_argument [31070,31080]" dest="call_argument [31070,31080]"/>
  <match src="return: return [32014,32020]" dest="return: return [32014,32020]"/>
  <match src="uint8: uint8 [5849,5854]" dest="uint8: uint8 [5849,5854]"/>
  <match src="): ) [74880,74881]" dest="): ) [74887,74888]"/>
  <match src="): ) [6237,6238]" dest="): ) [6237,6238]"/>
  <match src="(: ( [59057,59058]" dest="(: ( [59064,59065]"/>
  <match src="struct_member [4389,4403]" dest="struct_member [4389,4403]"/>
  <match src="number_literal: 7 [62344,62345]" dest="number_literal: 7 [62351,62352]"/>
  <match src="state_variable_declaration [37234,37258]" dest="state_variable_declaration [37234,37258]"/>
  <match src="&quot;: &quot; [28262,28263]" dest="&quot;: &quot; [28262,28263]"/>
  <match src="user_defined_type [78892,78910]" dest="user_defined_type [78899,78917]"/>
  <match src="{: { [8835,8836]" dest="{: { [8835,8836]"/>
  <match src="comment: // } [38030,38034]" dest="comment: // } [38030,38034]"/>
  <match src="identifier: functionDelegateCall [31405,31425]" dest="identifier: functionDelegateCall [31405,31425]"/>
  <match src="primitive_type [67756,67761]" dest="primitive_type [67763,67768]"/>
  <match src="identifier: owner [4493,4498]" dest="identifier: owner [4493,4498]"/>
  <match src="identifier: auth [65030,65034]" dest="identifier: auth [65037,65041]"/>
  <match src="primitive_type [302,309]" dest="primitive_type [302,309]"/>
  <match src="identifier: traits [80002,80008]" dest="identifier: traits [80009,80015]"/>
  <match src="return_type_definition [13390,13407]" dest="return_type_definition [13390,13407]"/>
  <match src="{: { [33614,33615]" dest="{: { [33614,33615]"/>
  <match src="bytes32: bytes32 [16712,16719]" dest="bytes32: bytes32 [16712,16719]"/>
  <match src="if: if [15199,15201]" dest="if: if [15199,15201]"/>
  <match src="return_statement [8507,8514]" dest="return_statement [8507,8514]"/>
  <match src=",: , [3798,3799]" dest=",: , [3798,3799]"/>
  <match src="assignment_expression [81061,81094]" dest="assignment_expression [81068,81101]"/>
  <match src="primitive_type [64399,64403]" dest="primitive_type [64406,64410]"/>
  <match src="mapping: mapping [37789,37796]" dest="mapping: mapping [37789,37796]"/>
  <match src="identifier: commoners [70756,70765]" dest="identifier: commoners [70763,70772]"/>
  <match src="): ) [65250,65251]" dest="): ) [65257,65258]"/>
  <match src=",: , [5832,5833]" dest=",: , [5832,5833]"/>
  <match src="view: view [46741,46745]" dest="view: view [46741,46745]"/>
  <match src="): ) [8431,8432]" dest="): ) [8431,8432]"/>
  <match src="bool: bool [58148,58152]" dest="bool: bool [58148,58152]"/>
  <match src="variable_declaration [74538,74550]" dest="variable_declaration [74545,74557]"/>
  <match src="revert_statement [49237,49269]" dest="revert_statement [49237,49269]"/>
  <match src="call_expression [47470,47502]" dest="call_expression [47470,47502]"/>
  <match src=",: , [49871,49872]" dest=",: , [49871,49872]"/>
  <match src="call_argument [65928,65959]" dest="call_argument [65935,65966]"/>
  <match src="comment: // Token symbol [37213,37228]" dest="comment: // Token symbol [37213,37228]"/>
  <match src="(: ( [18153,18154]" dest="(: ( [18153,18154]"/>
  <match src="(: ( [64117,64118]" dest="(: ( [64124,64125]"/>
  <match src="uint256: uint256 [4471,4478]" dest="uint256: uint256 [4471,4478]"/>
  <match src="}: } [49093,49094]" dest="}: } [49093,49094]"/>
  <match src="type_name [847,854]" dest="type_name [847,854]"/>
  <match src="): ) [29219,29220]" dest="): ) [29219,29220]"/>
  <match src="identifier: number [79015,79021]" dest="identifier: number [79022,79028]"/>
  <match src="expression_statement [66253,66313]" dest="expression_statement [66260,66320]"/>
  <match src="(: ( [78851,78852]" dest="(: ( [78858,78859]"/>
  <match src="member_expression [66452,66465]" dest="member_expression [66459,66472]"/>
  <match src="if: if [76491,76493]" dest="if: if [76498,76500]"/>
  <match src="call_expression [45394,45422]" dest="call_expression [45394,45422]"/>
  <match src="call_argument [77444,77465]" dest="call_argument [77451,77472]"/>
  <match src="(: ( [341,342]" dest="(: ( [341,342]"/>
  <match src="function_definition [80668,81366]" dest="function_definition [80675,81373]"/>
  <match src="type_name [3432,3439]" dest="type_name [3432,3439]"/>
  <match src="contract_body [5996,7923]" dest="contract_body [5996,7923]"/>
  <match src="if_statement [43508,43560]" dest="if_statement [43508,43560]"/>
  <match src="assignment_expression [76927,76973]" dest="assignment_expression [76934,76980]"/>
  <match src="assignment_expression [74033,74071]" dest="assignment_expression [74040,74078]"/>
  <match src="identifier: to [48487,48489]" dest="identifier: to [48487,48489]"/>
  <match src="=: = [55049,55050]" dest="=: = [55049,55050]"/>
  <match src="call_expression [49984,50005]" dest="call_expression [49984,50005]"/>
  <match src="comment: // WL with mint with ETH [66483,66507]" dest="comment: // WL with mint with ETH [66490,66514]"/>
  <match src="identifier: topTalentNo [289,300]" dest="identifier: topTalentNo [289,300]"/>
  <match src="comment: /**      * @dev Returns an Ethereum Signed Message, created from a `hash`. This      * produces hash corresponding to the one signed with the      * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]      * JSON-RPC method as part of EIP-191.      *      * See {recover}.      */ [15785,16071]" dest="comment: /**      * @dev Returns an Ethereum Signed Message, created from a `hash`. This      * produces hash corresponding to the one signed with the      * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]      * JSON-RPC method as part of EIP-191.      *      * See {recover}.      */ [15785,16071]"/>
  <match src="member_expression [32632,32649]" dest="member_expression [32632,32649]"/>
  <match src="expression_statement [63679,63721]" dest="expression_statement [63686,63728]"/>
  <match src="address: address [40575,40582]" dest="address: address [40575,40582]"/>
  <match src="call_argument [77028,77049]" dest="call_argument [77035,77056]"/>
  <match src="identifier: bodyType [5758,5766]" dest="identifier: bodyType [5758,5766]"/>
  <match src="identifier: transfer [63919,63927]" dest="identifier: transfer [63926,63934]"/>
  <match src="{: { [68912,68913]" dest="{: { [68919,68920]"/>
  <match src="[: [ [81114,81115]" dest="[: [ [81121,81122]"/>
  <match src="view: view [5008,5012]" dest="view: view [5008,5012]"/>
  <match src="state_variable_declaration [58297,58325]" dest="state_variable_declaration [58297,58325]"/>
  <match src="array_access [72717,72740]" dest="array_access [72724,72747]"/>
  <match src="primitive_type [58148,58152]" dest="primitive_type [58148,58152]"/>
  <match src="call_argument [27141,27172]" dest="call_argument [27141,27172]"/>
  <match src="primitive_type [3497,3504]" dest="primitive_type [3497,3504]"/>
  <match src="expression_statement [47470,47503]" dest="expression_statement [47470,47503]"/>
  <match src="payable: payable [67798,67805]" dest="payable: payable [67805,67812]"/>
  <match src="function_body [40946,41973]" dest="function_body [40946,41973]"/>
  <match src="type_name [3511,3518]" dest="type_name [3511,3518]"/>
  <match src="function_definition [28502,28731]" dest="function_definition [28502,28731]"/>
  <match src=".: . [73889,73890]" dest=".: . [73896,73897]"/>
  <match src="parameter [1533,1537]" dest="parameter [1533,1537]"/>
  <match src="external: external [4611,4619]" dest="external: external [4611,4619]"/>
  <match src="parameter [4500,4513]" dest="parameter [4500,4513]"/>
  <match src="parameter [47376,47386]" dest="parameter [47376,47386]"/>
  <match src=",: , [63487,63488]" dest=",: , [63494,63495]"/>
  <match src="function_body [16721,16839]" dest="function_body [16721,16839]"/>
  <match src="&quot;: &quot; [67916,67917]" dest="&quot;: &quot; [67923,67924]"/>
  <match src="type_name [5800,5805]" dest="type_name [5800,5805]"/>
  <match src="uint8: uint8 [80696,80701]" dest="uint8: uint8 [80703,80708]"/>
  <match src="primitive_type [15213,15220]" dest="primitive_type [15213,15220]"/>
  <match src=":=: := [11181,11183]" dest=":=: := [11181,11183]"/>
  <match src="identifier: _currentIndex [49206,49219]" dest="identifier: _currentIndex [49206,49219]"/>
  <match src="array_access [62440,62450]" dest="array_access [62447,62457]"/>
  <match src="address: address [1496,1503]" dest="address: address [1496,1503]"/>
  <match src="identifier: topCommoner_ [73770,73782]" dest="identifier: topCommoner_ [73777,73789]"/>
  <match src="call_argument [79107,79622]" dest="call_argument [79114,79629]"/>
  <match src="string_literal [7845,7879]" dest="string_literal [7845,7879]"/>
  <match src="comment: /**      * @dev Returns whether `tokenId` exists.      *      * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.      *      * Tokens start existing when they are minted (`_mint`),      */ [46451,46692]" dest="comment: /**      * @dev Returns whether `tokenId` exists.      *      * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.      *      * Tokens start existing when they are minted (`_mint`),      */ [46451,46692]"/>
  <match src="identifier: background [73066,73076]" dest="identifier: background [73073,73083]"/>
  <match src="{: { [39216,39217]" dest="{: { [39216,39217]"/>
  <match src="array_access [74033,74056]" dest="array_access [74040,74063]"/>
  <match src="identifier: recovered [15655,15664]" dest="identifier: recovered [15655,15664]"/>
  <match src="internal: internal [37475,37483]" dest="internal: internal [37475,37483]"/>
  <match src="if_statement [52578,52871]" dest="if_statement [52578,52871]"/>
  <match src="visibility [37134,37142]" dest="visibility [37134,37142]"/>
  <match src="expression_statement [66752,66797]" dest="expression_statement [66759,66804]"/>
  <match src=".: . [72898,72899]" dest=".: . [72905,72906]"/>
  <match src="parameter [78852,78867]" dest="parameter [78859,78874]"/>
  <match src="identifier: temp [6512,6516]" dest="identifier: temp [6512,6516]"/>
  <match src="(: ( [45159,45160]" dest="(: ( [45159,45160]"/>
  <match src="identifier: clothes [80758,80765]" dest="identifier: clothes [80765,80772]"/>
  <match src="identifier: temp [7268,7272]" dest="identifier: temp [7268,7272]"/>
  <match src="variable_declaration [7183,7197]" dest="variable_declaration [7183,7197]"/>
  <match src="*: * [69185,69186]" dest="*: * [69192,69193]"/>
  <match src="primitive_type [65697,65703]" dest="primitive_type [65704,65710]"/>
  <match src="): ) [16829,16830]" dest="): ) [16829,16830]"/>
  <match src="uint8: uint8 [67756,67761]" dest="uint8: uint8 [67763,67768]"/>
  <match src="return_statement [80068,80100]" dest="return_statement [80075,80107]"/>
  <match src=".: . [80562,80563]" dest=".: . [80569,80570]"/>
  <match src="visibility [3070,3078]" dest="visibility [3070,3078]"/>
  <match src="type_name [10141,10148]" dest="type_name [10141,10148]"/>
  <match src=".: . [78065,78066]" dest=".: . [78072,78073]"/>
  <match src="identifier: to [21333,21335]" dest="identifier: to [21333,21335]"/>
  <match src="type_name [16712,16719]" dest="type_name [16712,16719]"/>
  <match src="primitive_type [108,115]" dest="primitive_type [108,115]"/>
  <match src=",: , [79151,79152]" dest=",: , [79158,79159]"/>
  <match src="call_struct_argument [79212,79247]" dest="call_struct_argument [79219,79254]"/>
  <match src="function_body [61518,63409]" dest="function_body [61525,63416]"/>
  <match src="identifier: setCastle [64694,64703]" dest="identifier: setCastle [64701,64710]"/>
  <match src="if: if [10432,10434]" dest="if: if [10432,10434]"/>
  <match src="==: == [65951,65953]" dest="==: == [65958,65960]"/>
  <match src="primitive_type [74848,74855]" dest="primitive_type [74855,74862]"/>
  <match src="): ) [80846,80847]" dest="): ) [80853,80854]"/>
  <match src="address: address [2034,2041]" dest="address: address [2034,2041]"/>
  <match src="else: else [32541,32545]" dest="else: else [32541,32545]"/>
  <match src="address: address [2479,2486]" dest="address: address [2479,2486]"/>
  <match src="call_argument [16279,16337]" dest="call_argument [16279,16337]"/>
  <match src="(: ( [15514,15515]" dest="(: ( [15514,15515]"/>
  <match src="visibility [34647,34653]" dest="visibility [34647,34653]"/>
  <match src="call_argument [51910,51917]" dest="call_argument [51910,51917]"/>
  <match src="): ) [68198,68199]" dest="): ) [68205,68206]"/>
  <match src="identifier: amount [3629,3635]" dest="identifier: amount [3629,3635]"/>
  <match src="visibility [4775,4783]" dest="visibility [4775,4783]"/>
  <match src="identifier: transfer [44648,44656]" dest="identifier: transfer [44648,44656]"/>
  <match src="identifier: success [31061,31068]" dest="identifier: success [31061,31068]"/>
  <match src="): ) [51105,51106]" dest="): ) [51105,51106]"/>
  <match src="expression_statement [7654,7670]" dest="expression_statement [7654,7670]"/>
  <match src="string: string [42540,42546]" dest="string: string [42540,42546]"/>
  <match src="identifier: prevOwnership [49968,49981]" dest="identifier: prevOwnership [49968,49981]"/>
  <match src="(: ( [3431,3432]" dest="(: ( [3431,3432]"/>
  <match src="[: [ [62951,62952]" dest="[: [ [62958,62959]"/>
  <match src="type_name [42208,42215]" dest="type_name [42208,42215]"/>
  <match src="member_expression [78148,78157]" dest="member_expression [78155,78164]"/>
  <match src="identifier: _ownerships [41123,41134]" dest="identifier: _ownerships [41123,41134]"/>
  <match src="identifier: isApprovedOrOwner [52617,52634]" dest="identifier: isApprovedOrOwner [52617,52634]"/>
  <match src=",: , [4483,4484]" dest=",: , [4483,4484]"/>
  <match src="parameter [1838,1849]" dest="parameter [1838,1849]"/>
  <match src="inline_array_expression [63194,63213]" dest="inline_array_expression [63201,63220]"/>
  <match src="external: external [63787,63795]" dest="external: external [63794,63802]"/>
  <match src="type_name [6648,6653]" dest="type_name [6648,6653]"/>
  <match src="binary_expression [67129,67171]" dest="binary_expression [67136,67178]"/>
  <match src="identifier: curr [41040,41044]" dest="identifier: curr [41040,41044]"/>
  <match src="assignment_expression [65168,65184]" dest="assignment_expression [65175,65191]"/>
  <match src="comment: // additional entry $TREAT [4137,4163]" dest="comment: // additional entry $TREAT [4137,4163]"/>
  <match src="): ) [49267,49268]" dest="): ) [49267,49268]"/>
  <match src="-=: -= [53417,53419]" dest="-=: -= [53417,53419]"/>
  <match src="(: ( [34728,34729]" dest="(: ( [34728,34729]"/>
  <match src="=: = [77014,77015]" dest="=: = [77021,77022]"/>
  <match src="): ) [7557,7558]" dest="): ) [7557,7558]"/>
  <match src="identifier: approve [43393,43400]" dest="identifier: approve [43393,43400]"/>
  <match src="type_name [40275,40282]" dest="type_name [40275,40282]"/>
  <match src="return_statement [31398,31483]" dest="return_statement [31398,31483]"/>
  <match src="string [39593,39623]" dest="string [39593,39623]"/>
  <match src="identifier: startTokenId [48602,48614]" dest="identifier: startTokenId [48602,48614]"/>
  <match src="function_body [68912,69660]" dest="function_body [68919,69667]"/>
  <match src="}: } [14937,14938]" dest="}: } [14937,14938]"/>
  <match src="(: ( [46898,46899]" dest="(: ( [46898,46899]"/>
  <match src="function_definition [16641,16839]" dest="function_definition [16641,16839]"/>
  <match src="state_mutability [558,562]" dest="state_mutability [558,562]"/>
  <match src="primitive_type [31951,31956]" dest="primitive_type [31951,31956]"/>
  <match src=",: , [62211,62212]" dest=",: , [62218,62219]"/>
  <match src="): ) [5492,5493]" dest="): ) [5492,5493]"/>
  <match src=",: , [722,723]" dest=",: , [722,723]"/>
  <match src="identifier: nextTokenId [54096,54107]" dest="identifier: nextTokenId [54096,54107]"/>
  <match src="==: == [45119,45121]" dest="==: == [45119,45121]"/>
  <match src="false: false [52137,52142]" dest="false: false [52137,52142]"/>
  <match src="comment: //     return t; [75811,75827]" dest="comment: //     return t; [75818,75834]"/>
  <match src="returns: returns [18188,18195]" dest="returns: returns [18188,18195]"/>
  <match src="call_argument [66002,66094]" dest="call_argument [66009,66101]"/>
  <match src="number_literal: 2 [62448,62449]" dest="number_literal: 2 [62455,62456]"/>
  <match src="parameter [52412,52430]" dest="parameter [52412,52430]"/>
  <match src="external: external [3872,3880]" dest="external: external [3872,3880]"/>
  <match src="): ) [64214,64215]" dest="): ) [64221,64222]"/>
  <match src="uint256: uint256 [57031,57038]" dest="uint256: uint256 [57031,57038]"/>
  <match src="): ) [355,356]" dest="): ) [355,356]"/>
  <match src="member_expression [66962,66972]" dest="member_expression [66969,66979]"/>
  <match src="array_access [74620,74635]" dest="array_access [74627,74642]"/>
  <match src="if_statement [8457,9028]" dest="if_statement [8457,9028]"/>
  <match src="{: { [41070,41071]" dest="{: { [41070,41071]"/>
  <match src="user_defined_type [50955,50969]" dest="user_defined_type [50955,50969]"/>
  <match src=":=: := [10708,10710]" dest=":=: := [10708,10710]"/>
  <match src="expression_statement [63867,63951]" dest="expression_statement [63874,63958]"/>
  <match src="type_name [45793,45800]" dest="type_name [45793,45800]"/>
  <match src="call_argument [30454,30460]" dest="call_argument [30454,30460]"/>
  <match src="parenthesized_expression [69963,69980]" dest="parenthesized_expression [69970,69987]"/>
  <match src="revert: revert [8850,8856]" dest="revert: revert [8850,8856]"/>
  <match src="array_access [76453,76472]" dest="array_access [76460,76479]"/>
  <match src="[: [ [7764,7765]" dest="[: [ [7764,7765]"/>
  <match src="binary_expression [54322,54350]" dest="binary_expression [54322,54350]"/>
  <match src="variable_declaration_statement [7570,7618]" dest="variable_declaration_statement [7570,7618]"/>
  <match src=",: , [62975,62976]" dest=",: , [62982,62983]"/>
  <match src="type_cast_expression [66027,66044]" dest="type_cast_expression [66034,66051]"/>
  <match src="call_expression [46301,46357]" dest="call_expression [46301,46357]"/>
  <match src="]: ] [62327,62328]" dest="]: ] [62334,62335]"/>
  <match src="yul_identifier [32805,32820]" dest="yul_identifier [32805,32820]"/>
  <match src="type_name [40923,40937]" dest="type_name [40923,40937]"/>
  <match src="identifier: alchemy [79554,79561]" dest="identifier: alchemy [79561,79568]"/>
  <match src="visibility [24253,24261]" dest="visibility [24253,24261]"/>
  <match src="identifier: tokenId [18746,18753]" dest="identifier: tokenId [18746,18753]"/>
  <match src="function_body [57889,57891]" dest="function_body [57889,57891]"/>
  <match src="primitive_type [75380,75387]" dest="primitive_type [75387,75394]"/>
  <match src="): ) [79806,79807]" dest="): ) [79813,79814]"/>
  <match src="call_argument [78323,78332]" dest="call_argument [78330,78339]"/>
  <match src="identifier: name [42324,42328]" dest="identifier: name [42324,42328]"/>
  <match src="call_argument [44787,44788]" dest="call_argument [44787,44788]"/>
  <match src="identifier: quantity [57039,57047]" dest="identifier: quantity [57039,57047]"/>
  <match src=".: . [39275,39276]" dest=".: . [39275,39276]"/>
  <match src="]: ] [63316,63317]" dest="]: ] [63323,63324]"/>
  <match src="inheritance_specifier [35852,35867]" dest="inheritance_specifier [35852,35867]"/>
  <match src=",: , [62629,62630]" dest=",: , [62636,62637]"/>
  <match src="array_access [79585,79603]" dest="array_access [79592,79610]"/>
  <match src="identifier: head [5718,5722]" dest="identifier: head [5718,5722]"/>
  <match src="): ) [31974,31975]" dest="): ) [31974,31975]"/>
  <match src="augmented_assignment_expression [48474,48523]" dest="augmented_assignment_expression [48474,48523]"/>
  <match src="function_definition [80296,80660]" dest="function_definition [80303,80667]"/>
  <match src="call_expression [74553,74571]" dest="call_expression [74560,74578]"/>
  <match src="): ) [33792,33793]" dest="): ) [33792,33793]"/>
  <match src="tuple_expression [14994,15038]" dest="tuple_expression [14994,15038]"/>
  <match src="call_expression [45143,45179]" dest="call_expression [45143,45179]"/>
  <match src="comment: // bool isApprovedOrOwner = (_msgSender() == from || [50101,50153]" dest="comment: // bool isApprovedOrOwner = (_msgSender() == from || [50101,50153]"/>
  <match src="identifier: size [61173,61177]" dest="identifier: size [61180,61184]"/>
  <match src="uint256: uint256 [1661,1668]" dest="uint256: uint256 [1661,1668]"/>
  <match src="primitive_type [56979,56986]" dest="primitive_type [56979,56986]"/>
  <match src="): ) [53716,53717]" dest="): ) [53716,53717]"/>
  <match src="uint16: uint16 [76348,76354]" dest="uint16: uint16 [76355,76361]"/>
  <match src="internal: internal [37134,37142]" dest="internal: internal [37134,37142]"/>
  <match src=",: , [13810,13811]" dest=",: , [13810,13811]"/>
  <match src="{: { [69237,69238]" dest="{: { [69244,69245]"/>
  <match src=",: , [28548,28549]" dest=",: , [28548,28549]"/>
  <match src="identifier: verifyCallResult [31044,31060]" dest="identifier: verifyCallResult [31044,31060]"/>
  <match src="primitive_type [80478,80485]" dest="primitive_type [80485,80492]"/>
  <match src="identifier: to [3977,3979]" dest="identifier: to [3977,3979]"/>
  <match src="member_expression [64999,65009]" dest="member_expression [65006,65016]"/>
  <match src="identifier: validateDogeOwnerForClaim [66046,66071]" dest="identifier: validateDogeOwnerForClaim [66053,66078]"/>
  <match src="internal: internal [74384,74392]" dest="internal: internal [74391,74399]"/>
  <match src="string [68215,68233]" dest="string [68222,68240]"/>
  <match src="variable_declaration_statement [6648,6688]" dest="variable_declaration_statement [6648,6688]"/>
  <match src="parameter [4793,4800]" dest="parameter [4793,4800]"/>
  <match src="identifier: _checkContractOnERC721Received [46301,46331]" dest="identifier: _checkContractOnERC721Received [46301,46331]"/>
  <match src=",: , [64160,64161]" dest=",: , [64167,64168]"/>
  <match src="identifier: accessory [79394,79403]" dest="identifier: accessory [79401,79410]"/>
  <match src="}: } [8783,8784]" dest="}: } [8783,8784]"/>
  <match src="number_literal: 0 [63144,63145]" dest="number_literal: 0 [63151,63152]"/>
  <match src="primitive_type [38187,38194]" dest="primitive_type [38187,38194]"/>
  <match src="primitive_type [29688,29693]" dest="primitive_type [29688,29693]"/>
  <match src="number_literal: 0 [71941,71942]" dest="number_literal: 0 [71948,71949]"/>
  <match src="[: [ [39876,39877]" dest="[: [ [39876,39877]"/>
  <match src="identifier: id [3617,3619]" dest="identifier: id [3617,3619]"/>
  <match src="(: ( [33673,33674]" dest="(: ( [33673,33674]"/>
  <match src="comment: /**  * @dev String operations.  */ [5942,5978]" dest="comment: /**  * @dev String operations.  */ [5942,5978]"/>
  <match src="binary_expression [6567,6576]" dest="binary_expression [6567,6576]"/>
  <match src="uint8: uint8 [1985,1990]" dest="uint8: uint8 [1985,1990]"/>
  <match src="binary_expression [80497,80515]" dest="binary_expression [80504,80522]"/>
  <match src="call_argument [78263,78275]" dest="call_argument [78270,78282]"/>
  <match src="type_name [1570,1579]" dest="type_name [1570,1579]"/>
  <match src="returns: returns [38178,38185]" dest="returns: returns [38178,38185]"/>
  <match src="parameter [31749,31766]" dest="parameter [31749,31766]"/>
  <match src="type_name [7152,7159]" dest="type_name [7152,7159]"/>
  <match src="type_name [43279,43285]" dest="type_name [43279,43285]"/>
  <match src="revert: revert [56054,56060]" dest="revert: revert [56054,56060]"/>
  <match src="(: ( [44237,44238]" dest="(: ( [44237,44238]"/>
  <match src="uint8: uint8 [60381,60386]" dest="uint8: uint8 [60388,60393]"/>
  <match src="&quot;: &quot; [8621,8622]" dest="&quot;: &quot; [8621,8622]"/>
  <match src="function: function [4647,4655]" dest="function: function [4647,4655]"/>
  <match src="while: while [6560,6565]" dest="while: while [6560,6565]"/>
  <match src="revert: revert [48036,48042]" dest="revert: revert [48036,48042]"/>
  <match src="enum_value: NoError [8254,8261]" dest="enum_value: NoError [8254,8261]"/>
  <match src="identifier: tokenId [42060,42067]" dest="identifier: tokenId [42060,42067]"/>
  <match src="[: [ [51000,51001]" dest="[: [ [51000,51001]"/>
  <match src="visibility [19324,19332]" dest="visibility [19324,19332]"/>
  <match src="struct_declaration [60324,60520]" dest="struct_declaration [60331,60527]"/>
  <match src="variable_declaration_statement [42833,42868]" dest="variable_declaration_statement [42833,42868]"/>
  <match src="): ) [67558,67559]" dest="): ) [67565,67566]"/>
  <match src=",: , [31080,31081]" dest=",: , [31080,31081]"/>
  <match src="address: address [81424,81431]" dest="address: address [81431,81438]"/>
  <match src="&lt;=: &lt;= [66986,66988]" dest="&lt;=: &lt;= [66993,66995]"/>
  <match src="(: ( [79724,79725]" dest="(: ( [79731,79732]"/>
  <match src="identifier: numberMinted [36642,36654]" dest="identifier: numberMinted [36642,36654]"/>
  <match src="parameter [4485,4498]" dest="parameter [4485,4498]"/>
  <match src="member_expression [73208,73239]" dest="member_expression [73215,73246]"/>
  <match src="): ) [80651,80652]" dest="): ) [80658,80659]"/>
  <match src=",: , [68316,68317]" dest=",: , [68323,68324]"/>
  <match src="identifier: _transfer [46238,46247]" dest="identifier: _transfer [46238,46247]"/>
  <match src="primitive_type [69527,69534]" dest="primitive_type [69534,69541]"/>
  <match src="type_name [20138,20145]" dest="type_name [20138,20145]"/>
  <match src="returns: returns [5508,5515]" dest="returns: returns [5508,5515]"/>
  <match src="number_literal: 0xFFFF [77623,77629]" dest="number_literal: 0xFFFF [77630,77636]"/>
  <match src="uint16: uint16 [1166,1172]" dest="uint16: uint16 [1166,1172]"/>
  <match src="!: ! [46836,46837]" dest="!: ! [46836,46837]"/>
  <match src="function: function [3887,3895]" dest="function: function [3887,3895]"/>
  <match src="member_expression [66136,66146]" dest="member_expression [66143,66153]"/>
  <match src="returns: returns [769,776]" dest="returns: returns [769,776]"/>
  <match src="): ) [28152,28153]" dest="): ) [28152,28153]"/>
  <match src="number_literal: 12 [62900,62902]" dest="number_literal: 12 [62907,62909]"/>
  <match src="(: ( [16748,16749]" dest="(: ( [16748,16749]"/>
  <match src="[: [ [48486,48487]" dest="[: [ [48486,48487]"/>
  <match src="): ) [37812,37813]" dest="): ) [37812,37813]"/>
  <match src="bytes32: bytes32 [10499,10506]" dest="bytes32: bytes32 [10499,10506]"/>
  <match src="parameter [7505,7519]" dest="parameter [7505,7519]"/>
  <match src="{: { [79107,79108]" dest="{: { [79114,79115]"/>
  <match src="parameter [68851,68866]" dest="parameter [68858,68873]"/>
  <match src="assignment_expression [63054,63087]" dest="assignment_expression [63061,63094]"/>
  <match src="=: = [7590,7591]" dest="=: = [7590,7591]"/>
  <match src="returns: returns [4856,4863]" dest="returns: returns [4856,4863]"/>
  <match src="block_statement [55878,55967]" dest="block_statement [55878,55967]"/>
  <match src=":=: := [10808,10810]" dest=":=: := [10808,10810]"/>
  <match src="state_mutability [44533,44537]" dest="state_mutability [44533,44537]"/>
  <match src="type_name [59069,59076]" dest="type_name [59076,59083]"/>
  <match src="identifier: ownerOf [19299,19306]" dest="identifier: ownerOf [19299,19306]"/>
  <match src="call_argument [67994,68022]" dest="call_argument [68001,68029]"/>
  <match src="primitive_type [51500,51507]" dest="primitive_type [51500,51507]"/>
  <match src=".: . [74168,74169]" dest=".: . [74175,74176]"/>
  <match src="uint8: uint8 [1864,1869]" dest="uint8: uint8 [1864,1869]"/>
  <match src="]: ] [59651,59652]" dest="]: ] [59658,59659]"/>
  <match src=",: , [69540,69541]" dest=",: , [69547,69548]"/>
  <match src=",: , [62291,62292]" dest=",: , [62298,62299]"/>
  <match src="[: [ [69272,69273]" dest="[: [ [69279,69280]"/>
  <match src="override_specifier [42714,42722]" dest="override_specifier [42714,42722]"/>
  <match src="string_literal [66294,66311]" dest="string_literal [66301,66318]"/>
  <match src="]: ] [72207,72208]" dest="]: ] [72214,72215]"/>
  <match src="type_name [37234,37240]" dest="type_name [37234,37240]"/>
  <match src="state_variable_declaration [59158,59180]" dest="state_variable_declaration [59165,59187]"/>
  <match src="identifier: numberMinted [39884,39896]" dest="identifier: numberMinted [39884,39896]"/>
  <match src="identifier: index [80497,80502]" dest="identifier: index [80504,80509]"/>
  <match src="(: ( [4760,4761]" dest="(: ( [4760,4761]"/>
  <match src="type_name [29792,29797]" dest="type_name [29792,29797]"/>
  <match src="public: public [59868,59874]" dest="public: public [59875,59881]"/>
  <match src="array_access [48540,48565]" dest="array_access [48540,48565]"/>
  <match src="call_argument [66072,66081]" dest="call_argument [66079,66088]"/>
  <match src="internal: internal [67400,67408]" dest="internal: internal [67407,67415]"/>
  <match src="identifier: from [20762,20766]" dest="identifier: from [20762,20766]"/>
  <match src="identifier: prevOwnership [51800,51813]" dest="identifier: prevOwnership [51800,51813]"/>
  <match src="variable_declaration_statement [53564,53619]" dest="variable_declaration_statement [53564,53619]"/>
  <match src="visibility [4611,4619]" dest="visibility [4611,4619]"/>
  <match src="call_argument [64909,64911]" dest="call_argument [64916,64918]"/>
  <match src="call_argument [51900,51904]" dest="call_argument [51900,51904]"/>
  <match src="): ) [40071,40072]" dest="): ) [40071,40072]"/>
  <match src="block_statement [48993,49094]" dest="block_statement [48993,49094]"/>
  <match src="}: } [64223,64224]" dest="}: } [64230,64231]"/>
  <match src="): ) [3458,3459]" dest="): ) [3458,3459]"/>
  <match src="returns: returns [39532,39539]" dest="returns: returns [39532,39539]"/>
  <match src="string: string [6869,6875]" dest="string: string [6869,6875]"/>
  <match src="identifier: t [77333,77334]" dest="identifier: t [77340,77341]"/>
  <match src="parameter [3444,3458]" dest="parameter [3444,3458]"/>
  <match src="(: ( [29927,29928]" dest="(: ( [29927,29928]"/>
  <match src="identifier: validateDogeOwnerForClaim [2297,2322]" dest="identifier: validateDogeOwnerForClaim [2297,2322]"/>
  <match src="interface_declaration [2385,2491]" dest="interface_declaration [2385,2491]"/>
  <match src="augmented_assignment_expression [66378,66407]" dest="augmented_assignment_expression [66385,66414]"/>
  <match src="variable_declaration_statement [43457,43498]" dest="variable_declaration_statement [43457,43498]"/>
  <match src="comment: // no error: do nothing [8515,8538]" dest="comment: // no error: do nothing [8515,8538]"/>
  <match src="member_expression [71023,71056]" dest="member_expression [71030,71063]"/>
  <match src=",: , [62960,62961]" dest=",: , [62967,62968]"/>
  <match src="external: external [3998,4006]" dest="external: external [3998,4006]"/>
  <match src="call_expression [13495,13513]" dest="call_expression [13495,13513]"/>
  <match src=",: , [30097,30098]" dest=",: , [30097,30098]"/>
  <match src="modifier_invocation [67806,67816]" dest="modifier_invocation [67813,67823]"/>
  <match src=".: . [77668,77669]" dest=".: . [77675,77676]"/>
  <match src="identifier: tokenId [51001,51008]" dest="identifier: tokenId [51001,51008]"/>
  <match src=",: , [63012,63013]" dest=",: , [63019,63020]"/>
  <match src="primitive_type [4533,4540]" dest="primitive_type [4533,4540]"/>
  <match src="identifier: tokenId [40891,40898]" dest="identifier: tokenId [40891,40898]"/>
  <match src="type_name [16673,16678]" dest="type_name [16673,16678]"/>
  <match src="{: { [933,934]" dest="{: { [933,934]"/>
  <match src="returns: returns [40304,40311]" dest="returns: returns [40304,40311]"/>
  <match src="call_argument [63468,63487]" dest="call_argument [63475,63494]"/>
  <match src="internal: internal [10179,10187]" dest="internal: internal [10179,10187]"/>
  <match src=",: , [55845,55846]" dest=",: , [55845,55846]"/>
  <match src="): ) [39153,39154]" dest="): ) [39153,39154]"/>
  <match src="identifier: i [70009,70010]" dest="identifier: i [70016,70017]"/>
  <match src="(: ( [42920,42921]" dest="(: ( [42920,42921]"/>
  <match src="=: = [58232,58233]" dest="=: = [58232,58233]"/>
  <match src="visibility [37689,37696]" dest="visibility [37689,37696]"/>
  <match src="parameter [874,895]" dest="parameter [874,895]"/>
  <match src="primitive_type [39829,39836]" dest="primitive_type [39829,39836]"/>
  <match src="identifier: IERC721Metadata [24137,24152]" dest="identifier: IERC721Metadata [24137,24152]"/>
  <match src=".: . [42899,42900]" dest=".: . [42899,42900]"/>
  <match src="&quot;: &quot; [50057,50058]" dest="&quot;: &quot; [50057,50058]"/>
  <match src="primitive_type [78005,78012]" dest="primitive_type [78012,78019]"/>
  <match src="type_name [18197,18201]" dest="type_name [18197,18201]"/>
  <match src="identifier: i [65881,65882]" dest="identifier: i [65888,65889]"/>
  <match src="returns: returns [4620,4627]" dest="returns: returns [4620,4627]"/>
  <match src="(: ( [5020,5021]" dest="(: ( [5020,5021]"/>
  <match src="external: external [78743,78751]" dest="external: external [78750,78758]"/>
  <match src="comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      *      * [IMPORTANT]      * ====      * You shouldn't rely on `isContract` to protect against flash loan attacks!      *      * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets      * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract      * constructor.      * ====      */ [24772,25751]" dest="comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      *      * [IMPORTANT]      * ====      * You shouldn't rely on `isContract` to protect against flash loan attacks!      *      * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets      * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract      * constructor.      * ====      */ [24772,25751]"/>
  <match src="primitive_type [27187,27191]" dest="primitive_type [27187,27191]"/>
  <match src="}: } [795,796]" dest="}: } [795,796]"/>
  <match src="(: ( [46020,46021]" dest="(: ( [46020,46021]"/>
  <match src="identifier: id [4673,4675]" dest="identifier: id [4673,4675]"/>
  <match src="=: = [81001,81002]" dest="=: = [81008,81009]"/>
  <match src="if_statement [14775,14938]" dest="if_statement [14775,14938]"/>
  <match src="yul_decimal_number: 32 [32874,32876]" dest="yul_decimal_number: 32 [32874,32876]"/>
  <match src="array_access [44002,44026]" dest="array_access [44002,44026]"/>
  <match src="): ) [61933,61934]" dest="): ) [61940,61941]"/>
  <match src=".: . [16752,16753]" dest=".: . [16752,16753]"/>
  <match src="call_expression [46010,46022]" dest="call_expression [46010,46022]"/>
  <match src="): ) [42819,42820]" dest="): ) [42819,42820]"/>
  <match src="string [7124,7130]" dest="string [7124,7130]"/>
  <match src="string_literal [8857,8893]" dest="string_literal [8857,8893]"/>
  <match src="identifier: mintActive [69283,69293]" dest="identifier: mintActive [69290,69300]"/>
  <match src="public: public [45045,45051]" dest="public: public [45045,45051]"/>
  <match src=".: . [48615,48616]" dest=".: . [48615,48616]"/>
  <match src="comment: // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or [14492,14599]" dest="comment: // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or [14492,14599]"/>
  <match src="address: address [61462,61469]" dest="address: address [61469,61476]"/>
  <match src=",: , [32057,32058]" dest=",: , [32057,32058]"/>
  <match src="||: || [45971,45973]" dest="||: || [45971,45973]"/>
  <match src="number_literal: 0 [75004,75005]" dest="number_literal: 0 [75011,75012]"/>
  <match src=".: . [78295,78296]" dest=".: . [78302,78303]"/>
  <match src="if_statement [8666,9028]" dest="if_statement [8666,9028]"/>
  <match src="binary_expression [29825,29855]" dest="binary_expression [29825,29855]"/>
  <match src="identifier: mintActive [60360,60370]" dest="identifier: mintActive [60367,60377]"/>
  <match src=",: , [32356,32357]" dest=",: , [32356,32357]"/>
  <match src="visibility [20182,20190]" dest="visibility [20182,20190]"/>
  <match src="contract_body [17767,18206]" dest="contract_body [17767,18206]"/>
  <match src="]: ] [62354,62355]" dest="]: ] [62361,62362]"/>
  <match src="override_specifier [42351,42359]" dest="override_specifier [42351,42359]"/>
  <match src="identifier: length [7701,7707]" dest="identifier: length [7701,7707]"/>
  <match src="return: return [38979,38985]" dest="return: return [38979,38985]"/>
  <match src="(: ( [46958,46959]" dest="(: ( [46958,46959]"/>
  <match src="call_argument [77282,77295]" dest="call_argument [77289,77302]"/>
  <match src="{: { [56035,56036]" dest="{: { [56035,56036]"/>
  <match src="(: ( [69155,69156]" dest="(: ( [69162,69163]"/>
  <match src="{: { [16155,16156]" dest="{: { [16155,16156]"/>
  <match src="variable_declaration_statement [41089,41141]" dest="variable_declaration_statement [41089,41141]"/>
  <match src="call_argument [29857,29897]" dest="call_argument [29857,29897]"/>
  <match src="primitive_type [45537,45544]" dest="primitive_type [45537,45544]"/>
  <match src="identifier: revealed [63521,63529]" dest="identifier: revealed [63528,63536]"/>
  <match src="contract: contract [57965,57973]" dest="contract: contract [57965,57973]"/>
  <match src="external: external [18174,18182]" dest="external: external [18174,18182]"/>
  <match src="function_body [25823,26083]" dest="function_body [25823,26083]"/>
  <match src="primitive_type [59909,59914]" dest="primitive_type [59916,59921]"/>
  <match src="&lt;=: &lt;= [67910,67912]" dest="&lt;=: &lt;= [67917,67919]"/>
  <match src="identifier: castle [59243,59249]" dest="identifier: castle [59250,59256]"/>
  <match src="view: view [38165,38169]" dest="view: view [38165,38169]"/>
  <match src="}: } [39904,39905]" dest="}: } [39904,39905]"/>
  <match src="identifier: s [13106,13107]" dest="identifier: s [13106,13107]"/>
  <match src="}: } [41305,41306]" dest="}: } [41305,41306]"/>
  <match src="identifier: tokenId [46849,46856]" dest="identifier: tokenId [46849,46856]"/>
  <match src="(: ( [80309,80310]" dest="(: ( [80316,80317]"/>
  <match src="(: ( [77027,77028]" dest="(: ( [77034,77035]"/>
  <match src="parameter [46911,46927]" dest="parameter [46911,46927]"/>
  <match src="type_name [60497,60506]" dest="type_name [60504,60513]"/>
  <match src="primitive_type [5897,5904]" dest="primitive_type [5897,5904]"/>
  <match src="binary_expression [66815,66828]" dest="binary_expression [66822,66835]"/>
  <match src="): ) [52518,52519]" dest="): ) [52518,52519]"/>
  <match src="(: ( [69173,69174]" dest="(: ( [69180,69181]"/>
  <match src="parameter [1484,1494]" dest="parameter [1484,1494]"/>
  <match src="function_definition [25757,26083]" dest="function_definition [25757,26083]"/>
  <match src="identifier: tokenId [24555,24562]" dest="identifier: tokenId [24555,24562]"/>
  <match src=".: . [78123,78124]" dest=".: . [78130,78131]"/>
  <match src=",: , [62220,62221]" dest=",: , [62227,62228]"/>
  <match src="call_argument [78097,78103]" dest="call_argument [78104,78110]"/>
  <match src="return_type_definition [75403,75440]" dest="return_type_definition [75410,75447]"/>
  <match src="call_argument [29307,29312]" dest="call_argument [29307,29312]"/>
  <match src=".: . [68429,68430]" dest=".: . [68436,68437]"/>
  <match src="member_expression [51057,51080]" dest="member_expression [51057,51080]"/>
  <match src="identifier: RecoverError [14895,14907]" dest="identifier: RecoverError [14895,14907]"/>
  <match src="identifier: to [2042,2044]" dest="identifier: to [2042,2044]"/>
  <match src="if_statement [39561,39625]" dest="if_statement [39561,39625]"/>
  <match src="expression_statement [80541,80583]" dest="expression_statement [80548,80590]"/>
  <match src="identifier: from [45966,45970]" dest="identifier: from [45966,45970]"/>
  <match src="[: [ [68587,68588]" dest="[: [ [68594,68595]"/>
  <match src="identifier: topCommoner_ [71971,71983]" dest="identifier: topCommoner_ [71978,71990]"/>
  <match src=",: , [68696,68697]" dest=",: , [68703,68704]"/>
  <match src="address: address [64250,64257]" dest="address: address [64257,64264]"/>
  <match src="function: function [38357,38365]" dest="function: function [38357,38365]"/>
  <match src="identifier: _startTokenId [41021,41034]" dest="identifier: _startTokenId [41021,41034]"/>
  <match src="{: { [12862,12863]" dest="{: { [12862,12863]"/>
  <match src="primitive_type [7570,7575]" dest="primitive_type [7570,7575]"/>
  <match src="primitive_type [43895,43902]" dest="primitive_type [43895,43902]"/>
  <match src="assignment_expression [55024,55053]" dest="assignment_expression [55024,55053]"/>
  <match src="identifier: _burnCounter [37143,37155]" dest="identifier: _burnCounter [37143,37155]"/>
  <match src="number_literal: 7 [62338,62339]" dest="number_literal: 7 [62345,62346]"/>
  <match src="): ) [49069,49070]" dest="): ) [49069,49070]"/>
  <match src="identifier: from [54602,54606]" dest="identifier: from [54602,54606]"/>
  <match src="identifier: updateQuestCooldown [1641,1660]" dest="identifier: updateQuestCooldown [1641,1660]"/>
  <match src="if_statement [46090,46160]" dest="if_statement [46090,46160]"/>
  <match src="string: string [24408,24414]" dest="string: string [24408,24414]"/>
  <match src="number_literal: 9 [73792,73793]" dest="number_literal: 9 [73799,73800]"/>
  <match src="=: = [7165,7166]" dest="=: = [7165,7166]"/>
  <match src="override_specifier [43437,43445]" dest="override_specifier [43437,43445]"/>
  <match src="function_body [46938,46984]" dest="function_body [46938,46984]"/>
  <match src="parameter [81515,81521]" dest="parameter [81522,81528]"/>
  <match src="=: = [58283,58284]" dest="=: = [58283,58284]"/>
  <match src="visibility [59078,59084]" dest="visibility [59085,59091]"/>
  <match src="[: [ [65703,65704]" dest="[: [ [65710,65711]"/>
  <match src="identifier: burned [46858,46864]" dest="identifier: burned [46858,46864]"/>
  <match src="call_expression [52638,52650]" dest="call_expression [52638,52650]"/>
  <match src="): ) [3249,3250]" dest="): ) [3249,3250]"/>
  <match src="uint256: uint256 [74456,74463]" dest="uint256: uint256 [74463,74470]"/>
  <match src="}: } [33012,33013]" dest="}: } [33012,33013]"/>
  <match src="function_definition [38357,38660]" dest="function_definition [38357,38660]"/>
  <match src="[: [ [72194,72195]" dest="[: [ [72201,72202]"/>
  <match src="parameter [49882,49892]" dest="parameter [49882,49892]"/>
  <match src="type_name [56956,56963]" dest="type_name [56956,56963]"/>
  <match src="function: function [44467,44475]" dest="function: function [44467,44475]"/>
  <match src="member_expression [67465,67481]" dest="member_expression [67472,67488]"/>
  <match src="(: ( [53015,53016]" dest="(: ( [53015,53016]"/>
  <match src="call_argument [44736,44743]" dest="call_argument [44736,44743]"/>
  <match src="identifier: InvalidSignatureS [8816,8833]" dest="identifier: InvalidSignatureS [8816,8833]"/>
  <match src="enum_value: InvalidSignature [8272,8288]" dest="enum_value: InvalidSignature [8272,8288]"/>
  <match src="block_statement [40992,41914]" dest="block_statement [40992,41914]"/>
  <match src="user_defined_type [8413,8425]" dest="user_defined_type [8413,8425]"/>
  <match src="address: address [18932,18939]" dest="address: address [18932,18939]"/>
  <match src="override: override [42522,42530]" dest="override: override [42522,42530]"/>
  <match src="primitive_type [45080,45084]" dest="primitive_type [45080,45084]"/>
  <match src="identifier: publicMintFinal [68835,68850]" dest="identifier: publicMintFinal [68842,68857]"/>
  <match src="identifier: seed [77616,77620]" dest="identifier: seed [77623,77627]"/>
  <match src=",: , [62167,62168]" dest=",: , [62174,62175]"/>
  <match src="member_expression [41209,41223]" dest="member_expression [41209,41223]"/>
  <match src=",: , [5798,5799]" dest=",: , [5798,5799]"/>
  <match src="state_mutability [78878,78882]" dest="state_mutability [78885,78889]"/>
  <match src="): ) [15350,15351]" dest="): ) [15350,15351]"/>
  <match src="primitive_type [4173,4180]" dest="primitive_type [4173,4180]"/>
  <match src="return: return [30428,30434]" dest="return: return [30428,30434]"/>
  <match src="parameter [54958,54973]" dest="parameter [54958,54973]"/>
  <match src="(: ( [39392,39393]" dest="(: ( [39392,39393]"/>
  <match src="primitive_type [39791,39798]" dest="primitive_type [39791,39798]"/>
  <match src="identifier: keccak256 [16739,16748]" dest="identifier: keccak256 [16739,16748]"/>
  <match src="call_argument [6788,6812]" dest="call_argument [6788,6812]"/>
  <match src="}: } [15301,15302]" dest="}: } [15301,15302]"/>
  <match src="function_definition [64685,64794]" dest="function_definition [64692,64801]"/>
  <match src="identifier: domainSeparator [17348,17363]" dest="identifier: domainSeparator [17348,17363]"/>
  <match src="identifier: i [66233,66234]" dest="identifier: i [66240,66241]"/>
  <match src="binary_expression [61173,61182]" dest="binary_expression [61180,61189]"/>
  <match src="type_name [24547,24554]" dest="type_name [24547,24554]"/>
  <match src="identifier: revealed [63561,63569]" dest="identifier: revealed [63568,63576]"/>
  <match src="identifier: v [10529,10530]" dest="identifier: v [10529,10530]"/>
  <match src="assignment_expression [75452,75474]" dest="assignment_expression [75459,75481]"/>
  <match src="parameter [3369,3381]" dest="parameter [3369,3381]"/>
  <match src=",: , [62886,62887]" dest=",: , [62893,62894]"/>
  <match src="(: ( [24546,24547]" dest="(: ( [24546,24547]"/>
  <match src="comment: /**      * @dev See {IERC721-setApprovalForAll}.      */ [44042,44100]" dest="comment: /**      * @dev See {IERC721-setApprovalForAll}.      */ [44042,44100]"/>
  <match src="expression_statement [71080,71119]" dest="expression_statement [71087,71126]"/>
  <match src="): ) [76479,76480]" dest="): ) [76486,76487]"/>
  <match src="parameter [5737,5750]" dest="parameter [5737,5750]"/>
  <match src="function_definition [69849,74321]" dest="function_definition [69856,74328]"/>
  <match src="&quot;: &quot; [16296,16297]" dest="&quot;: &quot; [16296,16297]"/>
  <match src="address: address [1570,1577]" dest="address: address [1570,1577]"/>
  <match src="comment: // these malleable signatures as well. [14727,14765]" dest="comment: // these malleable signatures as well. [14727,14765]"/>
  <match src="identifier: vs [11001,11003]" dest="identifier: vs [11001,11003]"/>
  <match src="identifier: buffer [7583,7589]" dest="identifier: buffer [7583,7589]"/>
  <match src="): ) [78917,78918]" dest="): ) [78924,78925]"/>
  <match src="): ) [43863,43864]" dest="): ) [43863,43864]"/>
  <match src="number_literal: 1 [70006,70007]" dest="number_literal: 1 [70013,70014]"/>
  <match src="address: address [53008,53015]" dest="address: address [53008,53015]"/>
  <match src="identifier: numberBurned [53448,53460]" dest="identifier: numberBurned [53448,53460]"/>
  <match src=",: , [3786,3787]" dest=",: , [3786,3787]"/>
  <match src="block_statement [41771,41846]" dest="block_statement [41771,41846]"/>
  <match src="parameter [55760,55764]" dest="parameter [55760,55764]"/>
  <match src="primitive_type [14883,14890]" dest="primitive_type [14883,14890]"/>
  <match src="member_expression [69473,69501]" dest="member_expression [69480,69508]"/>
  <match src="identifier: updatedIndex [48881,48893]" dest="identifier: updatedIndex [48881,48893]"/>
  <match src=",: , [74287,74288]" dest=",: , [74294,74295]"/>
  <match src="visibility [43248,43256]" dest="visibility [43248,43256]"/>
  <match src="array_access [74145,74168]" dest="array_access [74152,74175]"/>
  <match src="comment: /**      * @dev See {IERC721-isApprovedForAll}.      */ [44404,44461]" dest="comment: /**      * @dev See {IERC721-isApprovedForAll}.      */ [44404,44461]"/>
  <match src="identifier: accessory [77335,77344]" dest="identifier: accessory [77342,77351]"/>
  <match src="parameter [64417,64436]" dest="parameter [64424,64443]"/>
  <match src="identifier: msg [80876,80879]" dest="identifier: msg [80883,80886]"/>
  <match src="function_body [42108,42160]" dest="function_body [42108,42160]"/>
  <match src="binary_expression [76495,76515]" dest="binary_expression [76502,76522]"/>
  <match src="identifier: error [13507,13512]" dest="identifier: error [13507,13512]"/>
  <match src="identifier: addr [51492,51496]" dest="identifier: addr [51492,51496]"/>
  <match src="comment: // error TransferCallerNotOwnerNorApproved(); [35591,35636]" dest="comment: // error TransferCallerNotOwnerNorApproved(); [35591,35636]"/>
  <match src="]: ] [67229,67230]" dest="]: ] [67236,67237]"/>
  <match src="uint256: uint256 [37669,37676]" dest="uint256: uint256 [37669,37676]"/>
  <match src="variable_declaration [29983,29995]" dest="variable_declaration [29983,29995]"/>
  <match src="(: ( [43944,43945]" dest="(: ( [43944,43945]"/>
  <match src="primitive_type [66445,66451]" dest="primitive_type [66452,66458]"/>
  <match src=",: , [30788,30789]" dest=",: , [30788,30789]"/>
  <match src="memory: memory [653,659]" dest="memory: memory [653,659]"/>
  <match src="identifier: data [30462,30466]" dest="identifier: data [30462,30466]"/>
  <match src=",: , [77296,77297]" dest=",: , [77303,77304]"/>
  <match src="address: address [61481,61488]" dest="address: address [61488,61495]"/>
  <match src="struct_member [5153,5165]" dest="struct_member [5153,5165]"/>
  <match src="type_cast_expression [69542,69557]" dest="type_cast_expression [69549,69564]"/>
  <match src="call_expression [61924,61934]" dest="call_expression [61931,61941]"/>
  <match src="array_access [71080,71103]" dest="array_access [71087,71110]"/>
  <match src="identifier: functionStaticCall [30326,30344]" dest="identifier: functionStaticCall [30326,30344]"/>
  <match src="while: while [49114,49119]" dest="while: while [49114,49119]"/>
  <match src="uint8: uint8 [5712,5717]" dest="uint8: uint8 [5712,5717]"/>
  <match src="call_argument [55078,55083]" dest="call_argument [55078,55083]"/>
  <match src="identifier: commoners [70913,70922]" dest="identifier: commoners [70920,70929]"/>
  <match src="type_name [4935,4942]" dest="type_name [4935,4942]"/>
  <match src="expression_statement [72073,72112]" dest="expression_statement [72080,72119]"/>
  <match src="&quot;: &quot; [45355,45356]" dest="&quot;: &quot; [45355,45356]"/>
  <match src="identifier: breed [79192,79197]" dest="identifier: breed [79199,79204]"/>
  <match src="number_literal: 1 [52932,52933]" dest="number_literal: 1 [52932,52933]"/>
  <match src="parameter [54984,54997]" dest="parameter [54984,54997]"/>
  <match src=",: , [62351,62352]" dest=",: , [62358,62359]"/>
  <match src="[: [ [76461,76462]" dest="[: [ [76468,76469]"/>
  <match src="=: = [73019,73020]" dest="=: = [73026,73027]"/>
  <match src="string_literal [28231,28263]" dest="string_literal [28231,28263]"/>
  <match src="expression_statement [74620,74651]" dest="expression_statement [74627,74658]"/>
  <match src="override_specifier [42522,42530]" dest="override_specifier [42522,42530]"/>
  <match src="call_argument [43747,43752]" dest="call_argument [43747,43752]"/>
  <match src="call_expression [65994,66112]" dest="call_expression [66001,66119]"/>
  <match src="function: function [45501,45509]" dest="function: function [45501,45509]"/>
  <match src=".: . [71215,71216]" dest=".: . [71222,71223]"/>
  <match src="contract_body [4585,4716]" dest="contract_body [4585,4716]"/>
  <match src="return: return [8507,8513]" dest="return: return [8507,8513]"/>
  <match src="string_literal [41931,41964]" dest="string_literal [41931,41964]"/>
  <match src="(: ( [14786,14787]" dest="(: ( [14786,14787]"/>
  <match src="==: == [67847,67849]" dest="==: == [67854,67856]"/>
  <match src="&quot;: &quot; [61198,61199]" dest="&quot;: &quot; [61205,61206]"/>
  <match src="expression_statement [77480,77492]" dest="expression_statement [77487,77499]"/>
  <match src="comment: // SPDX-License-Identifier: Unlicense [28,65]" dest="comment: // SPDX-License-Identifier: Unlicense [28,65]"/>
  <match src="call_argument [16800,16826]" dest="call_argument [16800,16826]"/>
  <match src="uint256: uint256 [3609,3616]" dest="uint256: uint256 [3609,3616]"/>
  <match src="{: { [32496,32497]" dest="{: { [32496,32497]"/>
  <match src="identifier: alchemy [77587,77594]" dest="identifier: alchemy [77594,77601]"/>
  <match src="primitive_type [75363,75370]" dest="primitive_type [75370,75377]"/>
  <match src="{: { [57889,57890]" dest="{: { [57889,57890]"/>
  <match src="{: { [32947,32948]" dest="{: { [32947,32948]"/>
  <match src="number_literal: 6 [62875,62876]" dest="number_literal: 6 [62882,62883]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [30524,30702]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [30524,30702]"/>
  <match src="%: % [76445,76446]" dest="%: % [76452,76453]"/>
  <match src="]: ] [3159,3160]" dest="]: ] [3159,3160]"/>
  <match src=",: , [80569,80570]" dest=",: , [80576,80577]"/>
  <match src="binary_expression [39247,39405]" dest="binary_expression [39247,39405]"/>
  <match src="ternary_expression [42885,42972]" dest="ternary_expression [42885,42972]"/>
  <match src="&quot;: &quot; [6043,6044]" dest="&quot;: &quot; [6043,6044]"/>
  <match src="): ) [78741,78742]" dest="): ) [78748,78749]"/>
  <match src="): ) [3947,3948]" dest="): ) [3947,3948]"/>
  <match src="number_literal: 0 [62869,62870]" dest="number_literal: 0 [62876,62877]"/>
  <match src="type_name [58643,58652]" dest="type_name [58650,58659]"/>
  <match src="}: } [69604,69605]" dest="}: } [69611,69612]"/>
  <match src="number_literal: 10 [72748,72750]" dest="number_literal: 10 [72755,72757]"/>
  <match src="[: [ [72994,72995]" dest="[: [ [73001,73002]"/>
  <match src="identifier: digits [6543,6549]" dest="identifier: digits [6543,6549]"/>
  <match src="identifier: from [52654,52658]" dest="identifier: from [52654,52658]"/>
  <match src="function_body [29806,30132]" dest="function_body [29806,30132]"/>
  <match src="identifier: recipient [27053,27062]" dest="identifier: recipient [27053,27062]"/>
  <match src="(: ( [58874,58875]" dest="(: ( [58881,58882]"/>
  <match src="comment: // OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721Receiver.sol) [22978,23045]" dest="comment: // OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721Receiver.sol) [22978,23045]"/>
  <match src="uint256: uint256 [39856,39863]" dest="uint256: uint256 [39856,39863]"/>
  <match src="mapping: mapping [58867,58874]" dest="mapping: mapping [58874,58881]"/>
  <match src="&gt;: &gt; [75002,75003]" dest="&gt;: &gt; [75009,75010]"/>
  <match src=",: , [66905,66906]" dest=",: , [66912,66913]"/>
  <match src="identifier: saleStatus [67836,67846]" dest="identifier: saleStatus [67843,67853]"/>
  <match src="member_expression [70859,70890]" dest="member_expression [70866,70897]"/>
  <match src="(: ( [31997,31998]" dest="(: ( [31997,31998]"/>
  <match src="==: == [63479,63481]" dest="==: == [63486,63488]"/>
  <match src="identifier: _safeMint [46949,46958]" dest="identifier: _safeMint [46949,46958]"/>
  <match src="): ) [17375,17376]" dest="): ) [17375,17376]"/>
  <match src="{: { [68148,68149]" dest="{: { [68155,68156]"/>
  <match src=",: , [50463,50464]" dest=",: , [50463,50464]"/>
  <match src="call_argument [29833,29837]" dest="call_argument [29833,29837]"/>
  <match src="string [16766,16798]" dest="string [16766,16798]"/>
  <match src="memory: memory [28141,28147]" dest="memory: memory [28141,28147]"/>
  <match src="call_expression [63460,63501]" dest="call_expression [63467,63508]"/>
  <match src="(: ( [45329,45330]" dest="(: ( [45329,45330]"/>
  <match src="return: return [14987,14993]" dest="return: return [14987,14993]"/>
  <match src="): ) [24600,24601]" dest="): ) [24600,24601]"/>
  <match src=".: . [65283,65284]" dest=".: . [65290,65291]"/>
  <match src="(: ( [68529,68530]" dest="(: ( [68536,68537]"/>
  <match src="identifier: head [79147,79151]" dest="identifier: head [79154,79158]"/>
  <match src="string_literal [63489,63500]" dest="string_literal [63496,63507]"/>
  <match src="=: = [13459,13460]" dest="=: = [13459,13460]"/>
  <match src="number_literal: 206 [62154,62157]" dest="number_literal: 206 [62161,62164]"/>
  <match src="(: ( [41614,41615]" dest="(: ( [41614,41615]"/>
  <match src="primitive_type [54958,54965]" dest="primitive_type [54958,54965]"/>
  <match src="return_type_definition [30847,30869]" dest="return_type_definition [30847,30869]"/>
  <match src="call_argument [69156,69198]" dest="call_argument [69163,69205]"/>
  <match src="identifier: doges_ [65713,65719]" dest="identifier: doges_ [65720,65726]"/>
  <match src="boolean_literal [69297,69301]" dest="boolean_literal [69304,69308]"/>
  <match src="): ) [48990,48991]" dest="): ) [48990,48991]"/>
  <match src="member_expression [64861,64871]" dest="member_expression [64868,64878]"/>
  <match src="parameter [3324,3338]" dest="parameter [3324,3338]"/>
  <match src="}: } [4438,4439]" dest="}: } [4438,4439]"/>
  <match src="): ) [45043,45044]" dest="): ) [45043,45044]"/>
  <match src="function_definition [45757,46443]" dest="function_definition [45757,46443]"/>
  <match src="comment: //     Max mint per Tx = 6 [67653,67679]" dest="comment: //     Max mint per Tx = 6 [67660,67686]"/>
  <match src=",: , [44149,44150]" dest=",: , [44149,44150]"/>
  <match src="identifier: tokenId [52748,52755]" dest="identifier: tokenId [52748,52755]"/>
  <match src="(: ( [66432,66433]" dest="(: ( [66439,66440]"/>
  <match src="{: { [35868,35869]" dest="{: { [35868,35869]"/>
  <match src="number_literal: 16 [76993,76995]" dest="number_literal: 16 [77000,77002]"/>
  <match src="identifier: operator [44304,44312]" dest="identifier: operator [44304,44312]"/>
  <match src="identifier: delegatecall [31985,31997]" dest="identifier: delegatecall [31985,31997]"/>
  <match src="return_type_definition [7535,7558]" dest="return_type_definition [7535,7558]"/>
  <match src="false [66287,66292]" dest="false [66294,66299]"/>
  <match src="parameter [4865,4872]" dest="parameter [4865,4872]"/>
  <match src="(: ( [17213,17214]" dest="(: ( [17213,17214]"/>
  <match src="identifier: tokenNo_ [67779,67787]" dest="identifier: tokenNo_ [67786,67794]"/>
  <match src="]: ] [65949,65950]" dest="]: ] [65956,65957]"/>
  <match src="call_argument [76948,76969]" dest="call_argument [76955,76976]"/>
  <match src="type_name [38800,38807]" dest="type_name [38800,38807]"/>
  <match src="]: ] [62547,62548]" dest="]: ] [62554,62555]"/>
  <match src="parameter [29663,29677]" dest="parameter [29663,29677]"/>
  <match src="(: ( [16672,16673]" dest="(: ( [16672,16673]"/>
  <match src="function: function [4808,4816]" dest="function: function [4808,4816]"/>
  <match src="assignment_expression [7628,7643]" dest="assignment_expression [7628,7643]"/>
  <match src="comment: // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times. [54644,54723]" dest="comment: // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times. [54644,54723]"/>
  <match src="]: ] [71159,71160]" dest="]: ] [71166,71167]"/>
  <match src="identifier: tokenId [52085,52092]" dest="identifier: tokenId [52085,52092]"/>
  <match src="address: address [13861,13868]" dest="address: address [13861,13868]"/>
  <match src=",: , [78129,78130]" dest=",: , [78136,78137]"/>
  <match src="type_name [75380,75387]" dest="type_name [75387,75394]"/>
  <match src="uint256: uint256 [46715,46722]" dest="uint256: uint256 [46715,46722]"/>
  <match src="]: ] [46856,46857]" dest="]: ] [46856,46857]"/>
  <match src="call_argument [28225,28229]" dest="call_argument [28225,28229]"/>
  <match src=",: , [63006,63007]" dest=",: , [63013,63014]"/>
  <match src=",: , [62870,62871]" dest=",: , [62877,62878]"/>
  <match src="state_mutability [42338,42342]" dest="state_mutability [42338,42342]"/>
  <match src="yul_path [11229,11231]" dest="yul_path [11229,11231]"/>
  <match src="&lt;: &lt; [41053,41054]" dest="&lt;: &lt; [41053,41054]"/>
  <match src="number_literal: 0 [50549,50550]" dest="number_literal: 0 [50549,50550]"/>
  <match src="returns: returns [7051,7058]" dest="returns: returns [7051,7058]"/>
  <match src="{: { [40073,40074]" dest="{: { [40073,40074]"/>
  <match src="&quot;: &quot; [68948,68949]" dest="&quot;: &quot; [68955,68956]"/>
  <match src="identifier: recover [15507,15514]" dest="identifier: recover [15507,15514]"/>
  <match src="&gt;=: &gt;= [69166,69168]" dest="&gt;=: &gt;= [69173,69175]"/>
  <match src="uint256: uint256 [5555,5562]" dest="uint256: uint256 [5555,5562]"/>
  <match src="): ) [64543,64544]" dest="): ) [64550,64551]"/>
  <match src="returns: returns [32449,32456]" dest="returns: returns [32449,32456]"/>
  <match src="array_access [68357,68429]" dest="array_access [68364,68436]"/>
  <match src="array_access [81285,81298]" dest="array_access [81292,81305]"/>
  <match src="type_name [61462,61469]" dest="type_name [61469,61476]"/>
  <match src="visibility [42185,42193]" dest="visibility [42185,42193]"/>
  <match src="revert_statement [42781,42821]" dest="revert_statement [42781,42821]"/>
  <match src="(: ( [5699,5700]" dest="(: ( [5699,5700]"/>
  <match src="): ) [49379,49380]" dest="): ) [49379,49380]"/>
  <match src="): ) [43639,43640]" dest="): ) [43639,43640]"/>
  <match src="function_body [39550,39686]" dest="function_body [39550,39686]"/>
  <match src="parameter [1826,1836]" dest="parameter [1826,1836]"/>
  <match src="string_literal [65777,65798]" dest="string_literal [65784,65805]"/>
  <match src="address: address [27108,27115]" dest="address: address [27108,27115]"/>
  <match src="type_name [66200,66206]" dest="type_name [66207,66213]"/>
  <match src="): ) [58816,58817]" dest="): ) [58823,58824]"/>
  <match src="identifier: id [2331,2333]" dest="identifier: id [2331,2333]"/>
  <match src="identifier: Commoner [79098,79106]" dest="identifier: Commoner [79105,79113]"/>
  <match src="call_argument [69542,69592]" dest="call_argument [69549,69599]"/>
  <match src="(: ( [64208,64209]" dest="(: ( [64215,64216]"/>
  <match src="identifier: saleStatus [68931,68941]" dest="identifier: saleStatus [68938,68948]"/>
  <match src="uint8: uint8 [5768,5773]" dest="uint8: uint8 [5768,5773]"/>
  <match src="identifier: _tokenApprovals [55024,55039]" dest="identifier: _tokenApprovals [55024,55039]"/>
  <match src="string [63844,63855]" dest="string [63851,63862]"/>
  <match src="user_defined_type [52460,52474]" dest="user_defined_type [52460,52474]"/>
  <match src="primitive_type [30856,30861]" dest="primitive_type [30856,30861]"/>
  <match src="identifier: tokenPartner [64555,64567]" dest="identifier: tokenPartner [64562,64574]"/>
  <match src="type_name [20754,20761]" dest="type_name [20754,20761]"/>
  <match src="function_definition [40258,40370]" dest="function_definition [40258,40370]"/>
  <match src="primitive_type [22185,22192]" dest="primitive_type [22185,22192]"/>
  <match src="comment: // currently is to use assembly. [11105,11137]" dest="comment: // currently is to use assembly. [11105,11137]"/>
  <match src="identifier: encodePacked [78066,78078]" dest="identifier: encodePacked [78073,78085]"/>
  <match src="expression_statement [68267,68335]" dest="expression_statement [68274,68342]"/>
  <match src="identifier: tokenNo_ [64175,64183]" dest="identifier: tokenNo_ [64182,64190]"/>
  <match src="uint8: uint8 [59433,59438]" dest="uint8: uint8 [59440,59445]"/>
  <match src="identifier: sender [64528,64534]" dest="identifier: sender [64535,64541]"/>
  <match src="(: ( [13037,13038]" dest="(: ( [13037,13038]"/>
  <match src="struct: struct [36096,36102]" dest="struct: struct [36096,36102]"/>
  <match src="': ' [42970,42971]" dest="': ' [42970,42971]"/>
  <match src="[: [ [44289,44290]" dest="[: [ [44289,44290]"/>
  <match src="internal: internal [12816,12824]" dest="internal: internal [12816,12824]"/>
  <match src="member_expression [76927,76933]" dest="member_expression [76934,76940]"/>
  <match src="identifier: value [7498,7503]" dest="identifier: value [7498,7503]"/>
  <match src="(: ( [31713,31714]" dest="(: ( [31713,31714]"/>
  <match src="identifier: doges_ [66218,66224]" dest="identifier: doges_ [66225,66231]"/>
  <match src="call_argument [64999,65018]" dest="call_argument [65006,65025]"/>
  <match src="function: function [38131,38139]" dest="function: function [38131,38139]"/>
  <match src="assignment_expression [73042,73080]" dest="assignment_expression [73049,73087]"/>
  <match src=",: , [48967,48968]" dest=",: , [48967,48968]"/>
  <match src="bytes32: bytes32 [17239,17246]" dest="bytes32: bytes32 [17239,17246]"/>
  <match src="call_argument [68562,68571]" dest="call_argument [68569,68578]"/>
  <match src="parameter [3800,3810]" dest="parameter [3800,3810]"/>
  <match src="!=: != [6711,6713]" dest="!=: != [6711,6713]"/>
  <match src="interface: interface [2246,2255]" dest="interface: interface [2246,2255]"/>
  <match src="{: { [64725,64726]" dest="{: { [64732,64733]"/>
  <match src="[: [ [66279,66280]" dest="[: [ [66286,66287]"/>
  <match src="identifier: tokenNo_ [68288,68296]" dest="identifier: tokenNo_ [68295,68303]"/>
  <match src="identifier: sender [61134,61140]" dest="identifier: sender [61141,61147]"/>
  <match src="): ) [41769,41770]" dest="): ) [41769,41770]"/>
  <match src="}: } [66123,66124]" dest="}: } [66130,66131]"/>
  <match src="uint256: uint256 [58960,58967]" dest="uint256: uint256 [58967,58974]"/>
  <match src="primitive_type [60410,60416]" dest="primitive_type [60417,60423]"/>
  <match src="(: ( [32829,32830]" dest="(: ( [32829,32830]"/>
  <match src="address: address [18704,18711]" dest="address: address [18704,18711]"/>
  <match src="function: function [5466,5474]" dest="function: function [5466,5474]"/>
  <match src="): ) [66236,66237]" dest="): ) [66243,66244]"/>
  <match src="identifier: _addressData [37590,37602]" dest="identifier: _addressData [37590,37602]"/>
  <match src="(: ( [69514,69515]" dest="(: ( [69521,69522]"/>
  <match src="function_definition [2288,2378]" dest="function_definition [2288,2378]"/>
  <match src="visibility [59868,59874]" dest="visibility [59875,59881]"/>
  <match src="parameter [19307,19322]" dest="parameter [19307,19322]"/>
  <match src="}: } [3549,3550]" dest="}: } [3549,3550]"/>
  <match src=",: , [20787,20788]" dest=",: , [20787,20788]"/>
  <match src="call_argument [69342,69427]" dest="call_argument [69349,69434]"/>
  <match src="array_access [44588,44613]" dest="array_access [44588,44613]"/>
  <match src="): ) [77299,77300]" dest="): ) [77306,77307]"/>
  <match src="identifier: treat_ [61489,61495]" dest="identifier: treat_ [61496,61502]"/>
  <match src="}: } [56248,56249]" dest="}: } [56248,56249]"/>
  <match src="identifier: newOwner [65099,65107]" dest="identifier: newOwner [65106,65114]"/>
  <match src="identifier: Strings [16800,16807]" dest="identifier: Strings [16800,16807]"/>
  <match src="primitive_type [67142,67146]" dest="primitive_type [67149,67153]"/>
  <match src="=: = [71778,71779]" dest="=: = [71785,71786]"/>
  <match src="identifier: startTokenId [48552,48564]" dest="identifier: startTokenId [48552,48564]"/>
  <match src="+: + [7708,7709]" dest="+: + [7708,7709]"/>
  <match src="(: ( [52712,52713]" dest="(: ( [52712,52713]"/>
  <match src="primitive_type [29239,29244]" dest="primitive_type [29239,29244]"/>
  <match src="): ) [44228,44229]" dest="): ) [44228,44229]"/>
  <match src="==: == [10947,10949]" dest="==: == [10947,10949]"/>
  <match src="binary_expression [46174,46190]" dest="binary_expression [46174,46190]"/>
  <match src="expression_statement [7825,7881]" dest="expression_statement [7825,7881]"/>
  <match src="assignment_expression [71137,71173]" dest="assignment_expression [71144,71180]"/>
  <match src="parenthesized_expression [39592,39624]" dest="parenthesized_expression [39592,39624]"/>
  <match src="identifier: quantity_ [68857,68866]" dest="identifier: quantity_ [68864,68873]"/>
  <match src="identifier: v [13789,13790]" dest="identifier: v [13789,13790]"/>
  <match src="comment: //     doges[tokenId] = t; [75710,75736]" dest="comment: //     doges[tokenId] = t; [75717,75743]"/>
  <match src="if_statement [44769,44825]" dest="if_statement [44769,44825]"/>
  <match src=".: . [32642,32643]" dest=".: . [32642,32643]"/>
  <match src="=: = [62515,62516]" dest="=: = [62522,62523]"/>
  <match src="identifier: s [78097,78098]" dest="identifier: s [78104,78105]"/>
  <match src=",: , [3509,3510]" dest=",: , [3509,3510]"/>
  <match src="address: address [80310,80317]" dest="address: address [80317,80324]"/>
  <match src="primitive_type [67423,67427]" dest="primitive_type [67430,67434]"/>
  <match src="}: } [2490,2491]" dest="}: } [2490,2491]"/>
  <match src="uint256: uint256 [40064,40071]" dest="uint256: uint256 [40064,40071]"/>
  <match src="(: ( [25816,25817]" dest="(: ( [25816,25817]"/>
  <match src="variable_declaration_statement [60997,61022]" dest="variable_declaration_statement [61004,61029]"/>
  <match src="uint8: uint8 [76447,76452]" dest="uint8: uint8 [76454,76459]"/>
  <match src="string_literal [61740,61751]" dest="string_literal [61747,61758]"/>
  <match src="call_argument [45166,45178]" dest="call_argument [45166,45178]"/>
  <match src="[: [ [71089,71090]" dest="[: [ [71096,71097]"/>
  <match src="): ) [42106,42107]" dest="): ) [42106,42107]"/>
  <match src="block_statement [7230,7290]" dest="block_statement [7230,7290]"/>
  <match src="call_argument [30099,30109]" dest="call_argument [30099,30109]"/>
  <match src="function_definition [19065,19139]" dest="function_definition [19065,19139]"/>
  <match src="member_expression [55900,55946]" dest="member_expression [55900,55946]"/>
  <match src="binary_expression [32632,32653]" dest="binary_expression [32632,32653]"/>
  <match src="call_expression [80075,80099]" dest="call_expression [80082,80106]"/>
  <match src="): ) [80581,80582]" dest="): ) [80588,80589]"/>
  <match src="&quot;: &quot; [69429,69430]" dest="&quot;: &quot; [69436,69437]"/>
  <match src="number_literal: 51 [63084,63086]" dest="number_literal: 51 [63091,63093]"/>
  <match src="for: for [69991,69994]" dest="for: for [69998,70001]"/>
  <match src="member_expression [81061,81083]" dest="member_expression [81068,81090]"/>
  <match src="type_name [1166,1172]" dest="type_name [1166,1172]"/>
  <match src="address: address [37680,37687]" dest="address: address [37680,37687]"/>
  <match src="(: ( [29238,29239]" dest="(: ( [29238,29239]"/>
  <match src="identifier: commoners [73208,73217]" dest="identifier: commoners [73215,73224]"/>
  <match src="bool: bool [52612,52616]" dest="bool: bool [52612,52616]"/>
  <match src="assignment_expression [72985,73023]" dest="assignment_expression [72992,73030]"/>
  <match src="if_statement [73265,74250]" dest="if_statement [73272,74257]"/>
  <match src="): ) [7332,7333]" dest="): ) [7332,7333]"/>
  <match src="function: function [591,599]" dest="function: function [591,599]"/>
  <match src="virtual: virtual [45611,45618]" dest="virtual: virtual [45611,45618]"/>
  <match src="=: = [50987,50988]" dest="=: = [50987,50988]"/>
  <match src="identifier: accessory [71047,71056]" dest="identifier: accessory [71054,71063]"/>
  <match src="function_body [64980,65056]" dest="function_body [64987,65063]"/>
  <match src="=: = [70946,70947]" dest="=: = [70953,70954]"/>
  <match src="(: ( [31372,31373]" dest="(: ( [31372,31373]"/>
  <match src="uint256: uint256 [48723,48730]" dest="uint256: uint256 [48723,48730]"/>
  <match src=",: , [62883,62884]" dest=",: , [62890,62891]"/>
  <match src="identifier: _ownerships [50989,51000]" dest="identifier: _ownerships [50989,51000]"/>
  <match src="primitive_type [67773,67778]" dest="primitive_type [67780,67785]"/>
  <match src="function_body [52449,54791]" dest="function_body [52449,54791]"/>
  <match src="assignment_expression [77417,77469]" dest="assignment_expression [77424,77476]"/>
  <match src="type_name [22865,22872]" dest="type_name [22865,22872]"/>
  <match src="identifier: msg [44714,44717]" dest="identifier: msg [44714,44717]"/>
  <match src="override: override [79707,79715]" dest="override: override [79714,79722]"/>
  <match src="(: ( [78765,78766]" dest="(: ( [78772,78773]"/>
  <match src="primitive_type [44151,44155]" dest="primitive_type [44151,44155]"/>
  <match src="parameter [47871,47880]" dest="parameter [47871,47880]"/>
  <match src="address: address [25777,25784]" dest="address: address [25777,25784]"/>
  <match src="identifier: initialSaleMinted [68630,68647]" dest="identifier: initialSaleMinted [68637,68654]"/>
  <match src="string_literal [46381,46423]" dest="string_literal [46381,46423]"/>
  <match src="call_argument [11318,11320]" dest="call_argument [11318,11320]"/>
  <match src="): ) [44387,44388]" dest="): ) [44387,44388]"/>
  <match src="variable_declaration_statement [66200,66213]" dest="variable_declaration_statement [66207,66220]"/>
  <match src="[: [ [70179,70180]" dest="[: [ [70186,70187]"/>
  <match src="identifier: _checkContractOnERC721Received [55606,55636]" dest="identifier: _checkContractOnERC721Received [55606,55636]"/>
  <match src="array_access [63306,63317]" dest="array_access [63313,63324]"/>
  <match src="): ) [48005,48006]" dest="): ) [48005,48006]"/>
  <match src="identifier: vrf_ [61929,61933]" dest="identifier: vrf_ [61936,61940]"/>
  <match src=",: , [47386,47387]" dest=",: , [47386,47387]"/>
  <match src="if: if [54318,54320]" dest="if: if [54318,54320]"/>
  <match src="assembly: assembly [11151,11159]" dest="assembly: assembly [11151,11159]"/>
  <match src="type_cast_expression [68542,68555]" dest="type_cast_expression [68549,68562]"/>
  <match src="identifier: topCommoner_ [72195,72207]" dest="identifier: topCommoner_ [72202,72214]"/>
  <match src="primitive_type [31336,31341]" dest="primitive_type [31336,31341]"/>
  <match src="identifier: revealed [61945,61953]" dest="identifier: revealed [61952,61960]"/>
  <match src="): ) [66466,66467]" dest="): ) [66473,66474]"/>
  <match src="]: ] [70990,70991]" dest="]: ] [70997,70998]"/>
  <match src=",: , [46971,46972]" dest=",: , [46971,46972]"/>
  <match src="&quot;: &quot; [66830,66831]" dest="&quot;: &quot; [66837,66838]"/>
  <match src="state_variable_declaration [58197,58241]" dest="state_variable_declaration [58197,58241]"/>
  <match src="call_argument [32047,32057]" dest="call_argument [32047,32057]"/>
  <match src="identifier: i [70124,70125]" dest="identifier: i [70131,70132]"/>
  <match src="identifier: accessory [80773,80782]" dest="identifier: accessory [80780,80789]"/>
  <match src=",: , [30760,30761]" dest=",: , [30760,30761]"/>
  <match src="!=: != [43589,43591]" dest="!=: != [43589,43591]"/>
  <match src="function_body [40321,40370]" dest="function_body [40321,40370]"/>
  <match src="call_expression [44706,44758]" dest="call_expression [44706,44758]"/>
  <match src="]: ] [62979,62980]" dest="]: ] [62986,62987]"/>
  <match src="]: ] [73782,73783]" dest="]: ] [73789,73790]"/>
  <match src="identifier: _mint [75007,75012]" dest="identifier: _mint [75014,75019]"/>
  <match src="=: = [81264,81265]" dest="=: = [81271,81272]"/>
  <match src="(: ( [42051,42052]" dest="(: ( [42051,42052]"/>
  <match src=",: , [13098,13099]" dest=",: , [13098,13099]"/>
  <match src="block_statement [10460,10920]" dest="block_statement [10460,10920]"/>
  <match src="identifier: s [78233,78234]" dest="identifier: s [78240,78241]"/>
  <match src="return_statement [31037,31096]" dest="return_statement [31037,31096]"/>
  <match src="type_name [342,348]" dest="type_name [342,348]"/>
  <match src="type_name [53330,53341]" dest="type_name [53330,53341]"/>
  <match src="if_statement [54123,54507]" dest="if_statement [54123,54507]"/>
  <match src="[: [ [71201,71202]" dest="[: [ [71208,71209]"/>
  <match src="call_argument [75029,75034]" dest="call_argument [75036,75041]"/>
  <match src="==: == [65291,65293]" dest="==: == [65298,65300]"/>
  <match src="member_expression [68275,68308]" dest="member_expression [68282,68315]"/>
  <match src="call_argument [69535,69539]" dest="call_argument [69542,69546]"/>
  <match src="array_access [73208,73231]" dest="array_access [73215,73238]"/>
  <match src="&quot;: &quot; [7640,7641]" dest="&quot;: &quot; [7640,7641]"/>
  <match src="binary_expression [46281,46357]" dest="binary_expression [46281,46357]"/>
  <match src="identifier: require [64991,64998]" dest="identifier: require [64998,65005]"/>
  <match src="returns: returns [39820,39827]" dest="returns: returns [39820,39827]"/>
  <match src="(: ( [42676,42677]" dest="(: ( [42676,42677]"/>
  <match src="): ) [19360,19361]" dest="): ) [19360,19361]"/>
  <match src="uint256: uint256 [69899,69906]" dest="uint256: uint256 [69906,69913]"/>
  <match src="type_name [4173,4180]" dest="type_name [4173,4180]"/>
  <match src="function_body [16155,16346]" dest="function_body [16155,16346]"/>
  <match src="identifier: _mint [74897,74902]" dest="identifier: _mint [74904,74909]"/>
  <match src="boolean_literal [75029,75034]" dest="boolean_literal [75036,75041]"/>
  <match src=",: , [62898,62899]" dest=",: , [62905,62906]"/>
  <match src="user_defined_type [53564,53578]" dest="user_defined_type [53564,53578]"/>
  <match src="comment: /**      * @dev Returns an Ethereum Signed Typed Data, created from a      * `domainSeparator` and a `structHash`. This produces hash corresponding      * to the one signed with the      * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]      * JSON-RPC method as part of EIP-712.      *      * See {recover}.      */ [16847,17183]" dest="comment: /**      * @dev Returns an Ethereum Signed Typed Data, created from a      * `domainSeparator` and a `structHash`. This produces hash corresponding      * to the one signed with the      * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]      * JSON-RPC method as part of EIP-712.      *      * See {recover}.      */ [16847,17183]"/>
  <match src="binary_expression [76495,76504]" dest="binary_expression [76502,76511]"/>
  <match src="}: } [10919,10920]" dest="}: } [10919,10920]"/>
  <match src="primitive_type [40313,40319]" dest="primitive_type [40313,40319]"/>
  <match src="(: ( [66146,66147]" dest="(: ( [66153,66154]"/>
  <match src=",: , [63018,63019]" dest=",: , [63025,63026]"/>
  <match src="&quot;: &quot; [52821,52822]" dest="&quot;: &quot; [52821,52822]"/>
  <match src="state_mutability [4686,4690]" dest="state_mutability [4686,4690]"/>
  <match src="(: ( [8412,8413]" dest="(: ( [8412,8413]"/>
  <match src="identifier: msg [68171,68174]" dest="identifier: msg [68178,68181]"/>
  <match src="': ' [75026,75027]" dest="': ' [75033,75034]"/>
  <match src="identifier: _data [45876,45881]" dest="identifier: _data [45876,45881]"/>
  <match src="indexed: indexed [18519,18526]" dest="indexed: indexed [18519,18526]"/>
  <match src="primitive_type [47815,47822]" dest="primitive_type [47815,47822]"/>
  <match src=",: , [61495,61496]" dest=",: , [61502,61503]"/>
  <match src="primitive_type [42540,42546]" dest="primitive_type [42540,42546]"/>
  <match src="(: ( [52918,52919]" dest="(: ( [52918,52919]"/>
  <match src="): ) [14892,14893]" dest="): ) [14892,14893]"/>
  <match src="expression_statement [64892,64913]" dest="expression_statement [64899,64920]"/>
  <match src="variable_declaration [69899,69918]" dest="variable_declaration [69906,69925]"/>
  <match src="type_name [29172,29177]" dest="type_name [29172,29177]"/>
  <match src="if_statement [15199,15302]" dest="if_statement [15199,15302]"/>
  <match src="/: / [74828,74829]" dest="/: / [74835,74836]"/>
  <match src="[: [ [63004,63005]" dest="[: [ [63011,63012]"/>
  <match src="identifier: sender [33705,33711]" dest="identifier: sender [33705,33711]"/>
  <match src="primitive_type [4629,4635]" dest="primitive_type [4629,4635]"/>
  <match src="{: { [31843,31844]" dest="{: { [31843,31844]"/>
  <match src="): ) [16719,16720]" dest="): ) [16719,16720]"/>
  <match src="=: = [77430,77431]" dest="=: = [77437,77438]"/>
  <match src="visibility [58653,58659]" dest="visibility [58660,58666]"/>
  <match src="identifier: _ownershipOf [52498,52510]" dest="identifier: _ownershipOf [52498,52510]"/>
  <match src="{: { [47897,47898]" dest="{: { [47897,47898]"/>
  <match src="!=: != [50041,50043]" dest="!=: != [50041,50043]"/>
  <match src="}: } [45685,45686]" dest="}: } [45685,45686]"/>
  <match src="type_name [22935,22940]" dest="type_name [22935,22940]"/>
  <match src="parameter [3774,3786]" dest="parameter [3774,3786]"/>
  <match src="identifier: topCommoner_ [71256,71268]" dest="identifier: topCommoner_ [71263,71275]"/>
  <match src="identifier: _msgSender [44290,44300]" dest="identifier: _msgSender [44290,44300]"/>
  <match src="primitive_type [32401,32407]" dest="primitive_type [32401,32407]"/>
  <match src="identifier: timestamp [4322,4331]" dest="identifier: timestamp [4322,4331]"/>
  <match src="parameter [18197,18201]" dest="parameter [18197,18201]"/>
  <match src="function_body [39216,39413]" dest="function_body [39216,39413]"/>
  <match src="type_name [76846,76853]" dest="type_name [76853,76860]"/>
  <match src="identifier: _currentIndex [46819,46832]" dest="identifier: _currentIndex [46819,46832]"/>
  <match src="{: { [18371,18372]" dest="{: { [18371,18372]"/>
  <match src="visibility [67400,67408]" dest="visibility [67407,67415]"/>
  <match src="block_statement [70075,70161]" dest="block_statement [70082,70168]"/>
  <match src="{: { [85,86]" dest="{: { [85,86]"/>
  <match src="(: ( [48639,48640]" dest="(: ( [48639,48640]"/>
  <match src="expression_statement [67203,67273]" dest="expression_statement [67210,67280]"/>
  <match src="identifier: IOracle [4577,4584]" dest="identifier: IOracle [4577,4584]"/>
  <match src="]: ] [59439,59440]" dest="]: ] [59446,59447]"/>
  <match src="identifier: value [69160,69165]" dest="identifier: value [69167,69172]"/>
  <match src="try_statement [55777,56260]" dest="try_statement [55777,56260]"/>
  <match src="identifier: from [20123,20127]" dest="identifier: from [20123,20127]"/>
  <match src="uint256: uint256 [60970,60977]" dest="uint256: uint256 [60977,60984]"/>
  <match src="comment: //     getApproved(tokenId) == _msgSender()); [50219,50264]" dest="comment: //     getApproved(tokenId) == _msgSender()); [50219,50264]"/>
  <match src="=: = [74231,74232]" dest="=: = [74238,74239]"/>
  <match src="(: ( [6223,6224]" dest="(: ( [6223,6224]"/>
  <match src="(: ( [46294,46295]" dest="(: ( [46294,46295]"/>
  <match src="): ) [3338,3339]" dest="): ) [3338,3339]"/>
  <match src="comment: // error ApprovalToCurrentOwner(); [35411,35445]" dest="comment: // error ApprovalToCurrentOwner(); [35411,35445]"/>
  <match src="identifier: abi [67465,67468]" dest="identifier: abi [67472,67475]"/>
  <match src="assignment_expression [77251,77300]" dest="assignment_expression [77258,77307]"/>
  <match src="call_expression [76936,76973]" dest="call_expression [76943,76980]"/>
  <match src="memory: memory [52475,52481]" dest="memory: memory [52475,52481]"/>
  <match src="primitive_type [3774,3781]" dest="primitive_type [3774,3781]"/>
  <match src="indexed: indexed [18712,18719]" dest="indexed: indexed [18712,18719]"/>
  <match src="[: [ [66961,66962]" dest="[: [ [66968,66969]"/>
  <match src="&quot;: &quot; [69303,69304]" dest="&quot;: &quot; [69310,69311]"/>
  <match src="array_access [62762,62773]" dest="array_access [62769,62780]"/>
  <match src="type_cast_expression [6775,6814]" dest="type_cast_expression [6775,6814]"/>
  <match src="uint256: uint256 [47397,47404]" dest="uint256: uint256 [47397,47404]"/>
  <match src="identifier: s [10507,10508]" dest="identifier: s [10507,10508]"/>
  <match src="parameter [22200,22216]" dest="parameter [22200,22216]"/>
  <match src="function: function [64685,64693]" dest="function: function [64692,64700]"/>
  <match src="parenthesized_expression [43662,43701]" dest="parenthesized_expression [43662,43701]"/>
  <match src="): ) [44757,44758]" dest="): ) [44757,44758]"/>
  <match src="(: ( [39495,39496]" dest="(: ( [39495,39496]"/>
  <match src="if_statement [48917,49094]" dest="if_statement [48917,49094]"/>
  <match src="identifier: interfaceId [39304,39315]" dest="identifier: interfaceId [39304,39315]"/>
  <match src="primitive_type [77028,77034]" dest="primitive_type [77035,77041]"/>
  <match src="): ) [43981,43982]" dest="): ) [43981,43982]"/>
  <match src="yul_evm_builtin [61064,61075]" dest="yul_evm_builtin [61071,61082]"/>
  <match src="function_definition [20079,20191]" dest="function_definition [20079,20191]"/>
  <match src="(: ( [61588,61589]" dest="(: ( [61595,61596]"/>
  <match src="call_argument [42139,42146]" dest="call_argument [42139,42146]"/>
  <match src="type_name [33674,33681]" dest="type_name [33674,33681]"/>
  <match src="binary_expression [66261,66292]" dest="binary_expression [66268,66299]"/>
  <match src="returns: returns [76392,76399]" dest="returns: returns [76399,76406]"/>
  <match src="[: [ [74154,74155]" dest="[: [ [74161,74162]"/>
  <match src="yul_assignment [10806,10847]" dest="yul_assignment [10806,10847]"/>
  <match src="return_type_definition [29230,29252]" dest="return_type_definition [29230,29252]"/>
  <match src="override: override [39175,39183]" dest="override: override [39175,39183]"/>
  <match src="number_literal: 0 [11370,11371]" dest="number_literal: 0 [11370,11371]"/>
  <match src="block_statement [41621,41869]" dest="block_statement [41621,41869]"/>
  <match src="identifier: safeTransferFrom [22838,22854]" dest="identifier: safeTransferFrom [22838,22854]"/>
  <match src="parameter [15566,15575]" dest="parameter [15566,15575]"/>
  <match src=",: , [42945,42946]" dest=",: , [42945,42946]"/>
  <match src="external: external [3812,3820]" dest="external: external [3812,3820]"/>
  <match src="identifier: tokenId [52511,52518]" dest="identifier: tokenId [52511,52518]"/>
  <match src="comment: // bodyType [62482,62493]" dest="comment: // bodyType [62489,62500]"/>
  <match src="array_access [81105,81118]" dest="array_access [81112,81125]"/>
  <match src="event_paramater [60734,60752]" dest="event_paramater [60741,60759]"/>
  <match src="[: [ [79230,79231]" dest="[: [ [79237,79238]"/>
  <match src="visibility [21994,22002]" dest="visibility [21994,22002]"/>
  <match src="string: string [724,730]" dest="string: string [724,730]"/>
  <match src="identifier: sender [64748,64754]" dest="identifier: sender [64755,64761]"/>
  <match src="[: [ [62945,62946]" dest="[: [ [62952,62953]"/>
  <match src="): ) [59914,59915]" dest="): ) [59921,59922]"/>
  <match src="identifier: target [28127,28133]" dest="identifier: target [28127,28133]"/>
  <match src="function_definition [1305,1383]" dest="function_definition [1305,1383]"/>
  <match src="identifier: tokenId [45666,45673]" dest="identifier: tokenId [45666,45673]"/>
</matches>
<actions>
  <insert-tree tree="visibility [58543,58549]" parent="state_variable_declaration [58512,58563]" at="1"/>
</actions>
