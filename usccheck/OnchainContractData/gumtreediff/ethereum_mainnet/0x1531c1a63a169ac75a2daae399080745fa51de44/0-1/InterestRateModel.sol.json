{
  "matches": [
    {
      "src": "parameter [693,702]",
      "dest": "parameter [692,701]"
    },
    {
      "src": "view: view [742,746]",
      "dest": "view: view [741,745]"
    },
    {
      "src": "return_type_definition [747,761]",
      "dest": "return_type_definition [746,760]"
    },
    {
      "src": "uint: uint [1279,1283]",
      "dest": "uint: uint [1277,1281]"
    },
    {
      "src": "primitive_type [756,760]",
      "dest": "primitive_type [755,759]"
    },
    {
      "src": "type_name [1254,1258]",
      "dest": "type_name [1252,1256]"
    },
    {
      "src": "return_type_definition [1336,1350]",
      "dest": "return_type_definition [1334,1348]"
    },
    {
      "src": "primitive_type [1294,1298]",
      "dest": "primitive_type [1292,1296]"
    },
    {
      "src": "function: function [1231,1239]",
      "dest": "function: function [1229,1237]"
    },
    {
      "src": "(: ( [1344,1345]",
      "dest": "(: ( [1342,1343]"
    },
    {
      "src": "contract_declaration [112,1356]",
      "dest": "contract_declaration [112,1354]"
    },
    {
      "src": "uint: uint [1345,1349]",
      "dest": "uint: uint [1343,1347]"
    },
    {
      "src": "external: external [1322,1330]",
      "dest": "external: external [1320,1328]"
    },
    {
      "src": "uint: uint [704,708]",
      "dest": "uint: uint [703,707]"
    },
    {
      "src": "state_variable_declaration [233,281]",
      "dest": "state_variable_declaration [233,281]"
    },
    {
      "src": "identifier: borrows [1270,1277]",
      "dest": "identifier: borrows [1268,1275]"
    },
    {
      "src": "true: true [276,280]",
      "dest": "true: true [276,280]"
    },
    {
      "src": "identifier: borrows [709,716]",
      "dest": "identifier: borrows [708,715]"
    },
    {
      "src": "identifier: reserveFactorMantissa [1299,1320]",
      "dest": "identifier: reserveFactorMantissa [1297,1318]"
    },
    {
      "src": "parameter [704,716]",
      "dest": "parameter [703,715]"
    },
    {
      "src": "uint: uint [1254,1258]",
      "dest": "uint: uint [1252,1256]"
    },
    {
      "src": ",: , [1263,1264]",
      "dest": ",: , [1261,1262]"
    },
    {
      "src": "parameter [1265,1277]",
      "dest": "parameter [1263,1275]"
    },
    {
      "src": "visibility [238,244]",
      "dest": "visibility [238,244]"
    },
    {
      "src": "identifier: isInterestRateModel [254,273]",
      "dest": "identifier: isInterestRateModel [254,273]"
    },
    {
      "src": "pragma: pragma [0,6]",
      "dest": "pragma: pragma [0,6]"
    },
    {
      "src": "uint: uint [693,697]",
      "dest": "uint: uint [692,696]"
    },
    {
      "src": "{: { [139,140]",
      "dest": "{: { [139,140]"
    },
    {
      "src": "type_name [693,697]",
      "dest": "type_name [692,696]"
    },
    {
      "src": "contract: contract [112,120]",
      "dest": "contract: contract [112,120]"
    },
    {
      "src": "parameter [1254,1263]",
      "dest": "parameter [1252,1261]"
    },
    {
      "src": "solidity_version_comparison_operator [15,17]",
      "dest": "solidity_version_comparison_operator [15,17]"
    },
    {
      "src": "bool: bool [233,237]",
      "dest": "bool: bool [233,237]"
    },
    {
      "src": "solidity_version: 0.5.16 [17,23]",
      "dest": "solidity_version: 0.5.16 [17,23]"
    },
    {
      "src": "function_definition [670,762]",
      "dest": "function_definition [669,761]"
    },
    {
      "src": "type_name [704,708]",
      "dest": "type_name [703,707]"
    },
    {
      "src": "primitive_type [1254,1258]",
      "dest": "primitive_type [1252,1256]"
    },
    {
      "src": "state_mutability [1331,1335]",
      "dest": "state_mutability [1329,1333]"
    },
    {
      "src": "comment: /**       * @notice Calculates the current borrow interest rate per block       * @param cash The total amount of cash the market has       * @param borrows The total amount of borrows the market has outstanding       * @param reserves The total amnount of reserves the market has       * @return The borrow rate per block (as a percentage, and scaled by 1e18)       */ [289,664]",
      "dest": "comment: /**       * @notice Calculates the current borrow interest rate per block       * @param cash The total amount of cash the market has       * @param borrows The total amount of borrows the market has outstanding       * @param reserves The total amount of reserves the market has       * @return The borrow rate per block (as a percentage, and scaled by 1e18)       */ [289,663]"
    },
    {
      "src": "type_name [1345,1349]",
      "dest": "type_name [1343,1347]"
    },
    {
      "src": "type_name [1265,1269]",
      "dest": "type_name [1263,1267]"
    },
    {
      "src": "identifier: cash [1259,1263]",
      "dest": "identifier: cash [1257,1261]"
    },
    {
      "src": "boolean_literal [276,280]",
      "dest": "boolean_literal [276,280]"
    },
    {
      "src": "(: ( [1253,1254]",
      "dest": "(: ( [1251,1252]"
    },
    {
      "src": "}: } [1355,1356]",
      "dest": "}: } [1353,1354]"
    },
    {
      "src": "public: public [238,244]",
      "dest": "public: public [238,244]"
    },
    {
      "src": "identifier: reserves [723,731]",
      "dest": "identifier: reserves [722,730]"
    },
    {
      "src": "identifier: cash [698,702]",
      "dest": "identifier: cash [697,701]"
    },
    {
      "src": "identifier: reserves [1284,1292]",
      "dest": "identifier: reserves [1282,1290]"
    },
    {
      "src": "uint: uint [1294,1298]",
      "dest": "uint: uint [1292,1296]"
    },
    {
      "src": "(: ( [692,693]",
      "dest": "(: ( [691,692]"
    },
    {
      "src": "state_mutability [742,746]",
      "dest": "state_mutability [741,745]"
    },
    {
      "src": "uint: uint [756,760]",
      "dest": "uint: uint [755,759]"
    },
    {
      "src": "parameter [718,731]",
      "dest": "parameter [717,730]"
    },
    {
      "src": "type_name [233,237]",
      "dest": "type_name [233,237]"
    },
    {
      "src": "): ) [1320,1321]",
      "dest": "): ) [1318,1319]"
    },
    {
      "src": "visibility [1322,1330]",
      "dest": "visibility [1320,1328]"
    },
    {
      "src": "view: view [1331,1335]",
      "dest": "view: view [1329,1333]"
    },
    {
      "src": "returns: returns [1336,1343]",
      "dest": "returns: returns [1334,1341]"
    },
    {
      "src": "solidity_pragma_token [7,23]",
      "dest": "solidity_pragma_token [7,23]"
    },
    {
      "src": "contract_body [139,1356]",
      "dest": "contract_body [139,1354]"
    },
    {
      "src": "uint: uint [1265,1269]",
      "dest": "uint: uint [1263,1267]"
    },
    {
      "src": "primitive_type [1345,1349]",
      "dest": "primitive_type [1343,1347]"
    },
    {
      "src": "type_name [756,760]",
      "dest": "type_name [755,759]"
    },
    {
      "src": "function: function [670,678]",
      "dest": "function: function [669,677]"
    },
    {
      "src": "external: external [733,741]",
      "dest": "external: external [732,740]"
    },
    {
      "src": "primitive_type [1279,1283]",
      "dest": "primitive_type [1277,1281]"
    },
    {
      "src": "^:  ^ [15,17]",
      "dest": "^:  ^ [15,17]"
    },
    {
      "src": ",: , [716,717]",
      "dest": ",: , [715,716]"
    },
    {
      "src": "constant: constant [245,253]",
      "dest": "constant: constant [245,253]"
    },
    {
      "src": "parameter [1294,1320]",
      "dest": "parameter [1292,1318]"
    },
    {
      "src": "): ) [760,761]",
      "dest": "): ) [759,760]"
    },
    {
      "src": "solidity: solidity [7,15]",
      "dest": "solidity: solidity [7,15]"
    },
    {
      "src": "identifier: InterestRateModel [121,138]",
      "dest": "identifier: InterestRateModel [121,138]"
    },
    {
      "src": "true [276,280]",
      "dest": "true [276,280]"
    },
    {
      "src": ",: , [702,703]",
      "dest": ",: , [701,702]"
    },
    {
      "src": "source_file [0,1358]",
      "dest": "source_file [0,1356]"
    },
    {
      "src": "=: = [274,275]",
      "dest": "=: = [274,275]"
    },
    {
      "src": "primitive_type [718,722]",
      "dest": "primitive_type [717,721]"
    },
    {
      "src": "parameter [1345,1349]",
      "dest": "parameter [1343,1347]"
    },
    {
      "src": "(: ( [755,756]",
      "dest": "(: ( [754,755]"
    },
    {
      "src": "comment: /// @notice Indicator that this is an InterestRateModel contract (for inspection) [146,227]",
      "dest": "comment: /// @notice Indicator that this is an InterestRateModel contract (for inspection) [146,227]"
    },
    {
      "src": "parameter [756,760]",
      "dest": "parameter [755,759]"
    },
    {
      "src": ",: , [1277,1278]",
      "dest": ",: , [1275,1276]"
    },
    {
      "src": "identifier: getSupplyRate [1240,1253]",
      "dest": "identifier: getSupplyRate [1238,1251]"
    },
    {
      "src": "type_name [1279,1283]",
      "dest": "type_name [1277,1281]"
    },
    {
      "src": "returns: returns [747,754]",
      "dest": "returns: returns [746,753]"
    },
    {
      "src": "primitive_type [693,697]",
      "dest": "primitive_type [692,696]"
    },
    {
      "src": "uint: uint [718,722]",
      "dest": "uint: uint [717,721]"
    },
    {
      "src": "pragma_directive [0,24]",
      "dest": "pragma_directive [0,24]"
    },
    {
      "src": "primitive_type [704,708]",
      "dest": "primitive_type [703,707]"
    },
    {
      "src": "function_definition [1231,1351]",
      "dest": "function_definition [1229,1349]"
    },
    {
      "src": "): ) [731,732]",
      "dest": "): ) [730,731]"
    },
    {
      "src": "type_name [1294,1298]",
      "dest": "type_name [1292,1296]"
    },
    {
      "src": "primitive_type [1265,1269]",
      "dest": "primitive_type [1263,1267]"
    },
    {
      "src": "parameter [1279,1292]",
      "dest": "parameter [1277,1290]"
    },
    {
      "src": "primitive_type [233,237]",
      "dest": "primitive_type [233,237]"
    },
    {
      "src": "comment: /**       * @notice Calculates the current supply interest rate per block       * @param cash The total amount of cash the market has       * @param borrows The total amount of borrows the market has outstanding       * @param reserves The total amnount of reserves the market has       * @param reserveFactorMantissa The current reserve factor the market has       * @return The supply rate per block (as a percentage, and scaled by 1e18)       */ [770,1225]",
      "dest": "comment: /**       * @notice Calculates the current supply interest rate per block       * @param cash The total amount of cash the market has       * @param borrows The total amount of borrows the market has outstanding       * @param reserves The total amount of reserves the market has       * @param reserveFactorMantissa The current reserve factor the market has       * @return The supply rate per block (as a percentage, and scaled by 1e18)       */ [769,1223]"
    },
    {
      "src": "): ) [1349,1350]",
      "dest": "): ) [1347,1348]"
    },
    {
      "src": "visibility [733,741]",
      "dest": "visibility [732,740]"
    },
    {
      "src": ",: , [1292,1293]",
      "dest": ",: , [1290,1291]"
    },
    {
      "src": "identifier: getBorrowRate [679,692]",
      "dest": "identifier: getBorrowRate [678,691]"
    },
    {
      "src": "comment: /**   * @title Compound's InterestRateModel Interface   * @author Compound   */ [28,110]",
      "dest": "comment: /**   * @title Compound's InterestRateModel Interface   * @author Compound   */ [28,110]"
    },
    {
      "src": "type_name [718,722]",
      "dest": "type_name [717,721]"
    }
  ],
  "actions": [
    {
      "action": "update-node",
      "tree": "comment: /**       * @notice Calculates the current borrow interest rate per block       * @param cash The total amount of cash the market has       * @param borrows The total amount of borrows the market has outstanding       * @param reserves The total amnount of reserves the market has       * @return The borrow rate per block (as a percentage, and scaled by 1e18)       */ [289,664]",
      "label": "/**       * @notice Calculates the current borrow interest rate per block       * @param cash The total amount of cash the market has       * @param borrows The total amount of borrows the market has outstanding       * @param reserves The total amount of reserves the market has       * @return The borrow rate per block (as a percentage, and scaled by 1e18)       */"
    },
    {
      "action": "update-node",
      "tree": "comment: /**       * @notice Calculates the current supply interest rate per block       * @param cash The total amount of cash the market has       * @param borrows The total amount of borrows the market has outstanding       * @param reserves The total amnount of reserves the market has       * @param reserveFactorMantissa The current reserve factor the market has       * @return The supply rate per block (as a percentage, and scaled by 1e18)       */ [770,1225]",
      "label": "/**       * @notice Calculates the current supply interest rate per block       * @param cash The total amount of cash the market has       * @param borrows The total amount of borrows the market has outstanding       * @param reserves The total amount of reserves the market has       * @param reserveFactorMantissa The current reserve factor the market has       * @return The supply rate per block (as a percentage, and scaled by 1e18)       */"
    }
  ]
}