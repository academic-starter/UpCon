<?xml version="1.0" ?>
<matches>
  <match src="bytes32: bytes32 [2451,2458]" dest="bytes32: bytes32 [2529,2536]"/>
  <match src="visibility [23465,23471]" dest="visibility [38342,38348]"/>
  <match src="}: } [13522,13523]" dest="}: } [14520,14521]"/>
  <match src="type_name [91373,91380]" dest="type_name [89486,89493]"/>
  <match src="solidity: solidity [49068,49076]" dest="solidity: solidity [45956,45964]"/>
  <match src="{: { [91426,91427]" dest="{: { [89539,89540]"/>
  <match src="(: ( [38584,38585]" dest="(: ( [34982,34983]"/>
  <match src="(: ( [91459,91460]" dest="(: ( [89573,89574]"/>
  <match src="address: address [84391,84398]" dest="address: address [82295,82302]"/>
  <match src="number_literal: 0 [97591,97592]" dest="number_literal: 0 [95878,95879]"/>
  <match src="member_expression [90758,90781]" dest="member_expression [88849,88872]"/>
  <match src="(: ( [97007,97008]" dest="(: ( [95269,95270]"/>
  <match src="): ) [2938,2939]" dest="): ) [3026,3027]"/>
  <match src="&quot;: &quot; [21217,21218]" dest="&quot;: &quot; [20779,20780]"/>
  <match src="=: = [46201,46202]" dest="=: = [43027,43028]"/>
  <match src="}: } [54720,54721]" dest="}: } [51736,51737]"/>
  <match src="type_cast_expression [74438,74461]" dest="type_cast_expression [72045,72068]"/>
  <match src="yul_path [53140,53143]" dest="yul_path [50125,50128]"/>
  <match src="comment: // means a value is not in the set. [70265,70300]" dest="comment: // means a value is not in the set. [67751,67786]"/>
  <match src="identifier: a [65548,65549]" dest="identifier: a [62890,62891]"/>
  <match src="primitive_type [31678,31685]" dest="primitive_type [27892,27899]"/>
  <match src="identifier: isRegisteredAsNativeToken [110624,110649]" dest="identifier: isRegisteredAsNativeToken [109117,109142]"/>
  <match src="identifier: _bridgeContract [103522,103537]" dest="identifier: _bridgeContract [101994,102009]"/>
  <match src="}: } [10083,10084]" dest="}: } [11000,11001]"/>
  <match src="number_literal: 0x98aa806e31e94a687a31c65769cb99670064dd7f5a87526da075c5fb4eab9880 [13989,14055]" dest="number_literal: 0x98aa806e31e94a687a31c65769cb99670064dd7f5a87526da075c5fb4eab9880 [15012,15078]"/>
  <match src="identifier: map [81865,81868]" dest="identifier: map [79694,79697]"/>
  <match src="visibility [96820,96828]" dest="visibility [95078,95086]"/>
  <match src="type_name [83375,83379]" dest="type_name [81250,81254]"/>
  <match src="array_access [20871,20939]" dest="array_access [20425,20493]"/>
  <match src="): ) [100164,100165]" dest="): ) [98527,98528]"/>
  <match src="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/components/common/BridgeOperationsStorage.sol [1621,1722]" dest="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/components/common/BridgeOperationsStorage.sol [1676,1777]"/>
  <match src="member_expression [82589,82601]" dest="member_expression [80439,80451]"/>
  <match src="parameter [33411,33422]" dest="parameter [29677,29688]"/>
  <match src="pure: pure [64602,64606]" dest="pure: pure [61912,61916]"/>
  <match src="parameter [96791,96801]" dest="parameter [95049,95059]"/>
  <match src="identifier: amount [9977,9983]" dest="identifier: amount [10892,10898]"/>
  <match src="identifier: require [67502,67509]" dest="identifier: require [64903,64910]"/>
  <match src="function_definition [16554,16665]" dest="function_definition [118334,118447]"/>
  <match src="yul_block [54746,54815]" dest="yul_block [51763,51834]"/>
  <match src="type_cast_expression [84982,85035]" dest="type_cast_expression [82904,82957]"/>
  <match src="identifier: temp [43311,43315]" dest="identifier: temp [40049,40053]"/>
  <match src="type_cast_expression [43503,43524]" dest="type_cast_expression [40247,40268]"/>
  <match src="binary_expression [73429,73455]" dest="binary_expression [71002,71028]"/>
  <match src="): ) [50118,50119]" dest="): ) [47038,47039]"/>
  <match src="primitive_type [78024,78031]" dest="primitive_type [75752,75759]"/>
  <match src="comment: /**      * @dev Returns the value associated with `key`.  O(1).      *      * Requirements:      *      * - `key` must be in the map.      */ [84428,84569]" dest="comment: /**      * @dev Returns the value associated with `key`.  O(1).      *      * Requirements:      *      * - `key` must be in the map.      */ [82335,82482]"/>
  <match src="solidity_version_comparison_operator [85121,85123]" dest="solidity_version_comparison_operator [83050,83052]"/>
  <match src="struct: struct [77976,77982]" dest="struct: struct [75702,75708]"/>
  <match src="yul_function_call [53126,53131]" dest="yul_function_call [50111,50116]"/>
  <match src="(: ( [32509,32510]" dest="(: ( [28751,28752]"/>
  <match src="member_expression [107402,107422]" dest="member_expression [105257,105277]"/>
  <match src="(: ( [1210,1211]" dest="(: ( [1249,1250]"/>
  <match src="address: address [18971,18978]" dest="address: address [18605,18612]"/>
  <match src="function_definition [28604,28680]" dest="function_definition [24731,24807]"/>
  <match src="external: external [6786,6794]" dest="external: external [7621,7629]"/>
  <match src="identifier: symbol [107447,107453]" dest="identifier: symbol [105303,105309]"/>
  <match src=":=: := [35001,35003]" dest=":=: := [31309,31311]"/>
  <match src="external: external [5942,5950]" dest="external: external [6133,6141]"/>
  <match src=",: , [107544,107545]" dest=",: , [105402,105403]"/>
  <match src="assignment_expression [27263,27339]" dest="assignment_expression [39265,39341]"/>
  <match src="interface: interface [6314,6323]" dest="interface: interface [6523,6532]"/>
  <match src="call_argument [115127,115136]" dest="call_argument [113718,113727]"/>
  <match src="function_body [75752,75811]" dest="function_body [73406,73467]"/>
  <match src="}: } [11411,11412]" dest="}: } [12360,12361]"/>
  <match src="variable_declaration_statement [110953,111080]" dest="variable_declaration_statement [110361,110455]"/>
  <match src="return: return [83391,83397]" dest="return: return [81267,81273]"/>
  <match src="primitive_type [6855,6862]" dest="primitive_type [7692,7699]"/>
  <match src=",: , [78899,78900]" dest=",: , [76651,76652]"/>
  <match src="solidity_pragma_token [13597,13611]" dest="solidity_pragma_token [14600,14614]"/>
  <match src="parameter [22206,22210]" dest="parameter [21761,21765]"/>
  <match src="comment: /*              */ [53179,53197]" dest="comment: /*              */ [50165,50185]"/>
  <match src="return: return [45704,45710]" dest="return: return [42520,42526]"/>
  <match src="call_argument [16889,16924]" dest="call_argument [17084,17119]"/>
  <match src="mapping: mapping [55695,55702]" dest="mapping: mapping [52748,52755]"/>
  <match src="bytes32: bytes32 [3510,3517]" dest="bytes32: bytes32 [3614,3621]"/>
  <match src="): ) [97031,97032]" dest="): ) [95293,95294]"/>
  <match src="identifier: tokenId [96246,96253]" dest="identifier: tokenId [94487,94494]"/>
  <match src="parameter [23053,23065]" dest="parameter [39131,39145]"/>
  <match src="type_name [70158,70167]" dest="type_name [67641,67650]"/>
  <match src=",: , [67430,67431]" dest=",: , [64830,64831]"/>
  <match src="binary_expression [5136,5166]" dest="binary_expression [5307,5337]"/>
  <match src="identifier: length [13093,13099]" dest="identifier: length [14079,14085]"/>
  <match src="type_name [7284,7291]" dest="type_name [8135,8142]"/>
  <match src="(: ( [107401,107402]" dest="(: ( [105256,105257]"/>
  <match src="call_expression [50147,50173]" dest="call_expression [47068,47094]"/>
  <match src="type_name [70537,70540]" dest="type_name [68033,68036]"/>
  <match src="return: return [74174,74180]" dest="return: return [71774,71780]"/>
  <match src="type_cast_expression [74201,74224]" dest="type_cast_expression [71801,71824]"/>
  <match src="uint256: uint256 [21918,21925]" dest="uint256: uint256 [6824,6831]"/>
  <match src="): ) [46897,46898]" dest="): ) [43735,43736]"/>
  <match src="yul_identifier [51462,51465]" dest="yul_identifier [48418,48421]"/>
  <match src="function_definition [3107,3273]" dest="function_definition [3202,3370]"/>
  <match src="type_cast_expression [107270,107281]" dest="type_cast_expression [105122,105133]"/>
  <match src="call_expression [115064,115094]" dest="call_expression [113643,113683]"/>
  <match src="call_expression [88777,88851]" dest="call_expression [86809,86883]"/>
  <match src="yul_identifier [54622,54628]" dest="yul_identifier [51635,51641]"/>
  <match src="parameter [45562,45575]" dest="parameter [42376,42389]"/>
  <match src="number_literal: 0 [43156,43157]" dest="number_literal: 0 [39887,39888]"/>
  <match src="user_defined_type [107515,107531]" dest="user_defined_type [105373,105389]"/>
  <match src="(: ( [22160,22161]" dest="(: ( [21715,21716]"/>
  <match src="memory: memory [11282,11288]" dest="memory: memory [12229,12235]"/>
  <match src="{: { [12950,12951]" dest="{: { [13932,13933]"/>
  <match src="identifier: addressStorage [391,405]" dest="identifier: addressStorage [402,416]"/>
  <match src="identifier: require [51017,51024]" dest="identifier: require [47965,47972]"/>
  <match src="contract_body [62271,63662]" dest="contract_body [59509,60941]"/>
  <match src="comment: /**      * @dev Creates an upgradeable token proxy for ERC721BridgeToken.sol, initializes its eternalStorage.      * @param _tokenImage address of the token image used for mirroring all functions.      * @param _name token name.      * @param _symbol token symbol.      * @param _owner address of the owner for this contract.      */ [55941,56274]" dest="comment: /**      * @dev Creates an upgradeable token proxy for ERC721BridgeToken.sol, initializes its eternalStorage.      * @param _tokenImage address of the token image used for mirroring all functions.      * @param _name token name.      * @param _symbol token symbol.      * @param _owner address of the owner for this contract.      */ [53001,53340]"/>
  <match src="identifier: dailyLimit [24307,24317]" dest="identifier: isTokenExecutionAllowed [23923,23946]"/>
  <match src="expression_statement [64662,64709]" dest="expression_statement [61974,62021]"/>
  <match src="memory: memory [112019,112025]" dest="memory: memory [111681,111687]"/>
  <match src="visibility [75728,75736]" dest="visibility [73382,73390]"/>
  <match src="address: address [113801,113808]" dest="address: address [112778,112785]"/>
  <match src="visibility [110483,110491]" dest="visibility [109063,109071]"/>
  <match src="identifier: lastIndex [80043,80052]" dest="identifier: lastIndex [77821,77830]"/>
  <match src="}: } [60124,60125]" dest="}: } [57293,57294]"/>
  <match src="yul_path [57812,57827]" dest="yul_path [54917,54932]"/>
  <match src="identifier: _inner [83856,83862]" dest="identifier: _inner [81746,81752]"/>
  <match src="contract_body [1353,1619]" dest="contract_body [1400,1672]"/>
  <match src="comment: // Equivalent to contains(set, value) [71351,71388]" dest="comment: // Equivalent to contains(set, value) [68869,68906]"/>
  <match src=",: , [111129,111130]" dest=",: , [110508,110509]"/>
  <match src="(: ( [11374,11375]" dest="(: ( [12322,12323]"/>
  <match src="type_name [72707,72710]" dest="type_name [70258,70261]"/>
  <match src="): ) [63602,63603]" dest="): ) [60878,60879]"/>
  <match src="if: if [89968,89970]" dest="if: if [88039,88041]"/>
  <match src="solidity_pragma_token [55085,55099]" dest="solidity_pragma_token [52119,52133]"/>
  <match src="address: address [97138,97145]" dest="address: address [95406,95413]"/>
  <match src=",: , [104464,104465]" dest=",: , [102981,102982]"/>
  <match src="string: string [101748,101754]" dest="string: string [100163,100169]"/>
  <match src="call_expression [66241,66297]" dest="call_expression [63608,63664]"/>
  <match src="identifier: from [94494,94498]" dest="identifier: from [92688,92692]"/>
  <match src="identifier: _symbol [45235,45242]" dest="identifier: _symbol [42040,42047]"/>
  <match src="parameter [24284,24288]" dest="parameter [23706,23710]"/>
  <match src="parameter [88307,88328]" dest="parameter [86325,86346]"/>
  <match src="string_literal [20910,20924]" dest="string_literal [20464,20478]"/>
  <match src="uint256: uint256 [55595,55602]" dest="uint256: uint256 [52645,52652]"/>
  <match src="function_body [81274,81317]" dest="function_body [79086,79131]"/>
  <match src="identifier: handleBridgedNFT [108289,108305]" dest="identifier: handleBridgedNFT [106125,106141]"/>
  <match src="type_name [41707,41711]" dest="type_name [38363,38367]"/>
  <match src="number_literal: 0 [114257,114258]" dest="number_literal: 0 [23305,23306]"/>
  <match src="string [59123,59137]" dest="string [56265,56279]"/>
  <match src="parameter [113825,113843]" dest="parameter [112803,112821]"/>
  <match src="{: { [18898,18899]" dest="{: { [18531,18532]"/>
  <match src="comment: // keccak256(abi.encodePacked(&quot;tokenImageContract&quot;)) [49354,49406]" dest="comment: // keccak256(abi.encodePacked(&quot;tokenImageContract&quot;)) [46251,46303]"/>
  <match src="identifier: isContract [57573,57583]" dest="identifier: isContract [54674,54684]"/>
  <match src="bool: bool [24713,24717]" dest="bool: bool [23155,23159]"/>
  <match src="returns: returns [41698,41705]" dest="returns: returns [38354,38361]"/>
  <match src="}: } [70920,70921]" dest="}: } [68425,68426]"/>
  <match src="if: if [39149,39151]" dest="if: if [35559,35561]"/>
  <match src="primitive_type [4203,4209]" dest="primitive_type [4331,4337]"/>
  <match src=".: . [38534,38535]" dest=".: . [34931,34932]"/>
  <match src="parameter [44970,44984]" dest="parameter [41770,41784]"/>
  <match src="(: ( [53834,53835]" dest="(: ( [50833,50834]"/>
  <match src="&quot;: &quot; [66261,66262]" dest="&quot;: &quot; [63628,63629]"/>
  <match src="address: address [32525,32532]" dest="address: address [28767,28774]"/>
  <match src="public: public [24692,24698]" dest="public: public [23134,23140]"/>
  <match src="identifier: map [79053,79056]" dest="identifier: map [76808,76811]"/>
  <match src="function_definition [26144,26361]" dest="function_definition [22012,22314]"/>
  <match src="visibility [14120,14128]" dest="visibility [117526,117534]"/>
  <match src="memory: memory [90524,90530]" dest="memory: memory [88607,88613]"/>
  <match src="identifier: _data [36485,36490]" dest="identifier: _data [32833,32838]"/>
  <match src="): ) [29046,29047]" dest="): ) [25189,25190]"/>
  <match src="(: ( [100304,100305]" dest="(: ( [98671,98672]"/>
  <match src="&quot;: &quot; [63601,63602]" dest="&quot;: &quot; [60877,60878]"/>
  <match src="expression_statement [96847,96909]" dest="expression_statement [95106,95168]"/>
  <match src="parameter [10863,10880]" dest="parameter [11800,11817]"/>
  <match src="internal: internal [489,497]" dest="internal: internal [502,510]"/>
  <match src="is: is [1897,1899]" dest="is: is [1961,1963]"/>
  <match src="returns: returns [50668,50675]" dest="returns: returns [47607,47614]"/>
  <match src="member_expression [79148,79160]" dest="member_expression [76906,76918]"/>
  <match src="primitive_type [20848,20852]" dest="primitive_type [20401,20405]"/>
  <match src="call_argument [66873,66874]" dest="call_argument [64258,64259]"/>
  <match src="identifier: _dailyLimit [105248,105259]" dest="identifier: _gasLimit [118055,118064]"/>
  <match src="identifier: recipient [39226,39235]" dest="identifier: recipient [35638,35647]"/>
  <match src="identifier: _recipient [109062,109072]" dest="identifier: _recipient [106919,106929]"/>
  <match src="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [73923,74080]" dest="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [71516,71678]"/>
  <match src="): ) [1243,1244]" dest="): ) [1282,1283]"/>
  <match src="solidity: solidity [60206,60214]" dest="solidity: solidity [57381,57389]"/>
  <match src="identifier: UintToAddressMap [83314,83330]" dest="identifier: UintToAddressMap [81189,81205]"/>
  <match src="function_definition [99353,99451]" dest="function_definition [97699,97799]"/>
  <match src="identifier: UintSet [76573,76580]" dest="identifier: UintSet [74255,74262]"/>
  <match src="primitive_type [39810,39816]" dest="primitive_type [36248,36254]"/>
  <match src="function: function [76561,76569]" dest="function: function [74243,74251]"/>
  <match src="member_expression [5136,5153]" dest="member_expression [5307,5324]"/>
  <match src="memory: memory [65472,65478]" dest="memory: memory [62813,62819]"/>
  <match src="uint256: uint256 [37449,37456]" dest="uint256: uint256 [33823,33830]"/>
  <match src="type_name [46741,46747]" dest="type_name [43577,43583]"/>
  <match src=",: , [112383,112384]" dest=",: , [111970,111971]"/>
  <match src="call_expression [5177,5210]" dest="call_expression [5348,5381]"/>
  <match src="emit_statement [100703,100748]" dest="emit_statement [99082,99127]"/>
  <match src="address: address [101691,101698]" dest="address: address [100103,100110]"/>
  <match src="type_name [73365,73372]" dest="type_name [70937,70944]"/>
  <match src="call_argument [97524,97525]" dest="call_argument [95808,95809]"/>
  <match src="call_expression [75769,75804]" dest="call_expression [73424,73459]"/>
  <match src="return: return [90751,90757]" dest="return: return [88842,88848]"/>
  <match src="(: ( [11804,11805]" dest="(: ( [12766,12767]"/>
  <match src="call_argument [84700,84710]" dest="call_argument [82615,82625]"/>
  <match src="view: view [7401,7405]" dest="view: view [8256,8260]"/>
  <match src="): ) [18194,18195]" dest="): ) [17698,17699]"/>
  <match src="true [38496,38500]" dest="true [34892,34896]"/>
  <match src="): ) [5989,5990]" dest="): ) [6181,6182]"/>
  <match src="identifier: UintToAddressMap [82978,82994]" dest="identifier: UintToAddressMap [80844,80860]"/>
  <match src="identifier: length [115655,115661]" dest="identifier: length [114262,114268]"/>
  <match src="call_expression [113197,113290]" dest="call_expression [109434,109458]"/>
  <match src="call_expression [2220,2264]" dest="call_expression [2291,2335]"/>
  <match src="identifier: length [71773,71779]" dest="identifier: length [69297,69303]"/>
  <match src="primitive_type [96361,96368]" dest="primitive_type [94604,94611]"/>
  <match src="call_argument [94580,94632]" dest="call_argument [92775,92827]"/>
  <match src="address: address [39035,39042]" dest="address: address [35443,35450]"/>
  <match src="case: case [54645,54649]" dest="case: case [51659,51663]"/>
  <match src="contract_body [69658,76698]" dest="contract_body [67129,74383]"/>
  <match src="member_expression [112909,112929]" dest="member_expression [112357,112377]"/>
  <match src="identifier: setMessageFixed [21110,21125]" dest="identifier: setMessageFixed [20671,20686]"/>
  <match src="uint256: uint256 [83116,83123]" dest="uint256: uint256 [80983,80990]"/>
  <match src="visibility [62535,62542]" dest="visibility [59782,59789]"/>
  <match src="boolean_literal [111112,111117]" dest="boolean_literal [19376,19381]"/>
  <match src="storage: storage [79421,79428]" dest="storage: storage [77189,77196]"/>
  <match src="call_argument [110823,110827]" dest="call_argument [109320,109324]"/>
  <match src="): ) [42094,42095]" dest="): ) [18193,18194]"/>
  <match src="function: function [11774,11782]" dest="function: function [12736,12744]"/>
  <match src="identifier: _tokenId [33478,33486]" dest="identifier: _tokenId [29746,29754]"/>
  <match src="(: ( [45561,45562]" dest="(: ( [42375,42376]"/>
  <match src="expression_statement [107447,107461]" dest="expression_statement [105303,105317]"/>
  <match src=",: , [66259,66260]" dest=",: , [63626,63627]"/>
  <match src="primitive_type [39093,39100]" dest="primitive_type [35501,35508]"/>
  <match src="type_name [115583,115589]" dest="type_name [114188,114194]"/>
  <match src="identifier: isApprovedForAll [95507,95523]" dest="identifier: isApprovedForAll [93727,93743]"/>
  <match src="expression_statement [36407,36503]" dest="expression_statement [32755,32851]"/>
  <match src="call_expression [97043,97073]" dest="call_expression [95307,95337]"/>
  <match src=",: , [105259,105260]" dest=",: , [119890,119891]"/>
  <match src="call_argument [97869,97870]" dest="call_argument [96167,96168]"/>
  <match src="identifier: IERC165 [28245,28252]" dest="identifier: IERC165 [24363,24370]"/>
  <match src="primitive_type [97445,97452]" dest="primitive_type [95727,95734]"/>
  <match src=",: , [20602,20603]" dest=",: , [20148,20149]"/>
  <match src="[: [ [2209,2210]" dest="[: [ [2280,2281]"/>
  <match src="variable_declaration_statement [112012,112051]" dest="variable_declaration_statement [111674,111713]"/>
  <match src="returns: returns [65507,65514]" dest="returns: returns [62848,62855]"/>
  <match src="identifier: token [37442,37447]" dest="identifier: token [33816,33821]"/>
  <match src="type_name [33175,33182]" dest="type_name [29432,29439]"/>
  <match src="identifier: _token [2168,2174]" dest="identifier: _token [2238,2244]"/>
  <match src="comment: /**      * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.      */ [29248,29365]" dest="comment: /**      * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.      */ [25398,25517]"/>
  <match src="identifier: codehash [8753,8761]" dest="identifier: codehash [9645,9653]"/>
  <match src="&quot;: &quot; [100430,100431]" dest="&quot;: &quot; [98802,98803]"/>
  <match src="): ) [99081,99082]" dest="): ) [97418,97419]"/>
  <match src="inheritance_specifier [104470,104487]" dest="inheritance_specifier [102988,103005]"/>
  <match src="solidity_pragma_token [62044,62059]" dest="solidity_pragma_token [59273,59288]"/>
  <match src="uint256: uint256 [68732,68739]" dest="uint256: uint256 [66168,66175]"/>
  <match src="type_name [33470,33477]" dest="type_name [29738,29745]"/>
  <match src=".: . [78873,78874]" dest=".: . [76625,76626]"/>
  <match src="(: ( [37433,37434]" dest="(: ( [33807,33808]"/>
  <match src="identifier: Initializable [660,673]" dest="identifier: Initializable [682,695]"/>
  <match src="{: { [26232,26233]" dest="{: { [22092,22093]"/>
  <match src="=: = [14156,14157]" dest="=: = [117562,117563]"/>
  <match src="call_argument [103958,103967]" dest="call_argument [102441,102450]"/>
  <match src="function_body [67492,67669]" dest="function_body [64892,65075]"/>
  <match src="(: ( [86238,86239]" dest="(: ( [84205,84206]"/>
  <match src="identifier: _values [73433,73440]" dest="identifier: _values [71006,71013]"/>
  <match src="identifier: length [88890,88896]" dest="identifier: length [86924,86930]"/>
  <match src="return_statement [84369,84416]" dest="return_statement [82273,82320]"/>
  <match src="return: return [11345,11351]" dest="return: return [12293,12299]"/>
  <match src="function: function [21253,21261]" dest="function: function [20818,20826]"/>
  <match src="return_type_definition [50668,50685]" dest="return_type_definition [47607,47624]"/>
  <match src="parameter [40712,40724]" dest="parameter [37182,37194]"/>
  <match src="identifier: to [92690,92692]" dest="identifier: to [90843,90845]"/>
  <match src="parameter [74355,74368]" dest="parameter [71961,71974]"/>
  <match src="identifier: Context [85286,85293]" dest="identifier: Context [83232,83239]"/>
  <match src="identifier: _handleTokens [114876,114889]" dest="identifier: _handleTokens [113496,113509]"/>
  <match src="is: is [60390,60392]" dest="is: is [57572,57574]"/>
  <match src="address: address [88713,88720]" dest="address: address [86744,86751]"/>
  <match src="!=: != [8735,8737]" dest="!=: != [9627,9629]"/>
  <match src="contract_body [43866,44293]" dest="contract_body [40627,41070]"/>
  <match src="call_argument [26292,26298]" dest="call_argument [22153,22159]"/>
  <match src="call_argument [38585,38590]" dest="call_argument [34983,34988]"/>
  <match src="identifier: Bytes [33745,33750]" dest="identifier: Bytes [30026,30031]"/>
  <match src="update_expression [43289,43297]" dest="update_expression [40026,40034]"/>
  <match src="primitive_type [6132,6139]" dest="primitive_type [6331,6338]"/>
  <match src="}: } [59174,59175]" dest="}: } [56318,56319]"/>
  <match src="]: ] [80830,80831]" dest="]: ] [78624,78625]"/>
  <match src="call_expression [67502,67530]" dest="call_expression [64903,64931]"/>
  <match src="string [99035,99081]" dest="string [97372,97418]"/>
  <match src=".: . [5278,5279]" dest=".: . [5450,5451]"/>
  <match src=".: . [74650,74651]" dest=".: . [72264,72265]"/>
  <match src="}: } [43559,43560]" dest="}: } [40305,40306]"/>
  <match src="identifier: _inner [83638,83644]" dest="identifier: _inner [81521,81527]"/>
  <match src="identifier: tokenId [100392,100399]" dest="identifier: tokenId [98762,98769]"/>
  <match src="identifier: keccak256 [45098,45107]" dest="identifier: keccak256 [41902,41911]"/>
  <match src="call_argument [38469,38476]" dest="call_argument [34863,34870]"/>
  <match src="type_name [95246,95253]" dest="type_name [93463,93470]"/>
  <match src="user_defined_type [74101,74111]" dest="user_defined_type [71700,71710]"/>
  <match src="type_name [41024,41030]" dest="type_name [37506,37512]"/>
  <match src="identifier: key [82380,82383]" dest="identifier: key [80227,80230]"/>
  <match src="string: string [103137,103143]" dest="string: string [101599,101605]"/>
  <match src="parameter [91385,91400]" dest="parameter [89498,89513]"/>
  <match src="{: { [76186,76187]" dest="{: { [73854,73855]"/>
  <match src="{: { [10914,10915]" dest="{: { [11851,11852]"/>
  <match src="type_name [73813,73820]" dest="type_name [71402,71409]"/>
  <match src="array_access [2873,2941]" dest="array_access [2961,3029]"/>
  <match src="type_name [34362,34367]" dest="type_name [30653,30658]"/>
  <match src="comment: // register the supported interfaces to conform to ERC721 via ERC165 [88391,88459]" dest="comment: // register the supported interfaces to conform to ERC721 via ERC165 [86413,86481]"/>
  <match src="identifier: set [74189,74192]" dest="identifier: set [71789,71792]"/>
  <match src="member_expression [73511,73522]" dest="member_expression [71085,71096]"/>
  <match src="call_expression [57420,57498]" dest="call_expression [54519,54597]"/>
  <match src="solidity_version:  0.7.5 [47084,47090]" dest="solidity_version:  0.7.5 [43929,43935]"/>
  <match src="contract_declaration [1332,1619]" dest="contract_declaration [1379,1672]"/>
  <match src=",: , [112480,112481]" dest=",: , [112087,112088]"/>
  <match src="): ) [114996,114997]" dest="): ) [113621,113622]"/>
  <match src="member_expression [84995,85005]" dest="member_expression [82917,82927]"/>
  <match src="type_name [86230,86255]" dest="type_name [84197,84222]"/>
  <match src="virtual: virtual [96284,96291]" dest="virtual: virtual [94525,94532]"/>
  <match src="type_cast_expression [84974,85036]" dest="type_cast_expression [82896,82958]"/>
  <match src="function: function [20179,20187]" dest="function: function [19729,19737]"/>
  <match src="identifier: executeActionOnFixedTokens [113737,113763]" dest="identifier: executeActionOnFixedTokens [112741,112767]"/>
  <match src="yul_path [54775,54778]" dest="yul_path [51793,51796]"/>
  <match src="(: ( [115045,115046]" dest="(: ( [115742,115743]"/>
  <match src="(: ( [116264,116265]" dest="(: ( [114889,114890]"/>
  <match src="): ) [487,488]" dest="): ) [500,501]"/>
  <match src="||: || [95469,95471]" dest="||: || [93689,93691]"/>
  <match src="parameter [58998,59012]" dest="parameter [56136,56150]"/>
  <match src="return: return [72777,72783]" dest="return: return [70329,70335]"/>
  <match src="): ) [84413,84414]" dest="): ) [82317,82318]"/>
  <match src="): ) [38164,38165]" dest="): ) [34554,34555]"/>
  <match src="primitive_type [6383,6390]" dest="primitive_type [7206,7213]"/>
  <match src=",: , [23993,23994]" dest=",: , [38863,38864]"/>
  <match src="primitive_type [47318,47325]" dest="primitive_type [44171,44178]"/>
  <match src=",: , [90216,90217]" dest=",: , [88291,88292]"/>
  <match src="identifier: IOwnable [102261,102269]" dest="identifier: IOwnable [100695,100703]"/>
  <match src="member_expression [100289,100334]" dest="member_expression [98656,98701]"/>
  <match src="parameter [36317,36337]" dest="parameter [32662,32682]"/>
  <match src="address: address [48203,48210]" dest="address: address [45072,45079]"/>
  <match src="block_statement [66171,66204]" dest="block_statement [63533,63568]"/>
  <match src="[: [ [23944,23945]" dest="[: [ [38818,38819]"/>
  <match src="expression_statement [38461,38478]" dest="expression_statement [34855,34872]"/>
  <match src="returns: returns [58579,58586]" dest="returns: returns [55706,55713]"/>
  <match src="identifier: temp [43455,43459]" dest="identifier: temp [40198,40202]"/>
  <match src="string: string [67432,67438]" dest="string: string [64832,64838]"/>
  <match src="type_name [62529,62533]" dest="type_name [59776,59780]"/>
  <match src="inheritance_specifier [118382,118400]" dest="inheritance_specifier [119210,119228]"/>
  <match src="): ) [27323,27324]" dest="): ) [39330,39331]"/>
  <match src="(: ( [81726,81727]" dest="(: ( [79552,79553]"/>
  <match src="primitive_type [83818,83825]" dest="primitive_type [81707,81714]"/>
  <match src="): ) [75750,75751]" dest="): ) [73404,73405]"/>
  <match src="type_name [105269,105276]" dest="type_name [118678,118685]"/>
  <match src="expression_statement [109673,109716]" dest="expression_statement [107618,107661]"/>
  <match src="number_literal: 0 [24776,24777]" dest="number_literal: 0 [23402,23403]"/>
  <match src="view: view [29585,29589]" dest="view: view [25743,25747]"/>
  <match src="type_name [87714,87720]" dest="type_name [85718,85724]"/>
  <match src="address: address [14617,14624]" dest="address: address [15527,15534]"/>
  <match src="function_body [11887,11998]" dest="function_body [12849,12962]"/>
  <match src="identifier: _data [39259,39264]" dest="identifier: _data [35671,35676]"/>
  <match src="function_definition [6398,6453]" dest="function_definition [7223,7278]"/>
  <match src="identifier: transferFrom [31133,31145]" dest="identifier: transferFrom [27332,27344]"/>
  <match src="}: } [41136,41137]" dest="}: } [37621,37622]"/>
  <match src="primitive_type [66798,66805]" dest="primitive_type [64182,64189]"/>
  <match src="): ) [13491,13492]" dest="): ) [14486,14487]"/>
  <match src="comment: /**  * @title ERC721 token receiver interface  * @dev Interface for any contract that wants to support safeTransfers  * from ERC721 asset contracts.  */ [61172,61324]" dest="comment: /**  * @title ERC721 token receiver interface  * @dev Interface for any contract that wants to support safeTransfers  * from ERC721 asset contracts.  */ [58379,58535]"/>
  <match src="(: ( [78291,78292]" dest="(: ( [76028,76029]"/>
  <match src="): ) [21934,21935]" dest="): ) [21482,21483]"/>
  <match src="parameter [103137,103161]" dest="parameter [101599,101623]"/>
  <match src="identifier: _tokenId [108551,108559]" dest="identifier: _tokenId [106395,106403]"/>
  <match src="identifier: functionCall [10834,10846]" dest="identifier: functionCall [11771,11783]"/>
  <match src="identifier: errorMessage [84911,84923]" dest="identifier: errorMessage [82832,82844]"/>
  <match src="string: string [115583,115589]" dest="string: string [114188,114194]"/>
  <match src="parameter [18512,18519]" dest="parameter [18024,18031]"/>
  <match src="member_expression [102215,102291]" dest="member_expression [100649,100725]"/>
  <match src="type_name [59838,59853]" dest="type_name [57000,57015]"/>
  <match src="call_expression [102019,102056]" dest="call_expression [100445,100482]"/>
  <match src="]: ] [78123,78124]" dest="]: ] [75856,75857]"/>
  <match src="): ) [114193,114194]" dest="): ) [22237,22238]"/>
  <match src="(: ( [111517,111518]" dest="(: ( [110853,110854]"/>
  <match src="member_expression [80721,80737]" dest="member_expression [78512,78528]"/>
  <match src="(: ( [83817,83818]" dest="(: ( [81706,81707]"/>
  <match src="override_specifier [62987,62995]" dest="override_specifier [60247,60255]"/>
  <match src="{: { [102623,102624]" dest="{: { [101067,101068]"/>
  <match src="}: } [13506,13507]" dest="}: } [14502,14503]"/>
  <match src="user_defined_type [677,691]" dest="user_defined_type [699,713]"/>
  <match src="parameter [78585,78596]" dest="parameter [76332,76343]"/>
  <match src="function_body [95309,95547]" dest="function_body [93526,93768]"/>
  <match src="[: [ [59095,59096]" dest="[: [ [56237,56238]"/>
  <match src="identifier: _registerInterface [88518,88536]" dest="identifier: _registerInterface [86542,86560]"/>
  <match src="number_literal: 0 [97524,97525]" dest="number_literal: 0 [95808,95809]"/>
  <match src="identifier: _data [39193,39198]" dest="identifier: _data [35604,35609]"/>
  <match src="identifier: valueIndex [71285,71295]" dest="identifier: valueIndex [68801,68811]"/>
  <match src="primitive_type [115638,115643]" dest="primitive_type [114245,114250]"/>
  <match src="identifier: UintToAddressMap [82694,82710]" dest="identifier: UintToAddressMap [80549,80565]"/>
  <match src="primitive_type [75413,75420]" dest="primitive_type [73057,73064]"/>
  <match src="public: public [23886,23892]" dest="public: public [38762,38768]"/>
  <match src="&lt;=: &lt;= [17605,17607]" dest="&lt;=: &lt;= [118735,118737]"/>
  <match src="type_name [40222,40229]" dest="type_name [36677,36684]"/>
  <match src="identifier: keyIndex [80009,80017]" dest="identifier: keyIndex [77786,77794]"/>
  <match src="identifier: _receiver [111582,111591]" dest="identifier: _receiver [110897,110906]"/>
  <match src="number_literal: 0x780e9d63 [88143,88153]" dest="number_literal: 0x780e9d63 [86156,86166]"/>
  <match src="comment: /**  * @title BridgeOperationsStorage  * @dev Functionality for storing processed bridged operations.  */ [1749,1854]" dest="comment: /**  * @title BridgeOperationsStorage  * @dev Functionality for storing processed bridged operations.  */ [1809,1917]"/>
  <match src="primitive_type [112064,112070]" dest="primitive_type [111727,111733]"/>
  <match src="[: [ [42552,42553]" dest="[: [ [39182,39183]"/>
  <match src="yul_assignment [8675,8707]" dest="yul_assignment [9566,9598]"/>
  <match src="call_expression [45622,45694]" dest="call_expression [42437,42509]"/>
  <match src="}: } [80916,80917]" dest="}: } [78716,78717]"/>
  <match src="identifier: encodePacked [45194,45206]" dest="identifier: encodePacked [41999,42011]"/>
  <match src=",: , [93294,93295]" dest=",: , [91464,91465]"/>
  <match src="function: function [25525,25533]" dest="function: function [22560,22568]"/>
  <match src="using_directive [85353,85380]" dest="using_directive [83300,83327]"/>
  <match src="visibility [44079,44087]" dest="visibility [40850,40858]"/>
  <match src="{: { [49231,49232]" dest="{: { [46127,46128]"/>
  <match src="returns: returns [83592,83599]" dest="returns: returns [81474,81481]"/>
  <match src="return_type_definition [12364,12386]" dest="return_type_definition [13336,13358]"/>
  <match src="call_argument [91911,91957]" dest="call_argument [90039,90085]"/>
  <match src="function: function [62928,62936]" dest="function: function [60188,60196]"/>
  <match src="binary_expression [57420,57455]" dest="binary_expression [54519,54554]"/>
  <match src="function_body [93340,93509]" dest="function_body [91510,91682]"/>
  <match src="address: address [101394,101401]" dest="address: address [99791,99798]"/>
  <match src="call_argument [97024,97031]" dest="call_argument [95286,95293]"/>
  <match src="parameter [95303,95307]" dest="parameter [93520,93524]"/>
  <match src="type_name [83601,83605]" dest="type_name [81483,81487]"/>
  <match src="identifier: _inner [84704,84710]" dest="identifier: _inner [82619,82625]"/>
  <match src="new_expression [43363,43372]" dest="new_expression [40103,40112]"/>
  <match src="call_argument [48271,48292]" dest="call_argument [45141,45162]"/>
  <match src="identifier: FailedMessagesProcessor [18829,18852]" dest="identifier: FailedMessagesProcessor [18462,18485]"/>
  <match src="member_expression [90218,90234]" dest="member_expression [88293,88309]"/>
  <match src="function: function [80996,81004]" dest="function: function [78801,78809]"/>
  <match src="visibility [102594,102602]" dest="visibility [101038,101046]"/>
  <match src="}: } [73535,73536]" dest="}: } [71110,71111]"/>
  <match src="return_statement [16321,16362]" dest="return_statement [16805,16846]"/>
  <match src="expression_statement [111652,111731]" dest="expression_statement [110984,111063]"/>
  <match src="identifier: UintToAddressMap [83535,83551]" dest="identifier: UintToAddressMap [81417,81433]"/>
  <match src="call_argument [118776,118789]" dest="call_argument [117047,117053]"/>
  <match src="call_expression [97461,97477]" dest="call_expression [95743,95759]"/>
  <match src="external: external [29792,29800]" dest="external: external [25959,25967]"/>
  <match src="external: external [15282,15290]" dest="external: external [16205,16213]"/>
  <match src="pragma: pragma [13590,13596]" dest="pragma: pragma [14593,14599]"/>
  <match src="solidity_version_comparison_operator [76774,76776]" dest="solidity_version_comparison_operator [74464,74466]"/>
  <match src="visibility [73828,73836]" dest="visibility [71417,71425]"/>
  <match src="+: + [43512,43513]" dest="+: + [40256,40257]"/>
  <match src="primitive_type [75931,75938]" dest="primitive_type [73592,73599]"/>
  <match src=".: . [97096,97097]" dest=".: . [95362,95363]"/>
  <match src="expression_statement [98651,98682]" dest="expression_statement [96973,97004]"/>
  <match src="&quot;: &quot; [91687,91688]" dest="&quot;: &quot; [89805,89806]"/>
  <match src="(: ( [109829,109830]" dest="(: ( [107776,107777]"/>
  <match src="identifier: token [108583,108588]" dest="identifier: token [106428,106433]"/>
  <match src="returns: returns [8217,8224]" dest="returns: returns [9101,9108]"/>
  <match src="identifier: bridgeContract [15982,15996]" dest="identifier: bridgeContract [16457,16471]"/>
  <match src="visibility [11303,11311]" dest="visibility [12250,12258]"/>
  <match src="internal: internal [66820,66828]" dest="internal: internal [64204,64212]"/>
  <match src="identifier: set [74426,74429]" dest="identifier: set [72033,72036]"/>
  <match src="view: view [59924,59928]" dest="view: view [57090,57094]"/>
  <match src="identifier: Set [70537,70540]" dest="identifier: Set [68033,68036]"/>
  <match src="primitive_type [36974,36981]" dest="primitive_type [33336,33343]"/>
  <match src="identifier: require [26242,26249]" dest="identifier: require [22103,22110]"/>
  <match src=",: , [112938,112939]" dest=",: , [112386,112387]"/>
  <match src=",: , [68142,68143]" dest=",: , [65562,65563]"/>
  <match src="): ) [110740,110741]" dest="): ) [109235,109236]"/>
  <match src="): ) [111996,111997]" dest="): ) [110152,110153]"/>
  <match src="call_argument [100348,100360]" dest="call_argument [98716,98728]"/>
  <match src="(: ( [110725,110726]" dest="(: ( [109220,109221]"/>
  <match src="type_name [8484,8491]" dest="type_name [9372,9379]"/>
  <match src="): ) [103550,103551]" dest="): ) [102022,102023]"/>
  <match src="expression_statement [98301,98380]" dest="expression_statement [96614,96693]"/>
  <match src="identifier: this [107584,107588]" dest="identifier: this [105442,105446]"/>
  <match src="identifier: to [100625,100627]" dest="identifier: to [99002,99004]"/>
  <match src="function_body [20245,20635]" dest="function_body [19795,20182]"/>
  <match src="(: ( [361,362]" dest="(: ( [372,373]"/>
  <match src="]: ] [70820,70821]" dest="]: ] [68321,68322]"/>
  <match src="parenthesized_expression [8725,8769]" dest="parenthesized_expression [9617,9661]"/>
  <match src="function_body [102623,102664]" dest="function_body [101067,101110]"/>
  <match src="type_cast_expression [97653,97679]" dest="type_cast_expression [95943,95969]"/>
  <match src="function_definition [20179,20635]" dest="function_definition [19729,20182]"/>
  <match src="is: is [55286,55288]" dest="is: is [52329,52331]"/>
  <match src=",: , [11273,11274]" dest=",: , [12220,12221]"/>
  <match src="yul_decimal_number: 0 [52242,52243]" dest="yul_decimal_number: 0 [49209,49210]"/>
  <match src="bytes32: bytes32 [78598,78605]" dest="bytes32: bytes32 [76345,76352]"/>
  <match src="}: } [72606,72607]" dest="}: } [70152,70153]"/>
  <match src="identifier: _indexes [72788,72796]" dest="identifier: _indexes [70340,70348]"/>
  <match src="type_name [32510,32517]" dest="type_name [28752,28759]"/>
  <match src="}: } [90244,90245]" dest="}: } [88320,88321]"/>
  <match src="type_name [2160,2167]" dest="type_name [2230,2237]"/>
  <match src="state_mutability [18205,18209]" dest="state_mutability [17709,17713]"/>
  <match src="identifier: _data [36332,36337]" dest="identifier: _data [32677,32682]"/>
  <match src="contract_body [13772,18577]" dest="contract_body [14793,18198]"/>
  <match src="is: is [21695,21697]" dest="is: is [21248,21250]"/>
  <match src="call_argument [65099,65131]" dest="call_argument [62427,62459]"/>
  <match src="=: = [43496,43497]" dest="=: = [40240,40241]"/>
  <match src="(: ( [37497,37498]" dest="(: ( [33872,33873]"/>
  <match src="identifier: name [107364,107368]" dest="identifier: name [105218,105222]"/>
  <match src="primitive_type [108457,108464]" dest="primitive_type [106299,106306]"/>
  <match src=".: . [76005,76006]" dest=".: . [73667,73668]"/>
  <match src="): ) [8230,8231]" dest="): ) [9114,9115]"/>
  <match src="expression_statement [16935,16985]" dest="expression_statement [17131,17181]"/>
  <match src="function_definition [36922,37089]" dest="function_definition [33282,33455]"/>
  <match src="identifier: key [82125,82128]" dest="identifier: key [79965,79968]"/>
  <match src="identifier: sender [57456,57462]" dest="identifier: sender [54555,54561]"/>
  <match src="identifier: _token [45531,45537]" dest="identifier: _token [42345,42351]"/>
  <match src="identifier: mod [68728,68731]" dest="identifier: mod [66164,66167]"/>
  <match src="inheritance_specifier [13764,13771]" dest="inheritance_specifier [14785,14792]"/>
  <match src="type_name [85731,85737]" dest="type_name [83686,83692]"/>
  <match src="type_name [264,271]" dest="type_name [273,280]"/>
  <match src="]: ] [20938,20939]" dest="]: ] [20492,20493]"/>
  <match src="function: function [81660,81668]" dest="function: function [79486,79494]"/>
  <match src="function: function [7362,7370]" dest="function: function [8217,8225]"/>
  <match src="identifier: _tokeId [33432,33439]" dest="identifier: _tokeId [29698,29705]"/>
  <match src="call_argument [109733,109766]" dest="call_argument [107679,107712]"/>
  <match src="(: ( [2894,2895]" dest="(: ( [2982,2983]"/>
  <match src="): ) [108609,108610]" dest="): ) [106454,106455]"/>
  <match src="binary_expression [91554,91575]" dest="binary_expression [89671,89692]"/>
  <match src="function_definition [10825,10996]" dest="function_definition [11762,11935]"/>
  <match src=",: , [98750,98751]" dest=",: , [97076,97077]"/>
  <match src="calldata: calldata [33224,33232]" dest="calldata: calldata [29481,29489]"/>
  <match src="(: ( [109864,109865]" dest="(: ( [108280,108281]"/>
  <match src="visibility [88996,89002]" dest="visibility [87036,87042]"/>
  <match src="member_expression [48818,48834]" dest="member_expression [45698,45714]"/>
  <match src=",: , [110912,110913]" dest=",: , [109380,109381]"/>
  <match src="(: ( [82182,82183]" dest="(: ( [80023,80024]"/>
  <match src="function: function [6524,6532]" dest="function: function [7353,7361]"/>
  <match src="function_body [72767,72815]" dest="function_body [70318,70368]"/>
  <match src="comment: /**  * @dev Interface of the ERC165 standard, as defined in the  * https://eips.ethereum.org/EIPS/eip-165[EIP].  *  * Implementers can declare support of contract interfaces, which can then be  * queried by others ({ERC165Checker}).  *  * For an implementation, see {ERC165}.  */ [27955,28234]" dest="comment: /**  * @dev Interface of the ERC165 standard, as defined in the  * https://eips.ethereum.org/EIPS/eip-165[EIP].  *  * Implementers can declare support of contract interfaces, which can then be  * queried by others ({ERC165Checker}).  *  * For an implementation, see {ERC165}.  */ [24064,24351]"/>
  <match src="&quot;: &quot; [96906,96907]" dest="&quot;: &quot; [95165,95166]"/>
  <match src="identifier: onlyRelevantSender [105395,105413]" dest="identifier: onlyRelevantSender [119957,119975]"/>
  <match src="=: = [72285,72286]" dest="=: = [69819,69820]"/>
  <match src="return: return [5691,5697]" dest="return: return [5875,5881]"/>
  <match src="external: external [7324,7332]" dest="external: external [8177,8185]"/>
  <match src="binary_expression [81090,81112]" dest="binary_expression [78896,78918]"/>
  <match src="state_mutability [66829,66833]" dest="state_mutability [64213,64217]"/>
  <match src=",: , [112453,112454]" dest=",: , [112055,112056]"/>
  <match src="call_argument [67510,67515]" dest="call_argument [64911,64916]"/>
  <match src="bytes32: bytes32 [20205,20212]" dest="bytes32: bytes32 [19755,19762]"/>
  <match src="identifier: chooseReceiver [36463,36477]" dest="identifier: chooseReceiver [32811,32825]"/>
  <match src="return_statement [106145,106230]" dest="return_statement [103973,104058]"/>
  <match src="=: = [20422,20423]" dest="=: = [19977,19978]"/>
  <match src="return_type_definition [42921,42944]" dest="return_type_definition [39648,39671]"/>
  <match src="uint256: uint256 [65029,65036]" dest="uint256: uint256 [62356,62363]"/>
  <match src="(: ( [39784,39785]" dest="(: ( [36222,36223]"/>
  <match src="uint256: uint256 [83565,83572]" dest="uint256: uint256 [81447,81454]"/>
  <match src="call_expression [45190,45230]" dest="call_expression [41995,42035]"/>
  <match src="parameter [39343,39357]" dest="parameter [35760,35774]"/>
  <match src="contract_body [59779,60127]" dest="contract_body [56940,57297]"/>
  <match src="address: address [84679,84686]" dest="address: address [82594,82601]"/>
  <match src="&quot;: &quot; [47801,47802]" dest="&quot;: &quot; [44662,44663]"/>
  <match src="identifier: set [72410,72413]" dest="identifier: set [69947,69950]"/>
  <match src="function: function [6735,6743]" dest="function: function [7570,7578]"/>
  <match src="comment: // solhint-disable-next-line avoid-low-level-calls [12790,12840]" dest="comment: // solhint-disable-next-line avoid-low-level-calls [13770,13820]"/>
  <match src="variable_declaration [50975,50988]" dest="variable_declaration [47922,47935]"/>
  <match src=".: . [76214,76215]" dest=".: . [73883,73884]"/>
  <match src="function_body [3559,3664]" dest="function_body [3663,3770]"/>
  <match src="address: address [5672,5679]" dest="address: address [5855,5862]"/>
  <match src="type_name [2838,2845]" dest="type_name [2925,2932]"/>
  <match src="(: ( [93387,93388]" dest="(: ( [91558,91559]"/>
  <match src="]: ] [80488,80489]" dest="]: ] [78274,78275]"/>
  <match src="identifier: EnumerableSet [85440,85453]" dest="identifier: EnumerableSet [83389,83402]"/>
  <match src="): ) [59958,59959]" dest="): ) [57124,57125]"/>
  <match src="variable_declaration [43390,43403]" dest="variable_declaration [40131,40144]"/>
  <match src="view: view [73388,73392]" dest="view: view [70960,70964]"/>
  <match src="}: } [82737,82738]" dest="}: } [80594,80595]"/>
  <match src="+: + [64649,64650]" dest="+: + [61960,61961]"/>
  <match src="=: = [43216,43217]" dest="=: = [39950,39951]"/>
  <match src="solidity_version:  0.7.5 [34580,34586]" dest="solidity_version:  0.7.5 [30880,30886]"/>
  <match src="comment: // Delete the index for the deleted slot [80754,80794]" dest="comment: // Delete the index for the deleted slot [78547,78587]"/>
  <match src="): ) [45230,45231]" dest="): ) [42035,42036]"/>
  <match src="function_definition [40597,40824]" dest="function_definition [37062,37300]"/>
  <match src="parameter [46143,46156]" dest="parameter [42968,42981]"/>
  <match src="call_expression [46356,46396]" dest="call_expression [43183,43223]"/>
  <match src="identifier: account [8699,8706]" dest="identifier: account [9590,9597]"/>
  <match src="parameter [75931,75944]" dest="parameter [73592,73605]"/>
  <match src="identifier: require [109137,109144]" dest="identifier: require [106997,107004]"/>
  <match src="identifier: _ [1609,1610]" dest="identifier: _ [1660,1661]"/>
  <match src="(: ( [97400,97401]" dest="(: ( [95681,95682]"/>
  <match src="{: { [39577,39578]" dest="{: { [36005,36006]"/>
  <match src="identifier: map [79597,79600]" dest="identifier: map [77367,77370]"/>
  <match src="pragma: pragma [44387,44393]" dest="pragma: pragma [41168,41174]"/>
  <match src="): ) [68852,68853]" dest="): ) [66289,66290]"/>
  <match src="identifier: UintToAddressMap [83765,83781]" dest="identifier: UintToAddressMap [81654,81670]"/>
  <match src="]: ] [16657,16658]" dest="]: ] [118438,118439]"/>
  <match src="identifier: add [64567,64570]" dest="identifier: add [61877,61880]"/>
  <match src=",: , [75929,75930]" dest=",: , [73590,73591]"/>
  <match src="function_definition [57341,57844]" dest="function_definition [54439,54951]"/>
  <match src="return_type_definition [22197,22211]" dest="return_type_definition [21752,21766]"/>
  <match src="member_expression [4958,4976]" dest="member_expression [5120,5144]"/>
  <match src="identifier: result [53103,53109]" dest="identifier: result [50088,50094]"/>
  <match src="): ) [81043,81044]" dest="): ) [78848,78849]"/>
  <match src=",: , [3949,3950]" dest=",: , [4062,4063]"/>
  <match src=",: , [61920,61921]" dest=",: , [59142,59143]"/>
  <match src="call_expression [16043,16080]" dest="call_expression [16519,16556]"/>
  <match src="identifier: require [99009,99016]" dest="identifier: require [97346,97353]"/>
  <match src="function_definition [79400,80917]" dest="function_definition [77168,78717]"/>
  <match src="private: private [81045,81052]" dest="private: private [78850,78857]"/>
  <match src="binary_expression [89800,89827]" dest="binary_expression [87867,87894]"/>
  <match src="{: { [83381,83382]" dest="{: { [81256,81257]"/>
  <match src="type_name [9936,9940]" dest="type_name [10851,10855]"/>
  <match src="array_access [97707,97733]" dest="array_access [95998,96024]"/>
  <match src="function: function [90477,90485]" dest="function: function [88560,88568]"/>
  <match src="identifier: target [11375,11381]" dest="identifier: target [12323,12329]"/>
  <match src="inheritance_specifier [85312,85327]" dest="inheritance_specifier [83258,83273]"/>
  <match src="identifier: this [59970,59974]" dest="identifier: this [57137,57141]"/>
  <match src="primitive_type [86492,86498]" dest="primitive_type [84471,84477]"/>
  <match src="primitive_type [60814,60821]" dest="primitive_type [58007,58014]"/>
  <match src="identifier: map [84879,84882]" dest="identifier: map [82800,82803]"/>
  <match src="expression_statement [43480,43526]" dest="expression_statement [40224,40270]"/>
  <match src="function_body [49639,49678]" dest="function_body [46543,46584]"/>
  <match src="bytes: bytes [33218,33223]" dest="bytes: bytes [29475,29480]"/>
  <match src="return: return [16036,16042]" dest="return: return [16512,16518]"/>
  <match src="}: } [35131,35132]" dest="}: } [31441,31442]"/>
  <match src="(: ( [19462,19463]" dest="(: ( [19126,19127]"/>
  <match src="(: ( [97015,97016]" dest="(: ( [95277,95278]"/>
  <match src="yul_identifier [57038,57042]" dest="yul_identifier [54127,54131]"/>
  <match src="identifier: _token [108493,108499]" dest="identifier: _token [106335,106341]"/>
  <match src="call_argument [27316,27322]" dest="call_argument [39323,39329]"/>
  <match src="identifier: c [65609,65610]" dest="identifier: c [62954,62955]"/>
  <match src="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [73008,73330]" dest="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [70570,70901]"/>
  <match src="function_body [5681,5726]" dest="function_body [5864,5911]"/>
  <match src="=: = [9952,9953]" dest="=: = [10867,10868]"/>
  <match src="call_expression [93377,93389]" dest="call_expression [91548,91560]"/>
  <match src="user_defined_type [82355,82358]" dest="user_defined_type [80202,80205]"/>
  <match src="identifier: _token [58666,58672]" dest="identifier: _token [55794,55800]"/>
  <match src="(: ( [18566,18567]" dest="(: ( [18079,18080]"/>
  <match src="primitive_type [96238,96245]" dest="primitive_type [94479,94486]"/>
  <match src="solidity_version:  0.7.5 [21530,21536]" dest="solidity_version:  0.7.5 [21076,21082]"/>
  <match src="}: } [16367,16368]" dest="}: } [16852,16853]"/>
  <match src="is: is [49220,49222]" dest="is: is [46116,46118]"/>
  <match src=",: , [20609,20610]" dest=",: , [20155,20156]"/>
  <match src="identifier: _bytes [34471,34477]" dest="identifier: _bytes [30764,30770]"/>
  <match src="function: function [39011,39019]" dest="function: function [35419,35427]"/>
  <match src="primitive_type [82117,82124]" dest="primitive_type [79957,79964]"/>
  <match src="function_body [99415,99451]" dest="function_body [97761,97799]"/>
  <match src="expression_statement [48690,48784]" dest="expression_statement [45569,45663]"/>
  <match src="primitive_type [94437,94442]" dest="primitive_type [92630,92635]"/>
  <match src="(: ( [2817,2818]" dest="(: ( [2904,2905]"/>
  <match src="comment: //solhint-disable-next-line max-line-length [92745,92788]" dest="comment: //solhint-disable-next-line max-line-length [90899,90942]"/>
  <match src="parameter [84897,84923]" dest="parameter [82818,82844]"/>
  <match src="state_mutability [91843,91847]" dest="state_mutability [89970,89974]"/>
  <match src="call_argument [1562,1575]" dest="call_argument [1612,1625]"/>
  <match src=".: . [78864,78865]" dest=".: . [76616,76617]"/>
  <match src="}: } [93508,93509]" dest="}: } [91681,91682]"/>
  <match src="(: ( [84947,84948]" dest="(: ( [82868,82869]"/>
  <match src=",: , [116493,116494]" dest=",: , [115122,115123]"/>
  <match src="function: function [17506,17514]" dest="function: function [118649,118657]"/>
  <match src="type_name [12312,12319]" dest="type_name [13284,13291]"/>
  <match src="}: } [84733,84734]" dest="}: } [82649,82650]"/>
  <match src="type_name [92668,92675]" dest="type_name [90821,90828]"/>
  <match src="call_expression [75469,75501]" dest="call_expression [73114,73146]"/>
  <match src="constructor: constructor [101727,101738]" dest="constructor: constructor [100141,100152]"/>
  <match src="struct_member [70309,70347]" dest="struct_member [67796,67834]"/>
  <match src="storage: storage [81677,81684]" dest="storage: storage [79503,79510]"/>
  <match src="user_defined_type [73348,73351]" dest="user_defined_type [70920,70923]"/>
  <match src="): ) [45810,45811]" dest="): ) [42626,42627]"/>
  <match src="pragma: pragma [1724,1730]" dest="pragma: pragma [1781,1787]"/>
  <match src="(: ( [39034,39035]" dest="(: ( [35442,35443]"/>
  <match src="=: = [87436,87437]" dest="=: = [85431,85432]"/>
  <match src="): ) [57391,57392]" dest="): ) [54489,54490]"/>
  <match src="primitive_type [45738,45744]" dest="primitive_type [42554,42560]"/>
  <match src="bytes4: bytes4 [41024,41030]" dest="bytes4: bytes4 [37506,37512]"/>
  <match src="identifier: tokenId [100637,100644]" dest="identifier: tokenId [99014,99021]"/>
  <match src="identifier: _indexes [70806,70814]" dest="identifier: _indexes [68307,68315]"/>
  <match src="identifier: operator [31935,31943]" dest="identifier: operator [28158,28166]"/>
  <match src="string [11947,11990]" dest="string [12910,12953]"/>
  <match src="=: = [45149,45150]" dest="=: = [41953,41954]"/>
  <match src="): ) [59913,59914]" dest="): ) [57079,57080]"/>
  <match src="type_name [24247,24254]" dest="type_name [23669,23676]"/>
  <match src="type_name [82117,82124]" dest="type_name [79957,79964]"/>
  <match src="==: == [5286,5288]" dest="==: == [5458,5460]"/>
  <match src="identifier: lastvalue [72031,72040]" dest="identifier: lastvalue [69560,69569]"/>
  <match src="bool: bool [74393,74397]" dest="bool: bool [71999,72003]"/>
  <match src="string [89078,89121]" dest="string [87119,87162]"/>
  <match src="(: ( [12694,12695]" dest="(: ( [13671,13672]"/>
  <match src="bytes4: bytes4 [88085,88091]" dest="bytes4: bytes4 [86098,86104]"/>
  <match src="array_access [82589,82615]" dest="array_access [80439,80465]"/>
  <match src="}: } [70926,70927]" dest="}: } [68432,68433]"/>
  <match src="): ) [5679,5680]" dest="): ) [5862,5863]"/>
  <match src="identifier: weiValue [12640,12648]" dest="identifier: weiValue [13617,13625]"/>
  <match src="(: ( [57543,57544]" dest="(: ( [54643,54644]"/>
  <match src="identifier: encodePacked [20897,20909]" dest="identifier: encodePacked [20451,20463]"/>
  <match src="}: } [90563,90564]" dest="}: } [88648,88649]"/>
  <match src="}: } [16086,16087]" dest="}: } [16563,16564]"/>
  <match src="call_argument [113128,113136]" dest="call_argument [111283,111291]"/>
  <match src="(: ( [83633,83634]" dest="(: ( [81516,81517]"/>
  <match src="function_definition [90866,91066]" dest="function_definition [88963,89166]"/>
  <match src="internal: internal [12355,12363]" dest="internal: internal [13327,13335]"/>
  <match src="{: { [70115,70116]" dest="{: { [67596,67597]"/>
  <match src="state_mutability [48189,48193]" dest="state_mutability [45058,45062]"/>
  <match src="parameter [90687,90700]" dest="parameter [88777,88790]"/>
  <match src="identifier: FailedMessagesProcessor [104543,104566]" dest="identifier: FailedMessagesProcessor [103064,103087]"/>
  <match src="}: } [112556,112557]" dest="}: } [112179,112180]"/>
  <match src="identifier: IBurnableMintableERC721Token [33351,33379]" dest="identifier: IBurnableMintableERC721Token [29616,29644]"/>
  <match src=",: , [101798,101799]" dest=",: , [100214,100215]"/>
  <match src="event: event [47264,47269]" dest="event: event [44117,44122]"/>
  <match src="expression_statement [102914,102930]" dest="expression_statement [101368,101384]"/>
  <match src="mapping: mapping [86423,86430]" dest="mapping: mapping [84399,84406]"/>
  <match src="call_expression [91478,91535]" dest="call_expression [89593,89650]"/>
  <match src="function_body [84296,84422]" dest="function_body [82198,82327]"/>
  <match src="(: ( [113119,113120]" dest="(: ( [111274,111275]"/>
  <match src="identifier: stringStorage [335,348]" dest="identifier: stringStorage [345,358]"/>
  <match src="type_name [103870,103876]" dest="type_name [102352,102358]"/>
  <match src="call_argument [82523,82535]" dest="call_argument [80372,80384]"/>
  <match src="expression_statement [110668,110709]" dest="expression_statement [109162,109203]"/>
  <match src="comment: /**      * @dev Truncate bytes array if its size is more than 20 bytes.      * NOTE: This function does not perform any checks on the received parameter.      * Make sure that the _bytes argument has a correct length, not less than 20 bytes.      * A case when _bytes has length less than 20 will lead to the undefined behaviour,      * since assembly will read data from memory that is not related to the _bytes argument.      * @param _bytes to be converted to address type      * @return addr address included in the firsts 20 bytes of the bytes array in parameter.      */ [33757,34333]" dest="comment: /**      * @dev Truncate bytes array if its size is more than 20 bytes.      * NOTE: This function does not perform any checks on the received parameter.      * Make sure that the _bytes argument has a correct length, not less than 20 bytes.      * A case when _bytes has length less than 20 will lead to the undefined behaviour,      * since assembly will read data from memory that is not related to the _bytes argument.      * @param _bytes to be converted to address type      * @return addr address included in the firsts 20 bytes of the bytes array in parameter.      */ [30039,30623]"/>
  <match src="public: public [20827,20833]" dest="public: public [20380,20386]"/>
  <match src="call_argument [84407,84412]" dest="call_argument [82311,82316]"/>
  <match src="unary_expression [100148,100164]" dest="unary_expression [98511,98527]"/>
  <match src="string [3611,3629]" dest="string [3716,3734]"/>
  <match src="type_name [86308,86314]" dest="type_name [84278,84284]"/>
  <match src="identifier: to [94559,94561]" dest="identifier: to [92754,92756]"/>
  <match src="variable_declaration_statement [19603,19658]" dest="variable_declaration_statement [19260,19347]"/>
  <match src="): ) [90787,90788]" dest="): ) [88878,88879]"/>
  <match src="if_statement [100144,100202]" dest="if_statement [98507,98567]"/>
  <match src="internal: internal [115615,115623]" dest="internal: internal [114221,114229]"/>
  <match src="): ) [3870,3871]" dest="): ) [3982,3983]"/>
  <match src="false [108532,108537]" dest="false [106376,106381]"/>
  <match src="type_name [36951,36958]" dest="type_name [33312,33319]"/>
  <match src="): ) [55444,55445]" dest="): ) [52490,52491]"/>
  <match src="address: address [10847,10854]" dest="address: address [11784,11791]"/>
  <match src="bytes: bytes [10900,10905]" dest="bytes: bytes [11837,11842]"/>
  <match src="function_body [14397,14440]" dest="function_body [15257,15303]"/>
  <match src="false [38585,38590]" dest="false [34983,34988]"/>
  <match src="parameter [6383,6390]" dest="parameter [7206,7213]"/>
  <match src="type_name [12293,12298]" dest="type_name [13265,13270]"/>
  <match src=",: , [115148,115149]" dest=",: , [113739,113740]"/>
  <match src=",: , [83416,83417]" dest=",: , [81292,81293]"/>
  <match src="(: ( [30556,30557]" dest="(: ( [26739,26740]"/>
  <match src="identifier: _name [56659,56664]" dest="identifier: _name [53737,53742]"/>
  <match src="comment: /**      * @dev Sets the mediator contract address from the other network. Only the owner can call this method.      * @param _mediatorContract the address of the mediator contract.      */ [15021,15210]" dest="comment: /**      * @dev Sets the mediator contract address from the other network. Only the owner can call this method.      * @param _mediatorContract the address of the mediator contract.      */ [15940,16132]"/>
  <match src="member_expression [13082,13099]" dest="member_expression [14068,14085]"/>
  <match src="variable_declaration [79578,79594]" dest="variable_declaration [77348,77364]"/>
  <match src="primitive_type [41024,41030]" dest="primitive_type [37506,37512]"/>
  <match src="member_expression [72261,72273]" dest="member_expression [69795,69807]"/>
  <match src="bytes: bytes [11873,11878]" dest="bytes: bytes [12835,12840]"/>
  <match src="): ) [33439,33440]" dest="): ) [29705,29706]"/>
  <match src="identifier: tokenURI [112134,112142]" dest="identifier: tokenURI [111329,111337]"/>
  <match src=",: , [81790,81791]" dest=",: , [79617,79618]"/>
  <match src="identifier: _receiver [38124,38133]" dest="identifier: _receiver [34512,34521]"/>
  <match src="assignment_expression [103562,103594]" dest="assignment_expression [102035,102067]"/>
  <match src="return: return [95016,95022]" dest="return: return [93223,93229]"/>
  <match src="type_name [7066,7071]" dest="type_name [7909,7914]"/>
  <match src="(: ( [107625,107626]" dest="(: ( [105484,105485]"/>
  <match src="(: ( [61964,61965]" dest="(: ( [59187,59188]"/>
  <match src="block_statement [12998,13517]" dest="block_statement [13982,14514]"/>
  <match src="type_name [88307,88313]" dest="type_name [86325,86331]"/>
  <match src="): ) [97476,97477]" dest="): ) [95758,95759]"/>
  <match src="(: ( [89236,89237]" dest="(: ( [87283,87284]"/>
  <match src="bytes: bytes [46780,46785]" dest="bytes: bytes [43617,43622]"/>
  <match src="call_argument [111970,111978]" dest="call_argument [110126,110134]"/>
  <match src="identifier: _dailyLimit [25572,25583]" dest="identifier: _disable [22612,22620]"/>
  <match src="return_statement [72536,72548]" dest="return_statement [70078,70090]"/>
  <match src="(: ( [13081,13082]" dest="(: ( [14067,14068]"/>
  <match src="identifier: _image [49612,49618]" dest="identifier: _image [46516,46522]"/>
  <match src="expression_statement [15311,15362]" dest="expression_statement [16235,16286]"/>
  <match src="string [48835,48856]" dest="string [45715,45736]"/>
  <match src="binary_expression [19510,19591]" dest="binary_expression [19175,19246]"/>
  <match src="visibility [89363,89369]" dest="visibility [87417,87423]"/>
  <match src="identifier: _operatorApprovals [92542,92560]" dest="identifier: _operatorApprovals [90689,90707]"/>
  <match src="constant: constant [85746,85754]" dest="constant: constant [83701,83709]"/>
  <match src="type_name [58998,59005]" dest="type_name [56136,56143]"/>
  <match src="(: ( [74208,74209]" dest="(: ( [71808,71809]"/>
  <match src="binary_expression [100559,100585]" dest="binary_expression [98933,98959]"/>
  <match src="solidity_version: 0.7.0 [61164,61169]" dest="solidity_version: 0.7.0 [58369,58374]"/>
  <match src="): ) [21230,21231]" dest="): ) [20792,20793]"/>
  <match src=",: , [92692,92693]" dest=",: , [90845,90846]"/>
  <match src="string: string [90022,90028]" dest="string: string [88094,88100]"/>
  <match src="identifier: target [12891,12897]" dest="identifier: target [13872,13878]"/>
  <match src="): ) [93501,93502]" dest="): ) [91673,91674]"/>
  <match src="function_definition [83298,83438]" dest="function_definition [81173,81315]"/>
  <match src="binary_expression [8753,8768]" dest="binary_expression [9645,9660]"/>
  <match src="expression_statement [48793,48890]" dest="expression_statement [45673,45770]"/>
  <match src="return_type_definition [44093,44116]" dest="return_type_definition [40864,40887]"/>
  <match src="): ) [43589,43590]" dest="): ) [40336,40337]"/>
  <match src="}: } [79127,79128]" dest="}: } [76884,76885]"/>
  <match src="{: { [35950,35951]" dest="{: { [32284,32285]"/>
  <match src="solidity_pragma_token [41246,41260]" dest="solidity_pragma_token [37735,37749]"/>
  <match src="member_expression [95023,95044]" dest="member_expression [93230,93251]"/>
  <match src="identifier: tokenId [95335,95342]" dest="identifier: tokenId [93553,93560]"/>
  <match src="variable_declaration [112012,112030]" dest="variable_declaration [111674,111692]"/>
  <match src="identifier: sender [37509,37515]" dest="identifier: sender [33884,33890]"/>
  <match src="visibility [97418,97426]" dest="visibility [95699,95707]"/>
  <match src="function_body [108447,108617]" dest="function_body [106288,106463]"/>
  <match src=",: , [94435,94436]" dest=",: , [92628,92629]"/>
  <match src="call_expression [106152,106185]" dest="call_expression [103980,104013]"/>
  <match src="type_cast_expression [106219,106229]" dest="type_cast_expression [104047,104057]"/>
  <match src="expression_statement [115017,115055]" dest="expression_statement [115712,115752]"/>
  <match src="): ) [99396,99397]" dest="): ) [97742,97743]"/>
  <match src="identifier: ptr [54775,54778]" dest="identifier: ptr [51793,51796]"/>
  <match src="member_expression [46356,46372]" dest="member_expression [43183,43199]"/>
  <match src="): ) [70590,70591]" dest="): ) [68086,68087]"/>
  <match src="identifier: length [89989,89995]" dest="identifier: length [88060,88066]"/>
  <match src="function: function [29758,29766]" dest="function: function [25925,25933]"/>
  <match src="bytes32: bytes32 [117047,117054]" dest="bytes32: bytes32 [115588,115595]"/>
  <match src="(: ( [105849,105850]" dest="(: ( [120306,120307]"/>
  <match src="type_name [12327,12333]" dest="type_name [13299,13305]"/>
  <match src="address: address [107576,107583]" dest="address: address [105434,105441]"/>
  <match src="(: ( [70536,70537]" dest="(: ( [68032,68033]"/>
  <match src="): ) [435,436]" dest="): ) [447,448]"/>
  <match src="): ) [94632,94633]" dest="): ) [92827,92828]"/>
  <match src="expression_statement [72261,72305]" dest="expression_statement [69795,69839]"/>
  <match src="identifier: _messageId [6688,6698]" dest="identifier: _messageId [7521,7531]"/>
  <match src="type_name [103460,103467]" dest="type_name [101931,101938]"/>
  <match src="identifier: symbol [46260,46266]" dest="identifier: symbol [43086,43092]"/>
  <match src="comment: /**      * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}      * by `operator` from `from`, this function is called.      *      * It must return its Solidity selector to confirm the token transfer.      * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.      *      * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.      */ [61357,61842]" dest="comment: /**      * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}      * by `operator` from `from`, this function is called.      *      * It must return its Solidity selector to confirm the token transfer.      * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.      *      * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.      */ [58570,59063]"/>
  <match src="function_body [83607,83666]" dest="function_body [81489,81550]"/>
  <match src="call_argument [96873,96907]" dest="call_argument [95132,95166]"/>
  <match src="call_argument [108525,108530]" dest="call_argument [106369,106374]"/>
  <match src="type_name [117047,117054]" dest="type_name [115588,115595]"/>
  <match src="bool: bool [111796,111800]" dest="bool: bool [23172,23176]"/>
  <match src="return: return [95444,95450]" dest="return: return [93664,93670]"/>
  <match src="expression_statement [102633,102658]" dest="expression_statement [101078,101103]"/>
  <match src="call_expression [115017,115054]" dest="call_expression [115712,115751]"/>
  <match src="function: function [96776,96784]" dest="function: function [95034,95042]"/>
  <match src="primitive_type [28981,28988]" dest="primitive_type [25124,25131]"/>
  <match src="event: event [21862,21867]" dest="event: event [21417,21422]"/>
  <match src="&quot;: &quot; [9845,9846]" dest="&quot;: &quot; [10757,10758]"/>
  <match src="identifier: handleNativeNFT [112914,112929]" dest="identifier: handleNativeNFT [112362,112377]"/>
  <match src="identifier: require [95319,95326]" dest="identifier: require [93537,93544]"/>
  <match src="primitive_type [20807,20814]" dest="primitive_type [20360,20367]"/>
  <match src="comment: /**      * @dev See {IERC721-setApprovalForAll}.      */ [92013,92069]" dest="comment: /**      * @dev See {IERC721-setApprovalForAll}.      */ [90146,90204]"/>
  <match src="string: string [106894,106900]" dest="string: string [104736,104742]"/>
  <match src="parameter [58588,58592]" dest="parameter [55715,55719]"/>
  <match src="): ) [31902,31903]" dest="): ) [28125,28126]"/>
  <match src="call_argument [37498,37503]" dest="call_argument [33873,33878]"/>
  <match src="primitive_type [84287,84294]" dest="primitive_type [82189,82196]"/>
  <match src="identifier: _isNative [116172,116181]" dest="identifier: _isNative [114793,114802]"/>
  <match src="type_name [91436,91443]" dest="type_name [89550,89557]"/>
  <match src="): ) [38475,38476]" dest="): ) [34869,34870]"/>
  <match src="type_name [3820,3827]" dest="type_name [3932,3939]"/>
  <match src="identifier: Context [59771,59778]" dest="identifier: Context [56932,56939]"/>
  <match src="call_expression [112145,112176]" dest="call_expression [111340,111371]"/>
  <match src="^:  ^ [85121,85123]" dest="^:  ^ [83050,83052]"/>
  <match src="type_name [50975,50982]" dest="type_name [47922,47929]"/>
  <match src="(: ( [16907,16908]" dest="(: ( [17102,17103]"/>
  <match src="address: address [61873,61880]" dest="address: address [59095,59102]"/>
  <match src="bytes32: bytes32 [21126,21133]" dest="bytes32: bytes32 [20687,20694]"/>
  <match src="external: external [50887,50895]" dest="external: external [47832,47840]"/>
  <match src="type_name [108457,108464]" dest="type_name [106299,106306]"/>
  <match src="return_type_definition [11312,11334]" dest="return_type_definition [12259,12281]"/>
  <match src="identifier: value [12904,12909]" dest="identifier: value [13885,13890]"/>
  <match src="function_definition [6056,6246]" dest="function_definition [6254,6448]"/>
  <match src="type_name [40738,40744]" dest="type_name [37209,37215]"/>
  <match src="comment: /**  * @title NFTOmnibridgeInfo  * @dev Functionality for versioning NFTOmnibridge mediator.  */ [39944,40040]" dest="comment: /**  * @title NFTOmnibridgeInfo  * @dev Functionality for versioning NFTOmnibridge mediator.  */ [36390,36489]"/>
  <match src="identifier: bridgeContract [102270,102284]" dest="identifier: bridgeContract [100704,100718]"/>
  <match src="parameter [64582,64591]" dest="parameter [61892,61901]"/>
  <match src="identifier: ptr [53835,53838]" dest="identifier: ptr [50834,50837]"/>
  <match src="identifier: value [83124,83129]" dest="identifier: value [80991,80996]"/>
  <match src="solidity_version: 0.7.0 [62054,62059]" dest="solidity_version: 0.7.0 [59283,59288]"/>
  <match src="type_name [98231,98238]" dest="type_name [96543,96550]"/>
  <match src="identifier: tokenId [99025,99032]" dest="identifier: tokenId [97362,97369]"/>
  <match src="member_expression [74647,74657]" dest="member_expression [72261,72271]"/>
  <match src="return_type_definition [62996,63010]" dest="return_type_definition [60256,60270]"/>
  <match src="bytes: bytes [97653,97658]" dest="bytes: bytes [95943,95948]"/>
  <match src="identifier: mediatorContractOnOtherSide [111024,111051]" dest="identifier: mediatorContractOnOtherSide [120809,120836]"/>
  <match src="): ) [95004,95005]" dest="): ) [93210,93211]"/>
  <match src="parameter [37449,37465]" dest="parameter [33823,33839]"/>
  <match src="interface: interface [39549,39558]" dest="interface: interface [35977,35986]"/>
  <match src="call_argument [116389,116399]" dest="call_argument [115016,115026]"/>
  <match src="function_body [91214,91299]" dest="function_body [89319,89407]"/>
  <match src="identifier: _implementation [57812,57827]" dest="identifier: _implementation [54917,54932]"/>
  <match src="primitive_type [18971,18978]" dest="primitive_type [18605,18612]"/>
  <match src="return_type_definition [64607,64624]" dest="return_type_definition [61917,61934]"/>
  <match src="(: ( [83053,83054]" dest="(: ( [80919,80920]"/>
  <match src="type_name [17197,17204]" dest="type_name [17400,17407]"/>
  <match src="identifier: _value [82616,82622]" dest="identifier: _value [80466,80472]"/>
  <match src="identifier: _token [23995,24001]" dest="identifier: _token [38865,38871]"/>
  <match src=",: , [92846,92847]" dest=",: , [91001,91002]"/>
  <match src="parameter [10900,10912]" dest="parameter [11837,11849]"/>
  <match src="function_body [103182,103220]" dest="function_body [101644,101684]"/>
  <match src=",: , [108530,108531]" dest=",: , [106374,106375]"/>
  <match src="identifier: _value [2846,2852]" dest="identifier: _value [2933,2939]"/>
  <match src="call_argument [102920,102928]" dest="call_argument [101374,101382]"/>
  <match src="primitive_type [103852,103859]" dest="primitive_type [102334,102341]"/>
  <match src="call_argument [3237,3251]" dest="call_argument [3333,3347]"/>
  <match src="identifier: length [89816,89822]" dest="identifier: length [87883,87889]"/>
  <match src="event_paramater [28981,29001]" dest="event_paramater [25124,25144]"/>
  <match src="type_name [39681,39687]" dest="type_name [36114,36120]"/>
  <match src="function_definition [27183,27399]" dest="function_definition [39078,39360]"/>
  <match src="primitive_type [83418,83425]" dest="primitive_type [81294,81301]"/>
  <match src="parameter [60761,60774]" dest="parameter [57954,57967]"/>
  <match src="{: { [89035,89036]" dest="{: { [87075,87076]"/>
  <match src="identifier: supportsInterface [28613,28630]" dest="identifier: supportsInterface [24740,24757]"/>
  <match src="returns: returns [7338,7345]" dest="returns: returns [8191,8198]"/>
  <match src="primitive_type [100036,100043]" dest="primitive_type [98396,98403]"/>
  <match src="state_mutability [44088,44092]" dest="state_mutability [40859,40863]"/>
  <match src="): ) [31187,31188]" dest="): ) [27386,27387]"/>
  <match src="visibility [17561,17569]" dest="visibility [118697,118705]"/>
  <match src="comment: /**      * @dev Sets the base URI for all tokens.      * Can be called by bridge owner after token contract was instantiated.      * @param _baseURI new base URI.      */ [102942,103112]" dest="comment: /**      * @dev Sets the base URI for all tokens.      * Can be called by bridge owner after token contract was instantiated.      * @param _baseURI new base URI.      */ [101399,101573]"/>
  <match src="identifier: digits [43406,43412]" dest="identifier: digits [40147,40153]"/>
  <match src="(: ( [14624,14625]" dest="(: ( [15534,15535]"/>
  <match src="): ) [61041,61042]" dest="): ) [58240,58241]"/>
  <match src="(: ( [95044,95045]" dest="(: ( [93251,93252]"/>
  <match src="expression_statement [111089,111160]" dest="expression_statement [110467,110527]"/>
  <match src="==: == [95460,95462]" dest="==: == [93680,93682]"/>
  <match src="visibility [91836,91842]" dest="visibility [89963,89969]"/>
  <match src="parameter [91205,91212]" dest="parameter [89310,89317]"/>
  <match src="): ) [6960,6961]" dest="): ) [7799,7800]"/>
  <match src="(: ( [38474,38475]" dest="(: ( [34868,34869]"/>
  <match src="identifier: _inner [75196,75202]" dest="identifier: _inner [72831,72837]"/>
  <match src="(: ( [6854,6855]" dest="(: ( [7691,7692]"/>
  <match src="member_expression [110986,111023]" dest="member_expression [120771,120808]"/>
  <match src="=: = [108471,108472]" dest="=: = [106313,106314]"/>
  <match src="call_expression [3594,3642]" dest="call_expression [3699,3747]"/>
  <match src="}: } [68881,68882]" dest="}: } [66320,66321]"/>
  <match src="type_name [11840,11847]" dest="type_name [12802,12809]"/>
  <match src="parameter [81067,81071]" dest="parameter [78872,78876]"/>
  <match src="visibility [3840,3848]" dest="visibility [3952,3960]"/>
  <match src="array_access [50184,50220]" dest="array_access [47106,47142]"/>
  <match src="identifier: tokenId [31180,31187]" dest="identifier: tokenId [27379,27386]"/>
  <match src="parameter [33189,33199]" dest="parameter [29446,29456]"/>
  <match src="identifier: ptr [51462,51465]" dest="identifier: ptr [48418,48421]"/>
  <match src="(: ( [24246,24247]" dest="(: ( [23668,23669]"/>
  <match src="&quot;: &quot; [99080,99081]" dest="&quot;: &quot; [97417,97418]"/>
  <match src="memory: memory [11827,11833]" dest="memory: memory [12789,12795]"/>
  <match src="primitive_type [89237,89243]" dest="primitive_type [87284,87290]"/>
  <match src="member_expression [9954,9968]" dest="member_expression [10869,10883]"/>
  <match src="call_argument [105785,105791]" dest="call_argument [120238,120244]"/>
  <match src="visibility [17224,17232]" dest="visibility [17427,17435]"/>
  <match src="memory: memory [11327,11333]" dest="memory: memory [12274,12280]"/>
  <match src="identifier: chooseReceiver [39020,39034]" dest="identifier: chooseReceiver [35428,35442]"/>
  <match src="identifier: _token [25556,25562]" dest="identifier: _token [22599,22605]"/>
  <match src="identifier: key [83654,83657]" dest="identifier: key [81537,81540]"/>
  <match src="==: == [107289,107291]" dest="==: == [105141,105143]"/>
  <match src="): ) [11885,11886]" dest="): ) [12847,12848]"/>
  <match src="struct_member [78002,78015]" dest="struct_member [75729,75742]"/>
  <match src="=: = [71711,71712]" dest="=: = [69234,69235]"/>
  <match src="bytes: bytes [45601,45606]" dest="bytes: bytes [42416,42421]"/>
  <match src="(: ( [16047,16048]" dest="(: ( [16523,16524]"/>
  <match src="identifier: _tokenId [102584,102592]" dest="identifier: _tokenId [101028,101036]"/>
  <match src=",: , [111564,111565]" dest=",: , [110906,110907]"/>
  <match src="visibility [6545,6553]" dest="visibility [7374,7382]"/>
  <match src="visibility [105386,105394]" dest="visibility [119948,119956]"/>
  <match src="external: external [44253,44261]" dest="external: external [41029,41037]"/>
  <match src="): ) [78611,78612]" dest="): ) [76358,76359]"/>
  <match src="{: { [103504,103505]" dest="{: { [101975,101976]"/>
  <match src="call_argument [4966,4970]" dest="call_argument [5128,5132]"/>
  <match src="solidity_pragma_token [85113,85128]" dest="solidity_pragma_token [83042,83057]"/>
  <match src="memory: memory [46748,46754]" dest="memory: memory [43584,43590]"/>
  <match src="uint256: uint256 [43233,43240]" dest="uint256: uint256 [39968,39975]"/>
  <match src="constant: constant [13795,13803]" dest="constant: constant [14817,14825]"/>
  <match src="): ) [98720,98721]" dest="): ) [97044,97045]"/>
  <match src="(: ( [56958,56959]" dest="(: ( [54045,54046]"/>
  <match src="call_expression [14625,14641]" dest="call_expression [15478,15494]"/>
  <match src="using_directive [85527,85553]" dest="using_directive [83478,83504]"/>
  <match src="): ) [113289,113290]" dest="): ) [109457,109458]"/>
  <match src="struct_member [70158,70176]" dest="struct_member [67641,67659]"/>
  <match src="solidity_version:  0.7.5 [104074,104080]" dest="solidity_version:  0.7.5 [102563,102569]"/>
  <match src="parameter [12277,12291]" dest="parameter [13249,13263]"/>
  <match src="virtual: virtual [21408,21415]" dest="virtual: virtual [20949,20956]"/>
  <match src="identifier: require [109673,109680]" dest="identifier: require [107618,107625]"/>
  <match src="identifier: _entries [81767,81775]" dest="identifier: _entries [79594,79602]"/>
  <match src="return: return [66185,66191]" dest="return: return [63548,63554]"/>
  <match src="call_argument [27302,27314]" dest="call_argument [39304,39321]"/>
  <match src="expression_statement [43311,43322]" dest="expression_statement [40049,40060]"/>
  <match src="visibility [42522,42530]" dest="visibility [39147,39155]"/>
  <match src="identifier: _tokenId [46889,46897]" dest="identifier: _tokenId [43727,43735]"/>
  <match src="string_literal [95976,95978]" dest="string_literal [94210,94212]"/>
  <match src="type_name [78283,78311]" dest="type_name [76020,76048]"/>
  <match src="return_type_definition [54959,54976]" dest="return_type_definition [51988,52005]"/>
  <match src="call_expression [111946,111961]" dest="call_expression [110102,110117]"/>
  <match src="identifier: errorMessage [82399,82411]" dest="identifier: errorMessage [80246,80258]"/>
  <match src="pragma_directive [41239,41261]" dest="pragma_directive [37728,37750]"/>
  <match src="{: { [50904,50905]" dest="{: { [47849,47850]"/>
  <match src="view: view [29801,29805]" dest="view: view [25968,25972]"/>
  <match src="call_argument [25640,25641]" dest="call_argument [22678,22679]"/>
  <match src="(: ( [43146,43147]" dest="(: ( [39877,39878]"/>
  <match src="call_argument [115119,115125]" dest="call_argument [113710,113716]"/>
  <match src="expression_statement [102019,102057]" dest="expression_statement [100445,100483]"/>
  <match src="primitive_type [62955,62961]" dest="primitive_type [60215,60221]"/>
  <match src="}: } [101909,101910]" dest="}: } [100329,100330]"/>
  <match src="call_argument [68840,68852]" dest="call_argument [66277,66289]"/>
  <match src="type_name [5672,5679]" dest="type_name [5855,5862]"/>
  <match src="identifier: setMessageRecipient [3490,3509]" dest="identifier: setMessageRecipient [3594,3613]"/>
  <match src="comment: // File: contracts/upgradeable_contracts/VersionableBridge.sol [39461,39523]" dest="comment: // File: contracts/upgradeable_contracts/VersionableBridge.sol [35885,35947]"/>
  <match src="string: string [89393,89399]" dest="string: string [87447,87453]"/>
  <match src="visibility [31189,31197]" dest="visibility [27388,27396]"/>
  <match src="identifier: encodePacked [90195,90207]" dest="identifier: encodePacked [88270,88282]"/>
  <match src="primitive_type [118660,118666]" dest="primitive_type [116923,116929]"/>
  <match src="visibility [82413,82420]" dest="visibility [80260,80267]"/>
  <match src="storage: storage [75400,75407]" dest="storage: storage [73044,73051]"/>
  <match src="primitive_type [60776,60783]" dest="primitive_type [57969,57976]"/>
  <match src="address: address [47716,47723]" dest="address: address [44576,44583]"/>
  <match src="primitive_type [105423,105427]" dest="primitive_type [119985,119989]"/>
  <match src="external: external [57393,57401]" dest="external: external [54491,54499]"/>
  <match src="): ) [43464,43465]" dest="): ) [40207,40208]"/>
  <match src="identifier: balanceOf [88703,88712]" dest="identifier: balanceOf [86734,86743]"/>
  <match src="call_argument [25664,25670]" dest="call_argument [22702,22708]"/>
  <match src="solidity_version:  0.7.5 [13605,13611]" dest="solidity_version:  0.7.5 [14608,14614]"/>
  <match src="identifier: _messageId [2826,2836]" dest="identifier: _messageId [2913,2923]"/>
  <match src="visibility [117147,117155]" dest="visibility [115692,115700]"/>
  <match src="(: ( [70317,70318]" dest="(: ( [67804,67805]"/>
  <match src="function_definition [49810,49922]" dest="function_definition [46722,46836]"/>
  <match src=",: , [116209,116210]" dest=",: , [114831,114832]"/>
  <match src="{: { [57005,57006]" dest="{: { [54092,54093]"/>
  <match src="(: ( [17196,17197]" dest="(: ( [17399,17400]"/>
  <match src="type_name [39390,39397]" dest="type_name [35809,35816]"/>
  <match src="identifier: _recipient [113833,113843]" dest="identifier: _recipient [112811,112821]"/>
  <match src="return_statement [81284,81311]" dest="return_statement [79097,79124]"/>
  <match src="comment: // solhint-disable-next-line no-inline-assembly [8608,8655]" dest="comment: // solhint-disable-next-line no-inline-assembly [9498,9545]"/>
  <match src="return_type_definition [41015,41037]" dest="return_type_definition [37497,37519]"/>
  <match src="function_body [37033,37089]" dest="function_body [33397,33455]"/>
  <match src="true [109212,109216]" dest="true [107147,107151]"/>
  <match src="mapping: mapping [245,252]" dest="mapping: mapping [254,261]"/>
  <match src="visibility [73380,73387]" dest="visibility [70952,70959]"/>
  <match src="bytes32: bytes32 [113164,113171]" dest="bytes32: bytes32 [109413,109420]"/>
  <match src="function_definition [31661,31716]" dest="function_definition [27875,27930]"/>
  <match src="event_paramater [18990,19003]" dest="event_paramater [18624,18637]"/>
  <match src="return_statement [90015,90068]" dest="return_statement [88087,88140]"/>
  <match src="[: [ [20882,20883]" dest="[: [ [20436,20437]"/>
  <match src="call_argument [95426,95433]" dest="call_argument [93645,93652]"/>
  <match src=".: . [100256,100257]" dest=".: . [98622,98623]"/>
  <match src="solidity_version:  0.7.5 [49076,49082]" dest="solidity_version:  0.7.5 [45964,45970]"/>
  <match src="primitive_type [91385,91392]" dest="primitive_type [89498,89505]"/>
  <match src="identifier: _messageId [110961,110971]" dest="identifier: _messageId [110369,110379]"/>
  <match src="is: is [58136,58138]" dest="is: is [55255,55257]"/>
  <match src="[: [ [55540,55541]" dest="[: [ [52589,52590]"/>
  <match src="identifier: _data [7232,7237]" dest="identifier: _data [8081,8086]"/>
  <match src="call_argument [27372,27378]" dest="call_argument [22840,22846]"/>
  <match src="(: ( [5671,5672]" dest="(: ( [5854,5855]"/>
  <match src="comment: /**      * @dev Initiate the bridge operation for some token from msg.sender to msg.sender on the other side.      * The user should first call Approve method of the ERC721 token.      * @param token bridged token contract address.      * @param _tokenId id of token to be transferred to the other network.      */ [37095,37409]" dest="comment: /**      * @dev Initiate the bridge operation for some token from msg.sender to msg.sender on the other side.      * The user should first call Approve method of the ERC721 token.      * @param token bridged token contract address.      * @param _tokenId id of token to be transferred to the other network.      */ [33463,33782]"/>
  <match src="virtual: virtual [59929,59936]" dest="virtual: virtual [57095,57102]"/>
  <match src="call_argument [5981,5989]" dest="call_argument [6173,6181]"/>
  <match src="parameter [105341,105355]" dest="parameter [119901,119915]"/>
  <match src="call_expression [105475,105510]" dest="call_expression [120040,120075]"/>
  <match src="identifier: tokenId [61913,61920]" dest="identifier: tokenId [59135,59142]"/>
  <match src="mapping: mapping [70309,70316]" dest="mapping: mapping [67796,67803]"/>
  <match src="returns: returns [68796,68803]" dest="returns: returns [66232,66239]"/>
  <match src="pragma: pragma [61147,61153]" dest="pragma: pragma [58352,58358]"/>
  <match src="comment: // Update the index for the moved value [72209,72248]" dest="comment: // Update the index for the moved value [69742,69781]"/>
  <match src="identifier: baseURI [90486,90493]" dest="identifier: baseURI [88569,88576]"/>
  <match src="internal: internal [18489,18497]" dest="internal: internal [18001,18009]"/>
  <match src="(: ( [6808,6809]" dest="(: ( [7643,7644]"/>
  <match src="(: ( [62582,62583]" dest="(: ( [59831,59832]"/>
  <match src="address: address [24768,24775]" dest="address: address [23394,23401]"/>
  <match src="identifier: _token [27838,27844]" dest="identifier: _token [22289,22295]"/>
  <match src="type_name [75713,75720]" dest="type_name [73367,73374]"/>
  <match src="yul_function_call [54674,54703]" dest="yul_function_call [51689,51718]"/>
  <match src="bytes32: bytes32 [698,705]" dest="bytes32: bytes32 [721,728]"/>
  <match src="address: address [31146,31153]" dest="address: address [27345,27352]"/>
  <match src="bytes: bytes [7217,7222]" dest="bytes: bytes [8066,8071]"/>
  <match src="call_argument [46389,46395]" dest="call_argument [43216,43222]"/>
  <match src="primitive_type [110433,110440]" dest="primitive_type [109011,109018]"/>
  <match src="call_expression [93115,93154]" dest="call_expression [91279,91318]"/>
  <match src="bytes32: bytes32 [72023,72030]" dest="bytes32: bytes32 [69552,69559]"/>
  <match src="contract_declaration [35881,39459]" dest="contract_declaration [32215,35881]"/>
  <match src="): ) [39619,39620]" dest="): ) [36048,36049]"/>
  <match src="(: ( [112974,112975]" dest="(: ( [112925,112926]"/>
  <match src=",: , [45221,45222]" dest=",: , [42026,42027]"/>
  <match src="parameter [48626,48646]" dest="parameter [45504,45524]"/>
  <match src="call_argument [46356,46396]" dest="call_argument [43183,43223]"/>
  <match src="call_expression [110677,110707]" dest="call_expression [109171,109201]"/>
  <match src="]: ] [92576,92577]" dest="]: ] [90723,90724]"/>
  <match src="contract_body [64323,68884]" dest="contract_body [61622,66324]"/>
  <match src="variable_declaration [64635,64644]" dest="variable_declaration [61946,61955]"/>
  <match src="call_expression [14653,14710]" dest="call_expression [15554,15618]"/>
  <match src="comment: // File: @openzeppelin/contracts/utils/Address.sol [7428,7478]" dest="comment: // File: @openzeppelin/contracts/utils/Address.sol [8286,8336]"/>
  <match src="identifier: _length [76203,76210]" dest="identifier: _length [73872,73879]"/>
  <match src="state_mutability [32552,32556]" dest="state_mutability [28794,28798]"/>
  <match src="=: = [48768,48769]" dest="=: = [45647,45648]"/>
  <match src=".: . [112913,112914]" dest=".: . [112361,112362]"/>
  <match src=":: : [78894,78895]" dest=":: : [76646,76647]"/>
  <match src="parameter [101380,101392]" dest="parameter [99777,99789]"/>
  <match src=",: , [21837,21838]" dest=",: , [21394,21395]"/>
  <match src="function: function [58963,58971]" dest="function: function [56100,56108]"/>
  <match src="): ) [3548,3549]" dest="): ) [3652,3653]"/>
  <match src="expression_statement [78861,78919]" dest="expression_statement [76613,76671]"/>
  <match src="): ) [2501,2502]" dest="): ) [2579,2580]"/>
  <match src=",: , [110920,110921]" dest=",: , [109391,109392]"/>
  <match src="array_access [16935,16966]" dest="array_access [17131,17162]"/>
  <match src="(: ( [20262,20263]" dest="(: ( [19813,19814]"/>
  <match src="primitive_type [55437,55444]" dest="primitive_type [52483,52490]"/>
  <match src="call_argument [1520,1598]" dest="call_argument [1570,1648]"/>
  <match src="identifier: value [75721,75726]" dest="identifier: value [73375,73380]"/>
  <match src="primitive_type [31160,31167]" dest="primitive_type [27359,27366]"/>
  <match src="(: ( [114335,114336]" dest="(: ( [112944,112945]"/>
  <match src="variable_declaration_tuple [46766,46798]" dest="variable_declaration_tuple [43603,43635]"/>
  <match src="identifier: addr [34453,34457]" dest="identifier: addr [30746,30750]"/>
  <match src="identifier: map [83560,83563]" dest="identifier: map [81442,81445]"/>
  <match src="inheritance_specifier [35916,35932]" dest="inheritance_specifier [32250,32266]"/>
  <match src="uint256: uint256 [91205,91212]" dest="uint256: uint256 [89310,89317]"/>
  <match src="primitive_type [97583,97590]" dest="primitive_type [95870,95877]"/>
  <match src="(: ( [89360,89361]" dest="(: ( [87414,87415]"/>
  <match src="bytes32: bytes32 [84712,84719]" dest="bytes32: bytes32 [82627,82634]"/>
  <match src="binary_expression [14661,14709]" dest="binary_expression [15562,15617]"/>
  <match src=",: , [100378,100379]" dest=",: , [98747,98748]"/>
  <match src="call_argument [105447,105463]" dest="call_argument [120010,120026]"/>
  <match src="expression_statement [105803,105819]" dest="expression_statement [120258,120274]"/>
  <match src="uint256: uint256 [109082,109089]" dest="uint256: uint256 [106940,106947]"/>
  <match src="array_access [88869,88889]" dest="array_access [86903,86923]"/>
  <match src="identifier: withinExecutionLimit [24655,24675]" dest="identifier: isTokenBridgingAllowed [23095,23117]"/>
  <match src="): ) [89583,89584]" dest="): ) [87644,87645]"/>
  <match src="type_name [75969,75973]" dest="type_name [73630,73634]"/>
  <match src="): ) [20223,20224]" dest="): ) [19773,19774]"/>
  <match src="number_literal: 0 [40815,40816]" dest="number_literal: 1 [37290,37291]"/>
  <match src="(: ( [45730,45731]" dest="(: ( [42546,42547]"/>
  <match src="identifier: Map [81015,81018]" dest="identifier: Map [78820,78823]"/>
  <match src="identifier: _token [106178,106184]" dest="identifier: _token [104006,104012]"/>
  <match src="uint256: uint256 [86432,86439]" dest="uint256: uint256 [84408,84415]"/>
  <match src="variable_declaration [112120,112142]" dest="variable_declaration [111315,111337]"/>
  <match src="type_name [55657,55664]" dest="type_name [52709,52716]"/>
  <match src="binary_expression [89972,89999]" dest="binary_expression [88043,88070]"/>
  <match src="return_type_definition [6714,6728]" dest="return_type_definition [7547,7561]"/>
  <match src="identifier: abi [4977,4980]" dest="identifier: abi [5145,5148]"/>
  <match src="event_paramater [47318,47346]" dest="event_paramater [44171,44199]"/>
  <match src="(: ( [72706,72707]" dest="(: ( [70257,70258]"/>
  <match src="call_argument [93496,93501]" dest="call_argument [91668,91673]"/>
  <match src="override: override [56973,56981]" dest="override: override [54060,54068]"/>
  <match src="identifier: _setMediatorContractOnOtherSide [105520,105551]" dest="identifier: _setMediatorContractOnOtherSide [120086,120117]"/>
  <match src="modifier_invocation [105395,105413]" dest="modifier_invocation [119957,119975]"/>
  <match src="(: ( [58988,58989]" dest="(: ( [56125,56126]"/>
  <match src="type_name [7415,7422]" dest="type_name [8270,8277]"/>
  <match src="identifier: value [76022,76027]" dest="identifier: value [73684,73689]"/>
  <match src="identifier: _get [82178,82182]" dest="identifier: _get [80019,80023]"/>
  <match src="type_name [117741,117748]" dest="type_name [116475,116482]"/>
  <match src="): ) [94455,94456]" dest="): ) [92648,92649]"/>
  <match src="}: } [14439,14440]" dest="}: } [15302,15303]"/>
  <match src="override: override [111633,111641]" dest="override: override [110021,110029]"/>
  <match src="inheritance_specifier [85286,85293]" dest="inheritance_specifier [83232,83239]"/>
  <match src="identifier: errorMessage [11289,11301]" dest="identifier: errorMessage [12236,12248]"/>
  <match src="function_definition [56935,57135]" dest="function_definition [54022,54226]"/>
  <match src="identifier: a [66163,66164]" dest="identifier: a [63525,63526]"/>
  <match src="identifier: _setOwner [5971,5980]" dest="identifier: _setOwner [6163,6172]"/>
  <match src="event_paramater [18956,18969]" dest="event_paramater [18590,18603]"/>
  <match src="call_expression [90029,90066]" dest="call_expression [88101,88138]"/>
  <match src="visibility [43952,43960]" dest="visibility [40718,40726]"/>
  <match src="identifier: _tokenId [116495,116503]" dest="identifier: _tokenId [115124,115132]"/>
  <match src="(: ( [84853,84854]" dest="(: ( [82774,82775]"/>
  <match src="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/components/common/NFTBridgeLimits.sol [21420,21513]" dest="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/components/common/NFTBridgeLimits.sol [20964,21057]"/>
  <match src="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [63742,64305]" dest="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [61028,61603]"/>
  <match src="function: function [32484,32492]" dest="function: function [28726,28734]"/>
  <match src="pragma: pragma [59228,59234]" dest="pragma: pragma [56377,56383]"/>
  <match src=".: . [100151,100152]" dest=".: . [98514,98515]"/>
  <match src="identifier: _nativeToken [48752,48764]" dest="identifier: _nativeToken [45631,45643]"/>
  <match src="number_literal: 0x811bbb11e8899da471f0e69a3ed55090fc90215227fc5fb1cb0d6e962ea7b74f [13822,13888]" dest="number_literal: 0x811bbb11e8899da471f0e69a3ed55090fc90215227fc5fb1cb0d6e962ea7b74f [14844,14910]"/>
  <match src="parameter [50104,50118]" dest="parameter [47024,47038]"/>
  <match src="{: { [97435,97436]" dest="{: { [95716,95717]"/>
  <match src="indexed: indexed [18937,18944]" dest="indexed: indexed [18571,18578]"/>
  <match src="): ) [83129,83130]" dest="): ) [80996,80997]"/>
  <match src="solidity_pragma_token [39532,39546]" dest="solidity_pragma_token [35958,35972]"/>
  <match src="identifier: msg [1520,1523]" dest="identifier: msg [1570,1573]"/>
  <match src="type_name [91225,91232]" dest="type_name [89331,89338]"/>
  <match src=",: , [102574,102575]" dest=",: , [101018,101019]"/>
  <match src="call_argument [112757,112765]" dest="call_argument [111633,111641]"/>
  <match src="function_body [118728,118798]" dest="function_body [116982,117208]"/>
  <match src="virtual: virtual [63519,63526]" dest="virtual: virtual [60794,60801]"/>
  <match src="identifier: mint [102558,102562]" dest="identifier: mint [101002,101006]"/>
  <match src=",: , [107574,107575]" dest=",: , [105432,105433]"/>
  <match src="identifier: _token [26184,26190]" dest="identifier: _token [22050,22056]"/>
  <match src="identifier: recipient [40318,40327]" dest="identifier: recipient [36775,36784]"/>
  <match src="override: override [92501,92509]" dest="override: override [90647,90655]"/>
  <match src="comment: /**      * @dev Retrieves address of the native token contract associated with a specific bridged token contract.      * @param _bridgedToken address of the created bridged token contract on this side.      * @return address of the native token contract on the other side of the bridge.      */ [47832,48126]" dest="comment: /**      * @dev Retrieves address of the native token contract associated with a specific bridged token contract.      * @param _bridgedToken address of the created bridged token contract on this side.      * @return address of the native token contract on the other side of the bridge.      */ [44696,44994]"/>
  <match src="comment: // Even though this is not the same as boolStorage[keccak256(abi.encodePacked(&quot;lock&quot;))], [34702,34790]" dest="comment: // Even though this is not the same as boolStorage[keccak256(abi.encodePacked(&quot;lock&quot;))], [31007,31095]"/>
  <match src="call_argument [23534,23572]" dest="call_argument [38409,38452]"/>
  <match src="yul_function_call [52245,52259]" dest="yul_function_call [49212,49226]"/>
  <match src="&quot;: &quot; [2562,2563]" dest="&quot;: &quot; [2641,2642]"/>
  <match src="returns: returns [3163,3170]" dest="returns: returns [3258,3265]"/>
  <match src="{: { [48680,48681]" dest="{: { [45558,45559]"/>
  <match src="{: { [42781,42782]" dest="{: { [39504,39505]"/>
  <match src="): ) [11990,11991]" dest="): ) [12953,12954]"/>
  <match src="parameter [67421,67430]" dest="parameter [64821,64830]"/>
  <match src="function_definition [92074,92364]" dest="function_definition [90210,90505]"/>
  <match src="binary_expression [107321,107345]" dest="binary_expression [105174,105198]"/>
  <match src="(: ( [70605,70606]" dest="(: ( [68102,68103]"/>
  <match src="expression_statement [12397,12479]" dest="expression_statement [13370,13452]"/>
  <match src="call_expression [6179,6186]" dest="call_expression [6379,6386]"/>
  <match src="(: ( [102194,102195]" dest="(: ( [100627,100628]"/>
  <match src="{: { [78062,78063]" dest="{: { [75793,75794]"/>
  <match src="identifier: _messageId [20815,20825]" dest="identifier: _messageId [20368,20378]"/>
  <match src="comment: /**      * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.      */ [90570,90638]" dest="comment: /**      * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.      */ [88657,88727]"/>
  <match src="identifier: to [98665,98667]" dest="identifier: to [96987,96989]"/>
  <match src="uint256: uint256 [106986,106993]" dest="uint256: uint256 [104831,104838]"/>
  <match src="identifier: set [73874,73877]" dest="identifier: set [71464,71467]"/>
  <match src="function_definition [24646,24880]" dest="function_definition [23086,23413]"/>
  <match src="identifier: _messageId [2253,2263]" dest="identifier: _messageId [2324,2334]"/>
  <match src="contract_body [4197,6248]" dest="contract_body [4324,6451]"/>
  <match src="return_type_definition [34397,34419]" dest="return_type_definition [30688,30710]"/>
  <match src="user_defined_type [43858,43865]" dest="user_defined_type [40619,40626]"/>
  <match src="(: ( [5923,5924]" dest="(: ( [6114,6115]"/>
  <match src="identifier: _tokenOwners [89052,89064]" dest="identifier: _tokenOwners [87093,87105]"/>
  <match src="address: address [92682,92689]" dest="address: address [90835,90842]"/>
  <match src="type_name [81265,81272]" dest="type_name [79077,79084]"/>
  <match src="return_type_definition [72943,72960]" dest="return_type_definition [70501,70518]"/>
  <match src="comment: // We read and store the key's index to prevent multiple reads from the same storage slot [79480,79569]" dest="comment: // We read and store the key's index to prevent multiple reads from the same storage slot [77249,77338]"/>
  <match src="public: public [89540,89546]" dest="public: public [87601,87607]"/>
  <match src="yul_function_call [52224,52260]" dest="yul_function_call [49191,49227]"/>
  <match src="(: ( [98396,98397]" dest="(: ( [96710,96711]"/>
  <match src="]: ] [42618,42619]" dest="]: ] [39237,39238]"/>
  <match src="}: } [25723,25724]" dest="}: } [22864,22865]"/>
  <match src="false [116325,116330]" dest="false [114951,114956]"/>
  <match src="function_body [39112,39282]" dest="function_body [35520,35696]"/>
  <match src="inheritance_specifier [43858,43865]" dest="inheritance_specifier [40619,40626]"/>
  <match src="identifier: IERC721 [60393,60400]" dest="identifier: IERC721 [57575,57582]"/>
  <match src="return: return [3191,3197]" dest="return: return [3287,3293]"/>
  <match src="yul_identifier [8699,8706]" dest="yul_identifier [9590,9597]"/>
  <match src="identifier: setMessageValue [117337,117352]" dest="identifier: setMessageValue [115861,115876]"/>
  <match src="call_argument [11375,11381]" dest="call_argument [12323,12329]"/>
  <match src="return_type_definition [6976,6993]" dest="return_type_definition [7815,7832]"/>
  <match src="type_name [75392,75399]" dest="type_name [73036,73043]"/>
  <match src="member_expression [37505,37515]" dest="member_expression [33880,33890]"/>
  <match src="identifier: keccak256 [45763,45772]" dest="identifier: keccak256 [42579,42588]"/>
  <match src="(: ( [111969,111970]" dest="(: ( [110125,110126]"/>
  <match src="block_statement [39171,39276]" dest="block_statement [35581,35689]"/>
  <match src="call_expression [45720,45746]" dest="call_expression [42536,42562]"/>
  <match src="function: function [113728,113736]" dest="function: function [112732,112740]"/>
  <match src="identifier: div [67406,67409]" dest="identifier: div [64806,64809]"/>
  <match src="false [80895,80900]" dest="false [78693,78698]"/>
  <match src="uint256: uint256 [75413,75420]" dest="uint256: uint256 [73057,73064]"/>
  <match src="}: } [85042,85043]" dest="}: } [82965,82966]"/>
  <match src="comment: /**      * @dev Stores the receiver of a message sent to the AMB bridge.      * @param _messageId of the message sent to the bridge.      * @param _recipient receiver of the tokens bridged.      */ [3279,3476]" dest="comment: /**      * @dev Stores the receiver of a message sent to the AMB bridge.      * @param _messageId of the message sent to the bridge.      * @param _recipient receiver of the tokens bridged.      */ [3378,3579]"/>
  <match src="assignment_expression [80567,80615]" dest="assignment_expression [78355,78403]"/>
  <match src="pure: pure [65502,65506]" dest="pure: pure [62843,62847]"/>
  <match src="identifier: value [43147,43152]" dest="identifier: value [39878,39883]"/>
  <match src="identifier: ERC721 [101838,101844]" dest="identifier: ERC721 [100256,100262]"/>
  <match src="visibility [15282,15290]" dest="visibility [16205,16213]"/>
  <match src="returns: returns [84644,84651]" dest="returns: returns [82558,82565]"/>
  <match src="return: return [118738,118744]" dest="return: return [117187,117193]"/>
  <match src="type_name [84884,84891]" dest="type_name [82805,82812]"/>
  <match src="primitive_type [58533,58540]" dest="primitive_type [55660,55667]"/>
  <match src="identifier: _baseURI [86507,86515]" dest="identifier: _baseURI [84486,84494]"/>
  <match src="identifier: Set [73589,73592]" dest="identifier: Set [71169,71172]"/>
  <match src="member_expression [74426,74436]" dest="member_expression [72033,72043]"/>
  <match src="pragma_directive [6290,6312]" dest="pragma_directive [6497,6519]"/>
  <match src="virtual: virtual [16285,16292]" dest="virtual: virtual [16768,16775]"/>
  <match src="identifier: _messageId [2928,2938]" dest="identifier: _messageId [3016,3026]"/>
  <match src="identifier: to [98492,98494]" dest="identifier: to [96808,96810]"/>
  <match src="member_expression [36444,36454]" dest="member_expression [32792,32802]"/>
  <match src="primitive_type [87391,87397]" dest="primitive_type [85386,85392]"/>
  <match src="call_argument [96338,96392]" dest="call_argument [94581,94635]"/>
  <match src="override_specifier [106111,106119]" dest="override_specifier [103938,103946]"/>
  <match src="{: { [9968,9969]" dest="{: { [10883,10884]"/>
  <match src="function_body [3872,3971]" dest="function_body [3984,4085]"/>
  <match src="identifier: set [75926,75929]" dest="identifier: set [73587,73590]"/>
  <match src="{: { [6102,6103]" dest="{: { [6300,6301]"/>
  <match src="call_argument [2895,2939]" dest="call_argument [2983,3027]"/>
  <match src="identifier: success [12855,12862]" dest="identifier: success [13836,13843]"/>
  <match src="comment: /**      * @dev Executes action on deposit of ERC721 token.      * @param _token address of the ERC721 token contract.      * @param _from address of token sender.      * @param _receiver address of token receiver on the other side.      * @param _tokenId unique id of the bridged token.      */ [111172,111467]" dest="comment: /**      * @dev Executes action on deposit of ERC721 token.      * @param _token address of the ERC721 token contract.      * @param _from address of token sender.      * @param _receiver address of token receiver on the other side.      * @param _tokenId unique id of the bridged token.      */ [109548,109849]"/>
  <match src="identifier: _tokenId [111970,111978]" dest="identifier: _tokenId [110126,110134]"/>
  <match src="visibility [103485,103493]" dest="visibility [101956,101964]"/>
  <match src="type_name [33189,33196]" dest="type_name [29446,29453]"/>
  <match src="(: ( [102291,102292]" dest="(: ( [100725,100726]"/>
  <match src="function_definition [72896,73003]" dest="function_definition [70454,70563]"/>
  <match src="type_name [36362,36368]" dest="type_name [32708,32714]"/>
  <match src="function_definition [39011,39282]" dest="function_definition [35419,35696]"/>
  <match src="type_name [49853,49860]" dest="type_name [46765,46772]"/>
  <match src="(: ( [33174,33175]" dest="(: ( [29431,29432]"/>
  <match src="private: private [55804,55811]" dest="private: private [52859,52866]"/>
  <match src="(: ( [14420,14421]" dest="(: ( [15281,15282]"/>
  <match src="): ) [34482,34483]" dest="): ) [30775,30776]"/>
  <match src="comment: /**  * @dev Library for managing an enumerable variant of Solidity's  * https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]  * type.  *  * Maps have the following properties:  *  * - Entries are added, removed, and checked for existence in constant time  * (O(1)).  * - Entries are enumerated in O(n). No guarantees are made on the ordering.  *  * ```  * contract Example {  *     // Add the library methods  *     using EnumerableMap for EnumerableMap.UintToAddressMap;  *  *     // Declare a set state variable  *     EnumerableMap.UintToAddressMap private myMap;  * }  * ```  *  * As of v3.0.0, only maps of type `uint256 -&gt; address` (`UintToAddressMap`) are  * supported.  */ [76784,77489]" dest="comment: /**  * @dev Library for managing an enumerable variant of Solidity's  * https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]  * type.  *  * Maps have the following properties:  *  * - Entries are added, removed, and checked for existence in constant time  * (O(1)).  * - Entries are enumerated in O(n). No guarantees are made on the ordering.  *  * ```  * contract Example {  *     // Add the library methods  *     using EnumerableMap for EnumerableMap.UintToAddressMap;  *  *     // Declare a set state variable  *     EnumerableMap.UintToAddressMap private myMap;  * }  * ```  *  * As of v3.0.0, only maps of type `uint256 -&gt; address` (`UintToAddressMap`) are  * supported.  */ [74476,75204]"/>
  <match src="parameter [23449,23463]" dest="parameter [38326,38340]"/>
  <match src="call_argument [50147,50173]" dest="call_argument [47068,47094]"/>
  <match src="type_name [89393,89399]" dest="type_name [87447,87453]"/>
  <match src="identifier: newOwner [6231,6239]" dest="identifier: newOwner [6432,6440]"/>
  <match src="solidity: solidity [61154,61162]" dest="solidity: solidity [58359,58367]"/>
  <match src="uint256: uint256 [33470,33477]" dest="uint256: uint256 [29738,29745]"/>
  <match src="&quot;: &quot; [12747,12748]" dest="&quot;: &quot; [13725,13726]"/>
  <match src="identifier: toString [42883,42891]" dest="identifier: toString [39610,39618]"/>
  <match src="uint256: uint256 [31172,31179]" dest="uint256: uint256 [27371,27378]"/>
  <match src="identifier: IUpgradeabilityOwnerStorage [1148,1175]" dest="identifier: IUpgradeabilityOwnerStorage [1186,1213]"/>
  <match src="pragma_directive [54879,54901]" dest="pragma_directive [51905,51927]"/>
  <match src="(: ( [98672,98673]" dest="(: ( [96994,96995]"/>
  <match src="binary_expression [110726,110776]" dest="binary_expression [109221,109271]"/>
  <match src="string [66879,66907]" dest="string [64264,64292]"/>
  <match src="identifier: Set [71112,71115]" dest="identifier: Set [68626,68629]"/>
  <match src="}: } [34500,34501]" dest="}: } [30796,30797]"/>
  <match src="yul_evm_builtin [54345,54359]" dest="yul_evm_builtin [51351,51365]"/>
  <match src="primitive_type [81690,81697]" dest="primitive_type [79516,79523]"/>
  <match src="identifier: _messageId [20592,20602]" dest="identifier: _messageId [20138,20148]"/>
  <match src=",: , [54343,54344]" dest=",: , [51349,51350]"/>
  <match src="calldata: calldata [36323,36331]" dest="calldata: calldata [32668,32676]"/>
  <match src="parameter [57368,57391]" dest="parameter [54466,54489]"/>
  <match src="false: false [72585,72590]" dest="false: false [70129,70134]"/>
  <match src="internal: internal [63510,63518]" dest="internal: internal [60785,60793]"/>
  <match src="parameter [68144,68153]" dest="parameter [65564,65573]"/>
  <match src="primitive_type [40329,40336]" dest="primitive_type [36786,36793]"/>
  <match src="primitive_type [106986,106993]" dest="primitive_type [104831,104838]"/>
  <match src="): ) [2469,2470]" dest="): ) [2547,2548]"/>
  <match src="identifier: DailyLimitChanged [21798,21815]" dest="identifier: TokenBridgingDisabled [21351,21372]"/>
  <match src="identifier: abi [47767,47770]" dest="identifier: abi [44628,44631]"/>
  <match src="solidity_pragma_token [59235,59250]" dest="solidity_pragma_token [56384,56399]"/>
  <match src="visibility [86257,86264]" dest="visibility [84224,84231]"/>
  <match src="identifier: _mediatorContract [105213,105230]" dest="identifier: _mediatorContract [119838,119855]"/>
  <match src="{: { [15301,15302]" dest="{: { [16224,16225]"/>
  <match src="identifier: require [96330,96337]" dest="identifier: require [94573,94580]"/>
  <match src="binary_expression [39193,39211]" dest="binary_expression [35604,35622]"/>
  <match src="function_definition [49581,49678]" dest="function_definition [46485,46584]"/>
  <match src="variable_declaration_statement [112120,112177]" dest="variable_declaration_statement [111315,111372]"/>
  <match src="identifier: errorMessage [12341,12353]" dest="identifier: errorMessage [13313,13325]"/>
  <match src="internal: internal [16862,16870]" dest="internal: internal [17056,17064]"/>
  <match src="call_argument [12405,12435]" dest="call_argument [13378,13408]"/>
  <match src="function: function [60732,60740]" dest="function: function [57925,57933]"/>
  <match src="comment: /**  * @title EternalStorage  * @dev This contract holds all the necessary state variables to carry out the storage of any contract.  */ [78,214]" dest="comment: /**  * @title EternalStorage  * @dev This contract holds all the necessary state variables to carry out the storage of any contract.  */ [82,221]"/>
  <match src="visibility [85911,85918]" dest="visibility [83869,83876]"/>
  <match src="address: address [97445,97452]" dest="address: address [95727,95734]"/>
  <match src="call_argument [84385,84388]" dest="call_argument [82289,82292]"/>
  <match src="abstract: abstract [59753,59761]" dest="abstract: abstract [56914,56922]"/>
  <match src="type_name [71112,71115]" dest="type_name [68626,68629]"/>
  <match src="(: ( [78629,78630]" dest="(: ( [76376,76377]"/>
  <match src="(: ( [52236,52237]" dest="(: ( [49203,49204]"/>
  <match src="variable_declaration_statement [80318,80371]" dest="variable_declaration_statement [78101,78154]"/>
  <match src="identifier: tokenId [95967,95974]" dest="identifier: tokenId [94201,94208]"/>
  <match src="return_type_definition [90508,90531]" dest="return_type_definition [88591,88614]"/>
  <match src="call_argument [75117,75127]" dest="call_argument [72745,72755]"/>
  <match src="expression_statement [9999,10078]" dest="expression_statement [10915,10994]"/>
  <match src="identifier: _messageId [20213,20223]" dest="identifier: _messageId [19763,19773]"/>
  <match src="type_name [82454,82461]" dest="type_name [80302,80309]"/>
  <match src="identifier: set [70824,70827]" dest="identifier: set [68325,68328]"/>
  <match src="type_name [105172,105179]" dest="type_name [119796,119803]"/>
  <match src="(: ( [118712,118713]" dest="(: ( [116966,116967]"/>
  <match src="identifier: _requestGasLimit [17543,17559]" dest="identifier: _gasLimit [118686,118695]"/>
  <match src="type_name [5924,5931]" dest="type_name [6115,6122]"/>
  <match src="(: ( [19509,19510]" dest="(: ( [19174,19175]"/>
  <match src="): ) [91467,91468]" dest="): ) [89581,89582]"/>
  <match src="memory: memory [100085,100091]" dest="memory: memory [98445,98451]"/>
  <match src="type_name [111877,111882]" dest="type_name [109338,109343]"/>
  <match src="identifier: AddressSet [74101,74111]" dest="identifier: AddressSet [71700,71710]"/>
  <match src="parameter [105205,105230]" dest="parameter [119830,119855]"/>
  <match src="function: function [65430,65438]" dest="function: function [62771,62779]"/>
  <match src="uint256: uint256 [18512,18519]" dest="uint256: uint256 [18024,18031]"/>
  <match src="{: { [5681,5682]" dest="{: { [5864,5865]"/>
  <match src="function_definition [6735,6818]" dest="function_definition [7570,7653]"/>
  <match src="identifier: _image [105785,105791]" dest="identifier: _image [120238,120244]"/>
  <match src="contract: contract [104255,104263]" dest="contract: contract [102764,102772]"/>
  <match src="emit: emit [97124,97128]" dest="emit: emit [95392,95396]"/>
  <match src="identifier: name_ [88300,88305]" dest="identifier: name_ [86318,86323]"/>
  <match src="call_expression [95472,95492]" dest="call_expression [93692,93712]"/>
  <match src="function_definition [14546,14717]" dest="function_definition [15414,15626]"/>
  <match src="primitive_type [91160,91167]" dest="primitive_type [89265,89272]"/>
  <match src="call_expression [115025,115053]" dest="call_expression [115720,115750]"/>
  <match src="true [63649,63653]" dest="true [60926,60930]"/>
  <match src="call_argument [97659,97678]" dest="call_argument [95949,95968]"/>
  <match src="type_name [21895,21902]" dest="type_name [21446,21453]"/>
  <match src="returns: returns [76623,76630]" dest="returns: returns [74305,74312]"/>
  <match src="(: ( [114163,114164]" dest="(: ( [22210,22211]"/>
  <match src=".: . [45193,45194]" dest=".: . [41998,41999]"/>
  <match src=",: , [92836,92837]" dest=",: , [90991,90992]"/>
  <match src="(: ( [46168,46169]" dest="(: ( [42994,42995]"/>
  <match src=",: , [31688,31689]" dest=",: , [27902,27903]"/>
  <match src="event: event [29153,29158]" dest="event: event [25301,25306]"/>
  <match src="(: ( [66872,66873]" dest="(: ( [64257,64258]"/>
  <match src="]: ] [2265,2266]" dest="]: ] [2336,2337]"/>
  <match src="external: external [43952,43960]" dest="external: external [40718,40726]"/>
  <match src="&quot;: &quot; [98377,98378]" dest="&quot;: &quot; [96690,96691]"/>
  <match src="binary_expression [17588,17621]" dest="binary_expression [118725,118751]"/>
  <match src="private: private [85911,85918]" dest="private: private [83869,83876]"/>
  <match src="type_name [43390,43397]" dest="type_name [40131,40138]"/>
  <match src="parameter [59022,59038]" dest="parameter [56161,56177]"/>
  <match src="function_definition [30531,30609]" dest="function_definition [26714,26792]"/>
  <match src="member_expression [100509,100519]" dest="member_expression [98882,98892]"/>
  <match src="call_argument [91901,91908]" dest="call_argument [90029,90036]"/>
  <match src=",: , [115738,115739]" dest=",: , [114346,114347]"/>
  <match src="parameter [12650,12676]" dest="parameter [13627,13653]"/>
  <match src="primitive_type [71277,71284]" dest="primitive_type [68793,68800]"/>
  <match src="(: ( [20436,20437]" dest="(: ( [19991,19992]"/>
  <match src="identifier: _symbol [56683,56690]" dest="identifier: _symbol [53762,53769]"/>
  <match src="number_literal: 0 [66192,66193]" dest="number_literal: 0 [63555,63556]"/>
  <match src="variable_declaration [67540,67549]" dest="variable_declaration [64942,64951]"/>
  <match src=".: . [70805,70806]" dest=".: . [68306,68307]"/>
  <match src="{: { [101685,101686]" dest="{: { [100096,100097]"/>
  <match src="primitive_type [102563,102570]" dest="primitive_type [101007,101014]"/>
  <match src="[: [ [89718,89719]" dest="[: [ [87782,87783]"/>
  <match src="identifier: _safeMint [102633,102642]" dest="identifier: _safeMint [101078,101087]"/>
  <match src="call_argument [95327,95343]" dest="call_argument [93545,93561]"/>
  <match src=".: . [116477,116478]" dest=".: . [115106,115107]"/>
  <match src="): ) [90494,90495]" dest="): ) [88577,88578]"/>
  <match src="bytes32: bytes32 [84320,84327]" dest="bytes32: bytes32 [82223,82230]"/>
  <match src="identifier: IERC721Metadata [46854,46869]" dest="identifier: IERC721Metadata [43692,43707]"/>
  <match src="assignment_expression [43480,43525]" dest="assignment_expression [40224,40269]"/>
  <match src="]: ] [79173,79174]" dest="]: ] [76931,76932]"/>
  <match src="primitive_type [45562,45568]" dest="primitive_type [42376,42382]"/>
  <match src="=: = [107501,107502]" dest="=: = [105359,105360]"/>
  <match src="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [75215,75374]" dest="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [72853,73017]"/>
  <match src="identifier: data [10876,10880]" dest="identifier: data [11813,11817]"/>
  <match src="comment: // File: @openzeppelin/contracts/token/ERC721/IERC721Metadata.sol [43601,43666]" dest="comment: // File: @openzeppelin/contracts/token/ERC721/IERC721Metadata.sol [40352,40417]"/>
  <match src="identifier: c [64726,64727]" dest="identifier: c [62040,62041]"/>
  <match src="if_statement [13078,13507]" dest="if_statement [14064,14503]"/>
  <match src="identifier: key [83102,83105]" dest="identifier: key [80969,80972]"/>
  <match src="call_expression [19502,19592]" dest="call_expression [19167,19247]"/>
  <match src="(: ( [115523,115524]" dest="(: ( [114125,114126]"/>
  <match src="function_definition [7000,7142]" dest="function_definition [7841,7987]"/>
  <match src="string [12437,12477]" dest="string [13410,13450]"/>
  <match src="(: ( [94393,94394]" dest="(: ( [92586,92587]"/>
  <match src="identifier: b [66230,66231]" dest="identifier: b [63596,63597]"/>
  <match src="true: true [80853,80857]" dest="true: true [78649,78653]"/>
  <match src="parameter [38092,38106]" dest="parameter [34479,34493]"/>
  <match src="primitive_type [79464,79468]" dest="primitive_type [77232,77236]"/>
  <match src="state_mutability [89003,89007]" dest="state_mutability [87043,87047]"/>
  <match src="(: ( [106082,106083]" dest="(: ( [103909,103910]"/>
  <match src="comment: /**      * @dev Mint new ERC721 token.      * Only bridge contract is authorized to mint tokens.      * @param _to address of the newly created token owner.      * @param _tokenId unique identifier of the minted token.      */ [102318,102544]" dest="comment: /**      * @dev Mint new ERC721 token.      * Only bridge contract is authorized to mint tokens.      * @param _to address of the newly created token owner.      * @param _tokenId unique identifier of the minted token.      */ [100756,100987]"/>
  <match src="event_paramater [40279,40300]" dest="event_paramater [36736,36757]"/>
  <match src="{: { [89829,89830]" dest="{: { [87896,87897]"/>
  <match src="type_name [66214,66221]" dest="type_name [63580,63587]"/>
  <match src="internal: internal [65040,65048]" dest="internal: internal [62367,62375]"/>
  <match src="true [80853,80857]" dest="true [78649,78653]"/>
  <match src="): ) [92271,92272]" dest="): ) [90410,90411]"/>
  <match src="type_name [110953,110960]" dest="type_name [110361,110368]"/>
  <match src="(: ( [38468,38469]" dest="(: ( [34862,34863]"/>
  <match src="return_type_definition [6500,6517]" dest="return_type_definition [7327,7344]"/>
  <match src="==: == [19559,19561]" dest="==: == [19214,19216]"/>
  <match src="(: ( [75112,75113]" dest="(: ( [72740,72741]"/>
  <match src=",: , [96801,96802]" dest=",: , [95059,95060]"/>
  <match src="member_expression [46303,46313]" dest="member_expression [43130,43140]"/>
  <match src="function_definition [35138,35640]" dest="function_definition [31450,31959]"/>
  <match src="user_defined_type [41405,41419]" dest="user_defined_type [37901,37915]"/>
  <match src="(: ( [3862,3863]" dest="(: ( [3974,3975]"/>
  <match src="{: { [23916,23917]" dest="{: { [38789,38790]"/>
  <match src="): ) [74222,74223]" dest="): ) [71822,71823]"/>
  <match src="identifier: set [75117,75120]" dest="identifier: set [72745,72748]"/>
  <match src=",: , [78583,78584]" dest=",: , [76330,76331]"/>
  <match src="function_definition [59785,59889]" dest="function_definition [56947,57053]"/>
  <match src="expression_statement [68824,68854]" dest="expression_statement [66261,66291]"/>
  <match src="(: ( [96868,96869]" dest="(: ( [95127,95128]"/>
  <match src="identifier: returndata_size [13315,13330]" dest="identifier: returndata_size [14306,14321]"/>
  <match src="): ) [23884,23885]" dest="): ) [38760,38761]"/>
  <match src="): ) [65563,65564]" dest="): ) [62905,62906]"/>
  <match src="visibility [62975,62981]" dest="visibility [60235,60241]"/>
  <match src="view: view [90896,90900]" dest="view: view [88993,88997]"/>
  <match src="identifier: sendValue [9702,9711]" dest="identifier: sendValue [10613,10622]"/>
  <match src="primitive_type [25548,25555]" dest="primitive_type [22591,22598]"/>
  <match src="primitive_type [20408,20415]" dest="primitive_type [19963,19970]"/>
  <match src="address: address [11240,11247]" dest="address: address [12187,12194]"/>
  <match src="parameter [42930,42943]" dest="parameter [39657,39670]"/>
  <match src="type_name [33218,33223]" dest="type_name [29475,29480]"/>
  <match src="function_definition [31866,31945]" dest="function_definition [28089,28168]"/>
  <match src="solidity_version:  0.7.5 [118101,118107]" dest="solidity_version:  0.7.5 [117327,117333]"/>
  <match src="type_name [40302,40309]" dest="type_name [36759,36766]"/>
  <match src="call_argument [115025,115053]" dest="call_argument [115720,115750]"/>
  <match src="(: ( [71111,71112]" dest="(: ( [68625,68626]"/>
  <match src="): ) [75078,75079]" dest="): ) [72705,72706]"/>
  <match src=",: , [83106,83107]" dest=",: , [80973,80974]"/>
  <match src="): ) [12353,12354]" dest="): ) [13325,13326]"/>
  <match src="comment: // File: contracts/upgradeable_contracts/Upgradeable.sol [1249,1305]" dest="comment: // File: contracts/upgradeable_contracts/Upgradeable.sol [1291,1347]"/>
  <match src="function_definition [40967,41135]" dest="function_definition [37449,37619]"/>
  <match src="): ) [66850,66851]" dest="): ) [64234,64235]"/>
  <match src="function_definition [74997,75144]" dest="function_definition [72624,72773]"/>
  <match src="): ) [109766,109767]" dest="): ) [107712,107713]"/>
  <match src="{: { [59779,59780]" dest="{: { [56940,56941]"/>
  <match src="identifier: _setBridgeContract [105475,105493]" dest="identifier: _setBridgeContract [120040,120058]"/>
  <match src="bool: bool [79464,79468]" dest="bool: bool [77232,77236]"/>
  <match src="call_expression [26242,26300]" dest="call_expression [22103,22161]"/>
  <match src="user_defined_type [16020,16024]" dest="user_defined_type [16495,16499]"/>
  <match src="member_expression [89800,89822]" dest="member_expression [87867,87889]"/>
  <match src="member_expression [48254,48270]" dest="member_expression [45124,45140]"/>
  <match src=",: , [67419,67420]" dest=",: , [64819,64820]"/>
  <match src="identifier: keccak256 [2535,2544]" dest="identifier: keccak256 [2614,2623]"/>
  <match src="identifier: _registerInterface [88577,88595]" dest="identifier: _registerInterface [86602,86620]"/>
  <match src="identifier: _beforeTokenTransfer [96987,97007]" dest="identifier: _beforeTokenTransfer [95249,95269]"/>
  <match src="identifier: recipient [20541,20550]" dest="identifier: recipient [20086,20095]"/>
  <match src="): ) [23571,23572]" dest="): ) [38451,38452]"/>
  <match src="call_argument [47804,47816]" dest="call_argument [44665,44677]"/>
  <match src="[: [ [46345,46346]" dest="[: [ [43172,43173]"/>
  <match src="identifier: length [107416,107422]" dest="identifier: length [105271,105277]"/>
  <match src="type_name [16837,16844]" dest="type_name [17031,17038]"/>
  <match src="boolean_literal [70863,70867]" dest="boolean_literal [68365,68369]"/>
  <match src="private: private [86132,86139]" dest="private: private [84096,84103]"/>
  <match src="call_argument [20604,20609]" dest="call_argument [20150,20155]"/>
  <match src="uint256: uint256 [84982,84989]" dest="uint256: uint256 [82904,82911]"/>
  <match src="parameter [6809,6816]" dest="parameter [7644,7651]"/>
  <match src="identifier: symbol [112447,112453]" dest="identifier: symbol [112049,112055]"/>
  <match src="state_mutability [81053,81057]" dest="state_mutability [78858,78862]"/>
  <match src="): ) [24328,24329]" dest="): ) [23957,23958]"/>
  <match src="): ) [115613,115614]" dest="): ) [114219,114220]"/>
  <match src="identifier: EternalStorage [47243,47257]" dest="identifier: EternalStorage [44095,44109]"/>
  <match src="storage: storage [78572,78579]" dest="storage: storage [76319,76326]"/>
  <match src="bytes32: bytes32 [75789,75796]" dest="bytes32: bytes32 [73444,73451]"/>
  <match src="identifier: Transfer [97845,97853]" dest="identifier: Transfer [96143,96151]"/>
  <match src="bytes32: bytes32 [73886,73893]" dest="bytes32: bytes32 [71476,71483]"/>
  <match src=".: . [112238,112239]" dest=".: . [111833,111834]"/>
  <match src="(: ( [14918,14919]" dest="(: ( [15833,15834]"/>
  <match src="identifier: _data [100092,100097]" dest="identifier: _data [98452,98457]"/>
  <match src="yul_hex_number: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [57052,57118]" dest="yul_hex_number: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [54141,54207]"/>
  <match src="]: ] [72802,72803]" dest="]: ] [70354,70355]"/>
  <match src="bytes32: bytes32 [6942,6949]" dest="bytes32: bytes32 [7781,7788]"/>
  <match src="returns: returns [90723,90730]" dest="returns: returns [88813,88820]"/>
  <match src="call_argument [12526,12530]" dest="call_argument [13500,13504]"/>
  <match src="if_statement [66159,66204]" dest="if_statement [63521,63568]"/>
  <match src="): ) [95924,95925]" dest="): ) [94157,94158]"/>
  <match src=",: , [107732,107733]" dest=",: , [105556,105557]"/>
  <match src="bytes32: bytes32 [70554,70561]" dest="bytes32: bytes32 [68050,68057]"/>
  <match src="identifier: set [75028,75031]" dest="identifier: set [72655,72658]"/>
  <match src="visibility [16581,16587]" dest="visibility [118361,118367]"/>
  <match src="primitive_type [106870,106877]" dest="primitive_type [104711,104718]"/>
  <match src="function: function [114867,114875]" dest="function: function [113487,113495]"/>
  <match src="[: [ [92560,92561]" dest="[: [ [90707,90708]"/>
  <match src="identifier: setBridgeContract [103442,103459]" dest="identifier: setBridgeContract [101913,101930]"/>
  <match src="emit_statement [117485,117553]" dest="emit_statement [115911,115979]"/>
  <match src="}: } [107391,107392]" dest="}: } [105246,105247]"/>
  <match src="user_defined_type [104326,104349]" dest="user_defined_type [102838,102861]"/>
  <match src="visibility [33488,33496]" dest="visibility [29756,29764]"/>
  <match src="primitive_type [114328,114335]" dest="primitive_type [112937,112944]"/>
  <match src="binary_expression [96855,96871]" dest="binary_expression [95114,95130]"/>
  <match src="bytes32: bytes32 [75486,75493]" dest="bytes32: bytes32 [73131,73138]"/>
  <match src="): ) [97602,97603]" dest="): ) [95889,95890]"/>
  <match src=",: , [117089,117090]" dest=",: , [115657,115658]"/>
  <match src="call_expression [91709,91730]" dest="call_expression [89830,89851]"/>
  <match src="parameter [92694,92709]" dest="parameter [90847,90862]"/>
  <match src="identifier: _messageId [20437,20447]" dest="identifier: _messageId [19992,20002]"/>
  <match src="parameter [68743,68752]" dest="parameter [66179,66188]"/>
  <match src="(: ( [5648,5649]" dest="(: ( [5831,5832]"/>
  <match src="user_defined_type [36951,36958]" dest="user_defined_type [33312,33319]"/>
  <match src="return: return [68197,68203]" dest="return: return [65618,65624]"/>
  <match src="private: private [55666,55673]" dest="private: private [52718,52725]"/>
  <match src="address: address [102563,102570]" dest="address: address [101007,101014]"/>
  <match src="}: } [57843,57844]" dest="}: } [54950,54951]"/>
  <match src="uint256: uint256 [79985,79992]" dest="uint256: uint256 [77762,77769]"/>
  <match src=",: , [2576,2577]" dest=",: , [2655,2656]"/>
  <match src="identifier: approve [31670,31677]" dest="identifier: approve [27884,27891]"/>
  <match src=",: , [108537,108538]" dest=",: , [106381,106382]"/>
  <match src="array_access [45166,45232]" dest="array_access [41971,42037]"/>
  <match src="primitive_type [84679,84686]" dest="primitive_type [82594,82601]"/>
  <match src="uint256: uint256 [7347,7354]" dest="uint256: uint256 [8200,8207]"/>
  <match src="identifier: isApprovedForAll [92439,92455]" dest="identifier: isApprovedForAll [90585,90601]"/>
  <match src="identifier: from [92921,92925]" dest="identifier: from [91078,91082]"/>
  <match src="uint64: uint64 [39707,39713]" dest="uint64: uint64 [36141,36147]"/>
  <match src="type_name [245,272]" dest="type_name [254,281]"/>
  <match src="type_name [82435,82442]" dest="type_name [80282,80289]"/>
  <match src="function_body [83827,83870]" dest="function_body [81716,81761]"/>
  <match src="): ) [42905,42906]" dest="): ) [39632,39633]"/>
  <match src="address: address [8186,8193]" dest="address: address [9070,9077]"/>
  <match src="call_argument [116374,116387]" dest="call_argument [115001,115014]"/>
  <match src="(: ( [106207,106208]" dest="(: ( [104035,104036]"/>
  <match src="call_expression [95953,95979]" dest="call_expression [94187,94213]"/>
  <match src=".: . [46878,46879]" dest=".: . [43716,43717]"/>
  <match src="string_literal [10956,10988]" dest="string_literal [11894,11926]"/>
  <match src="[: [ [3583,3584]" dest="[: [ [3688,3689]"/>
  <match src="identifier: _exists [91893,91900]" dest="identifier: _exists [90021,90028]"/>
  <match src=",: , [96392,96393]" dest=",: , [94635,94636]"/>
  <match src="identifier: tokenId [92702,92709]" dest="identifier: tokenId [90855,90862]"/>
  <match src="call_expression [100289,100308]" dest="call_expression [98656,98675]"/>
  <match src="identifier: balance [9796,9803]" dest="identifier: balance [10708,10715]"/>
  <match src="identifier: key [82486,82489]" dest="identifier: key [80334,80337]"/>
  <match src="primitive_type [72761,72765]" dest="primitive_type [70312,70316]"/>
  <match src="identifier: _token [21334,21340]" dest="identifier: _token [20872,20878]"/>
  <match src="primitive_type [39681,39687]" dest="primitive_type [36114,36120]"/>
  <match src="contract_body [104567,118002]" dest="contract_body [103089,117211]"/>
  <match src=",: , [36491,36492]" dest=",: , [32839,32840]"/>
  <match src="call_argument [107546,107566]" dest="call_argument [105404,105424]"/>
  <match src="identifier: abi [58633,58636]" dest="identifier: abi [55761,55764]"/>
  <match src="returns: returns [6374,6381]" dest="returns: returns [7197,7204]"/>
  <match src=",: , [94570,94571]" dest=",: , [92765,92766]"/>
  <match src="{: { [60401,60402]" dest="{: { [57583,57584]"/>
  <match src="parameter [61905,61920]" dest="parameter [59127,59142]"/>
  <match src="public: public [20225,20231]" dest="public: public [19775,19781]"/>
  <match src="function_definition [109564,109935]" dest="function_definition [107508,108317]"/>
  <match src="external: external [44079,44087]" dest="external: external [40850,40858]"/>
  <match src="is: is [41402,41404]" dest="is: is [37898,37900]"/>
  <match src="primitive_type [9936,9940]" dest="primitive_type [10851,10855]"/>
  <match src="bool: bool [24284,24288]" dest="bool: bool [23706,23710]"/>
  <match src="parameter [96803,96818]" dest="parameter [95061,95076]"/>
  <match src="visibility [5396,5404]" dest="visibility [5573,5581]"/>
  <match src="): ) [43950,43951]" dest="): ) [40716,40717]"/>
  <match src="(: ( [111945,111946]" dest="(: ( [110101,110102]"/>
  <match src="identifier: to [93138,93140]" dest="identifier: to [91302,91304]"/>
  <match src="contract: contract [35890,35898]" dest="contract: contract [32224,32232]"/>
  <match src="identifier: b [65590,65591]" dest="identifier: b [62933,62934]"/>
  <match src="function_body [81073,81119]" dest="function_body [78878,78926]"/>
  <match src="=: = [17277,17278]" dest="=: = [17481,17482]"/>
  <match src="external: external [103485,103493]" dest="external: external [101956,101964]"/>
  <match src="function: function [34620,34628]" dest="function: function [30923,30931]"/>
  <match src="address: address [94408,94415]" dest="address: address [92601,92608]"/>
  <match src="library_declaration [77490,85045]" dest="library_declaration [75206,82969]"/>
  <match src="assembly_statement [51055,54825]" dest="assembly_statement [48004,51845]"/>
  <match src="type_name [12850,12854]" dest="type_name [13831,13835]"/>
  <match src="parameter [24676,24690]" dest="parameter [23118,23132]"/>
  <match src="}: } [83437,83438]" dest="}: } [81314,81315]"/>
  <match src="comment: /**      * @dev Event to show ownership has been transferred      * @param previousOwner representing the address of the previous owner      * @param newOwner representing the address of the new owner      */ [4293,4501]" dest="comment: /**      * @dev Event to show ownership has been transferred      * @param previousOwner representing the address of the previous owner      * @param newOwner representing the address of the new owner      */ [4423,4635]"/>
  <match src="^:  ^ [62052,62054]" dest="^:  ^ [59281,59283]"/>
  <match src="=: = [79182,79183]" dest="=: = [76940,76941]"/>
  <match src=",: , [10948,10949]" dest=",: , [11886,11887]"/>
  <match src="call_argument [73902,73907]" dest="call_argument [71492,71497]"/>
  <match src="primitive_type [88979,88986]" dest="primitive_type [87019,87026]"/>
  <match src="type_cast_expression [84391,84414]" dest="type_cast_expression [82295,82318]"/>
  <match src="public: public [92711,92717]" dest="public: public [90864,90870]"/>
  <match src="function: function [16809,16817]" dest="function: function [17003,17011]"/>
  <match src="function: function [50622,50630]" dest="function: function [47561,47569]"/>
  <match src="function_body [26232,26361]" dest="function_body [22092,22314]"/>
  <match src="call_argument [11934,11938]" dest="call_argument [12897,12901]"/>
  <match src="function_body [999,1047]" dest="function_body [1028,1078]"/>
  <match src="member_expression [21187,21203]" dest="member_expression [20749,20765]"/>
  <match src=",: , [36964,36965]" dest=",: , [33325,33326]"/>
  <match src="): ) [54361,54362]" dest="): ) [51367,51368]"/>
  <match src="identifier: _add [75469,75473]" dest="identifier: _add [73114,73118]"/>
  <match src="binary_expression [71761,71783]" dest="binary_expression [69285,69307]"/>
  <match src="variable_declaration_statement [107222,107253]" dest="variable_declaration_statement [105073,105104]"/>
  <match src="(: ( [96368,96369]" dest="(: ( [94611,94612]"/>
  <match src="bytes32: bytes32 [83646,83653]" dest="bytes32: bytes32 [81529,81536]"/>
  <match src="type_name [6723,6727]" dest="type_name [7556,7560]"/>
  <match src="state_mutability [6884,6888]" dest="state_mutability [7721,7725]"/>
  <match src="primitive_type [86112,86119]" dest="primitive_type [84076,84083]"/>
  <match src="identifier: success [10007,10014]" dest="identifier: success [10923,10930]"/>
  <match src=".: . [46259,46260]" dest=".: . [43085,43086]"/>
  <match src="call_argument [90208,90216]" dest="call_argument [88283,88291]"/>
  <match src="}: } [3272,3273]" dest="}: } [3369,3370]"/>
  <match src="parameter [92101,92117]" dest="parameter [90237,90253]"/>
  <match src="yul_identifier [54681,54684]" dest="yul_identifier [51696,51699]"/>
  <match src="}: } [89869,89870]" dest="}: } [87938,87939]"/>
  <match src="}: } [88634,88635]" dest="}: } [86660,86661]"/>
  <match src="primitive_type [7096,7103]" dest="primitive_type [7940,7947]"/>
  <match src="identifier: IERC721 [111946,111953]" dest="identifier: IERC721 [110102,110109]"/>
  <match src="uint64: uint64 [40712,40718]" dest="uint64: uint64 [37182,37188]"/>
  <match src="identifier: onlyOwner [103494,103503]" dest="identifier: onlyOwner [101965,101974]"/>
  <match src="visibility [114998,115006]" dest="visibility [113623,113631]"/>
  <match src="comment: /*                 `returndatacopy` is an Opcode that copies the last return data to a slot. `ptr` is the                     slot it will copy to, 0 means copy from the beginning of the return data, and size is                     the amount of data to copy.                 `returndatasize` is an Opcode that gives us the size of the last return data. In this case, that is the size of the data returned from delegatecall             */ [53871,54309]" dest="comment: /*                 `returndatacopy` is an Opcode that copies the last return data to a slot. `ptr` is the                     slot it will copy to, 0 means copy from the beginning of the return data, and size is                     the amount of data to copy.                 `returndatasize` is an Opcode that gives us the size of the last return data. In this case, that is the size of the data returned from delegatecall             */ [50871,51314]"/>
  <match src="address: address [28981,28988]" dest="address: address [25124,25131]"/>
  <match src="false: false [70905,70910]" dest="false: false [68409,68414]"/>
  <match src="call_expression [45773,45811]" dest="call_expression [42589,42627]"/>
  <match src=",: , [36307,36308]" dest=",: , [32651,32652]"/>
  <match src="call_expression [114147,114194]" dest="call_expression [22194,22238]"/>
  <match src="state_mutability [81251,81255]" dest="state_mutability [79063,79067]"/>
  <match src="type_name [85868,85910]" dest="type_name [83826,83868]"/>
  <match src="call_expression [98389,98454]" dest="call_expression [96703,96768]"/>
  <match src="(: ( [46103,46104]" dest="(: ( [42928,42929]"/>
  <match src="string: string [118745,118751]" dest="string: string [117016,117022]"/>
  <match src="public: public [106099,106105]" dest="public: public [103926,103932]"/>
  <match src=",: , [91720,91721]" dest=",: , [89841,89842]"/>
  <match src="(: ( [19423,19424]" dest="(: ( [19097,19098]"/>
  <match src="type_name [30583,30590]" dest="type_name [26766,26773]"/>
  <match src="identifier: to [94416,94418]" dest="identifier: to [92609,92611]"/>
  <match src="uint256: uint256 [100629,100636]" dest="uint256: uint256 [99006,99013]"/>
  <match src="pure: pure [68791,68795]" dest="pure: pure [66227,66231]"/>
  <match src="expression_statement [109725,109768]" dest="expression_statement [107671,107714]"/>
  <match src="return: return [82582,82588]" dest="return: return [80432,80438]"/>
  <match src="string: string [103870,103876]" dest="string: string [102352,102358]"/>
  <match src="identifier: _ [4733,4734]" dest="identifier: _ [4875,4876]"/>
  <match src="{: { [72961,72962]" dest="{: { [70519,70520]"/>
  <match src="(: ( [44101,44102]" dest="(: ( [40872,40873]"/>
  <match src="identifier: tokenId [100070,100077]" dest="identifier: tokenId [98430,98437]"/>
  <match src="assembly: assembly [8664,8672]" dest="assembly: assembly [9555,9563]"/>
  <match src=",: , [106915,106916]" dest=",: , [104757,104758]"/>
  <match src="function: function [18175,18183]" dest="function: function [17679,17687]"/>
  <match src=",: , [117317,117318]" dest=",: , [115840,115841]"/>
  <match src="comment: /**      * @dev Returns the token collection symbol.      */ [43996,44056]" dest="comment: /**      * @dev Returns the token collection symbol.      */ [40764,40826]"/>
  <match src="memory: memory [89244,89250]" dest="memory: memory [87291,87297]"/>
  <match src="identifier: _baseURI [89806,89814]" dest="identifier: _baseURI [87873,87881]"/>
  <match src=".: . [70655,70656]" dest=".: . [68153,68154]"/>
  <match src="calldata: calldata [103877,103885]" dest="calldata: calldata [102359,102367]"/>
  <match src="member_expression [46244,46275]" dest="member_expression [43070,43101]"/>
  <match src="call_argument [5297,5301]" dest="call_argument [5469,5473]"/>
  <match src="identifier: to [96855,96857]" dest="identifier: to [95114,95116]"/>
  <match src="type_name [78630,78634]" dest="type_name [76377,76381]"/>
  <match src="call_argument [92202,92229]" dest="call_argument [90339,90366]"/>
  <match src="&quot;: &quot; [10956,10957]" dest="&quot;: &quot; [11894,11895]"/>
  <match src="]: ] [48766,48767]" dest="]: ] [45645,45646]"/>
  <match src="uint256: uint256 [71689,71696]" dest="uint256: uint256 [69212,69219]"/>
  <match src="call_argument [107164,107165]" dest="call_argument [105013,105014]"/>
  <match src="comment: // File: contracts/upgradeable_contracts/ReentrancyGuard.sol [34503,34563]" dest="comment: // File: contracts/upgradeable_contracts/ReentrancyGuard.sol [30801,30861]"/>
  <match src="): ) [75973,75974]" dest="): ) [73634,73635]"/>
  <match src="{: { [79134,79135]" dest="{: { [76891,76892]"/>
  <match src="identifier: interfaceId [63545,63556]" dest="identifier: interfaceId [60821,60832]"/>
  <match src="function_definition [74550,74665]" dest="function_definition [72163,72280]"/>
  <match src="type_name [65018,65025]" dest="type_name [62345,62352]"/>
  <match src="call_argument [112099,112105]" dest="call_argument [111762,111768]"/>
  <match src="primitive_type [84240,84247]" dest="primitive_type [82142,82149]"/>
  <match src="(: ( [6897,6898]" dest="(: ( [7734,7735]"/>
  <match src=",: , [100060,100061]" dest=",: , [98420,98421]"/>
  <match src="]: ] [49914,49915]" dest="]: ] [46827,46828]"/>
  <match src="parameter [106894,106915]" dest="parameter [104736,104757]"/>
  <match src="call_argument [37062,37071]" dest="call_argument [33427,33436]"/>
  <match src="type_name [95909,95916]" dest="type_name [94142,94149]"/>
  <match src="else: else [107393,107397]" dest="else: else [105248,105252]"/>
  <match src="identifier: upgradeabilityOwner [1191,1210]" dest="identifier: upgradeabilityOwner [1230,1249]"/>
  <match src="]: ] [17661,17662]" dest="]: ] [118792,118793]"/>
  <match src="binary_expression [12405,12435]" dest="binary_expression [13378,13408]"/>
  <match src="inheritance_specifier [104543,104566]" dest="inheritance_specifier [103064,103087]"/>
  <match src="parameter [96255,96273]" dest="parameter [94496,94514]"/>
  <match src="=: = [72041,72042]" dest="=: = [69570,69571]"/>
  <match src="): ) [46898,46899]" dest="): ) [43736,43737]"/>
  <match src="]: ] [78779,78780]" dest="]: ] [76528,76529]"/>
  <match src="private: private [72930,72937]" dest="private: private [70488,70495]"/>
  <match src="member_expression [59872,59882]" dest="member_expression [57035,57045]"/>
  <match src="interface_declaration [39549,39820]" dest="interface_declaration [35977,36259]"/>
  <match src="return_type_definition [61956,61972]" dest="return_type_definition [59179,59195]"/>
  <match src="identifier: ownerOf [110742,110749]" dest="identifier: ownerOf [109237,109244]"/>
  <match src="return_statement [75090,75138]" dest="return_statement [72718,72766]"/>
  <match src="(: ( [75968,75969]" dest="(: ( [73629,73630]"/>
  <match src="user_defined_type [85303,85310]" dest="user_defined_type [83249,83256]"/>
  <match src="comment: /*                 `calldatacopy` is copy calldatasize bytes from calldata                 First argument is the destination to which data is copied(ptr)                 Second argument specifies the start position of the copied data.                     Since calldata is sort of its own unique location in memory,                     0 doesn't refer to 0 in memory or 0 in storage - it just refers to the zeroth byte of calldata.                     That's always going to be the zeroth byte of the function selector.                 Third argument, calldatasize, specifies how much data will be copied.                     calldata is naturally calldatasize bytes long (same thing as msg.data.length)             */ [51493,52211]" dest="comment: /*                 `calldatacopy` is copy calldatasize bytes from calldata                 First argument is the destination to which data is copied(ptr)                 Second argument specifies the start position of the copied data.                     Since calldata is sort of its own unique location in memory,                     0 doesn't refer to 0 in memory or 0 in storage - it just refers to the zeroth byte of calldata.                     That's always going to be the zeroth byte of the function selector.                 Third argument, calldatasize, specifies how much data will be copied.                     calldata is naturally calldatasize bytes long (same thing as msg.data.length)             */ [48450,49177]"/>
  <match src="(: ( [33410,33411]" dest="(: ( [29676,29677]"/>
  <match src="state_variable_declaration [55695,55767]" dest="state_variable_declaration [52748,52820]"/>
  <match src="address: address [15255,15262]" dest="address: address [16178,16185]"/>
  <match src="binary_expression [63545,63570]" dest="binary_expression [60821,60846]"/>
  <match src="type_name [29440,29444]" dest="type_name [25593,25597]"/>
  <match src="modifier_invocation [109653,109662]" dest="modifier_invocation [107597,107606]"/>
  <match src=".: . [79600,79601]" dest=".: . [77370,77371]"/>
  <match src="unary_expression [105447,105463]" dest="unary_expression [120010,120026]"/>
  <match src="internal: internal [83578,83586]" dest="internal: internal [81460,81468]"/>
  <match src="visibility [88728,88734]" dest="visibility [86759,86765]"/>
  <match src="call_argument [76022,76027]" dest="call_argument [73684,73689]"/>
  <match src="=: = [20368,20369]" dest="=: = [19922,19923]"/>
  <match src="identifier: _token [115119,115125]" dest="identifier: _token [113710,113716]"/>
  <match src="): ) [53856,53857]" dest="): ) [50855,50856]"/>
  <match src="identifier: _tokenId [110933,110941]" dest="identifier: _tokenId [109393,109401]"/>
  <match src="visibility [79447,79454]" dest="visibility [77215,77222]"/>
  <match src="): ) [24261,24262]" dest="): ) [23683,23684]"/>
  <match src="primitive_type [29391,29398]" dest="primitive_type [25544,25551]"/>
  <match src="state_mutability [61052,61056]" dest="state_mutability [58251,58255]"/>
  <match src="address: address [48626,48633]" dest="address: address [45504,45511]"/>
  <match src="state_variable_declaration [86103,86156]" dest="state_variable_declaration [84067,84120]"/>
  <match src="function: function [88694,88702]" dest="function: function [86725,86733]"/>
  <match src="identifier: _releaseToken [115105,115118]" dest="identifier: _releaseToken [113696,113709]"/>
  <match src="solidity_version:  0.7.5 [50300,50306]" dest="solidity_version:  0.7.5 [47228,47234]"/>
  <match src="return_type_definition [89561,89584]" dest="return_type_definition [87622,87645]"/>
  <match src="): ) [84412,84413]" dest="): ) [82316,82317]"/>
  <match src="identifier: TOKEN_IMAGE_CONTRACT [50199,50219]" dest="identifier: TOKEN_IMAGE_CONTRACT [47121,47141]"/>
  <match src="): ) [109832,109833]" dest="): ) [107779,107780]"/>
  <match src="(: ( [24775,24776]" dest="(: ( [23401,23402]"/>
  <match src="identifier: sender [5279,5285]" dest="identifier: sender [5451,5457]"/>
  <match src="member_expression [70644,70655]" dest="member_expression [68142,68153]"/>
  <match src="parameter [24713,24717]" dest="parameter [23155,23159]"/>
  <match src="member_expression [80814,80826]" dest="member_expression [78608,78620]"/>
  <match src="visibility [60791,60799]" dest="visibility [57984,57992]"/>
  <match src="parameter [93038,93050]" dest="parameter [91201,91213]"/>
  <match src="function_definition [74313,74469]" dest="function_definition [71919,72077]"/>
  <match src="comment: /**      * @dev Checks if a given token is a bridged token that is native to this side of the bridge.      * @param _token address of token contract.      * @return message id of the send message.      */ [41426,41630]" dest="comment: /**      * @dev Checks if a given token is a bridged token that is native to this side of the bridge.      * @param _token address of token contract.      * @return message id of the send message.      */ [38497,38705]"/>
  <match src="assignment_expression [45166,45242]" dest="assignment_expression [41971,42047]"/>
  <match src="identifier: _length [72905,72912]" dest="identifier: _length [70463,70470]"/>
  <match src="primitive_type [88794,88801]" dest="primitive_type [86826,86833]"/>
  <match src="primitive_type [58549,58556]" dest="primitive_type [55676,55683]"/>
  <match src="call_argument [95531,95538]" dest="call_argument [93751,93758]"/>
  <match src="identifier: mul [65873,65876]" dest="identifier: mul [63231,63234]"/>
  <match src="parameter [2140,2158]" dest="parameter [2210,2228]"/>
  <match src="^:  ^ [59243,59245]" dest="^:  ^ [56392,56394]"/>
  <match src="call_expression [4693,4723]" dest="call_expression [4834,4864]"/>
  <match src="type_name [40197,40204]" dest="type_name [36651,36658]"/>
  <match src="call_expression [114054,114103]" dest="call_expression [22733,22789]"/>
  <match src="internal: internal [42522,42530]" dest="internal: internal [39147,39155]"/>
  <match src="visibility [47695,47701]" dest="visibility [44555,44561]"/>
  <match src="=: = [100235,100236]" dest="=: = [98601,98602]"/>
  <match src="identifier: key [79066,79069]" dest="identifier: key [76821,76824]"/>
  <match src="call_expression [92260,92272]" dest="call_expression [90399,90411]"/>
  <match src="call_argument [96935,96942]" dest="call_argument [95195,95202]"/>
  <match src="): ) [98640,98641]" dest="): ) [96961,96962]"/>
  <match src="calldata: calldata [33549,33557]" dest="calldata: calldata [29819,29827]"/>
  <match src=",: , [113264,113265]" dest=",: , [109451,109452]"/>
  <match src="function_definition [80996,81119]" dest="function_definition [78801,78926]"/>
  <match src="function: function [83749,83757]" dest="function: function [81638,81646]"/>
  <match src="): ) [101859,101860]" dest="): ) [100277,100278]"/>
  <match src="string_literal [9815,9846]" dest="string_literal [10727,10758]"/>
  <match src="primitive_type [95897,95904]" dest="primitive_type [94130,94137]"/>
  <match src="call_argument [20263,20288]" dest="call_argument [19814,19839]"/>
  <match src="type_name [12613,12618]" dest="type_name [13590,13595]"/>
  <match src="primitive_type [12864,12869]" dest="primitive_type [13845,13850]"/>
  <match src="call_expression [89603,89619]" dest="call_expression [87665,87681]"/>
  <match src="parameter [42050,42064]" dest="parameter [109911,109925]"/>
  <match src="calldata: calldata [45032,45040]" dest="calldata: calldata [41834,41842]"/>
  <match src="parameter [100617,100627]" dest="parameter [98994,99004]"/>
  <match src="state_mutability [8212,8216]" dest="state_mutability [9096,9100]"/>
  <match src="return_statement [5691,5720]" dest="return_statement [5875,5904]"/>
  <match src="abstract: abstract [50413,50421]" dest="abstract: abstract [47347,47355]"/>
  <match src="primitive_type [78002,78009]" dest="primitive_type [75729,75736]"/>
  <match src="internal: internal [75946,75954]" dest="internal: internal [73607,73615]"/>
  <match src="identifier: _messageId [21134,21144]" dest="identifier: _messageId [20695,20705]"/>
  <match src="for: for [85541,85544]" dest="for: for [83492,83495]"/>
  <match src="identifier: owner [91444,91449]" dest="identifier: owner [89558,89563]"/>
  <match src="contract_body [33751,34501]" dest="contract_body [30032,30797]"/>
  <match src="): ) [107293,107294]" dest="): ) [105145,105146]"/>
  <match src="identifier: FailedMessageFixed [20573,20591]" dest="identifier: FailedMessageFixed [20119,20137]"/>
  <match src="): ) [113874,113875]" dest="): ) [112854,112855]"/>
  <match src="function: function [90643,90651]" dest="function: function [88733,88741]"/>
  <match src="): ) [40990,40991]" dest="): ) [37472,37473]"/>
  <match src="identifier: set [72157,72160]" dest="identifier: set [69689,69692]"/>
  <match src="yul_evm_builtin [54322,54336]" dest="yul_evm_builtin [51328,51342]"/>
  <match src="(: ( [7180,7181]" dest="(: ( [8027,8028]"/>
  <match src="boolean_literal [38585,38590]" dest="boolean_literal [34983,34988]"/>
  <match src="[: [ [3903,3904]" dest="[: [ [4016,4017]"/>
  <match src="uint256: uint256 [95909,95916]" dest="uint256: uint256 [94142,94149]"/>
  <match src="identifier: _token [108323,108329]" dest="identifier: _token [106160,106166]"/>
  <match src="function_body [90741,90795]" dest="function_body [88831,88887]"/>
  <match src="(: ( [19546,19547]" dest="(: ( [19201,19202]"/>
  <match src="): ) [55737,55738]" dest="): ) [52790,52791]"/>
  <match src="{: { [34614,34615]" dest="{: { [30916,30917]"/>
  <match src="primitive_type [66843,66850]" dest="primitive_type [64227,64234]"/>
  <match src="parameter [105307,105331]" dest="parameter [119866,119890]"/>
  <match src="view: view [5658,5662]" dest="view: view [5841,5845]"/>
  <match src="identifier: _name [107203,107208]" dest="identifier: _name [105053,105058]"/>
  <match src="address: address [3530,3537]" dest="address: address [3634,3641]"/>
  <match src="solidity_version_comparison_operator [62052,62054]" dest="solidity_version_comparison_operator [59281,59283]"/>
  <match src=",: , [39048,39049]" dest=",: , [35456,35457]"/>
  <match src="parameter [99374,99396]" dest="parameter [97720,97742]"/>
  <match src="identifier: bridgeSpecificActionsOnTokenTransfer [38601,38637]" dest="identifier: bridgeSpecificActionsOnTokenTransfer [35000,35036]"/>
  <match src="variable_declaration [107222,107242]" dest="variable_declaration [105073,105093]"/>
  <match src="(: ( [23550,23551]" dest="(: ( [38425,38426]"/>
  <match src="identifier: returnData [4944,4954]" dest="identifier: returnData [5093,5103]"/>
  <match src="view: view [94986,94990]" dest="view: view [93192,93196]"/>
  <match src="-: - [71724,71725]" dest="-: - [69247,69248]"/>
  <match src="return_statement [3882,3965]" dest="return_statement [3995,4078]"/>
  <match src="(: ( [14660,14661]" dest="(: ( [15561,15562]"/>
  <match src="bool: bool [73846,73850]" dest="bool: bool [71435,71439]"/>
  <match src="): ) [81241,81242]" dest="): ) [79053,79054]"/>
  <match src="{: { [79470,79471]" dest="{: { [77238,77239]"/>
  <match src="identifier: keccak256 [114137,114146]" dest="identifier: keccak256 [22184,22193]"/>
  <match src="(: ( [100532,100533]" dest="(: ( [98905,98906]"/>
  <match src="function_body [71167,72607]" dest="function_body [68681,70153]"/>
  <match src="?: ? [45718,45719]" dest="?: ? [42534,42535]"/>
  <match src="(: ( [86111,86112]" dest="(: ( [84075,84076]"/>
  <match src="uint256: uint256 [98257,98264]" dest="uint256: uint256 [96569,96576]"/>
  <match src="address: address [36251,36258]" dest="address: address [32593,32600]"/>
  <match src="address: address [114947,114954]" dest="address: address [113570,113577]"/>
  <match src="event_definition [4506,4574]" dest="event_definition [4641,4709]"/>
  <match src="return_statement [46287,46399]" dest="return_statement [43114,43226]"/>
  <match src="parameter [5924,5940]" dest="parameter [6115,6131]"/>
  <match src="return_type_definition [65913,65930]" dest="return_type_definition [63271,63288]"/>
  <match src="state_mutability [106106,106110]" dest="state_mutability [103933,103937]"/>
  <match src="view: view [90709,90713]" dest="view: view [88799,88803]"/>
  <match src="call_argument [94559,94561]" dest="call_argument [92754,92756]"/>
  <match src="): ) [110707,110708]" dest="): ) [109201,109202]"/>
  <match src="return_type_definition [34650,34668]" dest="return_type_definition [30953,30971]"/>
  <match src="-: - [82611,82612]" dest="-: - [80461,80462]"/>
  <match src="parameter [56389,56403]" dest="parameter [53460,53474]"/>
  <match src="comment: /**      * @dev ERC721 transfer callback function.      * @param _from address of token sender.      * @param _tokenId id of the transferred token.      * @param _data additional transfer data, can be used for passing alternative receiver address.      */ [35956,36211]" dest="comment: /**      * @dev ERC721 transfer callback function.      * @param _from address of token sender.      * @param _tokenId id of the transferred token.      * @param _data additional transfer data, can be used for passing alternative receiver address.      */ [32291,32551]"/>
  <match src="function: function [31661,31669]" dest="function: function [27875,27883]"/>
  <match src="pragma_directive [44387,44409]" dest="pragma_directive [41168,41190]"/>
  <match src="(: ( [11239,11240]" dest="(: ( [12186,12187]"/>
  <match src="member_expression [16889,16907]" dest="member_expression [17084,17102]"/>
  <match src="&quot;: &quot; [23972,23973]" dest="&quot;: &quot; [38846,38847]"/>
  <match src="identifier: _token [115541,115547]" dest="identifier: _token [114144,114150]"/>
  <match src="returns: returns [10891,10898]" dest="returns: returns [11828,11835]"/>
  <match src=".: . [79056,79057]" dest=".: . [76811,76812]"/>
  <match src="identifier: value [70815,70820]" dest="identifier: value [68316,68321]"/>
  <match src="call_argument [97782,97789]" dest="call_argument [96076,96083]"/>
  <match src="identifier: isContract [16897,16907]" dest="identifier: isContract [17092,17102]"/>
  <match src="call_expression [45180,45231]" dest="call_expression [41985,42036]"/>
  <match src="primitive_type [112012,112018]" dest="primitive_type [111674,111680]"/>
  <match src="(: ( [14707,14708]" dest="(: ( [15615,15616]"/>
  <match src="): ) [89033,89034]" dest="): ) [87073,87074]"/>
  <match src="function_definition [64558,64734]" dest="function_definition [61868,62049]"/>
  <match src="identifier: b [68152,68153]" dest="identifier: b [65572,65573]"/>
  <match src="identifier: Transfer [28972,28980]" dest="identifier: Transfer [25115,25123]"/>
  <match src="parameter [49604,49618]" dest="parameter [46508,46522]"/>
  <match src="type_alias [85533,85540]" dest="type_alias [83484,83491]"/>
  <match src="identifier: a [68740,68741]" dest="identifier: a [66176,66177]"/>
  <match src="identifier: BridgedTokensRegistry [104355,104376]" dest="identifier: BridgedTokensRegistry [102868,102889]"/>
  <match src="type_name [83008,83015]" dest="type_name [80874,80881]"/>
  <match src="primitive_type [22161,22168]" dest="primitive_type [21716,21723]"/>
  <match src="(: ( [16601,16602]" dest="(: ( [118381,118382]"/>
  <match src="call_expression [19424,19474]" dest="call_expression [19098,19138]"/>
  <match src="(: ( [23533,23534]" dest="(: ( [38408,38409]"/>
  <match src="pragma: pragma [1307,1313]" dest="pragma: pragma [1351,1357]"/>
  <match src="identifier: _recipient [116199,116209]" dest="identifier: _recipient [114821,114831]"/>
  <match src="call_argument [47767,47817]" dest="call_argument [44628,44678]"/>
  <match src="if_statement [36380,36513]" dest="if_statement [32727,32862]"/>
  <match src="primitive_type [73886,73893]" dest="primitive_type [71476,71483]"/>
  <match src="modifier_invocation [26222,26231]" dest="modifier_invocation [22082,22091]"/>
  <match src="(: ( [72425,72426]" dest="(: ( [69962,69963]"/>
  <match src="assignment_expression [17632,17681]" dest="assignment_expression [118763,118805]"/>
  <match src=",: , [97108,97109]" dest=",: , [95374,95375]"/>
  <match src="is: is [35913,35915]" dest="is: is [32247,32249]"/>
  <match src="visibility [45539,45547]" dest="visibility [42353,42361]"/>
  <match src="type_name [11256,11261]" dest="type_name [12203,12208]"/>
  <match src="state_variable_declaration [55360,55413]" dest="state_variable_declaration [52405,52458]"/>
  <match src="): ) [67529,67530]" dest="): ) [64930,64931]"/>
  <match src="identifier: _transfer [98221,98230]" dest="identifier: _transfer [96533,96542]"/>
  <match src="parameter [56358,56379]" dest="parameter [53428,53449]"/>
  <match src="=: = [56715,56716]" dest="=: = [53795,53796]"/>
  <match src="using: using [85467,85472]" dest="using: using [83417,83422]"/>
  <match src="let: let [51458,51461]" dest="let: let [48414,48417]"/>
  <match src="(: ( [42891,42892]" dest="(: ( [39618,39619]"/>
  <match src="{: { [93340,93341]" dest="{: { [91510,91511]"/>
  <match src="call_argument [36485,36490]" dest="call_argument [32833,32838]"/>
  <match src="function_definition [91138,91299]" dest="function_definition [89243,89407]"/>
  <match src="address: address [48159,48166]" dest="address: address [45028,45035]"/>
  <match src="bytes: bytes [11256,11261]" dest="bytes: bytes [12203,12208]"/>
  <match src="primitive_type [26192,26199]" dest="primitive_type [22058,22062]"/>
  <match src="(: ( [95425,95426]" dest="(: ( [93644,93645]"/>
  <match src="comment: // the array, and then remove the last element (sometimes called as 'swap and pop'). [71520,71604]" dest="comment: // the array, and then remove the last element (sometimes called as 'swap and pop'). [69040,69124]"/>
  <match src=",: , [96371,96372]" dest=",: , [94614,94615]"/>
  <match src="visibility [61043,61051]" dest="visibility [58242,58250]"/>
  <match src="primitive_type [68144,68151]" dest="primitive_type [65564,65571]"/>
  <match src="string [100430,100482]" dest="string [98802,98854]"/>
  <match src="function: function [111472,111480]" dest="function: function [110829,110837]"/>
  <match src="primitive_type [95263,95270]" dest="primitive_type [93480,93487]"/>
  <match src="(: ( [110399,110400]" dest="(: ( [108975,108976]"/>
  <match src="(: ( [40278,40279]" dest="(: ( [36735,36736]"/>
  <match src="pragma_directive [59228,59251]" dest="pragma_directive [56377,56400]"/>
  <match src="comment: /**      * @dev Returns the number of tokens in ``owner``'s account.      */ [29461,29537]" dest="comment: /**      * @dev Returns the number of tokens in ``owner``'s account.      */ [25616,25694]"/>
  <match src="{: { [73411,73412]" dest="{: { [70983,70984]"/>
  <match src="identifier: ApprovalForAll [92309,92323]" dest="identifier: ApprovalForAll [90449,90463]"/>
  <match src="address: address [5289,5296]" dest="address: address [5461,5468]"/>
  <match src="(: ( [49603,49604]" dest="(: ( [46507,46508]"/>
  <match src="identifier: abi [23955,23958]" dest="identifier: abi [38829,38832]"/>
  <match src="address: address [29168,29175]" dest="address: address [25316,25323]"/>
  <match src=".: . [91258,91259]" dest=".: . [89364,89365]"/>
  <match src="parameter [67410,67419]" dest="parameter [64810,64819]"/>
  <match src="interface_declaration [54903,54979]" dest="interface_declaration [51931,52009]"/>
  <match src="identifier: newOwner [4564,4572]" dest="identifier: newOwner [4699,4707]"/>
  <match src="modifier_invocation [102612,102622]" dest="modifier_invocation [101056,101066]"/>
  <match src="member_expression [100253,100275]" dest="member_expression [98619,98641]"/>
  <match src="): ) [75803,75804]" dest="): ) [73458,73459]"/>
  <match src="identifier: encodePacked [58637,58649]" dest="identifier: encodePacked [55765,55777]"/>
  <match src="(: ( [16301,16302]" dest="(: ( [16784,16785]"/>
  <match src="comment: /**      * @dev Tells the bridge mode that this contract supports.      * @return _data 4 bytes representing the bridge mode      */ [40830,40962]" dest="comment: /**      * @dev Tells the bridge mode that this contract supports.      * @return _data 4 bytes representing the bridge mode      */ [37308,37443]"/>
  <match src=",: , [100733,100734]" dest=",: , [99112,99113]"/>
  <match src="identifier: require [5032,5039]" dest="identifier: require [5201,5208]"/>
  <match src="string: string [86308,86314]" dest="string: string [84278,84284]"/>
  <match src="identifier: _recipient [3647,3657]" dest="identifier: _recipient [3752,3762]"/>
  <match src="primitive_type [65063,65070]" dest="primitive_type [62390,62397]"/>
  <match src="primitive_type [83344,83351]" dest="primitive_type [81219,81226]"/>
  <match src="parameter [59946,59958]" dest="parameter [57112,57124]"/>
  <match src=",: , [68838,68839]" dest=",: , [66275,66276]"/>
  <match src="virtual: virtual [93088,93095]" dest="virtual: virtual [91251,91258]"/>
  <match src="call_argument [113120,113126]" dest="call_argument [111275,111281]"/>
  <match src=",: , [60774,60775]" dest=",: , [57967,57968]"/>
  <match src="]: ] [70166,70167]" dest="]: ] [67649,67650]"/>
  <match src="call_argument [73874,73884]" dest="call_argument [71464,71474]"/>
  <match src="&quot;: &quot; [48835,48836]" dest="&quot;: &quot; [45715,45716]"/>
  <match src="identifier: TokensBridgingInitiated [40101,40124]" dest="identifier: TokensBridgingInitiated [36552,36575]"/>
  <match src="): ) [83825,83826]" dest="): ) [81714,81715]"/>
  <match src="): ) [1500,1501]" dest="): ) [1549,1550]"/>
  <match src="state_mutability [23893,23897]" dest="state_mutability [38769,38773]"/>
  <match src="(: ( [55583,55584]" dest="(: ( [52633,52634]"/>
  <match src="): ) [12477,12478]" dest="): ) [13450,13451]"/>
  <match src="visibility [10882,10890]" dest="visibility [11819,11827]"/>
  <match src="primitive_type [67483,67490]" dest="primitive_type [64883,64890]"/>
  <match src="binary_expression [79161,79173]" dest="binary_expression [76919,76931]"/>
  <match src="parameter [44102,44115]" dest="parameter [40873,40886]"/>
  <match src="state_mutability [91182,91186]" dest="state_mutability [89287,89291]"/>
  <match src="identifier: data [33233,33237]" dest="identifier: data [29490,29494]"/>
  <match src="[: [ [72054,72055]" dest="[: [ [69583,69584]"/>
  <match src="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [70359,70518]" dest="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [67849,68013]"/>
  <match src=",: , [38665,38666]" dest=",: , [35064,35065]"/>
  <match src="string: string [90184,90190]" dest="string: string [88259,88265]"/>
  <match src="type_cast_expression [83116,83130]" dest="type_cast_expression [80983,80997]"/>
  <match src="(: ( [48202,48203]" dest="(: ( [45071,45072]"/>
  <match src="primitive_type [430,435]" dest="primitive_type [442,447]"/>
  <match src="number_literal: 0 [114336,114337]" dest="number_literal: 0 [112945,112946]"/>
  <match src="(: ( [53157,53158]" dest="(: ( [50142,50143]"/>
  <match src="parameter [115583,115608]" dest="parameter [114188,114213]"/>
  <match src="string [82193,82225]" dest="string [80034,80066]"/>
  <match src="comment: /**      * @dev Mints `tokenId` and transfers it to `to`.      *      * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible      *      * Requirements:      *      * - `tokenId` must not exist.      * - `to` cannot be the zero address.      *      * Emits a {Transfer} event.      */ [96460,96771]" dest="comment: /**      * @dev Mints `tokenId` and transfers it to `to`.      *      * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible      *      * Requirements:      *      * - `tokenId` must not exist.      * - `to` cannot be the zero address.      *      * Emits a {Transfer} event.      */ [94706,95028]"/>
  <match src="identifier: _tokenURIs [86459,86469]" dest="identifier: _tokenURIs [84435,84445]"/>
  <match src="identifier: messageRecipient [20370,20386]" dest="identifier: messageRecipient [19924,19940]"/>
  <match src="identifier: IBurnableMintableERC721Token [112797,112825]" dest="identifier: IBurnableMintableERC721Token [112265,112293]"/>
  <match src=",: , [26190,26191]" dest=",: , [22056,22057]"/>
  <match src="contract_body [47258,48961]" dest="contract_body [44110,45845]"/>
  <match src="): ) [14942,14943]" dest="): ) [15857,15858]"/>
  <match src="member_expression [45663,45683]" dest="member_expression [42478,42498]"/>
  <match src="virtual: virtual [95935,95942]" dest="virtual: virtual [94168,94175]"/>
  <match src="return_type_definition [81718,81744]" dest="return_type_definition [79544,79570]"/>
  <match src="parameter [75746,75750]" dest="parameter [73400,73404]"/>
  <match src="call_expression [105448,105463]" dest="call_expression [120011,120026]"/>
  <match src="{: { [117156,117157]" dest="{: { [115701,115702]"/>
  <match src="parameter [95909,95924]" dest="parameter [94142,94157]"/>
  <match src="primitive_type [83116,83123]" dest="primitive_type [80983,80990]"/>
  <match src="type_name [73789,73799]" dest="type_name [71378,71388]"/>
  <match src="identifier: tokenId [99103,99110]" dest="identifier: tokenId [97441,97448]"/>
  <match src="parameter [6898,6905]" dest="parameter [7735,7742]"/>
  <match src="comment: // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement. [80212,80304]" dest="comment: // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement. [77993,78085]"/>
  <match src="parameter [90732,90739]" dest="parameter [88822,88829]"/>
  <match src="]: ] [45812,45813]" dest="]: ] [42628,42629]"/>
  <match src="call_expression [14661,14676]" dest="call_expression [15562,15584]"/>
  <match src="internal: internal [706,714]" dest="internal: internal [729,737]"/>
  <match src=".: . [95035,95036]" dest=".: . [93242,93243]"/>
  <match src="): ) [12744,12745]" dest="): ) [13722,13723]"/>
  <match src="identifier: length [39199,39205]" dest="identifier: length [35610,35616]"/>
  <match src="(: ( [14674,14675]" dest="(: ( [15582,15583]"/>
  <match src="): ) [23914,23915]" dest="): ) [38787,38788]"/>
  <match src="identifier: isApprovedForAll [91579,91595]" dest="identifier: isApprovedForAll [89696,89712]"/>
  <match src="): ) [4970,4971]" dest="): ) [5132,5133]"/>
  <match src="string_literal [98335,98378]" dest="string_literal [96648,96691]"/>
  <match src="}: } [73002,73003]" dest="}: } [70562,70563]"/>
  <match src="function_definition [2115,2282]" dest="function_definition [2185,2354]"/>
  <match src="primitive_type [55904,55911]" dest="primitive_type [52962,52969]"/>
  <match src="): ) [53165,53166]" dest="): ) [50150,50151]"/>
  <match src="return_statement [118738,118792]" dest="return_statement [117187,117201]"/>
  <match src="return_type_definition [16593,16610]" dest="return_type_definition [118373,118390]"/>
  <match src="block_statement [70630,70878]" dest="block_statement [68127,68381]"/>
  <match src="identifier: _beforeTokenTransfer [97488,97508]" dest="identifier: _beforeTokenTransfer [95772,95792]"/>
  <match src="view: view [82138,82142]" dest="view: view [79978,79982]"/>
  <match src="identifier: map [84235,84238]" dest="identifier: map [82137,82140]"/>
  <match src="view: view [14580,14584]" dest="view: view [15448,15452]"/>
  <match src="(: ( [5135,5136]" dest="(: ( [5306,5307]"/>
  <match src="type_name [21839,21846]" dest="type_name [37970,37977]"/>
  <match src="parameter [101808,101831]" dest="parameter [100225,100248]"/>
  <match src="array_access [3569,3644]" dest="array_access [3674,3749]"/>
  <match src="type_name [46684,46691]" dest="type_name [43520,43527]"/>
  <match src="solidity: solidity [7488,7496]" dest="solidity: solidity [8349,8357]"/>
  <match src="comment: // We read and store the key's index to prevent multiple reads from the same storage slot [78646,78735]" dest="comment: // We read and store the key's index to prevent multiple reads from the same storage slot [76394,76483]"/>
  <match src="external: external [61043,61051]" dest="external: external [58242,58250]"/>
  <match src="comment: /**      * @dev Throws if caller on the other side is not an associated mediator.      */ [14281,14370]" dest="comment: /**      * @dev Throws if caller on the other side is not an associated mediator.      */ [15138,15229]"/>
  <match src="identifier: length [97680,97686]" dest="identifier: length [95970,95976]"/>
  <match src="{: { [116427,116428]" dest="{: { [115055,115056]"/>
  <match src="identifier: setBridgeContract [14901,14918]" dest="identifier: setBridgeContract [15816,15833]"/>
  <match src=".: . [81766,81767]" dest=".: . [79593,79594]"/>
  <match src="string [98335,98378]" dest="string [96648,96691]"/>
  <match src="primitive_type [78744,78751]" dest="primitive_type [76493,76500]"/>
  <match src="visibility [13786,13794]" dest="visibility [14808,14816]"/>
  <match src="type_name [91819,91826]" dest="type_name [89946,89953]"/>
  <match src="(: ( [24317,24318]" dest="(: ( [23946,23947]"/>
  <match src=".: . [45776,45777]" dest=".: . [42592,42593]"/>
  <match src="type_name [24676,24683]" dest="type_name [23118,23125]"/>
  <match src=",: , [21316,21317]" dest=",: , [20878,20879]"/>
  <match src="contract: contract [1864,1872]" dest="contract: contract [1928,1936]"/>
  <match src="primitive_type [19311,19318]" dest="primitive_type [18952,18959]"/>
  <match src="parameter [48648,48669]" dest="parameter [45526,45547]"/>
  <match src="parameter [65465,65491]" dest="parameter [62806,62832]"/>
  <match src="type_cast_expression [75105,75136]" dest="type_cast_expression [72733,72764]"/>
  <match src="primitive_type [68178,68185]" dest="primitive_type [65598,65605]"/>
  <match src="[: [ [79609,79610]" dest="[: [ [77379,77380]"/>
  <match src=",: , [2251,2252]" dest=",: , [2322,2323]"/>
  <match src="identifier: value [74363,74368]" dest="identifier: value [71969,71974]"/>
  <match src="function_body [65931,66323]" dest="function_body [63289,63693]"/>
  <match src="variable_declaration_statement [43233,43248]" dest="variable_declaration_statement [39968,39983]"/>
  <match src="internal: internal [83795,83803]" dest="internal: internal [81684,81692]"/>
  <match src="external: external [25585,25593]" dest="external: external [22622,22630]"/>
  <match src="primitive_type [99374,99380]" dest="primitive_type [97720,97726]"/>
  <match src="function_definition [97386,97888]" dest="function_definition [95667,96187]"/>
  <match src="override: override [106111,106119]" dest="override: override [103938,103946]"/>
  <match src="call_expression [51017,51045]" dest="call_expression [47965,47993]"/>
  <match src="identifier: mediatorContractOnOtherSide [16243,16270]" dest="identifier: mediatorContractOnOtherSide [16726,16753]"/>
  <match src="function_definition [116111,116521]" dest="function_definition [114730,115152]"/>
  <match src="visibility [90889,90895]" dest="visibility [88986,88992]"/>
  <match src="identifier: recipient [39122,39131]" dest="identifier: recipient [35531,35540]"/>
  <match src="expression_statement [95953,95980]" dest="expression_statement [94187,94214]"/>
  <match src="uint256: uint256 [6444,6451]" dest="uint256: uint256 [7269,7276]"/>
  <match src="else: else [70879,70883]" dest="else: else [68382,68386]"/>
  <match src="]: ] [45231,45232]" dest="]: ] [42036,42037]"/>
  <match src="primitive_type [68805,68812]" dest="primitive_type [66241,66248]"/>
  <match src="type_name [91866,91873]" dest="type_name [89993,90000]"/>
  <match src="external: external [6421,6429]" dest="external: external [7246,7254]"/>
  <match src="[: [ [48243,48244]" dest="[: [ [45113,45114]"/>
  <match src="function: function [65864,65872]" dest="function: function [63222,63230]"/>
  <match src="parameter [98940,98955]" dest="parameter [97276,97291]"/>
  <match src="identifier: INITIALIZED [915,926]" dest="identifier: INITIALIZED [941,952]"/>
  <match src="): ) [20937,20938]" dest="): ) [20491,20492]"/>
  <match src="}: } [83869,83870]" dest="}: } [81760,81761]"/>
  <match src="): ) [19491,19492]" dest="): ) [19155,19156]"/>
  <match src="identifier: this [5297,5301]" dest="identifier: this [5469,5473]"/>
  <match src="(: ( [110733,110734]" dest="(: ( [109228,109229]"/>
  <match src="{: { [74399,74400]" dest="{: { [72005,72006]"/>
  <match src="parameter [61965,61971]" dest="parameter [59188,59194]"/>
  <match src="primitive_type [108339,108346]" dest="primitive_type [106177,106184]"/>
  <match src="identifier: UintToAddressMap [84854,84870]" dest="identifier: UintToAddressMap [82775,82791]"/>
  <match src=",: , [108329,108330]" dest=",: , [106166,106167]"/>
  <match src="): ) [24717,24718]" dest="): ) [23159,23160]"/>
  <match src="type_name [39035,39042]" dest="type_name [35443,35450]"/>
  <match src="type_name [61905,61912]" dest="type_name [59127,59134]"/>
  <match src="identifier: _symbol [106941,106948]" dest="identifier: _symbol [104784,104791]"/>
  <match src=",: , [13385,13386]" dest=",: , [14377,14378]"/>
  <match src="parameter [65454,65463]" dest="parameter [62795,62804]"/>
  <match src="parameter [7096,7108]" dest="parameter [7940,7952]"/>
  <match src="call_argument [108583,108588]" dest="call_argument [106428,106433]"/>
  <match src="return_type_definition [68796,68813]" dest="return_type_definition [66232,66249]"/>
  <match src="address: address [92668,92675]" dest="address: address [90821,90828]"/>
  <match src="parameter [101748,101767]" dest="parameter [100163,100182]"/>
  <match src="array_access [71298,71317]" dest="array_access [68814,68833]"/>
  <match src="yul_decimal_number: 0 [53161,53162]" dest="yul_decimal_number: 0 [50146,50147]"/>
  <match src="function_definition [16809,16991]" dest="function_definition [17003,17188]"/>
  <match src="call_expression [107772,107819]" dest="call_expression [105597,105644]"/>
  <match src="int256: int256 [534,540]" dest="int256: int256 [548,554]"/>
  <match src="comment: /**      * @dev Internal function for initializing newly bridged token related information.      * @param _token address of the token contract.      */ [117565,117716]" dest="comment: /**      * @dev Unlock/Mint back the bridged token that was bridged to the other network but failed.      * @param _token address that bridged token contract.      * @param _recipient address that will receive the tokens.      * @param _tokenId unique id of the bridged token.      */ [112437,112726]"/>
  <match src="return: return [89843,89849]" dest="return: return [87911,87917]"/>
  <match src="}: } [48316,48317]" dest="}: } [45187,45188]"/>
  <match src="comment: /**      * @dev Stores the mediator contract address from the other network.      * @param _mediatorContract the address of the mediator contract.      */ [16997,17151]" dest="comment: /**      * @dev Stores the mediator contract address from the other network.      * @param _mediatorContract the address of the mediator contract.      */ [17196,17353]"/>
  <match src="bytes: bytes [107321,107326]" dest="bytes: bytes [105174,105179]"/>
  <match src="solidity_pragma_token [57960,57974]" dest="solidity_pragma_token [55072,55086]"/>
  <match src="=&gt;: =&gt; [427,429]" dest="=&gt;: =&gt; [439,441]"/>
  <match src="member_expression [19687,19709]" dest="member_expression [19280,19302]"/>
  <match src="string [114164,114185]" dest="string [22211,22229]"/>
  <match src="): ) [4904,4905]" dest="): ) [5052,5053]"/>
  <match src="parameter [38143,38159]" dest="parameter [34532,34548]"/>
  <match src="type_name [18956,18963]" dest="type_name [18590,18597]"/>
  <match src="identifier: toString [90226,90234]" dest="identifier: toString [88301,88309]"/>
  <match src="identifier: bridgeSpecificActionsOnTokenTransfer [36407,36443]" dest="identifier: bridgeSpecificActionsOnTokenTransfer [32755,32791]"/>
  <match src="identifier: isContract [50155,50165]" dest="identifier: isContract [47076,47086]"/>
  <match src="event_definition [40095,40254]" dest="event_definition [36546,36710]"/>
  <match src="identifier: setMessageFixed [20458,20473]" dest="identifier: setMessageFixed [20014,20029]"/>
  <match src="primitive_type [76177,76184]" dest="primitive_type [73845,73852]"/>
  <match src="identifier: _token [112728,112734]" dest="identifier: _token [111604,111610]"/>
  <match src="&quot;: &quot; [92228,92229]" dest="&quot;: &quot; [90365,90366]"/>
  <match src="uint256: uint256 [94420,94427]" dest="uint256: uint256 [92613,92620]"/>
  <match src="identifier: isProxy [5054,5061]" dest="identifier: isProxy [5224,5231]"/>
  <match src="identifier: _contains [70607,70616]" dest="identifier: _contains [68104,68113]"/>
  <match src="{: { [105429,105430]" dest="{: { [119991,119992]"/>
  <match src="external: external [105386,105394]" dest="external: external [119948,119956]"/>
  <match src="): ) [18272,18273]" dest="): ) [17777,17778]"/>
  <match src="block_statement [89829,89870]" dest="block_statement [87896,87939]"/>
  <match src=".: . [102218,102219]" dest=".: . [100652,100653]"/>
  <match src="): ) [71142,71143]" dest="): ) [68656,68657]"/>
  <match src="type_cast_expression [84687,84726]" dest="type_cast_expression [82602,82641]"/>
  <match src=",: , [84318,84319]" dest=",: , [82221,82222]"/>
  <match src="pure: pure [65908,65912]" dest="pure: pure [63266,63270]"/>
  <match src="identifier: a [67418,67419]" dest="identifier: a [64818,64819]"/>
  <match src="identifier: require [9999,10006]" dest="identifier: require [10915,10922]"/>
  <match src="delete: delete [80807,80813]" dest="delete: delete [78601,78607]"/>
  <match src="function_body [88767,88905]" dest="function_body [86798,86940]"/>
  <match src="expression_statement [70644,70668]" dest="expression_statement [68142,68166]"/>
  <match src="{: { [68814,68815]" dest="{: { [66250,66251]"/>
  <match src="private: private [55779,55786]" dest="private: private [52833,52840]"/>
  <match src=",: , [76592,76593]" dest=",: , [74274,74275]"/>
  <match src="type_name [4931,4936]" dest="type_name [5080,5085]"/>
  <match src="identifier: _approve [91709,91717]" dest="identifier: _approve [89830,89838]"/>
  <match src="expression_statement [93115,93155]" dest="expression_statement [91279,91319]"/>
  <match src="bytes: bytes [12613,12618]" dest="bytes: bytes [13590,13595]"/>
  <match src="member_expression [116441,116482]" dest="member_expression [115070,115111]"/>
  <match src="yul_function_call [57737,57828]" dest="yul_function_call [54842,54933]"/>
  <match src=",: , [33540,33541]" dest=",: , [29810,29811]"/>
  <match src="identifier: ERC165 [85295,85301]" dest="identifier: ERC165 [83241,83247]"/>
  <match src="call_argument [3931,3949]" dest="call_argument [4044,4062]"/>
  <match src="true: true [79113,79117]" dest="true: true [76869,76873]"/>
  <match src="(: ( [40989,40990]" dest="(: ( [37471,37472]"/>
  <match src="identifier: set [72719,72722]" dest="identifier: set [70270,70273]"/>
  <match src="state_mutability [50655,50659]" dest="state_mutability [47594,47598]"/>
  <match src="(: ( [44275,44276]" dest="(: ( [41051,41052]"/>
  <match src="): ) [107166,107167]" dest="): ) [105015,105016]"/>
  <match src="visibility [81705,81712]" dest="visibility [79531,79538]"/>
  <match src="): ) [16079,16080]" dest="): ) [16555,16556]"/>
  <match src="call_expression [23945,24003]" dest="call_expression [38819,38873]"/>
  <match src="solidity: solidity [61,69]" dest="solidity: solidity [63,71]"/>
  <match src="modifier_invocation [15760,15769]" dest="modifier_invocation [118075,118084]"/>
  <match src="assignment_expression [56652,56664]" dest="assignment_expression [53730,53742]"/>
  <match src="comment: // Base URI [86476,86487]" dest="comment: // Base URI [84454,84465]"/>
  <match src="==: == [39206,39208]" dest="==: == [35617,35619]"/>
  <match src="binary_expression [25622,25671]" dest="binary_expression [22660,22709]"/>
  <match src="function_body [47725,47826]" dest="function_body [44585,44688]"/>
  <match src="parameter [29775,29790]" dest="parameter [25942,25957]"/>
  <match src=":: : [45747,45748]" dest=":: : [42563,42564]"/>
  <match src="]: ] [2940,2941]" dest="]: ] [3028,3029]"/>
  <match src="identifier: tokenId [98496,98503]" dest="identifier: tokenId [96812,96819]"/>
  <match src="[: [ [5712,5713]" dest="[: [ [5896,5897]"/>
  <match src="expression_statement [92168,92231]" dest="expression_statement [90305,90368]"/>
  <match src="): ) [52259,52260]" dest="): ) [49226,49227]"/>
  <match src="type_name [61873,61880]" dest="type_name [59095,59102]"/>
  <match src="(: ( [6357,6358]" dest="(: ( [7180,7181]"/>
  <match src=".: . [109688,109689]" dest=".: . [107633,107634]"/>
  <match src="comment: /**      * @dev See {IERC721Metadata-tokenURI}.      */ [89445,89500]" dest="comment: /**      * @dev See {IERC721Metadata-tokenURI}.      */ [87503,87560]"/>
  <match src="bytes: bytes [46182,46187]" dest="bytes: bytes [43008,43013]"/>
  <match src="call_argument [21187,21231]" dest="call_argument [20749,20793]"/>
  <match src="return_statement [66185,66194]" dest="return_statement [63548,63557]"/>
  <match src="type_name [93038,93045]" dest="type_name [91201,91208]"/>
  <match src="call_argument [19394,19404]" dest="call_argument [19067,19077]"/>
  <match src="identifier: lastEntry [80492,80501]" dest="identifier: lastEntry [78278,78287]"/>
  <match src="pragma_directive [7481,7504]" dest="pragma_directive [8342,8365]"/>
  <match src="): ) [83379,83380]" dest="): ) [81254,81255]"/>
  <match src="type_name [107076,107083]" dest="type_name [104924,104931]"/>
  <match src="): ) [65131,65132]" dest="): ) [62459,62460]"/>
  <match src="function: function [93012,93020]" dest="function: function [91175,91183]"/>
  <match src="primitive_type [39367,39374]" dest="primitive_type [35785,35792]"/>
  <match src="solidity_pragma_token [61154,61169]" dest="solidity_pragma_token [58359,58374]"/>
  <match src="return_type_definition [83592,83606]" dest="return_type_definition [81474,81488]"/>
  <match src="solidity_version: 0.7.0 [42722,42727]" dest="solidity_version: 0.7.0 [39440,39445]"/>
  <match src="yul_evm_builtin [13379,13382]" dest="yul_evm_builtin [14371,14374]"/>
  <match src="internal: internal [38166,38174]" dest="internal: internal [34556,34564]"/>
  <match src="(: ( [110535,110536]" dest="(: ( [109491,109492]"/>
  <match src="): ) [59805,59806]" dest="): ) [56967,56968]"/>
  <match src="): ) [56632,56633]" dest="): ) [53708,53709]"/>
  <match src="abstract: abstract [21661,21669]" dest="abstract: abstract [21214,21222]"/>
  <match src="expression_statement [1512,1600]" dest="expression_statement [1562,1650]"/>
  <match src="identifier: _tokenURI [115644,115653]" dest="identifier: _tokenURI [114251,114260]"/>
  <match src="identifier: abi [114147,114150]" dest="identifier: abi [22194,22197]"/>
  <match src="call_argument [111055,111059]" dest="call_argument [110395,110399]"/>
  <match src="type_name [22161,22168]" dest="type_name [21716,21723]"/>
  <match src="): ) [102873,102874]" dest="): ) [101326,101327]"/>
  <match src="primitive_type [40346,40353]" dest="primitive_type [36803,36810]"/>
  <match src=",: , [101850,101851]" dest=",: , [100268,100269]"/>
  <match src="(: ( [88757,88758]" dest="(: ( [86788,86789]"/>
  <match src="identifier: owner [29569,29574]" dest="identifier: owner [25727,25732]"/>
  <match src="comment: /**  * @dev String operations.  */ [42730,42764]" dest="comment: /**  * @dev String operations.  */ [39450,39486]"/>
  <match src="expression_statement [88363,88381]" dest="expression_statement [86383,86401]"/>
  <match src="call_argument [76666,76688]" dest="call_argument [74349,74371]"/>
  <match src="parameter [79464,79468]" dest="parameter [77232,77236]"/>
  <match src="state_mutability [83587,83591]" dest="state_mutability [81469,81473]"/>
  <match src="&quot;: &quot; [42607,42608]" dest="&quot;: &quot; [39226,39227]"/>
  <match src="identifier: tokenId [100680,100687]" dest="identifier: tokenId [99058,99065]"/>
  <match src="number_literal: 0 [6140,6141]" dest="number_literal: 0 [6339,6340]"/>
  <match src="event: event [40095,40100]" dest="event: event [36546,36551]"/>
  <match src="type_cast_expression [97583,97593]" dest="type_cast_expression [95870,95880]"/>
  <match src="): ) [59063,59064]" dest="): ) [56204,56205]"/>
  <match src="identifier: map [78580,78583]" dest="identifier: map [76327,76330]"/>
  <match src="yul_identifier [13387,13397]" dest="yul_identifier [14379,14389]"/>
  <match src="): ) [17559,17560]" dest="): ) [118695,118696]"/>
  <match src="array_access [43480,43495]" dest="array_access [40224,40239]"/>
  <match src="identifier: _inner [83410,83416]" dest="identifier: _inner [81286,81292]"/>
  <match src=".: . [73440,73441]" dest=".: . [71013,71014]"/>
  <match src="call_argument [114081,114093]" dest="call_argument [22760,22779]"/>
  <match src="member_expression [112869,112891]" dest="member_expression [112334,112356]"/>
  <match src="parameter [7247,7259]" dest="parameter [8097,8109]"/>
  <match src="external: external [33441,33449]" dest="external: external [29707,29715]"/>
  <match src="view: view [6495,6499]" dest="view: view [7322,7326]"/>
  <match src="(: ( [54700,54701]" dest="(: ( [51715,51716]"/>
  <match src=",: , [98494,98495]" dest=",: , [96810,96811]"/>
  <match src="primitive_type [43341,43346]" dest="primitive_type [40081,40086]"/>
  <match src="(: ( [91261,91262]" dest="(: ( [89367,89368]"/>
  <match src="(: ( [102919,102920]" dest="(: ( [101373,101374]"/>
  <match src="solidity_version_comparison_operator [63732,63734]" dest="solidity_version_comparison_operator [61016,61018]"/>
  <match src="identifier: failedMessageReceiver [19441,19462]" dest="identifier: failedMessageReceiver [19105,19126]"/>
  <match src="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [72613,72683]" dest="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [70161,70233]"/>
  <match src="identifier: contains [74322,74330]" dest="identifier: contains [71928,71936]"/>
  <match src="): ) [112209,112210]" dest="): ) [111804,111805]"/>
  <match src="identifier: name [43945,43949]" dest="identifier: name [40711,40715]"/>
  <match src="inheritance_specifier [101648,101654]" dest="inheritance_specifier [100059,100065]"/>
  <match src="identifier: tokenId [96935,96942]" dest="identifier: tokenId [95195,95202]"/>
  <match src="parameter [46104,46118]" dest="parameter [42929,42943]"/>
  <match src="comment: // The value is stored at length-1, but we add 1 to all indexes [70681,70744]" dest="comment: // The value is stored at length-1, but we add 1 to all indexes [68180,68243]"/>
  <match src="address: address [24318,24325]" dest="address: address [23947,23954]"/>
  <match src="(: ( [75776,75777]" dest="(: ( [73431,73432]"/>
  <match src="uint256: uint256 [43390,43397]" dest="uint256: uint256 [40131,40138]"/>
  <match src="primitive_type [103541,103548]" dest="primitive_type [102013,102020]"/>
  <match src="assignment_expression [45084,45156]" dest="assignment_expression [41888,41960]"/>
  <match src="call_argument [94494,94498]" dest="call_argument [92688,92692]"/>
  <match src="primitive_type [88286,88292]" dest="primitive_type [86304,86310]"/>
  <match src="function_body [109663,109935]" dest="function_body [107607,108317]"/>
  <match src="bytes32: bytes32 [110953,110960]" dest="bytes32: bytes32 [110361,110368]"/>
  <match src="): ) [11301,11302]" dest="): ) [12248,12249]"/>
  <match src="type_name [6568,6575]" dest="type_name [7397,7404]"/>
  <match src="): ) [91267,91268]" dest="): ) [89373,89374]"/>
  <match src="function_definition [100599,100754]" dest="function_definition [98976,99134]"/>
  <match src="type_name [65888,65895]" dest="type_name [63246,63253]"/>
  <match src="identifier: _data [96268,96273]" dest="identifier: _data [94509,94514]"/>
  <match src="external: external [60791,60799]" dest="external: external [57984,57992]"/>
  <match src="unary_expression [110676,110707]" dest="unary_expression [109170,109201]"/>
  <match src="comment: // File: @openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol [60129,60196]" dest="comment: // File: @openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol [57301,57368]"/>
  <match src="{: { [72767,72768]" dest="{: { [70318,70319]"/>
  <match src="uint256: uint256 [64635,64642]" dest="uint256: uint256 [61946,61953]"/>
  <match src="return_statement [43173,43184]" dest="return_statement [39905,39916]"/>
  <match src="expression_statement [101871,101904]" dest="expression_statement [100290,100323]"/>
  <match src="): ) [110941,110942]" dest="): ) [109401,109402]"/>
  <match src="identifier: data [10950,10954]" dest="identifier: data [11888,11892]"/>
  <match src="primitive_type [45601,45606]" dest="primitive_type [42416,42421]"/>
  <match src="bytes32: bytes32 [81727,81734]" dest="bytes32: bytes32 [79553,79560]"/>
  <match src="function_body [38175,38694]" dest="function_body [34565,35094]"/>
  <match src="=: = [84335,84336]" dest="=: = [82238,82239]"/>
  <match src="identifier: require [63537,63544]" dest="identifier: require [60813,60820]"/>
  <match src="identifier: tokenId [93142,93149]" dest="identifier: tokenId [91306,91313]"/>
  <match src="call_expression [103514,103552]" dest="call_expression [101986,102024]"/>
  <match src="call_expression [98465,98504]" dest="call_expression [96781,96820]"/>
  <match src="identifier: set [70617,70620]" dest="identifier: set [68114,68117]"/>
  <match src="primitive_type [14112,14119]" dest="primitive_type [117518,117525]"/>
  <match src="type_name [109599,109606]" dest="type_name [107543,107550]"/>
  <match src="call_expression [92911,92939]" dest="call_expression [91068,91096]"/>
  <match src="parameter [20848,20852]" dest="parameter [20401,20405]"/>
  <match src="pragma: pragma [41239,41245]" dest="pragma: pragma [37728,37734]"/>
  <match src="call_expression [24307,24329]" dest="call_expression [23923,23958]"/>
  <match src="uint256: uint256 [33424,33431]" dest="uint256: uint256 [29690,29697]"/>
  <match src="member_expression [39193,39205]" dest="member_expression [35604,35616]"/>
  <match src="{: { [89585,89586]" dest="{: { [87646,87647]"/>
  <match src="function_body [93105,93161]" dest="function_body [91268,91326]"/>
  <match src="identifier: require [9774,9781]" dest="identifier: require [10686,10693]"/>
  <match src="): ) [6091,6092]" dest="): ) [6289,6290]"/>
  <match src=",: , [114301,114302]" dest=",: , [112905,112906]"/>
  <match src="identifier: data [46936,46940]" dest="identifier: data [43775,43779]"/>
  <match src="function: function [6459,6467]" dest="function: function [7286,7294]"/>
  <match src="): ) [6727,6728]" dest="): ) [7560,7561]"/>
  <match src="number_literal: 0 [103549,103550]" dest="number_literal: 0 [102021,102022]"/>
  <match src="pragma_directive [4029,4051]" dest="pragma_directive [4148,4170]"/>
  <match src="identifier: from [93132,93136]" dest="identifier: from [91296,91300]"/>
  <match src="bytes: bytes [43367,43372]" dest="bytes: bytes [40107,40112]"/>
  <match src=",: , [84710,84711]" dest=",: , [82625,82626]"/>
  <match src="type_name [64582,64589]" dest="type_name [61892,61899]"/>
  <match src="visibility [6962,6970]" dest="visibility [7801,7809]"/>
  <match src="uint256: uint256 [25564,25571]" dest="uint256: uint256 [37923,37930]"/>
  <match src="internal: internal [5396,5404]" dest="internal: internal [5573,5581]"/>
  <match src="identifier: _receiver [112471,112480]" dest="identifier: _receiver [112078,112087]"/>
  <match src="user_defined_type [78568,78571]" dest="user_defined_type [76315,76318]"/>
  <match src="state_mutability [34392,34396]" dest="state_mutability [30683,30687]"/>
  <match src="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [64740,65000]" dest="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [62057,62326]"/>
  <match src="variable_declaration [80035,80052]" dest="variable_declaration [77813,77830]"/>
  <match src="payable: payable [9720,9727]" dest="payable: payable [10631,10638]"/>
  <match src="call_argument [66261,66296]" dest="call_argument [63628,63663]"/>
  <match src="&quot;: &quot; [48855,48856]" dest="&quot;: &quot; [45735,45736]"/>
  <match src="while: while [43448,43453]" dest="while: while [40191,40196]"/>
  <match src="): ) [56959,56960]" dest="): ) [54046,54047]"/>
  <match src="identifier: _tokenId [37009,37017]" dest="identifier: _tokenId [33372,33380]"/>
  <match src="solidity_version_comparison_operator [61162,61164]" dest="solidity_version_comparison_operator [58367,58369]"/>
  <match src="call_argument [97873,97880]" dest="call_argument [96171,96178]"/>
  <match src="{: { [95309,95310]" dest="{: { [93526,93527]"/>
  <match src="{: { [23495,23496]" dest="{: { [38369,38370]"/>
  <match src="identifier: _messageId [19547,19557]" dest="identifier: _messageId [19127,19137]"/>
  <match src="parameter [7415,7422]" dest="parameter [8270,8277]"/>
  <match src="comment: // and use 0 as a sentinel value [79008,79040]" dest="comment: // and use 0 as a sentinel value [76762,76794]"/>
  <match src="]: ] [88888,88889]" dest="]: ] [86922,86923]"/>
  <match src="call_argument [97008,97018]" dest="call_argument [95270,95280]"/>
  <match src="(: ( [103548,103549]" dest="(: ( [102020,102021]"/>
  <match src="binary_expression [9782,9813]" dest="binary_expression [10694,10725]"/>
  <match src="return_statement [90177,90239]" dest="return_statement [88252,88314]"/>
  <match src="function_definition [75379,75508]" dest="function_definition [73023,73154]"/>
  <match src="): ) [98584,98585]" dest="): ) [96903,96904]"/>
  <match src="string [45207,45221]" dest="string [42012,42026]"/>
  <match src="override_specifier [111633,111641]" dest="override_specifier [110021,110029]"/>
  <match src="function_definition [76117,76229]" dest="function_definition [73785,73899]"/>
  <match src="type_name [82355,82358]" dest="type_name [80202,80205]"/>
  <match src="(: ( [85876,85877]" dest="(: ( [83834,83835]"/>
  <match src="identifier: _tokenURI [115740,115749]" dest="identifier: _tokenURI [114348,114357]"/>
  <match src="=: = [13820,13821]" dest="=: = [14842,14843]"/>
  <match src="call_expression [23534,23572]" dest="call_expression [38409,38452]"/>
  <match src="(: ( [95451,95452]" dest="(: ( [93671,93672]"/>
  <match src="memory: memory [10869,10875]" dest="memory: memory [11806,11812]"/>
  <match src="comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [10090,10820]" dest="comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [11009,11756]"/>
  <match src="call_argument [37073,37081]" dest="call_argument [33438,33446]"/>
  <match src="bool: bool [81067,81071]" dest="bool: bool [78872,78876]"/>
  <match src="bytes: bytes [115638,115643]" dest="bytes: bytes [114245,114250]"/>
  <match src="identifier: _entries [80059,80067]" dest="identifier: _entries [77837,77845]"/>
  <match src="identifier: INITIALIZED [1028,1039]" dest="identifier: INITIALIZED [1058,1069]"/>
  <match src="(: ( [93131,93132]" dest="(: ( [91295,91296]"/>
  <match src="identifier: _tokenId [112839,112847]" dest="identifier: _tokenId [112307,112315]"/>
  <match src="expression_statement [12719,12780]" dest="expression_statement [13697,13758]"/>
  <match src=",: , [61889,61890]" dest=",: , [59111,59112]"/>
  <match src="primitive_type [81265,81272]" dest="primitive_type [79077,79084]"/>
  <match src=",: , [100048,100049]" dest=",: , [98408,98409]"/>
  <match src="(: ( [105422,105423]" dest="(: ( [119984,119985]"/>
  <match src="): ) [114258,114259]" dest="): ) [23306,23307]"/>
  <match src="function_definition [58511,58692]" dest="function_definition [55638,55821]"/>
  <match src="user_defined_type [79417,79420]" dest="user_defined_type [77185,77188]"/>
  <match src="parameter [36251,36258]" dest="parameter [32593,32600]"/>
  <match src="}: } [91736,91737]" dest="}: } [89858,89859]"/>
  <match src="comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [7596,8161]" dest="comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [8463,9044]"/>
  <match src="||: || [57449,57451]" dest="||: || [54548,54550]"/>
  <match src="primitive_type [100617,100624]" dest="primitive_type [98994,99001]"/>
  <match src="address: address [29003,29010]" dest="address: address [25146,25153]"/>
  <match src="primitive_type [20350,20357]" dest="primitive_type [19904,19911]"/>
  <match src="{: { [70884,70885]" dest="{: { [68387,68388]"/>
  <match src="identifier: onlyMediator [107053,107065]" dest="identifier: onlyMediator [104900,104912]"/>
  <match src="identifier: IAMB [16043,16047]" dest="identifier: IAMB [16519,16523]"/>
  <match src="}: } [12920,12921]" dest="}: } [13901,13902]"/>
  <match src="comment: // File: contracts/upgradeability/Proxy.sol [50240,50283]" dest="comment: // File: contracts/upgradeability/Proxy.sol [47166,47209]"/>
  <match src="call_expression [92824,92836]" dest="call_expression [90979,90991]"/>
  <match src="while: while [43257,43262]" dest="while: while [39993,39998]"/>
  <match src="primitive_type [993,997]" dest="primitive_type [1022,1026]"/>
  <match src="&gt;=: &gt;= [12427,12429]" dest="&gt;=: &gt;= [13400,13402]"/>
  <match src="(: ( [83600,83601]" dest="(: ( [81482,81483]"/>
  <match src="user_defined_type [85491,85521]" dest="user_defined_type [83441,83471]"/>
  <match src="parameter [83535,83563]" dest="parameter [81417,81445]"/>
  <match src="solidity: solidity [50292,50300]" dest="solidity: solidity [47220,47228]"/>
  <match src="function: function [70523,70531]" dest="function: function [68019,68027]"/>
  <match src="primitive_type [7247,7254]" dest="primitive_type [8097,8104]"/>
  <match src="parameter [81226,81241]" dest="parameter [79038,79053]"/>
  <match src="type_name [89237,89243]" dest="type_name [87284,87290]"/>
  <match src=".: . [78766,78767]" dest=".: . [76515,76516]"/>
  <match src="call_expression [89052,89122]" dest="call_expression [87093,87163]"/>
  <match src="=: = [71759,71760]" dest="=: = [69283,69284]"/>
  <match src="visibility [20225,20231]" dest="visibility [19775,19781]"/>
  <match src="&quot;: &quot; [96873,96874]" dest="&quot;: &quot; [95132,95133]"/>
  <match src="call_argument [73886,73909]" dest="call_argument [71476,71499]"/>
  <match src="=: = [49284,49285]" dest="=: = [46181,46182]"/>
  <match src="identifier: ownerOf [100717,100724]" dest="identifier: ownerOf [99096,99103]"/>
  <match src="type_name [74331,74341]" dest="type_name [71937,71947]"/>
  <match src="bytes32: bytes32 [6638,6645]" dest="bytes32: bytes32 [7469,7476]"/>
  <match src="function: function [76117,76125]" dest="function: function [73785,73793]"/>
  <match src="identifier: _messageId [3951,3961]" dest="identifier: _messageId [4064,4074]"/>
  <match src="identifier: set [71124,71127]" dest="identifier: set [68638,68641]"/>
  <match src="identifier: operator [92109,92117]" dest="identifier: operator [90245,90253]"/>
  <match src="identifier: tokenId [93072,93079]" dest="identifier: tokenId [91235,91242]"/>
  <match src="): ) [89406,89407]" dest="): ) [87460,87461]"/>
  <match src="identifier: NFTMediatorBalanceStorage [58110,58135]" dest="identifier: NFTMediatorBalanceStorage [55229,55254]"/>
  <match src="string: string [318,324]" dest="string: string [328,334]"/>
  <match src="private: private [55446,55453]" dest="private: private [52492,52499]"/>
  <match src="parameter [33470,33486]" dest="parameter [29738,29754]"/>
  <match src="event: event [40259,40264]" dest="event: event [36716,36721]"/>
  <match src="): ) [19590,19591]" dest="): ) [19245,19246]"/>
  <match src="contract: contract [101618,101626]" dest="contract: contract [100029,100037]"/>
  <match src="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [65623,65859]" dest="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [62971,63216]"/>
  <match src="binary_expression [5053,5302]" dest="binary_expression [5223,5474]"/>
  <match src="using: using [85527,85532]" dest="using: using [83478,83483]"/>
  <match src="uint256: uint256 [58549,58556]" dest="uint256: uint256 [55676,55683]"/>
  <match src="): ) [24001,24002]" dest="): ) [38871,38872]"/>
  <match src="interface: interface [1138,1147]" dest="interface: interface [1176,1185]"/>
  <match src="private: private [55851,55858]" dest="private: private [52907,52914]"/>
  <match src="type_name [106958,106965]" dest="type_name [104802,104809]"/>
  <match src="identifier: selector [112375,112383]" dest="identifier: selector [111962,111970]"/>
  <match src="}: } [13516,13517]" dest="}: } [14513,14514]"/>
  <match src="if_statement [111905,113060]" dest="if_statement [111212,112180]"/>
  <match src="{: { [82161,82162]" dest="{: { [80001,80002]"/>
  <match src="binary_expression [102027,102055]" dest="binary_expression [100453,100481]"/>
  <match src="identifier: to [98752,98754]" dest="identifier: to [97078,97080]"/>
  <match src="identifier: entry [81902,81907]" dest="identifier: entry [79732,79737]"/>
  <match src="return_statement [74632,74659]" dest="return_statement [72246,72273]"/>
  <match src="identifier: _token [110417,110423]" dest="identifier: _token [108994,109000]"/>
  <match src="identifier: require [89595,89602]" dest="identifier: require [87657,87664]"/>
  <match src="identifier: _token [113963,113969]" dest="identifier: _token [110320,110326]"/>
  <match src="number_literal: 0x5b5e139f [87770,87780]" dest="number_literal: 0x5b5e139f [85774,85784]"/>
  <match src="identifier: _name [45151,45156]" dest="identifier: _name [41955,41960]"/>
  <match src="uint256: uint256 [84240,84247]" dest="uint256: uint256 [82142,82149]"/>
  <match src="call_argument [93142,93149]" dest="call_argument [91306,91313]"/>
  <match src="identifier: index [75129,75134]" dest="identifier: index [72757,72762]"/>
  <match src="=: = [56681,56682]" dest="=: = [53760,53761]"/>
  <match src="call_argument [9790,9794]" dest="call_argument [10702,10706]"/>
  <match src="identifier: _data [94450,94455]" dest="identifier: _data [92643,92648]"/>
  <match src="identifier: map [81027,81030]" dest="identifier: map [78832,78835]"/>
  <match src="identifier: owner [92464,92469]" dest="identifier: owner [90610,90615]"/>
  <match src="): ) [81272,81273]" dest="): ) [79084,79085]"/>
  <match src="(: ( [46935,46936]" dest="(: ( [43774,43775]"/>
  <match src="parameter [67432,67458]" dest="parameter [64832,64858]"/>
  <match src="identifier: abi [45720,45723]" dest="identifier: abi [42536,42539]"/>
  <match src="identifier: _messageId [113172,113182]" dest="identifier: _messageId [109421,109431]"/>
  <match src="return: return [63021,63027]" dest="return: return [60282,60288]"/>
  <match src="boolean_literal [72543,72547]" dest="boolean_literal [70085,70089]"/>
  <match src="type_name [75931,75938]" dest="type_name [73592,73599]"/>
  <match src="type_name [55824,55850]" dest="type_name [52880,52906]"/>
  <match src="call_expression [98309,98325]" dest="call_expression [96622,96638]"/>
  <match src="}: } [83665,83666]" dest="}: } [81549,81550]"/>
  <match src="primitive_type [21126,21133]" dest="primitive_type [20687,20694]"/>
  <match src="call_argument [16908,16923]" dest="call_argument [17103,17118]"/>
  <match src="): ) [72928,72929]" dest="): ) [70486,70487]"/>
  <match src="function_body [115624,115767]" dest="function_body [114230,114377]"/>
  <match src="(: ( [48834,48835]" dest="(: ( [45714,45715]"/>
  <match src="bool: bool [63005,63009]" dest="bool: bool [60265,60269]"/>
  <match src="expression_statement [14432,14434]" dest="expression_statement [15294,15296]"/>
  <match src="identifier: _setBaseURI [99362,99373]" dest="identifier: _setBaseURI [97708,97719]"/>
  <match src="visibility [94977,94985]" dest="visibility [93183,93191]"/>
  <match src="identifier: _at [76666,76669]" dest="identifier: _at [74349,74352]"/>
  <match src="state_variable_declaration [55772,55792]" dest="state_variable_declaration [52826,52846]"/>
  <match src="identifier: BasicNFTOmnibridge [104264,104282]" dest="identifier: BasicNFTOmnibridge [102773,102791]"/>
  <match src="return: return [16321,16327]" dest="return: return [16805,16811]"/>
  <match src="identifier: to [100735,100737]" dest="identifier: to [99114,99116]"/>
  <match src="identifier: _sender [117522,117529]" dest="identifier: _sender [115948,115955]"/>
  <match src="primitive_type [88758,88765]" dest="primitive_type [86789,86796]"/>
  <match src="function_definition [39288,39457]" dest="function_definition [35704,35878]"/>
  <match src="member_expression [72978,72996]" dest="member_expression [70537,70555]"/>
  <match src="indexed: indexed [29422,29429]" dest="indexed: indexed [25575,25582]"/>
  <match src="function: function [89345,89353]" dest="function: function [87399,87407]"/>
  <match src=",: , [116157,116158]" dest=",: , [114777,114778]"/>
  <match src="type_cast_expression [25632,25642]" dest="type_cast_expression [22670,22680]"/>
  <match src="type_name [57368,57375]" dest="type_name [54466,54473]"/>
  <match src="calldata: calldata [108400,108408]" dest="calldata: calldata [106240,106248]"/>
  <match src="type_cast_expression [107576,107589]" dest="type_cast_expression [105434,105447]"/>
  <match src="}: } [91065,91066]" dest="}: } [89165,89166]"/>
  <match src="identifier: messageValue [20424,20436]" dest="identifier: messageValue [19979,19991]"/>
  <match src="return: return [106145,106151]" dest="return: return [103973,103979]"/>
  <match src="parameter [74125,74138]" dest="parameter [71724,71737]"/>
  <match src="(: ( [7414,7415]" dest="(: ( [8269,8270]"/>
  <match src="type_name [85372,85379]" dest="type_name [83319,83326]"/>
  <match src="call_expression [4977,5021]" dest="call_expression [5145,5189]"/>
  <match src="constructor_definition [56279,56791]" dest="constructor_definition [53346,53872]"/>
  <match src="memory: memory [46150,46156]" dest="memory: memory [42975,42981]"/>
  <match src="state_mutability [16280,16284]" dest="state_mutability [16763,16767]"/>
  <match src="(: ( [18486,18487]" dest="(: ( [17998,17999]"/>
  <match src="identifier: length [112239,112245]" dest="identifier: length [111834,111840]"/>
  <match src="array_access [98606,98625]" dest="array_access [96927,96946]"/>
  <match src="array_access [23933,24004]" dest="array_access [38807,38874]"/>
  <match src="call_expression [3584,3643]" dest="call_expression [3689,3748]"/>
  <match src="mstore: mstore [53818,53824]" dest="mstore: mstore [50817,50823]"/>
  <match src="type_name [70158,70165]" dest="type_name [67641,67648]"/>
  <match src="string_literal [91911,91957]" dest="string_literal [90039,90085]"/>
  <match src="): ) [109892,109893]" dest="): ) [108308,108309]"/>
  <match src="primitive_type [86250,86254]" dest="primitive_type [84217,84221]"/>
  <match src="identifier: _tokenId [36493,36501]" dest="identifier: _tokenId [32841,32849]"/>
  <match src="identifier: require [102207,102214]" dest="identifier: require [100641,100648]"/>
  <match src="bytes32: bytes32 [84307,84314]" dest="bytes32: bytes32 [82210,82217]"/>
  <match src="address: address [84948,84955]" dest="address: address [82869,82876]"/>
  <match src="parameter [48159,48180]" dest="parameter [45028,45049]"/>
  <match src="yul_switch_statement [54615,54815]" dest="yul_switch_statement [51628,51834]"/>
  <match src=",: , [59038,59039]" dest=",: , [56177,56178]"/>
  <match src="array_access [73511,73529]" dest="array_access [71085,71103]"/>
  <match src="returns: returns [64607,64614]" dest="returns: returns [61917,61924]"/>
  <match src="call_argument [11947,11990]" dest="call_argument [12910,12953]"/>
  <match src="member_expression [97084,97100]" dest="member_expression [95350,95366]"/>
  <match src="return_statement [66862,66909]" dest="return_statement [64247,64294]"/>
  <match src="identifier: _setRequestGasLimit [105696,105715]" dest="identifier: _setRequestGasLimit [120147,120166]"/>
  <match src="): ) [46276,46277]" dest="): ) [43102,43103]"/>
  <match src="library: library [77490,77497]" dest="library: library [75206,75213]"/>
  <match src="comment: // since solidity mapping introduces another level of addressing, such slot change is safe [34803,34893]" dest="comment: // since solidity mapping introduces another level of addressing, such slot change is safe [31109,31199]"/>
  <match src="bytes: bytes [89800,89805]" dest="bytes: bytes [87867,87872]"/>
  <match src="if: if [112563,112565]" dest="if: if [111477,111479]"/>
  <match src="type_name [21378,21385]" dest="type_name [20918,20925]"/>
  <match src="uint256: uint256 [74209,74216]" dest="uint256: uint256 [71809,71816]"/>
  <match src="comment: /**      * @dev Sets the custom metadata for the given ERC721 token.      * Only owner can call this method.      * Useful when original NFT token does not implement neither name() nor symbol() methods.      * @param _token address of the token contract.      * @param _name custom name for the token contract.      * @param _symbol custom symbol for the token contract.      */ [44551,44929]" dest="comment: /**      * @dev Sets the custom metadata for the given ERC721 token.      * Only owner can call this method.      * Useful when original NFT token does not implement neither name() nor symbol() methods.      * @param _token address of the token contract.      * @param _name custom name for the token contract.      * @param _symbol custom symbol for the token contract.      */ [41342,41727]"/>
  <match src="expression_statement [79053,79093]" dest="expression_statement [76808,76848]"/>
  <match src=".: . [102250,102251]" dest=".: . [100684,100685]"/>
  <match src="number_literal: 0 [51042,51043]" dest="number_literal: 0 [47990,47991]"/>
  <match src="comment: /**      * @dev Internal function for updating a pair of addresses for the bridged token.      * @param _nativeToken address of the native token contract on the other side.      * @param _bridgedToken address of the created bridged token contract on this side.      */ [48323,48591]" dest="comment: /**      * @dev Internal function for updating a pair of addresses for the bridged token.      * @param _nativeToken address of the native token contract on the other side.      * @param _bridgedToken address of the created bridged token contract on this side.      */ [45196,45468]"/>
  <match src="parameter [21378,21392]" dest="parameter [20918,20932]"/>
  <match src="identifier: this [19627,19631]" dest="identifier: this [19303,19307]"/>
  <match src="identifier: isContract [12727,12737]" dest="identifier: isContract [13705,13715]"/>
  <match src="call_expression [64662,64708]" dest="call_expression [61974,62020]"/>
  <match src="=: = [16967,16968]" dest="=: = [17163,17164]"/>
  <match src="(: ( [39192,39193]" dest="(: ( [35603,35604]"/>
  <match src="indexed: indexed [29399,29406]" dest="indexed: indexed [25552,25559]"/>
  <match src="call_argument [84995,85005]" dest="call_argument [82917,82927]"/>
  <match src="bool: bool [35155,35159]" dest="bool: bool [31467,31471]"/>
  <match src="): ) [91908,91909]" dest="): ) [90036,90037]"/>
  <match src="identifier: _tokenId [115730,115738]" dest="identifier: _tokenId [114338,114346]"/>
  <match src="return_type_definition [29806,29829]" dest="return_type_definition [25973,25996]"/>
  <match src="number_literal: 0 [107426,107427]" dest="number_literal: 0 [105281,105282]"/>
  <match src="call_argument [109171,109177]" dest="call_argument [107031,107037]"/>
  <match src="type_name [30557,30564]" dest="type_name [26740,26747]"/>
  <match src=",: , [39693,39694]" dest=",: , [36126,36127]"/>
  <match src="(: ( [100558,100559]" dest="(: ( [98932,98933]"/>
  <match src="&quot;: &quot; [66879,66880]" dest="&quot;: &quot; [64264,64265]"/>
  <match src=".: . [70835,70836]" dest=".: . [68336,68337]"/>
  <match src="}: } [2597,2598]" dest="}: } [2677,2678]"/>
  <match src="array_access [2520,2591]" dest="array_access [2599,2670]"/>
  <match src="{: { [49862,49863]" dest="{: { [46774,46775]"/>
  <match src="): ) [112545,112546]" dest="): ) [112167,112168]"/>
  <match src="return_type_definition [32557,32571]" dest="return_type_definition [28799,28813]"/>
  <match src="call_argument [93483,93485]" dest="call_argument [91655,91657]"/>
  <match src="): ) [106184,106185]" dest="): ) [104012,104013]"/>
  <match src="call_argument [91460,91467]" dest="call_argument [89574,89581]"/>
  <match src="array_access [45711,45813]" dest="array_access [42527,42629]"/>
  <match src="function_definition [65430,65617]" dest="function_definition [62771,62963]"/>
  <match src=",: , [23563,23564]" dest=",: , [38443,38444]"/>
  <match src="call_argument [88596,88627]" dest="call_argument [86621,86652]"/>
  <match src="expression_statement [49649,49672]" dest="expression_statement [46554,46577]"/>
  <match src="expression_statement [14595,14644]" dest="expression_statement [15505,15544]"/>
  <match src="): ) [102007,102008]" dest="): ) [100432,100433]"/>
  <match src="call_argument [90046,90054]" dest="call_argument [88118,88126]"/>
  <match src="{: { [78888,78889]" dest="{: { [76640,76641]"/>
  <match src="[: [ [2884,2885]" dest="[: [ [2972,2973]"/>
  <match src="comment: // This modifies the order of the array, as noted in {at}. [79913,79971]" dest="comment: // This modifies the order of the array, as noted in {at}. [77688,77746]"/>
  <match src="{: { [48212,48213]" dest="{: { [45081,45082]"/>
  <match src="{: { [19340,19341]" dest="{: { [18981,18982]"/>
  <match src="call_argument [92931,92938]" dest="call_argument [91088,91095]"/>
  <match src="variable_declaration_statement [8510,8599]" dest="variable_declaration_statement [9399,9488]"/>
  <match src="bool: bool [75969,75973]" dest="bool: bool [73630,73634]"/>
  <match src="comment: /**      * @dev Get the AMB interface for the bridge contract address      * @return AMB interface for the bridge contract address      */ [15830,15968]" dest="comment: /**      * @dev Get the AMB interface for the bridge contract address      * @return AMB interface for the bridge contract address      */ [16301,16442]"/>
  <match src="identifier: ERC721Relayer [35899,35912]" dest="identifier: ERC721Relayer [32233,32246]"/>
  <match src="(: ( [100035,100036]" dest="(: ( [98395,98396]"/>
  <match src="state_mutability [50896,50903]" dest="state_mutability [47841,47848]"/>
  <match src="call_argument [113339,113349]" dest="call_argument [109492,109502]"/>
  <match src="return_statement [100551,100587]" dest="return_statement [98925,98961]"/>
  <match src=",: , [74353,74354]" dest=",: , [71959,71960]"/>
  <match src="string: string [42930,42936]" dest="string: string [39657,39663]"/>
  <match src="call_argument [107626,107632]" dest="call_argument [105485,105491]"/>
  <match src="modifier_invocation [15291,15300]" dest="modifier_invocation [16214,16223]"/>
  <match src="address: address [116374,116381]" dest="address: address [115001,115008]"/>
  <match src="array_access [92241,92273]" dest="array_access [90380,90412]"/>
  <match src="identifier: token [21911,21916]" dest="identifier: token [21462,21467]"/>
  <match src="member_expression [46203,46220]" dest="member_expression [43029,43046]"/>
  <match src="{: { [47725,47726]" dest="{: { [44585,44586]"/>
  <match src="identifier: BRIDGE_CONTRACT [13804,13819]" dest="identifier: BRIDGE_CONTRACT [14826,14841]"/>
  <match src=",: , [40810,40811]" dest=",: , [37285,37286]"/>
  <match src="function: function [75892,75900]" dest="function: function [73553,73561]"/>
  <match src="function: function [68719,68727]" dest="function: function [66155,66163]"/>
  <match src="(: ( [110689,110690]" dest="(: ( [109183,109184]"/>
  <match src="function_body [15301,15368]" dest="function_body [16224,16293]"/>
  <match src="number_literal: 20 [39209,39211]" dest="number_literal: 20 [35620,35622]"/>
  <match src="type_cast_expression [88794,88804]" dest="type_cast_expression [86826,86836]"/>
  <match src="return_type_definition [12686,12708]" dest="return_type_definition [13663,13685]"/>
  <match src="type_name [318,324]" dest="type_name [328,334]"/>
  <match src="identifier: _bridgedToken [109700,109713]" dest="identifier: _bridgedToken [107645,107658]"/>
  <match src="identifier: a [64675,64676]" dest="identifier: a [61987,61988]"/>
  <match src="parameter [36974,36991]" dest="parameter [33336,33353]"/>
  <match src="comment: /**      * @dev Handles the bridged token for the already registered token pair.      * Checks that the bridged token is inside the execution limits and invokes the Mint accordingly.      * @param _token address of the native ERC721 token on the other side.      * @param _recipient address that will receive the tokens.      * @param _tokenId unique id of the bridged token.      * @param _tokenURI URI for the bridged token instance.      */ [107832,108275]" dest="comment: /**      * @dev Handles the bridged token for the already registered token pair.      * Checks that the bridged token is inside the execution limits and invokes the Mint accordingly.      * @param _token address of the native ERC721 token on the other side.      * @param _recipient address that will receive the tokens.      * @param _tokenId unique id of the bridged token.      * @param _tokenURI URI for the bridged token instance.      */ [105660,106110]"/>
  <match src="identifier: _data [93496,93501]" dest="identifier: _data [91668,91673]"/>
  <match src="): ) [92835,92836]" dest="): ) [90990,90991]"/>
  <match src="address: address [47289,47296]" dest="address: address [44142,44149]"/>
  <match src="virtual: virtual [96829,96836]" dest="virtual: virtual [95087,95094]"/>
  <match src="identifier: keyIndex [79629,79637]" dest="identifier: keyIndex [77401,77409]"/>
  <match src="): ) [90739,90740]" dest="): ) [88829,88830]"/>
  <match src="return_type_definition [6374,6391]" dest="return_type_definition [7197,7214]"/>
  <match src="]: ] [97773,97774]" dest="]: ] [96067,96068]"/>
  <match src="call_argument [107741,107751]" dest="call_argument [105565,105575]"/>
  <match src="call_argument [64670,64676]" dest="call_argument [61982,61988]"/>
  <match src="identifier: to [29019,29021]" dest="identifier: to [25162,25164]"/>
  <match src="(: ( [1519,1520]" dest="(: ( [1569,1570]"/>
  <match src="{: { [57402,57403]" dest="{: { [54500,54501]"/>
  <match src=".: . [74429,74430]" dest=".: . [72036,72037]"/>
  <match src="visibility [6615,6623]" dest="visibility [7446,7454]"/>
  <match src="type_name [111527,111534]" dest="type_name [110864,110871]"/>
  <match src="identifier: EternalStorage [224,238]" dest="identifier: EternalStorage [232,246]"/>
  <match src="identifier: messageSourceChainId [6592,6612]" dest="identifier: messageSourceChainId [7423,7443]"/>
  <match src="uint256: uint256 [72952,72959]" dest="uint256: uint256 [70510,70517]"/>
  <match src="pure: pure [65049,65053]" dest="pure: pure [62376,62380]"/>
  <match src="memory: memory [107189,107195]" dest="memory: memory [105039,105045]"/>
  <match src="primitive_type [98231,98238]" dest="primitive_type [96543,96550]"/>
  <match src="type_name [79985,79992]" dest="type_name [77762,77769]"/>
  <match src="): ) [68780,68781]" dest="): ) [66216,66217]"/>
  <match src="contract: contract [49193,49201]" dest="contract: contract [46089,46097]"/>
  <match src="call_expression [116345,116360]" dest="call_expression [114972,114987]"/>
  <match src="visibility [91175,91181]" dest="visibility [89280,89286]"/>
  <match src="parameter [89393,89406]" dest="parameter [87447,87460]"/>
  <match src="primitive_type [55533,55540]" dest="primitive_type [52582,52589]"/>
  <match src="(: ( [84652,84653]" dest="(: ( [82566,82567]"/>
  <match src="=: = [2942,2943]" dest="=: = [3030,3031]"/>
  <match src="(: ( [48731,48732]" dest="(: ( [45610,45611]"/>
  <match src="parameter [993,997]" dest="parameter [1022,1026]"/>
  <match src="bytes4: bytes4 [100533,100539]" dest="bytes4: bytes4 [98906,98912]"/>
  <match src="): ) [68153,68154]" dest="): ) [65573,65574]"/>
  <match src="address: address [111527,111534]" dest="address: address [110864,110871]"/>
  <match src="external: external [32543,32551]" dest="external: external [28785,28793]"/>
  <match src="call_argument [97509,97514]" dest="call_argument [95793,95798]"/>
  <match src="call_expression [48705,48766]" dest="call_expression [45584,45645]"/>
  <match src="call_argument [116315,116323]" dest="call_argument [114941,114949]"/>
  <match src="member_expression [81763,81775]" dest="member_expression [79590,79602]"/>
  <match src="identifier: _name [118674,118679]" dest="identifier: _name [116937,116942]"/>
  <match src="parameter [23907,23914]" dest="parameter [38783,38787]"/>
  <match src="expression_statement [94484,94513]" dest="expression_statement [92678,92707]"/>
  <match src="): ) [72959,72960]" dest="): ) [70517,70518]"/>
  <match src="visibility [93081,93087]" dest="visibility [91244,91250]"/>
  <match src="bytes32: bytes32 [78585,78592]" dest="bytes32: bytes32 [76332,76339]"/>
  <match src="): ) [8768,8769]" dest="): ) [9660,9661]"/>
  <match src="primitive_type [46780,46785]" dest="primitive_type [43617,43622]"/>
  <match src="type_name [91160,91167]" dest="type_name [89265,89272]"/>
  <match src="binary_expression [111687,111729]" dest="binary_expression [111019,111061]"/>
  <match src="identifier: _inner [76006,76012]" dest="identifier: _inner [73668,73674]"/>
  <match src="comment: /**  * @title BasicNFTOmnibridge  * @dev Commong functionality for multi-token mediator for ERC721 tokens intended to work on top of AMB bridge.  */ [104097,104245]" dest="comment: /**  * @title BasicNFTOmnibridge  * @dev Commong functionality for multi-token mediator for ERC721 tokens intended to work on top of AMB bridge.  */ [102602,102753]"/>
  <match src="visibility [30600,30608]" dest="visibility [26783,26791]"/>
  <match src="parameter [31172,31187]" dest="parameter [27371,27386]"/>
  <match src="variable_declaration_statement [112064,112107]" dest="variable_declaration_statement [111727,111770]"/>
  <match src="parameter [7190,7207]" dest="parameter [8038,8055]"/>
  <match src="=: = [107097,107098]" dest="=: = [104945,104946]"/>
  <match src="type_name [55595,55602]" dest="type_name [52645,52652]"/>
  <match src="(: ( [58632,58633]" dest="(: ( [55760,55761]"/>
  <match src="solidity_version_comparison_operator [28759,28761]" dest="solidity_version_comparison_operator [24892,24894]"/>
  <match src="call_argument [102648,102656]" dest="call_argument [101093,101101]"/>
  <match src=".: . [72046,72047]" dest=".: . [69575,69576]"/>
  <match src="call_expression [111946,111979]" dest="call_expression [110102,110135]"/>
  <match src="&quot;: &quot; [89669,89670]" dest="&quot;: &quot; [87731,87732]"/>
  <match src="{: { [13772,13773]" dest="{: { [14793,14794]"/>
  <match src="override: override [40673,40681]" dest="override: override [37141,37149]"/>
  <match src="yul_evm_builtin [53113,53125]" dest="yul_evm_builtin [50098,50110]"/>
  <match src="identifier: isTokenRegistered [111761,111778]" dest="identifier: isTokenRegistered [110171,110188]"/>
  <match src="primitive_type [106958,106965]" dest="primitive_type [104802,104809]"/>
  <match src="primitive_type [65018,65025]" dest="primitive_type [62345,62352]"/>
  <match src=",: , [103868,103869]" dest=",: , [102350,102351]"/>
  <match src="return: return [58604,58610]" dest="return: return [55732,55738]"/>
  <match src="type_cast_expression [9782,9795]" dest="type_cast_expression [10694,10707]"/>
  <match src="function_body [2185,2282]" dest="function_body [2255,2354]"/>
  <match src="(: ( [46942,46943]" dest="(: ( [43781,43782]"/>
  <match src="call_argument [117307,117317]" dest="call_argument [115830,115840]"/>
  <match src="parameter [67483,67490]" dest="parameter [64883,64890]"/>
  <match src="return_statement [63021,63062]" dest="return_statement [60282,60323]"/>
  <match src="contract_body [34614,35642]" dest="contract_body [30916,31962]"/>
  <match src="]: ] [100687,100688]" dest="]: ] [99065,99066]"/>
  <match src="type_name [109030,109037]" dest="type_name [106886,106893]"/>
  <match src="call_expression [57557,57601]" dest="call_expression [54658,54702]"/>
  <match src="(: ( [100147,100148]" dest="(: ( [98510,98511]"/>
  <match src="call_argument [93151,93153]" dest="call_argument [91315,91317]"/>
  <match src="string: string [46741,46747]" dest="string: string [43577,43583]"/>
  <match src="=: = [67550,67551]" dest="=: = [64952,64953]"/>
  <match src="comment: /**      * @dev Returns the account approved for `tokenId` token.      *      * Requirements:      *      * - `tokenId` must exist.      */ [31722,31861]" dest="comment: /**      * @dev Returns the account approved for `tokenId` token.      *      * Requirements:      *      * - `tokenId` must exist.      */ [27938,28083]"/>
  <match src="type_name [55360,55383]" dest="type_name [52405,52428]"/>
  <match src=",: , [118774,118775]" dest=",: , [117045,117046]"/>
  <match src="): ) [116476,116477]" dest="): ) [115105,115106]"/>
  <match src="(: ( [36383,36384]" dest="(: ( [32730,32731]"/>
  <match src="pure: pure [42916,42920]" dest="pure: pure [39643,39647]"/>
  <match src="}: } [5381,5382]" dest="}: } [5556,5557]"/>
  <match src="): ) [45537,45538]" dest="): ) [42351,42352]"/>
  <match src="identifier: _name [101845,101850]" dest="identifier: _name [100263,100268]"/>
  <match src="primitive_type [117075,117082]" dest="primitive_type [115617,115624]"/>
  <match src="modifier_invocation [107053,107065]" dest="modifier_invocation [104900,104912]"/>
  <match src="return: return [73862,73868]" dest="return: return [71452,71458]"/>
  <match src="type_name [49237,49244]" dest="type_name [46134,46141]"/>
  <match src="address: address [19478,19485]" dest="address: address [19142,19149]"/>
  <match src="return_statement [75462,75502]" dest="return_statement [73107,73147]"/>
  <match src="return_statement [74174,74226]" dest="return_statement [71774,71826]"/>
  <match src="contract_body [33391,33580]" dest="contract_body [29656,29851]"/>
  <match src="primitive_type [38543,38550]" dest="primitive_type [34940,34947]"/>
  <match src="return: return [100180,100186]" dest="return: return [98544,98550]"/>
  <match src="variable_declaration_statement [43390,43417]" dest="variable_declaration_statement [40131,40158]"/>
  <match src="modifier_invocation [103915,103924]" dest="modifier_invocation [102397,102406]"/>
  <match src="call_argument [112205,112209]" dest="call_argument [111800,111804]"/>
  <match src="primitive_type [16602,16609]" dest="primitive_type [118382,118389]"/>
  <match src="uint256: uint256 [36291,36298]" dest="uint256: uint256 [32635,32642]"/>
  <match src="=: = [2267,2268]" dest="=: = [2338,2339]"/>
  <match src="): ) [107042,107043]" dest="): ) [104889,104890]"/>
  <match src="type_name [101380,101387]" dest="type_name [99777,99784]"/>
  <match src="identifier: _token [117749,117755]" dest="identifier: _token [116483,116489]"/>
  <match src=",: , [111059,111060]" dest=",: , [120845,120846]"/>
  <match src="): ) [83862,83863]" dest="): ) [81752,81753]"/>
  <match src="comment: /**      * @dev Tells the receiver of a message sent to the AMB bridge.      * @return address of the receiver.      */ [3670,3789]" dest="comment: /**      * @dev Tells the receiver of a message sent to the AMB bridge.      * @return address of the receiver.      */ [3778,3900]"/>
  <match src="(: ( [67482,67483]" dest="(: ( [64882,64883]"/>
  <match src="}: } [940,941]" dest="}: } [967,968]"/>
  <match src="memory: memory [93302,93308]" dest="memory: memory [91472,91478]"/>
  <match src="true: true [100187,100191]" dest="true: true [98551,98555]"/>
  <match src="event: event [18904,18909]" dest="event: event [18538,18543]"/>
  <match src="call_expression [48818,48872]" dest="call_expression [45698,45752]"/>
  <match src="binary_expression [95452,95539]" dest="binary_expression [93672,93759]"/>
  <match src="type_name [60814,60821]" dest="type_name [58007,58014]"/>
  <match src="call_argument [93391,93398]" dest="call_argument [91562,91569]"/>
  <match src="call_argument [45125,45137]" dest="call_argument [41929,41941]"/>
  <match src="type_name [109054,109061]" dest="type_name [106911,106918]"/>
  <match src="type_name [70309,70337]" dest="type_name [67796,67824]"/>
  <match src=",: , [71127,71128]" dest=",: , [68641,68642]"/>
  <match src="primitive_type [85372,85379]" dest="primitive_type [83319,83326]"/>
  <match src="uint256: uint256 [93279,93286]" dest="uint256: uint256 [91449,91456]"/>
  <match src="identifier: lock [34629,34633]" dest="identifier: lock [30932,30936]"/>
  <match src="variable_declaration_statement [71741,71784]" dest="variable_declaration_statement [69265,69308]"/>
  <match src="identifier: onlyOwner [14953,14962]" dest="identifier: onlyOwner [15868,15877]"/>
  <match src="returns: returns [20839,20846]" dest="returns: returns [20392,20399]"/>
  <match src="function_body [103925,103975]" dest="function_body [102407,102459]"/>
  <match src="user_defined_type [80318,80326]" dest="user_defined_type [78101,78109]"/>
  <match src="): ) [21144,21145]" dest="): ) [20705,20706]"/>
  <match src="array_access [42541,42619]" dest="array_access [39171,39238]"/>
  <match src="primitive_type [24318,24325]" dest="primitive_type [23947,23954]"/>
  <match src="): ) [2588,2589]" dest="): ) [2667,2668]"/>
  <match src="identifier: _key [81908,81912]" dest="identifier: _key [79738,79742]"/>
  <match src="primitive_type [66214,66221]" dest="primitive_type [63580,63587]"/>
  <match src="identifier: _setTokenImage [50089,50103]" dest="identifier: _setTokenImage [47009,47023]"/>
  <match src="=: = [82471,82472]" dest="=: = [80319,80320]"/>
  <match src="parameter [33424,33439]" dest="parameter [29690,29705]"/>
  <match src="{: { [35195,35196]" dest="{: { [31508,31509]"/>
  <match src="identifier: approve [91365,91372]" dest="identifier: approve [89478,89485]"/>
  <match src="): ) [46716,46717]" dest="): ) [43552,43553]"/>
  <match src="function: function [108280,108288]" dest="function: function [106116,106124]"/>
  <match src="): ) [114360,114361]" dest="): ) [112969,112970]"/>
  <match src="identifier: _messageId [3631,3641]" dest="identifier: _messageId [3736,3746]"/>
  <match src="solidity_pragma_token [35744,35758]" dest="solidity_pragma_token [32068,32082]"/>
  <match src="): ) [91242,91243]" dest="): ) [89348,89349]"/>
  <match src="]: ] [98624,98625]" dest="]: ] [96945,96946]"/>
  <match src="identifier: require [115017,115024]" dest="identifier: require [115712,115719]"/>
  <match src="(: ( [40632,40633]" dest="(: ( [37097,37098]"/>
  <match src="==: == [1531,1533]" dest="==: == [1581,1583]"/>
  <match src="): ) [90066,90067]" dest="): ) [88138,88139]"/>
  <match src="(: ( [90045,90046]" dest="(: ( [88117,88118]"/>
  <match src="primitive_type [49604,49611]" dest="primitive_type [46508,46515]"/>
  <match src="uint256: uint256 [91225,91232]" dest="uint256: uint256 [89331,89338]"/>
  <match src="identifier: safeTransferFrom [33158,33174]" dest="identifier: safeTransferFrom [29415,29431]"/>
  <match src="identifier: interfaceId [62962,62973]" dest="identifier: interfaceId [60222,60233]"/>
  <match src="expression_statement [37043,37083]" dest="expression_statement [33408,33448]"/>
  <match src="type_name [92101,92108]" dest="type_name [90237,90244]"/>
  <match src="identifier: key [78776,78779]" dest="identifier: key [76525,76528]"/>
  <match src="primitive_type [14919,14926]" dest="primitive_type [15834,15841]"/>
  <match src="yul_evm_builtin [13372,13378]" dest="yul_evm_builtin [14364,14370]"/>
  <match src="solidity_pragma_token [27937,27952]" dest="solidity_pragma_token [24044,24059]"/>
  <match src="number_literal: 48 [43509,43511]" dest="number_literal: 48 [40253,40255]"/>
  <match src="bytes: bytes [110839,110844]" dest="bytes: bytes [110284,110289]"/>
  <match src="uint256: uint256 [60814,60821]" dest="uint256: uint256 [58007,58014]"/>
  <match src="call_argument [2545,2589]" dest="call_argument [2624,2668]"/>
  <match src="array_access [92241,92283]" dest="array_access [90380,90422]"/>
  <match src="identifier: data [60114,60118]" dest="identifier: data [57282,57286]"/>
  <match src="type_name [89682,89688]" dest="type_name [87746,87752]"/>
  <match src="(: ( [8185,8186]" dest="(: ( [9069,9070]"/>
  <match src="solidity: solidity [42712,42720]" dest="solidity: solidity [39430,39438]"/>
  <match src="function: function [7148,7156]" dest="function: function [7995,8003]"/>
  <match src=",: , [82186,82187]" dest=",: , [80027,80028]"/>
  <match src="memory: memory [56365,56371]" dest="memory: memory [53435,53441]"/>
  <match src="call_argument [21204,21218]" dest="call_argument [20766,20780]"/>
  <match src="struct_expression [12891,12921]" dest="struct_expression [13872,13902]"/>
  <match src="primitive_type [5672,5679]" dest="primitive_type [5855,5862]"/>
  <match src="): ) [112981,112982]" dest="): ) [112932,112933]"/>
  <match src="identifier: _image [50166,50172]" dest="identifier: _image [47087,47093]"/>
  <match src="type_name [107182,107188]" dest="type_name [105032,105038]"/>
  <match src="function: function [33503,33511]" dest="function: function [29773,29781]"/>
  <match src="solidity_version: 0.7.0 [7498,7503]" dest="solidity_version: 0.7.0 [8359,8364]"/>
  <match src="): ) [10912,10913]" dest="): ) [11849,11850]"/>
  <match src="type_name [65516,65523]" dest="type_name [62857,62864]"/>
  <match src="identifier: sender [38659,38665]" dest="identifier: sender [35058,35064]"/>
  <match src="return: return [65602,65608]" dest="return: return [62947,62953]"/>
  <match src="parameter [17535,17559]" dest="parameter [118678,118695]"/>
  <match src="type_name [82372,82379]" dest="type_name [80219,80226]"/>
  <match src="): ) [101421,101422]" dest="): ) [99818,99819]"/>
  <match src="=&gt;: =&gt; [370,372]" dest="=&gt;: =&gt; [381,383]"/>
  <match src="{: { [67492,67493]" dest="{: { [64892,64893]"/>
  <match src="state_mutability [75057,75061]" dest="state_mutability [72684,72688]"/>
  <match src="function_body [101861,101910]" dest="function_body [100279,100330]"/>
  <match src="(: ( [82507,82508]" dest="(: ( [80356,80357]"/>
  <match src="primitive_type [86123,86130]" dest="primitive_type [84087,84094]"/>
  <match src="primitive_type [47716,47723]" dest="primitive_type [44576,44583]"/>
  <match src="function_body [2503,2598]" dest="function_body [2581,2678]"/>
  <match src="identifier: value [20552,20557]" dest="identifier: value [20097,20102]"/>
  <match src="identifier: Ownable [49223,49230]" dest="identifier: Ownable [46119,46126]"/>
  <match src="solidity: solidity [27937,27945]" dest="solidity: solidity [24044,24052]"/>
  <match src="user_defined_type [58139,58153]" dest="user_defined_type [55258,55272]"/>
  <match src="): ) [6613,6614]" dest="): ) [7444,7445]"/>
  <match src="call_expression [18245,18273]" dest="call_expression [17750,17778]"/>
  <match src="primitive_type [25564,25571]" dest="primitive_type [37923,37930]"/>
  <match src="(: ( [75691,75692]" dest="(: ( [73345,73346]"/>
  <match src="variable_declaration [100211,100234]" dest="variable_declaration [98577,98600]"/>
  <match src="if_statement [12937,13517]" dest="if_statement [13919,14514]"/>
  <match src="type_name [39050,39055]" dest="type_name [35458,35463]"/>
  <match src="member_expression [91038,91057]" dest="member_expression [89137,89156]"/>
  <match src=".: . [45683,45684]" dest=".: . [42498,42499]"/>
  <match src=",: , [58664,58665]" dest=",: , [55792,55793]"/>
  <match src="visibility [49832,49838]" dest="visibility [46744,46750]"/>
  <match src="member_expression [12891,12902]" dest="member_expression [13872,13883]"/>
  <match src=",: , [109072,109073]" dest=",: , [106929,106930]"/>
  <match src="primitive_type [97138,97145]" dest="primitive_type [95406,95413]"/>
  <match src="}: } [33249,33250]" dest="}: } [29507,29508]"/>
  <match src="==: == [98326,98328]" dest="==: == [96639,96641]"/>
  <match src="pragma_directive [118086,118108]" dest="pragma_directive [117312,117334]"/>
  <match src="primitive_type [40738,40744]" dest="primitive_type [37209,37215]"/>
  <match src="identifier: _bridgeContract [14927,14942]" dest="identifier: _bridgeContract [15842,15857]"/>
  <match src="type_name [59022,59029]" dest="type_name [56161,56168]"/>
  <match src="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [75514,75671]" dest="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [73162,73324]"/>
  <match src=".: . [39198,39199]" dest=".: . [35609,35610]"/>
  <match src="(: ( [29390,29391]" dest="(: ( [25543,25544]"/>
  <match src="function_body [92525,92584]" dest="function_body [90671,90732]"/>
  <match src="}: } [84421,84422]" dest="}: } [82326,82327]"/>
  <match src="call_expression [38511,38567]" dest="call_expression [34908,34964]"/>
  <match src="identifier: tokenId [92838,92845]" dest="identifier: tokenId [90993,91000]"/>
  <match src="call_expression [105770,105792]" dest="call_expression [120223,120245]"/>
  <match src="constructor: constructor [88273,88284]" dest="constructor: constructor [86291,86302]"/>
  <match src="call_expression [36407,36502]" dest="call_expression [32755,32850]"/>
  <match src="(: ( [96307,96308]" dest="(: ( [94549,94550]"/>
  <match src="solidity_pragma_token [104066,104080]" dest="solidity_pragma_token [102555,102569]"/>
  <match src="return_type_definition [67474,67491]" dest="return_type_definition [64874,64891]"/>
  <match src="identifier: require [17580,17587]" dest="identifier: require [118717,118724]"/>
  <match src="identifier: _tokenId [110750,110758]" dest="identifier: _tokenId [109245,109253]"/>
  <match src="[: [ [92273,92274]" dest="[: [ [90412,90413]"/>
  <match src="identifier: owner [102286,102291]" dest="identifier: owner [100720,100725]"/>
  <match src="(: ( [91224,91225]" dest="(: ( [89330,89331]"/>
  <match src="parameter [16837,16860]" dest="parameter [17031,17054]"/>
  <match src="): ) [2852,2853]" dest="): ) [2939,2940]"/>
  <match src="bytes: bytes [10863,10868]" dest="bytes: bytes [11800,11805]"/>
  <match src="address: address [42486,42493]" dest="address: address [39115,39122]"/>
  <match src="identifier: _token [45804,45810]" dest="identifier: _token [42620,42626]"/>
  <match src="(: ( [84406,84407]" dest="(: ( [82310,82311]"/>
  <match src="parameter [59048,59058]" dest="parameter [56188,56198]"/>
  <match src=".: . [85453,85454]" dest=".: . [83402,83403]"/>
  <match src=",: , [40187,40188]" dest=",: , [36640,36641]"/>
  <match src="]: ] [73528,73529]" dest="]: ] [71102,71103]"/>
  <match src="(: ( [117257,117258]" dest="(: ( [115779,115780]"/>
  <match src="inheritance_specifier [60393,60400]" dest="inheritance_specifier [57575,57582]"/>
  <match src="storage: storage [75918,75925]" dest="storage: storage [73579,73586]"/>
  <match src="(: ( [46372,46373]" dest="(: ( [43199,43200]"/>
  <match src="string: string [45738,45744]" dest="string: string [42554,42560]"/>
  <match src="identifier: mediatorContractOnOtherSide [14680,14707]" dest="identifier: mediatorContractOnOtherSide [15588,15615]"/>
  <match src="identifier: tokenId [98587,98594]" dest="identifier: tokenId [96906,96913]"/>
  <match src=".: . [18261,18262]" dest=".: . [17766,17767]"/>
  <match src="call_expression [59106,59156]" dest="call_expression [56248,56298]"/>
  <match src="pragma_directive [28744,28767]" dest="pragma_directive [24877,24900]"/>
  <match src="uint256: uint256 [12312,12319]" dest="uint256: uint256 [13284,13291]"/>
  <match src="}: } [89438,89439]" dest="}: } [87494,87495]"/>
  <match src="internal: internal [13951,13959]" dest="internal: internal [14974,14982]"/>
  <match src="): ) [11853,11854]" dest="): ) [12815,12816]"/>
  <match src="identifier: onERC721Received [36225,36241]" dest="identifier: onERC721Received [32566,32582]"/>
  <match src="type_name [62360,62366]" dest="type_name [59602,59608]"/>
  <match src="identifier: keccak256 [21177,21186]" dest="identifier: keccak256 [20739,20748]"/>
  <match src="parameter [88286,88305]" dest="parameter [86304,86323]"/>
  <match src="emit_statement [97124,97163]" dest="emit_statement [95392,95431]"/>
  <match src="parameter [82978,83006]" dest="parameter [80844,80872]"/>
  <match src=".: . [39243,39244]" dest=".: . [35655,35656]"/>
  <match src="): ) [49670,49671]" dest="): ) [46575,46576]"/>
  <match src="): ) [109177,109178]" dest="): ) [107037,107038]"/>
  <match src="identifier: _token [38100,38106]" dest="identifier: _token [34487,34493]"/>
  <match src="contract_body [58154,59175]" dest="contract_body [55273,56319]"/>
  <match src="call_expression [99017,99033]" dest="call_expression [97354,97370]"/>
  <match src=",: , [90685,90686]" dest=",: , [88775,88776]"/>
  <match src="state_mutability [7401,7405]" dest="state_mutability [8256,8260]"/>
  <match src="(: ( [64615,64616]" dest="(: ( [61925,61926]"/>
  <match src="identifier: value [74133,74138]" dest="identifier: value [71732,71737]"/>
  <match src="): ) [96446,96447]" dest="): ) [94689,94690]"/>
  <match src="primitive_type [100079,100084]" dest="primitive_type [98439,98444]"/>
  <match src="address: address [26260,26267]" dest="address: address [22121,22128]"/>
  <match src="if_statement [79625,80911]" dest="if_statement [77397,78710]"/>
  <match src="visibility [40992,41000]" dest="visibility [37474,37482]"/>
  <match src="]: ] [114103,114104]" dest="]: ] [22789,22790]"/>
  <match src="bytes: bytes [89972,89977]" dest="bytes: bytes [88043,88048]"/>
  <match src="assignment_expression [107364,107377]" dest="assignment_expression [105218,105231]"/>
  <match src="array_access [81865,81884]" dest="array_access [79694,79713]"/>
  <match src="identifier: to [100691,100693]" dest="identifier: to [99069,99071]"/>
  <match src="(: ( [107326,107327]" dest="(: ( [105179,105180]"/>
  <match src="comment: // Even though this is not the same as boolStorage[keccak256(abi.encodePacked(&quot;lock&quot;))], [35209,35297]" dest="comment: // Even though this is not the same as boolStorage[keccak256(abi.encodePacked(&quot;lock&quot;))], [31523,31611]"/>
  <match src="visibility [55804,55811]" dest="visibility [52859,52866]"/>
  <match src="expression_statement [99425,99445]" dest="expression_statement [97772,97792]"/>
  <match src="identifier: token [40295,40300]" dest="identifier: token [36752,36757]"/>
  <match src="identifier: mediatorContractOnOtherSide [111700,111727]" dest="identifier: mediatorContractOnOtherSide [111032,111059]"/>
  <match src="type_name [44102,44108]" dest="type_name [40873,40879]"/>
  <match src=".: . [89064,89065]" dest=".: . [87105,87106]"/>
  <match src="parameter [72724,72737]" dest="parameter [70275,70288]"/>
  <match src="inheritance_specifier [55289,55294]" dest="inheritance_specifier [52332,52337]"/>
  <match src="primitive_type [108315,108322]" dest="primitive_type [106152,106159]"/>
  <match src="type_name [39367,39374]" dest="type_name [35785,35792]"/>
  <match src="address: address [29561,29568]" dest="address: address [25719,25726]"/>
  <match src="solidity_pragma_token [1731,1745]" dest="solidity_pragma_token [1788,1802]"/>
  <match src="call_argument [2562,2576]" dest="call_argument [2641,2655]"/>
  <match src=",: , [85310,85311]" dest=",: , [83256,83257]"/>
  <match src="visibility [87398,87405]" dest="visibility [85393,85400]"/>
  <match src="call_argument [109230,109238]" dest="call_argument [107165,107173]"/>
  <match src="]: ] [23573,23574]" dest="]: ] [38453,38454]"/>
  <match src="returns: returns [46134,46141]" dest="returns: returns [42959,42966]"/>
  <match src=".: . [84998,84999]" dest=".: . [82920,82921]"/>
  <match src="parenthesized_expression [5200,5209]" dest="parenthesized_expression [5371,5380]"/>
  <match src="variable_declaration [80318,80344]" dest="variable_declaration [78101,78127]"/>
  <match src="external: external [108425,108433]" dest="external: external [106266,106274]"/>
  <match src="uint256: uint256 [68133,68140]" dest="uint256: uint256 [65553,65560]"/>
  <match src="comment: /*                 0x40 is the &quot;free memory slot&quot;, meaning a pointer to next slot of empty memory. mload(0x40)                 loads the data in the free memory slot, so `ptr` is a pointer to the next slot of empty                 memory. It's needed because we're going to write the return data of delegatecall to the                 free memory slot.             */ [51078,51445]" dest="comment: /*                 0x40 is the &quot;free memory slot&quot;, meaning a pointer to next slot of empty memory. mload(0x40)                 loads the data in the free memory slot, so `ptr` is a pointer to the next slot of empty                 memory. It's needed because we're going to write the return data of delegatecall to the                 free memory slot.             */ [48028,48400]"/>
  <match src="call_expression [112033,112050]" dest="call_expression [111695,111712]"/>
  <match src="primitive_type [92101,92108]" dest="primitive_type [90237,90244]"/>
  <match src="memory: memory [111883,111889]" dest="memory: memory [109344,109350]"/>
  <match src="return_type_definition [94991,95005]" dest="return_type_definition [93197,93211]"/>
  <match src="(: ( [78887,78888]" dest="(: ( [76639,76640]"/>
  <match src="): ) [83793,83794]" dest="): ) [81682,81683]"/>
  <match src=",: , [40344,40345]" dest=",: , [36801,36802]"/>
  <match src="expression_statement [89595,89672]" dest="expression_statement [87657,87734]"/>
  <match src="}: } [41134,41135]" dest="}: } [37618,37619]"/>
  <match src="visibility [76154,76162]" dest="visibility [73822,73830]"/>
  <match src=",: , [29215,29216]" dest=",: , [25363,25364]"/>
  <match src="function_body [65072,65139]" dest="function_body [62399,62468]"/>
  <match src="contract: contract [1332,1340]" dest="contract: contract [1379,1387]"/>
  <match src="string [89621,89670]" dest="string [87683,87732]"/>
  <match src="parameter [11805,11819]" dest="parameter [12767,12781]"/>
  <match src="(: ( [6679,6680]" dest="(: ( [7512,7513]"/>
  <match src="(: ( [81901,81902]" dest="(: ( [79731,79732]"/>
  <match src="identifier: tokenId [60822,60829]" dest="identifier: tokenId [58015,58022]"/>
  <match src="solidity: solidity [85113,85121]" dest="solidity: solidity [83042,83050]"/>
  <match src="virtual: virtual [92141,92148]" dest="virtual: virtual [90277,90284]"/>
  <match src="identifier: from [93046,93050]" dest="identifier: from [91209,91213]"/>
  <match src="state_variable_declaration [86308,86329]" dest="state_variable_declaration [84278,84299]"/>
  <match src="memory: memory [12299,12305]" dest="memory: memory [13271,13277]"/>
  <match src="address: address [1236,1243]" dest="address: address [1275,1282]"/>
  <match src="call_argument [108539,108549]" dest="call_argument [106383,106393]"/>
  <match src="returns: returns [23898,23905]" dest="returns: returns [38774,38781]"/>
  <match src="identifier: keyIndex [79586,79594]" dest="identifier: keyIndex [77356,77364]"/>
  <match src="): ) [70628,70629]" dest="): ) [68125,68126]"/>
  <match src="binary_expression [103522,103551]" dest="binary_expression [101994,102023]"/>
  <match src="yul_identifier [54337,54340]" dest="yul_identifier [51343,51346]"/>
  <match src="struct_member [75192,75203]" dest="struct_member [72827,72838]"/>
  <match src="state_mutability [56968,56972]" dest="state_mutability [54055,54059]"/>
  <match src="is: is [13761,13763]" dest="is: is [14782,14784]"/>
  <match src="identifier: onlyBridge [102893,102903]" dest="identifier: onlyBridge [101346,101356]"/>
  <match src="parameter [118660,118679]" dest="parameter [116923,116942]"/>
  <match src="identifier: addressStorage [48793,48807]" dest="identifier: addressStorage [45673,45687]"/>
  <match src="returns: returns [40690,40697]" dest="returns: returns [37159,37166]"/>
  <match src=",: , [84238,84239]" dest=",: , [82140,82141]"/>
  <match src="if_statement [115634,115761]" dest="if_statement [114241,114370]"/>
  <match src="(: ( [59122,59123]" dest="(: ( [56264,56265]"/>
  <match src="return_type_definition [48194,48211]" dest="return_type_definition [45063,45080]"/>
  <match src="comment: // File: contracts/interfaces/IAMB.sol [6250,6288]" dest="comment: // File: contracts/interfaces/IAMB.sol [6455,6493]"/>
  <match src="internal: internal [59065,59073]" dest="internal: internal [56206,56214]"/>
  <match src="identifier: tokenImage [107532,107542]" dest="identifier: tokenImage [105390,105400]"/>
  <match src="=: = [62405,62406]" dest="=: = [59647,59648]"/>
  <match src=",: , [110821,110822]" dest=",: , [109318,109319]"/>
  <match src="): ) [75944,75945]" dest="): ) [73605,73606]"/>
  <match src="visibility [75946,75954]" dest="visibility [73607,73615]"/>
  <match src="expression_statement [57509,57548]" dest="expression_statement [54609,54648]"/>
  <match src="returns: returns [42078,42085]" dest="returns: returns [18177,18184]"/>
  <match src="parameter [65877,65886]" dest="parameter [63235,63244]"/>
  <match src="(: ( [12940,12941]" dest="(: ( [13922,13923]"/>
  <match src="bytes32: bytes32 [82372,82379]" dest="bytes32: bytes32 [80219,80226]"/>
  <match src="uint256: uint256 [21378,21385]" dest="uint256: uint256 [20918,20925]"/>
  <match src="function: function [59785,59793]" dest="function: function [56947,56955]"/>
  <match src="): ) [5021,5022]" dest="): ) [5189,5190]"/>
  <match src="identifier: c [67548,67549]" dest="identifier: c [64950,64951]"/>
  <match src="(: ( [6139,6140]" dest="(: ( [6338,6339]"/>
  <match src="}: } [45248,45249]" dest="}: } [42054,42055]"/>
  <match src="call_argument [107568,107574]" dest="call_argument [105426,105432]"/>
  <match src="state_mutability [6709,6713]" dest="state_mutability [7542,7546]"/>
  <match src="identifier: deployAndHandleBridgedNFT [106835,106860]" dest="identifier: deployAndHandleBridgedNFT [104675,104700]"/>
  <match src="(: ( [23906,23907]" dest="(: ( [38782,38783]"/>
  <match src="identifier: a [66806,66807]" dest="identifier: a [64190,64191]"/>
  <match src="identifier: require [57509,57516]" dest="identifier: require [54609,54616]"/>
  <match src="): ) [45745,45746]" dest="): ) [42561,42562]"/>
  <match src="primitive_type [96803,96810]" dest="primitive_type [95061,95068]"/>
  <match src="expression_statement [5374,5376]" dest="expression_statement [5548,5550]"/>
  <match src="inheritance_specifier [104431,104446]" dest="inheritance_specifier [102947,102962]"/>
  <match src="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/components/bridged/TokenImageStorage.sol [48963,49059]" dest="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/components/bridged/TokenImageStorage.sol [45849,45945]"/>
  <match src="identifier: _token [45622,45628]" dest="identifier: _token [42437,42443]"/>
  <match src="function_definition [21253,21416]" dest="function_definition [20818,20957]"/>
  <match src="(: ( [92834,92835]" dest="(: ( [90989,90990]"/>
  <match src="): ) [65897,65898]" dest="): ) [63255,63256]"/>
  <match src="&quot;: &quot; [82193,82194]" dest="&quot;: &quot; [80034,80035]"/>
  <match src="): ) [5363,5364]" dest="): ) [5536,5537]"/>
  <match src="): ) [94975,94976]" dest="): ) [93181,93182]"/>
  <match src="call_expression [116290,116331]" dest="call_expression [114916,114957]"/>
  <match src="function_body [73411,73536]" dest="function_body [70983,71111]"/>
  <match src=".: . [80465,80466]" dest=".: . [78251,78252]"/>
  <match src="identifier: _setTokenAddressPair [48605,48625]" dest="identifier: _setTokenAddressPair [45483,45503]"/>
  <match src="bytes: bytes [39050,39055]" dest="bytes: bytes [35458,35463]"/>
  <match src="&quot;: &quot; [95976,95977]" dest="&quot;: &quot; [94210,94211]"/>
  <match src="}: } [39458,39459]" dest="}: } [35880,35881]"/>
  <match src="member_expression [1520,1530]" dest="member_expression [1570,1580]"/>
  <match src="contract_body [7590,13525]" dest="contract_body [8456,14524]"/>
  <match src="primitive_type [40134,40141]" dest="primitive_type [36586,36593]"/>
  <match src=",: , [12862,12863]" dest=",: , [13843,13844]"/>
  <match src="string_literal [2912,2926]" dest="string_literal [3000,3014]"/>
  <match src="function_definition [3481,3664]" dest="function_definition [3585,3770]"/>
  <match src="block_statement [97693,97744]" dest="block_statement [95983,96036]"/>
  <match src="[: [ [97724,97725]" dest="[: [ [96015,96016]"/>
  <match src="=: = [65584,65585]" dest="=: = [62927,62928]"/>
  <match src="==: == [57431,57433]" dest="==: == [54530,54532]"/>
  <match src="member_expression [74189,74199]" dest="member_expression [71789,71799]"/>
  <match src="number_literal: 0 [25640,25641]" dest="number_literal: 0 [22678,22679]"/>
  <match src="{: { [100166,100167]" dest="{: { [98529,98530]"/>
  <match src="expression_statement [107488,107592]" dest="expression_statement [105346,105450]"/>
  <match src="identifier: b [65462,65463]" dest="identifier: b [62803,62804]"/>
  <match src="member_expression [46854,46878]" dest="member_expression [43692,43716]"/>
  <match src="comment: // token == 0x00..00 represents default limits for all newly created tokens [21712,21787]" dest="comment: // token == 0x00..00 represents global restriction applied for all tokens [21266,21339]"/>
  <match src="member_expression [2545,2561]" dest="member_expression [2624,2640]"/>
  <match src="(: ( [6483,6484]" dest="(: ( [7310,7311]"/>
  <match src="type_name [25548,25555]" dest="type_name [22591,22598]"/>
  <match src="solidity_version: 0.7.0 [76776,76781]" dest="solidity_version: 0.7.0 [74466,74471]"/>
  <match src="visibility [31707,31715]" dest="visibility [27921,27929]"/>
  <match src=",: , [97018,97019]" dest=",: , [95280,95281]"/>
  <match src="type_name [84897,84903]" dest="type_name [82818,82824]"/>
  <match src="member_expression [107321,107341]" dest="member_expression [105174,105194]"/>
  <match src="number_literal: 0 [97016,97017]" dest="number_literal: 0 [95278,95279]"/>
  <match src="call_argument [73429,73455]" dest="call_argument [71002,71028]"/>
  <match src="ternary_expression [46916,46956]" dest="ternary_expression [43755,43795]"/>
  <match src="comment: /**      * @dev See {IERC721-getApproved}.      */ [91743,91793]" dest="comment: /**      * @dev See {IERC721-getApproved}.      */ [89867,89919]"/>
  <match src="identifier: IERC165 [28859,28866]" dest="identifier: IERC165 [24998,25005]"/>
  <match src="bytes32: bytes32 [6680,6687]" dest="bytes32: bytes32 [7513,7520]"/>
  <match src="parameter [54968,54975]" dest="parameter [51997,52004]"/>
  <match src="{: { [103925,103926]" dest="{: { [102407,102408]"/>
  <match src="comment: // When the entry to delete is the last one, the swap operation is unnecessary. However, since this occurs [80093,80199]" dest="comment: // When the entry to delete is the last one, the swap operation is unnecessary. However, since this occurs [77873,77979]"/>
  <match src="contract_body [18898,21418]" dest="contract_body [18531,20960]"/>
  <match src="(: ( [26291,26292]" dest="(: ( [22152,22153]"/>
  <match src="call_argument [96308,96310]" dest="call_argument [94550,94552]"/>
  <match src="!=: != [81108,81110]" dest="!=: != [78914,78916]"/>
  <match src="parameter [29561,29574]" dest="parameter [25719,25732]"/>
  <match src="(: ( [45772,45773]" dest="(: ( [42588,42589]"/>
  <match src="comment: /**  * @dev Library for managing  * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive  * types.  *  * Sets have the following properties:  *  * - Elements are added, removed, and checked for existence in constant time  * (O(1)).  * - Elements are enumerated in O(n). No guarantees are made on the ordering.  *  * ```  * contract Example {  *     // Add the library methods  *     using EnumerableSet for EnumerableSet.AddressSet;  *  *     // Declare a set state variable  *     EnumerableSet.AddressSet private mySet;  * }  * ```  *  * As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256`  * (`UintSet`) are supported.  */ [68970,69635]" dest="comment: /**  * @dev Library for managing  * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive  * types.  *  * Sets have the following properties:  *  * - Elements are added, removed, and checked for existence in constant time  * (O(1)).  * - Elements are enumerated in O(n). No guarantees are made on the ordering.  *  * ```  * contract Example {  *     // Add the library methods  *     using EnumerableSet for EnumerableSet.AddressSet;  *  *     // Declare a set state variable  *     EnumerableSet.AddressSet private mySet;  * }  * ```  *  * As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256`  * (`UintSet`) are supported.  */ [66417,67105]"/>
  <match src="[: [ [914,915]" dest="[: [ [940,941]"/>
  <match src="identifier: NewTokenRegistered [48905,48923]" dest="identifier: NewTokenRegistered [45787,45805]"/>
  <match src="call_argument [114147,114194]" dest="call_argument [22194,22238]"/>
  <match src="(: ( [29560,29561]" dest="(: ( [25718,25719]"/>
  <match src="if: if [79625,79627]" dest="if: if [77397,77399]"/>
  <match src="identifier: UintSet [75910,75917]" dest="identifier: UintSet [73571,73578]"/>
  <match src="call_argument [81792,81828]" dest="call_argument [79619,79655]"/>
  <match src="uint256: uint256 [78744,78751]" dest="uint256: uint256 [76493,76500]"/>
  <match src="primitive_type [84948,84955]" dest="primitive_type [82869,82876]"/>
  <match src="type_name [106129,106133]" dest="type_name [103956,103960]"/>
  <match src="call_argument [110690,110696]" dest="call_argument [109184,109190]"/>
  <match src="is: is [44534,44536]" dest="is: is [41324,41326]"/>
  <match src="): ) [62973,62974]" dest="): ) [60233,60234]"/>
  <match src="function_definition [89345,89439]" dest="function_definition [87399,87495]"/>
  <match src="array_access [3198,3266]" dest="array_access [3294,3362]"/>
  <match src="identifier: set [97097,97100]" dest="identifier: set [95363,95366]"/>
  <match src="): ) [110775,110776]" dest="): ) [109270,109271]"/>
  <match src="return_statement [92535,92578]" dest="return_statement [90682,90725]"/>
  <match src="bytes32: bytes32 [7133,7140]" dest="bytes32: bytes32 [7978,7985]"/>
  <match src="identifier: value [72515,72520]" dest="identifier: value [70055,70060]"/>
  <match src="string: string [86443,86449]" dest="string: string [84419,84425]"/>
  <match src="contract: contract [62244,62252]" dest="contract: contract [59482,59490]"/>
  <match src=",: , [2158,2159]" dest=",: , [2228,2229]"/>
  <match src="type_name [105240,105247]" dest="type_name [118047,118054]"/>
  <match src="identifier: _recipient [115138,115148]" dest="identifier: _recipient [113729,113739]"/>
  <match src="bytes32: bytes32 [82152,82159]" dest="bytes32: bytes32 [79992,79999]"/>
  <match src="parameter [2494,2501]" dest="parameter [2572,2579]"/>
  <match src="string [92848,92899]" dest="string [91003,91054]"/>
  <match src="visibility [93316,93322]" dest="visibility [91486,91492]"/>
  <match src="call_argument [46320,46328]" dest="call_argument [43147,43155]"/>
  <match src="visibility [83795,83803]" dest="visibility [81684,81692]"/>
  <match src="view: view [50655,50659]" dest="view: view [47594,47598]"/>
  <match src=",: , [36454,36455]" dest=",: , [32802,32803]"/>
  <match src="expression_statement [43426,43439]" dest="expression_statement [40168,40181]"/>
  <match src="{: { [34439,34440]" dest="{: { [30731,30732]"/>
  <match src="identifier: tokenId [95271,95278]" dest="identifier: tokenId [93488,93495]"/>
  <match src="}: } [10995,10996]" dest="}: } [11934,11935]"/>
  <match src="identifier: isApprovedForAll [32493,32509]" dest="identifier: isApprovedForAll [28735,28751]"/>
  <match src="primitive_type [109822,109829]" dest="primitive_type [107769,107776]"/>
  <match src="binary_expression [65586,65591]" dest="binary_expression [62929,62934]"/>
  <match src="view: view [2480,2484]" dest="view: view [2558,2562]"/>
  <match src="(: ( [16270,16271]" dest="(: ( [16753,16754]"/>
  <match src="): ) [73907,73908]" dest="): ) [71497,71498]"/>
  <match src="return: return [60103,60109]" dest="return: return [57271,57277]"/>
  <match src="primitive_type [97008,97015]" dest="primitive_type [95270,95277]"/>
  <match src="interface_declaration [33341,33580]" dest="interface_declaration [29606,29851]"/>
  <match src="type_name [6766,6773]" dest="type_name [7601,7608]"/>
  <match src="identifier: fixFailedMessage [20188,20204]" dest="identifier: fixFailedMessage [19738,19754]"/>
  <match src="call_expression [89595,89671]" dest="call_expression [87657,87733]"/>
  <match src="call_argument [82508,82521]" dest="call_argument [80357,80370]"/>
  <match src="): ) [36368,36369]" dest="): ) [32714,32715]"/>
  <match src="uint256: uint256 [108367,108374]" dest="uint256: uint256 [106206,106213]"/>
  <match src="): ) [100746,100747]" dest="): ) [99125,99126]"/>
  <match src="identifier: keccak256 [58623,58632]" dest="identifier: keccak256 [55751,55760]"/>
  <match src="member_expression [38511,38530]" dest="member_expression [34908,34927]"/>
  <match src="parameter [100050,100060]" dest="parameter [98410,98420]"/>
  <match src="contract_body [35950,39459]" dest="contract_body [32284,35881]"/>
  <match src="identifier: _token [107119,107125]" dest="identifier: _token [104967,104973]"/>
  <match src="yul_path [53835,53838]" dest="yul_path [50834,50837]"/>
  <match src="interface_declaration [1138,1247]" dest="interface_declaration [1176,1287]"/>
  <match src="&quot;: &quot; [45207,45208]" dest="&quot;: &quot; [42012,42013]"/>
  <match src="internal: internal [117757,117765]" dest="internal: internal [116551,116559]"/>
  <match src="identifier: BRIDGE_CONTRACT [16950,16965]" dest="identifier: BRIDGE_CONTRACT [17146,17161]"/>
  <match src="user_defined_type [37434,37441]" dest="user_defined_type [33808,33815]"/>
  <match src="}: } [96453,96454]" dest="}: } [94697,94698]"/>
  <match src="parameter [81690,81703]" dest="parameter [79516,79529]"/>
  <match src="type_name [40346,40353]" dest="type_name [36803,36810]"/>
  <match src="function: function [94943,94951]" dest="function: function [93149,93157]"/>
  <match src="identifier: _beforeTokenTransfer [101359,101379]" dest="identifier: _beforeTokenTransfer [99756,99776]"/>
  <match src="): ) [15997,15998]" dest="): ) [16472,16473]"/>
  <match src="identifier: _supportedInterfaces [63028,63048]" dest="identifier: _supportedInterfaces [60289,60309]"/>
  <match src="address: address [6132,6139]" dest="address: address [6331,6338]"/>
  <match src="contract_body [101685,103977]" dest="contract_body [100096,102462]"/>
  <match src="call_expression [3220,3264]" dest="call_expression [3316,3360]"/>
  <match src="): ) [20484,20485]" dest="): ) [20040,20041]"/>
  <match src="type_name [111796,111800]" dest="type_name [23172,23176]"/>
  <match src="call_argument [106178,106184]" dest="call_argument [104006,104012]"/>
  <match src=",: , [116323,116324]" dest=",: , [114949,114950]"/>
  <match src="bool: bool [71161,71165]" dest="bool: bool [68675,68679]"/>
  <match src="}: } [3663,3664]" dest="}: } [3769,3770]"/>
  <match src="boolean_literal [63649,63653]" dest="boolean_literal [60926,60930]"/>
  <match src=".: . [110741,110742]" dest=".: . [109236,109237]"/>
  <match src="function_definition [17156,17303]" dest="function_definition [17359,17508]"/>
  <match src="identifier: value [42900,42905]" dest="identifier: value [39627,39632]"/>
  <match src="(: ( [97145,97146]" dest="(: ( [95413,95414]"/>
  <match src="assignment_expression [21165,21240]" dest="assignment_expression [20727,20802]"/>
  <match src="override_specifier [89008,89016]" dest="override_specifier [87048,87056]"/>
  <match src="call_expression [36385,36391]" dest="call_expression [32732,32738]"/>
  <match src=",: , [12745,12746]" dest=",: , [13723,13724]"/>
  <match src="parameter [74393,74397]" dest="parameter [71999,72003]"/>
  <match src="primitive_type [108367,108374]" dest="primitive_type [106206,106213]"/>
  <match src=".: . [1523,1524]" dest=".: . [1573,1574]"/>
  <match src="(: ( [88486,88487]" dest="(: ( [86509,86510]"/>
  <match src="uint256: uint256 [3172,3179]" dest="uint256: uint256 [3267,3274]"/>
  <match src="address: address [2160,2167]" dest="address: address [2230,2237]"/>
  <match src="pragma: pragma [55078,55084]" dest="pragma: pragma [52112,52118]"/>
  <match src="identifier: _tokenId [113128,113136]" dest="identifier: _tokenId [111283,111291]"/>
  <match src="identifier: _token [109171,109177]" dest="identifier: _token [107031,107037]"/>
  <match src="external: external [40992,41000]" dest="external: external [37474,37482]"/>
  <match src="expression_statement [95319,95393]" dest="expression_statement [93537,93611]"/>
  <match src="(: ( [4720,4721]" dest="(: ( [4861,4862]"/>
  <match src="identifier: errorMessage [68768,68780]" dest="identifier: errorMessage [66204,66216]"/>
  <match src="visibility [28651,28659]" dest="visibility [24778,24786]"/>
  <match src="identifier: length [81776,81782]" dest="identifier: length [79603,79609]"/>
  <match src="(: ( [59945,59946]" dest="(: ( [57111,57112]"/>
  <match src="identifier: messageId [115219,115228]" dest="identifier: messageId [113812,113821]"/>
  <match src="call_argument [45804,45810]" dest="call_argument [42620,42626]"/>
  <match src="identifier: length [91051,91057]" dest="identifier: length [89150,89156]"/>
  <match src="parameter [39050,39068]" dest="parameter [35458,35476]"/>
  <match src="parameter [31690,31705]" dest="parameter [27904,27919]"/>
  <match src="returns: returns [6714,6721]" dest="returns: returns [7547,7554]"/>
  <match src="): ) [4681,4682]" dest="): ) [4821,4822]"/>
  <match src="call_argument [21220,21230]" dest="call_argument [20782,20792]"/>
  <match src="identifier: ERC165 [62253,62259]" dest="identifier: ERC165 [59491,59497]"/>
  <match src="primitive_type [96226,96233]" dest="primitive_type [94467,94474]"/>
  <match src="type_name [78303,78310]" dest="type_name [76040,76047]"/>
  <match src="parameter [97401,97416]" dest="parameter [95682,95697]"/>
  <match src="type_name [106870,106877]" dest="type_name [104711,104718]"/>
  <match src="public: public [90702,90708]" dest="public: public [88792,88798]"/>
  <match src="call_argument [58633,58683]" dest="call_argument [55761,55811]"/>
  <match src="address: address [106870,106877]" dest="address: address [104711,104718]"/>
  <match src="yul_identifier [53103,53109]" dest="yul_identifier [50088,50094]"/>
  <match src="type_name [29003,29010]" dest="type_name [25146,25153]"/>
  <match src="call_argument [89069,89076]" dest="call_argument [87110,87117]"/>
  <match src="): ) [6575,6576]" dest="): ) [7404,7405]"/>
  <match src="address: address [115533,115540]" dest="address: address [114136,114143]"/>
  <match src="identifier: deployAndHandleBridgedNFT [112349,112374]" dest="identifier: deployAndHandleBridgedNFT [111936,111961]"/>
  <match src="string_literal [63572,63602]" dest="string_literal [60848,60878]"/>
  <match src="function_definition [115502,115767]" dest="function_definition [114104,114377]"/>
  <match src="contract: contract [44512,44520]" dest="contract: contract [41302,41310]"/>
  <match src=",: , [116313,116314]" dest=",: , [114939,114940]"/>
  <match src="): ) [57545,57546]" dest="): ) [54645,54646]"/>
  <match src=".: . [21190,21191]" dest=".: . [20752,20753]"/>
  <match src="}: } [35641,35642]" dest="}: } [31961,31962]"/>
  <match src="call_argument [48752,48764]" dest="call_argument [45631,45643]"/>
  <match src="identifier: length [107282,107288]" dest="identifier: length [105134,105140]"/>
  <match src="return_type_definition [89384,89407]" dest="return_type_definition [87438,87461]"/>
  <match src="primitive_type [111574,111581]" dest="primitive_type [110889,110896]"/>
  <match src="assembly_statement [34679,35126]" dest="assembly_statement [30983,31435]"/>
  <match src="member_expression [72784,72796]" dest="member_expression [70336,70348]"/>
  <match src="variable_declaration_statement [45587,45695]" dest="variable_declaration_statement [42402,42510]"/>
  <match src="address: address [6075,6082]" dest="address: address [6273,6280]"/>
  <match src="internal: internal [13786,13794]" dest="internal: internal [14808,14816]"/>
  <match src="binary_expression [67510,67515]" dest="binary_expression [64911,64916]"/>
  <match src="type_name [33542,33548]" dest="type_name [29812,29818]"/>
  <match src="]: ] [82489,82490]" dest="]: ] [80337,80338]"/>
  <match src="function: function [84198,84206]" dest="function: function [82100,82108]"/>
  <match src="comment: // covers usage through regular proxy calls [5215,5258]" dest="comment: // covers usage through regular proxy calls [5386,5429]"/>
  <match src="returndatasize: returndatasize [54345,54359]" dest="returndatasize: returndatasize [51351,51365]"/>
  <match src="comment: // Clear approvals from the previous owner [98515,98557]" dest="comment: // Clear approvals from the previous owner [96833,96875]"/>
  <match src="primitive_type [72023,72030]" dest="primitive_type [69552,69559]"/>
  <match src="(: ( [3819,3820]" dest="(: ( [3931,3932]"/>
  <match src="call_struct_argument [78901,78914]" dest="call_struct_argument [76653,76666]"/>
  <match src="{: { [62271,62272]" dest="{: { [59509,59510]"/>
  <match src="): ) [29574,29575]" dest="): ) [25732,25733]"/>
  <match src="return: return [43173,43179]" dest="return: return [39905,39911]"/>
  <match src="parameter [75969,75973]" dest="parameter [73630,73634]"/>
  <match src="identifier: _tokenId [115565,115573]" dest="identifier: _tokenId [114169,114177]"/>
  <match src="parameter [118713,118726]" dest="parameter [116967,116980]"/>
  <match src="&quot;: &quot; [98452,98453]" dest="&quot;: &quot; [96766,96767]"/>
  <match src="yul_variable_declaration [51458,51480]" dest="yul_variable_declaration [48414,48436]"/>
  <match src="identifier: OWNER [6222,6227]" dest="identifier: OWNER [6423,6428]"/>
  <match src="identifier: onlyOwner [103172,103181]" dest="identifier: onlyOwner [101634,101643]"/>
  <match src="): ) [55738,55739]" dest="): ) [52791,52792]"/>
  <match src="&quot;: &quot; [98335,98336]" dest="&quot;: &quot; [96648,96649]"/>
  <match src="[: [ [92259,92260]" dest="[: [ [90398,90399]"/>
  <match src="address: address [105172,105179]" dest="address: address [119796,119803]"/>
  <match src="call_expression [12397,12478]" dest="call_expression [13370,13451]"/>
  <match src="function_definition [98212,98771]" dest="function_definition [96524,97098]"/>
  <match src="identifier: encodePacked [45777,45789]" dest="identifier: encodePacked [42593,42605]"/>
  <match src="call_expression [96847,96908]" dest="call_expression [95106,95167]"/>
  <match src="): ) [100585,100586]" dest="): ) [98959,98960]"/>
  <match src="primitive_type [21918,21925]" dest="primitive_type [6824,6831]"/>
  <match src="}: } [19846,19847]" dest="}: } [19389,19390]"/>
  <match src="identifier: _at [75113,75116]" dest="identifier: _at [72741,72744]"/>
  <match src="(: ( [75796,75797]" dest="(: ( [73451,73452]"/>
  <match src="identifier: setMessageValue [2802,2817]" dest="identifier: setMessageValue [2889,2904]"/>
  <match src="call_expression [102633,102657]" dest="call_expression [101078,101102]"/>
  <match src="expression_statement [117337,117375]" dest="expression_statement [115861,115899]"/>
  <match src="view: view [979,983]" dest="view: view [1008,1012]"/>
  <match src="identifier: withinLimit [117174,117185]" dest="identifier: isTokenExecutionAllowed [113651,113674]"/>
  <match src="call_argument [45773,45811]" dest="call_argument [42589,42627]"/>
  <match src="address: address [111983,111990]" dest="address: address [110139,110146]"/>
  <match src="(: ( [84719,84720]" dest="(: ( [82634,82635]"/>
  <match src="identifier: _owns [59053,59058]" dest="identifier: _owns [56193,56198]"/>
  <match src="&amp;&amp;: &amp;&amp; [111684,111686]" dest="&amp;&amp;: &amp;&amp; [111016,111018]"/>
  <match src="(: ( [12921,12922]" dest="(: ( [13902,13903]"/>
  <match src="identifier: bridgedTokenAddress [108473,108492]" dest="identifier: bridgedTokenAddress [106315,106334]"/>
  <match src="): ) [105817,105818]" dest="): ) [120272,120273]"/>
  <match src="binary_expression [80055,80078]" dest="binary_expression [77833,77856]"/>
  <match src="type_name [75192,75195]" dest="type_name [72827,72830]"/>
  <match src="): ) [12551,12552]" dest="): ) [13525,13526]"/>
  <match src="identifier: _token [107626,107632]" dest="identifier: _token [105485,105491]"/>
  <match src="struct: struct [70104,70110]" dest="struct: struct [67585,67591]"/>
  <match src="address: address [97861,97868]" dest="address: address [96159,96166]"/>
  <match src="&quot;: &quot; [3237,3238]" dest="&quot;: &quot; [3333,3334]"/>
  <match src="primitive_type [43498,43502]" dest="primitive_type [40242,40246]"/>
  <match src="identifier: map [79073,79076]" dest="identifier: map [76828,76831]"/>
  <match src="string: string [86492,86498]" dest="string: string [84471,84477]"/>
  <match src="type_name [11321,11326]" dest="type_name [12268,12273]"/>
  <match src="primitive_type [44102,44108]" dest="primitive_type [40873,40879]"/>
  <match src="function_definition [1182,1245]" dest="function_definition [1221,1284]"/>
  <match src="identifier: _operatorApprovals [55748,55766]" dest="identifier: _operatorApprovals [52801,52819]"/>
  <match src=",: , [112407,112408]" dest=",: , [111999,112000]"/>
  <match src="identifier: tokenId [91901,91908]" dest="identifier: tokenId [90029,90036]"/>
  <match src="variable_declaration_statement [43341,43381]" dest="variable_declaration_statement [40081,40121]"/>
  <match src="assignment_expression [80462,80501]" dest="assignment_expression [78248,78287]"/>
  <match src="solidity_pragma_token [33323,33337]" dest="solidity_pragma_token [29585,29599]"/>
  <match src="identifier: _tokenURIs [89708,89718]" dest="identifier: _tokenURIs [87772,87782]"/>
  <match src="type_name [95897,95904]" dest="type_name [94130,94137]"/>
  <match src="binary_expression [26250,26270]" dest="binary_expression [22111,22131]"/>
  <match src="(: ( [65515,65516]" dest="(: ( [62856,62857]"/>
  <match src="uint256: uint256 [9739,9746]" dest="uint256: uint256 [10650,10657]"/>
  <match src="identifier: index [76682,76687]" dest="identifier: index [74365,74370]"/>
  <match src="assignment_expression [88363,88380]" dest="assignment_expression [86383,86400]"/>
  <match src="comment: /**  * @title ERC721Reader  * @dev Functionality for reading metadata from the ERC721 tokens.  */ [44414,44511]" dest="comment: /**  * @title ERC721Reader  * @dev Functionality for reading metadata from the ERC721 tokens.  */ [41200,41300]"/>
  <match src="identifier: getBridgeInterfacesVersion [40606,40632]" dest="identifier: getBridgeInterfacesVersion [37071,37097]"/>
  <match src="function_body [57005,57135]" dest="function_body [54092,54226]"/>
  <match src="call_expression [58623,58684]" dest="call_expression [55751,55812]"/>
  <match src="call_argument [114064,114102]" dest="call_argument [22743,22788]"/>
  <match src="identifier: a [66253,66254]" dest="identifier: a [63620,63621]"/>
  <match src="state_variable_declaration [87714,87781]" dest="state_variable_declaration [85718,85785]"/>
  <match src="identifier: map [81238,81241]" dest="identifier: map [79050,79053]"/>
  <match src="identifier: _remove [71104,71111]" dest="identifier: _remove [68618,68625]"/>
  <match src="parameter [63490,63508]" dest="parameter [60765,60783]"/>
  <match src="parameter [61891,61903]" dest="parameter [59113,59125]"/>
  <match src="function_body [57402,57844]" dest="function_body [54500,54951]"/>
  <match src="identifier: msg [36529,36532]" dest="identifier: msg [32879,32882]"/>
  <match src="primitive_type [67410,67417]" dest="primitive_type [64810,64817]"/>
  <match src="identifier: _data [7081,7086]" dest="identifier: _data [7924,7929]"/>
  <match src="(: ( [96360,96361]" dest="(: ( [94603,94604]"/>
  <match src="variable_declaration [97445,97458]" dest="variable_declaration [95727,95740]"/>
  <match src="): ) [49830,49831]" dest="): ) [46742,46743]"/>
  <match src="]: ] [1039,1040]" dest="]: ] [1069,1070]"/>
  <match src="primitive_type [2451,2458]" dest="primitive_type [2529,2536]"/>
  <match src="yul_identifier [53133,53138]" dest="yul_identifier [50118,50123]"/>
  <match src="}: } [102311,102312]" dest="}: } [100747,100748]"/>
  <match src="string: string [33542,33548]" dest="string: string [29812,29818]"/>
  <match src="): ) [5210,5211]" dest="): ) [5381,5382]"/>
  <match src="storage: storage [83782,83789]" dest="storage: storage [81671,81678]"/>
  <match src="comment: // Inspired by OraclizeAPI's implementation - MIT licence [42955,43012]" dest="comment: // Inspired by OraclizeAPI's implementation - MIT licence [39683,39740]"/>
  <match src=",: , [40327,40328]" dest=",: , [36784,36785]"/>
  <match src="parameter [105172,105195]" dest="parameter [119796,119819]"/>
  <match src="}: } [11997,11998]" dest="}: } [12961,12962]"/>
  <match src="call_expression [47767,47817]" dest="call_expression [44628,44678]"/>
  <match src="uint256: uint256 [61028,61035]" dest="uint256: uint256 [58227,58234]"/>
  <match src="identifier: _indexes [80818,80826]" dest="identifier: _indexes [78612,78620]"/>
  <match src="): ) [95978,95979]" dest="): ) [94212,94213]"/>
  <match src="type_name [62511,62534]" dest="type_name [59758,59781]"/>
  <match src="): ) [97072,97073]" dest="): ) [95336,95337]"/>
  <match src="indexed: indexed [29176,29183]" dest="indexed: indexed [25324,25331]"/>
  <match src="address: address [109822,109829]" dest="address: address [107769,107776]"/>
  <match src="call_argument [57544,57545]" dest="call_argument [54644,54645]"/>
  <match src="identifier: a [65451,65452]" dest="identifier: a [62792,62793]"/>
  <match src="type_cast_expression [107503,107591]" dest="type_cast_expression [105361,105449]"/>
  <match src="primitive_type [88713,88720]" dest="primitive_type [86744,86751]"/>
  <match src="type_name [6898,6905]" dest="type_name [7735,7742]"/>
  <match src="call_argument [112275,112281]" dest="call_argument [111514,111520]"/>
  <match src="identifier: _exists [89603,89610]" dest="identifier: _exists [87665,87672]"/>
  <match src="pragma_directive [35737,35759]" dest="pragma_directive [32061,32083]"/>
  <match src="parameter [117023,117037]" dest="parameter [120667,120686]"/>
  <match src="parameter [43975,43988]" dest="parameter [40741,40754]"/>
  <match src="identifier: a [68141,68142]" dest="identifier: a [65561,65562]"/>
  <match src="): ) [67490,67491]" dest="): ) [64890,64891]"/>
  <match src="identifier: _token [112826,112832]" dest="identifier: _token [112294,112300]"/>
  <match src="type_name [76594,76601]" dest="type_name [74276,74283]"/>
  <match src="call_argument [111112,111117]" dest="call_argument [19376,19381]"/>
  <match src="parameter [65443,65452]" dest="parameter [62784,62793]"/>
  <match src="identifier: tokenId [89069,89076]" dest="identifier: tokenId [87110,87117]"/>
  <match src="(: ( [100123,100124]" dest="(: ( [98484,98485]"/>
  <match src="identifier: _contains [75992,76001]" dest="identifier: _contains [73654,73663]"/>
  <match src="]: ] [21232,21233]" dest="]: ] [20794,20795]"/>
  <match src="&quot;: &quot; [66295,66296]" dest="&quot;: &quot; [63662,63663]"/>
  <match src="byte: byte [43498,43502]" dest="byte: byte [40242,40246]"/>
  <match src="bytes4: bytes4 [62360,62366]" dest="bytes4: bytes4 [59602,59608]"/>
  <match src="type_name [74101,74111]" dest="type_name [71700,71710]"/>
  <match src="identifier: _entries [81869,81877]" dest="identifier: _entries [79698,79706]"/>
  <match src="): ) [1574,1575]" dest="): ) [1624,1625]"/>
  <match src="identifier: bridgeContract [17971,17985]" dest="identifier: bridgeContract [19006,19020]"/>
  <match src="string [95345,95391]" dest="string [93563,93609]"/>
  <match src="): ) [17222,17223]" dest="): ) [17425,17426]"/>
  <match src="identifier: _contains [74416,74425]" dest="identifier: _contains [72023,72032]"/>
  <match src="returns: returns [29806,29813]" dest="returns: returns [25973,25980]"/>
  <match src="type_alias [85391,85398]" dest="type_alias [83339,83346]"/>
  <match src="visibility [39070,39078]" dest="visibility [35478,35486]"/>
  <match src="identifier: encodePacked [2224,2236]" dest="identifier: encodePacked [2295,2307]"/>
  <match src="identifier: abi [90029,90032]" dest="identifier: abi [88101,88104]"/>
  <match src="(: ( [115637,115638]" dest="(: ( [114244,114245]"/>
  <match src="function_body [84662,84734]" dest="function_body [82576,82650]"/>
  <match src="parameter [65063,65070]" dest="parameter [62390,62397]"/>
  <match src="}: } [78044,78045]" dest="}: } [75773,75774]"/>
  <match src="): ) [109642,109643]" dest="): ) [107586,107587]"/>
  <match src="identifier: a [65586,65587]" dest="identifier: a [62929,62930]"/>
  <match src="function: function [35138,35146]" dest="function: function [31450,31458]"/>
  <match src="}: } [18279,18280]" dest="}: } [17785,17786]"/>
  <match src="primitive_type [107076,107083]" dest="primitive_type [104924,104931]"/>
  <match src="comment: /**  * @dev Implementation of the {IERC165} interface.  *  * Contracts may inherit from this and call {_registerInterface} to declare  * their support of an interface.  */ [62063,62234]" dest="comment: /**  * @dev Implementation of the {IERC165} interface.  *  * Contracts may inherit from this and call {_registerInterface} to declare  * their support of an interface.  */ [59295,59471]"/>
  <match src="): ) [95538,95539]" dest="): ) [93758,93759]"/>
  <match src="call_argument [98587,98594]" dest="call_argument [96906,96913]"/>
  <match src="comment: /**      * @dev Returns the number of elements in the map. O(1).      */ [83672,83744]" dest="comment: /**      * @dev Returns the number of elements in the map. O(1).      */ [81558,81632]"/>
  <match src="override_specifier [118695,118703]" dest="override_specifier [120697,120705]"/>
  <match src="view: view [91843,91847]" dest="view: view [89970,89974]"/>
  <match src="call_argument [111131,111137]" dest="call_argument [110502,110508]"/>
  <match src="pure: pure [39079,39083]" dest="pure: pure [35487,35491]"/>
  <match src="yul_path [54622,54628]" dest="yul_path [51635,51641]"/>
  <match src="comment: // To delete a key-value pair from the _entries array in O(1), we swap the entry to delete with the last one [79694,79802]" dest="comment: // To delete a key-value pair from the _entries array in O(1), we swap the entry to delete with the last one [77467,77575]"/>
  <match src="primitive_type [82372,82379]" dest="primitive_type [80219,80226]"/>
  <match src="function: function [2793,2801]" dest="function: function [2880,2888]"/>
  <match src="primitive_type [23870,23877]" dest="primitive_type [38746,38753]"/>
  <match src="type_name [21350,21357]" dest="type_name [20889,20896]"/>
  <match src="visibility [45055,45063]" dest="visibility [41858,41866]"/>
  <match src="): ) [59155,59156]" dest="): ) [56297,56298]"/>
  <match src="return: return [8718,8724]" dest="return: return [9610,9616]"/>
  <match src="(: ( [17619,17620]" dest="(: ( [118749,118750]"/>
  <match src="expression_statement [39185,39213]" dest="expression_statement [35596,35624]"/>
  <match src="parameter [109082,109098]" dest="parameter [106940,106956]"/>
  <match src="type_alias [85359,85367]" dest="type_alias [83306,83314]"/>
  <match src="override_specifier [40673,40681]" dest="override_specifier [37141,37149]"/>
  <match src="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/components/common/ERC721Relayer.sol [35644,35735]" dest="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/components/common/ERC721Relayer.sol [31966,32057]"/>
  <match src="state_mutability [49839,49843]" dest="state_mutability [46751,46755]"/>
  <match src="identifier: errorMessage [12539,12551]" dest="identifier: errorMessage [13513,13525]"/>
  <match src="identifier: tokenOfOwnerByIndex [60741,60760]" dest="identifier: tokenOfOwnerByIndex [57934,57953]"/>
  <match src="abstract: abstract [35881,35889]" dest="abstract: abstract [32215,32223]"/>
  <match src="private: private [55604,55611]" dest="private: private [52654,52661]"/>
  <match src="string [42580,42608]" dest="string [39210,39227]"/>
  <match src="type_name [84587,84603]" dest="type_name [82501,82517]"/>
  <match src="identifier: isTokenRegistered [106065,106082]" dest="identifier: isTokenRegistered [103892,103909]"/>
  <match src="type_name [20205,20212]" dest="type_name [19755,19762]"/>
  <match src="contract_declaration [34589,35642]" dest="contract_declaration [30891,31962]"/>
  <match src="number_literal: 0x2dfd6c9f781bb6bbb5369c114e949b69ebb440ef3d4dd6b2836225eb1dc3a2be [14158,14224]" dest="number_literal: 0x2dfd6c9f781bb6bbb5369c114e949b69ebb440ef3d4dd6b2836225eb1dc3a2be [117564,117630]"/>
  <match src="type_name [21816,21823]" dest="type_name [21373,21380]"/>
  <match src="primitive_type [29775,29782]" dest="primitive_type [25942,25949]"/>
  <match src="member_expression [80721,80733]" dest="member_expression [78512,78524]"/>
  <match src="identifier: tokenId [96312,96319]" dest="identifier: tokenId [94554,94561]"/>
  <match src="(: ( [11320,11321]" dest="(: ( [12267,12268]"/>
  <match src="call_argument [78879,78917]" dest="call_argument [76631,76669]"/>
  <match src="type_name [68732,68739]" dest="type_name [66168,66175]"/>
  <match src="=: = [81863,81864]" dest="=: = [79692,79693]"/>
  <match src="comment: /**      * @dev Allows to pre-set the bridged token contract for not-yet bridged token.      * Only the owner can call this method.      * @param _nativeToken address of the token contract on the other side that was not yet bridged.      * @param _bridgedToken address of the bridged token contract.      */ [109252,109559]" dest="comment: /**      * @dev Allows to pre-set the bridged token contract for not-yet bridged token.      * Only the owner can call this method.      * @param _nativeToken address of the token contract on the other side that was not yet bridged.      * @param _bridgedToken address of the bridged token contract.      */ [107190,107502]"/>
  <match src="solidity: solidity [63724,63732]" dest="solidity: solidity [61008,61016]"/>
  <match src="!: ! [110676,110677]" dest="!: ! [109170,109171]"/>
  <match src="==: == [100566,100568]" dest="==: == [98940,98942]"/>
  <match src="function: function [36922,36930]" dest="function: function [33282,33290]"/>
  <match src="identifier: encodeWithSelector [46835,46853]" dest="identifier: encodeWithSelector [43673,43691]"/>
  <match src="comment: /**     * @dev Returns the base URI set via {_setBaseURI}. This will be     * automatically added as a prefix in {tokenURI} to each token's URI, or     * to the token ID if no specific URI is set for that token ID.     */ [90251,90472]" dest="comment: /**     * @dev Returns the base URI set via {_setBaseURI}. This will be     * automatically added as a prefix in {tokenURI} to each token's URI, or     * to the token ID if no specific URI is set for that token ID.     */ [88329,88554]"/>
  <match src="type_name [95263,95270]" dest="type_name [93480,93487]"/>
  <match src="event: event [4506,4511]" dest="event: event [4641,4646]"/>
  <match src="yul_evm_builtin [13334,13339]" dest="yul_evm_builtin [14325,14330]"/>
  <match src="expression_statement [72157,72196]" dest="expression_statement [69689,69728]"/>
  <match src="parameter [42486,42500]" dest="parameter [39115,39129]"/>
  <match src="variable_declaration [19667,19684]" dest="variable_declaration [19260,19277]"/>
  <match src="function_body [101440,101443]" dest="function_body [99837,99840]"/>
  <match src="state_variable_declaration [14112,14225]" dest="state_variable_declaration [117518,117631]"/>
  <match src="identifier: _token [44978,44984]" dest="identifier: _token [41778,41784]"/>
  <match src="bytes32: bytes32 [78292,78299]" dest="bytes32: bytes32 [76029,76036]"/>
  <match src="primitive_type [31172,31179]" dest="primitive_type [27371,27378]"/>
  <match src="call_expression [99009,99082]" dest="call_expression [97346,97419]"/>
  <match src="(: ( [79416,79417]" dest="(: ( [77184,77185]"/>
  <match src="call_argument [38646,38652]" dest="call_argument [35045,35051]"/>
  <match src="identifier: data [111055,111059]" dest="identifier: data [110395,110399]"/>
  <match src="call_expression [115681,115717]" dest="call_expression [114289,114325]"/>
  <match src="{: { [3872,3873]" dest="{: { [3984,3985]"/>
  <match src="expression_statement [62731,62772]" dest="expression_statement [59983,60024]"/>
  <match src="function_definition [105143,105858]" dest="function_definition [119766,120316]"/>
  <match src="parameter [65922,65929]" dest="parameter [63280,63287]"/>
  <match src="(: ( [20328,20329]" dest="(: ( [19881,19882]"/>
  <match src="primitive_type [89393,89399]" dest="primitive_type [87447,87453]"/>
  <match src="identifier: keccak256 [3584,3593]" dest="identifier: keccak256 [3689,3698]"/>
  <match src="call_argument [109830,109831]" dest="call_argument [107777,107778]"/>
  <match src="bytes32: bytes32 [13943,13950]" dest="bytes32: bytes32 [14966,14973]"/>
  <match src="member_expression [107270,107288]" dest="member_expression [105122,105140]"/>
  <match src="true: true [109212,109216]" dest="true: true [107147,107151]"/>
  <match src="string: string [118660,118666]" dest="string: string [116923,116929]"/>
  <match src="type_name [68144,68151]" dest="type_name [65564,65571]"/>
  <match src="pragma_directive [13590,13612]" dest="pragma_directive [14593,14615]"/>
  <match src="variable_declaration_statement [46168,46278]" dest="variable_declaration_statement [42994,43104]"/>
  <match src="identifier: a [65026,65027]" dest="identifier: a [62353,62354]"/>
  <match src="primitive_type [7039,7046]" dest="primitive_type [7881,7888]"/>
  <match src="comment: /**      * @dev Returns whether `spender` is allowed to manage `tokenId`.      *      * Requirements:      *      * - `tokenId` must exist.      */ [95066,95213]" dest="comment: /**      * @dev Returns whether `spender` is allowed to manage `tokenId`.      *      * Requirements:      *      * - `tokenId` must exist.      */ [93276,93429]"/>
  <match src="=: = [101886,101887]" dest="=: = [100305,100306]"/>
  <match src="override_specifier [92501,92509]" dest="override_specifier [90647,90655]"/>
  <match src="^:  ^ [27945,27947]" dest="^:  ^ [24052,24054]"/>
  <match src="): ) [89618,89619]" dest="): ) [87680,87681]"/>
  <match src=",: , [115207,115208]" dest=",: , [113800,113801]"/>
  <match src="function_definition [34338,34499]" dest="function_definition [30629,30794]"/>
  <match src="type_name [75009,75019]" dest="type_name [72636,72646]"/>
  <match src="identifier: ptr [54337,54340]" dest="identifier: ptr [51343,51346]"/>
  <match src="constant: constant [87406,87414]" dest="constant: constant [85401,85409]"/>
  <match src="comment: /**  * @title Proxy  * @dev Gives the possibility to delegate any call to a foreign implementation.  */ [50309,50412]" dest="comment: /**  * @title Proxy  * @dev Gives the possibility to delegate any call to a foreign implementation.  */ [47239,47345]"/>
  <match src=",: , [98413,98414]" dest=",: , [96727,96728]"/>
  <match src="type_name [34406,34413]" dest="type_name [30697,30704]"/>
  <match src="function_body [45577,45820]" dest="function_body [42391,42637]"/>
  <match src="member_expression [80055,80074]" dest="member_expression [77833,77852]"/>
  <match src="identifier: UPGRADEABILITY_OWNER [4228,4248]" dest="identifier: UPGRADEABILITY_OWNER [4356,4376]"/>
  <match src="): ) [45692,45693]" dest="): ) [42507,42508]"/>
  <match src="): ) [112832,112833]" dest="): ) [112300,112301]"/>
  <match src="call_argument [12727,12745]" dest="call_argument [13705,13723]"/>
  <match src="call_argument [98673,98680]" dest="call_argument [96995,97002]"/>
  <match src="identifier: _at [84337,84340]" dest="identifier: _at [82240,82243]"/>
  <match src=",: , [58672,58673]" dest=",: , [55800,55801]"/>
  <match src="pragma: pragma [39919,39925]" dest="pragma: pragma [36362,36368]"/>
  <match src="&quot;: &quot; [45801,45802]" dest="&quot;: &quot; [42617,42618]"/>
  <match src="identifier: EnumerableMap [85996,86009]" dest="identifier: EnumerableMap [83957,83970]"/>
  <match src="{: { [82711,82712]" dest="{: { [80566,80567]"/>
  <match src="type_name [31690,31697]" dest="type_name [27904,27911]"/>
  <match src="return_statement [68197,68242]" dest="return_statement [65618,65663]"/>
  <match src="return_type_definition [3163,3180]" dest="return_type_definition [3258,3275]"/>
  <match src="type_name [101406,101413]" dest="type_name [99803,99810]"/>
  <match src="call_argument [83426,83429]" dest="call_argument [81302,81305]"/>
  <match src="yul_path [8699,8706]" dest="yul_path [9590,9597]"/>
  <match src="address: address [109054,109061]" dest="address: address [106911,106918]"/>
  <match src="): ) [75134,75135]" dest="): ) [72762,72763]"/>
  <match src="call_argument [11389,11390]" dest="call_argument [12337,12338]"/>
  <match src="identifier: setTokenURI [115718,115729]" dest="identifier: setTokenURI [114326,114337]"/>
  <match src="mapping: mapping [55418,55425]" dest="mapping: mapping [52464,52471]"/>
  <match src="call_expression [91603,91615]" dest="call_expression [89720,89732]"/>
  <match src="call_expression [76203,76222]" dest="call_expression [73872,73891]"/>
  <match src="identifier: mediatorContractOnOtherSide [19562,19589]" dest="identifier: mediatorContractOnOtherSide [19217,19244]"/>
  <match src=",: , [116387,116388]" dest=",: , [115014,115015]"/>
  <match src="primitive_type [55875,55881]" dest="primitive_type [52932,52938]"/>
  <match src="(: ( [74453,74454]" dest="(: ( [72060,72061]"/>
  <match src="): ) [380,381]" dest="): ) [391,392]"/>
  <match src="}: } [43596,43597]" dest="}: } [40344,40345]"/>
  <match src="primitive_type [108393,108399]" dest="primitive_type [106233,106239]"/>
  <match src="identifier: keccak256 [23524,23533]" dest="identifier: keccak256 [38399,38408]"/>
  <match src="identifier: setImplementation [57350,57367]" dest="identifier: setImplementation [54448,54465]"/>
  <match src="identifier: tokenId [90218,90225]" dest="identifier: tokenId [88293,88300]"/>
  <match src="identifier: IBurnableMintableERC721Token [115681,115709]" dest="identifier: IBurnableMintableERC721Token [114289,114317]"/>
  <match src="function_body [27253,27399]" dest="function_body [39156,39360]"/>
  <match src="): ) [117276,117277]" dest="): ) [115798,115799]"/>
  <match src="): ) [116274,116275]" dest="): ) [114899,114900]"/>
  <match src=",: , [98333,98334]" dest=",: , [96646,96647]"/>
  <match src="type_name [55576,55603]" dest="type_name [52626,52653]"/>
  <match src="function_body [92735,92946]" dest="function_body [90888,91104]"/>
  <match src="yul_variable_declaration [13311,13351]" dest="yul_variable_declaration [14302,14342]"/>
  <match src="bytes4: bytes4 [63490,63496]" dest="bytes4: bytes4 [60765,60771]"/>
  <match src="primitive_type [8186,8193]" dest="primitive_type [9070,9077]"/>
  <match src="returns: returns [60532,60539]" dest="returns: returns [57719,57726]"/>
  <match src="expression_statement [2873,2951]" dest="expression_statement [2961,3039]"/>
  <match src="member_expression [75117,75127]" dest="member_expression [72745,72755]"/>
  <match src="{: { [12387,12388]" dest="{: { [13359,13360]"/>
  <match src="{: { [118728,118729]" dest="{: { [116982,116983]"/>
  <match src="): ) [102055,102056]" dest="): ) [100481,100482]"/>
  <match src="identifier: tokenId [95426,95433]" dest="identifier: tokenId [93645,93652]"/>
  <match src="yul_decimal_number: 32 [13383,13385]" dest="yul_decimal_number: 32 [14375,14377]"/>
  <match src="return_statement [89418,89433]" dest="return_statement [87473,87488]"/>
  <match src="primitive_type [84399,84406]" dest="primitive_type [82303,82310]"/>
  <match src="returns: returns [984,991]" dest="returns: returns [1013,1020]"/>
  <match src="parameter [100062,100077]" dest="parameter [98422,98437]"/>
  <match src="parameter [84278,84285]" dest="parameter [82180,82187]"/>
  <match src="type_cast_expression [97138,97148]" dest="type_cast_expression [95406,95416]"/>
  <match src="call_expression [95507,95539]" dest="call_expression [93727,93759]"/>
  <match src="call_expression [20316,20340]" dest="call_expression [19869,19893]"/>
  <match src="internal: internal [75728,75736]" dest="internal: internal [73382,73390]"/>
  <match src="expression_statement [88340,88354]" dest="expression_statement [86359,86373]"/>
  <match src=",: , [98490,98491]" dest=",: , [96806,96807]"/>
  <match src="[: [ [48807,48808]" dest="[: [ [45687,45688]"/>
  <match src=",: , [53143,53144]" dest=",: , [50128,50129]"/>
  <match src="storage: storage [74342,74349]" dest="storage: storage [71948,71955]"/>
  <match src=",: , [107751,107752]" dest=",: , [105575,105576]"/>
  <match src="call_argument [93358,93399]" dest="call_argument [91529,91570]"/>
  <match src=",: , [12611,12612]" dest=",: , [13588,13589]"/>
  <match src="boolean_literal [100187,100191]" dest="boolean_literal [98551,98555]"/>
  <match src="{: { [94474,94475]" dest="{: { [92667,92668]"/>
  <match src="call_argument [94504,94511]" dest="call_argument [92698,92705]"/>
  <match src="&quot;: &quot; [23562,23563]" dest="&quot;: &quot; [38442,38443]"/>
  <match src="identifier: require [14653,14660]" dest="identifier: require [15554,15561]"/>
  <match src="address: address [55703,55710]" dest="address: address [52756,52763]"/>
  <match src="identifier: set [75408,75411]" dest="identifier: set [73052,73055]"/>
  <match src=",: , [40750,40751]" dest=",: , [37221,37222]"/>
  <match src="address: address [4958,4965]" dest="address: address [5120,5127]"/>
  <match src="!=: != [98400,98402]" dest="!=: != [96714,96716]"/>
  <match src="yul_assignment [34453,34483]" dest="yul_assignment [30746,30776]"/>
  <match src="call_argument [10942,10948]" dest="call_argument [11880,11886]"/>
  <match src="function: function [82341,82349]" dest="function: function [80188,80196]"/>
  <match src="identifier: tokenId [97101,97108]" dest="identifier: tokenId [95367,95374]"/>
  <match src="address: address [109599,109606]" dest="address: address [107543,107550]"/>
  <match src="uint256: uint256 [101406,101413]" dest="uint256: uint256 [99803,99810]"/>
  <match src="(: ( [60540,60541]" dest="(: ( [57727,57728]"/>
  <match src="(: ( [111659,111660]" dest="(: ( [110991,110992]"/>
  <match src="returndatacopy: returndatacopy [54322,54336]" dest="returndatacopy: returndatacopy [51328,51342]"/>
  <match src="identifier: from [31154,31158]" dest="identifier: from [27353,27357]"/>
  <match src="call_expression [18245,18261]" dest="call_expression [17750,17766]"/>
  <match src="call_argument [107561,107565]" dest="call_argument [105419,105423]"/>
  <match src="call_expression [37043,37082]" dest="call_expression [33408,33447]"/>
  <match src="call_expression [112304,112546]" dest="call_expression [111886,112168]"/>
  <match src="external: external [33488,33496]" dest="external: external [29756,29764]"/>
  <match src="identifier: owner [95410,95415]" dest="identifier: owner [93629,93634]"/>
  <match src="identifier: _nativeToken [47681,47693]" dest="identifier: _nativeToken [44541,44553]"/>
  <match src="}: } [75143,75144]" dest="}: } [72772,72773]"/>
  <match src="identifier: encodePacked [3918,3930]" dest="identifier: encodePacked [4031,4043]"/>
  <match src="call_argument [91596,91601]" dest="call_argument [89713,89718]"/>
  <match src="comment: /**      * @dev Returns the total amount of tokens stored by the contract.      */ [60408,60490]" dest="comment: /**      * @dev Returns the total amount of tokens stored by the contract.      */ [57592,57676]"/>
  <match src="): ) [111995,111996]" dest="): ) [110151,110152]"/>
  <match src="call_argument [111150,111158]" dest="call_argument [110517,110525]"/>
  <match src="identifier: BasicAMBMediator [13744,13760]" dest="identifier: BasicAMBMediator [14765,14781]"/>
  <match src="parameter [46684,46698]" dest="parameter [43520,43534]"/>
  <match src="type_name [82978,82994]" dest="type_name [80844,80860]"/>
  <match src=",: , [117363,117364]" dest=",: , [115887,115888]"/>
  <match src="call_argument [9782,9813]" dest="call_argument [10694,10725]"/>
  <match src="emit: emit [115170,115174]" dest="emit: emit [113763,113767]"/>
  <match src="identifier: _implementation [57376,57391]" dest="identifier: _implementation [54474,54489]"/>
  <match src="identifier: _value [2944,2950]" dest="identifier: _value [3032,3038]"/>
  <match src="(: ( [70616,70617]" dest="(: ( [68113,68114]"/>
  <match src="type_name [71741,71748]" dest="type_name [69265,69272]"/>
  <match src="expression_statement [92241,92295]" dest="expression_statement [90380,90434]"/>
  <match src="parameter [58549,58565]" dest="parameter [55676,55692]"/>
  <match src="comment: // keccak256(abi.encodePacked(&quot;mediatorContract&quot;)) [14057,14107]" dest="comment: // keccak256(abi.encodePacked(&quot;mediatorContract&quot;)) [15080,15130]"/>
  <match src="external: external [28651,28659]" dest="external: external [24778,24786]"/>
  <match src="binary_expression [13082,13103]" dest="binary_expression [14068,14089]"/>
  <match src="call_argument [10956,10988]" dest="call_argument [11894,11926]"/>
  <match src="bytes32: bytes32 [14112,14119]" dest="bytes32: bytes32 [117518,117525]"/>
  <match src="identifier: data [46314,46318]" dest="identifier: data [43141,43145]"/>
  <match src="(: ( [68177,68178]" dest="(: ( [65597,65598]"/>
  <match src="(: ( [10846,10847]" dest="(: ( [11783,11784]"/>
  <match src=",: , [45735,45736]" dest=",: , [42551,42552]"/>
  <match src="visibility [68155,68163]" dest="visibility [65575,65583]"/>
  <match src="type_name [31160,31167]" dest="type_name [27359,27366]"/>
  <match src="solidity_version:  0.7.5 [41254,41260]" dest="solidity_version:  0.7.5 [37743,37749]"/>
  <match src="member_expression [81902,81912]" dest="member_expression [79732,79742]"/>
  <match src="call_expression [46346,46397]" dest="call_expression [43173,43224]"/>
  <match src="primitive_type [74201,74208]" dest="primitive_type [71801,71808]"/>
  <match src="type_name [18971,18978]" dest="type_name [18605,18612]"/>
  <match src="expression_statement [88518,88568]" dest="expression_statement [86542,86592]"/>
  <match src="type_name [111601,111608]" dest="type_name [110917,110924]"/>
  <match src="type_name [93064,93071]" dest="type_name [91227,91234]"/>
  <match src="identifier: Ownable [13764,13771]" dest="identifier: Ownable [14785,14792]"/>
  <match src="): ) [90236,90237]" dest="): ) [88311,88312]"/>
  <match src="primitive_type [16837,16844]" dest="primitive_type [17031,17038]"/>
  <match src="expression_statement [98566,98596]" dest="expression_statement [96885,96915]"/>
  <match src="external: external [60518,60526]" dest="external: external [57705,57713]"/>
  <match src="returns: returns [89017,89024]" dest="returns: returns [87057,87064]"/>
  <match src="identifier: recipient [9728,9737]" dest="identifier: recipient [10639,10648]"/>
  <match src="call_expression [73421,73494]" dest="call_expression [70994,71067]"/>
  <match src="): ) [7140,7141]" dest="): ) [7985,7986]"/>
  <match src="address: address [56389,56396]" dest="address: address [53460,53467]"/>
  <match src="function_body [12709,13523]" dest="function_body [13686,14521]"/>
  <match src=",: , [40155,40156]" dest=",: , [36607,36608]"/>
  <match src=",: , [9813,9814]" dest=",: , [10725,10726]"/>
  <match src=",: , [10861,10862]" dest=",: , [11798,11799]"/>
  <match src="(: ( [116381,116382]" dest="(: ( [115008,115009]"/>
  <match src="(: ( [83313,83314]" dest="(: ( [81188,81189]"/>
  <match src="visibility [76609,76617]" dest="visibility [74291,74299]"/>
  <match src="uint256: uint256 [18990,18997]" dest="uint256: uint256 [18624,18631]"/>
  <match src="): ) [53857,53858]" dest="): ) [50856,50857]"/>
  <match src="type_name [100036,100043]" dest="type_name [98396,98403]"/>
  <match src="string [2237,2251]" dest="string [2308,2322]"/>
  <match src="primitive_type [362,369]" dest="primitive_type [373,380]"/>
  <match src="yul_assignment [57038,57119]" dest="yul_assignment [54127,54208]"/>
  <match src="call_argument [116495,116503]" dest="call_argument [115124,115132]"/>
  <match src="mapping: mapping [86230,86237]" dest="mapping: mapping [84197,84204]"/>
  <match src="identifier: from [93477,93481]" dest="identifier: from [91649,91653]"/>
  <match src="identifier: _recipient [116389,116399]" dest="identifier: _recipient [115016,115026]"/>
  <match src="identifier: tokenId [96377,96384]" dest="identifier: tokenId [94620,94627]"/>
  <match src="identifier: _recipient [115197,115207]" dest="identifier: _recipient [113790,113800]"/>
  <match src="): ) [55602,55603]" dest="): ) [52652,52653]"/>
  <match src="function_definition [102549,102664]" dest="function_definition [100993,101110]"/>
  <match src="array_access [90758,90778]" dest="array_access [88849,88869]"/>
  <match src="revert: revert [54674,54680]" dest="revert: revert [51689,51695]"/>
  <match src="modifier: modifier [4876,4884]" dest="modifier: modifier [5024,5032]"/>
  <match src=".: . [48718,48719]" dest=".: . [45597,45598]"/>
  <match src="internal: internal [17561,17569]" dest="internal: internal [118697,118705]"/>
  <match src="variable_declaration [111741,111758]" dest="variable_declaration [23723,23738]"/>
  <match src="}: } [72814,72815]" dest="}: } [70367,70368]"/>
  <match src="[: [ [80359,80360]" dest="[: [ [78142,78143]"/>
  <match src="call_expression [97488,97536]" dest="call_expression [95772,95820]"/>
  <match src="contract: contract [651,659]" dest="contract: contract [673,681]"/>
  <match src="view: view [81713,81717]" dest="view: view [79539,79543]"/>
  <match src="state_mutability [39646,39650]" dest="state_mutability [36077,36081]"/>
  <match src="identifier: NFTMediatorBalanceStorage [104512,104537]" dest="identifier: NFTMediatorBalanceStorage [103032,103057]"/>
  <match src="primitive_type [7066,7071]" dest="primitive_type [7909,7914]"/>
  <match src="=: = [50989,50990]" dest="=: = [47936,47937]"/>
  <match src="identifier: name [107561,107565]" dest="identifier: name [105419,105423]"/>
  <match src="{: { [43159,43160]" dest="{: { [39890,39891]"/>
  <match src="member_expression [90029,90045]" dest="member_expression [88101,88117]"/>
  <match src="identifier: msg [102247,102250]" dest="identifier: msg [100681,100684]"/>
  <match src="public: public [5651,5657]" dest="public: public [5834,5840]"/>
  <match src="uint256: uint256 [65574,65581]" dest="uint256: uint256 [62917,62924]"/>
  <match src="identifier: _isApprovedOrOwner [95227,95245]" dest="identifier: _isApprovedOrOwner [93444,93462]"/>
  <match src="type_name [40165,40172]" dest="type_name [36618,36625]"/>
  <match src="address: address [39367,39374]" dest="address: address [35785,35792]"/>
  <match src="identifier: messageSender [6344,6357]" dest="identifier: messageSender [7167,7180]"/>
  <match src="internal: internal [26550,26558]" dest="internal: internal [120688,120696]"/>
  <match src="): ) [83429,83430]" dest="): ) [81305,81306]"/>
  <match src="call_argument [58674,58682]" dest="call_argument [55802,55810]"/>
  <match src="type_name [56358,56364]" dest="type_name [53428,53434]"/>
  <match src="type_name [2818,2825]" dest="type_name [2905,2912]"/>
  <match src="identifier: _readTokenURI [112145,112158]" dest="identifier: _readTokenURI [111340,111353]"/>
  <match src="call_expression [117337,117374]" dest="call_expression [115861,115898]"/>
  <match src="identifier: tokenId [100725,100732]" dest="identifier: tokenId [99104,99111]"/>
  <match src="type_cast_expression [19478,19491]" dest="type_cast_expression [19142,19155]"/>
  <match src="): ) [40371,40372]" dest="): ) [36828,36829]"/>
  <match src="comment: /**      * @dev Throws if sender is not a bridge contract.      */ [101916,101982]" dest="comment: /**      * @dev Throws if sender is not a bridge contract.      */ [100338,100406]"/>
  <match src="identifier: _impl [51025,51030]" dest="identifier: _impl [47973,47978]"/>
  <match src="binary_expression [6120,6142]" dest="binary_expression [6319,6341]"/>
  <match src="identifier: _supportedInterfaces [55392,55412]" dest="identifier: _supportedInterfaces [52437,52457]"/>
  <match src="uint256: uint256 [76658,76665]" dest="uint256: uint256 [74341,74348]"/>
  <match src="primitive_type [12650,12656]" dest="primitive_type [13627,13633]"/>
  <match src=",: , [12325,12326]" dest=",: , [13297,13298]"/>
  <match src="visibility [81243,81250]" dest="visibility [79055,79062]"/>
  <match src=",: , [65094,65095]" dest=",: , [62422,62423]"/>
  <match src="=&gt;: =&gt; [261,263]" dest="=&gt;: =&gt; [270,272]"/>
  <match src="identifier: _tokenURI [115599,115608]" dest="identifier: _tokenURI [114204,114213]"/>
  <match src="user_defined_type [82100,82103]" dest="user_defined_type [79940,79943]"/>
  <match src="identifier: get [84583,84586]" dest="identifier: get [82497,82500]"/>
  <match src="identifier: _inner [73593,73599]" dest="identifier: _inner [71173,71179]"/>
  <match src="primitive_type [105365,105372]" dest="primitive_type [119926,119933]"/>
  <match src="type_name [70586,70590]" dest="type_name [68082,68086]"/>
  <match src="(: ( [39618,39619]" dest="(: ( [36047,36048]"/>
  <match src="call_argument [112401,112407]" dest="call_argument [111993,111999]"/>
  <match src="function_body [49862,49922]" dest="function_body [46774,46836]"/>
  <match src="identifier: fixMediatorBalance [110381,110399]" dest="identifier: fixMediatorBalance [108957,108975]"/>
  <match src="expression_statement [38511,38568]" dest="expression_statement [34908,34965]"/>
  <match src="(: ( [45189,45190]" dest="(: ( [41994,41995]"/>
  <match src="identifier: require [98301,98308]" dest="identifier: require [96614,96621]"/>
  <match src="primitive_type [90184,90190]" dest="primitive_type [88259,88265]"/>
  <match src="bytes32: bytes32 [79434,79441]" dest="bytes32: bytes32 [77202,77209]"/>
  <match src="identifier: _ [14432,14433]" dest="identifier: _ [15294,15295]"/>
  <match src="identifier: _tokenId [117531,117539]" dest="identifier: _tokenId [115957,115965]"/>
  <match src="virtual: virtual [94466,94473]" dest="virtual: virtual [92659,92666]"/>
  <match src="}: } [76695,76696]" dest="}: } [74379,74380]"/>
  <match src="function: function [103117,103125]" dest="function: function [101579,101587]"/>
  <match src="identifier: _image [105373,105379]" dest="identifier: _image [119934,119940]"/>
  <match src="type_name [12597,12604]" dest="type_name [13574,13581]"/>
  <match src=".: . [72981,72982]" dest=".: . [70540,70541]"/>
  <match src="(: ( [15254,15255]" dest="(: ( [16177,16178]"/>
  <match src="member_expression [71761,71779]" dest="member_expression [69285,69303]"/>
  <match src="type_name [39733,39739]" dest="type_name [36168,36174]"/>
  <match src="{: { [98291,98292]" dest="{: { [96603,96604]"/>
  <match src="primitive_type [7415,7422]" dest="primitive_type [8270,8277]"/>
  <match src="): ) [78808,78809]" dest="): ) [76559,76560]"/>
  <match src="identifier: onlyOwner [49629,49638]" dest="identifier: onlyOwner [46533,46542]"/>
  <match src=",: , [100428,100429]" dest=",: , [98800,98801]"/>
  <match src="member_expression [112344,112383]" dest="member_expression [111931,111970]"/>
  <match src="call_argument [102215,102293]" dest="call_argument [100649,100727]"/>
  <match src="identifier: supportsInterface [62937,62954]" dest="identifier: supportsInterface [60197,60214]"/>
  <match src="member_expression [97754,97781]" dest="member_expression [96048,96075]"/>
  <match src="): ) [20852,20853]" dest="): ) [20405,20406]"/>
  <match src="): ) [93153,93154]" dest="): ) [91317,91318]"/>
  <match src="view: view [72938,72942]" dest="view: view [70496,70500]"/>
  <match src="): ) [58565,58566]" dest="): ) [55692,55693]"/>
  <match src="primitive_type [65888,65895]" dest="primitive_type [63246,63253]"/>
  <match src="type_cast_expression [73886,73909]" dest="type_cast_expression [71476,71499]"/>
  <match src="(: ( [13478,13479]" dest="(: ( [14473,14474]"/>
  <match src="boolean_literal [107734,107739]" dest="boolean_literal [105558,105563]"/>
  <match src="expression_statement [112862,113050]" dest="expression_statement [112885,112971]"/>
  <match src="): ) [4954,4955]" dest="): ) [5103,5104]"/>
  <match src="): ) [42943,42944]" dest="): ) [39670,39671]"/>
  <match src="address: address [97583,97590]" dest="address: address [95870,95877]"/>
  <match src="type_name [100079,100084]" dest="type_name [98439,98444]"/>
  <match src="binary_expression [43406,43416]" dest="binary_expression [40147,40157]"/>
  <match src="(: ( [84306,84307]" dest="(: ( [82209,82210]"/>
  <match src="parameter [65018,65027]" dest="parameter [62345,62354]"/>
  <match src="call_expression [115105,115159]" dest="call_expression [113696,113750]"/>
  <match src="identifier: _symbol [107245,107252]" dest="identifier: _symbol [105096,105103]"/>
  <match src="): ) [107588,107589]" dest="): ) [105446,105447]"/>
  <match src="call_argument [93401,93452]" dest="call_argument [91572,91623]"/>
  <match src="function_definition [75892,76036]" dest="function_definition [73553,73699]"/>
  <match src="visibility [24692,24698]" dest="visibility [23134,23140]"/>
  <match src="primitive_type [105307,105314]" dest="primitive_type [119866,119873]"/>
  <match src="): ) [40633,40634]" dest="): ) [37098,37099]"/>
  <match src="}: } [105857,105858]" dest="}: } [120315,120316]"/>
  <match src="comment: // Mapping from owner to operator approvals [86162,86205]" dest="comment: // Mapping from owner to operator approvals [84128,84171]"/>
  <match src="identifier: setDailyLimit [25534,25547]" dest="identifier: disableTokenExecution [22569,22590]"/>
  <match src="parameter [113801,113815]" dest="parameter [112778,112792]"/>
  <match src="{: { [41038,41039]" dest="{: { [37520,37521]"/>
  <match src=".: . [46306,46307]" dest=".: . [43133,43134]"/>
  <match src="identifier: _supportedInterfaces [62543,62563]" dest="identifier: _supportedInterfaces [59790,59810]"/>
  <match src="return_statement [72777,72809]" dest="return_statement [70329,70361]"/>
  <match src="identifier: SafeMath [64314,64322]" dest="identifier: SafeMath [61613,61621]"/>
  <match src="parameter [102563,102574]" dest="parameter [101007,101018]"/>
  <match src="comment: // File: @openzeppelin/contracts/GSN/Context.sol [59177,59225]" dest="comment: // File: @openzeppelin/contracts/GSN/Context.sol [56323,56371]"/>
  <match src="uint256: uint256 [93064,93071]" dest="uint256: uint256 [91227,91234]"/>
  <match src="call_argument [107276,107280]" dest="call_argument [105128,105132]"/>
  <match src="parameter [56991,57003]" dest="parameter [54078,54090]"/>
  <match src="{: { [84296,84297]" dest="{: { [82198,82199]"/>
  <match src="identifier: EternalStorage [1900,1914]" dest="identifier: EternalStorage [1964,1978]"/>
  <match src="): ) [7390,7391]" dest="): ) [8245,8246]"/>
  <match src="string [66261,66296]" dest="string [63628,63663]"/>
  <match src=",: , [40212,40213]" dest=",: , [36666,36667]"/>
  <match src="function_body [106135,106236]" dest="function_body [103962,104065]"/>
  <match src="state_variable_declaration [13943,14056]" dest="state_variable_declaration [14966,15079]"/>
  <match src="memory: memory [112127,112133]" dest="memory: memory [111322,111328]"/>
  <match src="(: ( [74565,74566]" dest="(: ( [72178,72179]"/>
  <match src="}: } [97743,97744]" dest="}: } [96035,96036]"/>
  <match src="type_name [40134,40141]" dest="type_name [36586,36593]"/>
  <match src="visibility [7392,7400]" dest="visibility [8247,8255]"/>
  <match src="number_literal: 0 [43272,43273]" dest="number_literal: 0 [40008,40009]"/>
  <match src="parameter [64571,64580]" dest="parameter [61881,61890]"/>
  <match src="identifier: _tokenId [116315,116323]" dest="identifier: _tokenId [114941,114949]"/>
  <match src="=: = [88141,88142]" dest="=: = [86154,86155]"/>
  <match src="internal: internal [59915,59923]" dest="internal: internal [57081,57089]"/>
  <match src="(: ( [101379,101380]" dest="(: ( [99776,99777]"/>
  <match src="identifier: temp [43264,43268]" dest="identifier: temp [40000,40004]"/>
  <match src="call_expression [100149,100164]" dest="call_expression [98512,98527]"/>
  <match src="type_name [99374,99380]" dest="type_name [97720,97726]"/>
  <match src="storage: storage [71116,71123]" dest="storage: storage [68630,68637]"/>
  <match src="==: == [14614,14616]" dest="==: == [15524,15526]"/>
  <match src=",: , [27314,27315]" dest=",: , [39321,39322]"/>
  <match src="identifier: _token [27372,27378]" dest="identifier: _token [22840,22846]"/>
  <match src="expression_statement [115064,115095]" dest="expression_statement [113643,113684]"/>
  <match src="): ) [83658,83659]" dest="): ) [81541,81542]"/>
  <match src="type_name [88979,88986]" dest="type_name [87019,87026]"/>
  <match src="&quot;: &quot; [93451,93452]" dest="&quot;: &quot; [91622,91623]"/>
  <match src="type_name [20807,20814]" dest="type_name [20360,20367]"/>
  <match src="identifier: keccak256 [48244,48253]" dest="identifier: keccak256 [45114,45123]"/>
  <match src=",: , [39719,39720]" dest=",: , [36153,36154]"/>
  <match src=".: . [112348,112349]" dest=".: . [111935,111936]"/>
  <match src="{: { [59855,59856]" dest="{: { [57017,57018]"/>
  <match src="comment: /**      * @dev Returns message id where specified token was first seen and deploy on the other side was requested.      * @param _token address of token contract.      * @return message id of the send message.      */ [41791,42009]" dest="comment: /**      * @dev Checks if for a given native token, the deployment of its bridged alternative was already acknowledged.      * @param _token address of native token contract.      * @return true, if bridged token was already deployed.      */ [38032,38278]"/>
  <match src="returns: returns [62996,63003]" dest="returns: returns [60256,60263]"/>
  <match src="call_argument [24768,24778]" dest="call_argument [23394,23404]"/>
  <match src="solidity_version:  0.7.5 [1322,1328]" dest="solidity_version:  0.7.5 [1366,1372]"/>
  <match src="parameter [39035,39048]" dest="parameter [35443,35456]"/>
  <match src="comment: /**      * @dev Tells the id of the message originated on the other network.      * @return the id of the message originated on the other network.      */ [18016,18170]" dest="comment: /**      * @dev Tells the id of the message originated on the other network.      * @return the id of the message originated on the other network.      */ [17516,17673]"/>
  <match src="bytes: bytes [112199,112204]" dest="bytes: bytes [111794,111799]"/>
  <match src="return_type_definition [43966,43989]" dest="return_type_definition [40732,40755]"/>
  <match src="identifier: setTokenImage [49590,49603]" dest="identifier: setTokenImage [46494,46507]"/>
  <match src="type_name [430,435]" dest="type_name [442,447]"/>
  <match src="): ) [36342,36343]" dest="): ) [32688,32689]"/>
  <match src="identifier: _isApprovedOrOwner [92805,92823]" dest="identifier: _isApprovedOrOwner [90960,90978]"/>
  <match src="string: string [84897,84903]" dest="string: string [82818,82824]"/>
  <match src="primitive_type [65922,65929]" dest="primitive_type [63280,63287]"/>
  <match src="array_access [16048,16079]" dest="array_access [16524,16555]"/>
  <match src="identifier: sub [65089,65092]" dest="identifier: sub [62417,62420]"/>
  <match src="identifier: _recipient [108347,108357]" dest="identifier: _recipient [106185,106195]"/>
  <match src=",: , [84351,84352]" dest=",: , [82254,82255]"/>
  <match src="public: public [22177,22183]" dest="public: public [21732,21738]"/>
  <match src="string_literal [99035,99081]" dest="string_literal [97372,97418]"/>
  <match src="identifier: _messageId [3828,3838]" dest="identifier: _messageId [3940,3950]"/>
  <match src="private: private [88092,88099]" dest="private: private [86105,86112]"/>
  <match src="identifier: decode [5181,5187]" dest="identifier: decode [5352,5358]"/>
  <match src="identifier: _values [73515,73522]" dest="identifier: _values [71089,71096]"/>
  <match src="view: view [3158,3162]" dest="view: view [3253,3257]"/>
  <match src="type_name [106894,106900]" dest="type_name [104736,104742]"/>
  <match src="type_name [11873,11878]" dest="type_name [12835,12840]"/>
  <match src="identifier: _token [110734,110740]" dest="identifier: _token [109229,109235]"/>
  <match src="identifier: setMessageRecipient [117287,117306]" dest="identifier: setMessageRecipient [115810,115829]"/>
  <match src="): ) [89250,89251]" dest="): ) [87297,87298]"/>
  <match src="comment: /**      * @dev Returns the number of key-value pairs in the map. O(1).      */ [81125,81204]" dest="comment: /**      * @dev Returns the number of key-value pairs in the map. O(1).      */ [78934,79015]"/>
  <match src="return_type_definition [24275,24289]" dest="return_type_definition [23697,23711]"/>
  <match src="primitive_type [62360,62366]" dest="primitive_type [59602,59608]"/>
  <match src="address: address [111673,111680]" dest="address: address [111005,111012]"/>
  <match src="identifier: toDeleteIndex [71697,71710]" dest="identifier: toDeleteIndex [69220,69233]"/>
  <match src="contract_declaration [215,564]" dest="contract_declaration [223,579]"/>
  <match src="is: is [104283,104285]" dest="is: is [102792,102794]"/>
  <match src=".: . [81868,81869]" dest=".: . [79697,79698]"/>
  <match src="identifier: map [81291,81294]" dest="identifier: map [79104,79107]"/>
  <match src="identifier: _tokenId [115150,115158]" dest="identifier: _tokenId [113741,113749]"/>
  <match src="uint256: uint256 [68178,68185]" dest="uint256: uint256 [65598,65605]"/>
  <match src="): ) [34634,34635]" dest="): ) [30937,30938]"/>
  <match src="&quot;: &quot; [11947,11948]" dest="&quot;: &quot; [12910,12911]"/>
  <match src=",: , [84285,84286]" dest=",: , [82187,82188]"/>
  <match src="): ) [76607,76608]" dest="): ) [74289,74290]"/>
  <match src="identifier: _contains [81005,81014]" dest="identifier: _contains [78810,78819]"/>
  <match src="true: true [63649,63653]" dest="true: true [60926,60930]"/>
  <match src="comment: // Position of the value in the `values` array, plus 1 because index 0 [70186,70256]" dest="comment: // Position of the value in the `values` array, plus 1 because index 0 [67671,67741]"/>
  <match src="&quot;: &quot; [58663,58664]" dest="&quot;: &quot; [55791,55792]"/>
  <match src="(: ( [94959,94960]" dest="(: ( [93165,93166]"/>
  <match src="call_argument [82188,82191]" dest="call_argument [80029,80032]"/>
  <match src="identifier: get [84850,84853]" dest="identifier: get [82771,82774]"/>
  <match src="primitive_type [85403,85410]" dest="primitive_type [83351,83358]"/>
  <match src=".: . [112210,112211]" dest=".: . [111805,111806]"/>
  <match src="&quot;: &quot; [45790,45791]" dest="&quot;: &quot; [42606,42607]"/>
  <match src="call_argument [109752,109765]" dest="call_argument [107698,107711]"/>
  <match src="identifier: FailedMessageFixed [18910,18928]" dest="identifier: FailedMessageFixed [18544,18562]"/>
  <match src="comment: /**      * @dev See {IERC721-isApprovedForAll}.      */ [92370,92425]" dest="comment: /**      * @dev See {IERC721-isApprovedForAll}.      */ [90513,90570]"/>
  <match src="identifier: _values [70828,70835]" dest="identifier: _values [68329,68336]"/>
  <match src="expression_statement [105696,105734]" dest="expression_statement [120147,120185]"/>
  <match src="call_expression [14680,14709]" dest="call_expression [15588,15617]"/>
  <match src="call_argument [19463,19473]" dest="call_argument [19202,19212]"/>
  <match src="private: private [55882,55889]" dest="private: private [52939,52946]"/>
  <match src="comment: /**      * @dev See {IERC721-transferFrom}.      */ [92590,92641]" dest="comment: /**      * @dev See {IERC721-transferFrom}.      */ [90740,90793]"/>
  <match src="}: } [26360,26361]" dest="}: } [22313,22314]"/>
  <match src="): ) [96273,96274]" dest="): ) [94514,94515]"/>
  <match src="(: ( [105461,105462]" dest="(: ( [120024,120025]"/>
  <match src="(: ( [1596,1597]" dest="(: ( [1646,1647]"/>
  <match src="call_argument [109785,109832]" dest="call_argument [107732,107779]"/>
  <match src="call_argument [98496,98503]" dest="call_argument [96812,96819]"/>
  <match src=".: . [5166,5167]" dest=".: . [5337,5338]"/>
  <match src="identifier: destinationChainId [7371,7389]" dest="identifier: destinationChainId [8226,8244]"/>
  <match src="call_argument [107734,107739]" dest="call_argument [105558,105563]"/>
  <match src="address: address [60761,60768]" dest="address: address [57954,57961]"/>
  <match src="): ) [62533,62534]" dest="): ) [59780,59781]"/>
  <match src="identifier: _tokenId [36299,36307]" dest="identifier: _tokenId [32643,32651]"/>
  <match src="uint256: uint256 [96803,96810]" dest="uint256: uint256 [95061,95068]"/>
  <match src="function_definition [15215,15368]" dest="function_definition [16138,16293]"/>
  <match src="view: view [83804,83808]" dest="view: view [81693,81697]"/>
  <match src="(: ( [83764,83765]" dest="(: ( [81653,81654]"/>
  <match src="call_argument [48732,48750]" dest="call_argument [45611,45629]"/>
  <match src="member_expression [73874,73884]" dest="member_expression [71464,71474]"/>
  <match src="&quot;: &quot; [10016,10017]" dest="&quot;: &quot; [10932,10933]"/>
  <match src="call_expression [76666,76688]" dest="call_expression [74349,74371]"/>
  <match src=",: , [100360,100361]" dest=",: , [98728,98729]"/>
  <match src="boolean_literal [113138,113142]" dest="boolean_literal [111293,111297]"/>
  <match src="memory: memory [4937,4943]" dest="memory: memory [5086,5092]"/>
  <match src="): ) [109178,109179]" dest="): ) [107038,107039]"/>
  <match src="identifier: recipient [39101,39110]" dest="identifier: recipient [35509,35518]"/>
  <match src=",: , [40300,40301]" dest=",: , [36757,36758]"/>
  <match src=":: : [46952,46953]" dest=":: : [43791,43792]"/>
  <match src="binary_expression [81763,81790]" dest="binary_expression [79590,79617]"/>
  <match src="): ) [35584,35585]" dest="): ) [31901,31902]"/>
  <match src="primitive_type [4917,4921]" dest="primitive_type [5066,5070]"/>
  <match src="contract: contract [41372,41380]" dest="contract: contract [37868,37876]"/>
  <match src=",: , [84389,84390]" dest=",: , [82293,82294]"/>
  <match src="identifier: abi [23534,23537]" dest="identifier: abi [38409,38412]"/>
  <match src="call_expression [83077,83132]" dest="call_expression [80944,80999]"/>
  <match src="(: ( [117185,117186]" dest="(: ( [113674,113675]"/>
  <match src="identifier: _mint [96302,96307]" dest="identifier: _mint [94544,94549]"/>
  <match src="!=: != [51031,51033]" dest="!=: != [47979,47981]"/>
  <match src="call_argument [70617,70620]" dest="call_argument [68114,68117]"/>
  <match src="identifier: tokenId [97469,97476]" dest="identifier: tokenId [95751,95758]"/>
  <match src="function_definition [19278,19847]" dest="function_definition [18919,19390]"/>
  <match src="address: address [108315,108322]" dest="address: address [106152,106159]"/>
  <match src="function: function [88962,88970]" dest="function: function [87002,87010]"/>
  <match src="state_mutability [74599,74603]" dest="state_mutability [72212,72216]"/>
  <match src="solidity: solidity [59235,59243]" dest="solidity: solidity [56384,56392]"/>
  <match src="parameter [65029,65038]" dest="parameter [62356,62365]"/>
  <match src=",: , [81688,81689]" dest=",: , [79514,79515]"/>
  <match src="return_statement [67654,67663]" dest="return_statement [65059,65068]"/>
  <match src="internal: internal [6093,6101]" dest="internal: internal [6291,6299]"/>
  <match src="(: ( [25621,25622]" dest="(: ( [22659,22660]"/>
  <match src="): ) [53158,53159]" dest="): ) [50143,50144]"/>
  <match src="(: ( [65062,65063]" dest="(: ( [62389,62390]"/>
  <match src="expression_statement [107313,107347]" dest="expression_statement [105166,105200]"/>
  <match src="bytes: bytes [112225,112230]" dest="bytes: bytes [111820,111825]"/>
  <match src="identifier: c [66315,66316]" dest="identifier: c [63684,63685]"/>
  <match src="primitive_type [55657,55664]" dest="primitive_type [52709,52716]"/>
  <match src="identifier: _from [39134,39139]" dest="identifier: _from [35543,35548]"/>
  <match src=",: , [95529,95530]" dest=",: , [93749,93750]"/>
  <match src="type_name [98257,98264]" dest="type_name [96569,96576]"/>
  <match src=",: , [66807,66808]" dest=",: , [64191,64192]"/>
  <match src="{: { [16026,16027]" dest="{: { [16501,16502]"/>
  <match src="uint256: uint256 [98940,98947]" dest="uint256: uint256 [97276,97283]"/>
  <match src="type_name [55797,55803]" dest="type_name [52852,52858]"/>
  <match src="function_body [1502,1617]" dest="function_body [1551,1669]"/>
  <match src="returns: returns [6629,6636]" dest="returns: returns [7460,7467]"/>
  <match src="parameter [83008,83019]" dest="parameter [80874,80885]"/>
  <match src="identifier: dailyLimit [23438,23448]" dest="identifier: isBridgedTokenDeployAcknowledged [38293,38325]"/>
  <match src="{: { [88767,88768]" dest="{: { [86798,86799]"/>
  <match src="primitive_type [50975,50982]" dest="primitive_type [47922,47929]"/>
  <match src="call_expression [108473,108500]" dest="call_expression [106315,106342]"/>
  <match src="}: } [64733,64734]" dest="}: } [62048,62049]"/>
  <match src="state_mutability [88735,88739]" dest="state_mutability [86766,86770]"/>
  <match src="{: { [113894,113895]" dest="{: { [112874,112875]"/>
  <match src="expression_statement [102207,102295]" dest="expression_statement [100641,100729]"/>
  <match src="type_name [82152,82159]" dest="type_name [79992,79999]"/>
  <match src="[: [ [58622,58623]" dest="[: [ [55750,55751]"/>
  <match src="comment: // AddressSet [73542,73555]" dest="comment: // AddressSet [71119,71132]"/>
  <match src="(: ( [27301,27302]" dest="(: ( [39303,39304]"/>
  <match src="type_name [55437,55444]" dest="type_name [52483,52490]"/>
  <match src="storage: storage [82104,82111]" dest="storage: storage [79944,79951]"/>
  <match src="): ) [48180,48181]" dest="): ) [45049,45050]"/>
  <match src="(: ( [102642,102643]" dest="(: ( [101087,101088]"/>
  <match src="(: ( [47715,47716]" dest="(: ( [44575,44576]"/>
  <match src="identifier: newOwner [5981,5989]" dest="identifier: newOwner [6173,6181]"/>
  <match src="primitive_type [55843,55849]" dest="primitive_type [52899,52905]"/>
  <match src="identifier: value [18998,19003]" dest="identifier: value [18632,18637]"/>
  <match src="identifier: target [11248,11254]" dest="identifier: target [12195,12201]"/>
  <match src="=&gt;: =&gt; [315,317]" dest="=&gt;: =&gt; [325,327]"/>
  <match src="}: } [48958,48959]" dest="}: } [45841,45842]"/>
  <match src="identifier: bytesToAddress [34347,34361]" dest="identifier: bytesToAddress [30638,30652]"/>
  <match src="(: ( [73347,73348]" dest="(: ( [70919,70920]"/>
  <match src="string_literal [65099,65131]" dest="string_literal [62427,62459]"/>
  <match src="(: ( [65542,65543]" dest="(: ( [62884,62885]"/>
  <match src=",: , [47316,47317]" dest=",: , [44169,44170]"/>
  <match src="type_name [73402,73409]" dest="type_name [70974,70981]"/>
  <match src="identifier: Set [75192,75195]" dest="identifier: Set [72827,72830]"/>
  <match src="return: return [88862,88868]" dest="return: return [86896,86902]"/>
  <match src="expression_statement [96918,96977]" dest="expression_statement [95178,95237]"/>
  <match src="identifier: _name [45010,45015]" dest="identifier: _name [41811,41816]"/>
  <match src="user_defined_type [85888,85909]" dest="user_defined_type [83846,83867]"/>
  <match src="yul_evm_builtin [8687,8698]" dest="yul_evm_builtin [9578,9589]"/>
  <match src="call_expression [109844,109893]" dest="call_expression [108260,108309]"/>
  <match src="visibility [29792,29800]" dest="visibility [25959,25967]"/>
  <match src="address: address [5924,5931]" dest="address: address [6115,6122]"/>
  <match src="identifier: _tokenId [115209,115217]" dest="identifier: _tokenId [113802,113810]"/>
  <match src="state_mutability [22578,22582]" dest="state_mutability [116953,116957]"/>
  <match src=",: , [101404,101405]" dest=",: , [99801,99802]"/>
  <match src="if: if [36380,36382]" dest="if: if [32727,32729]"/>
  <match src="): ) [48307,48308]" dest="): ) [45177,45178]"/>
  <match src="): ) [102195,102196]" dest="): ) [100628,100629]"/>
  <match src="mload: mload [51469,51474]" dest="mload: mload [48425,48430]"/>
  <match src="expression_statement [97754,97791]" dest="expression_statement [96048,96085]"/>
  <match src=",: , [7207,7208]" dest=",: , [8055,8056]"/>
  <match src="identifier: lock [36385,36389]" dest="identifier: lock [32732,32736]"/>
  <match src=".: . [19440,19441]" dest=".: . [19104,19105]"/>
  <match src="call_argument [2220,2264]" dest="call_argument [2291,2335]"/>
  <match src="(: ( [93376,93377]" dest="(: ( [91547,91548]"/>
  <match src="returns: returns [32557,32564]" dest="returns: returns [28799,28806]"/>
  <match src="identifier: tokenId [33209,33216]" dest="identifier: tokenId [29466,29473]"/>
  <match src="identifier: _INTERFACE_ID_ERC721_METADATA [87738,87767]" dest="identifier: _INTERFACE_ID_ERC721_METADATA [85742,85771]"/>
  <match src="bool: bool [92519,92523]" dest="bool: bool [90665,90669]"/>
  <match src="identifier: buffer [43480,43486]" dest="identifier: buffer [40224,40230]"/>
  <match src="=: = [39236,39237]" dest="=: = [35648,35649]"/>
  <match src="function_body [35176,35640]" dest="function_body [31488,31959]"/>
  <match src="): ) [44251,44252]" dest="): ) [41027,41028]"/>
  <match src="identifier: b [68751,68752]" dest="identifier: b [66187,66188]"/>
  <match src="}: } [36542,36543]" dest="}: } [32893,32894]"/>
  <match src="identifier: bytesStorage [446,458]" dest="identifier: bytesStorage [458,470]"/>
  <match src="(: ( [45206,45207]" dest="(: ( [42011,42012]"/>
  <match src="): ) [107280,107281]" dest="): ) [105132,105133]"/>
  <match src="identifier: stringStorage [45084,45097]" dest="identifier: stringStorage [41888,41901]"/>
  <match src="identifier: encodePacked [48822,48834]" dest="identifier: encodePacked [45702,45714]"/>
  <match src="&quot;: &quot; [42580,42581]" dest="&quot;: &quot; [39210,39211]"/>
  <match src="function_body [75080,75144]" dest="function_body [72707,72773]"/>
  <match src="struct_member [82721,82732]" dest="struct_member [80577,80588]"/>
  <match src="expression_statement [82500,82537]" dest="expression_statement [80349,80386]"/>
  <match src="view: view [16006,16010]" dest="view: view [16481,16485]"/>
  <match src="type_name [67421,67428]" dest="type_name [64821,64828]"/>
  <match src="uint256: uint256 [46700,46707]" dest="uint256: uint256 [43536,43543]"/>
  <match src="true: true [113138,113142]" dest="true: true [111293,111297]"/>
  <match src="variable_declaration [89682,89705]" dest="variable_declaration [87746,87769]"/>
  <match src="{: { [90001,90002]" dest="{: { [88072,88073]"/>
  <match src=",: , [4929,4930]" dest=",: , [5078,5079]"/>
  <match src="primitive_type [64571,64578]" dest="primitive_type [61881,61888]"/>
  <match src="(: ( [15996,15997]" dest="(: ( [16471,16472]"/>
  <match src="}: } [1616,1617]" dest="}: } [1668,1669]"/>
  <match src="mapping: mapping [515,522]" dest="mapping: mapping [529,536]"/>
  <match src="address: address [91436,91443]" dest="address: address [89550,89557]"/>
  <match src="pragma: pragma [60199,60205]" dest="pragma: pragma [57374,57380]"/>
  <match src="return_type_definition [79455,79469]" dest="return_type_definition [77223,77237]"/>
  <match src="{: { [110518,110519]" dest="{: { [109098,109099]"/>
  <match src="variable_declaration [108457,108470]" dest="variable_declaration [106299,106312]"/>
  <match src="return_statement [3191,3267]" dest="return_statement [3287,3363]"/>
  <match src="(: ( [45522,45523]" dest="(: ( [42336,42337]"/>
  <match src="call_expression [20424,20448]" dest="call_expression [19979,20003]"/>
  <match src="identifier: _mediatorContract [15263,15280]" dest="identifier: _mediatorContract [16186,16203]"/>
  <match src=",: , [113815,113816]" dest=",: , [112821,112822]"/>
  <match src="identifier: MEDIATOR_CONTRACT [17258,17275]" dest="identifier: MEDIATOR_CONTRACT [17462,17479]"/>
  <match src="primitive_type [98257,98264]" dest="primitive_type [96569,96576]"/>
  <match src=".: . [58636,58637]" dest=".: . [55764,55765]"/>
  <match src="internal: internal [116242,116250]" dest="internal: internal [114866,114874]"/>
  <match src="identifier: length [5147,5153]" dest="identifier: length [5318,5324]"/>
  <match src="): ) [106133,106134]" dest="): ) [103960,103961]"/>
  <match src="type_name [78024,78031]" dest="type_name [75752,75759]"/>
  <match src="memory: memory [99381,99387]" dest="memory: memory [97727,97733]"/>
  <match src="identifier: IERC721Receiver [100289,100304]" dest="identifier: IERC721Receiver [98656,98671]"/>
  <match src="primitive_type [75713,75720]" dest="primitive_type [73367,73374]"/>
  <match src="identifier: keyIndex [78795,78803]" dest="identifier: keyIndex [76546,76554]"/>
  <match src="visibility [66820,66828]" dest="visibility [64204,64212]"/>
  <match src="bool: bool [59048,59052]" dest="bool: bool [56188,56192]"/>
  <match src="(: ( [57051,57052]" dest="(: ( [54140,54141]"/>
  <match src="call_argument [94563,94570]" dest="call_argument [92758,92765]"/>
  <match src="identifier: set [71298,71301]" dest="identifier: set [68814,68817]"/>
  <match src="): ) [7291,7292]" dest="): ) [8142,8143]"/>
  <match src="pragma: pragma [33316,33322]" dest="pragma: pragma [29578,29584]"/>
  <match src="identifier: tokenId [89611,89618]" dest="identifier: tokenId [87673,87680]"/>
  <match src="=: = [89706,89707]" dest="=: = [87770,87771]"/>
  <match src="call_expression [94530,94578]" dest="call_expression [92725,92773]"/>
  <match src="(: ( [86218,86219]" dest="(: ( [84185,84186]"/>
  <match src="): ) [83131,83132]" dest="): ) [80998,80999]"/>
  <match src="(: ( [81066,81067]" dest="(: ( [78871,78872]"/>
  <match src="}: } [74231,74232]" dest="}: } [71832,71833]"/>
  <match src="{: { [77992,77993]" dest="{: { [75718,75719]"/>
  <match src="memory: memory [34368,34374]" dest="memory: memory [30659,30665]"/>
  <match src="bytes32: bytes32 [74201,74208]" dest="bytes32: bytes32 [71801,71808]"/>
  <match src="solidity_version: 0.7.0 [68962,68967]" dest="solidity_version: 0.7.0 [66407,66412]"/>
  <match src="): ) [116359,116360]" dest="): ) [114986,114987]"/>
  <match src="boolean_literal [72585,72590]" dest="boolean_literal [70129,70134]"/>
  <match src="member_expression [18245,18271]" dest="member_expression [17750,17776]"/>
  <match src="(: ( [110804,110805]" dest="(: ( [109301,109302]"/>
  <match src="memory: memory [68761,68767]" dest="memory: memory [66197,66203]"/>
  <match src="return_statement [16621,16659]" dest="return_statement [118402,118440]"/>
  <match src=".: . [38658,38659]" dest=".: . [35057,35058]"/>
  <match src="function_definition [93227,93509]" dest="function_definition [91397,91682]"/>
  <match src="identifier: encodePacked [21191,21203]" dest="identifier: encodePacked [20753,20765]"/>
  <match src="identifier: isTokenRegistered [22143,22160]" dest="identifier: isTokenRegistered [21698,21715]"/>
  <match src="}: } [43193,43194]" dest="}: } [39926,39927]"/>
  <match src="&quot;: &quot; [114164,114165]" dest="&quot;: &quot; [22211,22212]"/>
  <match src="memory: memory [12334,12340]" dest="memory: memory [13306,13312]"/>
  <match src="member_expression [81291,81303]" dest="member_expression [79104,79116]"/>
  <match src="(: ( [98745,98746]" dest="(: ( [97071,97072]"/>
  <match src="identifier: executionDailyLimit [24748,24767]" dest="identifier: isTokenBridgingAllowed [23371,23393]"/>
  <match src="bytes32: bytes32 [82117,82124]" dest="bytes32: bytes32 [79957,79964]"/>
  <match src="[: [ [88882,88883]" dest="[: [ [86916,86917]"/>
  <match src="call_expression [95023,95053]" dest="call_expression [93230,93260]"/>
  <match src="private: private [79447,79454]" dest="private: private [77215,77222]"/>
  <match src="call_expression [107546,107566]" dest="call_expression [105404,105424]"/>
  <match src="mapping: mapping [86103,86110]" dest="mapping: mapping [84067,84074]"/>
  <match src="call_argument [103549,103550]" dest="call_argument [102021,102022]"/>
  <match src=",: , [91240,91241]" dest=",: , [89346,89347]"/>
  <match src="identifier: _messageId [117307,117317]" dest="identifier: _messageId [115830,115840]"/>
  <match src="primitive_type [75969,75973]" dest="primitive_type [73630,73634]"/>
  <match src="member_expression [79597,79609]" dest="member_expression [77367,77379]"/>
  <match src="(: ( [89602,89603]" dest="(: ( [87664,87665]"/>
  <match src="struct_member [78283,78321]" dest="struct_member [76020,76058]"/>
  <match src="assignment_expression [48690,48783]" dest="assignment_expression [45569,45662]"/>
  <match src="type_name [19667,19672]" dest="type_name [19260,19265]"/>
  <match src="comment: // EIP 1967 [57634,57645]" dest="comment: // EIP 1967 [54737,54748]"/>
  <match src="(: ( [89610,89611]" dest="(: ( [87672,87673]"/>
  <match src="(: ( [39152,39153]" dest="(: ( [35562,35563]"/>
  <match src="primitive_type [31927,31934]" dest="primitive_type [28150,28157]"/>
  <match src="virtual: virtual [99407,99414]" dest="virtual: virtual [97753,97760]"/>
  <match src="identifier: abi [46303,46306]" dest="identifier: abi [43130,43133]"/>
  <match src="bytes32: bytes32 [83094,83101]" dest="bytes32: bytes32 [80961,80968]"/>
  <match src="=: = [107454,107455]" dest="=: = [105310,105311]"/>
  <match src="function_definition [46083,46405]" dest="function_definition [42908,43233]"/>
  <match src="}: } [54978,54979]" dest="}: } [52008,52009]"/>
  <match src="primitive_type [11275,11281]" dest="primitive_type [12222,12228]"/>
  <match src=".: . [81294,81295]" dest=".: . [79107,79108]"/>
  <match src="identifier: interfaceId [63634,63645]" dest="identifier: interfaceId [60911,60922]"/>
  <match src="comment: // keccak256(abi.encodePacked(&quot;lock&quot;)) [35586,35624]" dest="comment: // keccak256(abi.encodePacked(&quot;lock&quot;)) [31903,31941]"/>
  <match src="identifier: addressStorage [5698,5712]" dest="identifier: addressStorage [5882,5896]"/>
  <match src="parameter [42892,42905]" dest="parameter [39619,39632]"/>
  <match src="identifier: setTokenURI [103840,103851]" dest="identifier: setTokenURI [102322,102333]"/>
  <match src="variable_declaration_statement [20350,20399]" dest="variable_declaration_statement [19904,19953]"/>
  <match src="comment: /**      * @dev Unlock/Mint back the bridged token that was bridged to the other network but failed.      * @param _messageId id of the failed message.      * @param _token address that bridged token contract.      * @param _recipient address that will receive the tokens.      * @param _tokenId unique id of the bridged token.      */ [113388,113723]" dest="comment: /**      * @dev Allows to send to the other network some ERC721 token that can be forced into the contract      * without the invocation of the required methods. (e. g. regular transferFrom without a call to onERC721Received)      * Before calling this method, it must be carefully investigated how imbalance happened      * in order to avoid an attempt to steal the funds from a token with double addresses.      * @param _token address of the token contract.      * @param _receiver the address that will receive the token on the other network.      * @param _tokenId unique id of the bridged token.      */ [108325,108942]"/>
  <match src="parameter [94420,94435]" dest="parameter [92613,92628]"/>
  <match src="type_name [81015,81018]" dest="type_name [78820,78823]"/>
  <match src="function_definition [33503,33578]" dest="function_definition [29773,29848]"/>
  <match src="visibility [25585,25593]" dest="visibility [22622,22630]"/>
  <match src="=: = [79595,79596]" dest="=: = [77365,77366]"/>
  <match src="identifier: remove [75685,75691]" dest="identifier: remove [73339,73345]"/>
  <match src="parameter [84884,84895]" dest="parameter [82805,82816]"/>
  <match src="(: ( [98632,98633]" dest="(: ( [96953,96954]"/>
  <match src="type_name [83765,83781]" dest="type_name [81654,81670]"/>
  <match src="returns: returns [12686,12693]" dest="returns: returns [13663,13670]"/>
  <match src="state_mutability [6495,6499]" dest="state_mutability [7322,7326]"/>
  <match src="{: { [33751,33752]" dest="{: { [30032,30033]"/>
  <match src="call_expression [36463,36491]" dest="call_expression [32811,32839]"/>
  <match src="primitive_type [101394,101401]" dest="primitive_type [99791,99798]"/>
  <match src="variable_declaration [81840,81862]" dest="variable_declaration [79669,79691]"/>
  <match src="primitive_type [117741,117748]" dest="primitive_type [116475,116482]"/>
  <match src="return: return [12964,12970]" dest="return: return [13947,13953]"/>
  <match src="type_name [81032,81039]" dest="type_name [78837,78844]"/>
  <match src="variable_declaration_statement [20408,20449]" dest="variable_declaration_statement [19963,20004]"/>
  <match src="pragma_directive [42705,42728]" dest="pragma_directive [39423,39446]"/>
  <match src="visibility [55604,55611]" dest="visibility [52654,52661]"/>
  <match src="type_name [12632,12639]" dest="type_name [13609,13616]"/>
  <match src="&gt;: &gt; [73448,73449]" dest="&gt;: &gt; [71021,71022]"/>
  <match src="type_name [91205,91212]" dest="type_name [89310,89317]"/>
  <match src="identifier: _INTERFACE_ID_ERC721_ENUMERABLE [88596,88627]" dest="identifier: _INTERFACE_ID_ERC721_ENUMERABLE [86621,86652]"/>
  <match src="(: ( [100358,100359]" dest="(: ( [98726,98727]"/>
  <match src="address: address [58998,59005]" dest="address: address [56136,56143]"/>
  <match src="variable_declaration_statement [95402,95435]" dest="variable_declaration_statement [93621,93654]"/>
  <match src="type_name [55733,55737]" dest="type_name [52786,52790]"/>
  <match src="}: } [62777,62778]" dest="}: } [60030,60031]"/>
  <match src="call_expression [100348,100360]" dest="call_expression [98716,98728]"/>
  <match src="(: ( [7321,7322]" dest="(: ( [8174,8175]"/>
  <match src="identifier: _remove [75769,75776]" dest="identifier: _remove [73424,73431]"/>
  <match src="): ) [57003,57004]" dest="): ) [54090,54091]"/>
  <match src="(: ( [4916,4917]" dest="(: ( [5065,5066]"/>
  <match src="user_defined_type [85440,85461]" dest="user_defined_type [83389,83410]"/>
  <match src="memory: memory [88293,88299]" dest="memory: memory [86311,86317]"/>
  <match src="): ) [6196,6197]" dest="): ) [6396,6397]"/>
  <match src="assignment_expression [39226,39265]" dest="assignment_expression [35638,35677]"/>
  <match src="if: if [100144,100146]" dest="if: if [98507,98509]"/>
  <match src="): ) [12417,12418]" dest="): ) [13390,13391]"/>
  <match src="primitive_type [41707,41711]" dest="primitive_type [38363,38367]"/>
  <match src="call_argument [5188,5198]" dest="call_argument [5359,5369]"/>
  <match src="assembly_statement [56420,56643]" dest="assembly_statement [53493,53720]"/>
  <match src="primitive_type [107576,107583]" dest="primitive_type [105434,105441]"/>
  <match src="state_mutability [7333,7337]" dest="state_mutability [8186,8190]"/>
  <match src="identifier: set [74647,74650]" dest="identifier: set [72261,72264]"/>
  <match src="parameter [59838,59853]" dest="parameter [57000,57015]"/>
  <match src="^:  ^ [7496,7498]" dest="^:  ^ [8357,8359]"/>
  <match src="): ) [45693,45694]" dest="): ) [42508,42509]"/>
  <match src="call_argument [84720,84723]" dest="call_argument [82635,82638]"/>
  <match src="identifier: from [92676,92680]" dest="identifier: from [90829,90833]"/>
  <match src="identifier: IBurnableMintableERC721Token [116441,116469]" dest="identifier: IBurnableMintableERC721Token [115070,115098]"/>
  <match src="call_argument [82183,82186]" dest="call_argument [80024,80027]"/>
  <match src="type_name [94960,94967]" dest="type_name [93166,93173]"/>
  <match src="}: } [15367,15368]" dest="}: } [16292,16293]"/>
  <match src="call_expression [83844,83863]" dest="call_expression [81734,81753]"/>
  <match src="identifier: map [82473,82476]" dest="identifier: map [80321,80324]"/>
  <match src="pragma: pragma [33622,33628]" dest="pragma: pragma [29897,29903]"/>
  <match src="identifier: tokenId [94968,94975]" dest="identifier: tokenId [93174,93181]"/>
  <match src="visibility [15999,16005]" dest="visibility [16474,16480]"/>
  <match src="identifier: this [19486,19490]" dest="identifier: this [19150,19154]"/>
  <match src="identifier: bridgeSpecificActionsOnTokenTransfer [111481,111517]" dest="identifier: _prepareMessage [110838,110853]"/>
  <match src="internal: internal [101423,101431]" dest="internal: internal [99820,99828]"/>
  <match src="identifier: _tokenId [112167,112175]" dest="identifier: _tokenId [111362,111370]"/>
  <match src="!=: != [103538,103540]" dest="!=: != [102010,102012]"/>
  <match src="expression_statement [20458,20486]" dest="expression_statement [20014,20042]"/>
  <match src="type_name [7096,7103]" dest="type_name [7940,7947]"/>
  <match src="call_argument [74189,74199]" dest="call_argument [71789,71799]"/>
  <match src="bytes: bytes [43341,43346]" dest="bytes: bytes [40081,40086]"/>
  <match src="call_argument [5053,5302]" dest="call_argument [5223,5474]"/>
  <match src="identifier: transactionHash [6468,6483]" dest="identifier: transactionHash [7295,7310]"/>
  <match src="internal: internal [49245,49253]" dest="internal: internal [46142,46150]"/>
  <match src="assembly_statement [13280,13434]" dest="assembly_statement [14270,14427]"/>
  <match src="identifier: _length [74639,74646]" dest="identifier: _length [72253,72260]"/>
  <match src="uint256: uint256 [65454,65461]" dest="uint256: uint256 [62795,62802]"/>
  <match src="primitive_type [20205,20212]" dest="primitive_type [19755,19762]"/>
  <match src="identifier: IOwnable [57466,57474]" dest="identifier: IOwnable [54565,54573]"/>
  <match src="call_expression [108511,108560]" dest="call_expression [106355,106404]"/>
  <match src="expression_statement [102066,102068]" dest="expression_statement [100493,100495]"/>
  <match src="call_expression [12495,12552]" dest="call_expression [13469,13526]"/>
  <match src="identifier: ERC721Reader [44521,44533]" dest="identifier: ERC721Reader [41311,41323]"/>
  <match src="number_literal: 0 [109830,109831]" dest="number_literal: 0 [107777,107778]"/>
  <match src="public: public [58567,58573]" dest="public: public [55694,55700]"/>
  <match src="identifier: messageValue [3116,3128]" dest="identifier: messageValue [3211,3223]"/>
  <match src="bool: bool [116167,116171]" dest="bool: bool [114788,114792]"/>
  <match src="comment: /**      * @dev Retrieves the total executed amount for particular token during specific day.      * @param _token address of the token contract.      * @param _day day number for which spent amount if requested.      * @return amount of tokens received from the bridge from the other side.      */ [22705,23003]" dest="comment: /**      * @dev Disabled execution operations for the particular token.      * @param _token address of the token contract, or address(0) for configuring the global restriction.      * @param _disable true for disabling.      */ [22322,22554]"/>
  <match src="{: { [115624,115625]" dest="{: { [114230,114231]"/>
  <match src="): ) [43379,43380]" dest="): ) [40119,40120]"/>
  <match src="function: function [95218,95226]" dest="function: function [93435,93443]"/>
  <match src="primitive_type [11256,11261]" dest="primitive_type [12203,12208]"/>
  <match src="visibility [74140,74148]" dest="visibility [71739,71747]"/>
  <match src="parameter [6985,6992]" dest="parameter [7824,7831]"/>
  <match src=",: , [109877,109878]" dest=",: , [108293,108294]"/>
  <match src="parameter [34362,34381]" dest="parameter [30653,30672]"/>
  <match src="struct_member [78024,78039]" dest="struct_member [75752,75767]"/>
  <match src="function_body [96837,97169]" dest="function_body [95095,95438]"/>
  <match src="): ) [34481,34482]" dest="): ) [30774,30775]"/>
  <match src="identifier: isTokenRegistered [26274,26291]" dest="identifier: isTokenRegistered [22135,22152]"/>
  <match src="type_cast_expression [84377,84389]" dest="type_cast_expression [82281,82293]"/>
  <match src="(: ( [36477,36478]" dest="(: ( [32825,32826]"/>
  <match src=",: , [39407,39408]" dest=",: , [35826,35827]"/>
  <match src="||: || [26271,26273]" dest="||: || [22132,22134]"/>
  <match src="identifier: _receiver [37062,37071]" dest="identifier: _receiver [33427,33436]"/>
  <match src="call_argument [112728,112734]" dest="call_argument [111604,111610]"/>
  <match src="return_statement [48222,48311]" dest="return_statement [45092,45181]"/>
  <match src="uint256: uint256 [97401,97408]" dest="uint256: uint256 [95682,95689]"/>
  <match src=",: , [98585,98586]" dest=",: , [96904,96905]"/>
  <match src="state_variable_declaration [4203,4262]" dest="state_variable_declaration [4331,4390]"/>
  <match src="uint256: uint256 [59022,59029]" dest="uint256: uint256 [56161,56168]"/>
  <match src="parameter [56329,56348]" dest="parameter [53398,53417]"/>
  <match src="visibility [326,334]" dest="visibility [336,344]"/>
  <match src="primitive_type [46104,46111]" dest="primitive_type [42929,42936]"/>
  <match src="(: ( [3171,3172]" dest="(: ( [3266,3267]"/>
  <match src="array_access [21165,21233]" dest="array_access [20727,20795]"/>
  <match src="call_expression [4958,5022]" dest="call_expression [5120,5190]"/>
  <match src="for: for [85436,85439]" dest="for: for [83385,83388]"/>
  <match src="primitive_type [31146,31153]" dest="primitive_type [27345,27352]"/>
  <match src="(: ( [111990,111991]" dest="(: ( [110146,110147]"/>
  <match src="uint256: uint256 [30583,30590]" dest="uint256: uint256 [26766,26773]"/>
  <match src="state_variable_declaration [245,294]" dest="state_variable_declaration [254,303]"/>
  <match src="parameter [46700,46716]" dest="parameter [43536,43552]"/>
  <match src="bytes4: bytes4 [4203,4209]" dest="bytes4: bytes4 [4331,4337]"/>
  <match src="): ) [84660,84661]" dest="): ) [82574,82575]"/>
  <match src="call_argument [84712,84724]" dest="call_argument [82627,82639]"/>
  <match src="number_literal: 0x01ffc9a7 [62407,62417]" dest="number_literal: 0x01ffc9a7 [59649,59659]"/>
  <match src="function_definition [95218,95547]" dest="function_definition [93435,93768]"/>
  <match src="number_literal: 1 [72303,72304]" dest="number_literal: 1 [69837,69838]"/>
  <match src="uint256: uint256 [29023,29030]" dest="uint256: uint256 [25166,25173]"/>
  <match src="parameter [12373,12385]" dest="parameter [13345,13357]"/>
  <match src="block_statement [12950,12992]" dest="block_statement [13932,13976]"/>
  <match src="call_argument [1570,1574]" dest="call_argument [1620,1624]"/>
  <match src="identifier: onlyBridge [102612,102622]" dest="identifier: onlyBridge [101056,101066]"/>
  <match src="primitive_type [102857,102864]" dest="primitive_type [101310,101317]"/>
  <match src="(: ( [68731,68732]" dest="(: ( [66167,66168]"/>
  <match src="identifier: tokenId [89719,89726]" dest="identifier: tokenId [87783,87790]"/>
  <match src="call_argument [95345,95391]" dest="call_argument [93563,93609]"/>
  <match src="!=: != [68834,68836]" dest="!=: != [66271,66273]"/>
  <match src="comment: /**      * @dev Stores the initial parameters of the mediator.      * @param _bridgeContract the address of the AMB bridge contract.      * @param _mediatorContract the address of the mediator contract on the other network.      * @param _dailyLimit daily limit for outgoing transfers      * @param _executionDailyLimit daily limit for ingoing bridge operations      * @param _requestGasLimit the gas limit for the message execution.      * @param _owner address of the owner of the mediator contract.      * @param _image address of the ERC721 token image.      */ [104573,105138]" dest="comment: // Workaround for storing variable up-to-32 bytes suffix [103096,103152]"/>
  <match src="): ) [96907,96908]" dest="): ) [95166,95167]"/>
  <match src="function_definition [101350,101443]" dest="function_definition [99747,99840]"/>
  <match src="identifier: messageFixed [20794,20806]" dest="identifier: messageFixed [20347,20359]"/>
  <match src="internal: internal [2176,2184]" dest="internal: internal [2246,2254]"/>
  <match src="identifier: _setTokenURI [115511,115523]" dest="identifier: _setTokenURI [114113,114125]"/>
  <match src="type_name [94394,94401]" dest="type_name [92587,92594]"/>
  <match src="primitive_type [95909,95916]" dest="primitive_type [94142,94149]"/>
  <match src="(: ( [29167,29168]" dest="(: ( [25315,25316]"/>
  <match src=",: , [111541,111542]" dest=",: , [110878,110879]"/>
  <match src="=: = [91244,91245]" dest="=: = [89350,89351]"/>
  <match src=".: . [112374,112375]" dest=".: . [111961,111962]"/>
  <match src="): ) [6358,6359]" dest="): ) [7181,7182]"/>
  <match src="call_argument [111991,111995]" dest="call_argument [110147,110151]"/>
  <match src="address: address [23449,23456]" dest="address: address [38326,38333]"/>
  <match src="function: function [92074,92082]" dest="function: function [90210,90218]"/>
  <match src="}: } [50235,50236]" dest="}: } [47158,47159]"/>
  <match src="comment: // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned [8331,8416]" dest="comment: // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned [9217,9302]"/>
  <match src="override_specifier [89219,89227]" dest="override_specifier [87266,87274]"/>
  <match src="binary_expression [80598,80615]" dest="binary_expression [78386,78403]"/>
  <match src="identifier: amount [9807,9813]" dest="identifier: amount [10719,10725]"/>
  <match src="address: address [17197,17204]" dest="address: address [17400,17407]"/>
  <match src="=: = [88371,88372]" dest="=: = [86391,86392]"/>
  <match src="call_expression [42553,42618]" dest="call_expression [39183,39237]"/>
  <match src="): ) [89361,89362]" dest="): ) [87415,87416]"/>
  <match src="private: private [62367,62374]" dest="private: private [59609,59616]"/>
  <match src="primitive_type [92519,92523]" dest="primitive_type [90665,90669]"/>
  <match src="yul_evm_builtin [34461,34466]" dest="yul_evm_builtin [30754,30759]"/>
  <match src="comment: /**      * @dev Stores the value of a message sent to the AMB bridge.      * @param _messageId of the message sent to the bridge.      * @param _value amount of tokens bridged.      */ [2604,2788]" dest="comment: /**      * @dev Stores the value of a message sent to the AMB bridge.      * @param _messageId of the message sent to the bridge.      * @param _value amount of tokens bridged.      */ [2686,2874]"/>
  <match src="primitive_type [84897,84903]" dest="primitive_type [82818,82824]"/>
  <match src="return: return [23926,23932]" dest="return: return [38800,38806]"/>
  <match src="indexed: indexed [21824,21831]" dest="indexed: indexed [21381,21388]"/>
  <match src="): ) [110481,110482]" dest="): ) [109061,109062]"/>
  <match src="parameter [30571,30581]" dest="parameter [26754,26764]"/>
  <match src="member_expression [4977,4999]" dest="member_expression [5145,5167]"/>
  <match src="primitive_type [83094,83101]" dest="primitive_type [80961,80968]"/>
  <match src="identifier: _token [112401,112407]" dest="identifier: _token [111993,111999]"/>
  <match src="identifier: _length [81218,81225]" dest="identifier: _length [79030,79037]"/>
  <match src="{: { [38175,38176]" dest="{: { [34565,34566]"/>
  <match src="(: ( [26267,26268]" dest="(: ( [22128,22129]"/>
  <match src="identifier: _symbol [101852,101859]" dest="identifier: _symbol [100270,100277]"/>
  <match src="binary_expression [1520,1576]" dest="binary_expression [1570,1626]"/>
  <match src="identifier: _name [118769,118774]" dest="identifier: _name [117040,117045]"/>
  <match src="): ) [44115,44116]" dest="): ) [40886,40887]"/>
  <match src="type_name [7133,7140]" dest="type_name [7978,7985]"/>
  <match src="function_definition [33456,33497]" dest="function_definition [29724,29765]"/>
  <match src="identifier: abi [3220,3223]" dest="identifier: abi [3316,3319]"/>
  <match src="identifier: REQUEST_GAS_LIMIT [16640,16657]" dest="identifier: REQUEST_GAS_LIMIT [118421,118438]"/>
  <match src="identifier: NFTOmnibridgeInfo [40050,40067]" dest="identifier: NFTOmnibridgeInfo [36500,36517]"/>
  <match src="{: { [21706,21707]" dest="{: { [21259,21260]"/>
  <match src=",: , [68752,68753]" dest=",: , [66188,66189]"/>
  <match src="}: } [46964,46965]" dest="}: } [43805,43806]"/>
  <match src="call_argument [65543,65549]" dest="call_argument [62885,62891]"/>
  <match src="): ) [23463,23464]" dest="): ) [38340,38341]"/>
  <match src="parameter [106083,106097]" dest="parameter [103910,103924]"/>
  <match src="user_defined_type [84210,84226]" dest="user_defined_type [82112,82128]"/>
  <match src="): ) [107414,107415]" dest="): ) [105269,105270]"/>
  <match src="calldata: calldata [106901,106909]" dest="calldata: calldata [104743,104751]"/>
  <match src="call_expression [18538,18554]" dest="call_expression [18051,18067]"/>
  <match src="): ) [12948,12949]" dest="): ) [13930,13931]"/>
  <match src="type_name [101777,101783]" dest="type_name [100193,100199]"/>
  <match src="call_argument [19486,19490]" dest="call_argument [19150,19154]"/>
  <match src="call_expression [91546,91698]" dest="call_expression [89663,89817]"/>
  <match src="number_literal: 0 [43463,43464]" dest="number_literal: 0 [40206,40207]"/>
  <match src="): ) [46328,46329]" dest="): ) [43155,43156]"/>
  <match src="storage: storage [75700,75707]" dest="storage: storage [73354,73361]"/>
  <match src=",: , [96384,96385]" dest=",: , [94627,94628]"/>
  <match src="comment: /**      * @dev Handles the bridged token for the first time, includes deployment of new ERC721TokenProxy contract.      * @param _token address of the native ERC721 token on the other side.      * @param _name name of the native token, name suffix will be appended, if empty, symbol will be used instead.      * @param _symbol symbol of the bridged token, if empty, name will be used instead.      * @param _recipient address that will receive the tokens.      * @param _tokenId unique id of the bridged token.      * @param _tokenURI URI for the bridged token instance.      */ [106242,106821]" dest="comment: /**      * @dev Handles the bridged token for the first time, includes deployment of new ERC721TokenProxy contract.      * @param _token address of the native ERC721 token on the other side.      * @param _name name of the native token, name suffix will be appended, if empty, symbol will be used instead.      * @param _symbol symbol of the bridged token, if empty, name will be used instead.      * @param _recipient address that will receive the tokens.      * @param _tokenId unique id of the bridged token.      * @param _tokenURI URI for the bridged token instance.      */ [104073,104660]"/>
  <match src="member_expression [39153,39165]" dest="member_expression [35563,35575]"/>
  <match src="type_name [107222,107228]" dest="type_name [105073,105079]"/>
  <match src="binary_expression [111660,111729]" dest="binary_expression [110992,111061]"/>
  <match src="comment: /**      * @dev Adds a key-value pair to a map, or updates the value for an existing      * key. O(1).      *      * Returns true if the key was added to the map, that is if it was not      * already present.      */ [78333,78549]" dest="comment: /**      * @dev Adds a key-value pair to a map, or updates the value for an existing      * key. O(1).      *      * Returns true if the key was added to the map, that is if it was not      * already present.      */ [76073,76295]"/>
  <match src="number_literal: 10 [43521,43523]" dest="number_literal: 10 [40265,40267]"/>
  <match src="=: = [87768,87769]" dest="=: = [85772,85773]"/>
  <match src="{: { [11335,11336]" dest="{: { [12282,12283]"/>
  <match src="identifier: length [79086,79092]" dest="identifier: length [76841,76847]"/>
  <match src="identifier: _token [114907,114913]" dest="identifier: _token [113528,113534]"/>
  <match src="type_cast_expression [90022,90067]" dest="type_cast_expression [88094,88139]"/>
  <match src="call_expression [111061,111078]" dest="call_expression [120847,120864]"/>
  <match src="return_type_definition [73837,73851]" dest="return_type_definition [71426,71440]"/>
  <match src="return_type_definition [65507,65524]" dest="return_type_definition [62848,62865]"/>
  <match src="identifier: _bridgeContract [103468,103483]" dest="identifier: _bridgeContract [101939,101954]"/>
  <match src="identifier: owner [88883,88888]" dest="identifier: owner [86917,86922]"/>
  <match src="parameter [7284,7291]" dest="parameter [8135,8142]"/>
  <match src="comment: /**  * @title Ownable  * @dev This contract has an owner address providing basic authorization control  */ [4055,4161]" dest="comment: /**  * @title Ownable  * @dev This contract has an owner address providing basic authorization control  */ [4178,4287]"/>
  <match src="primitive_type [21895,21902]" dest="primitive_type [21446,21453]"/>
  <match src="identifier: selector [100326,100334]" dest="identifier: selector [98693,98701]"/>
  <match src="&quot;: &quot; [92848,92849]" dest="&quot;: &quot; [91003,91004]"/>
  <match src="): ) [103967,103968]" dest="): ) [102450,102451]"/>
  <match src="function: function [33456,33464]" dest="function: function [29724,29732]"/>
  <match src="(: ( [108305,108306]" dest="(: ( [106141,106142]"/>
  <match src="type_name [83054,83058]" dest="type_name [80920,80924]"/>
  <match src="parameter [35155,35165]" dest="parameter [31467,31477]"/>
  <match src="identifier: _indexes [81094,81102]" dest="identifier: _indexes [78900,78908]"/>
  <match src=".: . [114067,114068]" dest=".: . [22746,22747]"/>
  <match src="binary_expression [43147,43157]" dest="binary_expression [39878,39888]"/>
  <match src="(: ( [107583,107584]" dest="(: ( [105441,105442]"/>
  <match src="comment: /*      *     bytes4(keccak256('totalSupply()')) == 0x18160ddd      *     bytes4(keccak256('tokenOfOwnerByIndex(address,uint256)')) == 0x2f745c59      *     bytes4(keccak256('tokenByIndex(uint256)')) == 0x4f6ccce7      *      *     =&gt; 0x18160ddd ^ 0x2f745c59 ^ 0x4f6ccce7 == 0x780e9d63      */ [87787,88080]" dest="comment: /*      *     bytes4(keccak256('totalSupply()')) == 0x18160ddd      *     bytes4(keccak256('tokenOfOwnerByIndex(address,uint256)')) == 0x2f745c59      *     bytes4(keccak256('tokenByIndex(uint256)')) == 0x4f6ccce7      *      *     =&gt; 0x18160ddd ^ 0x2f745c59 ^ 0x4f6ccce7 == 0x780e9d63      */ [85793,86092]"/>
  <match src="type_name [56991,56998]" dest="type_name [54078,54085]"/>
  <match src="identifier: encodeWithSelector [19691,19709]" dest="identifier: encodeWithSelector [19284,19302]"/>
  <match src="identifier: index [91168,91173]" dest="identifier: index [89273,89278]"/>
  <match src="string [3931,3949]" dest="string [4044,4062]"/>
  <match src="identifier: _token [113809,113815]" dest="identifier: _token [112786,112792]"/>
  <match src="call_argument [43373,43379]" dest="call_argument [40113,40119]"/>
  <match src="}: } [12558,12559]" dest="}: } [13533,13534]"/>
  <match src="): ) [95539,95540]" dest="): ) [93759,93760]"/>
  <match src="parameter [76632,76639]" dest="parameter [74314,74321]"/>
  <match src="true [113138,113142]" dest="true [111293,111297]"/>
  <match src="uint256: uint256 [117124,117131]" dest="uint256: uint256 [115668,115675]"/>
  <match src="identifier: _bridgeContract [105180,105195]" dest="identifier: _bridgeContract [119804,119819]"/>
  <match src="identifier: abi [2220,2223]" dest="identifier: abi [2291,2294]"/>
  <match src="call_expression [75992,76029]" dest="call_expression [73654,73691]"/>
  <match src="type_name [112012,112018]" dest="type_name [111674,111680]"/>
  <match src="parameter [101406,101421]" dest="parameter [99803,99818]"/>
  <match src="function_body [74622,74665]" dest="function_body [72235,72280]"/>
  <match src=",: , [36991,36992]" dest=",: , [33353,33354]"/>
  <match src="(: ( [112695,112696]" dest="(: ( [111571,111572]"/>
  <match src="(: ( [100716,100717]" dest="(: ( [99095,99096]"/>
  <match src="address: address [29815,29822]" dest="address: address [25982,25989]"/>
  <match src="override: override [102884,102892]" dest="override: override [101337,101345]"/>
  <match src="primitive_type [29599,29606]" dest="primitive_type [25757,25764]"/>
  <match src="function_definition [12246,12559]" dest="function_definition [13218,13534]"/>
  <match src="identifier: from [93261,93265]" dest="identifier: from [91431,91435]"/>
  <match src="visibility [59807,59815]" dest="visibility [56969,56977]"/>
  <match src="(: ( [2219,2220]" dest="(: ( [2290,2291]"/>
  <match src="identifier: require [96918,96925]" dest="identifier: require [95178,95185]"/>
  <match src="identifier: a [65885,65886]" dest="identifier: a [63243,63244]"/>
  <match src="public: public [48182,48188]" dest="public: public [45051,45057]"/>
  <match src="): ) [6484,6485]" dest="): ) [7311,7312]"/>
  <match src="bool: bool [9936,9940]" dest="bool: bool [10851,10855]"/>
  <match src="primitive_type [115583,115589]" dest="primitive_type [114188,114194]"/>
  <match src=":=: := [34458,34460]" dest=":=: := [30751,30753]"/>
  <match src="expression_statement [94522,94634]" dest="expression_statement [92717,92829]"/>
  <match src="(: ( [46740,46741]" dest="(: ( [43576,43577]"/>
  <match src="}: } [81118,81119]" dest="}: } [78925,78926]"/>
  <match src="type_name [21126,21133]" dest="type_name [20687,20694]"/>
  <match src="identifier: abi [2545,2548]" dest="identifier: abi [2624,2627]"/>
  <match src="identifier: from [98486,98490]" dest="identifier: from [96802,96806]"/>
  <match src="identifier: token [108525,108530]" dest="identifier: token [106369,106374]"/>
  <match src="parameter [105240,105259]" dest="parameter [118047,118064]"/>
  <match src="virtual: virtual [97427,97434]" dest="virtual: virtual [95708,95715]"/>
  <match src="): ) [74588,74589]" dest="): ) [72201,72202]"/>
  <match src="identifier: abi [112304,112307]" dest="identifier: abi [111886,111889]"/>
  <match src="comment: // Derived contracts need only register support for their own interfaces, [62595,62668]" dest="comment: // Derived contracts need only register support for their own interfaces, [59845,59918]"/>
  <match src="yul_path [13340,13350]" dest="yul_path [14331,14341]"/>
  <match src="pragma_directive [49061,49083]" dest="pragma_directive [45949,45971]"/>
  <match src="): ) [5208,5209]" dest="): ) [5379,5380]"/>
  <match src="function_definition [3794,3971]" dest="function_definition [3906,4085]"/>
  <match src="identifier: _dailyLimit [27328,27339]" dest="identifier: _state [39335,39341]"/>
  <match src="private: private [71144,71151]" dest="private: private [68658,68665]"/>
  <match src=",: , [74436,74437]" dest=",: , [72043,72044]"/>
  <match src="(: ( [112042,112043]" dest="(: ( [111704,111705]"/>
  <match src="(: ( [20521,20522]" dest="(: ( [20078,20079]"/>
  <match src="identifier: VersionableBridge [40071,40088]" dest="identifier: VersionableBridge [36521,36538]"/>
  <match src="state_mutability [60800,60804]" dest="state_mutability [57993,57997]"/>
  <match src="identifier: map [78861,78864]" dest="identifier: map [76613,76616]"/>
  <match src="): ) [103483,103484]" dest="): ) [101954,101955]"/>
  <match src="identifier: remove [83307,83313]" dest="identifier: remove [81182,81188]"/>
  <match src="identifier: errorMessage [67517,67529]" dest="identifier: errorMessage [64918,64930]"/>
  <match src="user_defined_type [13764,13771]" dest="user_defined_type [14785,14792]"/>
  <match src="visibility [706,714]" dest="visibility [729,737]"/>
  <match src="): ) [5649,5650]" dest="): ) [5832,5833]"/>
  <match src="type_name [46143,46149]" dest="type_name [42968,42974]"/>
  <match src="(: ( [105446,105447]" dest="(: ( [120009,120010]"/>
  <match src="return_type_definition [84644,84661]" dest="return_type_definition [82558,82575]"/>
  <match src="(: ( [54336,54337]" dest="(: ( [51342,51343]"/>
  <match src="identifier: _token [110690,110696]" dest="identifier: _token [109184,109190]"/>
  <match src="identifier: _tokenId [58674,58682]" dest="identifier: _tokenId [55802,55810]"/>
  <match src="identifier: _tokenOwners [91246,91258]" dest="identifier: _tokenOwners [89352,89364]"/>
  <match src="identifier: to [95905,95907]" dest="identifier: to [94138,94140]"/>
  <match src=",: , [46887,46888]" dest=",: , [43725,43726]"/>
  <match src="identifier: _values [72161,72168]" dest="identifier: _values [69693,69700]"/>
  <match src="identifier: Approval [29159,29167]" dest="identifier: Approval [25307,25315]"/>
  <match src="identifier: _setMediatorOwns [110788,110804]" dest="identifier: _setMediatorOwns [109285,109301]"/>
  <match src="): ) [110656,110657]" dest="): ) [109149,109150]"/>
  <match src="comment: // Clear approvals [97547,97565]" dest="comment: // Clear approvals [95833,95851]"/>
  <match src="returns: returns [81256,81263]" dest="returns: returns [79068,79075]"/>
  <match src="member_expression [60110,60118]" dest="member_expression [57278,57286]"/>
  <match src="identifier: buffer [43354,43360]" dest="identifier: buffer [40094,40100]"/>
  <match src="): ) [6390,6391]" dest="): ) [7213,7214]"/>
  <match src="(: ( [522,523]" dest="(: ( [536,537]"/>
  <match src="view: view [61052,61056]" dest="view: view [58251,58255]"/>
  <match src="call_argument [20552,20557]" dest="call_argument [20097,20102]"/>
  <match src="solidity_version:  0.7.5 [1739,1745]" dest="solidity_version:  0.7.5 [1796,1802]"/>
  <match src="call_argument [45737,45745]" dest="call_argument [42553,42561]"/>
  <match src="identifier: newLimit [21847,21855]" dest="identifier: disabled [21401,21409]"/>
  <match src="}: } [107825,107826]" dest="}: } [105651,105652]"/>
  <match src="comment: /**  * @title BasicAMBMediator  * @dev Basic storage and methods needed by mediators to interact with AMB bridge.  */ [13617,13734]" dest="comment: /**  * @title BasicAMBMediator  * @dev Basic storage and methods needed by mediators to interact with AMB bridge.  */ [14625,14745]"/>
  <match src=",: , [108357,108358]" dest=",: , [106195,106196]"/>
  <match src="): ) [112765,112766]" dest="): ) [111641,111642]"/>
  <match src="call_argument [6179,6186]" dest="call_argument [6379,6386]"/>
  <match src="uint256: uint256 [39417,39424]" dest="uint256: uint256 [35837,35844]"/>
  <match src="identifier: _safeTransfer [94380,94393]" dest="identifier: _safeTransfer [92573,92586]"/>
  <match src="member_expression [45663,45692]" dest="member_expression [42478,42507]"/>
  <match src="array_access [27263,27325]" dest="array_access [39265,39332]"/>
  <match src="expression_statement [25614,25673]" dest="expression_statement [22652,22711]"/>
  <match src="string: string [106925,106931]" dest="string: string [104768,104774]"/>
  <match src="(: ( [92455,92456]" dest="(: ( [90601,90602]"/>
  <match src="identifier: _token [113351,113357]" dest="identifier: _token [109504,109510]"/>
  <match src="type_name [109082,109089]" dest="type_name [106940,106947]"/>
  <match src="state_mutability [58574,58578]" dest="state_mutability [55701,55705]"/>
  <match src="identifier: _image [50112,50118]" dest="identifier: _image [47032,47038]"/>
  <match src="binary_expression [82602,82614]" dest="binary_expression [80452,80464]"/>
  <match src="=&gt;: =&gt; [85885,85887]" dest="=&gt;: =&gt; [83843,83845]"/>
  <match src="identifier: _handleTokens [109190,109203]" dest="identifier: _handleTokens [107125,107138]"/>
  <match src=":: : [9975,9976]" dest=":: : [10890,10891]"/>
  <match src="identifier: maxGasPerTx [6407,6418]" dest="identifier: maxGasPerTx [7232,7243]"/>
  <match src="memory: memory [101784,101790]" dest="memory: memory [100200,100206]"/>
  <match src="return_type_definition [18210,18227]" dest="return_type_definition [17714,17731]"/>
  <match src="identifier: abi [46831,46834]" dest="identifier: abi [43669,43672]"/>
  <match src="identifier: _token [46389,46395]" dest="identifier: _token [43216,43222]"/>
  <match src="return: return [36522,36528]" dest="return: return [32872,32878]"/>
  <match src="}: } [78326,78327]" dest="}: } [76064,76065]"/>
  <match src="identifier: BRIDGE_CONTRACT [16063,16078]" dest="identifier: BRIDGE_CONTRACT [16539,16554]"/>
  <match src="type_name [93279,93286]" dest="type_name [91449,91456]"/>
  <match src="array_access [99092,99111]" dest="array_access [97430,97449]"/>
  <match src=".: . [112872,112873]" dest=".: . [112337,112338]"/>
  <match src="comment: /**      * @dev Removes a key-value pair from a map. O(1).      *      * Returns true if the key was removed from the map, that is if it was present.      */ [79238,79395]" dest="comment: /**      * @dev Removes a key-value pair from a map. O(1).      *      * Returns true if the key was removed from the map, that is if it was present.      */ [77001,77162]"/>
  <match src="(: ( [48923,48924]" dest="(: ( [45805,45806]"/>
  <match src="library: library [33737,33744]" dest="library: library [30018,30025]"/>
  <match src="address: address [100050,100057]" dest="address: address [98410,98417]"/>
  <match src="expression_statement [99092,99124]" dest="expression_statement [97430,97462]"/>
  <match src=",: , [88305,88306]" dest=",: , [86323,86324]"/>
  <match src="(: ( [53854,53855]" dest="(: ( [50853,50854]"/>
  <match src="public: public [62975,62981]" dest="public: public [60235,60241]"/>
  <match src="call_expression [98301,98379]" dest="call_expression [96614,96692]"/>
  <match src="!=: != [71343,71345]" dest="!=: != [68861,68863]"/>
  <match src="=: = [80345,80346]" dest="=: = [78128,78129]"/>
  <match src="parameter [26176,26190]" dest="parameter [22042,22056]"/>
  <match src="return: return [90177,90183]" dest="return: return [88252,88258]"/>
  <match src="-: - [71780,71781]" dest="-: - [69304,69305]"/>
  <match src="(: ( [4976,4977]" dest="(: ( [5144,5145]"/>
  <match src="parameter [65516,65523]" dest="parameter [62857,62864]"/>
  <match src="parameter [108339,108357]" dest="parameter [106177,106195]"/>
  <match src="parameter [73789,73811]" dest="parameter [71378,71400]"/>
  <match src="function: function [98212,98220]" dest="function: function [96524,96532]"/>
  <match src="identifier: require [57412,57419]" dest="identifier: require [54511,54518]"/>
  <match src="identifier: _onlyMediator [14407,14420]" dest="identifier: _onlyMediator [15268,15281]"/>
  <match src="(: ( [6612,6613]" dest="(: ( [7443,7444]"/>
  <match src="expression_statement [73421,73495]" dest="expression_statement [70994,71068]"/>
  <match src="&quot;: &quot; [2925,2926]" dest="&quot;: &quot; [3013,3014]"/>
  <match src="identifier: _releaseToken [114281,114294]" dest="identifier: _releaseToken [112885,112898]"/>
  <match src="): ) [18260,18261]" dest="): ) [17765,17766]"/>
  <match src="return_statement [90751,90789]" dest="return_statement [88842,88880]"/>
  <match src="visibility [6700,6708]" dest="visibility [7533,7541]"/>
  <match src="type_name [44236,44243]" dest="type_name [41012,41019]"/>
  <match src="identifier: EnumerableMap [85473,85486]" dest="identifier: EnumerableMap [83423,83436]"/>
  <match src="{: { [91214,91215]" dest="{: { [89319,89320]"/>
  <match src="function: function [24226,24234]" dest="function: function [23636,23644]"/>
  <match src="view: view [75057,75061]" dest="view: view [72684,72688]"/>
  <match src="=: = [80007,80008]" dest="=: = [77784,77785]"/>
  <match src="identifier: entry [81857,81862]" dest="identifier: entry [79686,79691]"/>
  <match src="string: string [112012,112018]" dest="string: string [111674,111680]"/>
  <match src="visibility [98274,98282]" dest="visibility [96586,96594]"/>
  <match src="identifier: _symbol [56372,56379]" dest="identifier: _symbol [53442,53449]"/>
  <match src="primitive_type [55368,55374]" dest="primitive_type [52413,52419]"/>
  <match src="!=: != [88791,88793]" dest="!=: != [86823,86825]"/>
  <match src="function_definition [95878,95986]" dest="function_definition [94111,94221]"/>
  <match src="comment: /**      * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.      *      * Requirements:      *      * - `tokenId` must exist.      */ [98777,98913]" dest="comment: /**      * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.      *      * Requirements:      *      * - `tokenId` must exist.      */ [97106,97248]"/>
  <match src="visibility [75048,75056]" dest="visibility [72675,72683]"/>
  <match src="parameter [88979,88994]" dest="parameter [87019,87034]"/>
  <match src="parameter [74101,74123]" dest="parameter [71700,71722]"/>
  <match src="view: view [6624,6628]" dest="view: view [7455,7459]"/>
  <match src="yul_path [34453,34457]" dest="yul_path [30746,30750]"/>
  <match src="): ) [72765,72766]" dest="): ) [70316,70317]"/>
  <match src="parameter [98257,98272]" dest="parameter [96569,96584]"/>
  <match src="member_expression [20893,20909]" dest="member_expression [20447,20463]"/>
  <match src="returns: returns [73393,73400]" dest="returns: returns [70965,70972]"/>
  <match src="identifier: _tokenId [39425,39433]" dest="identifier: _tokenId [35845,35853]"/>
  <match src="user_defined_type [72707,72710]" dest="user_defined_type [70258,70261]"/>
  <match src="state_mutability [64602,64606]" dest="state_mutability [61912,61916]"/>
  <match src="call_argument [110914,110920]" dest="call_argument [109374,109380]"/>
  <match src="primitive_type [25632,25639]" dest="primitive_type [22670,22677]"/>
  <match src="[: [ [72168,72169]" dest="[: [ [69700,69701]"/>
  <match src="identifier: _token [117083,117089]" dest="identifier: _token [115625,115631]"/>
  <match src="call_argument [112231,112237]" dest="call_argument [111826,111832]"/>
  <match src="memory: memory [44109,44115]" dest="memory: memory [40880,40886]"/>
  <match src="variable_declaration [43341,43360]" dest="variable_declaration [40081,40100]"/>
  <match src="primitive_type [43233,43240]" dest="primitive_type [39968,39975]"/>
  <match src="type_name [81840,81848]" dest="type_name [79669,79677]"/>
  <match src=",: , [104425,104426]" dest=",: , [102940,102941]"/>
  <match src="(: ( [89068,89069]" dest="(: ( [87109,87110]"/>
  <match src="return: return [83617,83623]" dest="return: return [81500,81506]"/>
  <match src="return_type_definition [73393,73410]" dest="return_type_definition [70965,70982]"/>
  <match src=".: . [84703,84704]" dest=".: . [82618,82619]"/>
  <match src=",: , [93149,93150]" dest=",: , [91313,91314]"/>
  <match src="assignment_expression [92241,92294]" dest="assignment_expression [90380,90433]"/>
  <match src="(: ( [76001,76002]" dest="(: ( [73663,73664]"/>
  <match src="function_definition [84574,84734]" dest="function_definition [82488,82650]"/>
  <match src="parameter [34406,34418]" dest="parameter [30697,30709]"/>
  <match src="primitive_type [106894,106900]" dest="primitive_type [104736,104742]"/>
  <match src="identifier: _token [114295,114301]" dest="identifier: _token [112899,112905]"/>
  <match src="identifier: index [84353,84358]" dest="identifier: index [82256,82261]"/>
  <match src="call_argument [90029,90066]" dest="call_argument [88101,88138]"/>
  <match src="override_specifier [91848,91856]" dest="override_specifier [89975,89983]"/>
  <match src="false: false [108532,108537]" dest="false: false [106376,106381]"/>
  <match src="inheritance_specifier [104326,104349]" dest="inheritance_specifier [102838,102861]"/>
  <match src="): ) [6816,6817]" dest="): ) [7651,7652]"/>
  <match src="string [46954,46956]" dest="string [43793,43795]"/>
  <match src="identifier: entry [81914,81919]" dest="identifier: entry [79744,79749]"/>
  <match src="&quot;: &quot; [91533,91534]" dest="&quot;: &quot; [89648,89649]"/>
  <match src="primitive_type [89026,89033]" dest="primitive_type [87066,87073]"/>
  <match src="function_definition [90643,90795]" dest="function_definition [88733,88887]"/>
  <match src="public: public [90889,90895]" dest="public: public [88986,88992]"/>
  <match src="(: ( [43372,43373]" dest="(: ( [40112,40113]"/>
  <match src="identifier: name [107196,107200]" dest="identifier: name [105046,105050]"/>
  <match src="function_body [25604,25724]" dest="function_body [22641,22865]"/>
  <match src="contract: contract [18820,18828]" dest="contract: contract [18453,18461]"/>
  <match src="call_argument [23551,23563]" dest="call_argument [38426,38443]"/>
  <match src=".: . [81093,81094]" dest=".: . [78899,78900]"/>
  <match src=",: , [37071,37072]" dest=",: , [33436,33437]"/>
  <match src="type_name [111741,111745]" dest="type_name [23723,23727]"/>
  <match src="array_access [97043,97060]" dest="array_access [95307,95324]"/>
  <match src="identifier: spender [95254,95261]" dest="identifier: spender [93471,93478]"/>
  <match src="identifier: onlyOwner [26222,26231]" dest="identifier: onlyOwner [22082,22091]"/>
  <match src="identifier: to [98397,98399]" dest="identifier: to [96711,96713]"/>
  <match src="binary_expression [4701,4722]" dest="binary_expression [4842,4863]"/>
  <match src="||: || [106186,106188]" dest="||: || [104014,104016]"/>
  <match src="[: [ [27274,27275]" dest="[: [ [39276,39277]"/>
  <match src="comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [59976,60094]" dest="comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [57143,57261]"/>
  <match src="returns: returns [7124,7131]" dest="returns: returns [7969,7976]"/>
  <match src="type_name [81067,81071]" dest="type_name [78872,78876]"/>
  <match src=".: . [97060,97061]" dest=".: . [95324,95325]"/>
  <match src="&quot;: &quot; [93152,93153]" dest="&quot;: &quot; [91316,91317]"/>
  <match src="visibility [38166,38174]" dest="visibility [34556,34564]"/>
  <match src="event_definition [29153,29242]" dest="event_definition [25301,25390]"/>
  <match src="identifier: selector [45684,45692]" dest="identifier: selector [42499,42507]"/>
  <match src="function_definition [116982,117559]" dest="function_definition [115546,115986]"/>
  <match src="uint256: uint256 [65516,65523]" dest="uint256: uint256 [62857,62864]"/>
  <match src="identifier: getBridgeInterfacesVersion [39592,39618]" dest="identifier: getBridgeInterfacesVersion [36021,36047]"/>
  <match src="identifier: MapEntry [77983,77991]" dest="identifier: MapEntry [75709,75717]"/>
  <match src="): ) [93398,93399]" dest="): ) [91569,91570]"/>
  <match src="contract_declaration [44512,46965]" dest="contract_declaration [41302,43806]"/>
  <match src="parameter [60541,60548]" dest="parameter [57728,57735]"/>
  <match src="identifier: balance [12419,12426]" dest="identifier: balance [13392,13399]"/>
  <match src="return_statement [73504,73530]" dest="return_statement [71078,71104]"/>
  <match src="call_argument [115197,115207]" dest="call_argument [113790,113800]"/>
  <match src="parameter [94437,94455]" dest="parameter [92630,92648]"/>
  <match src="(: ( [73401,73402]" dest="(: ( [70973,70974]"/>
  <match src="yul_function_call [54322,54362]" dest="yul_function_call [51328,51368]"/>
  <match src="call_expression [102261,102285]" dest="call_expression [100695,100719]"/>
  <match src="return_statement [8718,8770]" dest="return_statement [9610,9662]"/>
  <match src="primitive_type [21816,21823]" dest="primitive_type [21373,21380]"/>
  <match src="type_name [67483,67490]" dest="type_name [64883,64890]"/>
  <match src="identifier: map [83406,83409]" dest="identifier: map [81282,81285]"/>
  <match src="address: address [16302,16309]" dest="address: address [16785,16792]"/>
  <match src="identifier: NFTBridgeLimits [104431,104446]" dest="identifier: NFTBridgeLimits [102947,102962]"/>
  <match src="primitive_type [23907,23914]" dest="primitive_type [38783,38787]"/>
  <match src="member_expression [114064,114080]" dest="member_expression [22743,22759]"/>
  <match src="call_argument [36463,36491]" dest="call_argument [32811,32839]"/>
  <match src="address: address [95897,95904]" dest="address: address [94130,94137]"/>
  <match src="identifier: _name [106910,106915]" dest="identifier: _name [104752,104757]"/>
  <match src="}: } [563,564]" dest="}: } [578,579]"/>
  <match src="]: ] [17275,17276]" dest="]: ] [17479,17480]"/>
  <match src="variable_declaration_statement [19667,19738]" dest="variable_declaration_statement [18992,19023]"/>
  <match src="identifier: to [98253,98255]" dest="identifier: to [96565,96567]"/>
  <match src="call_argument [92338,92346]" dest="call_argument [90478,90486]"/>
  <match src="type_name [40764,40770]" dest="type_name [37236,37242]"/>
  <match src="call_argument [103204,103212]" dest="call_argument [101667,101675]"/>
  <match src="bytes: bytes [107270,107275]" dest="bytes: bytes [105122,105127]"/>
  <match src="}: } [107695,107696]" dest="}: } [105517,105518]"/>
  <match src="type_name [117124,117131]" dest="type_name [115668,115675]"/>
  <match src="primitive_type [82385,82391]" dest="primitive_type [80232,80238]"/>
  <match src="identifier: addressStorage [3889,3903]" dest="identifier: addressStorage [4002,4016]"/>
  <match src="call_argument [91499,91534]" dest="call_argument [89614,89649]"/>
  <match src="=: = [19685,19686]" dest="=: = [19004,19005]"/>
  <match src="call_argument [97528,97535]" dest="call_argument [95812,95819]"/>
  <match src="type_name [64616,64623]" dest="type_name [61926,61933]"/>
  <match src="abstract: abstract [1855,1863]" dest="abstract: abstract [1919,1927]"/>
  <match src="identifier: status [46772,46778]" dest="identifier: status [43609,43615]"/>
  <match src="call_argument [20893,20937]" dest="call_argument [20447,20491]"/>
  <match src="return_type_definition [89228,89251]" dest="return_type_definition [87275,87298]"/>
  <match src="visibility [55446,55453]" dest="visibility [52492,52499]"/>
  <match src="identifier: _image [50223,50229]" dest="identifier: _image [47145,47151]"/>
  <match src="{: { [54922,54923]" dest="{: { [51950,51951]"/>
  <match src="(: ( [97853,97854]" dest="(: ( [96151,96152]"/>
  <match src="call_argument [83102,83105]" dest="call_argument [80969,80972]"/>
  <match src="uint256: uint256 [74613,74620]" dest="uint256: uint256 [72226,72233]"/>
  <match src="modifier_invocation [109114,109126]" dest="modifier_invocation [106973,106985]"/>
  <match src="parameter [83601,83605]" dest="parameter [81483,81487]"/>
  <match src="call_expression [11904,11991]" dest="call_expression [12867,12954]"/>
  <match src="mapping: mapping [55360,55367]" dest="mapping: mapping [52405,52412]"/>
  <match src="{: { [115007,115008]" dest="{: { [113632,113633]"/>
  <match src="binary_expression [66249,66254]" dest="binary_expression [63616,63621]"/>
  <match src="identifier: _messageId [111119,111129]" dest="identifier: _messageId [110490,110500]"/>
  <match src=",: , [9948,9949]" dest=",: , [10863,10864]"/>
  <match src="primitive_type [110763,110770]" dest="primitive_type [109258,109265]"/>
  <match src="inheritance_specifier [104355,104376]" dest="inheritance_specifier [102868,102889]"/>
  <match src=",: , [13398,13399]" dest=",: , [14390,14391]"/>
  <match src="return_type_definition [39659,39755]" dest="return_type_definition [36091,36191]"/>
  <match src="type_cast_expression [41768,41778]" dest="type_cast_expression [111231,111241]"/>
  <match src=".: . [112833,112834]" dest=".: . [112301,112302]"/>
  <match src="{: { [56429,56430]" dest="{: { [53502,53503]"/>
  <match src="function_definition [67397,67669]" dest="function_definition [64797,65075]"/>
  <match src="false: false [80895,80900]" dest="false: false [78693,78698]"/>
  <match src="): ) [20557,20558]" dest="): ) [20102,20103]"/>
  <match src="(: ( [60813,60814]" dest="(: ( [58006,58007]"/>
  <match src="identifier: _bridgeContract [16908,16923]" dest="identifier: _bridgeContract [17103,17118]"/>
  <match src="override: override [91417,91425]" dest="override: override [89530,89538]"/>
  <match src="mapping: mapping [299,306]" dest="mapping: mapping [309,316]"/>
  <match src="): ) [40252,40253]" dest="): ) [36708,36709]"/>
  <match src="parameter [96226,96236]" dest="parameter [94467,94477]"/>
  <match src="function_body [115007,115238]" dest="function_body [113632,113832]"/>
  <match src="comment: /**      * @dev Helper function for alternative receiver feature. Chooses the actual receiver out of sender and passed data.      * @param _from address of the token sender.      * @param _data passed data in the transfer message.      * @return recipient address of the receiver on the other side.      */ [38700,39006]" dest="comment: /**      * @dev Helper function for alternative receiver feature. Chooses the actual receiver out of sender and passed data.      * @param _from address of the token sender.      * @param _data passed data in the transfer message.      * @return recipient address of the receiver on the other side.      */ [35102,35413]"/>
  <match src="address: address [21895,21902]" dest="address: address [21446,21453]"/>
  <match src="inheritance_specifier [101656,101684]" dest="inheritance_specifier [100067,100095]"/>
  <match src="identifier: _INTERFACE_ID_ERC165 [62750,62770]" dest="identifier: _INTERFACE_ID_ERC165 [60002,60022]"/>
  <match src="identifier: length [76126,76132]" dest="identifier: length [73794,73800]"/>
  <match src="number_literal: 0 [88802,88803]" dest="number_literal: 0 [86834,86835]"/>
  <match src="(: ( [83374,83375]" dest="(: ( [81249,81250]"/>
  <match src="address: address [4533,4540]" dest="address: address [4668,4675]"/>
  <match src="pragma_directive [34565,34587]" dest="pragma_directive [30865,30887]"/>
  <match src="parameter [7066,7086]" dest="parameter [7909,7929]"/>
  <match src="type_name [46767,46771]" dest="type_name [43604,43608]"/>
  <match src="): ) [22210,22211]" dest="): ) [21765,21766]"/>
  <match src="identifier: keccak256 [42553,42562]" dest="identifier: keccak256 [39183,39192]"/>
  <match src="call_argument [116353,116359]" dest="call_argument [114980,114986]"/>
  <match src="(: ( [46320,46321]" dest="(: ( [43147,43148]"/>
  <match src="parameter [9739,9753]" dest="parameter [10650,10664]"/>
  <match src="identifier: a [66226,66227]" dest="identifier: a [63592,63593]"/>
  <match src="call_expression [59096,59157]" dest="call_expression [56238,56299]"/>
  <match src="=: = [43431,43432]" dest="=: = [40173,40174]"/>
  <match src="primitive_type [29815,29822]" dest="primitive_type [25982,25989]"/>
  <match src="call_argument [48835,48856]" dest="call_argument [45715,45736]"/>
  <match src="identifier: recipient [18979,18988]" dest="identifier: recipient [18613,18622]"/>
  <match src="identifier: _operatorApprovals [86265,86283]" dest="identifier: _operatorApprovals [84232,84250]"/>
  <match src=",: , [36281,36282]" dest=",: , [32624,32625]"/>
  <match src="bytes: bytes [111877,111882]" dest="bytes: bytes [109338,109343]"/>
  <match src="comment: /**      * @dev Burns some ERC721 token.      * Only bridge contract is authorized to burn tokens.      * @param _tokenId unique identifier of the burned token.      */ [102670,102838]" dest="comment: /**      * @dev Burns some ERC721 token.      * Only bridge contract is authorized to burn tokens.      * @param _tokenId unique identifier of the burned token.      */ [101118,101290]"/>
  <match src="primitive_type [55733,55737]" dest="primitive_type [52786,52790]"/>
  <match src="(: ( [84209,84210]" dest="(: ( [82111,82112]"/>
  <match src="identifier: from [98620,98624]" dest="identifier: from [96941,96945]"/>
  <match src="(: ( [38082,38083]" dest="(: ( [34468,34469]"/>
  <match src="call_expression [88869,88898]" dest="call_expression [86903,86932]"/>
  <match src="return_type_definition [6435,6452]" dest="return_type_definition [7260,7277]"/>
  <match src="string_literal [48271,48292]" dest="string_literal [45141,45162]"/>
  <match src="solidity: solidity [68952,68960]" dest="solidity: solidity [66397,66405]"/>
  <match src="solidity_version:  0.7.5 [54894,54900]" dest="solidity_version:  0.7.5 [51920,51926]"/>
  <match src="primitive_type [46943,46949]" dest="primitive_type [43782,43788]"/>
  <match src="identifier: _tokenId [33532,33540]" dest="identifier: _tokenId [29802,29810]"/>
  <match src="identifier: _transfer [92911,92920]" dest="identifier: _transfer [91068,91077]"/>
  <match src="function_definition [106826,107826]" dest="function_definition [104666,105652]"/>
  <match src="expression_statement [19502,19593]" dest="expression_statement [19167,19248]"/>
  <match src="primitive_type [81032,81039]" dest="primitive_type [78837,78844]"/>
  <match src="(: ( [28630,28631]" dest="(: ( [24757,24758]"/>
  <match src="identifier: IERC721Enumerable [60372,60389]" dest="identifier: IERC721Enumerable [57554,57571]"/>
  <match src="member_expression [9782,9803]" dest="member_expression [10694,10715]"/>
  <match src="parameter [75413,75426]" dest="parameter [73057,73070]"/>
  <match src="identifier: _registerInterface [62731,62749]" dest="identifier: _registerInterface [59983,60001]"/>
  <match src="}: } [20634,20635]" dest="}: } [20181,20182]"/>
  <match src="address: address [2494,2501]" dest="address: address [2572,2579]"/>
  <match src="yul_evm_builtin [53831,53834]" dest="yul_evm_builtin [50830,50833]"/>
  <match src="function: function [73776,73784]" dest="function: function [71365,71373]"/>
  <match src="function_definition [83517,83666]" dest="function_definition [81399,81550]"/>
  <match src="type_name [7347,7354]" dest="type_name [8200,8207]"/>
  <match src="mapping: mapping [464,471]" dest="mapping: mapping [477,484]"/>
  <match src="type_name [18929,18936]" dest="type_name [18563,18570]"/>
  <match src="string_literal [27302,27314]" dest="string_literal [39304,39321]"/>
  <match src="parameter [34659,34667]" dest="parameter [30962,30970]"/>
  <match src="): ) [18553,18554]" dest="): ) [18066,18067]"/>
  <match src="type_name [11240,11247]" dest="type_name [12187,12194]"/>
  <match src="primitive_type [64635,64642]" dest="primitive_type [61946,61953]"/>
  <match src="comment: // The Map implementation uses private functions, and user-facing [77701,77766]" dest="comment: // The Map implementation uses private functions, and user-facing [75421,75486]"/>
  <match src=",: , [113791,113792]" dest=",: , [112792,112793]"/>
  <match src="uint256: uint256 [66798,66805]" dest="uint256: uint256 [64182,64189]"/>
  <match src=",: , [111137,111138]" dest=",: , [110515,110516]"/>
  <match src="function: function [22134,22142]" dest="function: function [21689,21697]"/>
  <match src="{: { [45577,45578]" dest="{: { [42391,42392]"/>
  <match src="binary_expression [5053,5211]" dest="binary_expression [5223,5382]"/>
  <match src=",: , [100399,100400]" dest=",: , [98769,98770]"/>
  <match src=",: , [54340,54341]" dest=",: , [51346,51347]"/>
  <match src="visibility [55779,55786]" dest="visibility [52833,52840]"/>
  <match src="member_expression [14603,14613]" dest="member_expression [15513,15523]"/>
  <match src="call_argument [102270,102284]" dest="call_argument [100704,100718]"/>
  <match src="visibility [12678,12685]" dest="visibility [13655,13662]"/>
  <match src="(: ( [17534,17535]" dest="(: ( [118677,118678]"/>
  <match src=",: , [47802,47803]" dest=",: , [44663,44664]"/>
  <match src="state_mutability [59924,59928]" dest="state_mutability [57090,57094]"/>
  <match src="identifier: index [76602,76607]" dest="identifier: index [74284,74289]"/>
  <match src="return_statement [83837,83864]" dest="return_statement [81727,81754]"/>
  <match src="string [98415,98453]" dest="string [96729,96767]"/>
  <match src="parameter [70554,70567]" dest="parameter [68050,68063]"/>
  <match src="call_expression [100253,100428]" dest="call_expression [98619,98800]"/>
  <match src="else: else [72559,72563]" dest="else: else [70102,70106]"/>
  <match src="function: function [6824,6832]" dest="function: function [7661,7669]"/>
  <match src="primitive_type [12695,12700]" dest="primitive_type [13672,13677]"/>
  <match src="address: address [44970,44977]" dest="address: address [41770,41777]"/>
  <match src="type_name [114947,114954]" dest="type_name [113570,113577]"/>
  <match src="identifier: TOKEN_IMAGE_CONTRACT [49263,49283]" dest="identifier: TOKEN_IMAGE_CONTRACT [46160,46180]"/>
  <match src="override: override [92726,92734]" dest="override: override [90879,90887]"/>
  <match src="&quot;: &quot; [64678,64679]" dest="&quot;: &quot; [61990,61991]"/>
  <match src="member_expression [116345,116373]" dest="member_expression [114972,115000]"/>
  <match src="call_argument [111024,111053]" dest="call_argument [120809,120838]"/>
  <match src="struct_declaration [77976,78045]" dest="struct_declaration [75702,75774]"/>
  <match src="variable_declaration [43233,43247]" dest="variable_declaration [39968,39982]"/>
  <match src="call_expression [50991,51007]" dest="call_expression [47938,47954]"/>
  <match src="parameter [110460,110476]" dest="parameter [109039,109055]"/>
  <match src="(: ( [111000,111001]" dest="(: ( [120785,120786]"/>
  <match src="function_definition [48596,48959]" dest="function_definition [45474,45842]"/>
  <match src="virtual: virtual [22189,22196]" dest="virtual: virtual [21744,21751]"/>
  <match src="function_definition [88694,88905]" dest="function_definition [86725,86940]"/>
  <match src="bytes32: bytes32 [13778,13785]" dest="bytes32: bytes32 [14800,14807]"/>
  <match src="call_argument [93487,93494]" dest="call_argument [91659,91666]"/>
  <match src="call_expression [38488,38501]" dest="call_expression [34884,34897]"/>
  <match src="visibility [6421,6429]" dest="visibility [7246,7254]"/>
  <match src="returns: returns [73837,73844]" dest="returns: returns [71426,71433]"/>
  <match src="(: ( [114889,114890]" dest="(: ( [113509,113510]"/>
  <match src="identifier: NativeTokensRegistry [41381,41401]" dest="identifier: NativeTokensRegistry [37877,37897]"/>
  <match src="comment: // This means that we can only create new EnumerableMaps for types that fit [77876,77951]" dest="comment: // This means that we can only create new EnumerableMaps for types that fit [75599,75674]"/>
  <match src="identifier: owner [97453,97458]" dest="identifier: owner [95735,95740]"/>
  <match src="identifier: tokenId [93287,93294]" dest="identifier: tokenId [91457,91464]"/>
  <match src="comment: // When transferFrom is called, after the transfer, the ERC721 token might call onERC721Received from this contract [38272,38387]" dest="comment: // When transferFrom is called, after the transfer, the ERC721 token might call onERC721Received from this contract [34664,34779]"/>
  <match src="user_defined_type [75692,75699]" dest="user_defined_type [73346,73353]"/>
  <match src="string: string [82385,82391]" dest="string: string [80232,80238]"/>
  <match src="call_argument [38678,38686]" dest="call_argument [35077,35085]"/>
  <match src="[: [ [97669,97670]" dest="[: [ [95959,95960]"/>
  <match src="identifier: _value [21386,21392]" dest="identifier: _value [20926,20932]"/>
  <match src="call_argument [36444,36454]" dest="call_argument [32792,32802]"/>
  <match src="): ) [89121,89122]" dest="): ) [87162,87163]"/>
  <match src="identifier: onlyOwner [15291,15300]" dest="identifier: onlyOwner [16214,16223]"/>
  <match src="): ) [88765,88766]" dest="): ) [86796,86797]"/>
  <match src="type_name [105423,105427]" dest="type_name [119985,119989]"/>
  <match src="identifier: _token [116353,116359]" dest="identifier: _token [114980,114986]"/>
  <match src="primitive_type [71689,71696]" dest="primitive_type [69212,69219]"/>
  <match src="identifier: ExecutionDailyLimitChanged [21868,21894]" dest="identifier: TokenExecutionDisabled [21423,21445]"/>
  <match src="identifier: map [83634,83637]" dest="identifier: map [81517,81520]"/>
  <match src="external: external [7115,7123]" dest="external: external [7960,7968]"/>
  <match src="&quot;: &quot; [81827,81828]" dest="&quot;: &quot; [79654,79655]"/>
  <match src="comment: // We read and store the value's index to prevent multiple reads from the same storage slot [71177,71268]" dest="comment: // We read and store the value's index to prevent multiple reads from the same storage slot [68692,68783]"/>
  <match src="if: if [70602,70604]" dest="if: if [68099,68101]"/>
  <match src="identifier: key [83016,83019]" dest="identifier: key [80882,80885]"/>
  <match src="): ) [13397,13398]" dest="): ) [14389,14390]"/>
  <match src="}: } [73605,73606]" dest="}: } [71186,71187]"/>
  <match src="[: [ [16062,16063]" dest="[: [ [16538,16539]"/>
  <match src="pragma_directive [18682,18704]" dest="pragma_directive [18307,18329]"/>
  <match src="identifier: ptr [52237,52240]" dest="identifier: ptr [49204,49207]"/>
  <match src="parameter [93296,93314]" dest="parameter [91466,91484]"/>
  <match src="identifier: _functionCallWithValue [11352,11374]" dest="identifier: _functionCallWithValue [12300,12322]"/>
  <match src="type_name [84854,84870]" dest="type_name [82775,82791]"/>
  <match src="type_alias [85422,85435]" dest="type_alias [83371,83384]"/>
  <match src="comment: /**      * @dev Tells the address of the implementation where every call will be delegated.      * @return address of the implementation to which it will be delegated      */ [50443,50617]" dest="comment: /**      * @dev Tells the address of the implementation where every call will be delegated.      * @return address of the implementation to which it will be delegated      */ [47378,47555]"/>
  <match src="user_defined_type [104431,104446]" dest="user_defined_type [102947,102962]"/>
  <match src="primitive_type [48203,48210]" dest="primitive_type [45072,45079]"/>
  <match src="comment: /**      * @dev Allows the current owner to transfer control of the contract to a newOwner.      * @param newOwner the address to transfer ownership to.      */ [5732,5892]" dest="comment: /**      * @dev Allows the current owner to transfer control of the contract to a newOwner.      * @param newOwner the address to transfer ownership to.      */ [5919,6082]"/>
  <match src="): ) [100644,100645]" dest="): ) [99021,99022]"/>
  <match src="assignment_expression [100664,100693]" dest="assignment_expression [99042,99071]"/>
  <match src="binary_expression [109785,109832]" dest="binary_expression [107732,107779]"/>
  <match src=",: , [95261,95262]" dest=",: , [93478,93479]"/>
  <match src=":=: := [57043,57045]" dest=":=: := [54132,54134]"/>
  <match src="storage: storage [81849,81856]" dest="storage: storage [79678,79685]"/>
  <match src="identifier: a [66873,66874]" dest="identifier: a [64258,64259]"/>
  <match src="type_name [66809,66816]" dest="type_name [64193,64200]"/>
  <match src="expression_statement [97084,97114]" dest="expression_statement [95350,95380]"/>
  <match src="type_name [74355,74362]" dest="type_name [71961,71968]"/>
  <match src="call_expression [114064,114102]" dest="call_expression [22743,22788]"/>
  <match src="type_name [88713,88720]" dest="type_name [86744,86751]"/>
  <match src="primitive_type [50104,50111]" dest="primitive_type [47024,47031]"/>
  <match src="primitive_type [30571,30578]" dest="primitive_type [26754,26761]"/>
  <match src="returns: returns [83366,83373]" dest="returns: returns [81241,81248]"/>
  <match src=",: , [84895,84896]" dest=",: , [82816,82817]"/>
  <match src="visibility [106099,106105]" dest="visibility [103926,103932]"/>
  <match src="identifier: uintStorage [23512,23523]" dest="identifier: uintStorage [38387,38398]"/>
  <match src="visibility [115615,115623]" dest="visibility [114221,114229]"/>
  <match src="identifier: _bridgedToken [48294,48307]" dest="identifier: _bridgedToken [45164,45177]"/>
  <match src="): ) [36391,36392]" dest="): ) [32738,32739]"/>
  <match src="uint256: uint256 [85372,85379]" dest="uint256: uint256 [83319,83326]"/>
  <match src="parameter [11873,11885]" dest="parameter [12835,12847]"/>
  <match src="): ) [92356,92357]" dest="): ) [90496,90497]"/>
  <match src="): ) [63009,63010]" dest="): ) [60269,60270]"/>
  <match src="{: { [75452,75453]" dest="{: { [73096,73097]"/>
  <match src="identifier: interfaceId [28638,28649]" dest="identifier: interfaceId [24765,24776]"/>
  <match src="primitive_type [92668,92675]" dest="primitive_type [90821,90828]"/>
  <match src="identifier: to [33197,33199]" dest="identifier: to [29454,29456]"/>
  <match src="block_statement [43275,43332]" dest="block_statement [40011,40071]"/>
  <match src=",: , [93485,93486]" dest=",: , [91657,91658]"/>
  <match src="function_definition [20785,20946]" dest="function_definition [20338,20501]"/>
  <match src="(: ( [51005,51006]" dest="(: ( [47952,47953]"/>
  <match src="function: function [115502,115510]" dest="function: function [114104,114112]"/>
  <match src="string: string [12650,12656]" dest="string: string [13627,13633]"/>
  <match src="identifier: bridgeContract [14625,14639]" dest="identifier: bridgeContract [15478,15492]"/>
  <match src="user_defined_type [55289,55294]" dest="user_defined_type [52332,52337]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [68254,68714]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [65678,66149]"/>
  <match src="identifier: IUpgradeabilityOwnerStorage [1534,1561]" dest="identifier: IUpgradeabilityOwnerStorage [1584,1611]"/>
  <match src="inheritance_specifier [85303,85310]" dest="inheritance_specifier [83249,83256]"/>
  <match src="identifier: _setTokenURI [98927,98939]" dest="identifier: _setTokenURI [97263,97275]"/>
  <match src="type_name [3172,3179]" dest="type_name [3267,3274]"/>
  <match src="primitive_type [87714,87720]" dest="primitive_type [85718,85724]"/>
  <match src="}: } [66203,66204]" dest="}: } [63567,63568]"/>
  <match src="identifier: _lock [35579,35584]" dest="identifier: _lock [31896,31901]"/>
  <match src="primitive_type [24768,24775]" dest="primitive_type [23394,23401]"/>
  <match src="type_name [94420,94427]" dest="type_name [92613,92620]"/>
  <match src="primitive_type [74125,74132]" dest="primitive_type [71724,71731]"/>
  <match src="parameter [44994,45015]" dest="parameter [41795,41816]"/>
  <match src="): ) [98453,98454]" dest="): ) [96767,96768]"/>
  <match src="{: { [68187,68188]" dest="{: { [65607,65608]"/>
  <match src="expression_statement [98606,98642]" dest="expression_statement [96927,96963]"/>
  <match src="{: { [102904,102905]" dest="{: { [101357,101358]"/>
  <match src="return_statement [60103,60119]" dest="return_statement [57271,57287]"/>
  <match src="=&gt;: =&gt; [86440,86442]" dest="=&gt;: =&gt; [84416,84418]"/>
  <match src="identifier: _token [45223,45229]" dest="identifier: _token [42028,42034]"/>
  <match src="pragma_directive [33316,33338]" dest="pragma_directive [29578,29600]"/>
  <match src="identifier: previousOwner [4541,4554]" dest="identifier: previousOwner [4676,4689]"/>
  <match src="type_name [78568,78571]" dest="type_name [76315,76318]"/>
  <match src="yul_path [54681,54684]" dest="yul_path [51696,51699]"/>
  <match src="call_expression [91579,91616]" dest="call_expression [89696,89733]"/>
  <match src="primitive_type [85007,85014]" dest="primitive_type [82929,82936]"/>
  <match src="else: else [80869,80873]" dest="else: else [78666,78670]"/>
  <match src="call_argument [107785,107797]" dest="call_argument [105610,105622]"/>
  <match src=",: , [33216,33217]" dest=",: , [29473,29474]"/>
  <match src="call_argument [97020,97022]" dest="call_argument [95282,95284]"/>
  <match src="string_literal [89078,89121]" dest="string_literal [87119,87162]"/>
  <match src="function_body [9764,10084]" dest="function_body [10675,11001]"/>
  <match src="identifier: abi [112673,112676]" dest="identifier: abi [111549,111552]"/>
  <match src="identifier: abi [46925,46928]" dest="identifier: abi [43764,43767]"/>
  <match src="identifier: _burn [97395,97400]" dest="identifier: _burn [95676,95681]"/>
  <match src="comment: // keccak256(abi.encodePacked(&quot;bridgeContract&quot;)) [13890,13938]" dest="comment: // keccak256(abi.encodePacked(&quot;bridgeContract&quot;)) [14912,14960]"/>
  <match src="call_argument [100725,100732]" dest="call_argument [99104,99111]"/>
  <match src="identifier: abi [100253,100256]" dest="identifier: abi [98619,98622]"/>
  <match src="): ) [112281,112282]" dest="): ) [111520,111521]"/>
  <match src="): ) [6142,6143]" dest="): ) [6341,6342]"/>
  <match src="return_type_definition [36353,36369]" dest="return_type_definition [32699,32715]"/>
  <match src="}: } [83138,83139]" dest="}: } [81006,81007]"/>
  <match src="comment: // Equals to `bytes4(keccak256(&quot;onERC721Received(address,address,uint256,bytes)&quot;))` [85559,85642]" dest="comment: // Equals to `bytes4(keccak256(&quot;onERC721Received(address,address,uint256,bytes)&quot;))` [83512,83595]"/>
  <match src="override_specifier [90714,90722]" dest="override_specifier [88804,88812]"/>
  <match src=",: , [65027,65028]" dest=",: , [62354,62355]"/>
  <match src="call_argument [57475,57489]" dest="call_argument [54574,54588]"/>
  <match src="?: ? [46923,46924]" dest="?: ? [43762,43763]"/>
  <match src="): ) [64707,64708]" dest="): ) [62019,62020]"/>
  <match src="state_mutability [76618,76622]" dest="state_mutability [74300,74304]"/>
  <match src="}: } [58691,58692]" dest="}: } [55820,55821]"/>
  <match src="event_paramater [29414,29438]" dest="event_paramater [25567,25591]"/>
  <match src="function: function [31124,31132]" dest="function: function [27323,27331]"/>
  <match src="}: } [90794,90795]" dest="}: } [88886,88887]"/>
  <match src="expression_statement [105520,105571]" dest="expression_statement [120086,120137]"/>
  <match src="call_expression [92188,92200]" dest="call_expression [90325,90337]"/>
  <match src="identifier: value [74217,74222]" dest="identifier: value [71817,71822]"/>
  <match src="identifier: symbol [56674,56680]" dest="identifier: symbol [53753,53759]"/>
  <match src="): ) [19557,19558]" dest="): ) [19212,19213]"/>
  <match src="primitive_type [37449,37456]" dest="primitive_type [33823,33830]"/>
  <match src="parameter [25548,25562]" dest="parameter [22591,22605]"/>
  <match src="visibility [56961,56967]" dest="visibility [54048,54054]"/>
  <match src="(: ( [6443,6444]" dest="(: ( [7268,7269]"/>
  <match src="identifier: at [91259,91261]" dest="identifier: at [89365,89367]"/>
  <match src="(: ( [107531,107532]" dest="(: ( [105389,105390]"/>
  <match src=",: , [46318,46319]" dest=",: , [43145,43146]"/>
  <match src="identifier: remove [74094,74100]" dest="identifier: remove [71693,71699]"/>
  <match src="comment: /**      * @dev See {IERC721-balanceOf}.      */ [88641,88689]" dest="comment: /**      * @dev See {IERC721-balanceOf}.      */ [86669,86719]"/>
  <match src="): ) [83105,83106]" dest="): ) [80972,80973]"/>
  <match src="solidity_pragma_token [33629,33643]" dest="solidity_pragma_token [29904,29918]"/>
  <match src="): ) [26211,26212]" dest="): ) [22071,22072]"/>
  <match src="identifier: a [68208,68209]" dest="identifier: a [65629,65630]"/>
  <match src=",: , [37515,37516]" dest=",: , [33890,33891]"/>
  <match src="identifier: _indexes [72506,72514]" dest="identifier: _indexes [70046,70054]"/>
  <match src="identifier: encodePacked [114068,114080]" dest="identifier: encodePacked [22747,22759]"/>
  <match src="returns: returns [3854,3861]" dest="returns: returns [3966,3973]"/>
  <match src="address: address [11805,11812]" dest="address: address [12767,12774]"/>
  <match src="contract_declaration [50413,54833]" dest="contract_declaration [47347,51855]"/>
  <match src="modifier: modifier [4662,4670]" dest="modifier: modifier [4802,4810]"/>
  <match src="parameter [11240,11254]" dest="parameter [12187,12201]"/>
  <match src="(: ( [3509,3510]" dest="(: ( [3613,3614]"/>
  <match src="solidity_pragma_token [61,75]" dest="solidity_pragma_token [63,77]"/>
  <match src=",: , [75787,75788]" dest=",: , [73442,73443]"/>
  <match src="identifier: onlyOwner [109653,109662]" dest="identifier: onlyOwner [107597,107606]"/>
  <match src="identifier: status [46916,46922]" dest="identifier: status [43755,43761]"/>
  <match src="identifier: owner [95524,95529]" dest="identifier: owner [93744,93749]"/>
  <match src="identifier: _messageId [20387,20397]" dest="identifier: _messageId [19941,19951]"/>
  <match src="call_argument [5200,5209]" dest="call_argument [5371,5380]"/>
  <match src="primitive_type [82435,82442]" dest="primitive_type [80282,80289]"/>
  <match src="identifier: boolStorage [58611,58622]" dest="identifier: boolStorage [55739,55750]"/>
  <match src="=: = [21234,21235]" dest="=: = [20796,20797]"/>
  <match src="return_statement [47735,47820]" dest="return_statement [44596,44681]"/>
  <match src="comment: /**      * @dev Updates address of the used ERC721 token image.      * Only owner can call this method.      * @param _image address of the new token image.      */ [49412,49576]" dest="comment: /**      * @dev Updates address of the used ERC721 token image.      * Only owner can call this method.      * @param _image address of the new token image.      */ [46311,46479]"/>
  <match src="parameter [16602,16609]" dest="parameter [118382,118389]"/>
  <match src="address: address [106958,106965]" dest="address: address [104802,104809]"/>
  <match src="visibility [273,281]" dest="visibility [282,290]"/>
  <match src="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [59253,59752]" dest="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [56404,56912]"/>
  <match src=",: , [92336,92337]" dest=",: , [90476,90477]"/>
  <match src="identifier: _bridgedToken [48938,48951]" dest="identifier: _bridgedToken [45820,45833]"/>
  <match src="call_argument [116307,116313]" dest="call_argument [114933,114939]"/>
  <match src="function_definition [34620,35132]" dest="function_definition [30923,31442]"/>
  <match src="call_argument [97583,97593]" dest="call_argument [95870,95880]"/>
  <match src="yul_decimal_number: 0 [54342,54343]" dest="yul_decimal_number: 0 [51348,51349]"/>
  <match src="member_expression [45640,45662]" dest="member_expression [42455,42477]"/>
  <match src="function_body [36370,36543]" dest="function_body [32716,32894]"/>
  <match src="visibility [29576,29584]" dest="visibility [25734,25742]"/>
  <match src="function: function [92646,92654]" dest="function: function [90799,90807]"/>
  <match src="identifier: _tokenURI [107809,107818]" dest="identifier: _tokenURI [105634,105643]"/>
  <match src=",: , [12435,12436]" dest=",: , [13408,13409]"/>
  <match src="function_definition [24226,24406]" dest="function_definition [23636,23966]"/>
  <match src="call_expression [112797,112833]" dest="call_expression [112265,112301]"/>
  <match src="source_file [0,118801]" dest="source_file [0,120876]"/>
  <match src="(: ( [100162,100163]" dest="(: ( [98525,98526]"/>
  <match src="parameter [82117,82128]" dest="parameter [79957,79968]"/>
  <match src="yul_evm_builtin [53126,53129]" dest="yul_evm_builtin [50111,50114]"/>
  <match src="identifier: encodePacked [90033,90045]" dest="identifier: encodePacked [88105,88117]"/>
  <match src="call_argument [112524,112532]" dest="call_argument [112141,112149]"/>
  <match src="returns: returns [75437,75444]" dest="returns: returns [73081,73088]"/>
  <match src="): ) [90887,90888]" dest="): ) [88984,88985]"/>
  <match src="assembly_statement [57015,57129]" dest="assembly_statement [54103,54219]"/>
  <match src="function_body [893,941]" dest="function_body [918,968]"/>
  <match src="): ) [37022,37023]" dest="): ) [33386,33387]"/>
  <match src="pragma: pragma [49061,49067]" dest="pragma: pragma [45949,45955]"/>
  <match src="expression_statement [115681,115751]" dest="expression_statement [114289,114359]"/>
  <match src="uint256: uint256 [40197,40204]" dest="uint256: uint256 [36651,36658]"/>
  <match src="type_name [26176,26183]" dest="type_name [22042,22049]"/>
  <match src="primitive_type [39707,39713]" dest="primitive_type [36141,36147]"/>
  <match src="identifier: _token [46203,46209]" dest="identifier: _token [43029,43035]"/>
  <match src="call_argument [112736,112745]" dest="call_argument [111612,111621]"/>
  <match src="!=: != [111670,111672]" dest="!=: != [111002,111004]"/>
  <match src="visibility [90702,90708]" dest="visibility [88792,88798]"/>
  <match src="array_access [91976,92000]" dest="array_access [90106,90130]"/>
  <match src="pragma: pragma [626,632]" dest="pragma: pragma [645,651]"/>
  <match src="identifier: tokenId [97528,97535]" dest="identifier: tokenId [95812,95819]"/>
  <match src="identifier: _messageId [113339,113349]" dest="identifier: _messageId [109492,109502]"/>
  <match src="&gt;: &gt; [89996,89997]" dest="&gt;: &gt; [88067,88068]"/>
  <match src="parameter [73402,73409]" dest="parameter [70974,70981]"/>
  <match src="}: } [46962,46963]" dest="}: } [43802,43803]"/>
  <match src="return_type_definition [18503,18520]" dest="return_type_definition [18015,18032]"/>
  <match src="uint256: uint256 [2838,2845]" dest="uint256: uint256 [2925,2932]"/>
  <match src="{: { [18228,18229]" dest="{: { [17732,17733]"/>
  <match src="function_body [8232,8776]" dest="function_body [9116,9669]"/>
  <match src="identifier: to [31168,31170]" dest="identifier: to [27367,27369]"/>
  <match src=",: , [94418,94419]" dest=",: , [92611,92612]"/>
  <match src=",: , [48856,48857]" dest=",: , [45736,45737]"/>
  <match src="identifier: _messageId [20277,20287]" dest="identifier: _messageId [19828,19838]"/>
  <match src="address: address [55722,55729]" dest="address: address [52775,52782]"/>
  <match src="address: address [84974,84981]" dest="address: address [82896,82903]"/>
  <match src="pragma_directive [68945,68968]" dest="pragma_directive [66390,66413]"/>
  <match src="type_name [44276,44282]" dest="type_name [41052,41058]"/>
  <match src="function: function [93227,93235]" dest="function: function [91397,91405]"/>
  <match src="type_cast_expression [24768,24778]" dest="type_cast_expression [23394,23404]"/>
  <match src="): ) [88566,88567]" dest="): ) [86590,86591]"/>
  <match src="string_literal [46373,46387]" dest="string_literal [43200,43214]"/>
  <match src=",: , [12530,12531]" dest=",: , [13504,13505]"/>
  <match src=".: . [20896,20897]" dest=".: . [20450,20451]"/>
  <match src="returns: returns [105414,105421]" dest="returns: returns [119976,119983]"/>
  <match src="=&gt;: =&gt; [78300,78302]" dest="=&gt;: =&gt; [76037,76039]"/>
  <match src="identifier: setLock [38577,38584]" dest="identifier: setLock [34975,34982]"/>
  <match src="uint256: uint256 [67483,67490]" dest="uint256: uint256 [64883,64890]"/>
  <match src="visibility [108425,108433]" dest="visibility [106266,106274]"/>
  <match src="primitive_type [49237,49244]" dest="primitive_type [46134,46141]"/>
  <match src="primitive_type [65443,65450]" dest="primitive_type [62784,62791]"/>
  <match src="&quot;: &quot; [94580,94581]" dest="&quot;: &quot; [92775,92776]"/>
  <match src="(: ( [306,307]" dest="(: ( [316,317]"/>
  <match src="call_expression [110788,110828]" dest="call_expression [109285,109325]"/>
  <match src="assignment_expression [72261,72304]" dest="assignment_expression [69795,69838]"/>
  <match src="call_argument [76670,76680]" dest="call_argument [74353,74363]"/>
  <match src="(: ( [66248,66249]" dest="(: ( [63615,63616]"/>
  <match src="type_name [54968,54975]" dest="type_name [51997,52004]"/>
  <match src="indexed: indexed [29031,29038]" dest="indexed: indexed [25174,25181]"/>
  <match src=".: . [14606,14607]" dest=".: . [15516,15517]"/>
  <match src="parameter [117099,117114]" dest="parameter [115642,115657]"/>
  <match src="parameter [2451,2469]" dest="parameter [2529,2547]"/>
  <match src="struct_declaration [82687,82738]" dest="struct_declaration [80542,80595]"/>
  <match src="public: public [23465,23471]" dest="public: public [38342,38348]"/>
  <match src="return_type_definition [7124,7141]" dest="return_type_definition [7969,7986]"/>
  <match src="call_argument [45139,45145]" dest="call_argument [41943,41949]"/>
  <match src="}: } [23580,23581]" dest="}: } [38488,38489]"/>
  <match src="{: { [239,240]" dest="{: { [247,248]"/>
  <match src="array_access [89708,89727]" dest="array_access [87772,87791]"/>
  <match src="(: ( [91159,91160]" dest="(: ( [89264,89265]"/>
  <match src="call_expression [70644,70667]" dest="call_expression [68142,68165]"/>
  <match src="type_cast_expression [76014,76028]" dest="type_cast_expression [73676,73690]"/>
  <match src="internal: internal [39440,39448]" dest="internal: internal [35861,35869]"/>
  <match src="returns: returns [74149,74156]" dest="returns: returns [71748,71755]"/>
  <match src="address: address [116143,116150]" dest="address: address [114763,114770]"/>
  <match src="primitive_type [17197,17204]" dest="primitive_type [17400,17407]"/>
  <match src="call_argument [96926,96943]" dest="call_argument [95186,95203]"/>
  <match src="}: } [108616,108617]" dest="}: } [106462,106463]"/>
  <match src=",: , [117529,117530]" dest=",: , [115955,115956]"/>
  <match src="): ) [48764,48765]" dest="): ) [45643,45644]"/>
  <match src="visibility [21399,21407]" dest="visibility [20940,20948]"/>
  <match src="type_cast_expression [74209,74223]" dest="type_cast_expression [71809,71823]"/>
  <match src="identifier: _values [70168,70175]" dest="identifier: _values [67651,67658]"/>
  <match src="identifier: transferFrom [116361,116373]" dest="identifier: transferFrom [114988,115000]"/>
  <match src="call_expression [111024,111053]" dest="call_expression [120809,120838]"/>
  <match src="primitive_type [48159,48166]" dest="primitive_type [45028,45035]"/>
  <match src="function_body [65525,65617]" dest="function_body [62866,62963]"/>
  <match src="comment: /*                 if `result` is 0, revert.                 if `result` is 1, return `size` amount of data from `ptr`. This is the data that was                 copied to `ptr` from the delegatecall return data             */ [54376,54602]" dest="comment: /*                 if `result` is 0, revert.                 if `result` is 1, return `size` amount of data from `ptr`. This is the data that was                 copied to `ptr` from the delegatecall return data             */ [51384,51614]"/>
  <match src="type_name [93267,93274]" dest="type_name [91437,91444]"/>
  <match src="(: ( [106128,106129]" dest="(: ( [103955,103956]"/>
  <match src="parameter [95263,95278]" dest="parameter [93480,93495]"/>
  <match src="}: } [101444,101445]" dest="}: } [99842,99843]"/>
  <match src="primitive_type [9782,9789]" dest="primitive_type [10694,10701]"/>
  <match src="%: % [68872,68873]" dest="%: % [66310,66311]"/>
  <match src="call_expression [9999,10077]" dest="call_expression [10915,10993]"/>
  <match src="number_literal: 0 [66168,66169]" dest="number_literal: 0 [63530,63531]"/>
  <match src="identifier: isTokenRegistered [109734,109751]" dest="identifier: isTokenRegistered [107680,107697]"/>
  <match src="array_access [47742,47819]" dest="array_access [44603,44680]"/>
  <match src="inheritance_specifier [677,691]" dest="inheritance_specifier [699,713]"/>
  <match src="pragma_directive [62037,62060]" dest="pragma_directive [59266,59289]"/>
  <match src="identifier: functionCall [10929,10941]" dest="identifier: functionCall [11867,11879]"/>
  <match src="identifier: setCustomMetadata [44943,44960]" dest="identifier: setCustomMetadata [41742,41759]"/>
  <match src="string: string [11275,11281]" dest="string: string [12222,12228]"/>
  <match src="function_definition [71095,72607]" dest="function_definition [68609,70153]"/>
  <match src="): ) [9846,9847]" dest="): ) [10758,10759]"/>
  <match src="identifier: _tokenId [110698,110706]" dest="identifier: _tokenId [109192,109200]"/>
  <match src="parameter [17197,17222]" dest="parameter [17400,17425]"/>
  <match src="identifier: _tokenId [103860,103868]" dest="identifier: _tokenId [102342,102350]"/>
  <match src="type_name [68743,68750]" dest="type_name [66179,66186]"/>
  <match src="call_argument [96373,96375]" dest="call_argument [94616,94618]"/>
  <match src="string_literal [42580,42608]" dest="string_literal [39210,39227]"/>
  <match src="comment: /**      * @dev Sets that the message sent to the AMB bridge has been fixed.      * @param _messageId of the message sent to the bridge.      */ [20952,21096]" dest="comment: /**      * @dev Sets that the message sent to the AMB bridge has been fixed.      * @param _messageId of the message sent to the bridge.      */ [20509,20656]"/>
  <match src="(: ( [109699,109700]" dest="(: ( [107644,107645]"/>
  <match src="(: ( [75104,75105]" dest="(: ( [72732,72733]"/>
  <match src="returns: returns [71152,71159]" dest="returns: returns [68666,68673]"/>
  <match src="indexed: indexed [29011,29018]" dest="indexed: indexed [25154,25161]"/>
  <match src="public: public [91175,91181]" dest="public: public [89280,89286]"/>
  <match src="(: ( [20847,20848]" dest="(: ( [20400,20401]"/>
  <match src="call_argument [83406,83416]" dest="call_argument [81282,81292]"/>
  <match src="): ) [83058,83059]" dest="): ) [80924,80925]"/>
  <match src="&quot;: &quot; [114184,114185]" dest="&quot;: &quot; [22228,22229]"/>
  <match src="identifier: _impl [50983,50988]" dest="identifier: _impl [47930,47935]"/>
  <match src="visibility [13951,13959]" dest="visibility [14974,14982]"/>
  <match src=",: , [92117,92118]" dest=",: , [90253,90254]"/>
  <match src="[: [ [92567,92568]" dest="[: [ [90714,90715]"/>
  <match src="(: ( [97652,97653]" dest="(: ( [95942,95943]"/>
  <match src="if_statement [78791,79226]" dest="if_statement [76542,76986]"/>
  <match src="primitive_type [36317,36322]" dest="primitive_type [32662,32667]"/>
  <match src="string: string [44102,44108]" dest="string: string [40873,40879]"/>
  <match src="parameter [8226,8230]" dest="parameter [9110,9114]"/>
  <match src="modifier_invocation [25594,25603]" dest="modifier_invocation [22631,22640]"/>
  <match src="number_literal: 0 [112220,112221]" dest="number_literal: 0 [111815,111816]"/>
  <match src=",: , [103956,103957]" dest=",: , [102439,102440]"/>
  <match src="visibility [84630,84638]" dest="visibility [82544,82552]"/>
  <match src="identifier: EternalStorage [41405,41419]" dest="identifier: EternalStorage [37901,37915]"/>
  <match src="(: ( [14639,14640]" dest="(: ( [15492,15493]"/>
  <match src="(: ( [33469,33470]" dest="(: ( [29737,29738]"/>
  <match src="if: if [111905,111907]" dest="if: if [111212,111214]"/>
  <match src="returndatasize: returndatasize [54780,54794]" dest="returndatasize: returndatasize [51798,51812]"/>
  <match src="identifier: codehash [8675,8683]" dest="identifier: codehash [9566,9574]"/>
  <match src="string_literal [48835,48856]" dest="string_literal [45715,45736]"/>
  <match src="identifier: _receiver [111687,111696]" dest="identifier: _receiver [111019,111028]"/>
  <match src="identifier: add [73785,73788]" dest="identifier: add [71374,71377]"/>
  <match src="parameter [21326,21340]" dest="parameter [20864,20878]"/>
  <match src="]: ] [98667,98668]" dest="]: ] [96989,96990]"/>
  <match src="returns: returns [74384,74391]" dest="returns: returns [71990,71997]"/>
  <match src="): ) [97416,97417]" dest="): ) [95697,95698]"/>
  <match src="(: ( [58532,58533]" dest="(: ( [55659,55660]"/>
  <match src="view: view [44088,44092]" dest="view: view [40859,40863]"/>
  <match src="primitive_type [93253,93260]" dest="primitive_type [91423,91430]"/>
  <match src="false [72585,72590]" dest="false [70129,70134]"/>
  <match src="parameter [117124,117140]" dest="parameter [115668,115684]"/>
  <match src="identifier: _from [111559,111564]" dest="identifier: _from [109944,109949]"/>
  <match src="identifier: ownerOf [29767,29774]" dest="identifier: ownerOf [25934,25941]"/>
  <match src="type_name [6383,6390]" dest="type_name [7206,7213]"/>
  <match src="private: private [86451,86458]" dest="private: private [84427,84434]"/>
  <match src="number_literal: 0 [11389,11390]" dest="number_literal: 0 [12337,12338]"/>
  <match src="identifier: keccak256 [114054,114063]" dest="identifier: keccak256 [22733,22742]"/>
  <match src="primitive_type [6723,6727]" dest="primitive_type [7556,7560]"/>
  <match src="solidity: solidity [55085,55093]" dest="solidity: solidity [52119,52127]"/>
  <match src="{: { [893,894]" dest="{: { [918,919]"/>
  <match src="function_body [5961,5997]" dest="function_body [6152,6190]"/>
  <match src="call_argument [97469,97476]" dest="call_argument [95751,95758]"/>
  <match src=",: , [109210,109211]" dest=",: , [107145,107146]"/>
  <match src=".: . [72989,72990]" dest=".: . [70548,70549]"/>
  <match src="identifier: _token [42610,42616]" dest="identifier: _token [39229,39235]"/>
  <match src="primitive_type [90687,90694]" dest="primitive_type [88777,88784]"/>
  <match src=",: , [20620,20621]" dest=",: , [20166,20167]"/>
  <match src="internal: internal [74370,74378]" dest="internal: internal [71976,71984]"/>
  <match src="identifier: ptr [54681,54684]" dest="identifier: ptr [51696,51699]"/>
  <match src="identifier: require [102019,102026]" dest="identifier: require [100445,100452]"/>
  <match src="): ) [19473,19474]" dest="): ) [19137,19138]"/>
  <match src="return: return [20864,20870]" dest="return: return [20418,20424]"/>
  <match src="comment: /**      * @dev Fallback function allowing to perform a delegatecall to the given implementation.      * This function will return whatever the implementation call returns      */ [50692,50871]" dest="comment: /**      * @dev Fallback function allowing to perform a delegatecall to the given implementation.      * This function will return whatever the implementation call returns      */ [47633,47815]"/>
  <match src=",: , [96871,96872]" dest=",: , [95130,95131]"/>
  <match src="binary_expression [107140,107166]" dest="binary_expression [104989,105015]"/>
  <match src="external: external [6360,6368]" dest="external: external [7183,7191]"/>
  <match src="identifier: selector [19649,19657]" dest="identifier: selector [19325,19333]"/>
  <match src="identifier: isTokenRegistered [25646,25663]" dest="identifier: isTokenRegistered [22684,22701]"/>
  <match src="!: ! [38469,38470]" dest="!: ! [34863,34864]"/>
  <match src="identifier: _token [42058,42064]" dest="identifier: _token [109919,109925]"/>
  <match src="private: private [85738,85745]" dest="private: private [83693,83700]"/>
  <match src="type_name [65465,65471]" dest="type_name [62806,62812]"/>
  <match src="identifier: owner [5643,5648]" dest="identifier: owner [5826,5831]"/>
  <match src="identifier: TokensBridged [40265,40278]" dest="identifier: TokensBridged [36722,36735]"/>
  <match src="state_mutability [14580,14584]" dest="state_mutability [15448,15452]"/>
  <match src="string_literal [45790,45802]" dest="string_literal [42606,42618]"/>
  <match src="identifier: map [82589,82592]" dest="identifier: map [80439,80442]"/>
  <match src="primitive_type [23053,23060]" dest="primitive_type [39131,39138]"/>
  <match src="address: address [89026,89033]" dest="address: address [87066,87073]"/>
  <match src="type_name [18990,18997]" dest="type_name [18624,18631]"/>
  <match src="solidity_pragma_token [1121,1135]" dest="solidity_pragma_token [1157,1171]"/>
  <match src="type_name [113825,113832]" dest="type_name [112803,112810]"/>
  <match src=".: . [98625,98626]" dest=".: . [96946,96947]"/>
  <match src="identifier: UintToAddressMap [84587,84603]" dest="identifier: UintToAddressMap [82501,82517]"/>
  <match src="assembly: assembly [51055,51063]" dest="assembly: assembly [48004,48012]"/>
  <match src="(: ( [20473,20474]" dest="(: ( [20029,20030]"/>
  <match src="returns: returns [59937,59944]" dest="returns: returns [57103,57110]"/>
  <match src="identifier: _tokenId [110468,110476]" dest="identifier: _tokenId [109047,109055]"/>
  <match src="(: ( [23869,23870]" dest="(: ( [38745,38746]"/>
  <match src="comment: // for accounts without code, i.e. `keccak256('')` [8425,8475]" dest="comment: // for accounts without code, i.e. `keccak256('')` [9312,9362]"/>
  <match src="type_name [116219,116226]" dest="type_name [114842,114849]"/>
  <match src="parameter [32525,32541]" dest="parameter [28767,28783]"/>
  <match src="internal: internal [111624,111632]" dest="internal: internal [110941,110949]"/>
  <match src="identifier: symbol_ [88373,88380]" dest="identifier: symbol_ [86393,86400]"/>
  <match src="{: { [20245,20246]" dest="{: { [19795,19796]"/>
  <match src="call_argument [98746,98750]" dest="call_argument [97072,97076]"/>
  <match src="primitive_type [2838,2845]" dest="primitive_type [2925,2932]"/>
  <match src="(: ( [881,882]" dest="(: ( [906,907]"/>
  <match src="): ) [61073,61074]" dest="): ) [58272,58273]"/>
  <match src="solidity_pragma_token [43676,43691]" dest="solidity_pragma_token [40430,40445]"/>
  <match src="type_cast_expression [43498,43525]" dest="type_cast_expression [40242,40269]"/>
  <match src="identifier: boolStorage [59084,59095]" dest="identifier: boolStorage [56226,56237]"/>
  <match src="primitive_type [59048,59052]" dest="primitive_type [56188,56192]"/>
  <match src="inheritance_specifier [18856,18872]" dest="inheritance_specifier [18489,18505]"/>
  <match src="call_argument [25622,25671]" dest="call_argument [22660,22709]"/>
  <match src="identifier: contains [95036,95044]" dest="identifier: contains [93243,93251]"/>
  <match src="primitive_type [117047,117054]" dest="primitive_type [115588,115595]"/>
  <match src="}: } [24010,24011]" dest="}: } [38885,38886]"/>
  <match src="function_definition [72688,72815]" dest="function_definition [70239,70368]"/>
  <match src="string: string [68754,68760]" dest="string: string [66190,66196]"/>
  <match src="(: ( [46220,46221]" dest="(: ( [43046,43047]"/>
  <match src="add: add [34467,34470]" dest="add: add [30760,30763]"/>
  <match src="primitive_type [21326,21333]" dest="primitive_type [20864,20871]"/>
  <match src="identifier: msg [102027,102030]" dest="identifier: msg [100453,100456]"/>
  <match src="call_argument [20534,20539]" dest="call_argument [20079,20084]"/>
  <match src="identifier: c [67661,67662]" dest="identifier: c [65066,65067]"/>
  <match src="comment: /**      * @dev Same as {_get}, with a custom error message when `key` is not in the map.      */ [82239,82336]" dest="comment: /**      * @dev Same as {_get}, with a custom error message when `key` is not in the map.      */ [80083,80182]"/>
  <match src="view: view [88735,88739]" dest="view: view [86766,86770]"/>
  <match src="type_name [100629,100636]" dest="type_name [99006,99013]"/>
  <match src="identifier: require [92168,92175]" dest="identifier: require [90305,90312]"/>
  <match src="identifier: _token [58541,58547]" dest="identifier: _token [55668,55674]"/>
  <match src="): ) [3263,3264]" dest="): ) [3359,3360]"/>
  <match src="function_definition [103433,103601]" dest="function_definition [101904,102075]"/>
  <match src="event_paramater [29168,29189]" dest="event_paramater [25316,25337]"/>
  <match src="(: ( [51041,51042]" dest="(: ( [47989,47990]"/>
  <match src="comment: // UintToAddressMap [82662,82681]" dest="comment: // UintToAddressMap [80515,80534]"/>
  <match src="(: ( [92804,92805]" dest="(: ( [90959,90960]"/>
  <match src="type_name [111551,111558]" dest="type_name [109936,109943]"/>
  <match src="identifier: require [94522,94529]" dest="identifier: require [92717,92724]"/>
  <match src="identifier: set [70802,70805]" dest="identifier: set [68303,68306]"/>
  <match src="primitive_type [89972,89977]" dest="primitive_type [88043,88048]"/>
  <match src="address: address [75071,75078]" dest="address: address [72698,72705]"/>
  <match src="address: address [38116,38123]" dest="address: address [34504,34511]"/>
  <match src="binary_expression [43264,43273]" dest="binary_expression [40000,40009]"/>
  <match src="(: ( [92518,92519]" dest="(: ( [90664,90665]"/>
  <match src="string_literal [48732,48750]" dest="string_literal [45611,45629]"/>
  <match src="identifier: _bridgeContract [105494,105509]" dest="identifier: _bridgeContract [120059,120074]"/>
  <match src="primitive_type [12277,12284]" dest="primitive_type [13249,13256]"/>
  <match src=".: . [82615,82616]" dest=".: . [80465,80466]"/>
  <match src="identifier: set [74120,74123]" dest="identifier: set [71719,71722]"/>
  <match src="=: = [112143,112144]" dest="=: = [111338,111339]"/>
  <match src="identifier: _token [112159,112165]" dest="identifier: _token [111354,111360]"/>
  <match src="call_argument [97150,97152]" dest="call_argument [95418,95420]"/>
  <match src="call_argument [100392,100399]" dest="call_argument [98762,98769]"/>
  <match src="): ) [7322,7323]" dest="): ) [8175,8176]"/>
  <match src="{: { [100134,100135]" dest="{: { [98496,98497]"/>
  <match src="primitive_type [10863,10868]" dest="primitive_type [11800,11805]"/>
  <match src=",: , [73811,73812]" dest=",: , [71400,71401]"/>
  <match src="parameter [75392,75411]" dest="parameter [73036,73055]"/>
  <match src="call_argument [11940,11945]" dest="call_argument [12903,12908]"/>
  <match src="call_argument [98317,98324]" dest="call_argument [96630,96637]"/>
  <match src="identifier: encodePacked [48719,48731]" dest="identifier: encodePacked [45598,45610]"/>
  <match src="type_name [105341,105348]" dest="type_name [119901,119908]"/>
  <match src="returns: returns [7275,7282]" dest="returns: returns [8126,8133]"/>
  <match src="solidity: solidity [34572,34580]" dest="solidity: solidity [30872,30880]"/>
  <match src="}: } [89128,89129]" dest="}: } [87170,87171]"/>
  <match src="type_name [59048,59052]" dest="type_name [56188,56192]"/>
  <match src="call_argument [98335,98378]" dest="call_argument [96648,96691]"/>
  <match src="private: private [86499,86506]" dest="private: private [84478,84485]"/>
  <match src="member_expression [102027,102037]" dest="member_expression [100453,100463]"/>
  <match src=".: . [90778,90779]" dest=".: . [88869,88870]"/>
  <match src="!=: != [82517,82519]" dest="!=: != [80366,80368]"/>
  <match src="identifier: failedMessageSender [19527,19546]" dest="identifier: failedMessageSender [19182,19201]"/>
  <match src=",: , [85019,85020]" dest=",: , [82941,82942]"/>
  <match src=":: : [78907,78908]" dest=":: : [76659,76660]"/>
  <match src="if_statement [107398,107475]" dest="if_statement [105253,105332]"/>
  <match src="primitive_type [318,324]" dest="primitive_type [328,334]"/>
  <match src=",: , [19724,19725]" dest=",: , [19333,19334]"/>
  <match src="identifier: minor [39714,39719]" dest="identifier: minor [36148,36153]"/>
  <match src="pragma_directive [55078,55100]" dest="pragma_directive [52112,52134]"/>
  <match src="type_cast_expression [110763,110776]" dest="type_cast_expression [109258,109271]"/>
  <match src="parameter [28674,28678]" dest="parameter [24801,24805]"/>
  <match src="{: { [84662,84663]" dest="{: { [82576,82577]"/>
  <match src="type_name [102857,102864]" dest="type_name [101310,101317]"/>
  <match src="internal: internal [68155,68163]" dest="internal: internal [65575,65583]"/>
  <match src="(: ( [91717,91718]" dest="(: ( [89838,89839]"/>
  <match src="identifier: owner [60769,60774]" dest="identifier: owner [57962,57967]"/>
  <match src=",: , [65886,65887]" dest=",: , [63244,63245]"/>
  <match src="uint256: uint256 [110460,110467]" dest="uint256: uint256 [109039,109046]"/>
  <match src="return_statement [11897,11992]" dest="return_statement [12860,12955]"/>
  <match src="returns: returns [39659,39666]" dest="returns: returns [36091,36098]"/>
  <match src="call_argument [109879,109892]" dest="call_argument [108295,108308]"/>
  <match src="string_literal [45207,45221]" dest="string_literal [42012,42026]"/>
  <match src="(: ( [103136,103137]" dest="(: ( [101598,101599]"/>
  <match src="binary_expression [51025,51044]" dest="binary_expression [47973,47992]"/>
  <match src="constructor: constructor [62570,62581]" dest="constructor: constructor [59819,59830]"/>
  <match src="function: function [73335,73343]" dest="function: function [70907,70915]"/>
  <match src="identifier: this [1570,1574]" dest="identifier: this [1620,1624]"/>
  <match src="identifier: value [78606,78611]" dest="identifier: value [76353,76358]"/>
  <match src="yul_evm_builtin [34467,34470]" dest="yul_evm_builtin [30760,30763]"/>
  <match src="identifier: _value [81920,81926]" dest="identifier: _value [79750,79756]"/>
  <match src="identifier: token [20534,20539]" dest="identifier: token [20079,20084]"/>
  <match src="{: { [99415,99416]" dest="{: { [97761,97762]"/>
  <match src="): ) [92132,92133]" dest="): ) [90268,90269]"/>
  <match src="): ) [118790,118791]" dest="): ) [117054,117055]"/>
  <match src="(: ( [116469,116470]" dest="(: ( [115098,115099]"/>
  <match src="call_argument [81763,81790]" dest="call_argument [79590,79617]"/>
  <match src="): ) [99032,99033]" dest="): ) [97369,97370]"/>
  <match src="): ) [100540,100541]" dest="): ) [98913,98914]"/>
  <match src="(: ( [50165,50166]" dest="(: ( [47086,47087]"/>
  <match src=":: : [12909,12910]" dest=":: : [13890,13891]"/>
  <match src="identifier: value [72797,72802]" dest="identifier: value [70349,70354]"/>
  <match src="function: function [23841,23849]" dest="function: function [38711,38719]"/>
  <match src="}: } [68883,68884]" dest="}: } [66323,66324]"/>
  <match src="type_name [106986,106993]" dest="type_name [104831,104838]"/>
  <match src="(: ( [107542,107543]" dest="(: ( [105400,105401]"/>
  <match src="parameter [74566,74588]" dest="parameter [72179,72201]"/>
  <match src="primitive_type [28631,28637]" dest="primitive_type [24758,24764]"/>
  <match src="type_name [483,487]" dest="type_name [496,500]"/>
  <match src="}: } [49921,49922]" dest="}: } [46835,46836]"/>
  <match src="=: = [113183,113184]" dest="=: = [109432,109433]"/>
  <match src="visibility [55851,55858]" dest="visibility [52907,52914]"/>
  <match src="&quot;: &quot; [100481,100482]" dest="&quot;: &quot; [98853,98854]"/>
  <match src="user_defined_type [82978,82994]" dest="user_defined_type [80844,80860]"/>
  <match src="identifier: mint [33406,33410]" dest="identifier: mint [29672,29676]"/>
  <match src="type_name [68133,68140]" dest="type_name [65553,65560]"/>
  <match src="state_mutability [82138,82142]" dest="state_mutability [79978,79982]"/>
  <match src="variable_declaration_statement [100211,100484]" dest="variable_declaration_statement [98577,98856]"/>
  <match src=".: . [5180,5181]" dest=".: . [5351,5352]"/>
  <match src="primitive_type [8510,8517]" dest="primitive_type [9399,9406]"/>
  <match src="block_statement [107168,107696]" dest="block_statement [105017,105518]"/>
  <match src="identifier: tokenId [91285,91292]" dest="identifier: tokenId [89392,89399]"/>
  <match src="parameter [75910,75929]" dest="parameter [73571,73590]"/>
  <match src="primitive_type [46767,46771]" dest="primitive_type [43604,43608]"/>
  <match src="}: } [67668,67669]" dest="}: } [65074,65075]"/>
  <match src="primitive_type [14617,14624]" dest="primitive_type [15527,15534]"/>
  <match src="(: ( [18271,18272]" dest="(: ( [17776,17777]"/>
  <match src="(: ( [99016,99017]" dest="(: ( [97353,97354]"/>
  <match src="}: } [2956,2957]" dest="}: } [3045,3046]"/>
  <match src="identifier: _receiver [112736,112745]" dest="identifier: _receiver [111612,111621]"/>
  <match src="parameter [108367,108383]" dest="parameter [106206,106222]"/>
  <match src="visibility [1213,1221]" dest="visibility [1252,1260]"/>
  <match src="primitive_type [97516,97523]" dest="primitive_type [95800,95807]"/>
  <match src="returns: returns [78621,78628]" dest="returns: returns [76368,76375]"/>
  <match src="yul_decimal_number: 0 [53164,53165]" dest="yul_decimal_number: 0 [50149,50150]"/>
  <match src="returns: returns [11864,11871]" dest="returns: returns [12826,12833]"/>
  <match src="primitive_type [68754,68760]" dest="primitive_type [66190,66196]"/>
  <match src="identifier: Set [70111,70114]" dest="identifier: Set [67592,67595]"/>
  <match src="): ) [74368,74369]" dest="): ) [71974,71975]"/>
  <match src="=: = [4956,4957]" dest="=: = [5105,5106]"/>
  <match src="member_expression [70824,70842]" dest="member_expression [68325,68343]"/>
  <match src="primitive_type [40222,40229]" dest="primitive_type [36677,36684]"/>
  <match src=",: , [38653,38654]" dest=",: , [35052,35053]"/>
  <match src="identifier: IAMB [6324,6328]" dest="identifier: IAMB [6533,6537]"/>
  <match src="==: == [107423,107425]" dest="==: == [105278,105280]"/>
  <match src="primitive_type [101380,101387]" dest="primitive_type [99777,99784]"/>
  <match src="): ) [19736,19737]" dest="): ) [19345,19346]"/>
  <match src="identifier: MapEntry [78114,78122]" dest="identifier: MapEntry [75847,75855]"/>
  <match src="): ) [32324,32325]" dest="): ) [28559,28560]"/>
  <match src="comment: /**      * Internal function for setting token URI for the bridged token instance.      * @param _token address of the token contract.      * @param _tokenId unique id of the bridged token.      * @param _tokenURI URI for bridged token metadata.      */ [115244,115497]" dest="comment: /**      * Internal function for setting token URI for the bridged token instance.      * @param _token address of the token contract.      * @param _tokenId unique id of the bridged token.      * @param _tokenURI URI for bridged token metadata.      */ [113840,114098]"/>
  <match src="pragma_directive [626,648]" dest="pragma_directive [645,667]"/>
  <match src="return_statement [41048,41066]" dest="return_statement [37531,37549]"/>
  <match src="identifier: data [12626,12630]" dest="identifier: data [13603,13607]"/>
  <match src="(: ( [28673,28674]" dest="(: ( [24800,24801]"/>
  <match src="uint256: uint256 [81265,81272]" dest="uint256: uint256 [79077,79084]"/>
  <match src="string_literal [92848,92899]" dest="string_literal [91003,91054]"/>
  <match src="identifier: IERC721 [38092,38099]" dest="identifier: IERC721 [34479,34486]"/>
  <match src="): ) [15280,15281]" dest="): ) [16203,16204]"/>
  <match src="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/components/native/ERC721Reader.sol [44295,44385]" dest="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/components/native/ERC721Reader.sol [41074,41164]"/>
  <match src="=: = [48875,48876]" dest="=: = [45755,45756]"/>
  <match src="primitive_type [63490,63496]" dest="primitive_type [60765,60771]"/>
  <match src="identifier: _set [83077,83081]" dest="identifier: _set [80944,80948]"/>
  <match src="=: = [99434,99435]" dest="=: = [97781,97782]"/>
  <match src="type_name [40329,40336]" dest="type_name [36786,36793]"/>
  <match src="}: } [101442,101443]" dest="}: } [99839,99840]"/>
  <match src="identifier: tokenId [98317,98324]" dest="identifier: tokenId [96630,96637]"/>
  <match src="parenthesized_expression [100558,100586]" dest="parenthesized_expression [98932,98960]"/>
  <match src="identifier: value [12320,12325]" dest="identifier: value [13292,13297]"/>
  <match src="(: ( [18928,18929]" dest="(: ( [18562,18563]"/>
  <match src="calldatacopy: calldatacopy [52224,52236]" dest="calldatacopy: calldatacopy [49191,49203]"/>
  <match src="comment: // File: @openzeppelin/contracts/token/ERC721/ERC721.sol [85047,85103]" dest="comment: // File: @openzeppelin/contracts/token/ERC721/ERC721.sol [82973,83029]"/>
  <match src="state_mutability [20834,20838]" dest="state_mutability [20387,20391]"/>
  <match src="binary_expression [111946,111996]" dest="binary_expression [110102,110152]"/>
  <match src="primitive_type [109599,109606]" dest="primitive_type [107543,107550]"/>
  <match src="type_name [87391,87397]" dest="type_name [85386,85392]"/>
  <match src="-: - [80075,80076]" dest="-: - [77853,77854]"/>
  <match src="{: { [109663,109664]" dest="{: { [107607,107608]"/>
  <match src="identifier: _registerInterface [63471,63489]" dest="identifier: _registerInterface [60746,60764]"/>
  <match src="): ) [102293,102294]" dest="): ) [100727,100728]"/>
  <match src="type_name [84653,84660]" dest="type_name [82567,82574]"/>
  <match src="binary_expression [112199,112238]" dest="binary_expression [111794,111833]"/>
  <match src="false: false [116325,116330]" dest="false: false [114951,114956]"/>
  <match src="assembly: assembly [35186,35194]" dest="assembly: assembly [31499,31507]"/>
  <match src="primitive_type [114975,114982]" dest="primitive_type [113599,113606]"/>
  <match src="uint256: uint256 [29217,29224]" dest="uint256: uint256 [25365,25372]"/>
  <match src="call_argument [45731,45735]" dest="call_argument [42547,42551]"/>
  <match src="): ) [116503,116504]" dest="): ) [115132,115133]"/>
  <match src="function: function [58511,58519]" dest="function: function [55638,55646]"/>
  <match src="primitive_type [39035,39042]" dest="primitive_type [35443,35450]"/>
  <match src="internal: internal [94977,94985]" dest="internal: internal [93183,93191]"/>
  <match src="identifier: decode [100513,100519]" dest="identifier: decode [98886,98892]"/>
  <match src="): ) [103212,103213]" dest="): ) [101675,101676]"/>
  <match src="function: function [43936,43944]" dest="function: function [40702,40710]"/>
  <match src="parameter [96238,96253]" dest="parameter [94479,94494]"/>
  <match src="function: function [84574,84582]" dest="function: function [82488,82496]"/>
  <match src="parameter [100629,100644]" dest="parameter [99006,99021]"/>
  <match src="identifier: abi [90191,90194]" dest="identifier: abi [88266,88269]"/>
  <match src="primitive_type [34406,34413]" dest="primitive_type [30697,30704]"/>
  <match src="public: public [93316,93322]" dest="public: public [91486,91492]"/>
  <match src="(: ( [73845,73846]" dest="(: ( [71434,71435]"/>
  <match src="binary_expression [106152,106229]" dest="binary_expression [103980,104057]"/>
  <match src="): ) [59156,59157]" dest="): ) [56298,56299]"/>
  <match src="identifier: _holderTokens [97754,97767]" dest="identifier: _holderTokens [96048,96061]"/>
  <match src="}: } [61974,61975]" dest="}: } [59198,59199]"/>
  <match src="}: } [76035,76036]" dest="}: } [73698,73699]"/>
  <match src="variable_declaration [111877,111894]" dest="variable_declaration [109338,109355]"/>
  <match src=",: , [94578,94579]" dest=",: , [92773,92774]"/>
  <match src="function_definition [58963,59173]" dest="function_definition [56100,56316]"/>
  <match src="uint256: uint256 [96238,96245]" dest="uint256: uint256 [94479,94486]"/>
  <match src="string [88806,88850]" dest="string [86838,86882]"/>
  <match src="visibility [48182,48188]" dest="visibility [45051,45057]"/>
  <match src="private: private [55384,55391]" dest="private: private [52429,52436]"/>
  <match src="{: { [57024,57025]" dest="{: { [54112,54113]"/>
  <match src="private: private [70569,70576]" dest="private: private [68065,68072]"/>
  <match src="return_statement [105829,105852]" dest="return_statement [120286,120309]"/>
  <match src="block_statement [13105,13448]" dest="block_statement [14091,14442]"/>
  <match src="bool: bool [28674,28678]" dest="bool: bool [24801,24805]"/>
  <match src="call_argument [2253,2263]" dest="call_argument [2324,2334]"/>
  <match src="inheritance_specifier [4182,4196]" dest="inheritance_specifier [4309,4323]"/>
  <match src="call_argument [5000,5020]" dest="call_argument [5168,5188]"/>
  <match src="state_mutability [29801,29805]" dest="state_mutability [25968,25972]"/>
  <match src="type_name [6855,6862]" dest="type_name [7692,7699]"/>
  <match src="{: { [49639,49640]" dest="{: { [46543,46544]"/>
  <match src="(: ( [19310,19311]" dest="(: ( [18951,18952]"/>
  <match src="identifier: _tokenId [37457,37465]" dest="identifier: _tokenId [33831,33839]"/>
  <match src="(: ( [96790,96791]" dest="(: ( [95048,95049]"/>
  <match src="returns: returns [48194,48201]" dest="returns: returns [45063,45070]"/>
  <match src="expression_statement [39122,39140]" dest="expression_statement [35531,35549]"/>
  <match src="visibility [20827,20833]" dest="visibility [20380,20386]"/>
  <match src="[: [ [79065,79066]" dest="[: [ [76820,76821]"/>
  <match src="): ) [29614,29615]" dest="): ) [25772,25773]"/>
  <match src="identifier: require [112191,112198]" dest="identifier: require [111786,111793]"/>
  <match src="identifier: tokenId [91992,91999]" dest="identifier: tokenId [90122,90129]"/>
  <match src="identifier: ERC721TokenProxy [107515,107531]" dest="identifier: ERC721TokenProxy [105373,105389]"/>
  <match src=".: . [114150,114151]" dest=".: . [22197,22198]"/>
  <match src="primitive_type [39733,39739]" dest="primitive_type [36168,36174]"/>
  <match src="interface: interface [28838,28847]" dest="interface: interface [24977,24986]"/>
  <match src="expression_statement [16881,16926]" dest="expression_statement [17076,17121]"/>
  <match src="identifier: _messageId [117055,117065]" dest="identifier: _messageId [115596,115606]"/>
  <match src="bytes4: bytes4 [87391,87397]" dest="bytes4: bytes4 [85386,85392]"/>
  <match src="): ) [20627,20628]" dest="): ) [20173,20174]"/>
  <match src="call_expression [109785,109818]" dest="call_expression [107732,107765]"/>
  <match src="type_name [78585,78592]" dest="type_name [76332,76339]"/>
  <match src="primitive_type [84982,84989]" dest="primitive_type [82904,82911]"/>
  <match src="string_literal [81792,81828]" dest="string_literal [79619,79655]"/>
  <match src="identifier: _msgSender [92260,92270]" dest="identifier: _msgSender [90399,90409]"/>
  <match src="identifier: _setBridgeContract [14973,14991]" dest="identifier: _setBridgeContract [15889,15907]"/>
  <match src=",: , [113126,113127]" dest=",: , [111281,111282]"/>
  <match src="emit: emit [98732,98736]" dest="emit: emit [97058,97062]"/>
  <match src="parameter [91373,91383]" dest="parameter [89486,89496]"/>
  <match src="yul_function_call [8687,8707]" dest="yul_function_call [9578,9598]"/>
  <match src="[: [ [71310,71311]" dest="[: [ [68826,68827]"/>
  <match src="parameter [74331,74353]" dest="parameter [71937,71959]"/>
  <match src="(: ( [96225,96226]" dest="(: ( [94466,94467]"/>
  <match src="identifier: _mediatorContract [17205,17222]" dest="identifier: _mediatorContract [17408,17425]"/>
  <match src="primitive_type [43576,43582]" dest="primitive_type [40323,40329]"/>
  <match src="inheritance_specifier [85329,85346]" dest="inheritance_specifier [83275,83292]"/>
  <match src="comment: // File: @openzeppelin/contracts/token/ERC721/IERC721Receiver.sol [61079,61144]" dest="comment: // File: @openzeppelin/contracts/token/ERC721/IERC721Receiver.sol [58281,58346]"/>
  <match src="=&gt;: =&gt; [86227,86229]" dest="=&gt;: =&gt; [84194,84196]"/>
  <match src="number_literal: 0 [67514,67515]" dest="number_literal: 0 [64915,64916]"/>
  <match src="parameter [32510,32523]" dest="parameter [28752,28765]"/>
  <match src="): ) [112249,112250]" dest="): ) [111844,111845]"/>
  <match src="type_name [50677,50684]" dest="type_name [47616,47623]"/>
  <match src="): ) [117326,117327]" dest="): ) [115849,115850]"/>
  <match src="type_cast_expression [114328,114338]" dest="type_cast_expression [112937,112947]"/>
  <match src="override_specifier [90901,90909]" dest="override_specifier [88998,89006]"/>
  <match src="): ) [79642,79643]" dest="): ) [77414,77415]"/>
  <match src="identifier: abi [45190,45193]" dest="identifier: abi [41995,41998]"/>
  <match src="internal: internal [75428,75436]" dest="internal: internal [73072,73080]"/>
  <match src="(: ( [118768,118769]" dest="(: ( [117039,117040]"/>
  <match src="{: { [1502,1503]" dest="{: { [1551,1552]"/>
  <match src="string_literal [93401,93452]" dest="string_literal [91572,91623]"/>
  <match src="is: is [4179,4181]" dest="is: is [4306,4308]"/>
  <match src="call_argument [112839,112847]" dest="call_argument [112307,112315]"/>
  <match src="primitive_type [11805,11812]" dest="primitive_type [12767,12774]"/>
  <match src="type_name [108393,108399]" dest="type_name [106233,106239]"/>
  <match src="identifier: from [33183,33187]" dest="identifier: from [29440,29444]"/>
  <match src="solidity_pragma_token [7488,7503]" dest="solidity_pragma_token [8349,8364]"/>
  <match src="identifier: symbol [112078,112084]" dest="identifier: symbol [111741,111747]"/>
  <match src=",: , [107739,107740]" dest=",: , [105563,105564]"/>
  <match src="call_argument [97854,97859]" dest="call_argument [96152,96157]"/>
  <match src="=: = [92284,92285]" dest="=: = [90423,90424]"/>
  <match src="assembly_statement [35186,35634]" dest="assembly_statement [31499,31952]"/>
  <match src="(: ( [17587,17588]" dest="(: ( [118724,118725]"/>
  <match src="identifier: owner [97768,97773]" dest="identifier: owner [96062,96067]"/>
  <match src="string: string [88286,88292]" dest="string: string [86304,86310]"/>
  <match src="function_definition [21101,21247]" dest="function_definition [20662,20810]"/>
  <match src="function: function [66785,66793]" dest="function: function [64169,64177]"/>
  <match src="expression_statement [115105,115160]" dest="expression_statement [113696,113751]"/>
  <match src="): ) [111077,111078]" dest="): ) [120863,120864]"/>
  <match src="variable_declaration_statement [81840,81885]" dest="variable_declaration_statement [79669,79714]"/>
  <match src="assignment_expression [79148,79189]" dest="assignment_expression [76906,76947]"/>
  <match src="member_expression [75777,75787]" dest="member_expression [73432,73442]"/>
  <match src="member_expression [98692,98708]" dest="member_expression [97016,97032]"/>
  <match src="bytes4: bytes4 [61965,61971]" dest="bytes4: bytes4 [59188,59194]"/>
  <match src="=: = [17663,17664]" dest="=: = [118794,118795]"/>
  <match src="}: } [27398,27399]" dest="}: } [39359,39360]"/>
  <match src="visibility [7115,7123]" dest="visibility [7960,7968]"/>
  <match src="identifier: isContract [100152,100162]" dest="identifier: isContract [98515,98525]"/>
  <match src="type_name [78744,78751]" dest="type_name [76493,76500]"/>
  <match src="return: return [79203,79209]" dest="return: return [76962,76968]"/>
  <match src="function_definition [94371,94640]" dest="function_definition [92564,92836]"/>
  <match src="primitive_type [12373,12378]" dest="primitive_type [13345,13350]"/>
  <match src="type_name [113801,113808]" dest="type_name [112778,112785]"/>
  <match src="identifier: abi [48254,48257]" dest="identifier: abi [45124,45127]"/>
  <match src="member_expression [112199,112217]" dest="member_expression [111794,111812]"/>
  <match src="call_argument [83124,83129]" dest="call_argument [80991,80996]"/>
  <match src="member_expression [5177,5187]" dest="member_expression [5348,5358]"/>
  <match src="expression_statement [96330,96448]" dest="expression_statement [94573,94691]"/>
  <match src="primitive_type [46741,46747]" dest="primitive_type [43577,43583]"/>
  <match src="expression_statement [100664,100694]" dest="expression_statement [99042,99072]"/>
  <match src=",: , [101654,101655]" dest=",: , [100065,100066]"/>
  <match src="yul_function_call [13372,13416]" dest="yul_function_call [14364,14408]"/>
  <match src="call_argument [14661,14709]" dest="call_argument [15562,15617]"/>
  <match src="variable_declaration_statement [107076,107127]" dest="variable_declaration_statement [104924,104975]"/>
  <match src="identifier: _add [70532,70536]" dest="identifier: _add [68028,68032]"/>
  <match src="uint256: uint256 [75931,75938]" dest="uint256: uint256 [73592,73599]"/>
  <match src=".: . [45111,45112]" dest=".: . [41915,41916]"/>
  <match src="bytes32: bytes32 [74438,74445]" dest="bytes32: bytes32 [72045,72052]"/>
  <match src="view: view [60800,60804]" dest="view: view [57993,57997]"/>
  <match src="identifier: set [75708,75711]" dest="identifier: set [73362,73365]"/>
  <match src=",: , [53829,53830]" dest=",: , [50828,50829]"/>
  <match src="identifier: returndata [13082,13092]" dest="identifier: returndata [14068,14078]"/>
  <match src="call_argument [91630,91688]" dest="call_argument [89748,89806]"/>
  <match src="(: ( [79463,79464]" dest="(: ( [77231,77232]"/>
  <match src="constant: constant [62375,62383]" dest="constant: constant [59617,59625]"/>
  <match src="identifier: msg [5163,5166]" dest="identifier: msg [5334,5337]"/>
  <match src="type_name [45523,45530]" dest="type_name [42337,42344]"/>
  <match src="call_argument [84990,85034]" dest="call_argument [82912,82956]"/>
  <match src="memory: memory [88314,88320]" dest="memory: memory [86332,86338]"/>
  <match src="type_name [108367,108374]" dest="type_name [106206,106213]"/>
  <match src="function: function [30531,30539]" dest="function: function [26714,26722]"/>
  <match src="variable_declaration_tuple [45587,45619]" dest="variable_declaration_tuple [42402,42434]"/>
  <match src="): ) [84723,84724]" dest="): ) [82638,82639]"/>
  <match src="variable_declaration [110839,110856]" dest="variable_declaration [110284,110301]"/>
  <match src="mapping: mapping [55638,55645]" dest="mapping: mapping [52690,52697]"/>
  <match src="solidity_pragma_token [6297,6311]" dest="solidity_pragma_token [6504,6518]"/>
  <match src="identifier: abi [3594,3597]" dest="identifier: abi [3699,3702]"/>
  <match src="primitive_type [94394,94401]" dest="primitive_type [92587,92594]"/>
  <match src="{: { [16611,16612]" dest="{: { [118391,118392]"/>
  <match src="comment: /**      * @dev Sets the URI for the particular token.      * Can be called by bridge owner after token bridging.      * @param _tokenId URI for the bridged token metadata.      * @param _tokenURI new token URI.      */ [103607,103826]" dest="comment: /**      * @dev Sets the URI for the particular token.      * Can be called by bridge owner after token bridging.      * @param _tokenId URI for the bridged token metadata.      * @param _tokenURI new token URI.      */ [102083,102307]"/>
  <match src="identifier: _tokenId [112747,112755]" dest="identifier: _tokenId [111623,111631]"/>
  <match src="primitive_type [6075,6082]" dest="primitive_type [6273,6280]"/>
  <match src="type_name [29391,29398]" dest="type_name [25544,25551]"/>
  <match src="member_expression [45720,45730]" dest="member_expression [42536,42546]"/>
  <match src="identifier: _isApprovedOrOwner [93358,93376]" dest="identifier: _isApprovedOrOwner [91529,91547]"/>
  <match src=",: , [56379,56380]" dest=",: , [53449,53450]"/>
  <match src="identifier: _functionCallWithValue [12574,12596]" dest="identifier: _functionCallWithValue [13551,13573]"/>
  <match src="identifier: failedMessageDataHash [6744,6765]" dest="identifier: failedMessageDataHash [7579,7600]"/>
  <match src="&quot;: &quot; [43180,43181]" dest="&quot;: &quot; [39912,39913]"/>
  <match src="returns: returns [44093,44100]" dest="returns: returns [40864,40871]"/>
  <match src="(: ( [6542,6543]" dest="(: ( [7371,7372]"/>
  <match src="return_statement [70898,70911]" dest="return_statement [68402,68415]"/>
  <match src="parameter [31887,31902]" dest="parameter [28110,28125]"/>
  <match src="expression_statement [91546,91699]" dest="expression_statement [89663,89818]"/>
  <match src="uint256: uint256 [65063,65070]" dest="uint256: uint256 [62390,62397]"/>
  <match src="return_statement [20864,20940]" dest="return_statement [20418,20494]"/>
  <match src="): ) [65070,65071]" dest="): ) [62397,62398]"/>
  <match src="expression_statement [38577,38592]" dest="expression_statement [34975,34990]"/>
  <match src="identifier: ownerOf [111962,111969]" dest="identifier: ownerOf [110118,110125]"/>
  <match src="string_literal [43180,43183]" dest="string_literal [39912,39915]"/>
  <match src="function_definition [81660,81934]" dest="function_definition [79486,79765]"/>
  <match src="{: { [14963,14964]" dest="{: { [15878,15879]"/>
  <match src="==: == [19475,19477]" dest="==: == [19139,19141]"/>
  <match src="(: ( [100616,100617]" dest="(: ( [98993,98994]"/>
  <match src="function: function [75379,75387]" dest="function: function [73023,73031]"/>
  <match src="uint256: uint256 [83818,83825]" dest="uint256: uint256 [81707,81714]"/>
  <match src="parameter [6766,6784]" dest="parameter [7601,7619]"/>
  <match src="parameter [110409,110423]" dest="parameter [108986,109000]"/>
  <match src="function_definition [29758,29830]" dest="function_definition [25925,25997]"/>
  <match src="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/components/common/NFTOmnibridgeInfo.sol [39822,39917]" dest="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/components/common/NFTOmnibridgeInfo.sol [36263,36358]"/>
  <match src="identifier: tokenId [97821,97828]" dest="identifier: tokenId [96117,96124]"/>
  <match src="call_expression [14407,14422]" dest="call_expression [15268,15283]"/>
  <match src="}: } [111165,111166]" dest="}: } [109539,109540]"/>
  <match src="call_argument [84695,84725]" dest="call_argument [82610,82640]"/>
  <match src="assembly_statement [8664,8709]" dest="assembly_statement [9555,9600]"/>
  <match src="state_mutability [75955,75959]" dest="state_mutability [73616,73620]"/>
  <match src="fallback: fallback [50876,50884]" dest="fallback: fallback [47821,47829]"/>
  <match src="function: function [74085,74093]" dest="function: function [71684,71692]"/>
  <match src="type_name [60761,60768]" dest="type_name [57954,57961]"/>
  <match src="&quot;: &quot; [27313,27314]" dest="&quot;: &quot; [39320,39321]"/>
  <match src="): ) [81926,81927]" dest="): ) [79756,79757]"/>
  <match src="private: private [82130,82137]" dest="private: private [79970,79977]"/>
  <match src="type_name [12864,12869]" dest="type_name [13845,13850]"/>
  <match src="identifier: abi [5177,5180]" dest="identifier: abi [5348,5351]"/>
  <match src="(: ( [82434,82435]" dest="(: ( [80281,80282]"/>
  <match src="): ) [70666,70667]" dest="): ) [68164,68165]"/>
  <match src="function_definition [45504,45820]" dest="function_definition [42318,42637]"/>
  <match src="type_name [85403,85410]" dest="type_name [83351,83358]"/>
  <match src="variable_declaration [12850,12862]" dest="variable_declaration [13831,13843]"/>
  <match src=".: . [97774,97775]" dest=".: . [96068,96069]"/>
  <match src="uint256: uint256 [31690,31697]" dest="uint256: uint256 [27904,27911]"/>
  <match src="type_name [373,380]" dest="type_name [384,391]"/>
  <match src="): ) [20447,20448]" dest="): ) [20002,20003]"/>
  <match src="{: { [17570,17571]" dest="{: { [118706,118707]"/>
  <match src="state_variable_declaration [464,510]" dest="state_variable_declaration [477,523]"/>
  <match src="parameter [68805,68812]" dest="parameter [66241,66248]"/>
  <match src="(: ( [76631,76632]" dest="(: ( [74313,74314]"/>
  <match src="(: ( [70660,70661]" dest="(: ( [68158,68159]"/>
  <match src="): ) [102292,102293]" dest="): ) [100726,100727]"/>
  <match src=",: , [110423,110424]" dest=",: , [109000,109001]"/>
  <match src="identifier: _token [106878,106884]" dest="identifier: _token [104719,104725]"/>
  <match src="primitive_type [84617,84624]" dest="primitive_type [82531,82538]"/>
  <match src="=&gt;: =&gt; [55730,55732]" dest="=&gt;: =&gt; [52783,52785]"/>
  <match src="call_argument [112447,112453]" dest="call_argument [112049,112055]"/>
  <match src="identifier: SafeMath [85359,85367]" dest="identifier: SafeMath [83306,83314]"/>
  <match src="bool: bool [83601,83605]" dest="bool: bool [81483,81487]"/>
  <match src="type_name [83021,83028]" dest="type_name [80887,80894]"/>
  <match src="string: string [43975,43981]" dest="string: string [40741,40747]"/>
  <match src="bool: bool [117023,117027]" dest="bool: bool [120667,120671]"/>
  <match src="call_argument [75129,75134]" dest="call_argument [72757,72762]"/>
  <match src="identifier: decode [46307,46313]" dest="identifier: decode [43134,43140]"/>
  <match src="identifier: tokenId [98948,98955]" dest="identifier: tokenId [97284,97291]"/>
  <match src="(: ( [38645,38646]" dest="(: ( [35044,35045]"/>
  <match src="(: ( [88536,88537]" dest="(: ( [86560,86561]"/>
  <match src="function_body [84957,85043]" dest="function_body [82878,82966]"/>
  <match src="identifier: _safeMint [95953,95962]" dest="identifier: _safeMint [94187,94196]"/>
  <match src="storage: storage [83552,83559]" dest="storage: storage [81434,81441]"/>
  <match src="identifier: encodeWithSelector [4981,4999]" dest="identifier: encodeWithSelector [5149,5167]"/>
  <match src="identifier: tokenId [91722,91729]" dest="identifier: tokenId [89843,89850]"/>
  <match src="(: ( [91818,91819]" dest="(: ( [89945,89946]"/>
  <match src="call_argument [62750,62770]" dest="call_argument [60002,60022]"/>
  <match src="=&gt;: =&gt; [86247,86249]" dest="=&gt;: =&gt; [84214,84216]"/>
  <match src="call_expression [78861,78918]" dest="call_expression [76613,76670]"/>
  <match src="bytes4: bytes4 [62519,62525]" dest="bytes4: bytes4 [59766,59772]"/>
  <match src="type_name [105307,105314]" dest="type_name [119866,119873]"/>
  <match src="type_name [55772,55778]" dest="type_name [52826,52832]"/>
  <match src="primitive_type [42486,42493]" dest="primitive_type [39115,39122]"/>
  <match src="=: = [19625,19626]" dest="=: = [19278,19279]"/>
  <match src="comment: /**      * @dev Handles the bridged token that came from the other side of the bridge.      * Checks that the operation is inside the execution limits and invokes the Mint or Unlock accordingly.      * @param _token token contract address on this side of the bridge.      * @param _isNative true, if given token is native to this chain and Unlock should be used.      * @param _recipient address that will receive the tokens.      * @param _tokenId unique id of the bridged token.      */ [114374,114862]" dest="comment: /**      * @dev Handles the bridged token that came from the other side of the bridge.      * Checks that the operation is inside the execution limits and invokes the Mint or Unlock accordingly.      * @param _token token contract address on this side of the bridge.      * @param _isNative true, if given token is native to this chain and Unlock should be used.      * @param _recipient address that will receive the tokens.      * @param _tokenId unique id of the bridged token.      */ [112986,113481]"/>
  <match src="view: view [84639,84643]" dest="view: view [82553,82557]"/>
  <match src="(: ( [107719,107720]" dest="(: ( [105543,105544]"/>
  <match src="while_statement [43257,43332]" dest="while_statement [39993,40071]"/>
  <match src="function_definition [111472,113382]" dest="function_definition [110829,112429]"/>
  <match src="call_argument [83654,83657]" dest="call_argument [81537,81540]"/>
  <match src="(: ( [6508,6509]" dest="(: ( [7335,7336]"/>
  <match src="parameter [71129,71142]" dest="parameter [68643,68656]"/>
  <match src="return_type_definition [74604,74621]" dest="return_type_definition [72217,72234]"/>
  <match src="state_mutability [6554,6558]" dest="state_mutability [7383,7387]"/>
  <match src="call_argument [58650,58664]" dest="call_argument [55778,55792]"/>
  <match src="string [47784,47802]" dest="string [44645,44663]"/>
  <match src=",: , [75484,75485]" dest=",: , [73129,73130]"/>
  <match src="type_name [20848,20852]" dest="type_name [20401,20405]"/>
  <match src="(: ( [61065,61066]" dest="(: ( [58264,58265]"/>
  <match src="(: ( [46243,46244]" dest="(: ( [43069,43070]"/>
  <match src="yul_function_call [51469,51480]" dest="yul_function_call [48425,48436]"/>
  <match src="identifier: require [66241,66248]" dest="identifier: require [63608,63615]"/>
  <match src="identifier: encodeWithSelector [112677,112695]" dest="identifier: encodeWithSelector [111553,111571]"/>
  <match src="identifier: _token [114095,114101]" dest="identifier: _token [22781,22787]"/>
  <match src="returns: returns [61057,61064]" dest="returns: returns [58256,58263]"/>
  <match src="): ) [114194,114195]" dest="): ) [22238,22239]"/>
  <match src="identifier: index [81878,81883]" dest="identifier: index [79707,79712]"/>
  <match src="type_name [64571,64578]" dest="type_name [61881,61888]"/>
  <match src=".: . [46359,46360]" dest=".: . [43186,43187]"/>
  <match src="memory: memory [46786,46792]" dest="memory: memory [43623,43629]"/>
  <match src="call_argument [19816,19820]" dest="call_argument [19370,19374]"/>
  <match src="identifier: _values [70648,70655]" dest="identifier: _values [68146,68153]"/>
  <match src="identifier: bridgeContract [55920,55934]" dest="identifier: bridgeContract [52978,52992]"/>
  <match src="parameter [2160,2174]" dest="parameter [2230,2244]"/>
  <match src="): ) [39211,39212]" dest="): ) [35622,35623]"/>
  <match src="return_type_definition [83809,83826]" dest="return_type_definition [81698,81715]"/>
  <match src="else: else [116422,116426]" dest="else: else [115050,115054]"/>
  <match src="call_argument [102027,102055]" dest="call_argument [100453,100481]"/>
  <match src="(: ( [5039,5040]" dest="(: ( [5208,5209]"/>
  <match src="identifier: owner [4715,4720]" dest="identifier: owner [4856,4861]"/>
  <match src="call_expression [113103,113143]" dest="call_expression [111258,111298]"/>
  <match src="(: ( [43263,43264]" dest="(: ( [39999,40000]"/>
  <match src="&quot;: &quot; [47784,47785]" dest="&quot;: &quot; [44645,44646]"/>
  <match src="string_literal [46954,46956]" dest="string_literal [43793,43795]"/>
  <match src="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/BasicNFTOmnibridge.sol [103979,104057]" dest="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/BasicNFTOmnibridge.sol [102466,102544]"/>
  <match src="type_name [103852,103859]" dest="type_name [102334,102341]"/>
  <match src="): ) [6873,6874]" dest="): ) [7710,7711]"/>
  <match src="(: ( [89805,89806]" dest="(: ( [87872,87873]"/>
  <match src="primitive_type [6766,6773]" dest="primitive_type [7601,7608]"/>
  <match src="): ) [111158,111159]" dest="): ) [110525,110526]"/>
  <match src="view: view [6554,6558]" dest="view: view [7383,7387]"/>
  <match src="uint256: uint256 [83344,83351]" dest="uint256: uint256 [81219,81226]"/>
  <match src="(: ( [37054,37055]" dest="(: ( [33419,33420]"/>
  <match src="primitive_type [38638,38645]" dest="primitive_type [35037,35044]"/>
  <match src="uint256: uint256 [33524,33531]" dest="uint256: uint256 [29794,29801]"/>
  <match src="primitive_type [4556,4563]" dest="primitive_type [4691,4698]"/>
  <match src="return_type_definition [6559,6576]" dest="return_type_definition [7388,7405]"/>
  <match src="string: string [118713,118719]" dest="string: string [116967,116973]"/>
  <match src="identifier: _symbol [101791,101798]" dest="identifier: _symbol [100207,100214]"/>
  <match src="call_expression [110986,111002]" dest="call_expression [120771,120787]"/>
  <match src="type_name [86492,86498]" dest="type_name [84471,84477]"/>
  <match src="primitive_type [92119,92123]" dest="primitive_type [90255,90259]"/>
  <match src="call_argument [15343,15360]" dest="call_argument [16267,16284]"/>
  <match src="identifier: Set [72707,72710]" dest="identifier: Set [70258,70261]"/>
  <match src="identifier: data [61937,61941]" dest="identifier: data [59159,59163]"/>
  <match src="type_cast_expression [103541,103551]" dest="type_cast_expression [102013,102023]"/>
  <match src="(: ( [86431,86432]" dest="(: ( [84407,84408]"/>
  <match src="}: } [72557,72558]" dest="}: } [70100,70101]"/>
  <match src="primitive_type [40279,40286]" dest="primitive_type [36736,36743]"/>
  <match src="type_name [38116,38123]" dest="type_name [34504,34511]"/>
  <match src="number_literal: 0 [89998,89999]" dest="number_literal: 0 [88069,88070]"/>
  <match src="(: ( [53129,53130]" dest="(: ( [50114,50115]"/>
  <match src="[: [ [48704,48705]" dest="[: [ [45583,45584]"/>
  <match src="(: ( [88595,88596]" dest="(: ( [86620,86621]"/>
  <match src="state_mutability [76163,76167]" dest="state_mutability [73831,73835]"/>
  <match src="view: view [18498,18502]" dest="view: view [18010,18014]"/>
  <match src="return_statement [70856,70868]" dest="return_statement [68358,68370]"/>
  <match src="internal: internal [65493,65501]" dest="internal: internal [62834,62842]"/>
  <match src="primitive_type [83108,83115]" dest="primitive_type [80975,80982]"/>
  <match src="true: true [70863,70867]" dest="true: true [68365,68369]"/>
  <match src="{: { [2185,2186]" dest="{: { [2255,2256]"/>
  <match src="): ) [76028,76029]" dest="): ) [73690,73691]"/>
  <match src="identifier: from [28997,29001]" dest="identifier: from [25140,25144]"/>
  <match src="function: function [15973,15981]" dest="function: function [16448,16456]"/>
  <match src="): ) [98763,98764]" dest="): ) [97089,97090]"/>
  <match src="binary_expression [114303,114338]" dest="binary_expression [112907,112947]"/>
  <match src="address: address [100617,100624]" dest="address: address [98994,99001]"/>
  <match src="identifier: _indexes [78767,78775]" dest="identifier: _indexes [76516,76524]"/>
  <match src="}: } [45819,45820]" dest="}: } [42636,42637]"/>
  <match src="struct_declaration [78051,78327]" dest="struct_declaration [75782,76065]"/>
  <match src="variable_declaration [84307,84318]" dest="variable_declaration [82210,82221]"/>
  <match src="!=: != [79638,79640]" dest="!=: != [77410,77412]"/>
  <match src="]: ] [63060,63061]" dest="]: ] [60321,60322]"/>
  <match src="call_argument [112956,112982]" dest="call_argument [112907,112947]"/>
  <match src="uint256: uint256 [73894,73901]" dest="uint256: uint256 [71484,71491]"/>
  <match src="function_definition [73776,73917]" dest="function_definition [71365,71508]"/>
  <match src="event_definition [47264,47348]" dest="event_definition [44117,44201]"/>
  <match src=",: , [76012,76013]" dest=",: , [73674,73675]"/>
  <match src="expression_statement [5971,5991]" dest="expression_statement [6163,6183]"/>
  <match src="parameter [100036,100048]" dest="parameter [98396,98408]"/>
  <match src="(: ( [106177,106178]" dest="(: ( [104005,104006]"/>
  <match src="view: view [84934,84938]" dest="view: view [82855,82859]"/>
  <match src="(: ( [10941,10942]" dest="(: ( [11879,11880]"/>
  <match src="uint256: uint256 [82454,82461]" dest="uint256: uint256 [80302,80309]"/>
  <match src="}: } [102935,102936]" dest="}: } [101390,101391]"/>
  <match src="): ) [82411,82412]" dest="): ) [80258,80259]"/>
  <match src="(: ( [84686,84687]" dest="(: ( [82601,82602]"/>
  <match src="pragma_directive [21515,21537]" dest="pragma_directive [21061,21083]"/>
  <match src="identifier: UintToAddressMap [84210,84226]" dest="identifier: UintToAddressMap [82112,82128]"/>
  <match src="override: override [90901,90909]" dest="override: override [88998,89006]"/>
  <match src="identifier: tokenId [97154,97161]" dest="identifier: tokenId [95422,95429]"/>
  <match src="parameter [39733,39745]" dest="parameter [36168,36180]"/>
  <match src="): ) [110827,110828]" dest="): ) [109324,109325]"/>
  <match src="identifier: _token [38511,38517]" dest="identifier: _token [34908,34914]"/>
  <match src="(: ( [92100,92101]" dest="(: ( [90236,90237]"/>
  <match src="string: string [44994,45000]" dest="string: string [41795,41801]"/>
  <match src="): ) [17986,17987]" dest="): ) [19021,19022]"/>
  <match src="return_type_definition [42078,42095]" dest="return_type_definition [18177,18194]"/>
  <match src="is: is [62260,62262]" dest="is: is [59498,59500]"/>
  <match src="{: { [36370,36371]" dest="{: { [32716,32717]"/>
  <match src="function_definition [6824,6907]" dest="function_definition [7661,7744]"/>
  <match src="[: [ [82485,82486]" dest="[: [ [80333,80334]"/>
  <match src="(: ( [92334,92335]" dest="(: ( [90474,90475]"/>
  <match src="call_argument [100413,100418]" dest="call_argument [98784,98789]"/>
  <match src="call_argument [6140,6141]" dest="call_argument [6339,6340]"/>
  <match src="type_name [22206,22210]" dest="type_name [21761,21765]"/>
  <match src="primitive_type [78585,78592]" dest="primitive_type [76332,76339]"/>
  <match src="identifier: symbol [55812,55818]" dest="identifier: symbol [52867,52873]"/>
  <match src="array_access [79597,79614]" dest="array_access [77367,77384]"/>
  <match src="type_name [7039,7046]" dest="type_name [7881,7888]"/>
  <match src="type_name [16302,16309]" dest="type_name [16785,16792]"/>
  <match src="): ) [24778,24779]" dest="): ) [23404,23405]"/>
  <match src="): ) [29790,29791]" dest="): ) [25957,25958]"/>
  <match src="pragma: pragma [57953,57959]" dest="pragma: pragma [55065,55071]"/>
  <match src=",: , [85327,85328]" dest=",: , [83273,83274]"/>
  <match src="identifier: isNativeToken [111801,111814]" dest="identifier: isDisabled [23177,23187]"/>
  <match src="(: ( [108492,108493]" dest="(: ( [106334,106335]"/>
  <match src="call_argument [110726,110776]" dest="call_argument [109221,109271]"/>
  <match src="identifier: bridgeContract [102041,102055]" dest="identifier: bridgeContract [100467,100481]"/>
  <match src="(: ( [27206,27207]" dest="(: ( [39114,39115]"/>
  <match src="calldata: calldata [103144,103152]" dest="calldata: calldata [101606,101614]"/>
  <match src="}: } [103600,103601]" dest="}: } [102074,102075]"/>
  <match src="type_name [83565,83572]" dest="type_name [81447,81454]"/>
  <match src=",: , [48936,48937]" dest=",: , [45818,45819]"/>
  <match src="parameter [68754,68780]" dest="parameter [66190,66216]"/>
  <match src="call_expression [57466,57490]" dest="call_expression [54565,54589]"/>
  <match src="uint256: uint256 [111601,111608]" dest="uint256: uint256 [110917,110924]"/>
  <match src="returns: returns [39084,39091]" dest="returns: returns [35492,35499]"/>
  <match src="type_name [6680,6687]" dest="type_name [7513,7520]"/>
  <match src="binary_expression [26250,26299]" dest="binary_expression [22111,22160]"/>
  <match src="identifier: _from [39375,39380]" dest="identifier: _from [35793,35798]"/>
  <match src="(: ( [66162,66163]" dest="(: ( [63524,63525]"/>
  <match src="memory: memory [12701,12707]" dest="memory: memory [13678,13684]"/>
  <match src="): ) [2174,2175]" dest="): ) [2244,2245]"/>
  <match src="solidity_pragma_token [4036,4050]" dest="solidity_pragma_token [4155,4169]"/>
  <match src=",: , [94406,94407]" dest=",: , [92599,92600]"/>
  <match src="(: ( [117352,117353]" dest="(: ( [115876,115877]"/>
  <match src="primitive_type [54968,54975]" dest="primitive_type [51997,52004]"/>
  <match src="comment: // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol [43021,43133]" dest="comment: // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol [39750,39862]"/>
  <match src="return_type_definition [88749,88766]" dest="return_type_definition [86780,86797]"/>
  <match src="call_argument [97821,97828]" dest="call_argument [96117,96124]"/>
  <match src="variable_declaration_tuple [4916,4955]" dest="variable_declaration_tuple [5065,5104]"/>
  <match src="return: return [89418,89424]" dest="return: return [87473,87479]"/>
  <match src="): ) [64623,64624]" dest="): ) [61933,61934]"/>
  <match src="): ) [81743,81744]" dest="): ) [79569,79570]"/>
  <match src="state_mutability [81713,81717]" dest="state_mutability [79539,79543]"/>
  <match src="identifier: data [45614,45618]" dest="identifier: data [42429,42433]"/>
  <match src=".: . [2548,2549]" dest=".: . [2627,2628]"/>
  <match src="expression_statement [14407,14423]" dest="expression_statement [15268,15284]"/>
  <match src="emit_statement [48900,48953]" dest="emit_statement [45782,45835]"/>
  <match src="identifier: _entries [79152,79160]" dest="identifier: _entries [76910,76918]"/>
  <match src="}: } [117558,117559]" dest="}: } [115985,115986]"/>
  <match src=",: , [110450,110451]" dest=",: , [109028,109029]"/>
  <match src="bytes32: bytes32 [40222,40229]" dest="bytes32: bytes32 [36677,36684]"/>
  <match src="assignment_expression [6207,6239]" dest="assignment_expression [6408,6440]"/>
  <match src="string_literal [94580,94632]" dest="string_literal [92775,92827]"/>
  <match src="comment: /**      * @dev See {IERC721Enumerable-totalSupply}.      */ [90801,90861]" dest="comment: /**      * @dev See {IERC721Enumerable-totalSupply}.      */ [88895,88957]"/>
  <match src="primitive_type [29168,29175]" dest="primitive_type [25316,25323]"/>
  <match src="comment: /**      * @dev See {IERC721Metadata-symbol}.      */ [89287,89340]" dest="comment: /**      * @dev See {IERC721Metadata-symbol}.      */ [87338,87393]"/>
  <match src="comment: /**      * @dev Internal function for reading ERC721 token name.      * Use custom predefined name in case name() function is not implemented.      * @param _token address of the ERC721 token contract.      * @return name for the token.      */ [45255,45499]" dest="comment: /**      * @dev Internal function for reading ERC721 token name.      * Use custom predefined name in case name() function is not implemented.      * @param _token address of the ERC721 token contract.      * @return name for the token.      */ [42063,42312]"/>
  <match src="function_body [56410,56791]" dest="function_body [53482,53872]"/>
  <match src="]: ] [72283,72284]" dest="]: ] [69817,69818]"/>
  <match src="public: public [47695,47701]" dest="public: public [44555,44561]"/>
  <match src="): ) [46396,46397]" dest="): ) [43223,43224]"/>
  <match src="}: } [8775,8776]" dest="}: } [9668,9669]"/>
  <match src="primitive_type [86443,86449]" dest="primitive_type [84419,84425]"/>
  <match src="identifier: bytesToAddress [39244,39258]" dest="identifier: bytesToAddress [35656,35670]"/>
  <match src="return: return [105829,105835]" dest="return: return [120286,120292]"/>
  <match src="pragma: pragma [118086,118092]" dest="pragma: pragma [117312,117318]"/>
  <match src="primitive_type [67432,67438]" dest="primitive_type [64832,64838]"/>
  <match src="return_statement [65082,65133]" dest="return_statement [62410,62461]"/>
  <match src="user_defined_type [75192,75195]" dest="user_defined_type [72827,72830]"/>
  <match src=",: , [96310,96311]" dest=",: , [94552,94553]"/>
  <match src="visibility [46718,46726]" dest="visibility [43554,43562]"/>
  <match src="type_name [88286,88292]" dest="type_name [86304,86310]"/>
  <match src="(: ( [84384,84385]" dest="(: ( [82288,82289]"/>
  <match src="primitive_type [113904,113911]" dest="primitive_type [103467,103474]"/>
  <match src="comment: /**      * @dev Updates the bridge contract address.      * Can be called by bridge owner after token contract was instantiated.      * @param _bridgeContract address of the new bridge contract.      */ [103226,103428]" dest="comment: /**      * @dev Updates the bridge contract address.      * Can be called by bridge owner after token contract was instantiated.      * @param _bridgeContract address of the new bridge contract.      */ [101692,101898]"/>
  <match src=".: . [71764,71765]" dest=".: . [69288,69289]"/>
  <match src="call_expression [20370,20398]" dest="call_expression [19924,19952]"/>
  <match src="identifier: length [70836,70842]" dest="identifier: length [68337,68343]"/>
  <match src="bool: bool [34659,34663]" dest="bool: bool [30962,30966]"/>
  <match src="pragma: pragma [101496,101502]" dest="pragma: pragma [99898,99904]"/>
  <match src="||: || [5062,5064]" dest="||: || [5232,5234]"/>
  <match src="call_expression [110616,110658]" dest="call_expression [109109,109151]"/>
  <match src="(: ( [12372,12373]" dest="(: ( [13344,13345]"/>
  <match src="parameter [83314,83342]" dest="parameter [81189,81217]"/>
  <match src="): ) [108423,108424]" dest="): ) [106264,106265]"/>
  <match src="{: { [25604,25605]" dest="{: { [22641,22642]"/>
  <match src="function_body [21155,21247]" dest="function_body [20716,20810]"/>
  <match src="identifier: account [8194,8201]" dest="identifier: account [9078,9085]"/>
  <match src="memory: memory [19673,19679]" dest="memory: memory [19266,19272]"/>
  <match src="if: if [116261,116263]" dest="if: if [114886,114888]"/>
  <match src="): ) [39754,39755]" dest="): ) [36190,36191]"/>
  <match src=".: . [46266,46267]" dest=".: . [43092,43093]"/>
  <match src="user_defined_type [104408,104425]" dest="user_defined_type [102923,102940]"/>
  <match src="primitive_type [31690,31697]" dest="primitive_type [27904,27911]"/>
  <match src="identifier: set [70644,70647]" dest="identifier: set [68142,68145]"/>
  <match src="abstract: abstract [62235,62243]" dest="abstract: abstract [59473,59481]"/>
  <match src="}: } [1618,1619]" dest="}: } [1671,1672]"/>
  <match src="state_variable_declaration [5388,5489]" dest="state_variable_declaration [5565,5666]"/>
  <match src="type_name [7247,7254]" dest="type_name [8097,8104]"/>
  <match src="call_expression [74639,74658]" dest="call_expression [72253,72272]"/>
  <match src="bytes32: bytes32 [83108,83115]" dest="bytes32: bytes32 [80975,80982]"/>
  <match src="{: { [76641,76642]" dest="{: { [74323,74324]"/>
  <match src="returns: returns [28665,28672]" dest="returns: returns [24792,24799]"/>
  <match src="function: function [95878,95886]" dest="function: function [94111,94119]"/>
  <match src="identifier: index [75041,75046]" dest="identifier: index [72668,72673]"/>
  <match src="view: view [62982,62986]" dest="view: view [60242,60246]"/>
  <match src="state_variable_declaration [411,459]" dest="state_variable_declaration [423,471]"/>
  <match src="call_argument [37505,37515]" dest="call_argument [33880,33890]"/>
  <match src="): ) [41036,41037]" dest="): ) [37518,37519]"/>
  <match src="call_expression [46813,46899]" dest="call_expression [43651,43737]"/>
  <match src="user_defined_type [1900,1914]" dest="user_defined_type [1964,1978]"/>
  <match src="): ) [50885,50886]" dest="): ) [47830,47831]"/>
  <match src=",: , [83092,83093]" dest=",: , [80959,80960]"/>
  <match src="variable_declaration [4917,4929]" dest="variable_declaration [5066,5078]"/>
  <match src="primitive_type [84391,84398]" dest="primitive_type [82295,82302]"/>
  <match src="identifier: abi [59106,59109]" dest="identifier: abi [56248,56251]"/>
  <match src=".: . [111002,111003]" dest=".: . [120787,120788]"/>
  <match src="binary_expression [91486,91497]" dest="binary_expression [89601,89612]"/>
  <match src="call_expression [118752,118790]" dest="call_expression [117023,117054]"/>
  <match src="(: ( [32291,32292]" dest="(: ( [28526,28527]"/>
  <match src="state_variable_declaration [86492,86516]" dest="state_variable_declaration [84471,84495]"/>
  <match src="identifier: _isNative [116265,116274]" dest="identifier: _isNative [114890,114899]"/>
  <match src="type_name [83818,83825]" dest="type_name [81707,81714]"/>
  <match src="identifier: _key [78890,78894]" dest="identifier: _key [76642,76646]"/>
  <match src="identifier: owner [90680,90685]" dest="identifier: owner [88770,88775]"/>
  <match src="visibility [83036,83044]" dest="visibility [80902,80910]"/>
  <match src="parameter [117047,117065]" dest="parameter [115588,115606]"/>
  <match src="(: ( [85014,85015]" dest="(: ( [82936,82937]"/>
  <match src="identifier: tokenId [29233,29240]" dest="identifier: tokenId [25381,25388]"/>
  <match src="let: let [13311,13314]" dest="let: let [14302,14305]"/>
  <match src="call_argument [98633,98640]" dest="call_argument [96954,96961]"/>
  <match src="call_expression [112264,112282]" dest="call_expression [111481,111521]"/>
  <match src="array_access [100664,100688]" dest="array_access [99042,99066]"/>
  <match src="type_name [18512,18519]" dest="type_name [18024,18031]"/>
  <match src=".: . [111961,111962]" dest=".: . [110117,110118]"/>
  <match src=",: , [92346,92347]" dest=",: , [90486,90487]"/>
  <match src="primitive_type [2160,2167]" dest="primitive_type [2230,2237]"/>
  <match src="identifier: value [70562,70567]" dest="identifier: value [68058,68063]"/>
  <match src="(: ( [107269,107270]" dest="(: ( [105121,105122]"/>
  <match src="{: { [74164,74165]" dest="{: { [71763,71764]"/>
  <match src="(: ( [74445,74446]" dest="(: ( [72052,72053]"/>
  <match src=".: . [42566,42567]" dest=".: . [39196,39197]"/>
  <match src="uint256: uint256 [105307,105314]" dest="uint256: uint256 [119866,119873]"/>
  <match src="function: function [15215,15223]" dest="function: function [16138,16146]"/>
  <match src="!=: != [92185,92187]" dest="!=: != [90322,90324]"/>
  <match src="[: [ [98664,98665]" dest="[: [ [96986,96987]"/>
  <match src="address: address [93052,93059]" dest="address: address [91215,91222]"/>
  <match src="return: return [72971,72977]" dest="return: return [70530,70536]"/>
  <match src="user_defined_type [74331,74341]" dest="user_defined_type [71937,71947]"/>
  <match src="event_paramater [18929,18954]" dest="event_paramater [18563,18588]"/>
  <match src="(: ( [72760,72761]" dest="(: ( [70311,70312]"/>
  <match src="(: ( [39333,39334]" dest="(: ( [35749,35750]"/>
  <match src="function_definition [29542,29616]" dest="function_definition [25700,25774]"/>
  <match src="call_argument [101852,101859]" dest="call_argument [100270,100277]"/>
  <match src="state_mutability [84264,84268]" dest="state_mutability [82166,82170]"/>
  <match src="bytes32: bytes32 [83418,83425]" dest="bytes32: bytes32 [81294,81301]"/>
  <match src="uint256: uint256 [105240,105247]" dest="uint256: uint256 [118047,118054]"/>
  <match src="): ) [110605,110606]" dest="): ) [109531,109532]"/>
  <match src="identifier: _token [110650,110656]" dest="identifier: _token [109143,109149]"/>
  <match src="parameter [72707,72722]" dest="parameter [70258,70273]"/>
  <match src="memory: memory [89689,89695]" dest="memory: memory [87753,87759]"/>
  <match src="yul_identifier [34997,35000]" dest="yul_identifier [31305,31308]"/>
  <match src="type_name [92682,92689]" dest="type_name [90835,90842]"/>
  <match src="return: return [54768,54774]" dest="return: return [51786,51792]"/>
  <match src="identifier: _entries [78125,78133]" dest="identifier: _entries [75858,75866]"/>
  <match src="number_literal: 0 [97146,97147]" dest="number_literal: 0 [95414,95415]"/>
  <match src="member_expression [84341,84351]" dest="member_expression [82244,82254]"/>
  <match src="storage: storage [73352,73359]" dest="storage: storage [70924,70931]"/>
  <match src="library_declaration [69636,76698]" dest="library_declaration [67107,74383]"/>
  <match src="identifier: IERC721Metadata [43839,43854]" dest="identifier: IERC721Metadata [40600,40615]"/>
  <match src="call_argument [97016,97017]" dest="call_argument [95278,95279]"/>
  <match src="primitive_type [70586,70590]" dest="primitive_type [68082,68086]"/>
  <match src="number_literal: 0 [112248,112249]" dest="number_literal: 0 [111843,111844]"/>
  <match src="call_argument [73457,73493]" dest="call_argument [71030,71066]"/>
  <match src="uint256: uint256 [105269,105276]" dest="uint256: uint256 [118678,118685]"/>
  <match src="parameter [11840,11853]" dest="parameter [12802,12815]"/>
  <match src="call_expression [1512,1599]" dest="call_expression [1562,1649]"/>
  <match src="type_name [65454,65461]" dest="type_name [62795,62802]"/>
  <match src="pragma: pragma [18682,18688]" dest="pragma: pragma [18307,18313]"/>
  <match src="identifier: abi [46356,46359]" dest="identifier: abi [43183,43186]"/>
  <match src="external: external [40643,40651]" dest="external: external [37109,37117]"/>
  <match src="type_cast_expression [97516,97526]" dest="type_cast_expression [95800,95810]"/>
  <match src="call_argument [42610,42616]" dest="call_argument [39229,39235]"/>
  <match src="user_defined_type [75009,75019]" dest="user_defined_type [72636,72646]"/>
  <match src="expression_statement [2195,2276]" dest="expression_statement [2266,2347]"/>
  <match src="call_expression [105439,105464]" dest="call_expression [120002,120027]"/>
  <match src="return_type_definition [71152,71166]" dest="return_type_definition [68666,68680]"/>
  <match src="return_type_definition [83045,83059]" dest="return_type_definition [80911,80925]"/>
  <match src="}: } [70877,70878]" dest="}: } [68380,68381]"/>
  <match src=".: . [19526,19527]" dest=".: . [19181,19182]"/>
  <match src="function_definition [50080,50236]" dest="function_definition [47000,47159]"/>
  <match src="comment: // implementations (such as AddressSet) are just wrappers around the [69908,69976]" dest="comment: // implementations (such as AddressSet) are just wrappers around the [67384,67452]"/>
  <match src="call_expression [38577,38591]" dest="call_expression [34975,34989]"/>
  <match src="): ) [13415,13416]" dest="): ) [14407,14408]"/>
  <match src="call_argument [83852,83862]" dest="call_argument [81742,81752]"/>
  <match src="identifier: operator [92479,92487]" dest="identifier: operator [90625,90633]"/>
  <match src=",: , [81030,81031]" dest=",: , [78835,78836]"/>
  <match src="call_expression [111652,111730]" dest="call_expression [110984,111062]"/>
  <match src="return: return [84967,84973]" dest="return: return [82889,82895]"/>
  <match src="member_expression [42563,42579]" dest="member_expression [39193,39209]"/>
  <match src="is: is [33380,33382]" dest="is: is [29645,29647]"/>
  <match src="identifier: msg [57452,57455]" dest="identifier: msg [54551,54554]"/>
  <match src="(: ( [20591,20592]" dest="(: ( [20137,20138]"/>
  <match src="comment: /*      *     bytes4(keccak256('balanceOf(address)')) == 0x70a08231      *     bytes4(keccak256('ownerOf(uint256)')) == 0x6352211e      *     bytes4(keccak256('approve(address,uint256)')) == 0x095ea7b3      *     bytes4(keccak256('getApproved(uint256)')) == 0x081812fc      *     bytes4(keccak256('setApprovalForAll(address,bool)')) == 0xa22cb465      *     bytes4(keccak256('isApprovedForAll(address,address)')) == 0xe985e9c5      *     bytes4(keccak256('transferFrom(address,address,uint256)')) == 0x23b872dd      *     bytes4(keccak256('safeTransferFrom(address,address,uint256)')) == 0x42842e0e      *     bytes4(keccak256('safeTransferFrom(address,address,uint256,bytes)')) == 0xb88d4fde      *      *     =&gt; 0x70a08231 ^ 0x6352211e ^ 0x095ea7b3 ^ 0x081812fc ^      *        0xa22cb465 ^ 0xe985e9c5 ^ 0x23b872dd ^ 0x42842e0e ^ 0xb88d4fde == 0x80ac58cd      */ [86522,87386]" dest="comment: /*      *     bytes4(keccak256('balanceOf(address)')) == 0x70a08231      *     bytes4(keccak256('ownerOf(uint256)')) == 0x6352211e      *     bytes4(keccak256('approve(address,uint256)')) == 0x095ea7b3      *     bytes4(keccak256('getApproved(uint256)')) == 0x081812fc      *     bytes4(keccak256('setApprovalForAll(address,bool)')) == 0xa22cb465      *     bytes4(keccak256('isApprovedForAll(address,address)')) == 0xe985e9c5      *     bytes4(keccak256('transferFrom(address,address,uint256)')) == 0x23b872dd      *     bytes4(keccak256('safeTransferFrom(address,address,uint256)')) == 0x42842e0e      *     bytes4(keccak256('safeTransferFrom(address,address,uint256,bytes)')) == 0xb88d4fde      *      *     =&gt; 0x70a08231 ^ 0x6352211e ^ 0x095ea7b3 ^ 0x081812fc ^      *        0xa22cb465 ^ 0xe985e9c5 ^ 0x23b872dd ^ 0x42842e0e ^ 0xb88d4fde == 0x80ac58cd      */ [84503,85380]"/>
  <match src="expression_statement [19416,19493]" dest="expression_statement [19090,19157]"/>
  <match src="call_argument [98492,98494]" dest="call_argument [96808,96810]"/>
  <match src=",: , [20532,20533]" dest=",: , [20084,20085]"/>
  <match src="(: ( [9781,9782]" dest="(: ( [10693,10694]"/>
  <match src="state_mutability [65908,65912]" dest="state_mutability [63266,63270]"/>
  <match src="inheritance_specifier [104512,104537]" dest="inheritance_specifier [103032,103057]"/>
  <match src="if: if [66159,66161]" dest="if: if [63521,63523]"/>
  <match src="visibility [75428,75436]" dest="visibility [73072,73080]"/>
  <match src="is: is [47240,47242]" dest="is: is [44092,44094]"/>
  <match src="identifier: key [79442,79445]" dest="identifier: key [77210,77213]"/>
  <match src="primitive_type [98245,98252]" dest="primitive_type [96557,96564]"/>
  <match src="==: == [109819,109821]" dest="==: == [107766,107768]"/>
  <match src="call_argument [42580,42608]" dest="call_argument [39210,39227]"/>
  <match src="[: [ [43486,43487]" dest="[: [ [40230,40231]"/>
  <match src="returns: returns [89228,89235]" dest="returns: returns [87275,87282]"/>
  <match src=",: , [40724,40725]" dest=",: , [37194,37195]"/>
  <match src="identifier: _entries [80351,80359]" dest="identifier: _entries [78134,78142]"/>
  <match src="type_name [36317,36322]" dest="type_name [32662,32667]"/>
  <match src="primitive_type [32510,32517]" dest="primitive_type [28752,28759]"/>
  <match src="view: view [28660,28664]" dest="view: view [24787,24791]"/>
  <match src="{: { [65931,65932]" dest="{: { [63289,63290]"/>
  <match src=",: , [42608,42609]" dest=",: , [39227,39228]"/>
  <match src="primitive_type [11840,11847]" dest="primitive_type [12802,12809]"/>
  <match src="string: string [107182,107188]" dest="string: string [105032,105038]"/>
  <match src="number_literal: 0 [98411,98412]" dest="number_literal: 0 [96725,96726]"/>
  <match src="call_argument [107584,107588]" dest="call_argument [105442,105446]"/>
  <match src="identifier: onlyOwner [25594,25603]" dest="identifier: onlyOwner [22631,22640]"/>
  <match src="function_body [50904,54831]" dest="function_body [47849,51852]"/>
  <match src="type_name [90732,90739]" dest="type_name [88822,88829]"/>
  <match src="}: } [54830,54831]" dest="}: } [51851,51852]"/>
  <match src="solidity: solidity [13597,13605]" dest="solidity: solidity [14600,14608]"/>
  <match src="internal: internal [437,445]" dest="internal: internal [449,457]"/>
  <match src="identifier: addressStorage [50184,50198]" dest="identifier: addressStorage [47106,47120]"/>
  <match src="type_name [86355,86361]" dest="type_name [84328,84334]"/>
  <match src="identifier: _inner [83086,83092]" dest="identifier: _inner [80953,80959]"/>
  <match src="=: = [112031,112032]" dest="=: = [111693,111694]"/>
  <match src="=: = [27326,27327]" dest="=: = [39333,39334]"/>
  <match src="identifier: tokenId [91460,91467]" dest="identifier: tokenId [89574,89581]"/>
  <match src="[: [ [78122,78123]" dest="[: [ [75855,75856]"/>
  <match src="(: ( [97523,97524]" dest="(: ( [95807,95808]"/>
  <match src="private: private [81243,81250]" dest="private: private [79055,79062]"/>
  <match src="identifier: owner [32518,32523]" dest="identifier: owner [28760,28765]"/>
  <match src="contract_declaration [13735,18577]" dest="contract_declaration [14747,18198]"/>
  <match src="false [70905,70910]" dest="false [68409,68414]"/>
  <match src="parameter [98245,98255]" dest="parameter [96557,96567]"/>
  <match src="(: ( [25547,25548]" dest="(: ( [22590,22591]"/>
  <match src="==: == [5154,5156]" dest="==: == [5325,5327]"/>
  <match src="identifier: addressStorage [48229,48243]" dest="identifier: addressStorage [45099,45113]"/>
  <match src="virtual: virtual [59821,59828]" dest="virtual: virtual [56983,56990]"/>
  <match src=",: , [99033,99034]" dest=",: , [97370,97371]"/>
  <match src="(: ( [23448,23449]" dest="(: ( [38325,38326]"/>
  <match src=",: , [97859,97860]" dest=",: , [96157,96158]"/>
  <match src="primitive_type [61873,61880]" dest="primitive_type [59095,59102]"/>
  <match src="address: address [57368,57375]" dest="address: address [54466,54473]"/>
  <match src="(: ( [90516,90517]" dest="(: ( [88599,88600]"/>
  <match src="identifier: tokenId [95045,95052]" dest="identifier: tokenId [93252,93259]"/>
  <match src="function_definition [96776,97169]" dest="function_definition [95034,95438]"/>
  <match src="(: ( [53824,53825]" dest="(: ( [50823,50824]"/>
  <match src="identifier: bridgedToken [107488,107500]" dest="identifier: bridgedToken [105346,105358]"/>
  <match src="(: ( [94552,94553]" dest="(: ( [92747,92748]"/>
  <match src="type_name [55533,55540]" dest="type_name [52582,52589]"/>
  <match src="indexed: indexed [40287,40294]" dest="indexed: indexed [36744,36751]"/>
  <match src="type_name [411,436]" dest="type_name [423,448]"/>
  <match src="&quot;: &quot; [20910,20911]" dest="&quot;: &quot; [20464,20465]"/>
  <match src="storage: storage [80327,80334]" dest="storage: storage [78110,78117]"/>
  <match src="type_name [71689,71696]" dest="type_name [69212,69219]"/>
  <match src="(: ( [75745,75746]" dest="(: ( [73399,73400]"/>
  <match src="primitive_type [71129,71136]" dest="primitive_type [68643,68650]"/>
  <match src="identifier: _indexes [78312,78320]" dest="identifier: _indexes [76049,76057]"/>
  <match src="external: external [6545,6553]" dest="external: external [7374,7382]"/>
  <match src="array_access [48690,48767]" dest="array_access [45569,45646]"/>
  <match src="bytes32: bytes32 [42087,42094]" dest="bytes32: bytes32 [18186,18193]"/>
  <match src="type_name [90919,90926]" dest="type_name [89016,89023]"/>
  <match src="identifier: from [100044,100048]" dest="identifier: from [98404,98408]"/>
  <match src="call_argument [116470,116476]" dest="call_argument [115099,115105]"/>
  <match src="primitive_type [111601,111608]" dest="primitive_type [110917,110924]"/>
  <match src="call_argument [12413,12417]" dest="call_argument [13386,13390]"/>
  <match src="event_paramater [29023,29046]" dest="event_paramater [25166,25189]"/>
  <match src="type_name [113853,113860]" dest="type_name [112832,112839]"/>
  <match src="): ) [92229,92230]" dest="): ) [90366,90367]"/>
  <match src="identifier: require [4693,4700]" dest="identifier: require [4834,4841]"/>
  <match src="): ) [97880,97881]" dest="): ) [96178,96179]"/>
  <match src="variable_declaration [46169,46180]" dest="variable_declaration [42995,43006]"/>
  <match src="expression_statement [110616,110659]" dest="expression_statement [109109,109152]"/>
  <match src="member_expression [98606,98632]" dest="member_expression [96927,96953]"/>
  <match src="contract_declaration [21661,27867]" dest="contract_declaration [21214,23969]"/>
  <match src="call_argument [24776,24777]" dest="call_argument [23402,23403]"/>
  <match src=".: . [74192,74193]" dest=".: . [71792,71793]"/>
  <match src="type_name [39810,39816]" dest="type_name [36248,36254]"/>
  <match src="binary_expression [102215,102243]" dest="binary_expression [100649,100677]"/>
  <match src="identifier: require [50139,50146]" dest="identifier: require [47060,47067]"/>
  <match src="mload: mload [34461,34466]" dest="mload: mload [30754,30759]"/>
  <match src=",: , [112429,112430]" dest=",: , [112026,112027]"/>
  <match src="visibility [83578,83586]" dest="visibility [81460,81468]"/>
  <match src="parenthesized_expression [5135,5211]" dest="parenthesized_expression [5306,5382]"/>
  <match src="return_statement [79106,79118]" dest="return_statement [76862,76874]"/>
  <match src="(: ( [107163,107164]" dest="(: ( [105012,105013]"/>
  <match src="solidity_pragma_token [63724,63739]" dest="solidity_pragma_token [61008,61023]"/>
  <match src="type_name [3530,3537]" dest="type_name [3634,3641]"/>
  <match src="identifier: owner [6179,6184]" dest="identifier: owner [6379,6384]"/>
  <match src="&quot;: &quot; [21204,21205]" dest="&quot;: &quot; [20766,20767]"/>
  <match src="type_name [75446,75450]" dest="type_name [73090,73094]"/>
  <match src="call_argument [115730,115738]" dest="call_argument [114338,114346]"/>
  <match src=",: , [63570,63571]" dest=",: , [60846,60847]"/>
  <match src="parameter [98231,98243]" dest="parameter [96543,96555]"/>
  <match src="identifier: newOwner [6120,6128]" dest="identifier: newOwner [6319,6327]"/>
  <match src="if_statement [70602,70921]" dest="if_statement [68099,68426]"/>
  <match src="uint8: uint8 [43503,43508]" dest="uint8: uint8 [40247,40252]"/>
  <match src="function_definition [88962,89129]" dest="function_definition [87002,87171]"/>
  <match src="primitive_type [46684,46691]" dest="primitive_type [43520,43527]"/>
  <match src="(: ( [90493,90494]" dest="(: ( [88576,88577]"/>
  <match src="call_argument [110922,110931]" dest="call_argument [109382,109391]"/>
  <match src="function: function [64558,64566]" dest="function: function [61868,61876]"/>
  <match src="identifier: _tokenId [103948,103956]" dest="identifier: _tokenId [102431,102439]"/>
  <match src="function_body [95943,95986]" dest="function_body [94176,94221]"/>
  <match src=",: , [11945,11946]" dest=",: , [12908,12909]"/>
  <match src="state_mutability [46727,46731]" dest="state_mutability [43563,43567]"/>
  <match src="pragma_directive [1114,1136]" dest="pragma_directive [1150,1172]"/>
  <match src="identifier: _name [86323,86328]" dest="identifier: _name [84293,84298]"/>
  <match src="): ) [74397,74398]" dest="): ) [72003,72004]"/>
  <match src="(: ( [74646,74647]" dest="(: ( [72260,72261]"/>
  <match src="user_defined_type [18874,18897]" dest="user_defined_type [18507,18530]"/>
  <match src="identifier: abi [118752,118755]" dest="identifier: abi [117023,117026]"/>
  <match src="string_literal [23551,23563]" dest="string_literal [38426,38443]"/>
  <match src="type_name [5388,5395]" dest="type_name [5565,5572]"/>
  <match src="]: ] [81883,81884]" dest="]: ] [79712,79713]"/>
  <match src="): ) [97678,97679]" dest="): ) [95968,95969]"/>
  <match src="struct: struct [73561,73567]" dest="struct: struct [71140,71146]"/>
  <match src="call_argument [115644,115653]" dest="call_argument [114251,114260]"/>
  <match src="identifier: tokenId [89531,89538]" dest="identifier: tokenId [87592,87599]"/>
  <match src="call_expression [78879,78917]" dest="call_expression [76631,76669]"/>
  <match src="call_argument [85007,85019]" dest="call_argument [82929,82941]"/>
  <match src="): ) [72737,72738]" dest="): ) [70288,70289]"/>
  <match src="(: ( [6984,6985]" dest="(: ( [7823,7824]"/>
  <match src="member_expression [5053,5285]" dest="member_expression [5223,5457]"/>
  <match src="identifier: _isNative [114928,114937]" dest="identifier: _isNative [113550,113559]"/>
  <match src="uint256: uint256 [67410,67417]" dest="uint256: uint256 [64810,64817]"/>
  <match src=".: . [50154,50155]" dest=".: . [47075,47076]"/>
  <match src="array_access [79148,79174]" dest="array_access [76906,76932]"/>
  <match src="bool: bool [95000,95004]" dest="bool: bool [93206,93210]"/>
  <match src="(: ( [50146,50147]" dest="(: ( [47067,47068]"/>
  <match src="function: function [42874,42882]" dest="function: function [39601,39609]"/>
  <match src=",: , [5198,5199]" dest=",: , [5369,5370]"/>
  <match src="call_argument [117270,117276]" dest="call_argument [115792,115798]"/>
  <match src="address: address [111551,111558]" dest="address: address [109936,109943]"/>
  <match src="if: if [107136,107138]" dest="if: if [104985,104987]"/>
  <match src="parameter [94394,94406]" dest="parameter [92587,92599]"/>
  <match src="variable_declaration_tuple [46168,46200]" dest="variable_declaration_tuple [42994,43026]"/>
  <match src="(: ( [56990,56991]" dest="(: ( [54077,54078]"/>
  <match src="visibility [107044,107052]" dest="visibility [104891,104899]"/>
  <match src="identifier: ownerOf [91452,91459]" dest="identifier: ownerOf [89566,89573]"/>
  <match src="string: string [65465,65471]" dest="string: string [62806,62812]"/>
  <match src="private: private [100646,100653]" dest="private: private [99023,99030]"/>
  <match src="identifier: map [83082,83085]" dest="identifier: map [80949,80952]"/>
  <match src="member_expression [109681,109699]" dest="member_expression [107626,107644]"/>
  <match src="function: function [20785,20793]" dest="function: function [20338,20346]"/>
  <match src="address: address [110433,110440]" dest="address: address [109011,109018]"/>
  <match src="solidity_version: 0.7.0 [27947,27952]" dest="solidity_version: 0.7.0 [24054,24059]"/>
  <match src="primitive_type [56991,56998]" dest="primitive_type [54078,54085]"/>
  <match src="variable_declaration [46182,46199]" dest="variable_declaration [43008,43025]"/>
  <match src="): ) [88803,88804]" dest="): ) [86835,86836]"/>
  <match src="): ) [82128,82129]" dest="): ) [79968,79969]"/>
  <match src="parameter [76594,76607]" dest="parameter [74276,74289]"/>
  <match src="(: ( [115024,115025]" dest="(: ( [115719,115720]"/>
  <match src="(: ( [115086,115087]" dest="(: ( [113650,113651]"/>
  <match src="visibility [86315,86322]" dest="visibility [84285,84292]"/>
  <match src=",: , [82521,82522]" dest=",: , [80370,80371]"/>
  <match src="call_argument [74426,74436]" dest="call_argument [72033,72043]"/>
  <match src="modifier_definition [1465,1617]" dest="modifier_definition [1514,1669]"/>
  <match src="function_definition [103831,103975]" dest="function_definition [102313,102459]"/>
  <match src="function: function [109564,109572]" dest="function: function [107508,107516]"/>
  <match src="call_argument [106227,106228]" dest="call_argument [104055,104056]"/>
  <match src="identifier: call [9964,9968]" dest="identifier: call [10879,10883]"/>
  <match src="): ) [91565,91566]" dest="): ) [89682,89683]"/>
  <match src="visibility [46120,46128]" dest="visibility [42945,42953]"/>
  <match src=",: , [95907,95908]" dest=",: , [94140,94141]"/>
  <match src="identifier: to [100058,100060]" dest="identifier: to [98418,98420]"/>
  <match src="user_defined_type [104382,104402]" dest="user_defined_type [102896,102916]"/>
  <match src="array_access [903,927]" dest="array_access [929,953]"/>
  <match src="true [930,934]" dest="true [956,960]"/>
  <match src="primitive_type [72724,72731]" dest="primitive_type [70275,70282]"/>
  <match src="primitive_type [13778,13785]" dest="primitive_type [14800,14807]"/>
  <match src="assignment_expression [2873,2950]" dest="assignment_expression [2961,3038]"/>
  <match src="event_paramater [40302,40327]" dest="event_paramater [36759,36784]"/>
  <match src="memory: memory [82392,82398]" dest="memory: memory [80239,80245]"/>
  <match src="): ) [89205,89206]" dest="): ) [87252,87253]"/>
  <match src="identifier: MapEntry [80318,80326]" dest="identifier: MapEntry [78101,78109]"/>
  <match src="function: function [28604,28612]" dest="function: function [24731,24739]"/>
  <match src="call_expression [109137,109179]" dest="call_expression [106997,107039]"/>
  <match src="identifier: onlyOwner [4671,4680]" dest="identifier: onlyOwner [4811,4820]"/>
  <match src="): ) [88507,88508]" dest="): ) [86530,86531]"/>
  <match src="identifier: errorMessage [85021,85033]" dest="identifier: errorMessage [82943,82955]"/>
  <match src="string [10016,10076]" dest="string [10932,10992]"/>
  <match src="bool: bool [70586,70590]" dest="bool: bool [68082,68086]"/>
  <match src=",: , [36258,36259]" dest=",: , [32600,32601]"/>
  <match src="identifier: tokenId [91393,91400]" dest="identifier: tokenId [89506,89513]"/>
  <match src="type_name [80318,80326]" dest="type_name [78101,78109]"/>
  <match src="yul_block [54652,54721]" dest="yul_block [51666,51737]"/>
  <match src="identifier: UintSet [85902,85909]" dest="identifier: UintSet [83860,83867]"/>
  <match src="returns: returns [81058,81065]" dest="returns: returns [78863,78870]"/>
  <match src="): ) [997,998]" dest="): ) [1026,1027]"/>
  <match src="number_literal: 0xffffffff [63560,63570]" dest="number_literal: 0xffffffff [60836,60846]"/>
  <match src="bytes32: bytes32 [8510,8517]" dest="bytes32: bytes32 [9399,9406]"/>
  <match src="primitive_type [27223,27230]" dest="primitive_type [103158,103165]"/>
  <match src="number_literal: 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 [8532,8598]" dest="number_literal: 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 [9421,9487]"/>
  <match src="address: address [86123,86130]" dest="address: address [84087,84094]"/>
  <match src="array_access [79053,79070]" dest="array_access [76808,76825]"/>
  <match src="function_body [2863,2957]" dest="function_body [2950,3046]"/>
  <match src="{: { [73852,73853]" dest="{: { [71441,71442]"/>
  <match src="identifier: keyIndex [82508,82516]" dest="identifier: keyIndex [80357,80365]"/>
  <match src=",: , [58547,58548]" dest=",: , [55674,55675]"/>
  <match src="primitive_type [12613,12618]" dest="primitive_type [13590,13595]"/>
  <match src="primitive_type [116167,116171]" dest="primitive_type [114788,114792]"/>
  <match src="uint256: uint256 [79578,79585]" dest="uint256: uint256 [77348,77355]"/>
  <match src=",: , [107797,107798]" dest=",: , [105622,105623]"/>
  <match src="identifier: _recipient [116483,116493]" dest="identifier: _recipient [115112,115122]"/>
  <match src="call_argument [114241,114247]" dest="call_argument [110241,110247]"/>
  <match src="(: ( [68831,68832]" dest="(: ( [66268,66269]"/>
  <match src="=&gt;: =&gt; [55711,55713]" dest="=&gt;: =&gt; [52764,52766]"/>
  <match src="function: function [65005,65013]" dest="function: function [62332,62340]"/>
  <match src="primitive_type [29023,29030]" dest="primitive_type [25166,25173]"/>
  <match src="call_argument [109700,109713]" dest="call_argument [107645,107658]"/>
  <match src="identifier: c [66222,66223]" dest="identifier: c [63588,63589]"/>
  <match src="override_specifier [92149,92157]" dest="override_specifier [90285,90293]"/>
  <match src="identifier: token [108465,108470]" dest="identifier: token [106307,106312]"/>
  <match src="call_expression [3904,3963]" dest="call_expression [4017,4076]"/>
  <match src="override_specifier [92726,92734]" dest="override_specifier [90879,90887]"/>
  <match src="primitive_type [12597,12604]" dest="primitive_type [13574,13581]"/>
  <match src="identifier: _msgSender [92824,92834]" dest="identifier: _msgSender [90979,90989]"/>
  <match src="identifier: _bridgedToken [48167,48180]" dest="identifier: _bridgedToken [45036,45049]"/>
  <match src="identifier: onlyIfUpgradeabilityOwner [110492,110517]" dest="identifier: onlyIfUpgradeabilityOwner [109072,109097]"/>
  <match src="address: address [21816,21823]" dest="address: address [21373,21380]"/>
  <match src="function: function [3481,3489]" dest="function: function [3585,3593]"/>
  <match src="identifier: digits [43289,43295]" dest="identifier: digits [40026,40032]"/>
  <match src="identifier: set [72043,72046]" dest="identifier: set [69572,69575]"/>
  <match src="primitive_type [32525,32532]" dest="primitive_type [28767,28774]"/>
  <match src="parameter [114975,114991]" dest="parameter [113599,113615]"/>
  <match src="type_name [46700,46707]" dest="type_name [43536,43543]"/>
  <match src="member_expression [1520,1596]" dest="member_expression [1570,1646]"/>
  <match src="identifier: this [12413,12417]" dest="identifier: this [13386,13390]"/>
  <match src="visibility [24263,24269]" dest="visibility [23685,23691]"/>
  <match src="call_argument [103522,103551]" dest="call_argument [101994,102023]"/>
  <match src="call_expression [105696,105733]" dest="call_expression [120147,120184]"/>
  <match src="): ) [46156,46157]" dest="): ) [42981,42982]"/>
  <match src="array_access [78763,78780]" dest="array_access [76512,76529]"/>
  <match src="identifier: _tokenURI [108409,108418]" dest="identifier: _tokenURI [106249,106258]"/>
  <match src="expression_statement [21165,21241]" dest="expression_statement [20727,20803]"/>
  <match src="): ) [97691,97692]" dest="): ) [95981,95982]"/>
  <match src="parameter [30557,30569]" dest="parameter [26740,26752]"/>
  <match src=",: , [98754,98755]" dest=",: , [97080,97081]"/>
  <match src=".: . [16896,16897]" dest=".: . [17091,17092]"/>
  <match src="state_variable_declaration [62360,62418]" dest="state_variable_declaration [59602,59660]"/>
  <match src="using: using [85416,85421]" dest="using: using [83365,83370]"/>
  <match src="view: view [31913,31917]" dest="view: view [28136,28140]"/>
  <match src=".: . [79151,79152]" dest=".: . [76909,76910]"/>
  <match src="event_paramater [29003,29021]" dest="event_paramater [25146,25164]"/>
  <match src="visibility [54945,54953]" dest="visibility [51974,51982]"/>
  <match src="override: override [93096,93104]" dest="override: override [91259,91267]"/>
  <match src="primitive_type [111741,111745]" dest="primitive_type [23723,23727]"/>
  <match src="): ) [98680,98681]" dest="): ) [97002,97003]"/>
  <match src="primitive_type [85731,85737]" dest="primitive_type [83686,83692]"/>
  <match src="type_name [7217,7222]" dest="type_name [8066,8071]"/>
  <match src="(: ( [103947,103948]" dest="(: ( [102430,102431]"/>
  <match src="(: ( [62749,62750]" dest="(: ( [60001,60002]"/>
  <match src="--: -- [43492,43494]" dest="--: -- [40236,40238]"/>
  <match src="yul_function_call [54686,54702]" dest="yul_function_call [51701,51717]"/>
  <match src="primitive_type [84278,84285]" dest="primitive_type [82180,82187]"/>
  <match src="type_name [32525,32532]" dest="type_name [28767,28774]"/>
  <match src="sload: sload [57046,57051]" dest="sload: sload [54135,54140]"/>
  <match src="primitive_type [12293,12298]" dest="primitive_type [13265,13270]"/>
  <match src="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/components/native/NativeTokensRegistry.sol [41139,41237]" dest="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/components/native/NativeTokensRegistry.sol [37626,37724]"/>
  <match src=",: , [29438,29439]" dest=",: , [25591,25592]"/>
  <match src="variable_declaration_statement [80035,80079]" dest="variable_declaration_statement [77813,77857]"/>
  <match src="if: if [97649,97651]" dest="if: if [95939,95941]"/>
  <match src="): ) [14709,14710]" dest="): ) [15617,15618]"/>
  <match src="return_statement [72971,72997]" dest="return_statement [70530,70556]"/>
  <match src="identifier: _messageId [20926,20936]" dest="identifier: _messageId [20480,20490]"/>
  <match src="boolean_literal [79210,79215]" dest="boolean_literal [76969,76974]"/>
  <match src="uint256: uint256 [23053,23060]" dest="uint256: uint256 [39131,39138]"/>
  <match src="identifier: require [91885,91892]" dest="identifier: require [90013,90020]"/>
  <match src="call_argument [107327,107333]" dest="call_argument [105180,105186]"/>
  <match src="call_expression [98692,98721]" dest="call_expression [97016,97045]"/>
  <match src="&gt;: &gt; [81783,81784]" dest="&gt;: &gt; [79610,79611]"/>
  <match src="parameter [33542,33567]" dest="parameter [29812,29837]"/>
  <match src="return_type_definition [91857,91874]" dest="return_type_definition [89984,90001]"/>
  <match src="(: ( [34405,34406]" dest="(: ( [30696,30697]"/>
  <match src="identifier: _setTokenURI [103935,103947]" dest="identifier: _setTokenURI [102418,102430]"/>
  <match src="call_argument [117319,117326]" dest="call_argument [115842,115849]"/>
  <match src="pragma_directive [50285,50307]" dest="pragma_directive [47213,47235]"/>
  <match src="identifier: _tokenOwnersIndexes [55612,55631]" dest="identifier: _tokenOwnersIndexes [52662,52681]"/>
  <match src="type_name [113904,113911]" dest="type_name [103467,103474]"/>
  <match src="type_name [114899,114906]" dest="type_name [113520,113527]"/>
  <match src="{: { [70592,70593]" dest="{: { [68088,68089]"/>
  <match src="type_name [20300,20307]" dest="type_name [19853,19860]"/>
  <match src="identifier: b [66258,66259]" dest="identifier: b [63625,63626]"/>
  <match src="return: return [84672,84678]" dest="return: return [82587,82593]"/>
  <match src="identifier: owner [91492,91497]" dest="identifier: owner [89607,89612]"/>
  <match src="parameter [32310,32324]" dest="parameter [28545,28559]"/>
  <match src="): ) [54943,54944]" dest="): ) [51972,51973]"/>
  <match src="identifier: abi [3914,3917]" dest="identifier: abi [4027,4030]"/>
  <match src="uint256: uint256 [55437,55444]" dest="uint256: uint256 [52483,52490]"/>
  <match src="number_literal: 0x0 [8765,8768]" dest="number_literal: 0x0 [9657,9660]"/>
  <match src="(: ( [11872,11873]" dest="(: ( [12834,12835]"/>
  <match src="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [75817,75887]" dest="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [73475,73547]"/>
  <match src="yul_function_call [57046,57119]" dest="yul_function_call [54135,54208]"/>
  <match src=",: , [82370,82371]" dest=",: , [80217,80218]"/>
  <match src="type_name [100062,100069]" dest="type_name [98422,98429]"/>
  <match src="(: ( [72912,72913]" dest="(: ( [70470,70471]"/>
  <match src="identifier: _tokenApprovals [91976,91991]" dest="identifier: _tokenApprovals [90106,90121]"/>
  <match src="pure: pure [66829,66833]" dest="pure: pure [64213,64217]"/>
  <match src="(: ( [4532,4533]" dest="(: ( [4667,4668]"/>
  <match src="): ) [10076,10077]" dest="): ) [10992,10993]"/>
  <match src="return_type_definition [49844,49861]" dest="return_type_definition [46756,46773]"/>
  <match src="): ) [88897,88898]" dest="): ) [86931,86932]"/>
  <match src=",: , [108598,108599]" dest=",: , [106443,106444]"/>
  <match src="number_literal: 0 [81111,81112]" dest="number_literal: 0 [78917,78918]"/>
  <match src="(: ( [55721,55722]" dest="(: ( [52774,52775]"/>
  <match src="type_name [47716,47723]" dest="type_name [44576,44583]"/>
  <match src="binary_expression [72287,72304]" dest="binary_expression [69821,69838]"/>
  <match src="): ) [91873,91874]" dest="): ) [90000,90001]"/>
  <match src="add: add [13379,13382]" dest="add: add [14371,14374]"/>
  <match src=".: . [90225,90226]" dest=".: . [88300,88301]"/>
  <match src="type_name [100211,100216]" dest="type_name [98577,98582]"/>
  <match src="): ) [68185,68186]" dest="): ) [65605,65606]"/>
  <match src="bytes: bytes [430,435]" dest="bytes: bytes [442,447]"/>
  <match src="binary_expression [43455,43464]" dest="binary_expression [40198,40207]"/>
  <match src="primitive_type [105205,105212]" dest="primitive_type [119830,119837]"/>
  <match src="primitive_type [21839,21846]" dest="primitive_type [37970,37977]"/>
  <match src="type_name [36251,36258]" dest="type_name [32593,32600]"/>
  <match src="function: function [103831,103839]" dest="function: function [102313,102321]"/>
  <match src="&quot;: &quot; [23992,23993]" dest="&quot;: &quot; [38862,38863]"/>
  <match src="address: address [98403,98410]" dest="address: address [96717,96724]"/>
  <match src="call_expression [109190,109239]" dest="call_expression [107125,107174]"/>
  <match src="(: ( [84277,84278]" dest="(: ( [82179,82180]"/>
  <match src="call_expression [16881,16925]" dest="call_expression [17076,17120]"/>
  <match src="): ) [97870,97871]" dest="): ) [96168,96169]"/>
  <match src="identifier: returnData [5188,5198]" dest="identifier: returnData [5359,5369]"/>
  <match src="function: function [34338,34346]" dest="function: function [30629,30637]"/>
  <match src="(: ( [112891,112892]" dest="(: ( [112356,112357]"/>
  <match src="true [79113,79117]" dest="true [76869,76873]"/>
  <match src="return: return [75762,75768]" dest="return: return [73417,73423]"/>
  <match src="visibility [33239,33247]" dest="visibility [29496,29504]"/>
  <match src="(: ( [21186,21187]" dest="(: ( [20748,20749]"/>
  <match src="identifier: value [43218,43223]" dest="identifier: value [39952,39957]"/>
  <match src="solidity_version: 0.7.0 [63734,63739]" dest="solidity_version: 0.7.0 [61018,61023]"/>
  <match src="[: [ [78775,78776]" dest="[: [ [76524,76525]"/>
  <match src="identifier: _messageId [19463,19473]" dest="identifier: _messageId [19202,19212]"/>
  <match src="[: [ [72796,72797]" dest="[: [ [70348,70349]"/>
  <match src="bytes32: bytes32 [78024,78031]" dest="bytes32: bytes32 [75752,75759]"/>
  <match src="identifier: IERC721 [33383,33390]" dest="identifier: IERC721 [29648,29655]"/>
  <match src="return: return [2513,2519]" dest="return: return [2592,2598]"/>
  <match src="parameter [92456,92469]" dest="parameter [90602,90615]"/>
  <match src="): ) [31705,31706]" dest="): ) [27919,27920]"/>
  <match src="(: ( [92823,92824]" dest="(: ( [90978,90979]"/>
  <match src="[: [ [97056,97057]" dest="[: [ [95320,95321]"/>
  <match src="type_name [28631,28637]" dest="type_name [24758,24764]"/>
  <match src="identifier: name [112425,112429]" dest="identifier: name [112022,112026]"/>
  <match src="call_argument [117353,117363]" dest="call_argument [115877,115887]"/>
  <match src="): ) [78310,78311]" dest="): ) [76047,76048]"/>
  <match src="primitive_type [3863,3870]" dest="primitive_type [3975,3982]"/>
  <match src="{: { [75975,75976]" dest="{: { [73636,73637]"/>
  <match src="]: ] [71316,71317]" dest="]: ] [68832,68833]"/>
  <match src="parameter [26192,26211]" dest="parameter [22058,22071]"/>
  <match src="boolean_literal [21236,21240]" dest="boolean_literal [20798,20802]"/>
  <match src="identifier: encodePacked [3224,3236]" dest="identifier: encodePacked [3320,3332]"/>
  <match src="identifier: require [82500,82507]" dest="identifier: require [80349,80356]"/>
  <match src="identifier: UintToAddressMap [86010,86026]" dest="identifier: UintToAddressMap [83971,83987]"/>
  <match src="identifier: safeTransferFrom [93021,93037]" dest="identifier: safeTransferFrom [91184,91200]"/>
  <match src="identifier: data [11834,11838]" dest="identifier: data [12796,12800]"/>
  <match src="uint256: uint256 [61905,61912]" dest="uint256: uint256 [59127,59134]"/>
  <match src="type_cast_expression [51034,51044]" dest="type_cast_expression [47982,47992]"/>
  <match src="call_expression [93463,93502]" dest="call_expression [91635,91674]"/>
  <match src="type_name [72023,72030]" dest="type_name [69552,69559]"/>
  <match src="parameter [7133,7140]" dest="parameter [7978,7985]"/>
  <match src="address: address [42050,42057]" dest="address: address [109911,109918]"/>
  <match src="): ) [42616,42617]" dest="): ) [39235,39236]"/>
  <match src="identifier: _inner [74651,74657]" dest="identifier: _inner [72265,72271]"/>
  <match src="return: return [67654,67660]" dest="return: return [65059,65065]"/>
  <match src="solidity_pragma_token [60206,60221]" dest="solidity_pragma_token [57381,57396]"/>
  <match src="}: } [44292,44293]" dest="}: } [41069,41070]"/>
  <match src="identifier: lock [38470,38474]" dest="identifier: lock [34864,34868]"/>
  <match src="(: ( [93252,93253]" dest="(: ( [91422,91423]"/>
  <match src="primitive_type [76632,76639]" dest="primitive_type [74314,74321]"/>
  <match src="return_type_definition [6800,6817]" dest="return_type_definition [7635,7652]"/>
  <match src="visibility [102875,102883]" dest="visibility [101328,101336]"/>
  <match src="function: function [59895,59903]" dest="function: function [57061,57069]"/>
  <match src="}: } [63661,63662]" dest="}: } [60940,60941]"/>
  <match src="call_expression [88468,88508]" dest="call_expression [86491,86531]"/>
  <match src="call_argument [96312,96319]" dest="call_argument [94554,94561]"/>
  <match src="return_type_definition [5663,5680]" dest="return_type_definition [5846,5863]"/>
  <match src="&quot;: &quot; [45220,45221]" dest="&quot;: &quot; [42025,42026]"/>
  <match src="function_definition [37414,37533]" dest="function_definition [33788,33909]"/>
  <match src="identifier: Map [78058,78061]" dest="identifier: Map [75789,75792]"/>
  <match src="address: address [25548,25555]" dest="address: address [22591,22598]"/>
  <match src="identifier: index [91262,91267]" dest="identifier: index [89368,89373]"/>
  <match src="visibility [42907,42915]" dest="visibility [39634,39642]"/>
  <match src="primitive_type [12405,12412]" dest="primitive_type [13378,13385]"/>
  <match src="call_argument [83082,83092]" dest="call_argument [80949,80959]"/>
  <match src="yul_hex_number: 0x40 [53825,53829]" dest="yul_hex_number: 0x40 [50824,50828]"/>
  <match src="expression_statement [20495,20559]" dest="expression_statement [20052,20104]"/>
  <match src="}: } [36512,36513]" dest="}: } [32861,32862]"/>
  <match src="member_expression [81090,81102]" dest="member_expression [78896,78908]"/>
  <match src="{: { [1176,1177]" dest="{: { [1214,1215]"/>
  <match src="identifier: IERC721Receiver [61335,61350]" dest="identifier: IERC721Receiver [58547,58562]"/>
  <match src="call_argument [89978,89987]" dest="call_argument [88049,88058]"/>
  <match src="event_paramater [47289,47316]" dest="event_paramater [44142,44169]"/>
  <match src="call_argument [111779,111785]" dest="call_argument [110189,110195]"/>
  <match src="array_access [63613,63646]" dest="array_access [60890,60923]"/>
  <match src="type_name [95303,95307]" dest="type_name [93520,93524]"/>
  <match src="pragma: pragma [47069,47075]" dest="pragma: pragma [43914,43920]"/>
  <match src="contract: contract [85267,85275]" dest="contract: contract [83213,83221]"/>
  <match src="identifier: get [89065,89068]" dest="identifier: get [87106,87109]"/>
  <match src="primitive_type [97861,97868]" dest="primitive_type [96159,96166]"/>
  <match src="identifier: UPGRADEABILITY_OWNER [5000,5020]" dest="identifier: UPGRADEABILITY_OWNER [5168,5188]"/>
  <match src="primitive_type [39417,39424]" dest="primitive_type [35837,35844]"/>
  <match src="function: function [14546,14554]" dest="function: function [15414,15422]"/>
  <match src="): ) [84414,84415]" dest="): ) [82318,82319]"/>
  <match src="identifier: encodePacked [114151,114163]" dest="identifier: encodePacked [22198,22210]"/>
  <match src="returns: returns [16011,16018]" dest="returns: returns [16486,16493]"/>
  <match src="override: override [89375,89383]" dest="override: override [87429,87437]"/>
  <match src="identifier: length [80068,80074]" dest="identifier: length [77846,77852]"/>
  <match src="return_statement [82171,82227]" dest="return_statement [80012,80068]"/>
  <match src="storage: storage [84227,84234]" dest="storage: storage [82129,82136]"/>
  <match src="{: { [24719,24720]" dest="{: { [23161,23162]"/>
  <match src="{: { [96292,96293]" dest="{: { [94533,94534]"/>
  <match src="call_argument [17588,17621]" dest="call_argument [118725,118751]"/>
  <match src="primitive_type [82454,82461]" dest="primitive_type [80302,80309]"/>
  <match src="): ) [107543,107544]" dest="): ) [105401,105402]"/>
  <match src="call_expression [111761,111786]" dest="call_expression [110171,110196]"/>
  <match src="library_declaration [64306,68884]" dest="library_declaration [61605,66324]"/>
  <match src="type_name [62955,62961]" dest="type_name [60215,60221]"/>
  <match src="return: return [49872,49878]" dest="return: return [46785,46791]"/>
  <match src=",: , [106948,106949]" dest=",: , [104791,104792]"/>
  <match src="return_statement [43569,43591]" dest="return_statement [40316,40338]"/>
  <match src="primitive_type [68133,68140]" dest="primitive_type [65553,65560]"/>
  <match src="): ) [35076,35077]" dest="): ) [31384,31385]"/>
  <match src="internal: internal [68782,68790]" dest="internal: internal [66218,66226]"/>
  <match src="parameter [29599,29614]" dest="parameter [25757,25772]"/>
  <match src="external: external [1213,1221]" dest="external: external [1252,1260]"/>
  <match src="state_mutability [6624,6628]" dest="state_mutability [7455,7459]"/>
  <match src="address: address [6985,6992]" dest="address: address [7824,7831]"/>
  <match src="string_literal [45125,45137]" dest="string_literal [41929,41941]"/>
  <match src="(: ( [55831,55832]" dest="(: ( [52887,52888]"/>
  <match src="identifier: maxGasPerTx [18555,18566]" dest="identifier: maxGasPerTx [18068,18079]"/>
  <match src="primitive_type [71741,71748]" dest="primitive_type [69265,69272]"/>
  <match src="identifier: map [79429,79432]" dest="identifier: map [77197,77200]"/>
  <match src="&quot;: &quot; [10987,10988]" dest="&quot;: &quot; [11925,11926]"/>
  <match src="call_argument [106208,106214]" dest="call_argument [104036,104042]"/>
  <match src="comment: /**      * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.      */ [88160,88268]" dest="comment: /**      * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.      */ [86175,86285]"/>
  <match src="(: ( [18259,18260]" dest="(: ( [17764,17765]"/>
  <match src="boolean_literal [108532,108537]" dest="boolean_literal [106376,106381]"/>
  <match src=":=: := [53110,53112]" dest=":=: := [50095,50097]"/>
  <match src="=&gt;: =&gt; [62526,62528]" dest="=&gt;: =&gt; [59773,59775]"/>
  <match src="comment: /**  * @title Bytes  * @dev Helper methods to transform bytes to other solidity types.  */ [33646,33736]" dest="comment: /**  * @title Bytes  * @dev Helper methods to transform bytes to other solidity types.  */ [29923,30016]"/>
  <match src="): ) [97789,97790]" dest="): ) [96083,96084]"/>
  <match src="function_body [105429,105858]" dest="function_body [119991,120316]"/>
  <match src="identifier: index [43398,43403]" dest="identifier: index [40139,40144]"/>
  <match src="primitive_type [84307,84314]" dest="primitive_type [82210,82217]"/>
  <match src="external: external [6615,6623]" dest="external: external [7446,7454]"/>
  <match src="member_expression [89052,89068]" dest="member_expression [87093,87109]"/>
  <match src="address: address [109621,109628]" dest="address: address [107565,107572]"/>
  <match src="(: ( [5200,5201]" dest="(: ( [5371,5372]"/>
  <match src="identifier: _tokenURIs [97714,97724]" dest="identifier: _tokenURIs [96005,96015]"/>
  <match src="function_definition [11218,11412]" dest="function_definition [12165,12361]"/>
  <match src="type_name [28981,28988]" dest="type_name [25124,25131]"/>
  <match src="external: external [14944,14952]" dest="external: external [15859,15867]"/>
  <match src="parameter [66843,66850]" dest="parameter [64227,64234]"/>
  <match src="expression_statement [103192,103214]" dest="expression_statement [101655,101677]"/>
  <match src="comment: /**      * @dev Returns the value associated with `key`.  O(1).      *      * Requirements:      *      * - `key` must be in the map.      */ [81940,82081]" dest="comment: /**      * @dev Returns the value associated with `key`.  O(1).      *      * Requirements:      *      * - `key` must be in the map.      */ [79773,79920]"/>
  <match src="+: + [72301,72302]" dest="+: + [69835,69836]"/>
  <match src="(: ( [20386,20387]" dest="(: ( [19940,19941]"/>
  <match src="type_name [8510,8517]" dest="type_name [9399,9406]"/>
  <match src="function: function [32265,32273]" dest="function: function [28500,28508]"/>
  <match src="uint256: uint256 [20408,20415]" dest="uint256: uint256 [19963,19970]"/>
  <match src="comment: /**  * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension  * @dev See https://eips.ethereum.org/EIPS/eip-721  */ [60225,60361]" dest="comment: /**  * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension  * @dev See https://eips.ethereum.org/EIPS/eip-721  */ [57403,57542]"/>
  <match src="member_expression [98651,98672]" dest="member_expression [96973,96994]"/>
  <match src="boolean_literal [79113,79117]" dest="boolean_literal [76869,76873]"/>
  <match src="uint256: uint256 [90687,90694]" dest="uint256: uint256 [88777,88784]"/>
  <match src="==: == [57463,57465]" dest="==: == [54562,54564]"/>
  <match src="call_argument [111061,111078]" dest="call_argument [120847,120864]"/>
  <match src="): ) [86255,86256]" dest="): ) [84222,84223]"/>
  <match src="call_expression [116441,116477]" dest="call_expression [115070,115106]"/>
  <match src="solidity_version:  0.7.5 [69,75]" dest="solidity_version:  0.7.5 [71,77]"/>
  <match src="): ) [117373,117374]" dest="): ) [115897,115898]"/>
  <match src="returns: returns [90910,90917]" dest="returns: returns [89007,89014]"/>
  <match src="==: == [107153,107155]" dest="==: == [105002,105004]"/>
  <match src="(: ( [60760,60761]" dest="(: ( [57953,57954]"/>
  <match src="type_name [38092,38099]" dest="type_name [34479,34486]"/>
  <match src="call_argument [94572,94577]" dest="call_argument [92767,92772]"/>
  <match src="solidity: solidity [6297,6305]" dest="solidity: solidity [6504,6512]"/>
  <match src="call_argument [10007,10014]" dest="call_argument [10923,10930]"/>
  <match src="returns: returns [88749,88756]" dest="returns: returns [86780,86787]"/>
  <match src="type_name [75413,75420]" dest="type_name [73057,73064]"/>
  <match src="[: [ [79160,79161]" dest="[: [ [76918,76919]"/>
  <match src="(: ( [969,970]" dest="(: ( [998,999]"/>
  <match src="): ) [26269,26270]" dest="): ) [22130,22131]"/>
  <match src=",: , [100737,100738]" dest=",: , [99116,99117]"/>
  <match src="return: return [66308,66314]" dest="return: return [63677,63683]"/>
  <match src="call_expression [107532,107544]" dest="call_expression [105390,105402]"/>
  <match src="return_type_definition [44267,44290]" dest="return_type_definition [41043,41066]"/>
  <match src="(: ( [91553,91554]" dest="(: ( [89670,89671]"/>
  <match src="): ) [57827,57828]" dest="): ) [54932,54933]"/>
  <match src=",: , [45015,45016]" dest=",: , [41816,41817]"/>
  <match src=",: , [76680,76681]" dest=",: , [74363,74364]"/>
  <match src="type_name [21326,21333]" dest="type_name [20864,20871]"/>
  <match src="type_name [84240,84247]" dest="type_name [82142,82149]"/>
  <match src="primitive_type [75486,75493]" dest="primitive_type [73131,73138]"/>
  <match src="[: [ [98619,98620]" dest="[: [ [96940,96941]"/>
  <match src="): ) [970,971]" dest="): ) [999,1000]"/>
  <match src="identifier: this [112909,112913]" dest="identifier: this [112357,112361]"/>
  <match src="type_name [42050,42057]" dest="type_name [109911,109918]"/>
  <match src="(: ( [111908,111909]" dest="(: ( [111215,111216]"/>
  <match src="visibility [14571,14579]" dest="visibility [15439,15447]"/>
  <match src=".: . [81775,81776]" dest=".: . [79602,79603]"/>
  <match src="assignment_expression [3569,3657]" dest="assignment_expression [3674,3762]"/>
  <match src="variable_declaration [72023,72040]" dest="variable_declaration [69552,69569]"/>
  <match src="call_expression [68204,68241]" dest="call_expression [65625,65662]"/>
  <match src="address: address [32292,32299]" dest="address: address [28527,28534]"/>
  <match src="}: } [33579,33580]" dest="}: } [29850,29851]"/>
  <match src="struct: struct [82687,82693]" dest="struct: struct [80542,80548]"/>
  <match src="identifier: _setMediatorContractOnOtherSide [17165,17196]" dest="identifier: _setMediatorContractOnOtherSide [17368,17399]"/>
  <match src="member_expression [38531,38541]" dest="member_expression [34928,34938]"/>
  <match src="identifier: Ownable [21698,21705]" dest="identifier: Ownable [21251,21258]"/>
  <match src="number_literal: 0 [82520,82521]" dest="number_literal: 0 [80369,80370]"/>
  <match src="external: external [31904,31912]" dest="external: external [28127,28135]"/>
  <match src="assignment_expression [101871,101903]" dest="assignment_expression [100290,100322]"/>
  <match src=".: . [4704,4705]" dest=".: . [4845,4846]"/>
  <match src="using_directive [85467,85522]" dest="using_directive [83417,83472]"/>
  <match src="type_name [55714,55738]" dest="type_name [52767,52791]"/>
  <match src="type_cast_expression [83646,83658]" dest="type_cast_expression [81529,81541]"/>
  <match src="(: ( [51474,51475]" dest="(: ( [48430,48431]"/>
  <match src="call_expression [48244,48309]" dest="call_expression [45114,45179]"/>
  <match src="function: function [54928,54936]" dest="function: function [51957,51965]"/>
  <match src="[: [ [72514,72515]" dest="[: [ [70054,70055]"/>
  <match src="call_expression [19562,19591]" dest="call_expression [19217,19246]"/>
  <match src="visibility [5942,5950]" dest="visibility [6133,6141]"/>
  <match src="call_argument [100735,100737]" dest="call_argument [99114,99116]"/>
  <match src="identifier: _messageId [21220,21230]" dest="identifier: _messageId [20782,20792]"/>
  <match src="identifier: impl [56999,57003]" dest="identifier: impl [54086,54090]"/>
  <match src="identifier: to [91718,91720]" dest="identifier: to [89839,89841]"/>
  <match src="primitive_type [36291,36298]" dest="primitive_type [32635,32642]"/>
  <match src="): ) [98980,98981]" dest="): ) [97316,97317]"/>
  <match src="bytes4: bytes4 [39810,39816]" dest="bytes4: bytes4 [36248,36254]"/>
  <match src="): ) [16923,16924]" dest="): ) [17118,17119]"/>
  <match src="expression_statement [109777,109834]" dest="expression_statement [107724,107781]"/>
  <match src="identifier: recipient [20358,20367]" dest="identifier: recipient [19912,19921]"/>
  <match src="override_specifier [88740,88748]" dest="override_specifier [86771,86779]"/>
  <match src="{: { [37476,37477]" dest="{: { [33850,33851]"/>
  <match src="identifier: _messageId [117353,117363]" dest="identifier: _messageId [115877,115887]"/>
  <match src="{: { [54652,54653]" dest="{: { [51666,51667]"/>
  <match src="identifier: isRegisteredAsNativeToken [106152,106177]" dest="identifier: isRegisteredAsNativeToken [103980,104005]"/>
  <match src="primitive_type [307,314]" dest="primitive_type [317,324]"/>
  <match src="(: ( [100275,100276]" dest="(: ( [98641,98642]"/>
  <match src="identifier: _from [36478,36483]" dest="identifier: _from [32826,32831]"/>
  <match src="function_body [34420,34499]" dest="function_body [30711,30794]"/>
  <match src="bool: bool [111741,111745]" dest="bool: bool [23723,23727]"/>
  <match src="type_name [81690,81697]" dest="type_name [79516,79523]"/>
  <match src="identifier: addressStorage [6207,6221]" dest="identifier: addressStorage [6408,6422]"/>
  <match src="external: external [109644,109652]" dest="external: external [107588,107596]"/>
  <match src="identifier: to [97110,97112]" dest="identifier: to [95376,95378]"/>
  <match src="expression_statement [105439,105465]" dest="expression_statement [120002,120028]"/>
  <match src=".: . [57490,57491]" dest=".: . [54589,54590]"/>
  <match src="identifier: set [72502,72505]" dest="identifier: set [70042,70045]"/>
  <match src="identifier: burn [112834,112838]" dest="identifier: burn [112302,112306]"/>
  <match src="): ) [25670,25671]" dest="): ) [22708,22709]"/>
  <match src="identifier: bridgedToken [107720,107732]" dest="identifier: bridgedToken [105544,105556]"/>
  <match src="identifier: _holderTokens [88869,88882]" dest="identifier: _holderTokens [86903,86916]"/>
  <match src="): ) [92487,92488]" dest="): ) [90633,90634]"/>
  <match src="address: address [33175,33182]" dest="address: address [29432,29439]"/>
  <match src="call_argument [96394,96446]" dest="call_argument [94637,94689]"/>
  <match src="indexed: indexed [40230,40237]" dest="indexed: indexed [36685,36692]"/>
  <match src="identifier: index [81698,81703]" dest="identifier: index [79524,79529]"/>
  <match src="internal: internal [39070,39078]" dest="internal: internal [35478,35486]"/>
  <match src="(: ( [111051,111052]" dest="(: ( [120836,120837]"/>
  <match src="]: ] [80594,80595]" dest="]: ] [78382,78383]"/>
  <match src="solidity: solidity [1121,1129]" dest="solidity: solidity [1157,1165]"/>
  <match src="(: ( [98316,98317]" dest="(: ( [96629,96630]"/>
  <match src="uint256: uint256 [75105,75112]" dest="uint256: uint256 [72733,72740]"/>
  <match src="call_argument [20611,20620]" dest="call_argument [20157,20166]"/>
  <match src="comment: /**      * @dev Updates message id where specified token was first seen and deploy on the other side was requested.      * @param _token address of token contract.      * @param _messageId message id of the send message.      */ [42213,42441]" dest="comment: /**      * @dev Internal function for marking native token as registered.      * @param _token address of the token contract.      * @param _state registration state.      */ [38894,39072]"/>
  <match src="identifier: tokenByIndex [61015,61027]" dest="identifier: tokenByIndex [58214,58226]"/>
  <match src="function_body [91875,92007]" dest="function_body [90002,90138]"/>
  <match src=",: , [78596,78597]" dest=",: , [76343,76344]"/>
  <match src="pragma: pragma [63717,63723]" dest="pragma: pragma [61001,61007]"/>
  <match src="identifier: data [12526,12530]" dest="identifier: data [13500,13504]"/>
  <match src=",: , [84882,84883]" dest=",: , [82803,82804]"/>
  <match src="address: address [39343,39350]" dest="address: address [35760,35767]"/>
  <match src="identifier: owner [29407,29412]" dest="identifier: owner [25560,25565]"/>
  <match src="parameter [8186,8201]" dest="parameter [9070,9085]"/>
  <match src="state_mutability [979,983]" dest="state_mutability [1008,1012]"/>
  <match src="expression_statement [91709,91731]" dest="expression_statement [89830,89852]"/>
  <match src="comment: /**  * @title ForeignNFTOmnibridge  * @dev Foreign side implementation for multi-token ERC721 mediator intended to work on top of AMB bridge.  * It is designed to be used as an implementation contract of EternalStorageProxy contract.  */ [118111,118348]" dest="comment: /**  * @title ForeignNFTOmnibridge  * @dev Foreign side implementation for multi-token ERC721 mediator intended to work on top of AMB bridge.  * It is designed to be used as an implementation contract of EternalStorageProxy contract.  */ [118934,119175]"/>
  <match src="comment: /**      * @dev Stores a valid AMB bridge contract address.      * @param _bridgeContract the address of the bridge contract.      */ [16671,16804]" dest="comment: /**      * @dev Stores a valid AMB bridge contract address.      * @param _bridgeContract the address of the bridge contract.      */ [16861,16997]"/>
  <match src=",: , [92929,92930]" dest=",: , [91086,91087]"/>
  <match src="parameter [100124,100128]" dest="parameter [98485,98489]"/>
  <match src="expression_statement [9774,9848]" dest="expression_statement [10686,10760]"/>
  <match src="call_argument [20437,20447]" dest="call_argument [19992,20002]"/>
  <match src="type_cast_expression [84679,84727]" dest="type_cast_expression [82594,82642]"/>
  <match src="primitive_type [66809,66816]" dest="primitive_type [64193,64200]"/>
  <match src="function: function [44218,44226]" dest="function: function [40994,41002]"/>
  <match src="variable_declaration_statement [64635,64653]" dest="variable_declaration_statement [61946,61964]"/>
  <match src="identifier: _setTokenAddressPair [107605,107625]" dest="identifier: _setTokenAddressPair [105464,105484]"/>
  <match src=",: , [53162,53163]" dest=",: , [50147,50148]"/>
  <match src="comment: // Delete the slot where the moved value was stored [72346,72397]" dest="comment: // Delete the slot where the moved value was stored [69882,69933]"/>
  <match src="{: { [12998,12999]" dest="{: { [13982,13983]"/>
  <match src="(: ( [44076,44077]" dest="(: ( [40847,40848]"/>
  <match src="expression_statement [17632,17682]" dest="expression_statement [118763,118806]"/>
  <match src="=: = [20314,20315]" dest="=: = [19867,19868]"/>
  <match src="): ) [118789,118790]" dest="): ) [117053,117054]"/>
  <match src="): ) [65929,65930]" dest="): ) [63287,63288]"/>
  <match src="type_name [29023,29030]" dest="type_name [25166,25173]"/>
  <match src="parameter [82385,82411]" dest="parameter [80232,80258]"/>
  <match src="primitive_type [116143,116150]" dest="primitive_type [114763,114770]"/>
  <match src="(: ( [25663,25664]" dest="(: ( [22701,22702]"/>
  <match src="(: ( [84376,84377]" dest="(: ( [82280,82281]"/>
  <match src="identifier: newOwner [5932,5940]" dest="identifier: newOwner [6123,6131]"/>
  <match src="identifier: key [84315,84318]" dest="identifier: key [82218,82221]"/>
  <match src="(: ( [116306,116307]" dest="(: ( [114932,114933]"/>
  <match src="binary_expression [88785,88804]" dest="binary_expression [86817,86836]"/>
  <match src="call_argument [65551,65563]" dest="call_argument [62893,62905]"/>
  <match src="visibility [109105,109113]" dest="visibility [106964,106972]"/>
  <match src="identifier: _messageId [2148,2158]" dest="identifier: _messageId [2218,2228]"/>
  <match src=",: , [72722,72723]" dest=",: , [70273,70274]"/>
  <match src="identifier: implementation [50631,50645]" dest="identifier: implementation [47570,47584]"/>
  <match src="call_expression [102215,102293]" dest="call_expression [100649,100727]"/>
  <match src="user_defined_type [18856,18872]" dest="user_defined_type [18489,18505]"/>
  <match src="binary_expression [8726,8749]" dest="binary_expression [9618,9641]"/>
  <match src="function_body [76186,76229]" dest="function_body [73854,73899]"/>
  <match src="identifier: keyIndex [79161,79169]" dest="identifier: keyIndex [76919,76927]"/>
  <match src="identifier: AddressSet [73568,73578]" dest="identifier: AddressSet [71147,71157]"/>
  <match src="primitive_type [60541,60548]" dest="primitive_type [57728,57735]"/>
  <match src="): ) [86254,86255]" dest="): ) [84221,84222]"/>
  <match src="comment: // EIP 1967 [56443,56454]" dest="comment: // EIP 1967 [53517,53528]"/>
  <match src="!=: != [97687,97689]" dest="!=: != [95977,95979]"/>
  <match src="call_argument [78888,78916]" dest="call_argument [76640,76668]"/>
  <match src="): ) [66169,66170]" dest="): ) [63531,63532]"/>
  <match src="external: external [103897,103905]" dest="external: external [102379,102387]"/>
  <match src="call_argument [74446,74460]" dest="call_argument [72053,72067]"/>
  <match src="solidity: solidity [118093,118101]" dest="solidity: solidity [117319,117327]"/>
  <match src="parameter [68133,68142]" dest="parameter [65553,65562]"/>
  <match src="): ) [19329,19330]" dest="): ) [18970,18971]"/>
  <match src="modifier: modifier [102176,102184]" dest="modifier: modifier [100609,100617]"/>
  <match src="identifier: to [96234,96236]" dest="identifier: to [94475,94477]"/>
  <match src="function: function [10825,10833]" dest="function: function [11762,11770]"/>
  <match src="call_argument [92824,92836]" dest="call_argument [90979,90991]"/>
  <match src="call_argument [84687,84726]" dest="call_argument [82602,82641]"/>
  <match src="(: ( [93037,93038]" dest="(: ( [91200,91201]"/>
  <match src=",: , [18969,18970]" dest=",: , [18603,18604]"/>
  <match src="pragma_directive [1724,1746]" dest="pragma_directive [1781,1803]"/>
  <match src="identifier: abi [2895,2898]" dest="identifier: abi [2983,2986]"/>
  <match src="identifier: sig [36533,36536]" dest="identifier: sig [32883,32886]"/>
  <match src="constructor_definition [88273,88635]" dest="constructor_definition [86291,86661]"/>
  <match src="visibility [101423,101431]" dest="visibility [99820,99828]"/>
  <match src="[: [ [70814,70815]" dest="[: [ [68315,68316]"/>
  <match src="): ) [54796,54797]" dest="): ) [51814,51815]"/>
  <match src="identifier: encodeWithSelector [45644,45662]" dest="identifier: encodeWithSelector [42459,42477]"/>
  <match src="(: ( [110623,110624]" dest="(: ( [109116,109117]"/>
  <match src="): ) [56408,56409]" dest="): ) [53480,53481]"/>
  <match src="identifier: recipient [9954,9963]" dest="identifier: recipient [10869,10878]"/>
  <match src="identifier: result [54622,54628]" dest="identifier: result [51635,51641]"/>
  <match src="identifier: b [68832,68833]" dest="identifier: b [66269,66270]"/>
  <match src="string_literal [21204,21218]" dest="string_literal [20766,20780]"/>
  <match src="visibility [89207,89213]" dest="visibility [87254,87260]"/>
  <match src="return_type_definition [106120,106134]" dest="return_type_definition [103947,103961]"/>
  <match src="call_expression [74416,74462]" dest="call_expression [72023,72069]"/>
  <match src="(: ( [40808,40809]" dest="(: ( [37283,37284]"/>
  <match src="identifier: addTotalExecutedPerDay [115064,115086]" dest="identifier: require [113643,113650]"/>
  <match src="(: ( [57496,57497]" dest="(: ( [54595,54596]"/>
  <match src="solidity_version_comparison_operator [42720,42722]" dest="solidity_version_comparison_operator [39438,39440]"/>
  <match src="uint256: uint256 [66214,66221]" dest="uint256: uint256 [63580,63587]"/>
  <match src="contract_body [28253,28682]" dest="contract_body [24371,24810]"/>
  <match src="identifier: digits [43373,43379]" dest="identifier: digits [40113,40119]"/>
  <match src="primitive_type [55832,55839]" dest="primitive_type [52888,52895]"/>
  <match src="(: ( [110649,110650]" dest="(: ( [109142,109143]"/>
  <match src="return_statement [95016,95054]" dest="return_statement [93223,93261]"/>
  <match src="identifier: toDeleteIndex [72169,72182]" dest="identifier: toDeleteIndex [69701,69714]"/>
  <match src="identifier: onERC721Received [100309,100325]" dest="identifier: onERC721Received [98676,98692]"/>
  <match src="primitive_type [105172,105179]" dest="primitive_type [119796,119803]"/>
  <match src="call_argument [90218,90236]" dest="call_argument [88293,88311]"/>
  <match src="identifier: Approval [100708,100716]" dest="identifier: Approval [99087,99095]"/>
  <match src="function: function [61847,61855]" dest="function: function [59069,59077]"/>
  <match src="type_name [3863,3870]" dest="type_name [3975,3982]"/>
  <match src="bytes32: bytes32 [78002,78009]" dest="bytes32: bytes32 [75729,75736]"/>
  <match src="identifier: keccak256 [48705,48714]" dest="identifier: keccak256 [45584,45593]"/>
  <match src="identifier: Ownable [44537,44544]" dest="identifier: Ownable [41327,41334]"/>
  <match src="parameter [49853,49860]" dest="parameter [46765,46772]"/>
  <match src=",: , [92680,92681]" dest=",: , [90833,90834]"/>
  <match src="=: = [59159,59160]" dest="=: = [56301,56302]"/>
  <match src="constant: constant [5405,5413]" dest="constant: constant [5582,5590]"/>
  <match src="primitive_type [32310,32314]" dest="primitive_type [28545,28549]"/>
  <match src="(: ( [3236,3237]" dest="(: ( [3332,3333]"/>
  <match src="(: ( [45587,45588]" dest="(: ( [42402,42403]"/>
  <match src="block_statement [107295,107392]" dest="block_statement [105147,105247]"/>
  <match src="address: address [1562,1569]" dest="address: address [1612,1619]"/>
  <match src="(: ( [57474,57475]" dest="(: ( [54573,54574]"/>
  <match src="{: { [63527,63528]" dest="{: { [60802,60803]"/>
  <match src="array_access [82473,82490]" dest="array_access [80321,80338]"/>
  <match src="identifier: messageCallStatus [6662,6679]" dest="identifier: messageCallStatus [7495,7512]"/>
  <match src="(: ( [46313,46314]" dest="(: ( [43140,43141]"/>
  <match src="): ) [84388,84389]" dest="): ) [82292,82293]"/>
  <match src="expression_statement [107772,107820]" dest="expression_statement [105597,105645]"/>
  <match src="): ) [102656,102657]" dest="): ) [101101,101102]"/>
  <match src="): ) [100732,100733]" dest="): ) [99111,99112]"/>
  <match src="(: ( [61027,61028]" dest="(: ( [58226,58227]"/>
  <match src=",: , [75711,75712]" dest=",: , [73365,73366]"/>
  <match src=".: . [45628,45629]" dest=".: . [42443,42444]"/>
  <match src="return_statement [83070,83133]" dest="return_statement [80937,81000]"/>
  <match src="parameter [45523,45537]" dest="parameter [42337,42351]"/>
  <match src="}: } [102073,102074]" dest="}: } [100501,100502]"/>
  <match src="identifier: token [40150,40155]" dest="identifier: token [36602,36607]"/>
  <match src="primitive_type [23449,23456]" dest="primitive_type [38326,38333]"/>
  <match src="(: ( [73901,73902]" dest="(: ( [71491,71492]"/>
  <match src="identifier: to [91486,91488]" dest="identifier: to [89601,89603]"/>
  <match src="override: override [89219,89227]" dest="override: override [87266,87274]"/>
  <match src="primitive_type [78630,78634]" dest="primitive_type [76377,76381]"/>
  <match src="internal: internal [326,334]" dest="internal: internal [336,344]"/>
  <match src="type_name [4917,4921]" dest="type_name [5066,5070]"/>
  <match src="parameter [12327,12353]" dest="parameter [13299,13325]"/>
  <match src="identifier: _messageId [19726,19736]" dest="identifier: _messageId [19335,19345]"/>
  <match src=",: , [7086,7087]" dest=",: , [7929,7930]"/>
  <match src="): ) [50172,50173]" dest="): ) [47093,47094]"/>
  <match src="): ) [48765,48766]" dest="): ) [45644,45645]"/>
  <match src="address: address [86239,86246]" dest="address: address [84206,84213]"/>
  <match src="&quot;: &quot; [64706,64707]" dest="&quot;: &quot; [62018,62019]"/>
  <match src="state_mutability [90503,90507]" dest="state_mutability [88586,88590]"/>
  <match src="type_cast_expression [98403,98413]" dest="type_cast_expression [96717,96727]"/>
  <match src="identifier: encodeWithSelector [100257,100275]" dest="identifier: encodeWithSelector [98623,98641]"/>
  <match src="identifier: _receiver [110922,110931]" dest="identifier: _receiver [109382,109391]"/>
  <match src="): ) [97592,97593]" dest="): ) [95879,95880]"/>
  <match src="view: view [75955,75959]" dest="view: view [73616,73620]"/>
  <match src="call_expression [20495,20558]" dest="call_expression [20052,20103]"/>
  <match src="function: function [19278,19286]" dest="function: function [18919,18927]"/>
  <match src="call_expression [109725,109767]" dest="call_expression [107671,107713]"/>
  <match src="function_body [41038,41135]" dest="function_body [37520,37619]"/>
  <match src="(: ( [1499,1500]" dest="(: ( [1548,1549]"/>
  <match src="): ) [84253,84254]" dest="): ) [82155,82156]"/>
  <match src="): ) [115052,115053]" dest="): ) [115749,115750]"/>
  <match src="array_access [114118,114196]" dest="array_access [22172,22240]"/>
  <match src="comment: // If there is no base URI, return the token URI. [89738,89787]" dest="comment: // If there is no base URI, return the token URI. [87804,87853]"/>
  <match src="array_access [80807,80831]" dest="array_access [78601,78625]"/>
  <match src="if_statement [89968,90078]" dest="if_statement [88039,88151]"/>
  <match src="identifier: _token [22169,22175]" dest="identifier: _token [21724,21730]"/>
  <match src="number_literal: 0x0a6f646cd611241d8073675e00d1a1ff700fbf1b53fcf473de56d1e6e4b714ba [738,804]" dest="number_literal: 0x0a6f646cd611241d8073675e00d1a1ff700fbf1b53fcf473de56d1e6e4b714ba [761,827]"/>
  <match src="(: ( [76665,76666]" dest="(: ( [74348,74349]"/>
  <match src="identifier: length [112211,112217]" dest="identifier: length [111806,111812]"/>
  <match src="modifier_invocation [5951,5960]" dest="modifier_invocation [6142,6151]"/>
  <match src="call_expression [48715,48765]" dest="call_expression [45594,45644]"/>
  <match src="): ) [74657,74658]" dest="): ) [72271,72272]"/>
  <match src="(: ( [59804,59805]" dest="(: ( [56966,56967]"/>
  <match src="address: address [103541,103548]" dest="address: address [102013,102020]"/>
  <match src="uint256: uint256 [74446,74453]" dest="uint256: uint256 [72053,72060]"/>
  <match src="identifier: implementation [56944,56958]" dest="identifier: implementation [54031,54045]"/>
  <match src="address: address [33189,33196]" dest="address: address [29446,29453]"/>
  <match src="override: override [62987,62995]" dest="override: override [60247,60255]"/>
  <match src="parameter [108315,108329]" dest="parameter [106152,106166]"/>
  <match src="): ) [97017,97018]" dest="): ) [95279,95280]"/>
  <match src="identifier: value [78909,78914]" dest="identifier: value [76661,76666]"/>
  <match src="): ) [59853,59854]" dest="): ) [57015,57016]"/>
  <match src="inheritance_specifier [18874,18897]" dest="inheritance_specifier [18507,18530]"/>
  <match src="primitive_type [106925,106931]" dest="primitive_type [104768,104774]"/>
  <match src="identifier: _tokenId [106994,107002]" dest="identifier: _tokenId [104839,104847]"/>
  <match src="call_expression [102207,102294]" dest="call_expression [100641,100728]"/>
  <match src="assignment_expression [99092,99123]" dest="assignment_expression [97430,97461]"/>
  <match src="address: address [105205,105212]" dest="address: address [119830,119837]"/>
  <match src="memory: memory [118720,118726]" dest="memory: memory [116974,116980]"/>
  <match src=".: . [19631,19632]" dest=".: . [19307,19308]"/>
  <match src="): ) [85018,85019]" dest="): ) [82940,82941]"/>
  <match src="binary_expression [112199,112249]" dest="binary_expression [111794,111844]"/>
  <match src="call_argument [107799,107807]" dest="call_argument [105624,105632]"/>
  <match src="state_variable_declaration [62511,62564]" dest="state_variable_declaration [59758,59811]"/>
  <match src="identifier: onlyRelevantSender [4885,4903]" dest="identifier: onlyRelevantSender [5033,5051]"/>
  <match src="(: ( [71331,71332]" dest="(: ( [68849,68850]"/>
  <match src="(: ( [116133,116134]" dest="(: ( [114752,114753]"/>
  <match src="identifier: _contract [7198,7207]" dest="identifier: _contract [8046,8055]"/>
  <match src="member_expression [19424,19462]" dest="member_expression [19098,19126]"/>
  <match src="identifier: call [4972,4976]" dest="identifier: staticcall [5134,5144]"/>
  <match src="comment: // File: contracts/interfaces/IBurnableMintableERC721Token.sol [33252,33314]" dest="comment: // File: contracts/interfaces/IBurnableMintableERC721Token.sol [29512,29574]"/>
  <match src="type_name [24284,24288]" dest="type_name [23706,23710]"/>
  <match src="): ) [105462,105463]" dest="): ) [120025,120026]"/>
  <match src="identifier: _implementation [57517,57532]" dest="identifier: _implementation [54617,54632]"/>
  <match src="call_expression [16889,16924]" dest="call_expression [17084,17119]"/>
  <match src="parameter [16302,16309]" dest="parameter [16785,16792]"/>
  <match src="uint256: uint256 [94960,94967]" dest="uint256: uint256 [93166,93173]"/>
  <match src="variable_declaration [8510,8529]" dest="variable_declaration [9399,9418]"/>
  <match src="return: return [83070,83076]" dest="return: return [80937,80943]"/>
  <match src="address: address [5201,5208]" dest="address: address [5372,5379]"/>
  <match src=",: , [29189,29190]" dest=",: , [25337,25338]"/>
  <match src="override_specifier [56973,56981]" dest="override_specifier [54060,54068]"/>
  <match src="public: public [89207,89213]" dest="public: public [87254,87260]"/>
  <match src="call_expression [12727,12745]" dest="call_expression [13705,13723]"/>
  <match src="variable_declaration [107182,107200]" dest="variable_declaration [105032,105050]"/>
  <match src="call_expression [2535,2590]" dest="call_expression [2614,2669]"/>
  <match src="call_argument [94553,94557]" dest="call_argument [92748,92752]"/>
  <match src="function_definition [82965,83139]" dest="function_definition [80831,81007]"/>
  <match src="}: } [4740,4741]" dest="}: } [4883,4884]"/>
  <match src="call_argument [23176,23182]" dest="call_argument [110428,110434]"/>
  <match src="{: { [54746,54747]" dest="{: { [51763,51764]"/>
  <match src="(: ( [15342,15343]" dest="(: ( [16266,16267]"/>
  <match src="(: ( [78567,78568]" dest="(: ( [76314,76315]"/>
  <match src="): ) [115653,115654]" dest="): ) [114260,114261]"/>
  <match src="primitive_type [84974,84981]" dest="primitive_type [82896,82903]"/>
  <match src="uint256: uint256 [65888,65895]" dest="uint256: uint256 [63246,63253]"/>
  <match src="update_expression [43487,43494]" dest="update_expression [40231,40238]"/>
  <match src=",: , [64580,64581]" dest=",: , [61890,61891]"/>
  <match src="return: return [73504,73510]" dest="return: return [71078,71084]"/>
  <match src="address: address [101808,101815]" dest="address: address [100225,100232]"/>
  <match src="virtual: virtual [101432,101439]" dest="virtual: virtual [99829,99836]"/>
  <match src="call_argument [109212,109216]" dest="call_argument [107147,107151]"/>
  <match src="call_expression [117287,117327]" dest="call_expression [115810,115850]"/>
  <match src="call_argument [57565,57600]" dest="call_argument [54666,54701]"/>
  <match src="expression_statement [116290,116332]" dest="expression_statement [114916,114958]"/>
  <match src="identifier: _token [38646,38652]" dest="identifier: _token [35045,35051]"/>
  <match src="state_mutability [29585,29589]" dest="state_mutability [25743,25747]"/>
  <match src="(: ( [66842,66843]" dest="(: ( [64226,64227]"/>
  <match src="): ) [74461,74462]" dest="): ) [72068,72069]"/>
  <match src="*: * [66228,66229]" dest="*: * [63594,63595]"/>
  <match src="string: string [43576,43582]" dest="string: string [40323,40329]"/>
  <match src="identifier: _approve [100608,100616]" dest="identifier: _approve [98985,98993]"/>
  <match src="expression_statement [112191,112251]" dest="expression_statement [111786,111846]"/>
  <match src="identifier: UintSet [76133,76140]" dest="identifier: UintSet [73801,73808]"/>
  <match src="(: ( [90234,90235]" dest="(: ( [88309,88310]"/>
  <match src="internal: internal [382,390]" dest="internal: internal [393,401]"/>
  <match src="parameter [46741,46754]" dest="parameter [43577,43590]"/>
  <match src="parameter [81265,81272]" dest="parameter [79077,79084]"/>
  <match src="comment: // storage layout is copied from ERC721BridgeToken.sol [55301,55355]" dest="comment: // storage layout is copied from ERC721BridgeToken.sol [52345,52399]"/>
  <match src="emit_statement [98732,98765]" dest="emit_statement [97058,97091]"/>
  <match src="{: { [8673,8674]" dest="{: { [9564,9565]"/>
  <match src="uint256: uint256 [115557,115564]" dest="uint256: uint256 [114161,114168]"/>
  <match src="visibility [22177,22183]" dest="visibility [21732,21738]"/>
  <match src="type_name [117075,117082]" dest="type_name [115617,115624]"/>
  <match src="function_body [68814,68882]" dest="function_body [66250,66321]"/>
  <match src="call_argument [3951,3961]" dest="call_argument [4064,4074]"/>
  <match src="uint256: uint256 [11840,11847]" dest="uint256: uint256 [12802,12809]"/>
  <match src="function_definition [96207,96454]" dest="function_definition [94448,94698]"/>
  <match src="type_cast_expression [109822,109832]" dest="type_cast_expression [107769,107779]"/>
  <match src="bytes4: bytes4 [87714,87720]" dest="bytes4: bytes4 [85718,85724]"/>
  <match src="type_name [73846,73850]" dest="type_name [71435,71439]"/>
  <match src="solidity_version:  0.7.5 [18697,18703]" dest="solidity_version:  0.7.5 [18322,18328]"/>
  <match src="type_name [84320,84327]" dest="type_name [82223,82230]"/>
  <match src="primitive_type [42087,42094]" dest="primitive_type [18186,18193]"/>
  <match src=",: , [112982,112983]" dest=",: , [112399,112400]"/>
  <match src="number_literal: 10 [43319,43321]" dest="number_literal: 10 [40057,40059]"/>
  <match src="address: address [106083,106090]" dest="address: address [103910,103917]"/>
  <match src=",: , [38676,38677]" dest=",: , [35075,35076]"/>
  <match src="inheritance_specifier [40071,40088]" dest="inheritance_specifier [36521,36538]"/>
  <match src="(: ( [75391,75392]" dest="(: ( [73035,73036]"/>
  <match src="return: return [59865,59871]" dest="return: return [57028,57034]"/>
  <match src="function_body [40791,40824]" dest="function_body [37265,37300]"/>
  <match src="function: function [78554,78562]" dest="function: function [76301,76309]"/>
  <match src="type_name [534,540]" dest="type_name [548,554]"/>
  <match src="identifier: AddressSet [74331,74341]" dest="identifier: AddressSet [71937,71947]"/>
  <match src="primitive_type [76594,76601]" dest="primitive_type [74276,74283]"/>
  <match src="[: [ [80474,80475]" dest="[: [ [78260,78261]"/>
  <match src="type_name [46780,46785]" dest="type_name [43617,43622]"/>
  <match src="bytes: bytes [34362,34367]" dest="bytes: bytes [30653,30658]"/>
  <match src="(: ( [81762,81763]" dest="(: ( [79589,79590]"/>
  <match src="comment: /**      * @dev See {IERC721-safeTransferFrom}.      */ [92952,93007]" dest="comment: /**      * @dev See {IERC721-safeTransferFrom}.      */ [91112,91169]"/>
  <match src="primitive_type [21350,21357]" dest="primitive_type [20889,20896]"/>
  <match src="primitive_type [86432,86439]" dest="primitive_type [84408,84415]"/>
  <match src="(: ( [12849,12850]" dest="(: ( [13830,13831]"/>
  <match src="array_access [17632,17662]" dest="array_access [118763,118793]"/>
  <match src="call_expression [114281,114361]" dest="call_expression [112885,112970]"/>
  <match src="primitive_type [68743,68750]" dest="primitive_type [66179,66186]"/>
  <match src="call_expression [39238,39265]" dest="call_expression [35650,35677]"/>
  <match src="identifier: errorMessage [11392,11404]" dest="identifier: errorMessage [12340,12352]"/>
  <match src="type_name [6075,6082]" dest="type_name [6273,6280]"/>
  <match src="identifier: keyIndex [78752,78760]" dest="identifier: keyIndex [76501,76509]"/>
  <match src="^:  ^ [42720,42722]" dest="^:  ^ [39438,39440]"/>
  <match src="(: ( [62518,62519]" dest="(: ( [59765,59766]"/>
  <match src="uint256: uint256 [75033,75040]" dest="uint256: uint256 [72660,72667]"/>
  <match src=".: . [88889,88890]" dest=".: . [86923,86924]"/>
  <match src="private: private [81705,81712]" dest="private: private [79531,79538]"/>
  <match src="comment: /**      * @dev Throws if called through proxy by any account other than contract itself or an upgradeability owner.      */ [4747,4871]" dest="comment: /**      * @dev Throws if called through proxy by any account other than contract itself or an upgradeability owner.      */ [4892,5018]"/>
  <match src="(: ( [40698,40699]" dest="(: ( [37167,37168]"/>
  <match src=",: , [61903,61904]" dest=",: , [59125,59126]"/>
  <match src="parameter [74613,74620]" dest="parameter [72226,72233]"/>
  <match src=",: , [115217,115218]" dest=",: , [113810,113811]"/>
  <match src="visibility [92711,92717]" dest="visibility [90864,90870]"/>
  <match src="function: function [9693,9701]" dest="function: function [10604,10612]"/>
  <match src="{: { [24290,24291]" dest="{: { [23712,23713]"/>
  <match src="parameter [47673,47693]" dest="parameter [44533,44553]"/>
  <match src="}: } [37532,37533]" dest="}: } [33908,33909]"/>
  <match src="primitive_type [65465,65471]" dest="primitive_type [62806,62812]"/>
  <match src="type_name [16602,16609]" dest="type_name [118382,118389]"/>
  <match src="identifier: keccak256 [23945,23954]" dest="identifier: keccak256 [38819,38828]"/>
  <match src="type_name [55638,55665]" dest="type_name [52690,52717]"/>
  <match src="(: ( [107320,107321]" dest="(: ( [105173,105174]"/>
  <match src="interface_declaration [43829,44293]" dest="interface_declaration [40590,41070]"/>
  <match src="identifier: patch [39740,39745]" dest="identifier: patch [36175,36180]"/>
  <match src="string_literal [96873,96907]" dest="string_literal [95132,95166]"/>
  <match src="return_statement [24300,24400]" dest="return_statement [23916,23959]"/>
  <match src="address: address [38543,38550]" dest="address: address [34940,34947]"/>
  <match src="identifier: _inner [76674,76680]" dest="identifier: _inner [74357,74363]"/>
  <match src="primitive_type [16302,16309]" dest="primitive_type [16785,16792]"/>
  <match src="return_type_definition [1227,1244]" dest="return_type_definition [1266,1283]"/>
  <match src="call_argument [109204,109210]" dest="call_argument [107139,107145]"/>
  <match src="returns: returns [83809,83816]" dest="returns: returns [81698,81705]"/>
  <match src="view: view [6369,6373]" dest="view: view [7192,7196]"/>
  <match src="function_body [95006,95060]" dest="function_body [93212,93268]"/>
  <match src="primitive_type [91373,91380]" dest="primitive_type [89486,89493]"/>
  <match src="return: return [76196,76202]" dest="return: return [73865,73871]"/>
  <match src="identifier: _from [113359,113364]" dest="identifier: _from [110510,110515]"/>
  <match src="): ) [15360,15361]" dest="): ) [16284,16285]"/>
  <match src="call_expression [84990,85034]" dest="call_expression [82912,82956]"/>
  <match src="&quot;: &quot; [73457,73458]" dest="&quot;: &quot; [71030,71031]"/>
  <match src="identifier: bridgedToken [107634,107646]" dest="identifier: bridgedToken [105493,105505]"/>
  <match src="}: } [70352,70353]" dest="}: } [67840,67841]"/>
  <match src="): ) [96319,96320]" dest="): ) [94561,94562]"/>
  <match src="(: ( [3930,3931]" dest="(: ( [4043,4044]"/>
  <match src="): ) [45811,45812]" dest="): ) [42627,42628]"/>
  <match src="variable_declaration_statement [79578,79615]" dest="variable_declaration_statement [77348,77385]"/>
  <match src="}: } [99450,99451]" dest="}: } [97798,97799]"/>
  <match src="identifier: _token [112975,112981]" dest="identifier: _token [112926,112932]"/>
  <match src="identifier: _indexes [79601,79609]" dest="identifier: _indexes [77371,77379]"/>
  <match src="function: function [6056,6064]" dest="function: function [6254,6262]"/>
  <match src="identifier: _register [117028,117037]" dest="identifier: _useOracleLane [120672,120686]"/>
  <match src="): ) [31943,31944]" dest="): ) [28166,28167]"/>
  <match src="comment: // Mapping from token ID to approved address [86054,86098]" dest="comment: // Mapping from token ID to approved address [84017,84061]"/>
  <match src="]: ] [45147,45148]" dest="]: ] [41951,41952]"/>
  <match src="return_type_definition [7338,7355]" dest="return_type_definition [8191,8208]"/>
  <match src="): ) [116330,116331]" dest="): ) [114956,114957]"/>
  <match src="function_definition [60495,60550]" dest="function_definition [57682,57737]"/>
  <match src="]: ] [16360,16361]" dest="]: ] [16844,16845]"/>
  <match src="comment: // To implement this library for multiple types with as little code [77518,77585]" dest="comment: // To implement this library for multiple types with as little code [75235,75302]"/>
  <match src="number_literal: 0 [79641,79642]" dest="number_literal: 0 [77413,77414]"/>
  <match src="visibility [26550,26558]" dest="visibility [120688,120696]"/>
  <match src="identifier: functionCall [100240,100252]" dest="identifier: functionCall [98606,98618]"/>
  <match src="type_name [50104,50111]" dest="type_name [47024,47031]"/>
  <match src="bytes32: bytes32 [113904,113911]" dest="bytes32: bytes32 [103467,103474]"/>
  <match src="number_literal: 0 [57544,57545]" dest="number_literal: 0 [54644,54645]"/>
  <match src="&quot;: &quot; [58650,58651]" dest="&quot;: &quot; [55778,55779]"/>
  <match src="return_statement [12964,12982]" dest="return_statement [13947,13965]"/>
  <match src="identifier: value [9970,9975]" dest="identifier: value [10885,10890]"/>
  <match src="}: } [57134,57135]" dest="}: } [54225,54226]"/>
  <match src="call_argument [114336,114337]" dest="call_argument [112945,112946]"/>
  <match src="]: ] [91999,92000]" dest="]: ] [90129,90130]"/>
  <match src="call_argument [95484,95491]" dest="call_argument [93704,93711]"/>
  <match src="): ) [73409,73410]" dest="): ) [70981,70982]"/>
  <match src="): ) [46950,46951]" dest="): ) [43789,43790]"/>
  <match src="(: ( [6184,6185]" dest="(: ( [6384,6385]"/>
  <match src="primitive_type [89800,89805]" dest="primitive_type [87867,87872]"/>
  <match src="): ) [37081,37082]" dest="): ) [33446,33447]"/>
  <match src="identifier: _token [25622,25628]" dest="identifier: _token [22660,22666]"/>
  <match src="parameter [81727,81734]" dest="parameter [79553,79560]"/>
  <match src="): ) [38476,38477]" dest="): ) [34870,34871]"/>
  <match src="): ) [60829,60830]" dest="): ) [58022,58023]"/>
  <match src="parameter [106958,106976]" dest="parameter [104802,104820]"/>
  <match src="): ) [1575,1576]" dest="): ) [1625,1626]"/>
  <match src="expression_statement [79148,79190]" dest="expression_statement [76906,76948]"/>
  <match src="number_literal: 0 [68837,68838]" dest="number_literal: 0 [66274,66275]"/>
  <match src="{: { [58154,58155]" dest="{: { [55273,55274]"/>
  <match src="call_expression [26274,26299]" dest="call_expression [22135,22160]"/>
  <match src="return_type_definition [90723,90740]" dest="return_type_definition [88813,88830]"/>
  <match src="string [93151,93153]" dest="string [91315,91317]"/>
  <match src="=: = [79071,79072]" dest="=: = [76826,76827]"/>
  <match src="primitive_type [103460,103467]" dest="primitive_type [101931,101938]"/>
  <match src="identifier: name [89200,89204]" dest="identifier: name [87247,87251]"/>
  <match src="comment: /**  * @title FailedMessagesProcessor  * @dev Functionality for fixing failed bridging operations.  */ [18708,18810]" dest="comment: /**  * @title FailedMessagesProcessor  * @dev Functionality for fixing failed bridging operations.  */ [18337,18442]"/>
  <match src="}: } [2281,2282]" dest="}: } [2353,2354]"/>
  <match src="identifier: b [67556,67557]" dest="identifier: b [64958,64959]"/>
  <match src="parameter [75446,75450]" dest="parameter [73090,73094]"/>
  <match src="variable_declaration [12864,12887]" dest="variable_declaration [13845,13868]"/>
  <match src="returns: returns [84269,84276]" dest="returns: returns [82171,82178]"/>
  <match src="(: ( [32565,32566]" dest="(: ( [28807,28808]"/>
  <match src=".: . [72413,72414]" dest=".: . [69950,69951]"/>
  <match src="primitive_type [43390,43397]" dest="primitive_type [40131,40138]"/>
  <match src="yul_evm_builtin [54674,54680]" dest="yul_evm_builtin [51689,51695]"/>
  <match src="identifier: data [46793,46797]" dest="identifier: data [43630,43634]"/>
  <match src=",: , [112506,112507]" dest=",: , [112118,112119]"/>
  <match src="identifier: _inner [74430,74436]" dest="identifier: _inner [72037,72043]"/>
  <match src="override: override [103906,103914]" dest="override: override [102388,102396]"/>
  <match src="): ) [89538,89539]" dest="): ) [87599,87600]"/>
  <match src="identifier: _setOwner [6065,6074]" dest="identifier: _setOwner [6263,6272]"/>
  <match src="uint256: uint256 [84617,84624]" dest="uint256: uint256 [82531,82538]"/>
  <match src="binary_expression [43514,43523]" dest="binary_expression [40258,40267]"/>
  <match src="identifier: c [65582,65583]" dest="identifier: c [62925,62926]"/>
  <match src="): ) [111978,111979]" dest="): ) [110134,110135]"/>
  <match src="visibility [87721,87728]" dest="visibility [85725,85732]"/>
  <match src="returns: returns [65913,65920]" dest="returns: returns [63271,63278]"/>
  <match src="identifier: setInitialize [868,881]" dest="identifier: setInitialize [893,906]"/>
  <match src="identifier: addressStorage [17243,17257]" dest="identifier: addressStorage [17447,17461]"/>
  <match src="solidity_version:  0.7.5 [101511,101517]" dest="solidity_version:  0.7.5 [99913,99919]"/>
  <match src="): ) [93452,93453]" dest="): ) [91623,91624]"/>
  <match src="&quot;: &quot; [114092,114093]" dest="&quot;: &quot; [22778,22779]"/>
  <match src="primitive_type [75105,75112]" dest="primitive_type [72733,72740]"/>
  <match src="}: } [13433,13434]" dest="}: } [14426,14427]"/>
  <match src="call_expression [83398,83431]" dest="call_expression [81274,81307]"/>
  <match src="&quot;: &quot; [48271,48272]" dest="&quot;: &quot; [45141,45142]"/>
  <match src="view: view [16280,16284]" dest="view: view [16763,16767]"/>
  <match src="(: ( [115228,115229]" dest="(: ( [113821,113822]"/>
  <match src="call_argument [96855,96871]" dest="call_argument [95114,95130]"/>
  <match src="identifier: set [73429,73432]" dest="identifier: set [71002,71005]"/>
  <match src="identifier: _value [78901,78907]" dest="identifier: _value [76653,76659]"/>
  <match src="parameter [75692,75711]" dest="parameter [73346,73365]"/>
  <match src="(: ( [118751,118752]" dest="(: ( [117022,117023]"/>
  <match src="emit: emit [48900,48904]" dest="emit: emit [45782,45786]"/>
  <match src="user_defined_type [4182,4196]" dest="user_defined_type [4309,4323]"/>
  <match src="identifier: sender [36448,36454]" dest="identifier: sender [32796,32802]"/>
  <match src="identifier: length [107335,107341]" dest="identifier: length [105188,105194]"/>
  <match src="identifier: addressStorage [3569,3583]" dest="identifier: addressStorage [3674,3688]"/>
  <match src="parameter [39367,39380]" dest="parameter [35785,35798]"/>
  <match src="identifier: uintStorage [16628,16639]" dest="identifier: uintStorage [118409,118420]"/>
  <match src="&gt;: &gt; [112246,112247]" dest="&gt;: &gt; [111841,111842]"/>
  <match src="): ) [96370,96371]" dest="): ) [94613,94614]"/>
  <match src="solidity_version_comparison_operator [68960,68962]" dest="solidity_version_comparison_operator [66405,66407]"/>
  <match src="]: ] [97732,97733]" dest="]: ] [96023,96024]"/>
  <match src="[: [ [80579,80580]" dest="[: [ [78367,78368]"/>
  <match src="address: address [3863,3870]" dest="address: address [3975,3982]"/>
  <match src="&quot;: &quot; [12476,12477]" dest="&quot;: &quot; [13449,13450]"/>
  <match src="primitive_type [89523,89530]" dest="primitive_type [87584,87591]"/>
  <match src="identifier: codehash [8492,8500]" dest="identifier: codehash [9380,9388]"/>
  <match src="(: ( [26175,26176]" dest="(: ( [22041,22042]"/>
  <match src="type_name [83344,83351]" dest="type_name [81219,81226]"/>
  <match src="call_argument [100430,100482]" dest="call_argument [98802,98854]"/>
  <match src="return_statement [45704,45814]" dest="return_statement [42520,42630]"/>
  <match src="mapping: mapping [62511,62518]" dest="mapping: mapping [59758,59765]"/>
  <match src="]: ] [72520,72521]" dest="]: ] [70060,70061]"/>
  <match src=",: , [66877,66878]" dest=",: , [64262,64263]"/>
  <match src="parameter [61066,61073]" dest="parameter [58265,58272]"/>
  <match src="parameter [105423,105427]" dest="parameter [119985,119989]"/>
  <match src="member_expression [72978,72989]" dest="member_expression [70537,70548]"/>
  <match src="{: { [96837,96838]" dest="{: { [95095,95096]"/>
  <match src="type_name [4556,4563]" dest="type_name [4691,4698]"/>
  <match src="(: ( [117013,117014]" dest="(: ( [115577,115578]"/>
  <match src="identifier: tokenId [40337,40344]" dest="identifier: tokenId [36794,36801]"/>
  <match src="private: private [82413,82420]" dest="private: private [80260,80267]"/>
  <match src="identifier: _to [102571,102574]" dest="identifier: _to [101015,101018]"/>
  <match src="false [79210,79215]" dest="false [76969,76974]"/>
  <match src="(: ( [45789,45790]" dest="(: ( [42605,42606]"/>
  <match src=".: . [79076,79077]" dest=".: . [76831,76832]"/>
  <match src="return_statement [65602,65611]" dest="return_statement [62947,62956]"/>
  <match src="type_name [515,541]" dest="type_name [529,555]"/>
  <match src="variable_declaration_statement [4916,5023]" dest="variable_declaration_statement [5065,5191]"/>
  <match src="(: ( [6074,6075]" dest="(: ( [6272,6273]"/>
  <match src="): ) [116386,116387]" dest="): ) [115013,115014]"/>
  <match src="internal: internal [27244,27252]" dest="internal: internal [37931,37939]"/>
  <match src="bytes32: bytes32 [71129,71136]" dest="bytes32: bytes32 [68643,68650]"/>
  <match src=",: , [57810,57811]" dest=",: , [54915,54916]"/>
  <match src="=: = [70822,70823]" dest="=: = [68323,68324]"/>
  <match src="&quot;: &quot; [45125,45126]" dest="&quot;: &quot; [41929,41930]"/>
  <match src="): ) [107565,107566]" dest="): ) [105423,105424]"/>
  <match src="call_argument [75777,75787]" dest="call_argument [73432,73442]"/>
  <match src="state_variable_declaration [515,562]" dest="state_variable_declaration [529,576]"/>
  <match src="(: ( [89025,89026]" dest="(: ( [87065,87066]"/>
  <match src="identifier: at [76570,76572]" dest="identifier: at [74252,74254]"/>
  <match src="]: ] [80369,80370]" dest="]: ] [78152,78153]"/>
  <match src="member_expression [45108,45124]" dest="member_expression [41912,41928]"/>
  <match src="(: ( [68132,68133]" dest="(: ( [65552,65553]"/>
  <match src="call_expression [109673,109715]" dest="call_expression [107618,107660]"/>
  <match src="]: ] [3643,3644]" dest="]: ] [3748,3749]"/>
  <match src="primitive_type [73402,73409]" dest="primitive_type [70974,70981]"/>
  <match src="): ) [6698,6699]" dest="): ) [7531,7532]"/>
  <match src="string [94580,94632]" dest="string [92775,92827]"/>
  <match src=",: , [93277,93278]" dest=",: , [91447,91448]"/>
  <match src="comment: /**  * @dev Collection of functions related to the address type  */ [7506,7573]" dest="comment: /**  * @dev Collection of functions related to the address type  */ [8369,8438]"/>
  <match src="memory: memory [98964,98970]" dest="memory: memory [97300,97306]"/>
  <match src="): ) [85034,85035]" dest="): ) [82956,82957]"/>
  <match src="identifier: require [19416,19423]" dest="identifier: require [19090,19097]"/>
  <match src="call_argument [88537,88566]" dest="call_argument [86561,86590]"/>
  <match src="identifier: key [81040,81043]" dest="identifier: key [78845,78848]"/>
  <match src="(: ( [95896,95897]" dest="(: ( [94129,94130]"/>
  <match src="visibility [55666,55673]" dest="visibility [52718,52725]"/>
  <match src="): ) [57498,57499]" dest="): ) [54597,54598]"/>
  <match src="internal: internal [17224,17232]" dest="internal: internal [17427,17435]"/>
  <match src="primitive_type [112199,112204]" dest="primitive_type [111794,111799]"/>
  <match src="return_type_definition [24704,24718]" dest="return_type_definition [23146,23160]"/>
  <match src="(: ( [14991,14992]" dest="(: ( [15907,15908]"/>
  <match src="]: ] [58684,58685]" dest="]: ] [55812,55813]"/>
  <match src="return_statement [46909,46957]" dest="return_statement [43748,43796]"/>
  <match src="identifier: boolStorage [20871,20882]" dest="identifier: boolStorage [20425,20436]"/>
  <match src="external: external [7266,7274]" dest="external: external [8117,8125]"/>
  <match src="(: ( [109144,109145]" dest="(: ( [107004,107005]"/>
  <match src="primitive_type [98957,98963]" dest="primitive_type [97293,97299]"/>
  <match src="string: string [46321,46327]" dest="string: string [43148,43154]"/>
  <match src=".: . [72787,72788]" dest=".: . [70339,70340]"/>
  <match src="type_name [42930,42936]" dest="type_name [39657,39663]"/>
  <match src="function_body [116251,116521]" dest="function_body [114875,115152]"/>
  <match src="(: ( [7029,7030]" dest="(: ( [7870,7871]"/>
  <match src="emit_statement [115170,115232]" dest="emit_statement [113763,113825]"/>
  <match src="bytes32: bytes32 [70158,70165]" dest="bytes32: bytes32 [67641,67648]"/>
  <match src="): ) [34667,34668]" dest="): ) [30970,30971]"/>
  <match src="using: using [85385,85390]" dest="using: using [83333,83338]"/>
  <match src="(: ( [95483,95484]" dest="(: ( [93703,93704]"/>
  <match src="identifier: Map [82721,82724]" dest="identifier: Map [80577,80580]"/>
  <match src="&quot;: &quot; [91956,91957]" dest="&quot;: &quot; [90084,90085]"/>
  <match src="identifier: require [14595,14602]" dest="identifier: require [15505,15512]"/>
  <match src="parameter [47716,47723]" dest="parameter [44576,44583]"/>
  <match src="(: ( [89977,89978]" dest="(: ( [88048,88049]"/>
  <match src="identifier: symbol_ [88321,88328]" dest="identifier: symbol_ [86339,86346]"/>
  <match src="function_definition [93012,93161]" dest="function_definition [91175,91326]"/>
  <match src="type_name [6444,6451]" dest="type_name [7269,7276]"/>
  <match src=",: , [11932,11933]" dest=",: , [12895,12896]"/>
  <match src=",: , [109228,109229]" dest=",: , [107163,107164]"/>
  <match src="call_argument [110933,110941]" dest="call_argument [109393,109401]"/>
  <match src="call_argument [117531,117539]" dest="call_argument [115957,115965]"/>
  <match src="member_expression [73429,73447]" dest="member_expression [71002,71020]"/>
  <match src="function_body [64625,64734]" dest="function_body [61935,62049]"/>
  <match src="{: { [81274,81275]" dest="{: { [79086,79087]"/>
  <match src="identifier: _requestGasLimit [17665,17681]" dest="identifier: _gasLimit [118796,118805]"/>
  <match src="call_argument [63572,63602]" dest="call_argument [60848,60878]"/>
  <match src="identifier: _indexes [72265,72273]" dest="identifier: _indexes [69799,69807]"/>
  <match src="returns: returns [91857,91864]" dest="returns: returns [89984,89991]"/>
  <match src="=: = [39132,39133]" dest="=: = [35541,35542]"/>
  <match src="): ) [97535,97536]" dest="): ) [95819,95820]"/>
  <match src="(: ( [45737,45738]" dest="(: ( [42553,42554]"/>
  <match src="event_definition [21862,21936]" dest="event_definition [21417,21484]"/>
  <match src="&quot;: &quot; [91630,91631]" dest="&quot;: &quot; [89748,89749]"/>
  <match src="(: ( [67509,67510]" dest="(: ( [64910,64911]"/>
  <match src=".: . [73514,73515]" dest=".: . [71088,71089]"/>
  <match src="}: } [43598,43599]" dest="}: } [40347,40348]"/>
  <match src="state_mutability [24699,24703]" dest="state_mutability [23141,23145]"/>
  <match src="private: private [86362,86369]" dest="private: private [84335,84342]"/>
  <match src="identifier: executeActionOnFixedTokens [20495,20521]" dest="identifier: executeActionOnFixedTokens [20052,20078]"/>
  <match src="type_name [100617,100624]" dest="type_name [98994,99001]"/>
  <match src="pragma: pragma [54879,54885]" dest="pragma: pragma [51905,51911]"/>
  <match src="function_body [4906,5382]" dest="function_body [5054,5557]"/>
  <match src="primitive_type [57536,57543]" dest="primitive_type [54636,54643]"/>
  <match src="interface_declaration [60362,61077]" dest="interface_declaration [57544,58277]"/>
  <match src="identifier: _bridgeContract [16845,16860]" dest="identifier: _bridgeContract [17039,17054]"/>
  <match src="identifier: _tokenOwners [98692,98704]" dest="identifier: _tokenOwners [97016,97028]"/>
  <match src="parameter [33524,33540]" dest="parameter [29794,29810]"/>
  <match src="type_cast_expression [57536,57546]" dest="type_cast_expression [54636,54646]"/>
  <match src="identifier: at [75006,75008]" dest="identifier: at [72633,72635]"/>
  <match src="call_expression [94484,94512]" dest="call_expression [92678,92706]"/>
  <match src="comment: // This modifies the order of the array, as noted in {at}. [71617,71675]" dest="comment: // This modifies the order of the array, as noted in {at}. [69138,69196]"/>
  <match src="parameter [101777,101798]" dest="parameter [100193,100214]"/>
  <match src="bytes32: bytes32 [40346,40353]" dest="bytes32: bytes32 [36803,36810]"/>
  <match src="call_expression [58633,58683]" dest="call_expression [55761,55811]"/>
  <match src="identifier: bridgedToken [47334,47346]" dest="identifier: bridgedToken [44187,44199]"/>
  <match src="false: false [79210,79215]" dest="false: false [76969,76974]"/>
  <match src="primitive_type [4533,4540]" dest="primitive_type [4668,4675]"/>
  <match src=",: , [89076,89077]" dest=",: , [87117,87118]"/>
  <match src="primitive_type [40302,40309]" dest="primitive_type [36759,36766]"/>
  <match src="type_name [43233,43240]" dest="type_name [39968,39975]"/>
  <match src="call_argument [112199,112249]" dest="call_argument [111794,111844]"/>
  <match src="): ) [43988,43989]" dest="): ) [40754,40755]"/>
  <match src="parameter [103870,103895]" dest="parameter [102352,102377]"/>
  <match src="primitive_type [95000,95004]" dest="primitive_type [93206,93210]"/>
  <match src="primitive_type [111673,111680]" dest="primitive_type [111005,111012]"/>
  <match src="visibility [109644,109652]" dest="visibility [107588,107596]"/>
  <match src="address: address [20300,20307]" dest="address: address [19853,19860]"/>
  <match src="): ) [47346,47347]" dest="): ) [44199,44200]"/>
  <match src="(: ( [96934,96935]" dest="(: ( [95194,95195]"/>
  <match src="): ) [19003,19004]" dest="): ) [18637,18638]"/>
  <match src="type_name [47673,47680]" dest="type_name [44533,44540]"/>
  <match src="{: { [89252,89253]" dest="{: { [87299,87300]"/>
  <match src="): ) [33486,33487]" dest="): ) [29754,29755]"/>
  <match src="): ) [102928,102929]" dest="): ) [101382,101383]"/>
  <match src="state_mutability [68164,68168]" dest="state_mutability [65584,65588]"/>
  <match src="(: ( [109598,109599]" dest="(: ( [107542,107543]"/>
  <match src="modifier_definition [4662,4741]" dest="modifier_definition [4802,4884]"/>
  <match src="comment: /**      * @dev Returns whether `tokenId` exists.      *      * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.      *      * Tokens start existing when they are minted (`_mint`),      * and stop existing when they are burned (`_burn`).      */ [94646,94938]" dest="comment: /**      * @dev Returns whether `tokenId` exists.      *      * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.      *      * Tokens start existing when they are minted (`_mint`),      * and stop existing when they are burned (`_burn`).      */ [92844,93143]"/>
  <match src="identifier: uintStorage [282,293]" dest="identifier: uintStorage [291,302]"/>
  <match src="uint256: uint256 [44236,44243]" dest="uint256: uint256 [41012,41019]"/>
  <match src="state_mutability [6795,6799]" dest="state_mutability [7630,7634]"/>
  <match src="visibility [117757,117765]" dest="visibility [116551,116559]"/>
  <match src=".: . [57572,57573]" dest=".: . [54673,54674]"/>
  <match src="{: { [79644,79645]" dest="{: { [77416,77417]"/>
  <match src="function_body [70592,70927]" dest="function_body [68088,68433]"/>
  <match src="(: ( [96854,96855]" dest="(: ( [95113,95114]"/>
  <match src="address: address [74355,74362]" dest="address: address [71961,71968]"/>
  <match src="||: || [112222,112224]" dest="||: || [111817,111819]"/>
  <match src="identifier: _token [117270,117276]" dest="identifier: _token [115792,115798]"/>
  <match src="number_literal: 1 [80020,80021]" dest="number_literal: 1 [77797,77798]"/>
  <match src="identifier: encodePacked [2899,2911]" dest="identifier: encodePacked [2987,2999]"/>
  <match src="address: address [31160,31167]" dest="address: address [27359,27366]"/>
  <match src="identifier: msg [57420,57423]" dest="identifier: msg [54519,54522]"/>
  <match src="uint256: uint256 [71741,71748]" dest="uint256: uint256 [69265,69272]"/>
  <match src="(: ( [74425,74426]" dest="(: ( [72032,72033]"/>
  <match src="identifier: div [66794,66797]" dest="identifier: div [64178,64181]"/>
  <match src="solidity_version_comparison_operator [59243,59245]" dest="solidity_version_comparison_operator [56392,56394]"/>
  <match src="visibility [68782,68790]" dest="visibility [66218,66226]"/>
  <match src="unary_expression [70606,70628]" dest="unary_expression [68103,68125]"/>
  <match src="function_body [50129,50236]" dest="function_body [47049,47159]"/>
  <match src="pragma: pragma [62037,62043]" dest="pragma: pragma [59266,59272]"/>
  <match src="): ) [88726,88727]" dest="): ) [86757,86758]"/>
  <match src="external: external [6875,6883]" dest="external: external [7712,7720]"/>
  <match src="{: { [92158,92159]" dest="{: { [90294,90295]"/>
  <match src="(: ( [63004,63005]" dest="(: ( [60264,60265]"/>
  <match src="type_name [68805,68812]" dest="type_name [66241,66248]"/>
  <match src="call_expression [21187,21231]" dest="call_expression [20749,20793]"/>
  <match src=".: . [102285,102286]" dest=".: . [100719,100720]"/>
  <match src="solidity_version: 0.7.0 [60216,60221]" dest="solidity_version: 0.7.0 [57391,57396]"/>
  <match src=",: , [82191,82192]" dest=",: , [80032,80033]"/>
  <match src="memory: memory [44283,44289]" dest="memory: memory [41059,41065]"/>
  <match src="primitive_type [83008,83015]" dest="primitive_type [80874,80881]"/>
  <match src="binary_expression [71332,71347]" dest="binary_expression [68850,68865]"/>
  <match src="type_name [65029,65036]" dest="type_name [62356,62363]"/>
  <match src="): ) [55849,55850]" dest="): ) [52905,52906]"/>
  <match src="identifier: uintStorage [17632,17643]" dest="identifier: uintStorage [118763,118774]"/>
  <match src=",: , [93062,93063]" dest=",: , [91225,91226]"/>
  <match src="expression_statement [45084,45157]" dest="expression_statement [41888,41961]"/>
  <match src="solidity_version_comparison_operator [7496,7498]" dest="solidity_version_comparison_operator [8357,8359]"/>
  <match src="[: [ [81102,81103]" dest="[: [ [78908,78909]"/>
  <match src="identifier: addressStorage [49879,49893]" dest="identifier: addressStorage [46792,46806]"/>
  <match src="type_cast_expression [90184,90238]" dest="type_cast_expression [88259,88313]"/>
  <match src=".: . [70647,70648]" dest=".: . [68145,68146]"/>
  <match src="): ) [11404,11405]" dest="): ) [12352,12353]"/>
  <match src="primitive_type [100050,100057]" dest="primitive_type [98410,98417]"/>
  <match src="type_name [84287,84294]" dest="type_name [82189,82196]"/>
  <match src="}: } [3972,3973]" dest="}: } [4087,4088]"/>
  <match src="identifier: selector [112930,112938]" dest="identifier: selector [112378,112386]"/>
  <match src="return_statement [24729,24874]" dest="return_statement [23364,23406]"/>
  <match src="(: ( [4700,4701]" dest="(: ( [4841,4842]"/>
  <match src="): ) [16924,16925]" dest="): ) [17119,17120]"/>
  <match src="call_expression [72410,72427]" dest="call_expression [69947,69964]"/>
  <match src="string [95976,95978]" dest="string [94210,94212]"/>
  <match src="(: ( [97064,97065]" dest="(: ( [95328,95329]"/>
  <match src="call_argument [46373,46387]" dest="call_argument [43200,43214]"/>
  <match src="(: ( [40124,40125]" dest="(: ( [36575,36576]"/>
  <match src="call_argument [112696,112726]" dest="call_argument [111572,111602]"/>
  <match src="type_name [107012,107018]" dest="type_name [104858,104864]"/>
  <match src="identifier: IERC721Enumerable [85329,85346]" dest="identifier: IERC721Enumerable [83275,83292]"/>
  <match src="bytes32: bytes32 [81736,81743]" dest="bytes32: bytes32 [79562,79569]"/>
  <match src="identifier: initialize [105152,105162]" dest="identifier: initialize [119775,119785]"/>
  <match src="(: ( [76572,76573]" dest="(: ( [74254,74255]"/>
  <match src="identifier: _tokenId [110813,110821]" dest="identifier: _tokenId [109310,109318]"/>
  <match src="type_name [55904,55911]" dest="type_name [52962,52969]"/>
  <match src="uint256: uint256 [95263,95270]" dest="uint256: uint256 [93480,93487]"/>
  <match src="member_expression [115681,115729]" dest="member_expression [114289,114337]"/>
  <match src="(: ( [91372,91373]" dest="(: ( [89485,89486]"/>
  <match src="uint256: uint256 [27223,27230]" dest="uint256: uint256 [103158,103165]"/>
  <match src="yul_function_call [13379,13398]" dest="yul_function_call [14371,14390]"/>
  <match src="parameter [6509,6516]" dest="parameter [7336,7343]"/>
  <match src="parenthesized_expression [45737,45745]" dest="parenthesized_expression [42553,42561]"/>
  <match src="call_argument [74201,74224]" dest="call_argument [71801,71824]"/>
  <match src="identifier: b [65096,65097]" dest="identifier: b [62424,62425]"/>
  <match src="function_body [18521,18575]" dest="function_body [18033,18089]"/>
  <match src="string [2562,2576]" dest="string [2641,2655]"/>
  <match src="primitive_type [74393,74397]" dest="primitive_type [71999,72003]"/>
  <match src="yul_evm_builtin [51469,51474]" dest="yul_evm_builtin [48425,48430]"/>
  <match src="{: { [107295,107296]" dest="{: { [105147,105148]"/>
  <match src="number_literal: 0x80ac58cd [87438,87448]" dest="number_literal: 0x80ac58cd [85433,85443]"/>
  <match src="identifier: sender [5167,5173]" dest="identifier: sender [5338,5344]"/>
  <match src="identifier: this [110771,110775]" dest="identifier: this [109266,109270]"/>
  <match src="sstore: sstore [57737,57743]" dest="sstore: sstore [54842,54848]"/>
  <match src="call_argument [98583,98584]" dest="call_argument [96902,96903]"/>
  <match src="==: == [95493,95495]" dest="==: == [93713,93715]"/>
  <match src="user_defined_type [62263,62270]" dest="user_defined_type [59501,59508]"/>
  <match src="comment: /**      * @dev Converts a `uint256` to its ASCII `string` representation.      */ [42787,42869]" dest="comment: /**      * @dev Converts a `uint256` to its ASCII `string` representation.      */ [39511,39595]"/>
  <match src="{: { [46158,46159]" dest="{: { [42983,42984]"/>
  <match src="call_argument [110676,110707]" dest="call_argument [109170,109201]"/>
  <match src="primitive_type [57368,57375]" dest="primitive_type [54466,54473]"/>
  <match src="primitive_type [85877,85884]" dest="primitive_type [83835,83842]"/>
  <match src=".: . [83637,83638]" dest=".: . [81520,81521]"/>
  <match src="assembly: assembly [34430,34438]" dest="assembly: assembly [30722,30730]"/>
  <match src="function_definition [33149,33248]" dest="function_definition [29406,29505]"/>
  <match src="library: library [7574,7581]" dest="library: library [8440,8447]"/>
  <match src="call_argument [115189,115195]" dest="call_argument [113782,113788]"/>
  <match src="type_name [11275,11281]" dest="type_name [12222,12228]"/>
  <match src="=: = [100507,100508]" dest="=: = [98880,98881]"/>
  <match src="identifier: map [84995,84998]" dest="identifier: map [82917,82920]"/>
  <match src="type_cast_expression [38638,38653]" dest="type_cast_expression [35037,35052]"/>
  <match src="(: ( [107275,107276]" dest="(: ( [105127,105128]"/>
  <match src="): ) [89987,89988]" dest="): ) [88058,88059]"/>
  <match src=",: , [59145,59146]" dest=",: , [56287,56288]"/>
  <match src="delete: delete [72495,72501]" dest="delete: delete [70035,70041]"/>
  <match src="state_mutability [23472,23476]" dest="state_mutability [38349,38353]"/>
  <match src="]: ] [92272,92273]" dest="]: ] [90411,90412]"/>
  <match src="identifier: require [68824,68831]" dest="identifier: require [66261,66268]"/>
  <match src="parameter [3530,3548]" dest="parameter [3634,3652]"/>
  <match src="call_expression [48254,48308]" dest="call_expression [45124,45178]"/>
  <match src="identifier: _token [25664,25670]" dest="identifier: _token [22702,22708]"/>
  <match src="call_argument [114352,114360]" dest="call_argument [112961,112969]"/>
  <match src="return: return [79106,79112]" dest="return: return [76862,76868]"/>
  <match src="expression_statement [14973,15009]" dest="expression_statement [15889,15925]"/>
  <match src="identifier: key [84625,84628]" dest="identifier: key [82539,82542]"/>
  <match src="address: address [30557,30564]" dest="address: address [26740,26747]"/>
  <match src="identifier: Proxy [50431,50436]" dest="identifier: Proxy [47365,47370]"/>
  <match src="type_name [27223,27230]" dest="type_name [103158,103165]"/>
  <match src="identifier: _messageId [19394,19404]" dest="identifier: _messageId [19067,19077]"/>
  <match src="return_type_definition [91196,91213]" dest="return_type_definition [89301,89318]"/>
  <match src="(: ( [42086,42087]" dest="(: ( [18185,18186]"/>
  <match src="primitive_type [56389,56396]" dest="primitive_type [53460,53467]"/>
  <match src="override: override [102603,102611]" dest="override: override [101047,101055]"/>
  <match src="identifier: bridgedToken [107785,107797]" dest="identifier: bridgedToken [105610,105622]"/>
  <match src="block_statement [107429,107475]" dest="block_statement [105284,105332]"/>
  <match src="call_argument [3631,3641]" dest="call_argument [3736,3746]"/>
  <match src="identifier: errorMessage [82523,82535]" dest="identifier: errorMessage [80372,80384]"/>
  <match src="indexed: indexed [40142,40149]" dest="indexed: indexed [36594,36601]"/>
  <match src="&quot;: &quot; [3628,3629]" dest="&quot;: &quot; [3733,3734]"/>
  <match src="identifier: _setMediatorOwns [58972,58988]" dest="identifier: _setMediatorOwns [56109,56125]"/>
  <match src="function: function [3794,3802]" dest="function: function [3906,3914]"/>
  <match src="visibility [55740,55747]" dest="visibility [52793,52800]"/>
  <match src="visibility [72739,72746]" dest="visibility [70290,70297]"/>
  <match src="}: } [24879,24880]" dest="}: } [23412,23413]"/>
  <match src="comment: /**      * @dev Safely mints `tokenId` and transfers it to `to`.      *      * Requirements:      d*      * - `tokenId` must not exist.      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.      *      * Emits a {Transfer} event.      */ [95553,95873]" dest="comment: /**      * @dev Safely mints `tokenId` and transfers it to `to`.      *      * Requirements:      d*      * - `tokenId` must not exist.      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.      *      * Emits a {Transfer} event.      */ [93776,94105]"/>
  <match src="comment: /**      * @dev Mapping of interface ids to whether or not it's supported.      */ [62424,62506]" dest="comment: /**      * @dev Mapping of interface ids to whether or not it's supported.      */ [59668,59752]"/>
  <match src="&quot;: &quot; [59136,59137]" dest="&quot;: &quot; [56278,56279]"/>
  <match src="identifier: approved [92286,92294]" dest="identifier: approved [90425,90433]"/>
  <match src="&quot;: &quot; [98415,98416]" dest="&quot;: &quot; [96729,96730]"/>
  <match src=",: , [53838,53839]" dest=",: , [50837,50838]"/>
  <match src="interface: interface [33341,33350]" dest="interface: interface [29606,29615]"/>
  <match src="identifier: _tokenId [108590,108598]" dest="identifier: _tokenId [106435,106443]"/>
  <match src="type_cast_expression [75789,75803]" dest="type_cast_expression [73444,73458]"/>
  <match src="primitive_type [74355,74362]" dest="primitive_type [71961,71968]"/>
  <match src="(: ( [43974,43975]" dest="(: ( [40740,40741]"/>
  <match src="type_name [19311,19318]" dest="type_name [18952,18959]"/>
  <match src="block_statement [115667,115761]" dest="block_statement [114274,114370]"/>
  <match src=",: , [107632,107633]" dest=",: , [105491,105492]"/>
  <match src="parameter [111601,111617]" dest="parameter [110917,110933]"/>
  <match src="variable_declaration [71277,71295]" dest="variable_declaration [68793,68811]"/>
  <match src="(: ( [24283,24284]" dest="(: ( [23705,23706]"/>
  <match src="expression_statement [63537,63604]" dest="expression_statement [60813,60880]"/>
  <match src="call_expression [105743,105760]" dest="call_expression [120195,120212]"/>
  <match src="address: address [105341,105348]" dest="address: address [119901,119908]"/>
  <match src="(: ( [97781,97782]" dest="(: ( [96075,96076]"/>
  <match src="identifier: _remove [74181,74188]" dest="identifier: _remove [71781,71788]"/>
  <match src="): ) [38500,38501]" dest="): ) [34896,34897]"/>
  <match src="identifier: messageId [6533,6542]" dest="identifier: messageId [7362,7371]"/>
  <match src="mapping: mapping [85868,85875]" dest="mapping: mapping [83826,83833]"/>
  <match src="primitive_type [89682,89688]" dest="primitive_type [87746,87752]"/>
  <match src="comment: // File: contracts/interfaces/IUpgradeabilityOwnerStorage.sol [1051,1112]" dest="comment: // File: contracts/interfaces/IUpgradeabilityOwnerStorage.sol [1085,1146]"/>
  <match src="}: } [16990,16991]" dest="}: } [17187,17188]"/>
  <match src="comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [9858,9926]" dest="comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [10772,10840]"/>
  <match src="identifier: setInitialize [105803,105816]" dest="identifier: setInitialize [120258,120271]"/>
  <match src="): ) [73493,73494]" dest="): ) [71066,71067]"/>
  <match src="]: ] [24003,24004]" dest="]: ] [38873,38874]"/>
  <match src="}: } [17687,17688]" dest="}: } [118812,118813]"/>
  <match src="}: } [92945,92946]" dest="}: } [91103,91104]"/>
  <match src="modifier: modifier [101987,101995]" dest="modifier: modifier [100412,100420]"/>
  <match src="return: return [74632,74638]" dest="return: return [72246,72252]"/>
  <match src="identifier: retval [100559,100565]" dest="identifier: retval [98933,98939]"/>
  <match src="primitive_type [45523,45530]" dest="primitive_type [42337,42344]"/>
  <match src="expression_statement [50184,50230]" dest="expression_statement [47106,47152]"/>
  <match src=",: , [104446,104447]" dest=",: , [102962,102963]"/>
  <match src="identifier: _transformName [107546,107560]" dest="identifier: _transformName [105404,105418]"/>
  <match src="}: } [43331,43332]" dest="}: } [40070,40071]"/>
  <match src="{: { [69658,69659]" dest="{: { [67129,67130]"/>
  <match src="primitive_type [24713,24717]" dest="primitive_type [23155,23159]"/>
  <match src="identifier: _setMediatorOwns [116290,116306]" dest="identifier: _setMediatorOwns [114916,114932]"/>
  <match src="function: function [89505,89513]" dest="function: function [87566,87574]"/>
  <match src="type_name [29168,29175]" dest="type_name [25316,25323]"/>
  <match src="}: } [54832,54833]" dest="}: } [51854,51855]"/>
  <match src="comment: /**      * @dev Handles the request to fix transferred assets which bridged message execution failed on the other network.      * It uses the information stored by passMessage method when the assets were initially transferred      * @param _messageId id of the message which execution failed on the other network.      */ [19853,20174]" dest="comment: /**      * @dev Handles the request to fix transferred assets which bridged message execution failed on the other network.      * It uses the information stored by passMessage method when the assets were initially transferred      * @param _messageId id of the message which execution failed on the other network.      */ [19398,19723]"/>
  <match src="identifier: temp [43539,43543]" dest="identifier: temp [40284,40288]"/>
  <match src="identifier: _messageId [20329,20339]" dest="identifier: _messageId [19882,19892]"/>
  <match src="): ) [112049,112050]" dest="): ) [111711,111712]"/>
  <match src="identifier: _holderTokens [97043,97056]" dest="identifier: _holderTokens [95307,95320]"/>
  <match src="(: ( [91564,91565]" dest="(: ( [89681,89682]"/>
  <match src="identifier: _holderTokens [98606,98619]" dest="identifier: _holderTokens [96927,96940]"/>
  <match src="user_defined_type [78114,78122]" dest="user_defined_type [75847,75855]"/>
  <match src="function: function [45504,45512]" dest="function: function [42318,42326]"/>
  <match src="identifier: _messageId [3518,3528]" dest="identifier: _messageId [3622,3632]"/>
  <match src="): ) [109714,109715]" dest="): ) [107659,107660]"/>
  <match src="inheritance_specifier [85295,85301]" dest="inheritance_specifier [83241,83247]"/>
  <match src="visibility [72930,72937]" dest="visibility [70488,70495]"/>
  <match src="yul_evm_builtin [54780,54794]" dest="yul_evm_builtin [51798,51812]"/>
  <match src="address: address [21350,21357]" dest="address: address [20889,20896]"/>
  <match src="identifier: key [78593,78596]" dest="identifier: key [76340,76343]"/>
  <match src="primitive_type [113853,113860]" dest="primitive_type [112832,112839]"/>
  <match src="solidity: solidity [1314,1322]" dest="solidity: solidity [1358,1366]"/>
  <match src="comment: // Move the last entry to the index where the entry to delete is [80385,80449]" dest="comment: // Move the last entry to the index where the entry to delete is [78170,78234]"/>
  <match src="=: = [99112,99113]" dest="=: = [97450,97451]"/>
  <match src=",: , [3528,3529]" dest=",: , [3632,3633]"/>
  <match src=".: . [72160,72161]" dest=".: . [69692,69693]"/>
  <match src="): ) [113048,113049]" dest="): ) [112420,112421]"/>
  <match src="identifier: _nativeToken [48877,48889]" dest="identifier: _nativeToken [45757,45769]"/>
  <match src="expression_statement [4693,4724]" dest="expression_statement [4834,4865]"/>
  <match src="visibility [55912,55919]" dest="visibility [52970,52977]"/>
  <match src="string: string [107012,107018]" dest="string: string [104858,104864]"/>
  <match src="expression_statement [43289,43298]" dest="expression_statement [40026,40035]"/>
  <match src="user_defined_type [44537,44544]" dest="user_defined_type [41327,41334]"/>
  <match src="): ) [12385,12386]" dest="): ) [13357,13358]"/>
  <match src="expression_statement [91885,91959]" dest="expression_statement [90013,90087]"/>
  <match src="parameter [84617,84628]" dest="parameter [82531,82542]"/>
  <match src=",: , [46940,46941]" dest=",: , [43779,43780]"/>
  <match src="function_definition [68120,68248]" dest="function_definition [65540,65670]"/>
  <match src="call_argument [26250,26299]" dest="call_argument [22111,22160]"/>
  <match src="): ) [84726,84727]" dest="): ) [82641,82642]"/>
  <match src="}: } [100753,100754]" dest="}: } [99133,99134]"/>
  <match src="{: { [81745,81746]" dest="{: { [79571,79572]"/>
  <match src="function: function [91356,91364]" dest="function: function [89469,89477]"/>
  <match src="number_literal: 1 [82613,82614]" dest="number_literal: 1 [80463,80464]"/>
  <match src="function_definition [76561,76696]" dest="function_definition [74243,74380]"/>
  <match src="call_argument [65093,65094]" dest="call_argument [62421,62422]"/>
  <match src="parameter [93267,93277]" dest="parameter [91437,91447]"/>
  <match src="call_argument [100374,100378]" dest="call_argument [98743,98747]"/>
  <match src="string [91499,91534]" dest="string [89614,89649]"/>
  <match src="returns: returns [106120,106127]" dest="returns: returns [103947,103954]"/>
  <match src="type_name [45601,45606]" dest="type_name [42416,42421]"/>
  <match src="expression_statement [103935,103969]" dest="expression_statement [102418,102452]"/>
  <match src="identifier: _baseURI [90046,90054]" dest="identifier: _baseURI [88118,88126]"/>
  <match src="state_mutability [6971,6975]" dest="state_mutability [7810,7814]"/>
  <match src="return_type_definition [59829,59854]" dest="return_type_definition [56991,57016]"/>
  <match src="pragma: pragma [50285,50291]" dest="pragma: pragma [47213,47219]"/>
  <match src="identifier: isRegisteredAsNativeToken [109145,109170]" dest="identifier: isRegisteredAsNativeToken [107005,107030]"/>
  <match src=",: , [92469,92470]" dest=",: , [90615,90616]"/>
  <match src="ternary_expression [45711,45762]" dest="ternary_expression [42527,42578]"/>
  <match src=",: , [20924,20925]" dest=",: , [20478,20479]"/>
  <match src="&quot;: &quot; [2250,2251]" dest="&quot;: &quot; [2321,2322]"/>
  <match src="identifier: key [83352,83355]" dest="identifier: key [81227,81230]"/>
  <match src="): ) [95491,95492]" dest="): ) [93711,93712]"/>
  <match src="function: function [6398,6406]" dest="function: function [7223,7231]"/>
  <match src="primitive_type [3530,3537]" dest="primitive_type [3634,3641]"/>
  <match src="is: is [18853,18855]" dest="is: is [18486,18488]"/>
  <match src="call_expression [116345,116410]" dest="call_expression [114972,115037]"/>
  <match src="identifier: messageToken [20316,20328]" dest="identifier: messageToken [19869,19881]"/>
  <match src=",: , [45802,45803]" dest=",: , [42618,42619]"/>
  <match src="returns: returns [7406,7413]" dest="returns: returns [8261,8268]"/>
  <match src="solidity: solidity [18689,18697]" dest="solidity: solidity [18314,18322]"/>
  <match src="expression_statement [37486,37527]" dest="expression_statement [33861,33902]"/>
  <match src="private: private [87398,87405]" dest="private: private [85393,85400]"/>
  <match src="}: } [100201,100202]" dest="}: } [98566,98567]"/>
  <match src="): ) [4722,4723]" dest="): ) [4863,4864]"/>
  <match src="(: ( [41023,41024]" dest="(: ( [37505,37506]"/>
  <match src="{: { [13289,13290]" dest="{: { [14279,14280]"/>
  <match src="variable_declaration [71741,71758]" dest="variable_declaration [69265,69282]"/>
  <match src="(: ( [109170,109171]" dest="(: ( [107030,107031]"/>
  <match src="(: ( [100724,100725]" dest="(: ( [99103,99104]"/>
  <match src="): ) [47723,47724]" dest="): ) [44583,44584]"/>
  <match src="member_expression [83852,83862]" dest="member_expression [81742,81752]"/>
  <match src="): ) [44077,44078]" dest="): ) [40848,40849]"/>
  <match src="address: address [36974,36981]" dest="address: address [33336,33343]"/>
  <match src="primitive_type [82152,82159]" dest="primitive_type [79992,79999]"/>
  <match src="view: view [1222,1226]" dest="view: view [1261,1265]"/>
  <match src="solidity_pragma_token [44394,44408]" dest="solidity_pragma_token [41175,41189]"/>
  <match src="visibility [35167,35175]" dest="visibility [31479,31487]"/>
  <match src="identifier: bridgedTokenAddress [107099,107118]" dest="identifier: bridgedTokenAddress [104947,104966]"/>
  <match src="primitive_type [76658,76665]" dest="primitive_type [74341,74348]"/>
  <match src="primitive_type [79985,79992]" dest="primitive_type [77762,77769]"/>
  <match src="): ) [2263,2264]" dest="): ) [2334,2335]"/>
  <match src="call_expression [9954,9989]" dest="call_expression [10869,10904]"/>
  <match src=".: . [36447,36448]" dest=".: . [32795,32796]"/>
  <match src=".: . [100308,100309]" dest=".: . [98675,98676]"/>
  <match src="identifier: returndata [100520,100530]" dest="identifier: returndata [98893,98903]"/>
  <match src="identifier: _entries [80725,80733]" dest="identifier: _entries [78516,78524]"/>
  <match src="internal: internal [98274,98282]" dest="internal: internal [96586,96594]"/>
  <match src="identifier: _recordBridgeOperation [111089,111111]" dest="identifier: _recordBridgeOperation [110467,110489]"/>
  <match src="type_name [45588,45592]" dest="type_name [42403,42407]"/>
  <match src="identifier: _token [112043,112049]" dest="identifier: _token [111705,111711]"/>
  <match src="user_defined_type [81226,81229]" dest="user_defined_type [79038,79041]"/>
  <match src="identifier: key [78896,78899]" dest="identifier: key [76648,76651]"/>
  <match src="): ) [46949,46950]" dest="): ) [43788,43789]"/>
  <match src="string: string [56358,56364]" dest="string: string [53428,53434]"/>
  <match src="bytes32: bytes32 [76014,76021]" dest="bytes32: bytes32 [73676,73683]"/>
  <match src="): ) [12707,12708]" dest="): ) [13684,13685]"/>
  <match src="return_type_definition [66834,66851]" dest="return_type_definition [64218,64235]"/>
  <match src="): ) [45575,45576]" dest="): ) [42389,42390]"/>
  <match src="+: + [80612,80613]" dest="+: + [78400,78401]"/>
  <match src="comment: // covers usage without calling through storage proxy [5065,5118]" dest="comment: // covers usage without calling through storage proxy [5235,5288]"/>
  <match src="call_argument [74454,74459]" dest="call_argument [72061,72066]"/>
  <match src="primitive_type [32292,32299]" dest="primitive_type [28527,28534]"/>
  <match src="member_expression [5136,5173]" dest="member_expression [5307,5344]"/>
  <match src=".: . [46928,46929]" dest=".: . [43767,43768]"/>
  <match src="identifier: abi [114064,114067]" dest="identifier: abi [22743,22746]"/>
  <match src="function: function [24646,24654]" dest="function: function [23086,23094]"/>
  <match src="return_type_definition [83366,83380]" dest="return_type_definition [81241,81255]"/>
  <match src="type_name [93253,93260]" dest="type_name [91423,91430]"/>
  <match src="(: ( [98485,98486]" dest="(: ( [96801,96802]"/>
  <match src="address: address [107503,107510]" dest="address: address [105361,105368]"/>
  <match src="bool: bool [993,997]" dest="bool: bool [1022,1026]"/>
  <match src="{: { [61351,61352]" dest="{: { [58563,58564]"/>
  <match src="user_defined_type [75392,75399]" dest="user_defined_type [73036,73043]"/>
  <match src="identifier: index [73523,73528]" dest="identifier: index [71097,71102]"/>
  <match src="return: return [24300,24306]" dest="return: return [23916,23922]"/>
  <match src="call_expression [10929,10989]" dest="call_expression [11867,11927]"/>
  <match src="visibility [32326,32334]" dest="visibility [28561,28569]"/>
  <match src="(: ( [71160,71161]" dest="(: ( [68674,68675]"/>
  <match src="primitive_type [59022,59029]" dest="primitive_type [56161,56168]"/>
  <match src="comment: /**      * @dev Checks if specified token was already bridged at least once.      * @param _token address of the token contract.      * @return true, if token was already bridged.      */ [21942,22129]" dest="comment: /**      * @dev Checks if specified token was already bridged at least once.      * @param _token address of the token contract.      * @return true, if token was already bridged.      */ [21492,21683]"/>
  <match src="comment: /**      * @dev Tells the amount of tokens of a message sent to the AMB bridge.      * @return value representing amount of tokens.      */ [2963,3102]" dest="comment: /**      * @dev Tells the amount of tokens of a message sent to the AMB bridge.      * @return value representing amount of tokens.      */ [3054,3196]"/>
  <match src="comment: /**      * @dev Tells the address of the used ERC721 token image.      * @return address of the used token image.      */ [49684,49805]" dest="comment: /**      * @dev Tells the address of the used ERC721 token image.      * @return address of the used token image.      */ [46592,46716]"/>
  <match src="returns: returns [31918,31925]" dest="returns: returns [28141,28148]"/>
  <match src="call_argument [41776,41777]" dest="call_argument [111239,111240]"/>
  <match src="call_expression [47757,47818]" dest="call_expression [44618,44679]"/>
  <match src=".: . [80058,80059]" dest=".: . [77836,77837]"/>
  <match src="identifier: IERC165 [62263,62270]" dest="identifier: IERC165 [59501,59508]"/>
  <match src="call_expression [66869,66908]" dest="call_expression [64254,64293]"/>
  <match src="expression_statement [4733,4735]" dest="expression_statement [4875,4877]"/>
  <match src="parameter [75009,75031]" dest="parameter [72636,72658]"/>
  <match src="call_argument [20541,20550]" dest="call_argument [20086,20095]"/>
  <match src="return: return [75985,75991]" dest="return: return [73647,73653]"/>
  <match src="identifier: _value [78032,78038]" dest="identifier: _value [75760,75766]"/>
  <match src="): ) [43273,43274]" dest="): ) [40009,40010]"/>
  <match src="memory: memory [101755,101761]" dest="memory: memory [100170,100176]"/>
  <match src="identifier: encodePacked [3598,3610]" dest="identifier: encodePacked [3703,3715]"/>
  <match src="assignment_expression [16935,16984]" dest="assignment_expression [17131,17180]"/>
  <match src="}: } [49677,49678]" dest="}: } [46583,46584]"/>
  <match src="identifier: setLock [35147,35154]" dest="identifier: setLock [31459,31466]"/>
  <match src="override_specifier [102603,102611]" dest="override_specifier [101047,101055]"/>
  <match src="=: = [107201,107202]" dest="=: = [105051,105052]"/>
  <match src="call_argument [46831,46898]" dest="call_argument [43669,43736]"/>
  <match src="if: if [115634,115636]" dest="if: if [114241,114243]"/>
  <match src="view: view [6884,6888]" dest="view: view [7721,7725]"/>
  <match src="type_name [90517,90523]" dest="type_name [88600,88606]"/>
  <match src="{: { [92525,92526]" dest="{: { [90671,90672]"/>
  <match src="state_mutability [72747,72751]" dest="state_mutability [70298,70302]"/>
  <match src="inheritance_specifier [44537,44544]" dest="inheritance_specifier [41327,41334]"/>
  <match src="comment: // bytes32 keys and values. [77669,77696]" dest="comment: // bytes32 keys and values. [75388,75415]"/>
  <match src="): ) [40816,40817]" dest="): ) [37291,37292]"/>
  <match src="primitive_type [75033,75040]" dest="primitive_type [72660,72667]"/>
  <match src="return_statement [72578,72591]" dest="return_statement [70122,70135]"/>
  <match src="comment: // Token symbol [86335,86350]" dest="comment: // Token symbol [84307,84322]"/>
  <match src="call_expression [46925,46951]" dest="call_expression [43764,43790]"/>
  <match src="type_name [10847,10854]" dest="type_name [11784,11791]"/>
  <match src="primitive_type [74446,74453]" dest="primitive_type [72053,72060]"/>
  <match src="}: } [92583,92584]" dest="}: } [90731,90732]"/>
  <match src="&quot;: &quot; [9987,9988]" dest="&quot;: &quot; [10902,10903]"/>
  <match src="returns: returns [5663,5670]" dest="returns: returns [5846,5853]"/>
  <match src="parameter [92668,92680]" dest="parameter [90821,90833]"/>
  <match src="comment: // File: contracts/upgradeable_contracts/Ownable.sol [3975,4027]" dest="comment: // File: contracts/upgradeable_contracts/Ownable.sol [4092,4144]"/>
  <match src="): ) [21397,21398]" dest="): ) [20938,20939]"/>
  <match src="visibility [27244,27252]" dest="visibility [37931,37939]"/>
  <match src=",: , [114338,114339]" dest=",: , [112947,112948]"/>
  <match src="yul_path [53133,53138]" dest="yul_path [50118,50123]"/>
  <match src="solidity: solidity [33629,33637]" dest="solidity: solidity [29904,29912]"/>
  <match src="comment: // bytes32(uint256(keccak256('eip1967.proxy.implementation')) - 1) [57658,57724]" dest="comment: // bytes32(uint256(keccak256('eip1967.proxy.implementation')) - 1) [54762,54828]"/>
  <match src="address: address [373,380]" dest="address: address [384,391]"/>
  <match src="(: ( [48625,48626]" dest="(: ( [45503,45504]"/>
  <match src="yul_evm_builtin [52224,52236]" dest="yul_evm_builtin [49191,49203]"/>
  <match src="comment: /**      * @dev Returns a token ID owned by `owner` at a given `index` of its token list.      * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.      */ [60556,60727]" dest="comment: /**      * @dev Returns a token ID owned by `owner` at a given `index` of its token list.      * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.      */ [57745,57919]"/>
  <match src="identifier: EternalStorage [4182,4196]" dest="identifier: EternalStorage [4309,4323]"/>
  <match src="function: function [91798,91806]" dest="function: function [89925,89933]"/>
  <match src="call_argument [84982,85035]" dest="call_argument [82904,82957]"/>
  <match src="address: address [75097,75104]" dest="address: address [72725,72732]"/>
  <match src="internal: internal [76154,76162]" dest="internal: internal [73822,73830]"/>
  <match src="expression_statement [96302,96321]" dest="expression_statement [94544,94563]"/>
  <match src="internal: internal [14120,14128]" dest="internal: internal [117526,117534]"/>
  <match src="{: { [6329,6330]" dest="{: { [6538,6539]"/>
  <match src="uint256: uint256 [76177,76184]" dest="uint256: uint256 [73845,73852]"/>
  <match src="call_expression [57509,57547]" dest="call_expression [54609,54647]"/>
  <match src="identifier: tokenId [31698,31705]" dest="identifier: tokenId [27912,27919]"/>
  <match src="=: = [45620,45621]" dest="=: = [42435,42436]"/>
  <match src="identifier: intStorage [551,561]" dest="identifier: intStorage [565,575]"/>
  <match src="return: return [10922,10928]" dest="return: return [11860,11866]"/>
  <match src="): ) [111682,111683]" dest="): ) [111014,111015]"/>
  <match src="expression_statement [113103,113144]" dest="expression_statement [111258,111299]"/>
  <match src="identifier: target [12518,12524]" dest="identifier: target [13492,13498]"/>
  <match src="expression_statement [26310,26355]" dest="expression_statement [22172,22252]"/>
  <match src="(: ( [98308,98309]" dest="(: ( [96621,96622]"/>
  <match src="}: } [5996,5997]" dest="}: } [6189,6190]"/>
  <match src="): ) [109238,109239]" dest="): ) [107173,107174]"/>
  <match src="(: ( [55425,55426]" dest="(: ( [52471,52472]"/>
  <match src="assignment_expression [50184,50229]" dest="assignment_expression [47106,47151]"/>
  <match src="library_declaration [7574,13525]" dest="library_declaration [8440,14524]"/>
  <match src="type_name [20350,20357]" dest="type_name [19904,19911]"/>
  <match src="identifier: require [109777,109784]" dest="identifier: require [107724,107731]"/>
  <match src="internal: internal [84925,84933]" dest="internal: internal [82846,82854]"/>
  <match src=",: , [73455,73456]" dest=",: , [71028,71029]"/>
  <match src="returns: returns [75062,75069]" dest="returns: returns [72689,72696]"/>
  <match src=",: , [7237,7238]" dest=",: , [8086,8087]"/>
  <match src="call_argument [74209,74223]" dest="call_argument [71809,71823]"/>
  <match src="(: ( [19589,19590]" dest="(: ( [19244,19245]"/>
  <match src="primitive_type [47673,47680]" dest="primitive_type [44533,44540]"/>
  <match src="member_expression [57420,57430]" dest="member_expression [54519,54529]"/>
  <match src="call_argument [115087,115093]" dest="call_argument [107080,107086]"/>
  <match src="primitive_type [73846,73850]" dest="primitive_type [71435,71439]"/>
  <match src="user_defined_type [101648,101654]" dest="user_defined_type [100059,100065]"/>
  <match src="identifier: _remove [79409,79416]" dest="identifier: _remove [77177,77184]"/>
  <match src="identifier: tokenId [98265,98272]" dest="identifier: tokenId [96577,96584]"/>
  <match src="binary_expression [8726,8768]" dest="binary_expression [9618,9660]"/>
  <match src="solidity_version:  0.7.5 [6305,6311]" dest="solidity_version:  0.7.5 [6512,6518]"/>
  <match src="memory: memory [12619,12625]" dest="memory: memory [13596,13602]"/>
  <match src="(: ( [70585,70586]" dest="(: ( [68081,68082]"/>
  <match src="parenthesized_expression [13478,13492]" dest="parenthesized_expression [14473,14487]"/>
  <match src="identifier: addr [34414,34418]" dest="identifier: addr [30705,30709]"/>
  <match src="uint256: uint256 [100062,100069]" dest="uint256: uint256 [98422,98429]"/>
  <match src="function_body [98291,98771]" dest="function_body [96603,97098]"/>
  <match src="==: == [110760,110762]" dest="==: == [109255,109257]"/>
  <match src="state_mutability [68791,68795]" dest="state_mutability [66227,66231]"/>
  <match src="{: { [82444,82445]" dest="{: { [80291,80292]"/>
  <match src="external: external [30600,30608]" dest="external: external [26783,26791]"/>
  <match src="identifier: _token [46112,46118]" dest="identifier: _token [42937,42943]"/>
  <match src="(: ( [2493,2494]" dest="(: ( [2571,2572]"/>
  <match src="member_expression [100237,100252]" dest="member_expression [98603,98618]"/>
  <match src="[: [ [72273,72274]" dest="[: [ [69807,69808]"/>
  <match src="string_literal [96945,96975]" dest="string_literal [95205,95235]"/>
  <match src="uint256: uint256 [7096,7103]" dest="uint256: uint256 [7940,7947]"/>
  <match src="call_expression [102914,102929]" dest="call_expression [101368,101383]"/>
  <match src="(: ( [47783,47784]" dest="(: ( [44644,44645]"/>
  <match src="array_access [72495,72521]" dest="array_access [70035,70061]"/>
  <match src="identifier: tokenId [30591,30598]" dest="identifier: tokenId [26774,26781]"/>
  <match src="[: [ [90771,90772]" dest="[: [ [88862,88863]"/>
  <match src="&gt;=: &gt;= [9804,9806]" dest="&gt;=: &gt;= [10716,10718]"/>
  <match src="call_argument [84341,84351]" dest="call_argument [82244,82254]"/>
  <match src="(: ( [35009,35010]" dest="(: ( [31317,31318]"/>
  <match src="returns: returns [6500,6507]" dest="returns: returns [7327,7334]"/>
  <match src="bool: bool [105423,105427]" dest="bool: bool [119985,119989]"/>
  <match src="comment: /**  * @title ERC721Relayer  * @dev Functionality for bridging multiple tokens to the other side of the bridge.  */ [35765,35880]" dest="comment: /**  * @title ERC721Relayer  * @dev Functionality for bridging multiple tokens to the other side of the bridge.  */ [32095,32213]"/>
  <match src="return: return [46287,46293]" dest="return: return [43114,43120]"/>
  <match src="): ) [62583,62584]" dest="): ) [59832,59833]"/>
  <match src="}: } [39281,39282]" dest="}: } [35695,35696]"/>
  <match src="identifier: _holderTokens [90758,90771]" dest="identifier: _holderTokens [88849,88862]"/>
  <match src="identifier: valueIndex [71713,71723]" dest="identifier: valueIndex [69236,69246]"/>
  <match src="primitive_type [75446,75450]" dest="primitive_type [73090,73094]"/>
  <match src="): ) [98378,98379]" dest="): ) [96691,96692]"/>
  <match src="return_type_definition [74149,74163]" dest="return_type_definition [71748,71762]"/>
  <match src="parameter [39390,39407]" dest="parameter [35809,35826]"/>
  <match src="): ) [91697,91698]" dest="): ) [89816,89817]"/>
  <match src="): ) [100482,100483]" dest="): ) [98854,98855]"/>
  <match src="parameter [37001,37017]" dest="parameter [33364,33380]"/>
  <match src="function_body [102009,102074]" dest="function_body [100434,100502]"/>
  <match src="call_expression [2210,2265]" dest="call_expression [2281,2336]"/>
  <match src="(: ( [46142,46143]" dest="(: ( [42967,42968]"/>
  <match src="call_argument [23955,24002]" dest="call_argument [38829,38872]"/>
  <match src="type_name [58533,58540]" dest="type_name [55660,55667]"/>
  <match src="(: ( [107510,107511]" dest="(: ( [105368,105369]"/>
  <match src=".: . [75477,75478]" dest=".: . [73122,73123]"/>
  <match src="(: ( [57743,57744]" dest="(: ( [54848,54849]"/>
  <match src="!=: != [57533,57535]" dest="!=: != [54633,54635]"/>
  <match src="call_argument [20910,20924]" dest="call_argument [20464,20478]"/>
  <match src="primitive_type [26260,26267]" dest="primitive_type [22121,22128]"/>
  <match src="identifier: encodePacked [23959,23971]" dest="identifier: encodePacked [38833,38845]"/>
  <match src="call_argument [48858,48871]" dest="call_argument [45738,45751]"/>
  <match src="identifier: sender [4705,4711]" dest="identifier: sender [4846,4852]"/>
  <match src="type_name [6942,6949]" dest="type_name [7781,7788]"/>
  <match src="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/components/common/FailedMessagesProcessor.sol [18579,18680]" dest="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/components/common/FailedMessagesProcessor.sol [18202,18303]"/>
  <match src="address: address [98231,98238]" dest="address: address [96543,96550]"/>
  <match src=",: , [117520,117521]" dest=",: , [115946,115947]"/>
  <match src="identifier: value [20416,20421]" dest="identifier: value [19971,19976]"/>
  <match src="[: [ [16342,16343]" dest="[: [ [16826,16827]"/>
  <match src="(: ( [76669,76670]" dest="(: ( [74352,74353]"/>
  <match src="): ) [105384,105385]" dest="): ) [119946,119947]"/>
  <match src="&quot;: &quot; [48749,48750]" dest="&quot;: &quot; [45628,45629]"/>
  <match src="struct: struct [75167,75173]" dest="struct: struct [72801,72807]"/>
  <match src="): ) [98503,98504]" dest="): ) [96819,96820]"/>
  <match src="(: ( [116373,116374]" dest="(: ( [115000,115001]"/>
  <match src="function_definition [22134,22212]" dest="function_definition [21689,21767]"/>
  <match src="pure: pure [68164,68168]" dest="pure: pure [65584,65588]"/>
  <match src=",: , [88804,88805]" dest=",: , [86836,86837]"/>
  <match src="variable_declaration [113164,113182]" dest="variable_declaration [109413,109431]"/>
  <match src="primitive_type [111983,111990]" dest="primitive_type [110139,110146]"/>
  <match src="): ) [33567,33568]" dest="): ) [29837,29838]"/>
  <match src="identifier: tokenId [93487,93494]" dest="identifier: tokenId [91659,91666]"/>
  <match src="identifier: tokenURI [112757,112765]" dest="identifier: tokenURI [111633,111641]"/>
  <match src="array_access [45084,45148]" dest="array_access [41888,41952]"/>
  <match src="primitive_type [18929,18936]" dest="primitive_type [18563,18570]"/>
  <match src="identifier: pop [80734,80737]" dest="identifier: pop [78525,78528]"/>
  <match src="visibility [86362,86369]" dest="visibility [84335,84342]"/>
  <match src="modifier: modifier [14375,14383]" dest="modifier: modifier [15235,15243]"/>
  <match src="call_argument [85015,85018]" dest="call_argument [82937,82940]"/>
  <match src="identifier: _token [106208,106214]" dest="identifier: _token [104036,104042]"/>
  <match src=",: , [111053,111054]" dest=",: , [120838,120839]"/>
  <match src="identifier: tokenId [94563,94570]" dest="identifier: tokenId [92758,92765]"/>
  <match src="(: ( [68804,68805]" dest="(: ( [66240,66241]"/>
  <match src="identifier: tokenURI [112524,112532]" dest="identifier: tokenURI [112141,112149]"/>
  <match src="(: ( [116482,116483]" dest="(: ( [115111,115112]"/>
  <match src="type_name [23449,23456]" dest="type_name [38326,38333]"/>
  <match src="identifier: from [30565,30569]" dest="identifier: from [26748,26752]"/>
  <match src="identifier: map [78763,78766]" dest="identifier: map [76512,76515]"/>
  <match src="inheritance_specifier [104309,104320]" dest="inheritance_specifier [102820,102831]"/>
  <match src="call_argument [95963,95965]" dest="call_argument [94197,94199]"/>
  <match src="primitive_type [107156,107163]" dest="primitive_type [105005,105012]"/>
  <match src="primitive_type [46169,46173]" dest="primitive_type [42995,42999]"/>
  <match src="(: ( [2544,2545]" dest="(: ( [2623,2624]"/>
  <match src="type_name [88758,88765]" dest="type_name [86789,86796]"/>
  <match src="(: ( [8725,8726]" dest="(: ( [9617,9618]"/>
  <match src="function: function [40967,40975]" dest="function: function [37449,37457]"/>
  <match src="}: } [59172,59173]" dest="}: } [56315,56316]"/>
  <match src="identifier: _baseURI [103204,103212]" dest="identifier: _baseURI [101667,101675]"/>
  <match src="(: ( [65442,65443]" dest="(: ( [62783,62784]"/>
  <match src="identifier: _owner [56717,56723]" dest="identifier: _owner [53797,53803]"/>
  <match src="type_name [48648,48655]" dest="type_name [45526,45533]"/>
  <match src="function_definition [18175,18280]" dest="function_definition [17679,17786]"/>
  <match src="): ) [79468,79469]" dest="): ) [77236,77237]"/>
  <match src="identifier: value [70622,70627]" dest="identifier: value [68119,68124]"/>
  <match src="identifier: _set [78563,78567]" dest="identifier: _set [76310,76314]"/>
  <match src="contract_declaration [47209,48961]" dest="contract_declaration [44061,45845]"/>
  <match src="): ) [45744,45745]" dest="): ) [42560,42561]"/>
  <match src="(: ( [75070,75071]" dest="(: ( [72697,72698]"/>
  <match src="): ) [48669,48670]" dest="): ) [45547,45548]"/>
  <match src="identifier: index [73373,73378]" dest="identifier: index [70945,70950]"/>
  <match src="identifier: _tokenURI [98971,98980]" dest="identifier: _tokenURI [97307,97316]"/>
  <match src="identifier: _token [111535,111541]" dest="identifier: _token [110872,110878]"/>
  <match src="(: ( [83534,83535]" dest="(: ( [81416,81417]"/>
  <match src="return: return [41048,41054]" dest="return: return [37531,37537]"/>
  <match src="comment: /**      * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.      */ [44123,44213]" dest="comment: /**      * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.      */ [40896,40988]"/>
  <match src="address: address [84653,84660]" dest="address: address [82567,82574]"/>
  <match src="{: { [4906,4907]" dest="{: { [5054,5055]"/>
  <match src="unary_expression [38469,38476]" dest="unary_expression [34863,34870]"/>
  <match src="call_argument [38496,38500]" dest="call_argument [34892,34896]"/>
  <match src="return_type_definition [75062,75079]" dest="return_type_definition [72689,72706]"/>
  <match src="parameter [6444,6451]" dest="parameter [7269,7276]"/>
  <match src="visibility [12355,12363]" dest="visibility [13327,13335]"/>
  <match src="{: { [8232,8233]" dest="{: { [9116,9117]"/>
  <match src="string_literal [88806,88850]" dest="string_literal [86838,86882]"/>
  <match src="call_argument [37517,37525]" dest="call_argument [33892,33900]"/>
  <match src="parameter [30583,30598]" dest="parameter [26766,26781]"/>
  <match src="return: return [83837,83843]" dest="return: return [81727,81733]"/>
  <match src="identifier: tokenURI [44227,44235]" dest="identifier: tokenURI [41003,41011]"/>
  <match src="call_argument [48938,48951]" dest="call_argument [45820,45833]"/>
  <match src="identifier: symbol [107327,107333]" dest="identifier: symbol [105180,105186]"/>
  <match src="(: ( [93357,93358]" dest="(: ( [91528,91529]"/>
  <match src="else: else [13449,13453]" dest="else: else [14443,14447]"/>
  <match src="identifier: UintSet [75174,75181]" dest="identifier: UintSet [72808,72815]"/>
  <match src=",: , [97148,97149]" dest=",: , [95416,95417]"/>
  <match src="call_argument [114295,114301]" dest="call_argument [112899,112905]"/>
  <match src="contract_body [77512,85045]" dest="contract_body [75228,82969]"/>
  <match src="returns: returns [49844,49851]" dest="returns: returns [46756,46763]"/>
  <match src="comment: /**      * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients      * are aware of the ERC721 protocol to prevent tokens from being forever locked.      *      * Requirements:      *      * - `from` cannot be the zero address.      * - `to` cannot be the zero address.      * - `tokenId` token must exist and be owned by `from`.      * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.      *      * Emits a {Transfer} event.      */ [29836,30526]" dest="comment: /**      * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients      * are aware of the ERC721 protocol to prevent tokens from being forever locked.      *      * Requirements:      *      * - `from` cannot be the zero address.      * - `to` cannot be the zero address.      * - `tokenId` token must exist and be owned by `from`.      * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.      *      * Emits a {Transfer} event.      */ [26005,26708]"/>
  <match src="expression_statement [103562,103595]" dest="expression_statement [102035,102068]"/>
  <match src="{: { [107429,107430]" dest="{: { [105284,105285]"/>
  <match src="solidity_version:  0.7.5 [39540,39546]" dest="solidity_version:  0.7.5 [35966,35972]"/>
  <match src="state_mutability [3849,3853]" dest="state_mutability [3961,3965]"/>
  <match src=",: , [94502,94503]" dest=",: , [92696,92697]"/>
  <match src="address: address [40165,40172]" dest="address: address [36618,36625]"/>
  <match src="expression_statement [57557,57602]" dest="expression_statement [54658,54703]"/>
  <match src="visibility [2176,2184]" dest="visibility [2246,2254]"/>
  <match src="event_paramater [29440,29453]" dest="event_paramater [25593,25606]"/>
  <match src="parameter [79434,79445]" dest="parameter [77202,77213]"/>
  <match src="bool: bool [20848,20852]" dest="bool: bool [20401,20405]"/>
  <match src="identifier: sub [65439,65442]" dest="identifier: sub [62780,62783]"/>
  <match src="visibility [49620,49628]" dest="visibility [46524,46532]"/>
  <match src="unary_expression [109733,109766]" dest="unary_expression [107679,107712]"/>
  <match src="comment: // File: @openzeppelin/contracts/utils/EnumerableSet.sol [68886,68942]" dest="comment: // File: @openzeppelin/contracts/utils/EnumerableSet.sol [66328,66384]"/>
  <match src="identifier: map [84341,84344]" dest="identifier: map [82244,82247]"/>
  <match src="]: ] [72182,72183]" dest="]: ] [69714,69715]"/>
  <match src="==: == [43153,43155]" dest="==: == [39884,39886]"/>
  <match src="primitive_type [45025,45031]" dest="primitive_type [41827,41833]"/>
  <match src="identifier: staticcall [45629,45639]" dest="identifier: staticcall [42444,42454]"/>
  <match src="solidity_pragma_token [101503,101517]" dest="solidity_pragma_token [99905,99919]"/>
  <match src="bool: bool [32310,32314]" dest="bool: bool [28545,28549]"/>
  <match src="identifier: _values [72982,72989]" dest="identifier: _values [70541,70548]"/>
  <match src="address: address [25632,25639]" dest="address: address [22670,22677]"/>
  <match src="}: } [57837,57838]" dest="}: } [54943,54944]"/>
  <match src="user_defined_type [104470,104487]" dest="user_defined_type [102988,103005]"/>
  <match src="identifier: Strings [42773,42780]" dest="identifier: Strings [39496,39503]"/>
  <match src=",: , [75031,75032]" dest=",: , [72658,72659]"/>
  <match src="call_argument [116483,116493]" dest="call_argument [115112,115122]"/>
  <match src="{: { [78636,78637]" dest="{: { [76383,76384]"/>
  <match src="uint256: uint256 [31887,31894]" dest="uint256: uint256 [28110,28117]"/>
  <match src="identifier: msg [4701,4704]" dest="identifier: msg [4842,4845]"/>
  <match src="member_expression [46221,46243]" dest="member_expression [43047,43069]"/>
  <match src="(: ( [50645,50646]" dest="(: ( [47584,47585]"/>
  <match src="{: { [95006,95007]" dest="{: { [93212,93213]"/>
  <match src="parameter [84587,84615]" dest="parameter [82501,82529]"/>
  <match src=".: . [2898,2899]" dest=".: . [2986,2987]"/>
  <match src="returns: returns [74604,74611]" dest="returns: returns [72217,72224]"/>
  <match src="visibility [18489,18497]" dest="visibility [18001,18009]"/>
  <match src="call_expression [25646,25671]" dest="call_expression [22684,22709]"/>
  <match src="solidity_pragma_token [54886,54900]" dest="solidity_pragma_token [51912,51926]"/>
  <match src="member_expression [83634,83644]" dest="member_expression [81517,81527]"/>
  <match src="string [91630,91688]" dest="string [89748,89806]"/>
  <match src="): ) [96818,96819]" dest="): ) [95076,95077]"/>
  <match src="inheritance_specifier [28859,28866]" dest="inheritance_specifier [24998,25005]"/>
  <match src="identifier: boolStorage [498,509]" dest="identifier: boolStorage [511,522]"/>
  <match src="state_mutability [73388,73392]" dest="state_mutability [70960,70964]"/>
  <match src="identifier: _token [23176,23182]" dest="identifier: _token [110428,110434]"/>
  <match src="&quot;: &quot; [89078,89079]" dest="&quot;: &quot; [87119,87120]"/>
  <match src="}: } [1246,1247]" dest="}: } [1286,1287]"/>
  <match src="call_argument [111660,111729]" dest="call_argument [110992,111061]"/>
  <match src="modifier_invocation [103494,103503]" dest="modifier_invocation [101965,101974]"/>
  <match src="yul_decimal_number: 0 [54650,54651]" dest="yul_decimal_number: 0 [51664,51665]"/>
  <match src="): ) [6784,6785]" dest="): ) [7619,7620]"/>
  <match src="type_name [110839,110844]" dest="type_name [110284,110289]"/>
  <match src="): ) [110657,110658]" dest="): ) [109150,109151]"/>
  <match src="primitive_type [11321,11326]" dest="primitive_type [12268,12273]"/>
  <match src="false: false [38585,38590]" dest="false: false [34983,34988]"/>
  <match src="identifier: bridgeContract [110986,111000]" dest="identifier: bridgeContract [120771,120785]"/>
  <match src="identifier: b [66817,66818]" dest="identifier: b [64201,64202]"/>
  <match src="public: public [50648,50654]" dest="public: public [47587,47593]"/>
  <match src="string_literal [98415,98453]" dest="string_literal [96729,96767]"/>
  <match src="): ) [57497,57498]" dest="): ) [54596,54597]"/>
  <match src="(: ( [109020,109021]" dest="(: ( [106875,106876]"/>
  <match src="primitive_type [93267,93274]" dest="primitive_type [91437,91444]"/>
  <match src="call_argument [3220,3264]" dest="call_argument [3316,3360]"/>
  <match src="primitive_type [10847,10854]" dest="primitive_type [11784,11791]"/>
  <match src="state_mutability [43961,43965]" dest="state_mutability [40727,40731]"/>
  <match src="}: } [14716,14717]" dest="}: } [15625,15626]"/>
  <match src="identifier: tokenId [31895,31902]" dest="identifier: tokenId [28118,28125]"/>
  <match src="function: function [8166,8174]" dest="function: function [9050,9058]"/>
  <match src="function_definition [75676,75811]" dest="function_definition [73330,73467]"/>
  <match src="yul_identifier [56621,56632]" dest="yul_identifier [53697,53708]"/>
  <match src="returns: returns [12364,12371]" dest="returns: returns [13336,13343]"/>
  <match src="private: private [87721,87728]" dest="private: private [85725,85732]"/>
  <match src="yul_identifier [53140,53143]" dest="yul_identifier [50125,50128]"/>
  <match src="return: return [91031,91037]" dest="return: return [89130,89136]"/>
  <match src=".: . [19690,19691]" dest=".: . [19283,19284]"/>
  <match src="primitive_type [34659,34663]" dest="primitive_type [30962,30966]"/>
  <match src="!: ! [96926,96927]" dest="!: ! [95186,95187]"/>
  <match src="primitive_type [81727,81734]" dest="primitive_type [79553,79560]"/>
  <match src="variable_declaration_statement [113164,113291]" dest="variable_declaration_statement [109413,109459]"/>
  <match src="]: ] [48873,48874]" dest="]: ] [45753,45754]"/>
  <match src="bytes: bytes [11321,11326]" dest="bytes: bytes [12268,12273]"/>
  <match src="identifier: onlyBridge [101996,102006]" dest="identifier: onlyBridge [100421,100431]"/>
  <match src="(: ( [97508,97509]" dest="(: ( [95792,95793]"/>
  <match src="binary_expression [102215,102250]" dest="binary_expression [100649,100684]"/>
  <match src="virtual: virtual [98991,98998]" dest="virtual: virtual [97327,97334]"/>
  <match src="member_expression [83082,83092]" dest="member_expression [80949,80959]"/>
  <match src="event_paramater [40329,40344]" dest="event_paramater [36786,36801]"/>
  <match src="}: } [61076,61077]" dest="}: } [58276,58277]"/>
  <match src="identifier: owner [91570,91575]" dest="identifier: owner [89687,89692]"/>
  <match src="solidity_pragma_token [76766,76781]" dest="solidity_pragma_token [74456,74471]"/>
  <match src="return: return [75090,75096]" dest="return: return [72718,72724]"/>
  <match src="type_name [39093,39100]" dest="type_name [35501,35508]"/>
  <match src="): ) [105463,105464]" dest="): ) [120026,120027]"/>
  <match src="primitive_type [113164,113171]" dest="primitive_type [109413,109420]"/>
  <match src="pure: pure [41001,41005]" dest="pure: pure [37483,37487]"/>
  <match src="): ) [36390,36391]" dest="): ) [32737,32738]"/>
  <match src="identifier: Map [82355,82358]" dest="identifier: Map [80202,80205]"/>
  <match src="uint256: uint256 [91819,91826]" dest="uint256: uint256 [89946,89953]"/>
  <match src="uint256: uint256 [55832,55839]" dest="uint256: uint256 [52888,52895]"/>
  <match src="call_expression [100237,100483]" dest="call_expression [98603,98855]"/>
  <match src="member_expression [72043,72054]" dest="member_expression [69572,69583]"/>
  <match src="solidity: solidity [33323,33331]" dest="solidity: solidity [29585,29593]"/>
  <match src=":=: := [13331,13333]" dest=":=: := [14322,14324]"/>
  <match src="comment: /**      * @dev Retrieves address of the bridged token contract associated with a specific native token contract on the other side.      * @param _nativeToken address of the native token contract on the other side.      * @return address of the deployed bridged token contract.      */ [47354,47639]" dest="comment: /**      * @dev Retrieves address of the bridged token contract associated with a specific native token contract on the other side.      * @param _nativeToken address of the native token contract on the other side.      * @return address of the deployed bridged token contract.      */ [44209,44498]"/>
  <match src="bool: bool [100124,100128]" dest="bool: bool [98485,98489]"/>
  <match src="primitive_type [40712,40718]" dest="primitive_type [37182,37188]"/>
  <match src="call_argument [108600,108609]" dest="call_argument [106445,106454]"/>
  <match src="primitive_type [6942,6949]" dest="primitive_type [7781,7788]"/>
  <match src="mapping: mapping [55824,55831]" dest="mapping: mapping [52880,52887]"/>
  <match src="(: ( [12596,12597]" dest="(: ( [13573,13574]"/>
  <match src="yul_hex_number: 0x40 [51475,51479]" dest="yul_hex_number: 0x40 [48431,48435]"/>
  <match src="assembly: assembly [57015,57023]" dest="assembly: assembly [54103,54111]"/>
  <match src="primitive_type [43203,43210]" dest="primitive_type [39937,39944]"/>
  <match src=",: , [117268,117269]" dest=",: , [115790,115791]"/>
  <match src="call_argument [117541,117551]" dest="call_argument [115967,115977]"/>
  <match src="}: } [74664,74665]" dest="}: } [72279,72280]"/>
  <match src="): ) [28649,28650]" dest="): ) [24776,24777]"/>
  <match src="): ) [11333,11334]" dest="): ) [12280,12281]"/>
  <match src=".: . [112700,112701]" dest=".: . [111576,111577]"/>
  <match src="(: ( [112825,112826]" dest="(: ( [112293,112294]"/>
  <match src="): ) [26298,26299]" dest="): ) [22159,22160]"/>
  <match src="primitive_type [83601,83605]" dest="primitive_type [81483,81487]"/>
  <match src="comment: /**      * @dev Retrieves the implementation contract address, mirrored token image.      * @return impl token image address.      */ [56797,56930]" dest="comment: /**      * @dev Retrieves the implementation contract address, mirrored token image.      * @return impl token image address.      */ [53880,54016]"/>
  <match src="): ) [90700,90701]" dest="): ) [88790,88791]"/>
  <match src="identifier: _safeTransfer [93463,93476]" dest="identifier: _safeTransfer [91635,91648]"/>
  <match src=",: , [97593,97594]" dest=",: , [95880,95881]"/>
  <match src="): ) [58592,58593]" dest="): ) [55719,55720]"/>
  <match src="identifier: _recipient [3538,3548]" dest="identifier: _recipient [3642,3652]"/>
  <match src="bytes32: bytes32 [72724,72731]" dest="bytes32: bytes32 [70275,70282]"/>
  <match src="parameter [37434,37447]" dest="parameter [33808,33821]"/>
  <match src="yul_decimal_number: 20 [34479,34481]" dest="yul_decimal_number: 20 [30772,30774]"/>
  <match src="&quot;: &quot; [27302,27303]" dest="&quot;: &quot; [39304,39305]"/>
  <match src="): ) [111622,111623]" dest="): ) [110939,110940]"/>
  <match src="address: address [88794,88801]" dest="address: address [86826,86833]"/>
  <match src="[: [ [70165,70166]" dest="[: [ [67648,67649]"/>
  <match src="event_paramater [21816,21837]" dest="event_paramater [21373,21394]"/>
  <match src="type_cast_expression [75486,75500]" dest="type_cast_expression [73131,73145]"/>
  <match src="comment: // Equivalent to contains(map, key) [79646,79681]" dest="comment: // Equivalent to contains(map, key) [77418,77453]"/>
  <match src="number_literal: 0 [96369,96370]" dest="number_literal: 0 [94612,94613]"/>
  <match src="visibility [39440,39448]" dest="visibility [35861,35869]"/>
  <match src="type_name [90687,90694]" dest="type_name [88777,88784]"/>
  <match src="identifier: success [12941,12948]" dest="identifier: success [13923,13930]"/>
  <match src="identifier: _tokenId [102648,102656]" dest="identifier: _tokenId [101093,101101]"/>
  <match src="primitive_type [93052,93059]" dest="primitive_type [91215,91222]"/>
  <match src="comment: /**      * @dev See {IERC721-safeTransferFrom}.      */ [93167,93222]" dest="comment: /**      * @dev See {IERC721-safeTransferFrom}.      */ [91334,91391]"/>
  <match src="solidity_pragma_token [1314,1328]" dest="solidity_pragma_token [1358,1372]"/>
  <match src="internal: internal [3149,3157]" dest="internal: internal [3244,3252]"/>
  <match src="visibility [31904,31912]" dest="visibility [28127,28135]"/>
  <match src="abstract: abstract [18811,18819]" dest="abstract: abstract [18444,18452]"/>
  <match src="inheritance_specifier [58139,58153]" dest="inheritance_specifier [55258,55272]"/>
  <match src="call_argument [111954,111960]" dest="call_argument [110110,110116]"/>
  <match src="uint256: uint256 [37001,37008]" dest="uint256: uint256 [33364,33371]"/>
  <match src="identifier: _ERC721_RECEIVED [85755,85771]" dest="identifier: _ERC721_RECEIVED [83710,83726]"/>
  <match src="state_variable_declaration [299,349]" dest="state_variable_declaration [309,359]"/>
  <match src=",: , [46778,46779]" dest=",: , [43615,43616]"/>
  <match src="view: view [6971,6975]" dest="view: view [7810,7814]"/>
  <match src="primitive_type [111551,111558]" dest="primitive_type [109936,109943]"/>
  <match src="comment: // Token name [86290,86303]" dest="comment: // Token name [84259,84272]"/>
  <match src="call_argument [10016,10076]" dest="call_argument [10932,10992]"/>
  <match src="user_defined_type [71112,71115]" dest="user_defined_type [68626,68629]"/>
  <match src="): ) [90235,90236]" dest="): ) [88310,88311]"/>
  <match src="parameter [65888,65897]" dest="parameter [63246,63255]"/>
  <match src=".: . [71301,71302]" dest=".: . [68817,68818]"/>
  <match src="primitive_type [8484,8491]" dest="primitive_type [9372,9379]"/>
  <match src="type_name [84210,84226]" dest="type_name [82112,82128]"/>
  <match src="(: ( [105551,105552]" dest="(: ( [120117,120118]"/>
  <match src="binary_expression [43509,43523]" dest="binary_expression [40253,40267]"/>
  <match src="(: ( [20276,20277]" dest="(: ( [19827,19828]"/>
  <match src="call_expression [46831,46898]" dest="call_expression [43669,43736]"/>
  <match src="identifier: bridgeContract [102229,102243]" dest="identifier: bridgeContract [100663,100677]"/>
  <match src="state_mutability [46129,46133]" dest="state_mutability [42954,42958]"/>
  <match src="primitive_type [106219,106226]" dest="primitive_type [104047,104054]"/>
  <match src="member_expression [100289,100325]" dest="member_expression [98656,98692]"/>
  <match src="assignment_expression [107447,107460]" dest="assignment_expression [105303,105316]"/>
  <match src="function: function [96207,96215]" dest="function: function [94448,94456]"/>
  <match src="state_mutability [89214,89218]" dest="state_mutability [87261,87265]"/>
  <match src="(: ( [91204,91205]" dest="(: ( [89309,89310]"/>
  <match src=",: , [11938,11939]" dest=",: , [12901,12902]"/>
  <match src="identifier: NewTokenRegistered [47270,47288]" dest="identifier: NewTokenRegistered [44123,44141]"/>
  <match src="identifier: _token [117186,117192]" dest="identifier: _token [113675,113681]"/>
  <match src="public: public [49832,49838]" dest="public: public [46744,46750]"/>
  <match src="identifier: onlyOwner [103915,103924]" dest="identifier: onlyOwner [102397,102406]"/>
  <match src="comment: // in bytes32. [70084,70098]" dest="comment: // in bytes32. [67563,67577]"/>
  <match src="identifier: _tokenId [114983,114991]" dest="identifier: _tokenId [113607,113615]"/>
  <match src="return: return [70856,70862]" dest="return: return [68358,68364]"/>
  <match src="state_mutability [92496,92500]" dest="state_mutability [90642,90646]"/>
  <match src="identifier: _values [72047,72054]" dest="identifier: _values [69576,69583]"/>
  <match src="(: ( [84981,84982]" dest="(: ( [82903,82904]"/>
  <match src="number_literal: 0 [107292,107293]" dest="number_literal: 0 [105144,105145]"/>
  <match src="primitive_type [90517,90523]" dest="primitive_type [88600,88606]"/>
  <match src="identifier: require [81755,81762]" dest="identifier: require [79582,79589]"/>
  <match src="type_name [55875,55881]" dest="type_name [52932,52938]"/>
  <match src="): ) [83430,83431]" dest="): ) [81306,81307]"/>
  <match src="yul_identifier [57812,57827]" dest="yul_identifier [54917,54932]"/>
  <match src="type_name [14919,14926]" dest="type_name [15834,15841]"/>
  <match src="member_expression [12405,12426]" dest="member_expression [13378,13399]"/>
  <match src="parameter [36951,36964]" dest="parameter [33312,33325]"/>
  <match src="call_argument [66249,66259]" dest="call_argument [63616,63626]"/>
  <match src="variable_declaration [107076,107096]" dest="variable_declaration [104924,104944]"/>
  <match src="call_argument [109681,109714]" dest="call_argument [107626,107659]"/>
  <match src="return_type_definition [105414,105428]" dest="return_type_definition [119976,119990]"/>
  <match src="identifier: _mediatorContract [105552,105569]" dest="identifier: _mediatorContract [120118,120135]"/>
  <match src="}: } [65616,65617]" dest="}: } [62962,62963]"/>
  <match src=",: , [96253,96254]" dest=",: , [94494,94495]"/>
  <match src="override: override [113885,113893]" dest="override: override [112865,112873]"/>
  <match src="type_name [71161,71165]" dest="type_name [68675,68679]"/>
  <match src="call_expression [105803,105818]" dest="call_expression [120258,120273]"/>
  <match src="modifier_definition [101987,102074]" dest="modifier_definition [100412,100502]"/>
  <match src="call_argument [50166,50172]" dest="call_argument [47087,47093]"/>
  <match src="constant: constant [13960,13968]" dest="constant: constant [14983,14991]"/>
  <match src="call_argument [114164,114185]" dest="call_argument [22211,22229]"/>
  <match src="!=: != [43460,43462]" dest="!=: != [40203,40205]"/>
  <match src="constructor_definition [101727,101910]" dest="constructor_definition [100141,100330]"/>
  <match src="call_argument [89621,89670]" dest="call_argument [87683,87732]"/>
  <match src="primitive_type [55595,55602]" dest="primitive_type [52645,52652]"/>
  <match src="): ) [1598,1599]" dest="): ) [1648,1649]"/>
  <match src="type_name [115557,115564]" dest="type_name [114161,114168]"/>
  <match src="function_definition [90477,90564]" dest="function_definition [88560,88649]"/>
  <match src="identifier: msg [14603,14606]" dest="identifier: msg [15513,15516]"/>
  <match src="identifier: onlyMediator [109114,109126]" dest="identifier: onlyMediator [106973,106985]"/>
  <match src="function: function [89191,89199]" dest="function: function [87238,87246]"/>
  <match src="): ) [14675,14676]" dest="): ) [15583,15584]"/>
  <match src="}: } [118001,118002]" dest="}: } [117210,117211]"/>
  <match src="number_literal: 0 [41776,41777]" dest="number_literal: 0 [111239,111240]"/>
  <match src="identifier: owner [97509,97514]" dest="identifier: owner [95793,95798]"/>
  <match src="variable_declaration [84320,84333]" dest="variable_declaration [82223,82236]"/>
  <match src="modifier_invocation [102893,102903]" dest="modifier_invocation [101346,101356]"/>
  <match src="parameter [58533,58547]" dest="parameter [55660,55674]"/>
  <match src=",: , [91909,91910]" dest=",: , [90037,90038]"/>
  <match src="type_name [6809,6816]" dest="type_name [7644,7651]"/>
  <match src="{: { [63011,63012]" dest="{: { [60271,60272]"/>
  <match src="call_expression [107313,107346]" dest="call_expression [105166,105199]"/>
  <match src="number_literal: 0 [107164,107165]" dest="number_literal: 0 [105013,105014]"/>
  <match src=",: , [96375,96376]" dest=",: , [94618,94619]"/>
  <match src="function_definition [50622,50686]" dest="function_definition [47561,47625]"/>
  <match src="}: } [75208,75209]" dest="}: } [72844,72845]"/>
  <match src="block_statement [100166,100202]" dest="block_statement [98529,98567]"/>
  <match src="(: ( [95334,95335]" dest="(: ( [93552,93553]"/>
  <match src="identifier: encodeWithSelector [46225,46243]" dest="identifier: encodeWithSelector [43051,43069]"/>
  <match src="type_name [32310,32314]" dest="type_name [28545,28549]"/>
  <match src="=: = [112085,112086]" dest="=: = [111748,111749]"/>
  <match src="primitive_type [96861,96868]" dest="primitive_type [95120,95127]"/>
  <match src="primitive_type [55584,55591]" dest="primitive_type [52634,52641]"/>
  <match src="identifier: map [80567,80570]" dest="identifier: map [78355,78358]"/>
  <match src="internal: internal [21399,21407]" dest="internal: internal [20940,20948]"/>
  <match src="identifier: major [39688,39693]" dest="identifier: major [36121,36126]"/>
  <match src="struct_member [78114,78134]" dest="struct_member [75847,75867]"/>
  <match src="member_expression [115638,115661]" dest="member_expression [114245,114268]"/>
  <match src="]: ] [97059,97060]" dest="]: ] [95323,95324]"/>
  <match src="(: ( [29814,29815]" dest="(: ( [25981,25982]"/>
  <match src="identifier: _nativeToken [109805,109817]" dest="identifier: _nativeToken [107752,107764]"/>
  <match src="type_name [34659,34663]" dest="type_name [30962,30966]"/>
  <match src="(: ( [101738,101739]" dest="(: ( [100152,100153]"/>
  <match src="returns: returns [39801,39808]" dest="returns: returns [36239,36246]"/>
  <match src="pure: pure [67469,67473]" dest="pure: pure [64869,64873]"/>
  <match src="{: { [112582,112583]" dest="{: { [111523,111524]"/>
  <match src="): ) [51044,51045]" dest="): ) [47992,47993]"/>
  <match src="identifier: mint [116478,116482]" dest="identifier: mint [115107,115111]"/>
  <match src="function_definition [63462,63660]" dest="function_definition [60737,60938]"/>
  <match src="(: ( [7132,7133]" dest="(: ( [7977,7978]"/>
  <match src="): ) [111052,111053]" dest="): ) [120837,120838]"/>
  <match src="(: ( [57516,57517]" dest="(: ( [54616,54617]"/>
  <match src="): ) [8201,8202]" dest="): ) [9085,9086]"/>
  <match src="{: { [34420,34421]" dest="{: { [30711,30712]"/>
  <match src="function_definition [6335,6392]" dest="function_definition [7158,7215]"/>
  <match src="string_literal [93151,93153]" dest="string_literal [91315,91317]"/>
  <match src="[: [ [82601,82602]" dest="[: [ [80451,80452]"/>
  <match src="parameter [36268,36281]" dest="parameter [32611,32624]"/>
  <match src="string: string [108393,108399]" dest="string: string [106233,106239]"/>
  <match src="identifier: _tokenURI [89696,89705]" dest="identifier: _tokenURI [87760,87769]"/>
  <match src="identifier: value [75421,75426]" dest="identifier: value [73065,73070]"/>
  <match src="identifier: b [67429,67430]" dest="identifier: b [64829,64830]"/>
  <match src="external: external [102875,102883]" dest="external: external [101328,101336]"/>
  <match src="identifier: name [112205,112209]" dest="identifier: name [111800,111804]"/>
  <match src="identifier: _holderTokens [55454,55467]" dest="identifier: _holderTokens [52500,52513]"/>
  <match src="call_expression [1534,1576]" dest="call_expression [1584,1626]"/>
  <match src="): ) [92199,92200]" dest="): ) [90336,90337]"/>
  <match src="): ) [89999,90000]" dest="): ) [88070,88071]"/>
  <match src="identifier: c [66249,66250]" dest="identifier: c [63616,63617]"/>
  <match src="expression_statement [117242,117278]" dest="expression_statement [115764,115800]"/>
  <match src="bytes4: bytes4 [55368,55374]" dest="bytes4: bytes4 [52413,52419]"/>
  <match src="comment: // Position of the entry defined by a key in the `entries` array, plus 1 [78144,78216]" dest="comment: // Position of the entry defined by a key in the `entries` array, plus 1 [75879,75951]"/>
  <match src="identifier: to [30579,30581]" dest="identifier: to [26762,26764]"/>
  <match src="internal: internal [21146,21154]" dest="internal: internal [20707,20715]"/>
  <match src="public: public [16273,16279]" dest="public: public [16756,16762]"/>
  <match src="expression_statement [80807,80832]" dest="expression_statement [78601,78626]"/>
  <match src="identifier: tokenId [96811,96818]" dest="identifier: tokenId [95069,95076]"/>
  <match src="(: ( [78878,78879]" dest="(: ( [76630,76631]"/>
  <match src="type_name [33524,33531]" dest="type_name [29794,29801]"/>
  <match src="returns: returns [95294,95301]" dest="returns: returns [93511,93518]"/>
  <match src="parameter [115533,115547]" dest="parameter [114136,114150]"/>
  <match src="identifier: _baseURI [90549,90557]" dest="identifier: _baseURI [88633,88641]"/>
  <match src="}: } [21246,21247]" dest="}: } [20809,20810]"/>
  <match src="(: ( [105816,105817]" dest="(: ( [120271,120272]"/>
  <match src="call_argument [47784,47802]" dest="call_argument [44645,44663]"/>
  <match src="identifier: balanceOf [29551,29560]" dest="identifier: balanceOf [25709,25718]"/>
  <match src="expression_statement [97043,97074]" dest="expression_statement [95307,95338]"/>
  <match src="function_definition [6653,6729]" dest="function_definition [7486,7562]"/>
  <match src="function: function [49810,49818]" dest="function: function [46722,46730]"/>
  <match src="external: external [61947,61955]" dest="external: external [59170,59178]"/>
  <match src="): ) [117192,117193]" dest="): ) [113681,113682]"/>
  <match src="comment: // for temporary variables which are cleared at the end of the call execution. [35413,35491]" dest="comment: // for temporary variables which are cleared at the end of the call execution. [31729,31807]"/>
  <match src="identifier: target [12605,12611]" dest="identifier: target [13582,13588]"/>
  <match src="identifier: to [96308,96310]" dest="identifier: to [94550,94552]"/>
  <match src="primitive_type [45588,45592]" dest="primitive_type [42403,42407]"/>
  <match src="returns: returns [44267,44274]" dest="returns: returns [41043,41050]"/>
  <match src="primitive_type [33201,33208]" dest="primitive_type [29458,29465]"/>
  <match src="): ) [70627,70628]" dest="): ) [68124,68125]"/>
  <match src="parameter [61873,61889]" dest="parameter [59095,59111]"/>
  <match src="function_definition [106056,106236]" dest="function_definition [103883,104065]"/>
  <match src="assignment_expression [59084,59166]" dest="assignment_expression [56226,56308]"/>
  <match src="): ) [60789,60790]" dest="): ) [57982,57983]"/>
  <match src="let: let [53099,53102]" dest="let: let [50084,50087]"/>
  <match src=",: , [21916,21917]" dest=",: , [21467,21468]"/>
  <match src=".: . [73877,73878]" dest=".: . [71467,71468]"/>
  <match src="function: function [7000,7008]" dest="function: function [7841,7849]"/>
  <match src="primitive_type [17945,17952]" dest="primitive_type [111075,111082]"/>
  <match src="primitive_type [7190,7197]" dest="primitive_type [8038,8045]"/>
  <match src="yul_function_call [35504,35585]" dest="yul_function_call [31821,31902]"/>
  <match src="solidity_version:  0.7.5 [39934,39940]" dest="solidity_version:  0.7.5 [36377,36383]"/>
  <match src="identifier: boolStorage [21165,21176]" dest="identifier: boolStorage [20727,20738]"/>
  <match src="string_literal [12437,12477]" dest="string_literal [13410,13450]"/>
  <match src="view: view [47702,47706]" dest="view: view [44562,44566]"/>
  <match src="return: return [24729,24735]" dest="return: return [23364,23370]"/>
  <match src="return_statement [49872,49916]" dest="return_statement [46785,46829]"/>
  <match src="string: string [12327,12333]" dest="string: string [13299,13305]"/>
  <match src="true: true [110823,110827]" dest="true: true [109320,109324]"/>
  <match src="identifier: to [92927,92929]" dest="identifier: to [91084,91086]"/>
  <match src="primitive_type [75097,75104]" dest="primitive_type [72725,72732]"/>
  <match src="return_statement [18531,18569]" dest="return_statement [18044,18082]"/>
  <match src="yul_identifier [13315,13330]" dest="yul_identifier [14306,14321]"/>
  <match src="bytes32: bytes32 [70318,70325]" dest="bytes32: bytes32 [67805,67812]"/>
  <match src="visibility [86499,86506]" dest="visibility [84478,84485]"/>
  <match src="identifier: b [68211,68212]" dest="identifier: b [65632,65633]"/>
  <match src="member_expression [82589,82622]" dest="member_expression [80439,80472]"/>
  <match src="mapping: mapping [411,418]" dest="mapping: mapping [423,430]"/>
  <match src="identifier: _tokenURI [103958,103967]" dest="identifier: _tokenURI [102441,102450]"/>
  <match src="): ) [100427,100428]" dest="): ) [98799,98800]"/>
  <match src="array_access [2195,2266]" dest="array_access [2266,2337]"/>
  <match src="call_argument [75105,75136]" dest="call_argument [72733,72764]"/>
  <match src="pragma_directive [85106,85129]" dest="pragma_directive [83035,83058]"/>
  <match src="): ) [97828,97829]" dest="): ) [96124,96125]"/>
  <match src="): ) [39816,39817]" dest="): ) [36254,36255]"/>
  <match src="bytes32: bytes32 [523,530]" dest="bytes32: bytes32 [537,544]"/>
  <match src="function: function [7299,7307]" dest="function: function [8152,8160]"/>
  <match src="uint256: uint256 [64582,64589]" dest="uint256: uint256 [61892,61899]"/>
  <match src="): ) [115716,115717]" dest="): ) [114324,114325]"/>
  <match src="identifier: from [94402,94406]" dest="identifier: from [92595,92599]"/>
  <match src="type_name [42486,42493]" dest="type_name [39115,39122]"/>
  <match src="bytes4: bytes4 [28631,28637]" dest="bytes4: bytes4 [24758,24764]"/>
  <match src="identifier: value [75939,75944]" dest="identifier: value [73600,73605]"/>
  <match src="returns: returns [54959,54966]" dest="returns: returns [51988,51995]"/>
  <match src="type_name [993,997]" dest="type_name [1022,1026]"/>
  <match src="identifier: value [83029,83034]" dest="identifier: value [80895,80900]"/>
  <match src="visibility [6360,6368]" dest="visibility [7183,7191]"/>
  <match src="(: ( [117513,117514]" dest="(: ( [115939,115940]"/>
  <match src="(: ( [41706,41707]" dest="(: ( [38362,38363]"/>
  <match src="identifier: remove [97814,97820]" dest="identifier: remove [96110,96116]"/>
  <match src="identifier: c [64643,64644]" dest="identifier: c [61954,61955]"/>
  <match src="identifier: _receiver [113000,113009]" dest="identifier: _receiver [112401,112410]"/>
  <match src="{: { [42945,42946]" dest="{: { [39672,39673]"/>
  <match src="identifier: _supportedInterfaces [63613,63633]" dest="identifier: _supportedInterfaces [60890,60910]"/>
  <match src="view: view [81053,81057]" dest="view: view [78858,78862]"/>
  <match src="!: ! [109733,109734]" dest="!: ! [107679,107680]"/>
  <match src="parameter [75713,75726]" dest="parameter [73367,73380]"/>
  <match src="address: address [45523,45530]" dest="address: address [42337,42344]"/>
  <match src="uint256: uint256 [88979,88986]" dest="uint256: uint256 [87019,87026]"/>
  <match src="type_name [68754,68760]" dest="type_name [66190,66196]"/>
  <match src="type_name [114975,114982]" dest="type_name [113599,113606]"/>
  <match src="mload: mload [13334,13339]" dest="mload: mload [14325,14330]"/>
  <match src="function_definition [82086,82233]" dest="function_definition [79926,80075]"/>
  <match src="identifier: spender [95496,95503]" dest="identifier: spender [93716,93723]"/>
  <match src="unary_expression [97707,97724]" dest="unary_expression [95998,96015]"/>
  <match src="type_name [47318,47325]" dest="type_name [44171,44178]"/>
  <match src="(: ( [24325,24326]" dest="(: ( [23954,23955]"/>
  <match src="address: address [39390,39397]" dest="address: address [35809,35816]"/>
  <match src="parameter [20205,20223]" dest="parameter [19755,19773]"/>
  <match src="(: ( [34470,34471]" dest="(: ( [30763,30764]"/>
  <match src="visibility [44253,44261]" dest="visibility [41029,41037]"/>
  <match src="array_access [58611,58685]" dest="array_access [55739,55813]"/>
  <match src="uint256: uint256 [76594,76601]" dest="uint256: uint256 [74276,74283]"/>
  <match src=".: . [82592,82593]" dest=".: . [80442,80443]"/>
  <match src="(: ( [89392,89393]" dest="(: ( [87446,87447]"/>
  <match src="comment: // _tokenOwners are indexed by tokenIds, so .length() returns the number of tokenIds [90938,91022]" dest="comment: // _tokenOwners are indexed by tokenIds, so .length() returns the number of tokenIds [89036,89120]"/>
  <match src="comment: /**     * @dev Returns the key-value pair stored at position `index` in the map. O(1).     *     * Note that there are no guarantees on the ordering of entries inside the     * array, and it may change when more entries are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [81322,81655]" dest="comment: /**     * @dev Returns the key-value pair stored at position `index` in the map. O(1).     *     * Note that there are no guarantees on the ordering of entries inside the     * array, and it may change when more entries are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [79138,79480]"/>
  <match src="type_name [40279,40286]" dest="type_name [36736,36743]"/>
  <match src="memory: memory [10906,10912]" dest="memory: memory [11843,11849]"/>
  <match src="return_type_definition [23898,23915]" dest="return_type_definition [38774,38788]"/>
  <match src="): ) [80738,80739]" dest="): ) [78529,78530]"/>
  <match src="internal: internal [73828,73836]" dest="internal: internal [71417,71425]"/>
  <match src="parameter [6075,6091]" dest="parameter [6273,6289]"/>
  <match src="}: } [20945,20946]" dest="}: } [20500,20501]"/>
  <match src="=: = [100689,100690]" dest="=: = [99067,99068]"/>
  <match src="bool: bool [41707,41711]" dest="bool: bool [38363,38367]"/>
  <match src="uint256: uint256 [60541,60548]" dest="uint256: uint256 [57728,57735]"/>
  <match src="member_expression [19627,19657]" dest="member_expression [19303,19333]"/>
  <match src="parameter [84653,84660]" dest="parameter [82567,82574]"/>
  <match src="parameter [7217,7237]" dest="parameter [8066,8086]"/>
  <match src="parameter [82372,82383]" dest="parameter [80219,80230]"/>
  <match src="variable_declaration [65574,65583]" dest="variable_declaration [62917,62926]"/>
  <match src="private: private [72739,72746]" dest="private: private [70290,70297]"/>
  <match src="): ) [6516,6517]" dest="): ) [7343,7344]"/>
  <match src="): ) [79445,79446]" dest="): ) [77213,77214]"/>
  <match src="(: ( [10899,10900]" dest="(: ( [11836,11837]"/>
  <match src="address: address [74125,74132]" dest="address: address [71724,71731]"/>
  <match src="[: [ [91991,91992]" dest="[: [ [90121,90122]"/>
  <match src="variable_declaration [100493,100506]" dest="variable_declaration [98866,98879]"/>
  <match src="primitive_type [30583,30590]" dest="primitive_type [26766,26773]"/>
  <match src="function: function [67397,67405]" dest="function: function [64797,64805]"/>
  <match src="(: ( [83653,83654]" dest="(: ( [81536,81537]"/>
  <match src="): ) [26299,26300]" dest="): ) [22160,22161]"/>
  <match src="returns: returns [43966,43973]" dest="returns: returns [40732,40739]"/>
  <match src="primitive_type [55703,55710]" dest="primitive_type [52756,52763]"/>
  <match src="(: ( [16019,16020]" dest="(: ( [16494,16495]"/>
  <match src="}: } [1046,1047]" dest="}: } [1077,1078]"/>
  <match src="call_argument [117186,117192]" dest="call_argument [113675,113681]"/>
  <match src="): ) [37465,37466]" dest="): ) [33839,33840]"/>
  <match src="call_argument [117365,117373]" dest="call_argument [115889,115897]"/>
  <match src="): ) [24288,24289]" dest="): ) [23710,23711]"/>
  <match src="(: ( [6382,6383]" dest="(: ( [7205,7206]"/>
  <match src="function: function [72688,72696]" dest="function: function [70239,70247]"/>
  <match src=",: , [92925,92926]" dest=",: , [91082,91083]"/>
  <match src="identifier: _token [46692,46698]" dest="identifier: _token [43528,43534]"/>
  <match src="primitive_type [48648,48655]" dest="primitive_type [45526,45533]"/>
  <match src="parameter [111551,111564]" dest="parameter [109936,109949]"/>
  <match src="): ) [111785,111786]" dest="): ) [110195,110196]"/>
  <match src="identifier: at [84207,84209]" dest="identifier: at [82109,82111]"/>
  <match src="): ) [16860,16861]" dest="): ) [17054,17055]"/>
  <match src="identifier: _receiver [110441,110450]" dest="identifier: _receiver [109019,109028]"/>
  <match src="}: } [93160,93161]" dest="}: } [91325,91326]"/>
  <match src="identifier: onERC721Received [61856,61872]" dest="identifier: onERC721Received [59078,59094]"/>
  <match src="yul_identifier [8675,8683]" dest="yul_identifier [9566,9574]"/>
  <match src="bytes32: bytes32 [73402,73409]" dest="bytes32: bytes32 [70974,70981]"/>
  <match src="address: address [55426,55433]" dest="address: address [52472,52479]"/>
  <match src="primitive_type [78598,78605]" dest="primitive_type [76345,76352]"/>
  <match src="comment: // for temporary variables which are cleared at the end of the call execution. [34906,34984]" dest="comment: // for temporary variables which are cleared at the end of the call execution. [31213,31291]"/>
  <match src="}: } [38693,38694]" dest="}: } [35093,35094]"/>
  <match src="call_argument [96369,96370]" dest="call_argument [94612,94613]"/>
  <match src="variable_declaration [9936,9948]" dest="variable_declaration [10851,10863]"/>
  <match src="function: function [118636,118644]" dest="function: function [116899,116907]"/>
  <match src="(: ( [59105,59106]" dest="(: ( [56247,56248]"/>
  <match src="): ) [61941,61942]" dest="): ) [59163,59164]"/>
  <match src="identifier: bridgedTokenAddress [109785,109804]" dest="identifier: bridgedTokenAddress [107732,107751]"/>
  <match src="(: ( [67409,67410]" dest="(: ( [64809,64810]"/>
  <match src="!: ! [36384,36385]" dest="!: ! [32731,32732]"/>
  <match src="}: } [56642,56643]" dest="}: } [53719,53720]"/>
  <match src="!=: != [91489,91491]" dest="!=: != [89604,89606]"/>
  <match src="&quot;: &quot; [95977,95978]" dest="&quot;: &quot; [94211,94212]"/>
  <match src="{: { [75080,75081]" dest="{: { [72707,72708]"/>
  <match src="function: function [100004,100012]" dest="function: function [98364,98372]"/>
  <match src="function_definition [5634,5726]" dest="function_definition [5817,5911]"/>
  <match src="call_expression [107706,107762]" dest="call_expression [105530,105586]"/>
  <match src="yul_function_call [53145,53159]" dest="yul_function_call [50130,50144]"/>
  <match src="comment: /**      * @dev Throws if sender is not a bridge contract or bridge contract owner.      */ [102080,102171]" dest="comment: /**      * @dev Throws if sender is not a bridge contract or bridge contract owner.      */ [100510,100603]"/>
  <match src="parameter [75071,75078]" dest="parameter [72698,72705]"/>
  <match src="returndatasize: returndatasize [54686,54700]" dest="returndatasize: returndatasize [51701,51715]"/>
  <match src="if_statement [97649,97744]" dest="if_statement [95939,96036]"/>
  <match src="identifier: _tokenId [116401,116409]" dest="identifier: _tokenId [115028,115036]"/>
  <match src="pragma: pragma [6290,6296]" dest="pragma: pragma [6497,6503]"/>
  <match src="identifier: encodePacked [2549,2561]" dest="identifier: encodePacked [2628,2640]"/>
  <match src="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [73612,73771]" dest="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [71195,71359]"/>
  <match src="identifier: msg [37505,37508]" dest="identifier: msg [33880,33883]"/>
  <match src="identifier: Upgradeable [1341,1352]" dest="identifier: Upgradeable [1388,1399]"/>
  <match src="}: } [76697,76698]" dest="}: } [74382,74383]"/>
  <match src="call_expression [103192,103213]" dest="call_expression [101655,101676]"/>
  <match src="bool: bool [46767,46771]" dest="bool: bool [43604,43608]"/>
  <match src="identifier: _readName [112033,112042]" dest="identifier: _readName [111695,111704]"/>
  <match src="identifier: encodePacked [59110,59122]" dest="identifier: encodePacked [56252,56264]"/>
  <match src="comment: // since solidity mapping introduces another level of addressing, such slot change is safe [35310,35400]" dest="comment: // since solidity mapping introduces another level of addressing, such slot change is safe [31625,31715]"/>
  <match src="identifier: requestFailedMessageFix [19287,19310]" dest="identifier: requestFailedMessageFix [18928,18951]"/>
  <match src="call_argument [57517,57546]" dest="call_argument [54617,54646]"/>
  <match src="identifier: _receiver [111139,111148]" dest="identifier: _receiver [109512,109521]"/>
  <match src="=: = [110972,110973]" dest="=: = [110380,110381]"/>
  <match src="!: ! [20263,20264]" dest="!: ! [19814,19815]"/>
  <match src="call_expression [38601,38687]" dest="call_expression [35000,35086]"/>
  <match src="member_expression [89972,89995]" dest="member_expression [88043,88066]"/>
  <match src="parameter [9712,9737]" dest="parameter [10623,10648]"/>
  <match src="call_argument [75494,75499]" dest="call_argument [73139,73144]"/>
  <match src="parameter [82152,82159]" dest="parameter [79992,79999]"/>
  <match src="identifier: _data [93309,93314]" dest="identifier: _data [91479,91484]"/>
  <match src="address: address [12597,12604]" dest="address: address [13574,13581]"/>
  <match src="virtual: virtual [93323,93330]" dest="virtual: virtual [91493,91500]"/>
  <match src="{: { [46756,46757]" dest="{: { [43592,43593]"/>
  <match src="contract: contract [47209,47217]" dest="contract: contract [44061,44069]"/>
  <match src="(: ( [103521,103522]" dest="(: ( [101993,101994]"/>
  <match src="(: ( [16578,16579]" dest="(: ( [118358,118359]"/>
  <match src="string_literal [91499,91534]" dest="string_literal [89614,89649]"/>
  <match src="private: private [55543,55550]" dest="private: private [52592,52599]"/>
  <match src="function_definition [32265,32335]" dest="function_definition [28500,28570]"/>
  <match src=".: . [116360,116361]" dest=".: . [114987,114988]"/>
  <match src="primitive_type [33542,33548]" dest="primitive_type [29812,29818]"/>
  <match src="identifier: tokenId [101414,101421]" dest="identifier: tokenId [99811,99818]"/>
  <match src="public: public [92489,92495]" dest="public: public [90635,90641]"/>
  <match src="type_name [46169,46173]" dest="type_name [42995,42999]"/>
  <match src=",: , [93140,93141]" dest=",: , [91304,91305]"/>
  <match src="call_expression [97574,97603]" dest="call_expression [95861,95890]"/>
  <match src="(: ( [43454,43455]" dest="(: ( [40197,40198]"/>
  <match src="uint256: uint256 [12632,12639]" dest="uint256: uint256 [13609,13616]"/>
  <match src="(: ( [22205,22206]" dest="(: ( [21760,21761]"/>
  <match src="comment: // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement. [71917,72009]" dest="comment: // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement. [69444,69536]"/>
  <match src="struct_declaration [75167,75209]" dest="struct_declaration [72801,72845]"/>
  <match src="calldata: calldata [61928,61936]" dest="calldata: calldata [59150,59158]"/>
  <match src="parameter [89570,89583]" dest="parameter [87631,87644]"/>
  <match src="primitive_type [43975,43981]" dest="primitive_type [40741,40747]"/>
  <match src="): ) [109831,109832]" dest="): ) [107778,107779]"/>
  <match src="identifier: map [80347,80350]" dest="identifier: map [78130,78133]"/>
  <match src="(: ( [109732,109733]" dest="(: ( [107678,107679]"/>
  <match src="visibility [33569,33577]" dest="visibility [29839,29847]"/>
  <match src="member_expression [79073,79092]" dest="member_expression [76828,76847]"/>
  <match src="comment: /**      * @dev Returns the number of values in the set. O(1).      */ [74475,74545]" dest="comment: /**      * @dev Returns the number of values in the set. O(1).      */ [72085,72157]"/>
  <match src="parameter [73365,73378]" dest="parameter [70937,70950]"/>
  <match src="state_mutability [74379,74383]" dest="state_mutability [71985,71989]"/>
  <match src="string [91911,91957]" dest="string [90039,90085]"/>
  <match src="identifier: _from [36456,36461]" dest="identifier: _from [32804,32809]"/>
  <match src="call_argument [95524,95529]" dest="call_argument [93744,93749]"/>
  <match src="call_argument [108532,108537]" dest="call_argument [106376,106381]"/>
  <match src=".: . [27288,27289]" dest=".: . [39290,39291]"/>
  <match src="identifier: _token [115087,115093]" dest="identifier: _token [107080,107086]"/>
  <match src="identifier: require [20255,20262]" dest="identifier: require [19806,19813]"/>
  <match src="identifier: UintSet [75392,75399]" dest="identifier: UintSet [73036,73043]"/>
  <match src=".: . [23537,23538]" dest=".: . [38412,38413]"/>
  <match src="bytes32: bytes32 [3820,3827]" dest="bytes32: bytes32 [3932,3939]"/>
  <match src=".: . [59109,59110]" dest=".: . [56251,56252]"/>
  <match src="visibility [64593,64601]" dest="visibility [61903,61911]"/>
  <match src="yul_identifier [35579,35584]" dest="yul_identifier [31896,31901]"/>
  <match src="): ) [16609,16610]" dest="): ) [118389,118390]"/>
  <match src="member_expression [114147,114163]" dest="member_expression [22194,22210]"/>
  <match src="=: = [50221,50222]" dest="=: = [47143,47144]"/>
  <match src="parameter [63005,63009]" dest="parameter [60265,60269]"/>
  <match src="identifier: length [81304,81310]" dest="identifier: length [79117,79123]"/>
  <match src="=: = [103577,103578]" dest="=: = [102050,102051]"/>
  <match src="function_body [23916,24011]" dest="function_body [38789,38886]"/>
  <match src="identifier: _setTokenAddressPair [109844,109864]" dest="identifier: _setTokenAddressPair [108260,108280]"/>
  <match src="binary_expression [80009,80021]" dest="binary_expression [77786,77798]"/>
  <match src="(: ( [23971,23972]" dest="(: ( [38845,38846]"/>
  <match src="member_expression [45622,45639]" dest="member_expression [42437,42454]"/>
  <match src="(: ( [97100,97101]" dest="(: ( [95366,95367]"/>
  <match src="function_definition [6524,6577]" dest="function_definition [7353,7406]"/>
  <match src="identifier: token [20308,20313]" dest="identifier: token [19861,19866]"/>
  <match src="else: else [12993,12997]" dest="else: else [13977,13981]"/>
  <match src="expression_statement [105770,105793]" dest="expression_statement [120223,120246]"/>
  <match src="call_expression [46221,46276]" dest="call_expression [43047,43102]"/>
  <match src="primitive_type [84712,84719]" dest="primitive_type [82627,82634]"/>
  <match src="primitive_type [111796,111800]" dest="primitive_type [23172,23176]"/>
  <match src="switch: switch [54615,54621]" dest="switch: switch [51628,51634]"/>
  <match src="identifier: sender [102251,102257]" dest="identifier: sender [100685,100691]"/>
  <match src="expression_statement [107364,107378]" dest="expression_statement [105218,105232]"/>
  <match src="primitive_type [44276,44282]" dest="primitive_type [41052,41058]"/>
  <match src="array_access [72261,72284]" dest="array_access [69795,69818]"/>
  <match src="bytes32: bytes32 [7284,7291]" dest="bytes32: bytes32 [8135,8142]"/>
  <match src="block_statement [43466,43560]" dest="block_statement [40209,40306]"/>
  <match src="(: ( [36361,36362]" dest="(: ( [32707,32708]"/>
  <match src="parameter [89237,89250]" dest="parameter [87284,87297]"/>
  <match src="function_definition [82341,82656]" dest="function_definition [80188,80507]"/>
  <match src="call_argument [117174,117193]" dest="call_argument [113651,113682]"/>
  <match src="bytes32: bytes32 [85007,85014]" dest="bytes32: bytes32 [82929,82936]"/>
  <match src="}: } [115766,115767]" dest="}: } [114376,114377]"/>
  <match src="call_argument [12747,12778]" dest="call_argument [13725,13756]"/>
  <match src="primitive_type [33189,33196]" dest="primitive_type [29446,29453]"/>
  <match src="(: ( [114146,114147]" dest="(: ( [22193,22194]"/>
  <match src="(: ( [20892,20893]" dest="(: ( [20446,20447]"/>
  <match src="visibility [61947,61955]" dest="visibility [59170,59178]"/>
  <match src="): ) [57546,57547]" dest="): ) [54646,54647]"/>
  <match src="identifier: _bridgeContract [103579,103594]" dest="identifier: _bridgeContract [102052,102067]"/>
  <match src=".: . [115717,115718]" dest=".: . [114325,114326]"/>
  <match src="visibility [19331,19339]" dest="visibility [18972,18980]"/>
  <match src="parameter [88758,88765]" dest="parameter [86789,86796]"/>
  <match src="yul_identifier [13340,13350]" dest="yul_identifier [14331,14341]"/>
  <match src="type_name [80035,80042]" dest="type_name [77813,77820]"/>
  <match src="identifier: _implementation [57584,57599]" dest="identifier: _implementation [54685,54700]"/>
  <match src="binary_expression [91554,91616]" dest="binary_expression [89671,89733]"/>
  <match src="return_type_definition [6629,6646]" dest="return_type_definition [7460,7477]"/>
  <match src="identifier: _INTERFACE_ID_ERC721 [88487,88507]" dest="identifier: _INTERFACE_ID_ERC721 [86510,86530]"/>
  <match src="[: [ [100679,100680]" dest="[: [ [99057,99058]"/>
  <match src="type_name [92694,92701]" dest="type_name [90847,90854]"/>
  <match src="unary_expression [36384,36391]" dest="unary_expression [32731,32738]"/>
  <match src=",: , [11381,11382]" dest=",: , [12329,12330]"/>
  <match src="identifier: _exists [95327,95334]" dest="identifier: _exists [93545,93552]"/>
  <match src="identifier: _holderTokens [85919,85932]" dest="identifier: _holderTokens [83877,83890]"/>
  <match src="call_expression [45108,45146]" dest="call_expression [41912,41950]"/>
  <match src="identifier: owner [57491,57496]" dest="identifier: owner [54590,54595]"/>
  <match src="contract_body [40089,41137]" dest="contract_body [36539,37622]"/>
  <match src="virtual: virtual [39449,39456]" dest="virtual: virtual [35870,35877]"/>
  <match src="(: ( [72951,72952]" dest="(: ( [70509,70510]"/>
  <match src="primitive_type [33424,33431]" dest="primitive_type [29690,29697]"/>
  <match src="external: external [31189,31197]" dest="external: external [27388,27396]"/>
  <match src="tuple_expression [84376,84415]" dest="tuple_expression [82280,82319]"/>
  <match src="member_expression [72410,72421]" dest="member_expression [69947,69958]"/>
  <match src="identifier: owner [90772,90777]" dest="identifier: owner [88863,88868]"/>
  <match src="identifier: abi [112869,112872]" dest="identifier: abi [112334,112337]"/>
  <match src="identifier: abi [45108,45111]" dest="identifier: abi [41912,41915]"/>
  <match src="): ) [58683,58684]" dest="): ) [55811,55812]"/>
  <match src="=: = [6229,6230]" dest="=: = [6430,6431]"/>
  <match src="call_argument [112159,112165]" dest="call_argument [111354,111360]"/>
  <match src="visibility [82130,82137]" dest="visibility [79970,79977]"/>
  <match src="parameter [28631,28649]" dest="parameter [24758,24776]"/>
  <match src=".: . [13092,13093]" dest=".: . [14078,14079]"/>
  <match src="member_expression [110726,110749]" dest="member_expression [109221,109244]"/>
  <match src=",: , [93494,93495]" dest=",: , [91666,91667]"/>
  <match src="call_argument [92838,92845]" dest="call_argument [90993,91000]"/>
  <match src="type_name [94408,94415]" dest="type_name [92601,92608]"/>
  <match src="identifier: _token [27316,27322]" dest="identifier: _token [39323,39329]"/>
  <match src="expression_statement [105475,105511]" dest="expression_statement [120040,120076]"/>
  <match src="visibility [95926,95934]" dest="visibility [94159,94167]"/>
  <match src="function: function [82965,82973]" dest="function: function [80831,80839]"/>
  <match src="): ) [36490,36491]" dest="): ) [32838,32839]"/>
  <match src="user_defined_type [83535,83551]" dest="user_defined_type [81417,81433]"/>
  <match src="primitive_type [101691,101698]" dest="primitive_type [100103,100110]"/>
  <match src="identifier: to [97150,97152]" dest="identifier: to [95418,95420]"/>
  <match src="number_literal: 0x20b8ca26cc94f39fab299954184cf3a9bd04f69543e4f454fab299f015b8130f [49286,49352]" dest="number_literal: 0x20b8ca26cc94f39fab299954184cf3a9bd04f69543e4f454fab299f015b8130f [46183,46249]"/>
  <match src="user_defined_type [33383,33390]" dest="user_defined_type [29648,29655]"/>
  <match src="pragma: pragma [39525,39531]" dest="pragma: pragma [35951,35957]"/>
  <match src="): ) [96870,96871]" dest="): ) [95129,95130]"/>
  <match src="type_name [31887,31894]" dest="type_name [28110,28117]"/>
  <match src="identifier: push [78874,78878]" dest="identifier: push [76626,76630]"/>
  <match src="call_argument [75789,75803]" dest="call_argument [73444,73458]"/>
  <match src="): ) [24690,24691]" dest="): ) [23132,23133]"/>
  <match src="address: address [91866,91873]" dest="address: address [89993,90000]"/>
  <match src="function: function [33149,33157]" dest="function: function [29406,29414]"/>
  <match src="type_cast_expression [84712,84724]" dest="type_cast_expression [82627,82639]"/>
  <match src="}: } [112776,112777]" dest="}: } [111657,111658]"/>
  <match src="call_argument [26268,26269]" dest="call_argument [22129,22130]"/>
  <match src="comment: // File: @openzeppelin/contracts/math/SafeMath.sol [63664,63714]" dest="comment: // File: @openzeppelin/contracts/math/SafeMath.sol [60945,60995]"/>
  <match src="function_body [16026,16087]" dest="function_body [16501,16564]"/>
  <match src="identifier: map [79148,79151]" dest="identifier: map [76906,76909]"/>
  <match src="view: view [7333,7337]" dest="view: view [8186,8190]"/>
  <match src="identifier: _token [113120,113126]" dest="identifier: _token [111275,111281]"/>
  <match src="&quot;: &quot; [46954,46955]" dest="&quot;: &quot; [43793,43794]"/>
  <match src="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [66329,66780]" dest="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [63701,64163]"/>
  <match src="private: private [86315,86322]" dest="private: private [84285,84292]"/>
  <match src="uint256: uint256 [7247,7254]" dest="uint256: uint256 [8097,8104]"/>
  <match src="(: ( [91900,91901]" dest="(: ( [90028,90029]"/>
  <match src="call_argument [83418,83430]" dest="call_argument [81294,81306]"/>
  <match src="string [48271,48292]" dest="string [45141,45162]"/>
  <match src="primitive_type [106129,106133]" dest="primitive_type [103956,103960]"/>
  <match src="identifier: data [111890,111894]" dest="identifier: data [109351,109355]"/>
  <match src="call_expression [109681,109714]" dest="call_expression [107626,107659]"/>
  <match src=".: . [72421,72422]" dest=".: . [69958,69959]"/>
  <match src="comment: /**      * @dev Tells the address of the owner      * @return the address of the owner      */ [5535,5629]" dest="comment: /**      * @dev Tells the address of the owner      * @return the address of the owner      */ [5714,5811]"/>
  <match src="call_argument [113963,113969]" dest="call_argument [110320,110326]"/>
  <match src="parameter [66798,66807]" dest="parameter [64182,64191]"/>
  <match src="bytes: bytes [100079,100084]" dest="bytes: bytes [98439,98444]"/>
  <match src="function: function [72896,72904]" dest="function: function [70454,70462]"/>
  <match src="internal: internal [2854,2862]" dest="internal: internal [2941,2949]"/>
  <match src="primitive_type [2818,2825]" dest="primitive_type [2905,2912]"/>
  <match src="): ) [111728,111729]" dest="): ) [111060,111061]"/>
  <match src="function: function [92430,92438]" dest="function: function [90576,90584]"/>
  <match src="type_name [106925,106931]" dest="type_name [104768,104774]"/>
  <match src="state_variable_declaration [87391,87449]" dest="state_variable_declaration [85386,85444]"/>
  <match src="visibility [100107,100114]" dest="visibility [98468,98475]"/>
  <match src="identifier: _contains [72697,72706]" dest="identifier: _contains [70248,70257]"/>
  <match src="call_argument [91893,91909]" dest="call_argument [90021,90037]"/>
  <match src="address: address [95402,95409]" dest="address: address [93621,93628]"/>
  <match src=",: , [21218,21219]" dest=",: , [20780,20781]"/>
  <match src="parameter [116143,116157]" dest="parameter [114763,114777]"/>
  <match src="identifier: abi [42563,42566]" dest="identifier: abi [39193,39196]"/>
  <match src="primitive_type [18956,18963]" dest="primitive_type [18590,18597]"/>
  <match src="type_name [74125,74132]" dest="type_name [71724,71731]"/>
  <match src="solidity: solidity [35744,35752]" dest="solidity: solidity [32068,32076]"/>
  <match src="call_argument [12532,12537]" dest="call_argument [13506,13511]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [67675,68115]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [65083,65534]"/>
  <match src="view: view [82421,82425]" dest="view: view [80268,80272]"/>
  <match src="return_type_definition [16293,16310]" dest="return_type_definition [16776,16793]"/>
  <match src="address: address [98575,98582]" dest="address: address [96894,96901]"/>
  <match src="member_expression [23955,23971]" dest="member_expression [38829,38845]"/>
  <match src="identifier: sender [1524,1530]" dest="identifier: sender [1574,1580]"/>
  <match src="&quot;: &quot; [46373,46374]" dest="&quot;: &quot; [43200,43201]"/>
  <match src="): ) [117145,117146]" dest="): ) [115690,115691]"/>
  <match src="call_argument [93377,93389]" dest="call_argument [91548,91560]"/>
  <match src="primitive_type [79578,79585]" dest="primitive_type [77348,77355]"/>
  <match src="{: { [106135,106136]" dest="{: { [103962,103963]"/>
  <match src="call_expression [80721,80739]" dest="call_expression [78512,78530]"/>
  <match src="function_definition [39762,39818]" dest="function_definition [36200,36256]"/>
  <match src="identifier: setTokenURI [33512,33523]" dest="identifier: setTokenURI [29782,29793]"/>
  <match src="comment: // Delete the slot where the moved entry was stored [80657,80708]" dest="comment: // Delete the slot where the moved entry was stored [78447,78498]"/>
  <match src="call_expression [112673,112766]" dest="call_expression [111549,111642]"/>
  <match src="): ) [71165,71166]" dest="): ) [68679,68680]"/>
  <match src="primitive_type [28674,28678]" dest="primitive_type [24801,24805]"/>
  <match src="event_paramater [21895,21916]" dest="event_paramater [21446,21467]"/>
  <match src="primitive_type [698,705]" dest="primitive_type [721,728]"/>
  <match src="(: ( [41775,41776]" dest="(: ( [111238,111239]"/>
  <match src="uint256: uint256 [43203,43210]" dest="uint256: uint256 [39937,39944]"/>
  <match src="member_expression [27285,27301]" dest="member_expression [39287,39303]"/>
  <match src="): ) [4572,4573]" dest="): ) [4707,4708]"/>
  <match src="identifier: IERC721Metadata [45663,45678]" dest="identifier: IERC721Metadata [42478,42493]"/>
  <match src=",: , [94557,94558]" dest=",: , [92752,92753]"/>
  <match src="bool: bool [55733,55737]" dest="bool: bool [52786,52790]"/>
  <match src="call_expression [100717,100733]" dest="call_expression [99096,99112]"/>
  <match src="call_argument [92324,92336]" dest="call_argument [90464,90476]"/>
  <match src="call_expression [115681,115750]" dest="call_expression [114289,114358]"/>
  <match src="): ) [85035,85036]" dest="): ) [82957,82958]"/>
  <match src="number_literal: 1 [71782,71783]" dest="number_literal: 1 [69306,69307]"/>
  <match src="identifier: _checkOnERC721Received [100013,100035]" dest="identifier: _checkOnERC721Received [98373,98395]"/>
  <match src="identifier: _gas [7104,7108]" dest="identifier: _gas [7948,7952]"/>
  <match src="(: ( [98582,98583]" dest="(: ( [96901,96902]"/>
  <match src="comment: /**      * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.      *      * See {setApprovalForAll}      */ [32341,32479]" dest="comment: /**      * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.      *      * See {setApprovalForAll}      */ [28578,28720]"/>
  <match src="identifier: onlyOwner [15760,15769]" dest="identifier: onlyOwner [118075,118084]"/>
  <match src="address: address [96361,96368]" dest="address: address [94604,94611]"/>
  <match src="identifier: value [84328,84333]" dest="identifier: value [82231,82236]"/>
  <match src="user_defined_type [75910,75917]" dest="user_defined_type [73571,73578]"/>
  <match src="expression_statement [97488,97537]" dest="expression_statement [95772,95821]"/>
  <match src="primitive_type [3820,3827]" dest="primitive_type [3932,3939]"/>
  <match src="view: view [18205,18209]" dest="view: view [17709,17713]"/>
  <match src="call_expression [96302,96320]" dest="call_expression [94544,94562]"/>
  <match src="call_argument [111139,111148]" dest="call_argument [109512,109521]"/>
  <match src="): ) [78917,78918]" dest="): ) [76669,76670]"/>
  <match src="comment: // File: @openzeppelin/contracts/token/ERC721/IERC721.sol [28684,28741]" dest="comment: // File: @openzeppelin/contracts/token/ERC721/IERC721.sol [24814,24871]"/>
  <match src="]: ] [50219,50220]" dest="]: ] [47141,47142]"/>
  <match src="[: [ [21176,21177]" dest="[: [ [20738,20739]"/>
  <match src="identifier: _token [112275,112281]" dest="identifier: _token [111514,111520]"/>
  <match src="type_name [94437,94442]" dest="type_name [92630,92635]"/>
  <match src="(: ( [102006,102007]" dest="(: ( [100431,100432]"/>
  <match src="): ) [44289,44290]" dest="): ) [41065,41066]"/>
  <match src="identifier: status [46174,46180]" dest="identifier: status [43000,43006]"/>
  <match src="call_argument [109218,109228]" dest="call_argument [107153,107163]"/>
  <match src="comment: /**      * @dev Retrieves current daily limit for a particular token contract.      * @param _token address of the token contract.      * @return daily limit on tokens that can be sent through the bridge per day.      */ [23204,23424]" dest="comment: /**      * @dev Tells if the bridging operations for the particular token are allowed.      * @param _token address of the token contract.      * @return true, if bridging operations are allowed.      */ [22873,23080]"/>
  <match src="identifier: _releaseToken [116120,116133]" dest="identifier: _releaseToken [114739,114752]"/>
  <match src="variable_declaration_statement [91224,91269]" dest="variable_declaration_statement [89330,89375]"/>
  <match src="view: view [46727,46731]" dest="view: view [43563,43567]"/>
  <match src="type_name [20408,20415]" dest="type_name [19963,19970]"/>
  <match src="returns: returns [34650,34657]" dest="returns: returns [30953,30960]"/>
  <match src="identifier: _approve [98566,98574]" dest="identifier: _approve [96885,96893]"/>
  <match src="identifier: _token [23878,23884]" dest="identifier: _token [38754,38760]"/>
  <match src="expression_statement [56700,56724]" dest="expression_statement [53780,53804]"/>
  <match src="return_type_definition [60532,60549]" dest="return_type_definition [57719,57736]"/>
  <match src="identifier: Address [57565,57572]" dest="identifier: Address [54666,54673]"/>
  <match src="(: ( [34658,34659]" dest="(: ( [30961,30962]"/>
  <match src="return_statement [100180,100192]" dest="return_statement [98544,98556]"/>
  <match src="type_name [9712,9727]" dest="type_name [10623,10638]"/>
  <match src=".: . [79174,79175]" dest=".: . [76932,76933]"/>
  <match src="uint256: uint256 [33201,33208]" dest="uint256: uint256 [29458,29465]"/>
  <match src="call_argument [97516,97526]" dest="call_argument [95800,95810]"/>
  <match src="function_body [100134,100593]" dest="function_body [98496,98968]"/>
  <match src="returns: returns [34397,34404]" dest="returns: returns [30688,30695]"/>
  <match src="return: return [65082,65088]" dest="return: return [62410,62416]"/>
  <match src="(: ( [7389,7390]" dest="(: ( [8244,8245]"/>
  <match src="primitive_type [5388,5395]" dest="primitive_type [5565,5572]"/>
  <match src="address: address [12277,12284]" dest="address: address [13249,13256]"/>
  <match src="call_argument [45108,45146]" dest="call_argument [41912,41950]"/>
  <match src="(: ( [65017,65018]" dest="(: ( [62344,62345]"/>
  <match src="identifier: _entries [81295,81303]" dest="identifier: _entries [79108,79116]"/>
  <match src="==: == [66165,66167]" dest="==: == [63527,63529]"/>
  <match src="parameter [33201,33216]" dest="parameter [29458,29473]"/>
  <match src="identifier: uintStorage [23933,23944]" dest="identifier: uintStorage [38807,38818]"/>
  <match src="(: ( [12412,12413]" dest="(: ( [13385,13386]"/>
  <match src="primitive_type [117099,117106]" dest="primitive_type [115642,115649]"/>
  <match src="{: { [90532,90533]" dest="{: { [88615,88616]"/>
  <match src="identifier: index [90695,90700]" dest="identifier: index [88785,88790]"/>
  <match src="identifier: key [79610,79613]" dest="identifier: key [77380,77383]"/>
  <match src="call_argument [16048,16079]" dest="call_argument [16524,16555]"/>
  <match src="address: address [50677,50684]" dest="address: address [47616,47623]"/>
  <match src="{: { [7590,7591]" dest="{: { [8456,8457]"/>
  <match src="): ) [70567,70568]" dest="): ) [68063,68064]"/>
  <match src="): ) [58682,58683]" dest="): ) [55810,55811]"/>
  <match src="primitive_type [472,479]" dest="primitive_type [485,492]"/>
  <match src="internal: internal [273,281]" dest="internal: internal [282,290]"/>
  <match src="): ) [91957,91958]" dest="): ) [90085,90086]"/>
  <match src="type_name [102576,102583]" dest="type_name [101020,101027]"/>
  <match src="variable_declaration_statement [89682,89728]" dest="variable_declaration_statement [87746,87792]"/>
  <match src="internal: internal [542,550]" dest="internal: internal [556,564]"/>
  <match src="primitive_type [42930,42936]" dest="primitive_type [39657,39663]"/>
  <match src="}: } [35125,35126]" dest="}: } [31434,31435]"/>
  <match src="state_mutability [44262,44266]" dest="state_mutability [41038,41042]"/>
  <match src="address: address [103460,103467]" dest="address: address [101931,101938]"/>
  <match src="expression_statement [6112,6144]" dest="expression_statement [6311,6343]"/>
  <match src="function_definition [859,941]" dest="function_definition [884,968]"/>
  <match src="view: view [95289,95293]" dest="view: view [93506,93510]"/>
  <match src="member_expression [58633,58649]" dest="member_expression [55761,55777]"/>
  <match src="/: / [67554,67555]" dest="/: / [64956,64957]"/>
  <match src="pragma: pragma [21515,21521]" dest="pragma: pragma [21061,21067]"/>
  <match src="{: { [40089,40090]" dest="{: { [36539,36540]"/>
  <match src="primitive_type [4931,4936]" dest="primitive_type [5080,5085]"/>
  <match src="internal: internal [114998,115006]" dest="internal: internal [113623,113631]"/>
  <match src="(: ( [107560,107561]" dest="(: ( [105418,105419]"/>
  <match src="expression_statement [98389,98455]" dest="expression_statement [96703,96769]"/>
  <match src="yul_function_call [34467,34482]" dest="yul_function_call [30760,30775]"/>
  <match src=",: , [110696,110697]" dest=",: , [109190,109191]"/>
  <match src="identifier: _tokenId [113366,113374]" dest="identifier: _tokenId [109523,109531]"/>
  <match src="call_argument [27285,27323]" dest="call_argument [39287,39330]"/>
  <match src="identifier: require [57557,57564]" dest="identifier: require [54658,54665]"/>
  <match src="uint256: uint256 [116219,116226]" dest="uint256: uint256 [114842,114849]"/>
  <match src=",: , [2836,2837]" dest=",: , [2923,2924]"/>
  <match src="string [114081,114093]" dest="string [22760,22779]"/>
  <match src="identifier: name [112026,112030]" dest="identifier: name [111688,111692]"/>
  <match src="parameter [71112,71127]" dest="parameter [68626,68641]"/>
  <match src="user_defined_type [76573,76580]" dest="user_defined_type [74255,74262]"/>
  <match src="identifier: value [11848,11853]" dest="identifier: value [12810,12815]"/>
  <match src="): ) [83605,83606]" dest="): ) [81487,81488]"/>
  <match src="visibility [37467,37475]" dest="visibility [33841,33849]"/>
  <match src="call_argument [94500,94502]" dest="call_argument [92694,92696]"/>
  <match src="): ) [32570,32571]" dest="): ) [28812,28813]"/>
  <match src="identifier: spender [95531,95538]" dest="identifier: spender [93751,93758]"/>
  <match src="visibility [7324,7332]" dest="visibility [8177,8185]"/>
  <match src="return_statement [81894,81928]" dest="return_statement [79724,79758]"/>
  <match src="identifier: _tokenOwners [95023,95035]" dest="identifier: _tokenOwners [93230,93242]"/>
  <match src="primitive_type [6985,6992]" dest="primitive_type [7824,7831]"/>
  <match src="type_name [65877,65884]" dest="type_name [63235,63242]"/>
  <match src="bytes32: bytes32 [253,260]" dest="bytes32: bytes32 [262,269]"/>
  <match src="identifier: NativeTokensRegistry [104382,104402]" dest="identifier: NativeTokensRegistry [102896,102916]"/>
  <match src="external: external [103163,103171]" dest="external: external [101625,101633]"/>
  <match src="string: string [55875,55881]" dest="string: string [52932,52938]"/>
  <match src="identifier: _inner [84345,84351]" dest="identifier: _inner [82248,82254]"/>
  <match src="unary_expression [5053,5061]" dest="unary_expression [5223,5231]"/>
  <match src="payable: payable [50896,50903]" dest="payable: payable [47841,47848]"/>
  <match src="visibility [972,978]" dest="visibility [1001,1007]"/>
  <match src="{: { [43466,43467]" dest="{: { [40209,40210]"/>
  <match src="state_mutability [95289,95293]" dest="state_mutability [93506,93510]"/>
  <match src="string_literal [58650,58664]" dest="string_literal [55778,55792]"/>
  <match src=".: . [100512,100513]" dest=".: . [98885,98886]"/>
  <match src="string [81792,81828]" dest="string [79619,79655]"/>
  <match src="parameter [61922,61941]" dest="parameter [59144,59163]"/>
  <match src="function_definition [42874,43597]" dest="function_definition [39601,40345]"/>
  <match src="primitive_type [6444,6451]" dest="primitive_type [7269,7276]"/>
  <match src="number_literal: 1 [80614,80615]" dest="number_literal: 1 [78402,78403]"/>
  <match src="primitive_type [97653,97658]" dest="primitive_type [95943,95948]"/>
  <match src="identifier: _token [26292,26298]" dest="identifier: _token [22153,22159]"/>
  <match src="struct_expression [9954,9985]" dest="struct_expression [10869,10900]"/>
  <match src="member_expression [19627,19648]" dest="member_expression [19303,19324]"/>
  <match src="&quot;: &quot; [48732,48733]" dest="&quot;: &quot; [45611,45612]"/>
  <match src="identifier: bridgeContract [18538,18552]" dest="identifier: bridgeContract [18051,18065]"/>
  <match src="number_literal: 0 [111681,111682]" dest="number_literal: 0 [111013,111014]"/>
  <match src="member_expression [100149,100162]" dest="member_expression [98512,98525]"/>
  <match src="identifier: _tokenId [102865,102873]" dest="identifier: _tokenId [101318,101326]"/>
  <match src="emit_statement [6153,6198]" dest="emit_statement [6353,6398]"/>
  <match src=",: , [75127,75128]" dest=",: , [72755,72756]"/>
  <match src="type_name [79464,79468]" dest="type_name [77232,77236]"/>
  <match src="function: function [60495,60503]" dest="function: function [57682,57690]"/>
  <match src="type_name [101394,101401]" dest="type_name [99791,99798]"/>
  <match src="call_expression [112797,112848]" dest="call_expression [112265,112316]"/>
  <match src="event_paramater [40134,40155]" dest="event_paramater [36586,36607]"/>
  <match src="function_definition [62928,63068]" dest="function_definition [60188,60330]"/>
  <match src="user_defined_type [81840,81848]" dest="user_defined_type [79669,79677]"/>
  <match src="state_mutability [60527,60531]" dest="state_mutability [57714,57718]"/>
  <match src="call_argument [98309,98333]" dest="call_argument [96622,96646]"/>
  <match src="primitive_type [100124,100128]" dest="primitive_type [98485,98489]"/>
  <match src="return_statement [59865,59883]" dest="return_statement [57028,57046]"/>
  <match src="): ) [84725,84726]" dest="): ) [82640,82641]"/>
  <match src="}: } [66914,66915]" dest="}: } [64300,64301]"/>
  <match src="expression_statement [26242,26301]" dest="expression_statement [22103,22162]"/>
  <match src="identifier: withinLimit [24235,24246]" dest="identifier: isTokenExecutionAllowed [23645,23668]"/>
  <match src="identifier: from [94553,94557]" dest="identifier: from [92748,92752]"/>
  <match src="constructor: constructor [56279,56290]" dest="constructor: constructor [53346,53357]"/>
  <match src="): ) [74620,74621]" dest="): ) [72233,72234]"/>
  <match src="identifier: EnumerableSet [85888,85901]" dest="identifier: EnumerableSet [83846,83859]"/>
  <match src="{: { [62585,62586]" dest="{: { [59834,59835]"/>
  <match src="visibility [91402,91408]" dest="visibility [89515,89521]"/>
  <match src="(: ( [88896,88897]" dest="(: ( [86930,86931]"/>
  <match src="identifier: set [72925,72928]" dest="identifier: set [70483,70486]"/>
  <match src="uint256: uint256 [78303,78310]" dest="uint256: uint256 [76040,76047]"/>
  <match src="identifier: set [76589,76592]" dest="identifier: set [74271,74274]"/>
  <match src="identifier: messageId [18262,18271]" dest="identifier: messageId [17767,17776]"/>
  <match src="primitive_type [33411,33418]" dest="primitive_type [29677,29684]"/>
  <match src="identifier: require [64662,64669]" dest="identifier: require [61974,61981]"/>
  <match src="}: } [68247,68248]" dest="}: } [65669,65670]"/>
  <match src="function_body [11335,11412]" dest="function_body [12282,12361]"/>
  <match src=".: . [72264,72265]" dest=".: . [69798,69799]"/>
  <match src="(: ( [418,419]" dest="(: ( [430,431]"/>
  <match src="block_statement [90001,90078]" dest="block_statement [88072,88151]"/>
  <match src="parameter [106129,106133]" dest="parameter [103956,103960]"/>
  <match src="function: function [74313,74321]" dest="function: function [71919,71927]"/>
  <match src="return_statement [1009,1041]" dest="return_statement [1039,1071]"/>
  <match src=".: . [72505,72506]" dest=".: . [70045,70046]"/>
  <match src="call_argument [46854,46887]" dest="call_argument [43692,43725]"/>
  <match src="comment: // keccak256(abi.encodePacked(&quot;owner&quot;)) [5490,5529]" dest="comment: // keccak256(abi.encodePacked(&quot;owner&quot;)) [5667,5706]"/>
  <match src="storage: storage [82359,82366]" dest="storage: storage [80206,80213]"/>
  <match src="==: == [4712,4714]" dest="==: == [4853,4855]"/>
  <match src="&quot;: &quot; [10075,10076]" dest="&quot;: &quot; [10991,10992]"/>
  <match src="storage: storage [75020,75027]" dest="storage: storage [72647,72654]"/>
  <match src="(: ( [82099,82100]" dest="(: ( [79939,79940]"/>
  <match src="pragma: pragma [27930,27936]" dest="pragma: pragma [24037,24043]"/>
  <match src="number_literal: 0 [89826,89827]" dest="number_literal: 0 [87893,87894]"/>
  <match src=".: . [79085,79086]" dest=".: . [76840,76841]"/>
  <match src="(: ( [102562,102563]" dest="(: ( [101006,101007]"/>
  <match src="): ) [20936,20937]" dest="): ) [20490,20491]"/>
  <match src="revert: revert [13372,13378]" dest="revert: revert [14364,14370]"/>
  <match src="call_expression [20458,20485]" dest="call_expression [20014,20041]"/>
  <match src="): ) [107818,107819]" dest="): ) [105643,105644]"/>
  <match src="): ) [115229,115230]" dest="): ) [113822,113823]"/>
  <match src=",: , [59137,59138]" dest=",: , [56279,56280]"/>
  <match src="}: } [54814,54815]" dest="}: } [51833,51834]"/>
  <match src="): ) [45146,45147]" dest="): ) [41950,41951]"/>
  <match src="type_cast_expression [5289,5302]" dest="type_cast_expression [5461,5474]"/>
  <match src="identifier: _ [5374,5375]" dest="identifier: _ [5548,5549]"/>
  <match src="external: external [39787,39795]" dest="external: external [36225,36233]"/>
  <match src="identifier: data [19680,19684]" dest="identifier: data [19273,19277]"/>
  <match src="view: view [74599,74603]" dest="view: view [72212,72216]"/>
  <match src="): ) [51479,51480]" dest="): ) [48435,48436]"/>
  <match src="solidity: solidity [41246,41254]" dest="solidity: solidity [37735,37743]"/>
  <match src="yul_function_call [53113,53166]" dest="yul_function_call [50098,50151]"/>
  <match src="comment: /**      * @dev Validates that the token amount is inside the limits, calls transferFrom to transfer the token to the contract      * and invokes the method to burn/lock the token and unlock/mint the token on the other network.      * The user should first call Approve method of the ERC721 token.      * @param _token bridge token contract address.      * @param _receiver address that will receive the token on the other network.      * @param _tokenId id of the token to be transferred to the other network.      */ [37539,38057]" dest="comment: /**      * @dev Validates that the token amount is inside the limits, calls transferFrom to transfer the token to the contract      * and invokes the method to burn/lock the token and unlock/mint the token on the other network.      * The user should first call Approve method of the ERC721 token.      * @param _token bridge token contract address.      * @param _receiver address that will receive the token on the other network.      * @param _tokenId id of the token to be transferred to the other network.      */ [33917,34442]"/>
  <match src="identifier: _recipient [21358,21368]" dest="identifier: _recipient [20897,20907]"/>
  <match src="identifier: temp [43211,43215]" dest="identifier: temp [39945,39949]"/>
  <match src="comment: /**  * @title NativeTokensRegistry  * @dev Functionality for keeping track of registered native tokens.  */ [41264,41371]" dest="comment: /**  * @title NativeTokensRegistry  * @dev Functionality for keeping track of registered native tokens.  */ [37756,37866]"/>
  <match src="type_name [56300,56307]" dest="type_name [53368,53375]"/>
  <match src="pragma: pragma [54,60]" dest="pragma: pragma [56,62]"/>
  <match src="storage: storage [74577,74584]" dest="storage: storage [72190,72197]"/>
  <match src="parameter [10847,10861]" dest="parameter [11784,11798]"/>
  <match src="type_alias [85473,85486]" dest="type_alias [83423,83436]"/>
  <match src="identifier: _msgSender [93377,93387]" dest="identifier: _msgSender [91548,91558]"/>
  <match src="parameter [31678,31688]" dest="parameter [27892,27902]"/>
  <match src="assignment_expression [56674,56690]" dest="assignment_expression [53753,53769]"/>
  <match src="parameter [109599,109619]" dest="parameter [107543,107563]"/>
  <match src=".: . [45678,45679]" dest=".: . [42493,42494]"/>
  <match src="if: if [89796,89798]" dest="if: if [87863,87865]"/>
  <match src="member_expression [47767,47783]" dest="member_expression [44628,44644]"/>
  <match src="(: ( [60515,60516]" dest="(: ( [57702,57703]"/>
  <match src="-: - [79170,79171]" dest="-: - [76928,76929]"/>
  <match src="yul_hex_number: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [57744,57810]" dest="yul_hex_number: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [54849,54915]"/>
  <match src="identifier: _tokenApprovals [55674,55689]" dest="identifier: _tokenApprovals [52726,52741]"/>
  <match src="visibility [8203,8211]" dest="visibility [9087,9095]"/>
  <match src="member_expression [46831,46853]" dest="member_expression [43669,43691]"/>
  <match src=",: , [73363,73364]" dest=",: , [70935,70936]"/>
  <match src="comment: // benefit is lost if 'b' is also tested. [66029,66070]" dest="comment: // benefit is lost if 'b' is also tested. [63389,63430]"/>
  <match src="call_expression [45763,45812]" dest="call_expression [42579,42628]"/>
  <match src="(: ( [21815,21816]" dest="(: ( [21372,21373]"/>
  <match src="pragma: pragma [34565,34571]" dest="pragma: pragma [30865,30871]"/>
  <match src="identifier: _add [73869,73873]" dest="identifier: _add [71459,71463]"/>
  <match src="type_name [71277,71284]" dest="type_name [68793,68800]"/>
  <match src="(: ( [36941,36942]" dest="(: ( [33301,33302]"/>
  <match src="visibility [62367,62374]" dest="visibility [59609,59616]"/>
  <match src="parameter [102857,102873]" dest="parameter [101310,101326]"/>
  <match src="}: } [5725,5726]" dest="}: } [5910,5911]"/>
  <match src=".: . [97679,97680]" dest=".: . [95969,95970]"/>
  <match src="assignment_expression [43426,43438]" dest="assignment_expression [40168,40180]"/>
  <match src="string: string [101777,101783]" dest="string: string [100193,100199]"/>
  <match src="(: ( [7283,7284]" dest="(: ( [8134,8135]"/>
  <match src=":=: := [8684,8686]" dest=":=: := [9575,9577]"/>
  <match src="identifier: keccak256 [20883,20892]" dest="identifier: keccak256 [20437,20446]"/>
  <match src="inheritance_specifier [33383,33390]" dest="inheritance_specifier [29648,29655]"/>
  <match src=".: . [75120,75121]" dest=".: . [72748,72749]"/>
  <match src="type_name [13778,13785]" dest="type_name [14800,14807]"/>
  <match src="(: ( [20204,20205]" dest="(: ( [19754,19755]"/>
  <match src="function_body [117156,117559]" dest="function_body [115701,115986]"/>
  <match src="parameter [14919,14942]" dest="parameter [15834,15857]"/>
  <match src=".: . [98704,98705]" dest=".: . [97028,97029]"/>
  <match src="expression_statement [105743,105761]" dest="expression_statement [120195,120213]"/>
  <match src="(: ( [109804,109805]" dest="(: ( [107751,107752]"/>
  <match src="type_name [92119,92123]" dest="type_name [90255,90259]"/>
  <match src="{: { [111642,111643]" dest="{: { [110973,110974]"/>
  <match src="identifier: errorMessage [65479,65491]" dest="identifier: errorMessage [62820,62832]"/>
  <match src="call_argument [83108,83131]" dest="call_argument [80975,80998]"/>
  <match src="): ) [75135,75136]" dest="): ) [72763,72764]"/>
  <match src="type_name [79434,79441]" dest="type_name [77202,77209]"/>
  <match src="array_access [72784,72803]" dest="array_access [70336,70355]"/>
  <match src="type_name [65443,65450]" dest="type_name [62784,62791]"/>
  <match src="): ) [24327,24328]" dest="): ) [23956,23957]"/>
  <match src="function: function [50080,50088]" dest="function: function [47000,47008]"/>
  <match src="call_expression [27285,27323]" dest="call_expression [39287,39330]"/>
  <match src="primitive_type [100062,100069]" dest="primitive_type [98422,98429]"/>
  <match src="primitive_type [100211,100216]" dest="primitive_type [98577,98582]"/>
  <match src="(: ( [18193,18194]" dest="(: ( [17697,17698]"/>
  <match src="solidity: solidity [39532,39540]" dest="solidity: solidity [35958,35966]"/>
  <match src="call_expression [43363,43380]" dest="call_expression [40103,40120]"/>
  <match src="string [9815,9846]" dest="string [10727,10758]"/>
  <match src="primitive_type [75789,75796]" dest="primitive_type [73444,73451]"/>
  <match src="): ) [72426,72427]" dest="): ) [69963,69964]"/>
  <match src="comment: /*      *     bytes4(keccak256('name()')) == 0x06fdde03      *     bytes4(keccak256('symbol()')) == 0x95d89b41      *     bytes4(keccak256('tokenURI(uint256)')) == 0xc87b56dd      *      *     =&gt; 0x06fdde03 ^ 0x95d89b41 ^ 0xc87b56dd == 0x5b5e139f      */ [87455,87709]" dest="comment: /*      *     bytes4(keccak256('name()')) == 0x06fdde03      *     bytes4(keccak256('symbol()')) == 0x95d89b41      *     bytes4(keccak256('tokenURI(uint256)')) == 0xc87b56dd      *      *     =&gt; 0x06fdde03 ^ 0x95d89b41 ^ 0xc87b56dd == 0x5b5e139f      */ [85452,85712]"/>
  <match src="{: { [116251,116252]" dest="{: { [114875,114876]"/>
  <match src="type_name [91385,91392]" dest="type_name [89498,89505]"/>
  <match src="mapping: mapping [55576,55583]" dest="mapping: mapping [52626,52633]"/>
  <match src="): ) [64591,64592]" dest="): ) [61901,61902]"/>
  <match src="(: ( [59912,59913]" dest="(: ( [57078,57079]"/>
  <match src="identifier: map [84700,84703]" dest="identifier: map [82615,82618]"/>
  <match src="state_mutability [42073,42077]" dest="state_mutability [116560,116564]"/>
  <match src=",: , [32308,32309]" dest=",: , [28543,28544]"/>
  <match src="uint256: uint256 [38143,38150]" dest="uint256: uint256 [34532,34539]"/>
  <match src="identifier: abi [48715,48718]" dest="identifier: abi [45594,45597]"/>
  <match src=".: . [80724,80725]" dest=".: . [78515,78516]"/>
  <match src="pragma_directive [101496,101518]" dest="pragma_directive [99898,99920]"/>
  <match src="identifier: Ownable [4171,4178]" dest="identifier: Ownable [4298,4305]"/>
  <match src="contract_body [21706,27867]" dest="contract_body [21259,23969]"/>
  <match src="revert: revert [13472,13478]" dest="revert: revert [14467,14473]"/>
  <match src="identifier: map [80055,80058]" dest="identifier: map [77833,77836]"/>
  <match src="identifier: setApprovalForAll [32274,32291]" dest="identifier: setApprovalForAll [28509,28526]"/>
  <match src="(: ( [83115,83116]" dest="(: ( [80982,80983]"/>
  <match src="type_cast_expression [118745,118791]" dest="type_cast_expression [117016,117055]"/>
  <match src="(: ( [58587,58588]" dest="(: ( [55714,55715]"/>
  <match src="contract_declaration [55260,57846]" dest="contract_declaration [52303,54954]"/>
  <match src="type_name [21918,21925]" dest="type_name [6824,6831]"/>
  <match src="parameter [39681,39693]" dest="parameter [36114,36126]"/>
  <match src="number_literal: 0 [96869,96870]" dest="number_literal: 0 [95128,95129]"/>
  <match src="): ) [21231,21232]" dest="): ) [20793,20794]"/>
  <match src="return_type_definition [58579,58593]" dest="return_type_definition [55706,55720]"/>
  <match src="mapping: mapping [55714,55721]" dest="mapping: mapping [52767,52774]"/>
  <match src="state_mutability [72938,72942]" dest="state_mutability [70496,70500]"/>
  <match src="expression_statement [93350,93454]" dest="expression_statement [91521,91625]"/>
  <match src="bytes: bytes [12864,12869]" dest="bytes: bytes [13845,13850]"/>
  <match src="parameter [103852,103868]" dest="parameter [102334,102350]"/>
  <match src="binary_expression [97653,97691]" dest="binary_expression [95943,95981]"/>
  <match src="function: function [57341,57349]" dest="function: function [54439,54447]"/>
  <match src="override: override [118695,118703]" dest="override: override [120697,120705]"/>
  <match src="[: [ [45179,45180]" dest="[: [ [41984,41985]"/>
  <match src="type_name [46182,46187]" dest="type_name [43008,43013]"/>
  <match src="identifier: _tokenImage [56308,56319]" dest="identifier: _tokenImage [53376,53387]"/>
  <match src="{: { [70630,70631]" dest="{: { [68127,68128]"/>
  <match src=",: , [94498,94499]" dest=",: , [92692,92693]"/>
  <match src="function: function [46083,46091]" dest="function: function [42908,42916]"/>
  <match src="contract_declaration [104246,118002]" dest="contract_declaration [102755,117211]"/>
  <match src="parameter [21350,21368]" dest="parameter [20889,20907]"/>
  <match src="primitive_type [41768,41775]" dest="primitive_type [111231,111238]"/>
  <match src="identifier: symbol [44070,44076]" dest="identifier: symbol [40841,40847]"/>
  <match src="comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [66079,66150]" dest="comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [63440,63511]"/>
  <match src="=&gt;: =&gt; [55375,55377]" dest="=&gt;: =&gt; [52420,52422]"/>
  <match src="contract: contract [55260,55268]" dest="contract: contract [52303,52311]"/>
  <match src="primitive_type [92694,92701]" dest="primitive_type [90847,90854]"/>
  <match src="call_argument [108590,108598]" dest="call_argument [106435,106443]"/>
  <match src="payable: payable [59846,59853]" dest="payable: payable [57008,57015]"/>
  <match src="(: ( [57367,57368]" dest="(: ( [54465,54466]"/>
  <match src="identifier: keyIndex [82462,82470]" dest="identifier: keyIndex [80310,80318]"/>
  <match src="call_argument [112826,112832]" dest="call_argument [112294,112300]"/>
  <match src="call_argument [27838,27844]" dest="call_argument [22289,22295]"/>
  <match src="return: return [23505,23511]" dest="return: return [38380,38386]"/>
  <match src="expression_statement [92911,92940]" dest="expression_statement [91068,91097]"/>
  <match src="comment: // Clear metadata (if any) [97614,97640]" dest="comment: // Clear metadata (if any) [95903,95929]"/>
  <match src="state_variable_declaration [49237,49353]" dest="state_variable_declaration [46134,46250]"/>
  <match src="string [21204,21218]" dest="string [20766,20780]"/>
  <match src="modifier_invocation [14953,14962]" dest="modifier_invocation [15868,15877]"/>
  <match src="identifier: _setTokenURI [108570,108582]" dest="identifier: _setTokenURI [106415,106427]"/>
  <match src="visibility [57393,57401]" dest="visibility [54491,54499]"/>
  <match src="(: ( [89204,89205]" dest="(: ( [87251,87252]"/>
  <match src="(: ( [114080,114081]" dest="(: ( [22759,22760]"/>
  <match src=".: . [80733,80734]" dest=".: . [78524,78525]"/>
  <match src="parameter [84854,84882]" dest="parameter [82775,82803]"/>
  <match src="identifier: _messageId [6774,6784]" dest="identifier: _messageId [7609,7619]"/>
  <match src="call_argument [48715,48765]" dest="call_argument [45594,45644]"/>
  <match src="): ) [90926,90927]" dest="): ) [89023,89024]"/>
  <match src="primitive_type [29217,29224]" dest="primitive_type [25365,25372]"/>
  <match src="member_expression [3594,3610]" dest="member_expression [3699,3715]"/>
  <match src="identifier: index [60784,60789]" dest="identifier: index [57977,57982]"/>
  <match src="user_defined_type [104355,104376]" dest="user_defined_type [102868,102889]"/>
  <match src="returndatasize: returndatasize [53840,53854]" dest="returndatasize: returndatasize [50839,50853]"/>
  <match src="parameter [83818,83825]" dest="parameter [81707,81714]"/>
  <match src="(: ( [110881,110882]" dest="(: ( [109373,109374]"/>
  <match src="identifier: _functionCallWithValue [12495,12517]" dest="identifier: _functionCallWithValue [13469,13491]"/>
  <match src=",: , [82115,82116]" dest=",: , [79955,79956]"/>
  <match src="call_argument [36478,36483]" dest="call_argument [32826,32831]"/>
  <match src="indexed: indexed [21903,21910]" dest="indexed: indexed [21454,21461]"/>
  <match src="type_name [101808,101815]" dest="type_name [100225,100232]"/>
  <match src="(: ( [112566,112567]" dest="(: ( [111480,111481]"/>
  <match src="=: = [72184,72185]" dest="=: = [69716,69717]"/>
  <match src="event_paramater [21839,21855]" dest="event_paramater [21396,21409]"/>
  <match src="(: ( [102269,102270]" dest="(: ( [100703,100704]"/>
  <match src="): ) [70336,70337]" dest="): ) [67823,67824]"/>
  <match src="state_mutability [1222,1226]" dest="state_mutability [1261,1265]"/>
  <match src="identifier: temp [43514,43518]" dest="identifier: temp [40258,40262]"/>
  <match src="calldata: calldata [115590,115598]" dest="calldata: calldata [114195,114203]"/>
  <match src="{: { [71349,71350]" dest="{: { [68867,68868]"/>
  <match src="return_statement [36522,36537]" dest="return_statement [32872,32887]"/>
  <match src="): ) [97161,97162]" dest="): ) [95429,95430]"/>
  <match src="bytes32: bytes32 [18929,18936]" dest="bytes32: bytes32 [18563,18570]"/>
  <match src="return_type_definition [95294,95308]" dest="return_type_definition [93511,93525]"/>
  <match src=".: . [39158,39159]" dest=".: . [35568,35569]"/>
  <match src="(: ( [96925,96926]" dest="(: ( [95185,95186]"/>
  <match src="returns: returns [92510,92517]" dest="returns: returns [90656,90663]"/>
  <match src="function_body [42945,43597]" dest="function_body [39672,40345]"/>
  <match src="(: ( [88712,88713]" dest="(: ( [86743,86744]"/>
  <match src="}: } [54824,54825]" dest="}: } [51844,51845]"/>
  <match src="identifier: nativeToken [47305,47316]" dest="identifier: nativeToken [44158,44169]"/>
  <match src="): ) [18519,18520]" dest="): ) [18031,18032]"/>
  <match src="primitive_type [73813,73820]" dest="primitive_type [71402,71409]"/>
  <match src="identifier: BridgeOperationsStorage [104326,104349]" dest="identifier: BridgeOperationsStorage [102838,102861]"/>
  <match src="parameter [95897,95907]" dest="parameter [94130,94140]"/>
  <match src="return_type_definition [82143,82160]" dest="return_type_definition [79983,80000]"/>
  <match src="identifier: _handleTokens [107706,107719]" dest="identifier: _handleTokens [105530,105543]"/>
  <match src="primitive_type [95303,95307]" dest="primitive_type [93520,93524]"/>
  <match src="(: ( [74100,74101]" dest="(: ( [71699,71700]"/>
  <match src="(: ( [95302,95303]" dest="(: ( [93519,93520]"/>
  <match src="): ) [50646,50647]" dest="): ) [47585,47586]"/>
  <match src="private: private [78613,78620]" dest="private: private [76360,76367]"/>
  <match src="(: ( [79628,79629]" dest="(: ( [77400,77401]"/>
  <match src="indexed: indexed [29225,29232]" dest="indexed: indexed [25373,25380]"/>
  <match src="[: [ [47756,47757]" dest="[: [ [44617,44618]"/>
  <match src="memory: memory [84904,84910]" dest="memory: memory [82825,82831]"/>
  <match src="primitive_type [83646,83653]" dest="primitive_type [81529,81536]"/>
  <match src="uint256: uint256 [75713,75720]" dest="uint256: uint256 [73367,73374]"/>
  <match src="call_expression [12891,12927]" dest="call_expression [13872,13908]"/>
  <match src="identifier: to [31686,31688]" dest="identifier: to [27900,27902]"/>
  <match src="function_definition [44934,45249]" dest="function_definition [41733,42055]"/>
  <match src="address: address [7039,7046]" dest="address: address [7881,7888]"/>
  <match src="identifier: UintSet [85454,85461]" dest="identifier: UintSet [83403,83410]"/>
  <match src="true [100187,100191]" dest="true [98551,98555]"/>
  <match src="identifier: messageId [18945,18954]" dest="identifier: messageId [18579,18588]"/>
  <match src="}: } [97168,97169]" dest="}: } [95437,95438]"/>
  <match src="yul_identifier [53835,53838]" dest="yul_identifier [50834,50837]"/>
  <match src="identifier: div [66869,66872]" dest="identifier: div [64254,64257]"/>
  <match src="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/ForeignNFTOmnibridge.sol [118004,118084]" dest="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/ForeignNFTOmnibridge.sol [118820,118900]"/>
  <match src="type_name [61028,61035]" dest="type_name [58227,58234]"/>
  <match src="address: address [22161,22168]" dest="address: address [21716,21723]"/>
  <match src="type_name [112064,112070]" dest="type_name [111727,111733]"/>
  <match src="identifier: _tokenId [111150,111158]" dest="identifier: _tokenId [110517,110525]"/>
  <match src="function: function [18466,18474]" dest="function: function [17978,17986]"/>
  <match src="}: } [35633,35634]" dest="}: } [31951,31952]"/>
  <match src="false: false [107734,107739]" dest="false: false [105558,105563]"/>
  <match src="identifier: data [19816,19820]" dest="identifier: data [19370,19374]"/>
  <match src="type_name [3510,3517]" dest="type_name [3614,3621]"/>
  <match src="type_name [73589,73592]" dest="type_name [71169,71172]"/>
  <match src="]: ] [81106,81107]" dest="]: ] [78912,78913]"/>
  <match src="type_name [103137,103143]" dest="type_name [101599,101605]"/>
  <match src="primitive_type [24247,24254]" dest="primitive_type [23669,23676]"/>
  <match src="identifier: _nativeToken [48924,48936]" dest="identifier: _nativeToken [45806,45818]"/>
  <match src=",: , [54778,54779]" dest=",: , [51796,51797]"/>
  <match src="identifier: to [98718,98720]" dest="identifier: to [97042,97044]"/>
  <match src="variable_declaration [43203,43215]" dest="variable_declaration [39937,39949]"/>
  <match src="type_name [61922,61927]" dest="type_name [59144,59149]"/>
  <match src=",: , [12310,12311]" dest=",: , [13282,13283]"/>
  <match src="parameter [102576,102592]" dest="parameter [101020,101036]"/>
  <match src="return_statement [2513,2592]" dest="return_statement [2592,2671]"/>
  <match src="): ) [118679,118680]" dest="): ) [116942,116943]"/>
  <match src="pragma: pragma [68945,68951]" dest="pragma: pragma [66390,66396]"/>
  <match src="uint256: uint256 [68743,68750]" dest="uint256: uint256 [66179,66186]"/>
  <match src="binary_expression [79629,79642]" dest="binary_expression [77401,77414]"/>
  <match src="call_expression [90218,90236]" dest="call_expression [88293,88311]"/>
  <match src="expression_statement [72410,72428]" dest="expression_statement [69947,69965]"/>
  <match src="): ) [90237,90238]" dest="): ) [88312,88313]"/>
  <match src="): ) [2589,2590]" dest="): ) [2668,2669]"/>
  <match src="internal: internal [884,892]" dest="internal: internal [909,917]"/>
  <match src="call_argument [110698,110706]" dest="call_argument [109192,109200]"/>
  <match src="modifier_invocation [101838,101860]" dest="modifier_invocation [100256,100278]"/>
  <match src="}: } [116514,116515]" dest="}: } [115144,115145]"/>
  <match src="variable_declaration [112064,112084]" dest="variable_declaration [111727,111747]"/>
  <match src=",: , [104303,104304]" dest=",: , [102813,102814]"/>
  <match src="(: ( [105162,105163]" dest="(: ( [119785,119786]"/>
  <match src="identifier: keccak256 [47757,47766]" dest="identifier: keccak256 [44618,44627]"/>
  <match src="comment: /**       * @dev Safely transfers `tokenId` token from `from` to `to`.       *       * Requirements:       *      * - `from` cannot be the zero address.      * - `to` cannot be the zero address.       * - `tokenId` token must exist and be owned by `from`.       * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.       * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.       *       * Emits a {Transfer} event.       */ [32578,33144]" dest="comment: /**       * @dev Safely transfers `tokenId` token from `from` to `to`.       *       * Requirements:       *      * - `from` cannot be the zero address.      * - `to` cannot be the zero address.       * - `tokenId` token must exist and be owned by `from`.       * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.       * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.       *       * Emits a {Transfer} event.       */ [28822,29400]"/>
  <match src="primitive_type [70318,70325]" dest="primitive_type [67805,67812]"/>
  <match src="visibility [9755,9763]" dest="visibility [10666,10674]"/>
  <match src="parameter [100079,100097]" dest="parameter [98439,98457]"/>
  <match src="address: address [51034,51041]" dest="address: address [47982,47989]"/>
  <match src="return: return [81083,81089]" dest="return: return [78889,78895]"/>
  <match src="{: { [59074,59075]" dest="{: { [56215,56216]"/>
  <match src="primitive_type [62529,62533]" dest="primitive_type [59776,59780]"/>
  <match src="comment: // in bytes32. [77956,77970]" dest="comment: // in bytes32. [75680,75694]"/>
  <match src="comment: // Update the index for the moved entry [80515,80554]" dest="comment: // Update the index for the moved entry [78302,78341]"/>
  <match src="&quot;: &quot; [88849,88850]" dest="&quot;: &quot; [86881,86882]"/>
  <match src="return: return [84369,84375]" dest="return: return [82273,82279]"/>
  <match src="}: } [79225,79226]" dest="}: } [76985,76986]"/>
  <match src="call_expression [82500,82536]" dest="call_expression [80349,80385]"/>
  <match src="]: ] [47818,47819]" dest="]: ] [44679,44680]"/>
  <match src="function_body [79470,80917]" dest="function_body [77238,78717]"/>
  <match src="expression_statement [59970,59975]" dest="expression_statement [57137,57142]"/>
  <match src="comment: /**  * @title ERC721TokenProxy  * @dev Helps to reduces the size of the deployed bytecode for automatically created tokens, by using a proxy contract.  */ [55105,55259]" dest="comment: /**  * @title ERC721TokenProxy  * @dev Helps to reduces the size of the deployed bytecode for automatically created tokens, by using a proxy contract.  */ [52144,52301]"/>
  <match src="visibility [86132,86139]" dest="visibility [84096,84103]"/>
  <match src="identifier: BridgeOperationsStorage [1873,1896]" dest="identifier: BridgeOperationsStorage [1937,1960]"/>
  <match src="identifier: encodePacked [23538,23550]" dest="identifier: encodePacked [38413,38425]"/>
  <match src="comment: /**     * @dev Returns the element stored at position `index` in the set. O(1).     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [83875,84193]" dest="comment: /**     * @dev Returns the element stored at position `index` in the set. O(1).     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [81768,82094]"/>
  <match src="identifier: msg [60110,60113]" dest="identifier: msg [57278,57281]"/>
  <match src="identifier: tokenId [100739,100746]" dest="identifier: tokenId [99118,99125]"/>
  <match src="(: ( [94529,94530]" dest="(: ( [92724,92725]"/>
  <match src=":: : [46330,46331]" dest=":: : [43157,43158]"/>
  <match src="): ) [88627,88628]" dest="): ) [86652,86653]"/>
  <match src="identifier: map [82183,82186]" dest="identifier: map [80024,80027]"/>
  <match src="type_cast_expression [83094,83106]" dest="type_cast_expression [80961,80973]"/>
  <match src="identifier: TokensBridged [115175,115188]" dest="identifier: TokensBridged [113768,113781]"/>
  <match src="function: function [39762,39770]" dest="function: function [36200,36208]"/>
  <match src="identifier: maxGasPerTx [18475,18486]" dest="identifier: maxGasPerTx [17987,17998]"/>
  <match src="primitive_type [3510,3517]" dest="primitive_type [3614,3621]"/>
  <match src="parameter [36362,36368]" dest="parameter [32708,32714]"/>
  <match src="{: { [21155,21156]" dest="{: { [20716,20717]"/>
  <match src="(: ( [36389,36390]" dest="(: ( [32736,32737]"/>
  <match src="identifier: newLimit [21926,21934]" dest="identifier: numberOfCollectedSignatures [6832,6859]"/>
  <match src="visibility [2854,2862]" dest="visibility [2941,2949]"/>
  <match src="primitive_type [101406,101413]" dest="primitive_type [99803,99810]"/>
  <match src="visibility [84255,84263]" dest="visibility [82157,82165]"/>
  <match src="identifier: selector [46879,46887]" dest="identifier: selector [43717,43725]"/>
  <match src="type_name [6638,6645]" dest="type_name [7469,7476]"/>
  <match src="call_expression [110726,110759]" dest="call_expression [109221,109254]"/>
  <match src="identifier: index [43487,43492]" dest="identifier: index [40231,40236]"/>
  <match src="type_name [86210,86256]" dest="type_name [84177,84223]"/>
  <match src="identifier: keccak256 [2885,2894]" dest="identifier: keccak256 [2973,2982]"/>
  <match src="binary_expression [98309,98333]" dest="binary_expression [96622,96646]"/>
  <match src="function: function [100599,100607]" dest="function: function [98976,98984]"/>
  <match src="solidity_version:  0.7.5 [57968,57974]" dest="solidity_version:  0.7.5 [55080,55086]"/>
  <match src="state_mutability [18498,18502]" dest="state_mutability [18010,18014]"/>
  <match src="identifier: _messageId [6950,6960]" dest="identifier: _messageId [7789,7799]"/>
  <match src="indexed: indexed [40173,40180]" dest="indexed: indexed [36626,36633]"/>
  <match src="virtual: virtual [98283,98290]" dest="virtual: virtual [96595,96602]"/>
  <match src="): ) [24777,24778]" dest="): ) [23403,23404]"/>
  <match src="call_argument [19547,19557]" dest="call_argument [19127,19137]"/>
  <match src="type_cast_expression [107402,107415]" dest="type_cast_expression [105257,105270]"/>
  <match src="user_defined_type [40071,40088]" dest="user_defined_type [36521,36538]"/>
  <match src="identifier: _tokenId [113861,113869]" dest="identifier: _tokenId [112840,112848]"/>
  <match src="identifier: _readTokenURI [46670,46683]" dest="identifier: _readTokenURI [43506,43519]"/>
  <match src="identifier: ERC721Relayer [104493,104506]" dest="identifier: ERC721Relayer [103012,103025]"/>
  <match src="primitive_type [72952,72959]" dest="primitive_type [70510,70517]"/>
  <match src=",: , [115125,115126]" dest=",: , [113716,113717]"/>
  <match src="type_name [112120,112126]" dest="type_name [111315,111321]"/>
  <match src="function_definition [18466,18575]" dest="function_definition [17978,18089]"/>
  <match src="parameter [5672,5679]" dest="parameter [5855,5862]"/>
  <match src="): ) [106097,106098]" dest="): ) [103924,103925]"/>
  <match src="type_name [36268,36275]" dest="type_name [32611,32618]"/>
  <match src="member_expression [2220,2236]" dest="member_expression [2291,2307]"/>
  <match src="bool: bool [86250,86254]" dest="bool: bool [84217,84221]"/>
  <match src="type_name [117099,117106]" dest="type_name [115642,115649]"/>
  <match src="]: ] [16078,16079]" dest="]: ] [16554,16555]"/>
  <match src="=: = [95416,95417]" dest="=: = [93635,93636]"/>
  <match src="): ) [100539,100540]" dest="): ) [98912,98913]"/>
  <match src="): ) [113142,113143]" dest="): ) [111297,111298]"/>
  <match src="call_argument [90782,90787]" dest="call_argument [88873,88878]"/>
  <match src=",: , [114937,114938]" dest=",: , [113559,113560]"/>
  <match src="identifier: Transfer [97129,97137]" dest="identifier: Transfer [95397,95405]"/>
  <match src="(: ( [42579,42580]" dest="(: ( [39209,39210]"/>
  <match src=",: , [40813,40814]" dest=",: , [37288,37289]"/>
  <match src="}: } [56790,56791]" dest="}: } [53871,53872]"/>
  <match src="{: { [40791,40792]" dest="{: { [37265,37266]"/>
  <match src="identifier: tokenURI [46870,46878]" dest="identifier: tokenURI [43708,43716]"/>
  <match src="function_definition [84841,85043]" dest="function_definition [82762,82966]"/>
  <match src="return: return [80846,80852]" dest="return: return [78642,78648]"/>
  <match src="identifier: index [61036,61041]" dest="identifier: index [58235,58240]"/>
  <match src="(: ( [73873,73874]" dest="(: ( [71463,71464]"/>
  <match src="{: { [13454,13455]" dest="{: { [14448,14449]"/>
  <match src="private: private [62535,62542]" dest="private: private [59782,59789]"/>
  <match src="member_expression [76002,76012]" dest="member_expression [73664,73674]"/>
  <match src="primitive_type [86308,86314]" dest="primitive_type [84278,84284]"/>
  <match src="parameter [20807,20825]" dest="parameter [20360,20378]"/>
  <match src="number_literal: 0xca7fc3dc [41055,41065]" dest="number_literal: 0xca7fc3dc [37538,37548]"/>
  <match src="(: ( [35154,35155]" dest="(: ( [31466,31467]"/>
  <match src="): ) [32541,32542]" dest="): ) [28783,28784]"/>
  <match src="identifier: sender [14607,14613]" dest="identifier: sender [15517,15523]"/>
  <match src="call_argument [63545,63570]" dest="call_argument [60821,60846]"/>
  <match src="&quot;: &quot; [114081,114082]" dest="&quot;: &quot; [22760,22761]"/>
  <match src="call_expression [20893,20937]" dest="call_expression [20447,20491]"/>
  <match src="): ) [107646,107647]" dest="): ) [105505,105506]"/>
  <match src="type_name [32566,32570]" dest="type_name [28808,28812]"/>
  <match src="): ) [324,325]" dest="): ) [334,335]"/>
  <match src="type_name [23870,23877]" dest="type_name [38746,38753]"/>
  <match src="event_paramater [21918,21934]" dest="event_paramater [6824,6859]"/>
  <match src="): ) [39264,39265]" dest="): ) [35676,35677]"/>
  <match src="member_expression [36529,36536]" dest="member_expression [32879,32886]"/>
  <match src=",: , [97871,97872]" dest=",: , [96169,96170]"/>
  <match src="identifier: bridgedTokenAddress [47653,47672]" dest="identifier: bridgedTokenAddress [44513,44532]"/>
  <match src="identifier: tokenId [93391,93398]" dest="identifier: tokenId [91562,91569]"/>
  <match src="event: event [29370,29375]" dest="event: event [25523,25528]"/>
  <match src="visibility [39629,39637]" dest="visibility [36059,36067]"/>
  <match src="): ) [46199,46200]" dest="): ) [43025,43026]"/>
  <match src="array_access [49879,49915]" dest="array_access [46792,46828]"/>
  <match src="identifier: tokenId [44244,44251]" dest="identifier: tokenId [41020,41027]"/>
  <match src="return_type_definition [72752,72766]" dest="return_type_definition [70303,70317]"/>
  <match src="address: address [117075,117082]" dest="address: address [115617,115624]"/>
  <match src="solidity: solidity [28751,28759]" dest="solidity: solidity [24884,24892]"/>
  <match src="identifier: key [84720,84723]" dest="identifier: key [82635,82638]"/>
  <match src="identifier: _remove [83398,83405]" dest="identifier: _remove [81274,81281]"/>
  <match src="state_mutability [6369,6373]" dest="state_mutability [7192,7196]"/>
  <match src="type_name [16020,16024]" dest="type_name [16495,16499]"/>
  <match src="identifier: length [39159,39165]" dest="identifier: length [35569,35575]"/>
  <match src="type_name [110433,110440]" dest="type_name [109011,109018]"/>
  <match src="identifier: set [72784,72787]" dest="identifier: set [70336,70339]"/>
  <match src="type_cast_expression [38543,38556]" dest="type_cast_expression [34940,34953]"/>
  <match src="override_specifier [103906,103914]" dest="override_specifier [102388,102396]"/>
  <match src="identifier: _setBridgeContract [16818,16836]" dest="identifier: _setBridgeContract [17012,17030]"/>
  <match src="(: ( [9711,9712]" dest="(: ( [10622,10623]"/>
  <match src="array_access [114035,114104]" dest="array_access [22721,22790]"/>
  <match src="(: ( [6637,6638]" dest="(: ( [7468,7469]"/>
  <match src="identifier: pop [72422,72425]" dest="identifier: pop [69959,69962]"/>
  <match src="identifier: OwnershipTransferred [6158,6178]" dest="identifier: OwnershipTransferred [6358,6378]"/>
  <match src="): ) [81071,81072]" dest="): ) [78876,78877]"/>
  <match src="(: ( [5980,5981]" dest="(: ( [6172,6173]"/>
  <match src="call_argument [57420,57498]" dest="call_argument [54519,54597]"/>
  <match src="string_literal [10016,10076]" dest="string_literal [10932,10992]"/>
  <match src="identifier: _recipient [107741,107751]" dest="identifier: _recipient [105565,105575]"/>
  <match src="identifier: _relayToken [38071,38082]" dest="identifier: _relayToken [34457,34468]"/>
  <match src="identifier: _get [84695,84699]" dest="identifier: _get [82610,82614]"/>
  <match src="identifier: _tokenId [109230,109238]" dest="identifier: _tokenId [107165,107173]"/>
  <match src="call_expression [111700,111729]" dest="call_expression [111032,111061]"/>
  <match src="type_cast_expression [12405,12418]" dest="type_cast_expression [13378,13391]"/>
  <match src=",: , [37447,37448]" dest=",: , [33821,33822]"/>
  <match src="(: ( [6941,6942]" dest="(: ( [7780,7781]"/>
  <match src="{: { [34669,34670]" dest="{: { [30972,30973]"/>
  <match src="function: function [97386,97394]" dest="function: function [95667,95675]"/>
  <match src="address: address [50104,50111]" dest="address: address [47024,47031]"/>
  <match src="uint256: uint256 [29775,29782]" dest="uint256: uint256 [25942,25949]"/>
  <match src="identifier: tokenId [95917,95924]" dest="identifier: tokenId [94150,94157]"/>
  <match src="call_argument [48924,48936]" dest="call_argument [45806,45818]"/>
  <match src="): ) [105569,105570]" dest="): ) [120135,120136]"/>
  <match src="function: function [102549,102557]" dest="function: function [100993,101001]"/>
  <match src="identifier: _lock [35160,35165]" dest="identifier: _lock [31472,31477]"/>
  <match src="identifier: _msgSender [91554,91564]" dest="identifier: _msgSender [89671,89681]"/>
  <match src=",: , [111117,111118]" dest=",: , [110500,110501]"/>
  <match src="&quot;: &quot; [11989,11990]" dest="&quot;: &quot; [12952,12953]"/>
  <match src="default: default [54738,54745]" dest="default: default [51755,51762]"/>
  <match src="address: address [29414,29421]" dest="address: address [25567,25574]"/>
  <match src="memory: memory [118667,118673]" dest="memory: memory [116930,116936]"/>
  <match src="(: ( [12726,12727]" dest="(: ( [13704,13705]"/>
  <match src="{: { [9764,9765]" dest="{: { [10675,10676]"/>
  <match src="comment: /**      * @dev Tells the bridged token address of a message sent to the AMB bridge.      * @return address of a token contract.      */ [2288,2424]" dest="comment: /**      * @dev Tells the bridged token address of a message sent to the AMB bridge.      * @return address of a token contract.      */ [2362,2501]"/>
  <match src="external: external [33569,33577]" dest="external: external [29839,29847]"/>
  <match src="primitive_type [6898,6905]" dest="primitive_type [7735,7742]"/>
  <match src="primitive_type [6638,6645]" dest="primitive_type [7469,7476]"/>
  <match src="call_expression [65089,65132]" dest="call_expression [62417,62460]"/>
  <match src="primitive_type [9739,9746]" dest="primitive_type [10650,10657]"/>
  <match src="identifier: staticcall [46820,46830]" dest="identifier: staticcall [43658,43668]"/>
  <match src="parameter [84948,84955]" dest="parameter [82869,82876]"/>
  <match src="identifier: from [61899,61903]" dest="identifier: from [59121,59125]"/>
  <match src="identifier: token [36959,36964]" dest="identifier: token [33320,33325]"/>
  <match src="identifier: getApproved [91807,91818]" dest="identifier: getApproved [89934,89945]"/>
  <match src="parameter [42087,42094]" dest="parameter [18186,18193]"/>
  <match src="{: { [97693,97694]" dest="{: { [95983,95984]"/>
  <match src="identifier: _setRequestGasLimit [17515,17534]" dest="identifier: _setRequestGasLimit [118658,118677]"/>
  <match src="expression_statement [65535,65565]" dest="expression_statement [62877,62907]"/>
  <match src="identifier: owner [97854,97859]" dest="identifier: owner [96152,96157]"/>
  <match src="call_argument [112975,112981]" dest="call_argument [112926,112932]"/>
  <match src="state_variable_declaration [86355,86378]" dest="state_variable_declaration [84328,84351]"/>
  <match src="[: [ [63633,63634]" dest="[: [ [60910,60911]"/>
  <match src=".: . [12897,12898]" dest=".: . [13878,13879]"/>
  <match src="parameter [62955,62973]" dest="parameter [60215,60233]"/>
  <match src="^:  ^ [60214,60216]" dest="^:  ^ [57389,57391]"/>
  <match src="primitive_type [83021,83028]" dest="primitive_type [80887,80894]"/>
  <match src="identifier: sender [40181,40187]" dest="identifier: sender [36634,36640]"/>
  <match src="bytes: bytes [4931,4936]" dest="bytes: bytes [5080,5085]"/>
  <match src="identifier: require [103514,103521]" dest="identifier: require [101986,101993]"/>
  <match src="identifier: _baseURI [55890,55898]" dest="identifier: _baseURI [52947,52955]"/>
  <match src="identifier: _token [46813,46819]" dest="identifier: _token [43651,43657]"/>
  <match src="identifier: _bridgedToken [48858,48871]" dest="identifier: _bridgedToken [45738,45751]"/>
  <match src="(: ( [3219,3220]" dest="(: ( [3315,3316]"/>
  <match src="primitive_type [11240,11247]" dest="primitive_type [12187,12194]"/>
  <match src="(: ( [73788,73789]" dest="(: ( [71377,71378]"/>
  <match src="expression_statement [109844,109894]" dest="expression_statement [108260,108310]"/>
  <match src="identifier: _readSymbol [112087,112098]" dest="identifier: _readSymbol [111750,111761]"/>
  <match src="identifier: target [12285,12291]" dest="identifier: target [13257,13263]"/>
  <match src="(: ( [114063,114064]" dest="(: ( [22742,22743]"/>
  <match src="override_specifier [93331,93339]" dest="override_specifier [91501,91509]"/>
  <match src="parameter [76573,76592]" dest="parameter [74255,74274]"/>
  <match src="identifier: _onlyMediator [14555,14568]" dest="identifier: _onlyMediator [15423,15436]"/>
  <match src="type_name [2140,2147]" dest="type_name [2210,2217]"/>
  <match src="address: address [20350,20357]" dest="address: address [19904,19911]"/>
  <match src="type_name [48626,48633]" dest="type_name [45504,45511]"/>
  <match src="state_mutability [40660,40664]" dest="state_mutability [37127,37131]"/>
  <match src="function_body [76641,76696]" dest="function_body [74323,74380]"/>
  <match src="comment: // The Set implementation uses private functions, and user-facing [69838,69903]" dest="comment: // The Set implementation uses private functions, and user-facing [67313,67378]"/>
  <match src="(: ( [14568,14569]" dest="(: ( [15436,15437]"/>
  <match src="(: ( [97820,97821]" dest="(: ( [96116,96117]"/>
  <match src="identifier: ReentrancyGuard [35934,35949]" dest="identifier: ReentrancyGuard [32268,32283]"/>
  <match src="bytes32: bytes32 [6509,6516]" dest="bytes32: bytes32 [7336,7343]"/>
  <match src="internal: internal [64593,64601]" dest="internal: internal [61903,61911]"/>
  <match src="(: ( [49852,49853]" dest="(: ( [46764,46765]"/>
  <match src="identifier: INITIALIZED [724,735]" dest="identifier: INITIALIZED [747,758]"/>
  <match src="comment: // which can be also obtained as `IERC721Receiver(0).onERC721Received.selector` [85647,85726]" dest="comment: // which can be also obtained as `IERC721Receiver(0).onERC721Received.selector` [83601,83680]"/>
  <match src="/=: /= [43544,43546]" dest="/=: /= [40289,40291]"/>
  <match src="(: ( [21288,21289]" dest="(: ( [20853,20854]"/>
  <match src="identifier: bridgeContract [18245,18259]" dest="identifier: bridgeContract [17750,17764]"/>
  <match src="(: ( [48158,48159]" dest="(: ( [45027,45028]"/>
  <match src="call_argument [88487,88507]" dest="call_argument [86510,86530]"/>
  <match src="comment: /**      * @dev Same as {get}, with a custom error message when `key` is not in the map.      */ [84740,84836]" dest="comment: /**      * @dev Same as {get}, with a custom error message when `key` is not in the map.      */ [82658,82756]"/>
  <match src="identifier: value [74454,74459]" dest="identifier: value [72061,72066]"/>
  <match src="(: ( [84694,84695]" dest="(: ( [82609,82610]"/>
  <match src="variable_declaration_statement [71689,71728]" dest="variable_declaration_statement [69212,69251]"/>
  <match src="identifier: _ [102304,102305]" dest="identifier: _ [100739,100740]"/>
  <match src="identifier: value [72732,72737]" dest="identifier: value [70283,70288]"/>
  <match src="identifier: symbol [107236,107242]" dest="identifier: symbol [105087,105093]"/>
  <match src="expression_statement [3569,3658]" dest="expression_statement [3674,3763]"/>
  <match src="state_mutability [39079,39083]" dest="state_mutability [35487,35491]"/>
  <match src="address: address [57536,57543]" dest="address: address [54636,54643]"/>
  <match src="(: ( [13378,13379]" dest="(: ( [14370,14371]"/>
  <match src="user_defined_type [81673,81676]" dest="user_defined_type [79499,79502]"/>
  <match src="pragma_directive [1307,1329]" dest="pragma_directive [1351,1373]"/>
  <match src="public: public [24263,24269]" dest="public: public [23685,23691]"/>
  <match src="identifier: msg [102215,102218]" dest="identifier: msg [100649,100652]"/>
  <match src="(: ( [91865,91866]" dest="(: ( [89992,89993]"/>
  <match src="pragma: pragma [85106,85112]" dest="pragma: pragma [83035,83041]"/>
  <match src="number_literal: 0 [107344,107345]" dest="number_literal: 0 [105197,105198]"/>
  <match src="!=: != [6129,6131]" dest="!=: != [6328,6330]"/>
  <match src="parameter [12695,12707]" dest="parameter [13672,13684]"/>
  <match src="assignment_expression [63613,63653]" dest="assignment_expression [60890,60930]"/>
  <match src="parameter [84287,84294]" dest="parameter [82189,82196]"/>
  <match src="identifier: _inner [75781,75787]" dest="identifier: _inner [73436,73442]"/>
  <match src="string: string [99374,99380]" dest="string: string [97720,97726]"/>
  <match src="(: ( [54942,54943]" dest="(: ( [51971,51972]"/>
  <match src="}: } [42649,42650]" dest="}: } [39362,39363]"/>
  <match src="expression_statement [88777,88852]" dest="expression_statement [86809,86884]"/>
  <match src="expression_statement [97707,97734]" dest="expression_statement [95998,96025]"/>
  <match src="primitive_type [5201,5208]" dest="primitive_type [5372,5379]"/>
  <match src="user_defined_type [38092,38099]" dest="user_defined_type [34479,34486]"/>
  <match src="returns: returns [6559,6566]" dest="returns: returns [7388,7395]"/>
  <match src="uint64: uint64 [39681,39687]" dest="uint64: uint64 [36114,36120]"/>
  <match src="identifier: contains [75901,75909]" dest="identifier: contains [73562,73570]"/>
  <match src="{: { [4197,4198]" dest="{: { [4324,4325]"/>
  <match src="function_body [110518,111166]" dest="function_body [109098,109540]"/>
  <match src="&quot;: &quot; [81792,81793]" dest="&quot;: &quot; [79619,79620]"/>
  <match src="||: || [91576,91578]" dest="||: || [89693,89695]"/>
  <match src="identifier: BasicAMBMediator [18856,18872]" dest="identifier: BasicAMBMediator [18489,18505]"/>
  <match src="identifier: _receiver [39398,39407]" dest="identifier: _receiver [35817,35826]"/>
  <match src="function: function [44061,44069]" dest="function: function [40832,40840]"/>
  <match src="identifier: operator [61881,61889]" dest="identifier: operator [59103,59111]"/>
  <match src="return: return [76651,76657]" dest="return: return [74334,74340]"/>
  <match src="!=: != [63557,63559]" dest="!=: != [60833,60835]"/>
  <match src="contract_body [41420,42650]" dest="contract_body [37916,39363]"/>
  <match src="identifier: owner [91596,91601]" dest="identifier: owner [89713,89718]"/>
  <match src="call_argument [100289,100334]" dest="call_argument [98656,98701]"/>
  <match src="identifier: owner [29823,29828]" dest="identifier: owner [25990,25995]"/>
  <match src="{: { [43866,43867]" dest="{: { [40627,40628]"/>
  <match src="(: ( [97137,97138]" dest="(: ( [95405,95406]"/>
  <match src="function_definition [103117,103220]" dest="function_definition [101579,101684]"/>
  <match src="&quot;: &quot; [2912,2913]" dest="&quot;: &quot; [3000,3001]"/>
  <match src="return_statement [91031,91060]" dest="return_statement [89130,89159]"/>
  <match src="function: function [68120,68128]" dest="function: function [65540,65548]"/>
  <match src="member_expression [112344,112374]" dest="member_expression [111931,111961]"/>
  <match src="state_variable_declaration [354,406]" dest="state_variable_declaration [365,417]"/>
  <match src="): ) [90530,90531]" dest="): ) [88613,88614]"/>
  <match src="call_expression [106189,106215]" dest="call_expression [104017,104043]"/>
  <match src="function_body [17233,17303]" dest="function_body [17436,17508]"/>
  <match src="returns: returns [56982,56989]" dest="returns: returns [54069,54076]"/>
  <match src="function_body [83381,83438]" dest="function_body [81256,81315]"/>
  <match src="bytes32: bytes32 [3129,3136]" dest="bytes32: bytes32 [3224,3231]"/>
  <match src="call_struct_argument [78890,78899]" dest="call_struct_argument [76642,76651]"/>
  <match src="identifier: _tokenId [102920,102928]" dest="identifier: _tokenId [101374,101382]"/>
  <match src="number_literal: 0 [72807,72808]" dest="number_literal: 0 [70359,70360]"/>
  <match src="): ) [84628,84629]" dest="): ) [82542,82543]"/>
  <match src="memory: memory [45569,45575]" dest="memory: memory [42383,42389]"/>
  <match src="identifier: _data [96386,96391]" dest="identifier: _data [94629,94634]"/>
  <match src="=: = [13987,13988]" dest="=: = [15010,15011]"/>
  <match src="identifier: call [12898,12902]" dest="identifier: call [13879,13883]"/>
  <match src="identifier: BridgeOperationsStorage [18874,18897]" dest="identifier: BridgeOperationsStorage [18507,18530]"/>
  <match src="[: [ [1027,1028]" dest="[: [ [1057,1058]"/>
  <match src=".: . [46869,46870]" dest=".: . [43707,43708]"/>
  <match src="{: { [36393,36394]" dest="{: { [32740,32741]"/>
  <match src="{: { [41420,41421]" dest="{: { [37916,37917]"/>
  <match src="comment: /**      * @dev Internal function for reading ERC721 token symbol.      * Use custom predefined symbol in case symbol() function is not implemented.      * @param _token address of the ERC721 token contract.      * @return symbol for the token.      */ [45826,46078]" dest="comment: /**      * @dev Internal function for reading ERC721 token symbol.      * Use custom predefined symbol in case symbol() function is not implemented.      * @param _token address of the ERC721 token contract.      * @return symbol for the token.      */ [42645,42902]"/>
  <match src="(: ( [63544,63545]" dest="(: ( [60820,60821]"/>
  <match src="identifier: sender [102219,102225]" dest="identifier: sender [100653,100659]"/>
  <match src="&quot;: &quot; [89621,89622]" dest="&quot;: &quot; [87683,87684]"/>
  <match src="function_body [89252,89281]" dest="function_body [87299,87330]"/>
  <match src="{: { [3559,3560]" dest="{: { [3663,3664]"/>
  <match src="(: ( [2236,2237]" dest="(: ( [2307,2308]"/>
  <match src="parameter [2838,2852]" dest="parameter [2925,2939]"/>
  <match src="{: { [59960,59961]" dest="{: { [57126,57127]"/>
  <match src="): ) [82442,82443]" dest="): ) [80289,80290]"/>
  <match src="parameter [89523,89538]" dest="parameter [87584,87599]"/>
  <match src=",: , [65549,65550]" dest=",: , [62891,62892]"/>
  <match src="parameter [68178,68185]" dest="parameter [65598,65605]"/>
  <match src="variable_declaration_statement [91436,91469]" dest="variable_declaration_statement [89550,89583]"/>
  <match src="identifier: staticcall [46210,46220]" dest="identifier: staticcall [43036,43046]"/>
  <match src="type_cast_expression [115638,115654]" dest="type_cast_expression [114245,114261]"/>
  <match src="identifier: _inner [74193,74199]" dest="identifier: _inner [71793,71799]"/>
  <match src="return_type_definition [76168,76185]" dest="return_type_definition [73836,73853]"/>
  <match src="expression_statement [103514,103553]" dest="expression_statement [101986,102025]"/>
  <match src="call_argument [20474,20484]" dest="call_argument [20030,20040]"/>
  <match src="type_name [92519,92523]" dest="type_name [90665,90669]"/>
  <match src="call_expression [98651,98681]" dest="call_expression [96973,97003]"/>
  <match src="): ) [60548,60549]" dest="): ) [57735,57736]"/>
  <match src="assignment_expression [903,934]" dest="assignment_expression [929,960]"/>
  <match src="identifier: _token [115710,115716]" dest="identifier: _token [114318,114324]"/>
  <match src="primitive_type [117124,117131]" dest="primitive_type [115668,115675]"/>
  <match src="identifier: to [96373,96375]" dest="identifier: to [94616,94618]"/>
  <match src="parameter [40738,40750]" dest="parameter [37209,37221]"/>
  <match src="parameter [24247,24261]" dest="parameter [23669,23683]"/>
  <match src="uint256: uint256 [22557,22564]" dest="uint256: uint256 [117066,117073]"/>
  <match src="{: { [85347,85348]" dest="{: { [83293,83294]"/>
  <match src="{: { [4683,4684]" dest="{: { [4823,4824]"/>
  <match src="call_expression [112087,112106]" dest="call_expression [111750,111769]"/>
  <match src="type_cast_expression [83108,83131]" dest="type_cast_expression [80975,80998]"/>
  <match src="call_argument [97591,97592]" dest="call_argument [95878,95879]"/>
  <match src="function_definition [16234,16368]" dest="function_definition [16717,16853]"/>
  <match src="!=: != [111697,111699]" dest="!=: != [111029,111031]"/>
  <match src="(: ( [83123,83124]" dest="(: ( [80990,80991]"/>
  <match src="&quot;: &quot; [66906,66907]" dest="&quot;: &quot; [64291,64292]"/>
  <match src="function_body [82161,82233]" dest="function_body [80001,80075]"/>
  <match src="{: { [56410,56411]" dest="{: { [53482,53483]"/>
  <match src="contract_declaration [18811,21418]" dest="contract_declaration [18444,20960]"/>
  <match src="identifier: ownerOf [97461,97468]" dest="identifier: ownerOf [95743,95750]"/>
  <match src="identifier: TokenImageStorage [49202,49219]" dest="identifier: TokenImageStorage [46098,46115]"/>
  <match src="type_name [98957,98963]" dest="type_name [97293,97299]"/>
  <match src="identifier: _messageId [117541,117551]" dest="identifier: _messageId [115967,115977]"/>
  <match src="override_specifier [93096,93104]" dest="override_specifier [91259,91267]"/>
  <match src="): ) [111960,111961]" dest="): ) [110116,110117]"/>
  <match src="solidity_version_comparison_operator [43684,43686]" dest="solidity_version_comparison_operator [40438,40440]"/>
  <match src="identifier: at [90779,90781]" dest="identifier: at [88870,88872]"/>
  <match src="primitive_type [65574,65581]" dest="primitive_type [62917,62924]"/>
  <match src="}: } [116520,116521]" dest="}: } [115151,115152]"/>
  <match src="&gt;: &gt; [13100,13101]" dest="&gt;: &gt; [14086,14087]"/>
  <match src="): ) [52258,52259]" dest="): ) [49225,49226]"/>
  <match src="]: ] [72064,72065]" dest="]: ] [69593,69594]"/>
  <match src="(: ( [2450,2451]" dest="(: ( [2528,2529]"/>
  <match src="type_name [33424,33431]" dest="type_name [29690,29697]"/>
  <match src="identifier: encodePacked [48258,48270]" dest="identifier: encodePacked [45128,45140]"/>
  <match src="comment: // implementations (such as Uint256ToAddressMap) are just wrappers around [77771,77844]" dest="comment: // implementations (such as Uint256ToAddressMap) are just wrappers around [75492,75565]"/>
  <match src="inheritance_specifier [41405,41419]" dest="inheritance_specifier [37901,37915]"/>
  <match src="identifier: bridgeContract [103562,103576]" dest="identifier: bridgeContract [102035,102049]"/>
  <match src="comment: // File: contracts/tokens/ERC721BridgeToken.sol [101447,101494]" dest="comment: // File: contracts/tokens/ERC721BridgeToken.sol [99847,99894]"/>
  <match src="primitive_type [33175,33182]" dest="primitive_type [29432,29439]"/>
  <match src="{: { [3181,3182]" dest="{: { [3276,3277]"/>
  <match src="type_name [31172,31179]" dest="type_name [27371,27378]"/>
  <match src="identifier: weiValue [12911,12919]" dest="identifier: weiValue [13892,13900]"/>
  <match src="(: ( [47288,47289]" dest="(: ( [44141,44142]"/>
  <match src="): ) [57600,57601]" dest="): ) [54701,54702]"/>
  <match src="type_name [30571,30578]" dest="type_name [26754,26761]"/>
  <match src="pragma: pragma [35737,35743]" dest="pragma: pragma [32061,32067]"/>
  <match src="call_argument [112909,112938]" dest="call_argument [112357,112386]"/>
  <match src="}: } [74468,74469]" dest="}: } [72076,72077]"/>
  <match src="call_argument [11383,11387]" dest="call_argument [12331,12335]"/>
  <match src="call_argument [99025,99032]" dest="call_argument [97362,97369]"/>
  <match src="identifier: Bytes [39238,39243]" dest="identifier: Bytes [35650,35655]"/>
  <match src="type_name [698,705]" dest="type_name [721,728]"/>
  <match src="identifier: msg [36444,36447]" dest="identifier: msg [32792,32795]"/>
  <match src="primitive_type [12327,12333]" dest="primitive_type [13299,13305]"/>
  <match src="call_argument [75797,75802]" dest="call_argument [73452,73457]"/>
  <match src="library: library [42765,42772]" dest="library: library [39488,39495]"/>
  <match src="expression_statement [110528,110607]" dest="expression_statement [109469,109533]"/>
  <match src="visibility [92134,92140]" dest="visibility [90270,90276]"/>
  <match src="): ) [109713,109714]" dest="): ) [107658,107659]"/>
  <match src="identifier: _indexes [80571,80579]" dest="identifier: _indexes [78359,78367]"/>
  <match src="identifier: _recipient [114340,114350]" dest="identifier: _recipient [112949,112959]"/>
  <match src="(: ( [29598,29599]" dest="(: ( [25756,25757]"/>
  <match src="): ) [75450,75451]" dest="): ) [73094,73095]"/>
  <match src="call_expression [117242,117277]" dest="call_expression [115764,115799]"/>
  <match src="(: ( [116352,116353]" dest="(: ( [114979,114980]"/>
  <match src="call_argument [105552,105569]" dest="call_argument [120118,120135]"/>
  <match src="solidity_version:  0.7.5 [44402,44408]" dest="solidity_version:  0.7.5 [41183,41189]"/>
  <match src="primitive_type [103870,103876]" dest="primitive_type [102352,102358]"/>
  <match src="address: address [49604,49611]" dest="address: address [46508,46515]"/>
  <match src="variable_declaration_statement [78744,78781]" dest="variable_declaration_statement [76493,76530]"/>
  <match src="(: ( [4903,4904]" dest="(: ( [5051,5052]"/>
  <match src="{: { [100654,100655]" dest="{: { [99031,99032]"/>
  <match src="identifier: isInitialized [105836,105849]" dest="identifier: isInitialized [120293,120306]"/>
  <match src="variable_declaration [45588,45599]" dest="variable_declaration [42403,42414]"/>
  <match src="identifier: toDeleteIndex [80598,80611]" dest="identifier: toDeleteIndex [78386,78399]"/>
  <match src=".: . [81907,81908]" dest=".: . [79737,79738]"/>
  <match src="uint256: uint256 [65018,65025]" dest="uint256: uint256 [62345,62352]"/>
  <match src="calldata: calldata [7072,7080]" dest="calldata: calldata [7915,7923]"/>
  <match src="view: view [76618,76622]" dest="view: view [74300,74304]"/>
  <match src="identifier: baseURI_ [99388,99396]" dest="identifier: baseURI_ [97734,97742]"/>
  <match src="): ) [8706,8707]" dest="): ) [9597,9598]"/>
  <match src=",: , [82383,82384]" dest=",: , [80230,80231]"/>
  <match src="primitive_type [38116,38123]" dest="primitive_type [34504,34511]"/>
  <match src="parameter [3820,3838]" dest="parameter [3932,3950]"/>
  <match src="identifier: token [18964,18969]" dest="identifier: token [18598,18603]"/>
  <match src="expression_statement [112797,112849]" dest="expression_statement [112265,112317]"/>
  <match src="(: ( [112838,112839]" dest="(: ( [112306,112307]"/>
  <match src="{: { [91875,91876]" dest="{: { [90002,90003]"/>
  <match src="identifier: key [81103,81106]" dest="identifier: key [78909,78912]"/>
  <match src="augmented_assignment_expression [43539,43549]" dest="augmented_assignment_expression [40284,40294]"/>
  <match src="identifier: ptr [53140,53143]" dest="identifier: ptr [50125,50128]"/>
  <match src="identifier: _setOwner [105743,105752]" dest="identifier: _setOwner [120195,120204]"/>
  <match src="identifier: bridgeContract [57434,57448]" dest="identifier: bridgeContract [54533,54547]"/>
  <match src="emit_statement [97840,97882]" dest="emit_statement [96138,96180]"/>
  <match src="identifier: map [80462,80465]" dest="identifier: map [78248,78251]"/>
  <match src="return_type_definition [61057,61074]" dest="return_type_definition [58256,58273]"/>
  <match src="type_name [67540,67547]" dest="type_name [64942,64949]"/>
  <match src="variable_declaration_statement [8484,8501]" dest="variable_declaration_statement [9372,9389]"/>
  <match src="call_expression [17580,17622]" dest="call_expression [118717,118752]"/>
  <match src="(: ( [23954,23955]" dest="(: ( [38828,38829]"/>
  <match src="string_literal [59123,59137]" dest="string_literal [56265,56279]"/>
  <match src="): ) [76221,76222]" dest="): ) [73890,73891]"/>
  <match src="solidity: solidity [21522,21530]" dest="solidity: solidity [21068,21076]"/>
  <match src="): ) [39068,39069]" dest="): ) [35476,35477]"/>
  <match src="{: { [20854,20855]" dest="{: { [20407,20408]"/>
  <match src="function: function [71095,71103]" dest="function: function [68609,68617]"/>
  <match src="call_expression [17971,17987]" dest="call_expression [19006,19022]"/>
  <match src="||: || [25643,25645]" dest="||: || [22681,22683]"/>
  <match src="yul_path [54337,54340]" dest="yul_path [51343,51346]"/>
  <match src="(: ( [73893,73894]" dest="(: ( [71483,71484]"/>
  <match src="function: function [40597,40605]" dest="function: function [37062,37070]"/>
  <match src="call_argument [45640,45693]" dest="call_argument [42455,42508]"/>
  <match src="identifier: _setTokenImage [105770,105784]" dest="identifier: _setTokenImage [120223,120237]"/>
  <match src="storage: storage [84871,84878]" dest="storage: storage [82792,82799]"/>
  <match src="identifier: Set [73348,73351]" dest="identifier: Set [70920,70923]"/>
  <match src=".: . [90194,90195]" dest=".: . [88269,88270]"/>
  <match src="identifier: map [83790,83793]" dest="identifier: map [81679,81682]"/>
  <match src="bytes32: bytes32 [2140,2147]" dest="bytes32: bytes32 [2210,2217]"/>
  <match src="parameter [6568,6575]" dest="parameter [7397,7404]"/>
  <match src="string [43180,43183]" dest="string [39912,39915]"/>
  <match src="type_name [36974,36981]" dest="type_name [33336,33343]"/>
  <match src="identifier: transferFrom [92655,92667]" dest="identifier: transferFrom [90808,90820]"/>
  <match src="parameter [89026,89033]" dest="parameter [87066,87073]"/>
  <match src="call_argument [92848,92899]" dest="call_argument [91003,91054]"/>
  <match src="): ) [38566,38567]" dest="): ) [34963,34964]"/>
  <match src="state_mutability [59816,59820]" dest="state_mutability [56978,56982]"/>
  <match src="identifier: mediatorOwns [110677,110689]" dest="identifier: mediatorOwns [109171,109183]"/>
  <match src="array_access [80347,80370]" dest="array_access [78130,78153]"/>
  <match src="identifier: _bridgedToken [48656,48669]" dest="identifier: _bridgedToken [45534,45547]"/>
  <match src="identifier: BasicNFTOmnibridge [118382,118400]" dest="identifier: BasicNFTOmnibridge [119210,119228]"/>
  <match src="}: } [47825,47826]" dest="}: } [44687,44688]"/>
  <match src="indexed: indexed [47326,47333]" dest="indexed: indexed [44179,44186]"/>
  <match src="type_name [82100,82103]" dest="type_name [79940,79943]"/>
  <match src="function_definition [33397,33450]" dest="function_definition [29663,29716]"/>
  <match src="bytes32: bytes32 [19311,19318]" dest="bytes32: bytes32 [18952,18959]"/>
  <match src="return_statement [95444,95541]" dest="return_statement [93664,93761]"/>
  <match src="): ) [115053,115054]" dest="): ) [115750,115751]"/>
  <match src="): ) [12778,12779]" dest="): ) [13756,13757]"/>
  <match src="pragma_directive [39919,39941]" dest="pragma_directive [36362,36384]"/>
  <match src=",: , [116181,116182]" dest=",: , [114802,114803]"/>
  <match src=",: , [95974,95975]" dest=",: , [94208,94209]"/>
  <match src="call_expression [2895,2939]" dest="call_expression [2983,3027]"/>
  <match src="type_name [17945,17952]" dest="type_name [111075,111082]"/>
  <match src="}: } [99129,99130]" dest="}: } [97468,97469]"/>
  <match src="=: = [12889,12890]" dest="=: = [13870,13871]"/>
  <match src="inheritance_specifier [104382,104402]" dest="inheritance_specifier [102896,102916]"/>
  <match src="identifier: Map [81226,81229]" dest="identifier: Map [79038,79041]"/>
  <match src=".: . [84344,84345]" dest=".: . [82247,82248]"/>
  <match src=",: , [98243,98244]" dest=",: , [96555,96556]"/>
  <match src="virtual: virtual [50660,50667]" dest="virtual: virtual [47599,47606]"/>
  <match src="identifier: EnumerableMap [85491,85504]" dest="identifier: EnumerableMap [83441,83454]"/>
  <match src="type_name [85888,85909]" dest="type_name [83846,83867]"/>
  <match src="parenthesized_expression [95451,95540]" dest="parenthesized_expression [93671,93760]"/>
  <match src="): ) [49860,49861]" dest="): ) [46772,46773]"/>
  <match src="function: function [83517,83525]" dest="function: function [81399,81407]"/>
  <match src="[: [ [2534,2535]" dest="[: [ [2613,2614]"/>
  <match src="return: return [81284,81290]" dest="return: return [79097,79103]"/>
  <match src="member_expression [111946,111969]" dest="member_expression [110102,110125]"/>
  <match src="): ) [14569,14570]" dest="): ) [15437,15438]"/>
  <match src="parameter [48203,48210]" dest="parameter [45072,45079]"/>
  <match src="user_defined_type [72913,72916]" dest="user_defined_type [70471,70474]"/>
  <match src="comment: /**      * @dev Approve or remove `operator` as an operator for the caller.      * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.      *      * Requirements:      *      * - The `operator` cannot be the caller.      *      * Emits an {ApprovalForAll} event.      */ [31951,32260]" dest="comment: /**      * @dev Approve or remove `operator` as an operator for the caller.      * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.      *      * Requirements:      *      * - The `operator` cannot be the caller.      *      * Emits an {ApprovalForAll} event.      */ [28176,28494]"/>
  <match src="||: || [102244,102246]" dest="||: || [100678,100680]"/>
  <match src="pragma_directive [47069,47091]" dest="pragma_directive [43914,43936]"/>
  <match src="event_definition [29370,29455]" dest="event_definition [25523,25608]"/>
  <match src="(: ( [83425,83426]" dest="(: ( [81301,81302]"/>
  <match src="is: is [28856,28858]" dest="is: is [24995,24997]"/>
  <match src="type_name [114923,114927]" dest="type_name [113545,113549]"/>
  <match src="): ) [103161,103162]" dest="): ) [101623,101624]"/>
  <match src="string_literal [73457,73493]" dest="string_literal [71030,71066]"/>
  <match src=",: , [30581,30582]" dest=",: , [26764,26765]"/>
  <match src="expression_statement [63613,63654]" dest="expression_statement [60890,60931]"/>
  <match src="{: { [45074,45075]" dest="{: { [41877,41878]"/>
  <match src="binary_expression [95472,95503]" dest="binary_expression [93692,93723]"/>
  <match src="uint256: uint256 [91385,91392]" dest="uint256: uint256 [89498,89505]"/>
  <match src="true: true [930,934]" dest="true: true [956,960]"/>
  <match src="function_definition [91356,91737]" dest="function_definition [89469,89859]"/>
  <match src="function: function [91138,91146]" dest="function: function [89243,89251]"/>
  <match src="parameter [107012,107037]" dest="parameter [104858,104883]"/>
  <match src="if: if [43143,43145]" dest="if: if [39874,39876]"/>
  <match src="identifier: ERC721 [85276,85282]" dest="identifier: ERC721 [83222,83228]"/>
  <match src="view: view [8212,8216]" dest="view: view [9096,9100]"/>
  <match src="comment: /**      * @dev Sets a new owner address      */ [6003,6051]" dest="comment: /**      * @dev Sets a new owner address      */ [6198,6248]"/>
  <match src="visibility [95280,95288]" dest="visibility [93497,93505]"/>
  <match src="return_type_definition [2485,2502]" dest="return_type_definition [2563,2580]"/>
  <match src="identifier: _token [114187,114193]" dest="identifier: _token [22231,22237]"/>
  <match src="return_type_definition [11864,11886]" dest="return_type_definition [12826,12848]"/>
  <match src="member_expression [81914,81926]" dest="member_expression [79744,79756]"/>
  <match src="=&gt;: =&gt; [480,482]" dest="=&gt;: =&gt; [493,495]"/>
  <match src="comment: /**      * @dev Gives permission to `to` to transfer `tokenId` token to another account.      * The approval is cleared when the token is transferred.      *      * Only a single account can be approved at a time, so approving the zero address clears previous approvals.      *      * Requirements:      *      * - The caller must own the token or be an approved operator.      * - `tokenId` must exist.      *      * Emits an {Approval} event.      */ [31204,31656]" dest="comment: /**      * @dev Gives permission to `to` to transfer `tokenId` token to another account.      * The approval is cleared when the token is transferred.      *      * Only a single account can be approved at a time, so approving the zero address clears previous approvals.      *      * Requirements:      *      * - The caller must own the token or be an approved operator.      * - `tokenId` must exist.      *      * Emits an {Approval} event.      */ [27405,27869]"/>
  <match src="returns: returns [100115,100122]" dest="returns: returns [98476,98483]"/>
  <match src="return_statement [82582,82623]" dest="return_statement [80432,80473]"/>
  <match src="function: function [48131,48139]" dest="function: function [45000,45008]"/>
  <match src="type_name [6985,6992]" dest="type_name [7824,7831]"/>
  <match src="): ) [20339,20340]" dest="): ) [19892,19893]"/>
  <match src="primitive_type [2140,2147]" dest="primitive_type [2210,2217]"/>
  <match src="identifier: setMediatorContractOnOtherSide [15224,15254]" dest="identifier: setMediatorContractOnOtherSide [16147,16177]"/>
  <match src="state_mutability [84639,84643]" dest="state_mutability [82553,82557]"/>
  <match src="view: view [56968,56972]" dest="view: view [54055,54059]"/>
  <match src="is: is [101645,101647]" dest="is: is [100056,100058]"/>
  <match src=".: . [45643,45644]" dest=".: . [42458,42459]"/>
  <match src="identifier: _approve [97574,97582]" dest="identifier: _approve [95861,95869]"/>
  <match src="identifier: _tokenId [46708,46716]" dest="identifier: _tokenId [43544,43552]"/>
  <match src="=&gt;: =&gt; [55654,55656]" dest="=&gt;: =&gt; [52706,52708]"/>
  <match src="function_body [83060,83139]" dest="function_body [80926,81007]"/>
  <match src="member_expression [3220,3236]" dest="member_expression [3316,3332]"/>
  <match src="call_expression [18538,18568]" dest="call_expression [18051,18081]"/>
  <match src="(: ( [3593,3594]" dest="(: ( [3698,3699]"/>
  <match src="return: return [16621,16627]" dest="return: return [118402,118408]"/>
  <match src="function_body [34669,35132]" dest="function_body [30972,31442]"/>
  <match src="identifier: _token [24684,24690]" dest="identifier: _token [23126,23132]"/>
  <match src=",: , [109216,109217]" dest=",: , [107151,107152]"/>
  <match src="comment: /**      * Internal function for unlocking/minting some specific ERC721 token.      * @param _token address of the token contract.      * @param _isNative true, if the token contract is native w.r.t to the bridge.      * @param _recipient address of the tokens receiver.      * @param _tokenId unique id of the bridged token.      */ [115773,116106]" dest="comment: /**      * Internal function for unlocking/minting some specific ERC721 token.      * @param _token address of the token contract.      * @param _isNative true, if the token contract is native w.r.t to the bridge.      * @param _recipient address of the tokens receiver.      * @param _tokenId unique id of the bridged token.      */ [114385,114724]"/>
  <match src="==: == [91567,91569]" dest="==: == [89684,89686]"/>
  <match src="comment: /**      * @dev Retrieves current execution daily limit for a particular token contract.      * @param _token address of the token contract.      * @return daily limit on tokens that can be received from the bridge on the other side per day.      */ [23587,23836]" dest="comment: /**      * @dev Tells if the execution operations for the particular token are allowed.      * @param _token address of the token contract.      * @return true, if execution operations are allowed.      */ [23421,23630]"/>
  <match src="identifier: Address [85391,85398]" dest="identifier: Address [83339,83346]"/>
  <match src="visibility [437,445]" dest="visibility [449,457]"/>
  <match src="(: ( [56290,56291]" dest="(: ( [53357,53358]"/>
  <match src="memory: memory [11262,11268]" dest="memory: memory [12209,12215]"/>
  <match src="type_cast_expression [74446,74460]" dest="type_cast_expression [72053,72067]"/>
  <match src="identifier: _exists [96927,96934]" dest="identifier: _exists [95187,95194]"/>
  <match src="==: == [78804,78806]" dest="==: == [76555,76557]"/>
  <match src="): ) [83355,83356]" dest="): ) [81230,81231]"/>
  <match src="type_name [96226,96233]" dest="type_name [94467,94474]"/>
  <match src="using: using [85353,85358]" dest="using: using [83300,83305]"/>
  <match src="library_declaration [33737,34501]" dest="library_declaration [30018,30797]"/>
  <match src="(: ( [43508,43509]" dest="(: ( [40252,40253]"/>
  <match src="identifier: tokenId [92931,92938]" dest="identifier: tokenId [91088,91095]"/>
  <match src=",: , [95343,95344]" dest=",: , [93561,93562]"/>
  <match src="): ) [116240,116241]" dest="): ) [114864,114865]"/>
  <match src="}: } [65138,65139]" dest="}: } [62467,62468]"/>
  <match src="return_type_definition [75437,75451]" dest="return_type_definition [73081,73095]"/>
  <match src="(: ( [103459,103460]" dest="(: ( [101930,101931]"/>
  <match src="type_name [116167,116171]" dest="type_name [114788,114792]"/>
  <match src="type_name [95000,95004]" dest="type_name [93206,93210]"/>
  <match src="function_definition [44218,44291]" dest="function_definition [40994,41067]"/>
  <match src="call_expression [20255,20289]" dest="call_expression [19806,19840]"/>
  <match src="identifier: TokensBridgingInitiated [117490,117513]" dest="identifier: TokensBridgingInitiated [115916,115939]"/>
  <match src="identifier: _bridgedToken [48770,48783]" dest="identifier: _bridgedToken [45649,45662]"/>
  <match src="identifier: interfaceId [63497,63508]" dest="identifier: interfaceId [60772,60783]"/>
  <match src="primitive_type [106083,106090]" dest="primitive_type [103910,103917]"/>
  <match src="identifier: msg [5275,5278]" dest="identifier: msg [5447,5450]"/>
  <match src="type_cast_expression [96361,96371]" dest="type_cast_expression [94604,94614]"/>
  <match src="=: = [8530,8531]" dest="=: = [9419,9420]"/>
  <match src="call_argument [102643,102646]" dest="call_argument [101088,101091]"/>
  <match src="member_expression [90191,90207]" dest="member_expression [88266,88282]"/>
  <match src="function_definition [2793,2957]" dest="function_definition [2880,3046]"/>
  <match src="primitive_type [39050,39055]" dest="primitive_type [35458,35463]"/>
  <match src="): ) [93388,93389]" dest="): ) [91559,91560]"/>
  <match src="comment: /**      * @dev Sets the AMB bridge contract address. Only the owner can call this method.      * @param _bridgeContract the address of the bridge contract.      */ [14723,14887]" dest="comment: /**      * @dev Sets the AMB bridge contract address. Only the owner can call this method.      * @param _bridgeContract the address of the bridge contract.      */ [15634,15801]"/>
  <match src="primitive_type [55378,55382]" dest="primitive_type [52423,52427]"/>
  <match src="identifier: requireToConfirmMessage [7157,7180]" dest="identifier: requireToConfirmMessage [8004,8027]"/>
  <match src="member_expression [45773,45789]" dest="member_expression [42589,42605]"/>
  <match src="parameter [12312,12325]" dest="parameter [13284,13297]"/>
  <match src="identifier: sourceChainId [7308,7321]" dest="identifier: sourceChainId [8161,8174]"/>
  <match src="state_mutability [84934,84938]" dest="state_mutability [82855,82859]"/>
  <match src="binary_expression [66249,66259]" dest="binary_expression [63616,63626]"/>
  <match src="identifier: Map [82100,82103]" dest="identifier: Map [79940,79943]"/>
  <match src="type_name [38143,38150]" dest="type_name [34532,34539]"/>
  <match src="call_expression [75113,75135]" dest="call_expression [72741,72763]"/>
  <match src="call_argument [84399,84413]" dest="call_argument [82303,82317]"/>
  <match src="parameter [75033,75046]" dest="parameter [72660,72673]"/>
  <match src="identifier: _bridgeContract [101816,101831]" dest="identifier: _bridgeContract [100233,100248]"/>
  <match src="expression_statement [1609,1611]" dest="expression_statement [1660,1662]"/>
  <match src="returns: returns [6889,6896]" dest="returns: returns [7726,7733]"/>
  <match src="): ) [18567,18568]" dest="): ) [18080,18081]"/>
  <match src="binary_expression [66226,66231]" dest="binary_expression [63592,63597]"/>
  <match src="(: ( [76132,76133]" dest="(: ( [73800,73801]"/>
  <match src="identifier: _token [116151,116157]" dest="identifier: _token [114771,114777]"/>
  <match src="=&gt;: =&gt; [86120,86122]" dest="=&gt;: =&gt; [84084,84086]"/>
  <match src="type_name [55378,55382]" dest="type_name [52423,52427]"/>
  <match src="primitive_type [55797,55803]" dest="primitive_type [52852,52858]"/>
  <match src="type_name [15255,15262]" dest="type_name [16178,16185]"/>
  <match src="view: view [89547,89551]" dest="view: view [87608,87612]"/>
  <match src="identifier: balance [29607,29614]" dest="identifier: balance [25765,25772]"/>
  <match src="primitive_type [83375,83379]" dest="primitive_type [81250,81254]"/>
  <match src="identifier: setMessageToken [117242,117257]" dest="identifier: setMessageToken [115764,115779]"/>
  <match src="]: ] [5718,5719]" dest="]: ] [5902,5903]"/>
  <match src="call_argument [9986,9988]" dest="call_argument [10901,10903]"/>
  <match src="identifier: bridgeContract [101871,101885]" dest="identifier: bridgeContract [100290,100304]"/>
  <match src="parameter [83565,83576]" dest="parameter [81447,81458]"/>
  <match src="identifier: _registerInterface [88468,88486]" dest="identifier: _registerInterface [86491,86509]"/>
  <match src="call_argument [114257,114258]" dest="call_argument [23305,23306]"/>
  <match src="call_expression [98606,98641]" dest="call_expression [96927,96962]"/>
  <match src="type_name [12695,12700]" dest="type_name [13672,13677]"/>
  <match src="call_expression [2545,2589]" dest="call_expression [2624,2668]"/>
  <match src="binary_expression [5136,5210]" dest="binary_expression [5307,5381]"/>
  <match src="call_expression [42563,42617]" dest="call_expression [39193,39236]"/>
  <match src="(: ( [88784,88785]" dest="(: ( [86816,86817]"/>
  <match src="type_name [64635,64642]" dest="type_name [61946,61953]"/>
  <match src="yul_function_call [53818,53858]" dest="yul_function_call [50817,50857]"/>
  <match src="primitive_type [91436,91443]" dest="primitive_type [89550,89557]"/>
  <match src="(: ( [21203,21204]" dest="(: ( [20765,20766]"/>
  <match src="call_argument [99017,99033]" dest="call_argument [97354,97370]"/>
  <match src="identifier: mediatorOwns [58520,58532]" dest="identifier: mediatorOwns [55647,55659]"/>
  <match src="expression_statement [51017,51046]" dest="expression_statement [47965,47994]"/>
  <match src="): ) [46275,46276]" dest="): ) [43101,43102]"/>
  <match src="private: private [86257,86264]" dest="private: private [84224,84231]"/>
  <match src="): ) [90065,90066]" dest="): ) [88137,88138]"/>
  <match src="function_definition [12565,13523]" dest="function_definition [13542,14521]"/>
  <match src="&amp;&amp;: &amp;&amp; [8750,8752]" dest="&amp;&amp;: &amp;&amp; [9642,9644]"/>
  <match src="string [12747,12778]" dest="string [13725,13756]"/>
  <match src="): ) [89670,89671]" dest="): ) [87732,87733]"/>
  <match src="identifier: map [81685,81688]" dest="identifier: map [79511,79514]"/>
  <match src=",: , [93399,93400]" dest=",: , [91570,91571]"/>
  <match src="override_specifier [102884,102892]" dest="override_specifier [101337,101345]"/>
  <match src="if: if [13078,13080]" dest="if: if [14064,14066]"/>
  <match src="identifier: onlyMediator [14384,14396]" dest="identifier: onlyMediator [15244,15256]"/>
  <match src="call_expression [110859,110942]" dest="call_expression [109358,109402]"/>
  <match src="parameter [12613,12630]" dest="parameter [13590,13607]"/>
  <match src="(: ( [3128,3129]" dest="(: ( [3223,3224]"/>
  <match src="function_definition [66785,66915]" dest="function_definition [64169,64301]"/>
  <match src="(: ( [112158,112159]" dest="(: ( [111353,111354]"/>
  <match src="(: ( [98230,98231]" dest="(: ( [96542,96543]"/>
  <match src="function: function [39288,39296]" dest="function: function [35704,35712]"/>
  <match src=".: . [71772,71773]" dest=".: . [69296,69297]"/>
  <match src="expression_statement [17580,17623]" dest="expression_statement [118717,118753]"/>
  <match src="returns: returns [42921,42928]" dest="returns: returns [39648,39655]"/>
  <match src="view: view [3849,3853]" dest="view: view [3961,3965]"/>
  <match src="identifier: approved [29207,29215]" dest="identifier: approved [25355,25363]"/>
  <match src="yul_function_call [53831,53857]" dest="yul_function_call [50830,50856]"/>
  <match src="visibility [92489,92495]" dest="visibility [90635,90641]"/>
  <match src="call_expression [84337,84359]" dest="call_expression [82240,82262]"/>
  <match src="type_name [76573,76580]" dest="type_name [74255,74262]"/>
  <match src=",: , [3251,3252]" dest=",: , [3347,3348]"/>
  <match src="parameter [76177,76184]" dest="parameter [73845,73852]"/>
  <match src="}: } [100592,100593]" dest="}: } [98967,98968]"/>
  <match src="identifier: _tokenId [37517,37525]" dest="identifier: _tokenId [33892,33900]"/>
  <match src="internal: internal [75048,75056]" dest="internal: internal [72675,72683]"/>
  <match src="identifier: _indexes [82477,82485]" dest="identifier: _indexes [80325,80333]"/>
  <match src="call_expression [70607,70628]" dest="call_expression [68104,68125]"/>
  <match src="primitive_type [24284,24288]" dest="primitive_type [23706,23710]"/>
  <match src=",: , [65452,65453]" dest=",: , [62793,62794]"/>
  <match src="modifier_invocation [103172,103181]" dest="modifier_invocation [101634,101643]"/>
  <match src="parameter [101394,101404]" dest="parameter [99791,99801]"/>
  <match src="identifier: _token [59006,59012]" dest="identifier: _token [56144,56150]"/>
  <match src="call_expression [91554,91566]" dest="call_expression [89671,89683]"/>
  <match src="parameter [7039,7056]" dest="parameter [7881,7898]"/>
  <match src=".: . [83085,83086]" dest=".: . [80952,80953]"/>
  <match src="returns: returns [18503,18510]" dest="returns: returns [18015,18022]"/>
  <match src="string_literal [12747,12778]" dest="string_literal [13725,13756]"/>
  <match src="): ) [47816,47817]" dest="): ) [44677,44678]"/>
  <match src="(: ( [99024,99025]" dest="(: ( [97361,97362]"/>
  <match src="call_argument [11392,11404]" dest="call_argument [12340,12352]"/>
  <match src="string_literal [68214,68240]" dest="string_literal [65635,65661]"/>
  <match src="): ) [45053,45054]" dest="): ) [41856,41857]"/>
  <match src="contract_body [61351,61975]" dest="contract_body [58563,59199]"/>
  <match src="primitive_type [84653,84660]" dest="primitive_type [82567,82574]"/>
  <match src=",: , [25562,25563]" dest=",: , [22605,22606]"/>
  <match src="parameter [70586,70590]" dest="parameter [68082,68086]"/>
  <match src="primitive_type [61066,61073]" dest="primitive_type [58265,58272]"/>
  <match src="(: ( [99373,99374]" dest="(: ( [97719,97720]"/>
  <match src="returns: returns [6976,6983]" dest="returns: returns [7815,7822]"/>
  <match src="view: view [22578,22582]" dest="view: view [116953,116957]"/>
  <match src="call_argument [93138,93140]" dest="call_argument [91302,91304]"/>
  <match src="identifier: _length [83844,83851]" dest="identifier: _length [81734,81741]"/>
  <match src="comment: // This lock is to prevent calling bridgeSpecificActionsOnTokenTransfer twice. [38185,38263]" dest="comment: // This lock is to prevent calling bridgeSpecificActionsOnTokenTransfer twice. [34576,34654]"/>
  <match src="(: ( [83101,83102]" dest="(: ( [80968,80969]"/>
  <match src="identifier: abi [46221,46224]" dest="identifier: abi [43047,43050]"/>
  <match src="call_argument [113027,113035]" dest="call_argument [112412,112420]"/>
  <match src="external: external [45055,45063]" dest="external: external [41858,41866]"/>
  <match src="(: ( [90028,90029]" dest="(: ( [88100,88101]"/>
  <match src="call_expression [92168,92230]" dest="call_expression [90305,90367]"/>
  <match src="parameter [78568,78583]" dest="parameter [76315,76330]"/>
  <match src="visibility [94457,94465]" dest="visibility [92650,92658]"/>
  <match src="type_name [29775,29782]" dest="type_name [25942,25949]"/>
  <match src="expression_statement [25682,25718]" dest="expression_statement [22721,22802]"/>
  <match src="]: ] [46397,46398]" dest="]: ] [43224,43225]"/>
  <match src="function: function [98918,98926]" dest="function: function [97254,97262]"/>
  <match src="comment: // Move the last value to the index where the value to delete is [72080,72144]" dest="comment: // Move the last value to the index where the value to delete is [69611,69675]"/>
  <match src="): ) [48308,48309]" dest="): ) [45178,45179]"/>
  <match src="(: ( [97868,97869]" dest="(: ( [96166,96167]"/>
  <match src="return_type_definition [75960,75974]" dest="return_type_definition [73621,73635]"/>
  <match src="identifier: setExecutionDailyLimit [26153,26175]" dest="identifier: disableTokenBridging [22021,22041]"/>
  <match src="contract_declaration [41372,42650]" dest="contract_declaration [37868,39363]"/>
  <match src="(: ( [84699,84700]" dest="(: ( [82614,82615]"/>
  <match src="member_expression [70824,70835]" dest="member_expression [68325,68336]"/>
  <match src="identifier: require [65535,65542]" dest="identifier: require [62877,62884]"/>
  <match src="return_statement [74409,74463]" dest="return_statement [72016,72070]"/>
  <match src=",: , [93389,93390]" dest=",: , [91560,91561]"/>
  <match src="view: view [22184,22188]" dest="view: view [21739,21743]"/>
  <match src="): ) [67458,67459]" dest="): ) [64858,64859]"/>
  <match src="): ) [60516,60517]" dest="): ) [57703,57704]"/>
  <match src="{: { [47258,47259]" dest="{: { [44110,44111]"/>
  <match src="yul_variable_declaration [53099,53166]" dest="yul_variable_declaration [50084,50151]"/>
  <match src="function_definition [5897,5997]" dest="function_definition [6088,6190]"/>
  <match src="&quot;: &quot; [9815,9816]" dest="&quot;: &quot; [10727,10728]"/>
  <match src="identifier: b [64651,64652]" dest="identifier: b [61962,61963]"/>
  <match src="assembly: assembly [56420,56428]" dest="assembly: assembly [53493,53501]"/>
  <match src="function_definition [32484,32572]" dest="function_definition [28726,28814]"/>
  <match src="identifier: _token [26250,26256]" dest="identifier: _token [22111,22117]"/>
  <match src="state_variable_declaration [55824,55870]" dest="state_variable_declaration [52880,52926]"/>
  <match src="comment: // keccak256(abi.encodePacked(&quot;lock&quot;)) [35078,35116]" dest="comment: // keccak256(abi.encodePacked(&quot;lock&quot;)) [31386,31424]"/>
  <match src="variable_declaration_statement [113904,113971]" dest="variable_declaration_statement [103467,103482]"/>
  <match src="member_expression [70644,70660]" dest="member_expression [68142,68158]"/>
  <match src="=: = [63647,63648]" dest="=: = [60924,60925]"/>
  <match src="return: return [74409,74415]" dest="return: return [72016,72022]"/>
  <match src="address: address [108457,108464]" dest="address: address [106299,106306]"/>
  <match src="parameter [38116,38133]" dest="parameter [34504,34521]"/>
  <match src="call_expression [91246,91268]" dest="call_expression [89352,89374]"/>
  <match src="primitive_type [18990,18997]" dest="primitive_type [18624,18631]"/>
  <match src="boolean_literal [38496,38500]" dest="boolean_literal [34892,34896]"/>
  <match src="parameter [82100,82115]" dest="parameter [79940,79955]"/>
  <match src="call_expression [19510,19558]" dest="call_expression [19175,19213]"/>
  <match src="type_name [28674,28678]" dest="type_name [24801,24805]"/>
  <match src="address: address [95246,95253]" dest="address: address [93463,93470]"/>
  <match src="}: } [1048,1049]" dest="}: } [1080,1081]"/>
  <match src="identifier: _data [41031,41036]" dest="identifier: _data [37513,37518]"/>
  <match src="number_literal: 1 [80077,80078]" dest="number_literal: 1 [77855,77856]"/>
  <match src="identifier: _messageId [19319,19329]" dest="identifier: _messageId [18960,18970]"/>
  <match src="(: ( [90190,90191]" dest="(: ( [88265,88266]"/>
  <match src=",: , [38541,38542]" dest=",: , [34938,34939]"/>
  <match src="call_argument [101845,101850]" dest="call_argument [100263,100268]"/>
  <match src="): ) [91173,91174]" dest="): ) [89278,89279]"/>
  <match src="function: function [63462,63470]" dest="function: function [60737,60745]"/>
  <match src="inheritance_specifier [21698,21705]" dest="inheritance_specifier [21251,21258]"/>
  <match src="identifier: bridgedToken [107140,107152]" dest="identifier: bridgedToken [104989,105001]"/>
  <match src="call_argument [97154,97161]" dest="call_argument [95422,95429]"/>
  <match src="type_name [113164,113171]" dest="type_name [109413,109420]"/>
  <match src="identifier: MapEntry [78879,78887]" dest="identifier: MapEntry [76631,76639]"/>
  <match src="function_body [82444,82656]" dest="function_body [80291,80507]"/>
  <match src="address: address [96861,96868]" dest="address: address [95120,95127]"/>
  <match src="return_type_definition [28665,28679]" dest="return_type_definition [24792,24806]"/>
  <match src="constant: constant [87729,87737]" dest="constant: constant [85733,85741]"/>
  <match src="}: } [115760,115761]" dest="}: } [114369,114370]"/>
  <match src="primitive_type [65516,65523]" dest="primitive_type [62857,62864]"/>
  <match src="primitive_type [40197,40204]" dest="primitive_type [36651,36658]"/>
  <match src="primitive_type [110409,110416]" dest="primitive_type [108986,108993]"/>
  <match src="bytes32: bytes32 [8484,8491]" dest="bytes32: bytes32 [9372,9379]"/>
  <match src="function_definition [61847,61973]" dest="function_definition [59069,59196]"/>
  <match src="comment: // the underlying Map. [77849,77871]" dest="comment: // the underlying Map. [75571,75593]"/>
  <match src="||: || [95504,95506]" dest="||: || [93724,93726]"/>
  <match src="identifier: _tokenId [58557,58565]" dest="identifier: _tokenId [55684,55692]"/>
  <match src="): ) [65491,65492]" dest="): ) [62832,62833]"/>
  <match src="{: { [77512,77513]" dest="{: { [75228,75229]"/>
  <match src="function_definition [70523,70927]" dest="function_definition [68019,68433]"/>
  <match src="comment: /**      * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients      * are aware of the ERC721 protocol to prevent tokens from being forever locked.      *      * `_data` is additional data, it has no specified format and it is sent in call to `to`.      *      * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.      * implement alternative mechanisms to perform token transfer, such as signature-based.      *      * Requirements:      *      * - `from` cannot be the zero address.      * - `to` cannot be the zero address.      * - `tokenId` token must exist and be owned by `from`.      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.      *      * Emits a {Transfer} event.      */ [93515,94366]" dest="comment: /**      * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients      * are aware of the ERC721 protocol to prevent tokens from being forever locked.      *      * `_data` is additional data, it has no specified format and it is sent in call to `to`.      *      * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.      * implement alternative mechanisms to perform token transfer, such as signature-based.      *      * Requirements:      *      * - `from` cannot be the zero address.      * - `to` cannot be the zero address.      * - `tokenId` token must exist and be owned by `from`.      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.      *      * Emits a {Transfer} event.      */ [91690,92558]"/>
  <match src="identifier: status [46294,46300]" dest="identifier: status [43121,43127]"/>
  <match src="function_definition [39583,39756]" dest="function_definition [36012,36192]"/>
  <match src="]: ] [59157,59158]" dest="]: ] [56299,56300]"/>
  <match src="primitive_type [101777,101783]" dest="primitive_type [100193,100199]"/>
  <match src="): ) [66818,66819]" dest="): ) [64202,64203]"/>
  <match src="calldata: calldata [107019,107027]" dest="calldata: calldata [104865,104873]"/>
  <match src="identifier: TOKEN_IMAGE_CONTRACT [49894,49914]" dest="identifier: TOKEN_IMAGE_CONTRACT [46807,46827]"/>
  <match src="comment: // File: @openzeppelin/contracts/utils/EnumerableMap.sol [76700,76756]" dest="comment: // File: @openzeppelin/contracts/utils/EnumerableMap.sol [74387,74443]"/>
  <match src="{: { [28867,28868]" dest="{: { [25006,25007]"/>
  <match src="ternary_expression [46294,46345]" dest="ternary_expression [43121,43172]"/>
  <match src="expression_statement [98465,98505]" dest="expression_statement [96781,96821]"/>
  <match src="call_argument [75113,75135]" dest="call_argument [72741,72763]"/>
  <match src="{: { [43275,43276]" dest="{: { [40011,40012]"/>
  <match src="parameter [73846,73850]" dest="parameter [71435,71439]"/>
  <match src="=&gt;: =&gt; [55434,55436]" dest="=&gt;: =&gt; [52480,52482]"/>
  <match src="&quot;: &quot; [3931,3932]" dest="&quot;: &quot; [4044,4045]"/>
  <match src="function_definition [108280,108617]" dest="function_definition [106116,106463]"/>
  <match src="type_name [81673,81676]" dest="type_name [79499,79502]"/>
  <match src="{: { [72564,72565]" dest="{: { [70107,70108]"/>
  <match src="(: ( [101844,101845]" dest="(: ( [100262,100263]"/>
  <match src="parameter [6680,6698]" dest="parameter [7513,7531]"/>
  <match src="&quot;: &quot; [65099,65100]" dest="&quot;: &quot; [62427,62428]"/>
  <match src="variable_declaration [79985,80006]" dest="variable_declaration [77762,77783]"/>
  <match src="call_argument [110813,110821]" dest="call_argument [109310,109318]"/>
  <match src="primitive_type [55722,55729]" dest="primitive_type [52775,52782]"/>
  <match src="returns: returns [89561,89568]" dest="returns: returns [87622,87629]"/>
  <match src="parameter [81015,81030]" dest="parameter [78820,78835]"/>
  <match src="parameter [3172,3179]" dest="parameter [3267,3274]"/>
  <match src=",: , [68209,68210]" dest=",: , [65630,65631]"/>
  <match src="primitive_type [55426,55433]" dest="primitive_type [52472,52479]"/>
  <match src="yul_function_call [56546,56633]" dest="yul_function_call [53622,53709]"/>
  <match src="function_definition [9693,10084]" dest="function_definition [10604,11001]"/>
  <match src="returns: returns [75960,75967]" dest="returns: returns [73621,73628]"/>
  <match src="]: ] [27324,27325]" dest="]: ] [39331,39332]"/>
  <match src="variable_declaration_statement [65574,65592]" dest="variable_declaration_statement [62917,62935]"/>
  <match src="(: ( [73428,73429]" dest="(: ( [71001,71002]"/>
  <match src="identifier: add [98669,98672]" dest="identifier: add [96991,96994]"/>
  <match src="identifier: _ [102066,102067]" dest="identifier: _ [100493,100494]"/>
  <match src="identifier: IERC721 [36951,36958]" dest="identifier: IERC721 [33312,33319]"/>
  <match src="(: ( [83081,83082]" dest="(: ( [80948,80949]"/>
  <match src="): ) [57118,57119]" dest="): ) [54207,54208]"/>
  <match src="identifier: _symbol [45041,45048]" dest="identifier: _symbol [41843,41850]"/>
  <match src="comment: // This means that we can only create new EnumerableSets for types that fit [70004,70079]" dest="comment: // This means that we can only create new EnumerableSets for types that fit [67482,67557]"/>
  <match src="parameter [56300,56319]" dest="parameter [53368,53387]"/>
  <match src="primitive_type [44970,44977]" dest="primitive_type [41770,41777]"/>
  <match src=",: , [38133,38134]" dest=",: , [34521,34522]"/>
  <match src="identifier: require [39185,39192]" dest="identifier: require [35596,35603]"/>
  <match src="returns: returns [72752,72759]" dest="returns: returns [70303,70310]"/>
  <match src="uint256: uint256 [84399,84406]" dest="uint256: uint256 [82303,82310]"/>
  <match src="address: address [48648,48655]" dest="address: address [45526,45533]"/>
  <match src="): ) [114102,114103]" dest="): ) [22788,22789]"/>
  <match src="call_expression [97801,97829]" dest="call_expression [96097,96125]"/>
  <match src="identifier: _token [117514,117520]" dest="identifier: _token [115940,115946]"/>
  <match src="comment: // repetition as possible, we write it in terms of a generic Set type with [69736,69810]" dest="comment: // repetition as possible, we write it in terms of a generic Set type with [67209,67283]"/>
  <match src="return: return [100551,100557]" dest="return: return [98925,98931]"/>
  <match src="identifier: fixFailedMessage [19632,19648]" dest="identifier: fixFailedMessage [19308,19324]"/>
  <match src=",: , [34477,34478]" dest=",: , [30770,30771]"/>
  <match src="uint256: uint256 [88758,88765]" dest="uint256: uint256 [86789,86796]"/>
  <match src="return_statement [89843,89860]" dest="return_statement [87911,87928]"/>
  <match src="constant: constant [4219,4227]" dest="constant: constant [4347,4355]"/>
  <match src=",: , [81912,81913]" dest=",: , [79742,79743]"/>
  <match src="type_name [13943,13950]" dest="type_name [14966,14973]"/>
  <match src="event_paramater [40346,40371]" dest="event_paramater [36803,36828]"/>
  <match src="comment: // Optional mapping for token URIs [86384,86418]" dest="comment: // Optional mapping for token URIs [84359,84393]"/>
  <match src="identifier: name_ [88348,88353]" dest="identifier: name_ [86367,86372]"/>
  <match src="): ) [12926,12927]" dest="): ) [13907,13908]"/>
  <match src="identifier: accountHash [8738,8749]" dest="identifier: accountHash [9630,9641]"/>
  <match src="(: ( [114294,114295]" dest="(: ( [112898,112899]"/>
  <match src=",: , [29412,29413]" dest=",: , [25565,25566]"/>
  <match src="return_type_definition [6889,6906]" dest="return_type_definition [7726,7743]"/>
  <match src="identifier: addressStorage [16048,16062]" dest="identifier: addressStorage [16524,16538]"/>
  <match src="identifier: _safeMint [95887,95896]" dest="identifier: _safeMint [94120,94129]"/>
  <match src="(: ( [46355,46356]" dest="(: ( [43182,43183]"/>
  <match src="comment: /**      * @dev Registers the contract as an implementer of the interface defined by      * `interfaceId`. Support of the actual ERC165 interface is automatic and      * registering its interface id is not required.      *      * See {IERC165-supportsInterface}.      *      * Requirements:      *      * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).      */ [63074,63457]" dest="comment: /**      * @dev Registers the contract as an implementer of the interface defined by      * `interfaceId`. Support of the actual ERC165 interface is automatic and      * registering its interface id is not required.      *      * See {IERC165-supportsInterface}.      *      * Requirements:      *      * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).      */ [60338,60731]"/>
  <match src="identifier: _recipient [114955,114965]" dest="identifier: _recipient [113578,113588]"/>
  <match src="primitive_type [29440,29444]" dest="primitive_type [25593,25597]"/>
  <match src="): ) [16309,16310]" dest="): ) [16792,16793]"/>
  <match src="): ) [88328,88329]" dest="): ) [86346,86347]"/>
  <match src="&quot;: &quot; [23551,23552]" dest="&quot;: &quot; [38426,38427]"/>
  <match src="}: } [27866,27867]" dest="}: } [23968,23969]"/>
  <match src="user_defined_type [104543,104566]" dest="user_defined_type [103064,103087]"/>
  <match src="parameter [31927,31943]" dest="parameter [28150,28166]"/>
  <match src="identifier: sender [59876,59882]" dest="identifier: sender [57039,57045]"/>
  <match src="}: } [92006,92007]" dest="}: } [90137,90138]"/>
  <match src="return_type_definition [90910,90927]" dest="return_type_definition [89007,89024]"/>
  <match src="binary_expression [98397,98413]" dest="binary_expression [96711,96727]"/>
  <match src="identifier: keccak256 [2210,2219]" dest="identifier: keccak256 [2281,2290]"/>
  <match src=".: . [48821,48822]" dest=".: . [45701,45702]"/>
  <match src="{: { [95943,95944]" dest="{: { [94176,94177]"/>
  <match src="memory: memory [45607,45613]" dest="memory: memory [42422,42428]"/>
  <match src="comment: // Delete the index for the deleted slot [72442,72482]" dest="comment: // Delete the index for the deleted slot [69981,70021]"/>
  <match src="type_name [29815,29822]" dest="type_name [25982,25989]"/>
  <match src="visibility [86027,86034]" dest="visibility [83988,83995]"/>
  <match src="identifier: this [116382,116386]" dest="identifier: this [115009,115013]"/>
  <match src="expression_statement [38488,38502]" dest="expression_statement [34884,34898]"/>
  <match src="type_name [37449,37456]" dest="type_name [33823,33830]"/>
  <match src="): ) [38590,38591]" dest="): ) [34988,34989]"/>
  <match src="identifier: value [75797,75802]" dest="identifier: value [73452,73457]"/>
  <match src="identifier: _token [111131,111137]" dest="identifier: _token [110502,110508]"/>
  <match src="): ) [92845,92846]" dest="): ) [91000,91001]"/>
  <match src="type_name [11821,11826]" dest="type_name [12783,12788]"/>
  <match src="function_body [19340,19847]" dest="function_body [18981,19390]"/>
  <match src="state_variable_declaration [101691,101721]" dest="state_variable_declaration [100103,100133]"/>
  <match src="): ) [84923,84924]" dest="): ) [82844,82845]"/>
  <match src="identifier: set [74585,74588]" dest="identifier: set [72198,72201]"/>
  <match src="unary_expression [72495,72514]" dest="unary_expression [70035,70054]"/>
  <match src=",: , [92200,92201]" dest=",: , [90337,90338]"/>
  <match src="user_defined_type [60393,60400]" dest="user_defined_type [57575,57582]"/>
  <match src="call_argument [114187,114193]" dest="call_argument [22231,22237]"/>
  <match src="address: address [23870,23877]" dest="address: address [38746,38753]"/>
  <match src="address: address [56991,56998]" dest="address: address [54078,54085]"/>
  <match src="identifier: MEDIATOR_CONTRACT [16343,16360]" dest="identifier: MEDIATOR_CONTRACT [16827,16844]"/>
  <match src="override: override [89552,89560]" dest="override: override [87613,87621]"/>
  <match src="function: function [83298,83306]" dest="function: function [81173,81181]"/>
  <match src="): ) [55382,55383]" dest="): ) [52427,52428]"/>
  <match src="type_name [83314,83330]" dest="type_name [81189,81205]"/>
  <match src="user_defined_type [85329,85346]" dest="user_defined_type [83275,83292]"/>
  <match src="function_definition [947,1047]" dest="function_definition [976,1078]"/>
  <match src="function_definition [78554,79232]" dest="function_definition [76301,76993]"/>
  <match src="identifier: ownerOf [88971,88978]" dest="identifier: ownerOf [87011,87018]"/>
  <match src="storage: storage [73800,73807]" dest="storage: storage [71389,71396]"/>
  <match src="block_statement [80874,80911]" dest="block_statement [78671,78710]"/>
  <match src="internal: internal [3550,3558]" dest="internal: internal [3654,3662]"/>
  <match src="yul_path [13400,13415]" dest="yul_path [14392,14407]"/>
  <match src="member_expression [46925,46935]" dest="member_expression [43764,43774]"/>
  <match src="expression_statement [27263,27340]" dest="expression_statement [39265,39342]"/>
  <match src="block_statement [36393,36513]" dest="block_statement [32740,32862]"/>
  <match src="(: ( [107118,107119]" dest="(: ( [104966,104967]"/>
  <match src="function_definition [43936,43990]" dest="function_definition [40702,40756]"/>
  <match src="function: function [12565,12573]" dest="function: function [13542,13550]"/>
  <match src="(: ( [42929,42930]" dest="(: ( [39656,39657]"/>
  <match src="identifier: _mint [96785,96790]" dest="identifier: _mint [95043,95048]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [12004,12241]" dest="comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [12970,13212]"/>
  <match src="visibility [59915,59923]" dest="visibility [57081,57089]"/>
  <match src="(: ( [115709,115710]" dest="(: ( [114317,114318]"/>
  <match src="identifier: operator [29430,29438]" dest="identifier: operator [25583,25591]"/>
  <match src="comment: //EnumerableMap.UintToAddressMap private _tokenOwners; [55474,55528]" dest="comment: //EnumerableMap.UintToAddressMap private _tokenOwners; [52522,52576]"/>
  <match src="}: } [92363,92364]" dest="}: } [90504,90505]"/>
  <match src="identifier: _INTERFACE_ID_ERC165 [62384,62404]" dest="identifier: _INTERFACE_ID_ERC165 [59626,59646]"/>
  <match src="(: ( [95326,95327]" dest="(: ( [93544,93545]"/>
  <match src="contract: contract [4162,4170]" dest="contract: contract [4289,4297]"/>
  <match src="function_body [23495,23581]" dest="function_body [38369,38489]"/>
  <match src="binary_expression [57517,57546]" dest="binary_expression [54617,54646]"/>
  <match src="identifier: _at [73344,73347]" dest="identifier: _at [70916,70919]"/>
  <match src="call_expression [111089,111159]" dest="call_expression [110467,110526]"/>
  <match src=",: , [93265,93266]" dest=",: , [91435,91436]"/>
  <match src="type_name [79578,79585]" dest="type_name [77348,77355]"/>
  <match src="}: } [13524,13525]" dest="}: } [14523,14524]"/>
  <match src="call_expression [107511,107590]" dest="call_expression [105369,105448]"/>
  <match src="(: ( [118659,118660]" dest="(: ( [116922,116923]"/>
  <match src="(: ( [46683,46684]" dest="(: ( [43519,43520]"/>
  <match src="comment: // Equivalent to contains(map, key) [82538,82573]" dest="comment: // Equivalent to contains(map, key) [80387,80422]"/>
  <match src="identifier: _tokenId [38558,38566]" dest="identifier: _tokenId [34955,34963]"/>
  <match src="(: ( [36241,36242]" dest="(: ( [32582,32583]"/>
  <match src="identifier: _tokenId [38151,38159]" dest="identifier: _tokenId [34540,34548]"/>
  <match src="comment: /**      * @dev Updates ownership information for the particular token.      * @param _token address of token contract.      * @param _tokenId id of the new owned token.      * @param _owns true, if new token is received. false, when token is released.      */ [58698,58958]" dest="comment: /**      * @dev Updates ownership information for the particular token.      * @param _token address of token contract.      * @param _tokenId id of the new owned token.      * @param _owns true, if new token is received. false, when token is released.      */ [55829,56094]"/>
  <match src="identifier: ERC721TokenProxy [55269,55285]" dest="identifier: ERC721TokenProxy [52312,52328]"/>
  <match src="parameter [109030,109044]" dest="parameter [106886,106900]"/>
  <match src="type_name [39707,39713]" dest="type_name [36141,36147]"/>
  <match src="primitive_type [97401,97408]" dest="primitive_type [95682,95689]"/>
  <match src="returns: returns [36353,36360]" dest="returns: returns [32699,32706]"/>
  <match src="parameter [39417,39433]" dest="parameter [35837,35853]"/>
  <match src="bytes32: bytes32 [362,369]" dest="bytes32: bytes32 [373,380]"/>
  <match src="address: address [16837,16844]" dest="address: address [17031,17038]"/>
  <match src="parameter [114947,114965]" dest="parameter [113570,113588]"/>
  <match src="call_argument [112167,112175]" dest="call_argument [111362,111370]"/>
  <match src="function_body [94474,94640]" dest="function_body [92667,92836]"/>
  <match src="type_name [36291,36298]" dest="type_name [32635,32642]"/>
  <match src="call_argument [92348,92356]" dest="call_argument [90488,90496]"/>
  <match src="(: ( [62954,62955]" dest="(: ( [60214,60215]"/>
  <match src="[: [ [114053,114054]" dest="[: [ [22732,22733]"/>
  <match src="identifier: data [11934,11938]" dest="identifier: data [12897,12901]"/>
  <match src="(: ( [84994,84995]" dest="(: ( [82916,82917]"/>
  <match src="): ) [84294,84295]" dest="): ) [82196,82197]"/>
  <match src="type_name [29414,29421]" dest="type_name [25567,25574]"/>
  <match src="visibility [59065,59073]" dest="visibility [56206,56214]"/>
  <match src="return_statement [75762,75805]" dest="return_statement [73417,73460]"/>
  <match src="variable_declaration [91436,91449]" dest="variable_declaration [89550,89563]"/>
  <match src="visibility [40643,40651]" dest="visibility [37109,37117]"/>
  <match src="type_name [98940,98947]" dest="type_name [97276,97283]"/>
  <match src="call_argument [6188,6196]" dest="call_argument [6388,6396]"/>
  <match src="parenthesized_expression [100532,100540]" dest="parenthesized_expression [98905,98913]"/>
  <match src="function: function [36216,36224]" dest="function: function [32557,32565]"/>
  <match src="bytes: bytes [61922,61927]" dest="bytes: bytes [59144,59149]"/>
  <match src="identifier: accountHash [8518,8529]" dest="identifier: accountHash [9407,9418]"/>
  <match src="identifier: EnumerableSet [69644,69657]" dest="identifier: EnumerableSet [67115,67128]"/>
  <match src="return_type_definition [984,998]" dest="return_type_definition [1013,1027]"/>
  <match src="function: function [27183,27191]" dest="function: function [39078,39086]"/>
  <match src="): ) [75426,75427]" dest="): ) [73070,73071]"/>
  <match src="]: ] [3963,3964]" dest="]: ] [4076,4077]"/>
  <match src="identifier: approved [92348,92356]" dest="identifier: approved [90488,90496]"/>
  <match src="call_argument [92921,92925]" dest="call_argument [91078,91082]"/>
  <match src="call_argument [107532,107544]" dest="call_argument [105390,105402]"/>
  <match src="]: ] [82614,82615]" dest="]: ] [80464,80465]"/>
  <match src=".: . [80817,80818]" dest=".: . [78611,78612]"/>
  <match src="bytes: bytes [7066,7071]" dest="bytes: bytes [7909,7914]"/>
  <match src="identifier: _transformName [118645,118659]" dest="identifier: _transformName [116908,116922]"/>
  <match src="): ) [20397,20398]" dest="): ) [19951,19952]"/>
  <match src="solidity_version_comparison_operator [60214,60216]" dest="solidity_version_comparison_operator [57389,57391]"/>
  <match src="identifier: require [92797,92804]" dest="identifier: require [90952,90959]"/>
  <match src="return: return [89045,89051]" dest="return: return [87086,87092]"/>
  <match src="address: address [92471,92478]" dest="address: address [90617,90624]"/>
  <match src="call_expression [4715,4722]" dest="call_expression [4856,4863]"/>
  <match src="internal: internal [74140,74148]" dest="internal: internal [71739,71747]"/>
  <match src="): ) [92335,92336]" dest="): ) [90475,90476]"/>
  <match src="identifier: encodeWithSelector [112308,112326]" dest="identifier: encodeWithSelector [111890,111908]"/>
  <match src="call_expression [105520,105570]" dest="call_expression [120086,120136]"/>
  <match src="bytes32: bytes32 [49237,49244]" dest="bytes32: bytes32 [46134,46141]"/>
  <match src="): ) [25583,25584]" dest="): ) [22620,22621]"/>
  <match src="): ) [3961,3962]" dest="): ) [4074,4075]"/>
  <match src="identifier: _tokenURI [89850,89859]" dest="identifier: _tokenURI [87918,87927]"/>
  <match src="bool: bool [483,487]" dest="bool: bool [496,500]"/>
  <match src="call_expression [45640,45693]" dest="call_expression [42455,42508]"/>
  <match src="comment: /**      * @dev Method to be called when a bridged message execution failed. It will generate a new message requesting to      * fix/roll back the transferred assets on the other network.      * @param _messageId id of the message which execution failed.      */ [19011,19273]" dest="comment: /**      * @dev Method to be called when a bridged message execution failed. It will generate a new message requesting to      * fix/roll back the transferred assets on the other network.      * @param _messageId id of the message which execution failed.      */ [18647,18913]"/>
  <match src="comment: /**      * @dev Returns true if this contract implements the interface defined by      * `interfaceId`. See the corresponding      * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]      * to learn more about how these ids are created.      *      * This function call must use less than 30 000 gas.      */ [28259,28599]" dest="comment: /**      * @dev Returns true if this contract implements the interface defined by      * `interfaceId`. See the corresponding      * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]      * to learn more about how these ids are created.      *      * This function call must use less than 30 000 gas.      */ [24378,24725]"/>
  <match src="string [63572,63602]" dest="string [60848,60878]"/>
  <match src="identifier: _bridgedToken [109879,109892]" dest="identifier: _bridgedToken [108295,108308]"/>
  <match src="(: ( [114256,114257]" dest="(: ( [23304,23305]"/>
  <match src="identifier: AddressSet [73789,73799]" dest="identifier: AddressSet [71378,71388]"/>
  <match src="string [20910,20924]" dest="string [20464,20478]"/>
  <match src="override_specifier [89375,89383]" dest="override_specifier [87429,87437]"/>
  <match src="call_argument [74217,74222]" dest="call_argument [71817,71822]"/>
  <match src="type_name [55533,55542]" dest="type_name [52582,52591]"/>
  <match src="type_name [10900,10905]" dest="type_name [11837,11842]"/>
  <match src="member_expression [112696,112717]" dest="member_expression [111572,111593]"/>
  <match src="): ) [55664,55665]" dest="): ) [52716,52717]"/>
  <match src="primitive_type [419,426]" dest="primitive_type [431,438]"/>
  <match src="(: ( [90207,90208]" dest="(: ( [88282,88283]"/>
  <match src="identifier: digits [43241,43247]" dest="identifier: digits [39976,39982]"/>
  <match src="(: ( [2139,2140]" dest="(: ( [2209,2210]"/>
  <match src="&quot;: &quot; [96394,96395]" dest="&quot;: &quot; [94637,94638]"/>
  <match src="primitive_type [7284,7291]" dest="primitive_type [8135,8142]"/>
  <match src="): ) [101836,101837]" dest="): ) [100254,100255]"/>
  <match src=",: , [39380,39381]" dest=",: , [35798,35799]"/>
  <match src="identifier: getApproved [95472,95483]" dest="identifier: getApproved [93692,93703]"/>
  <match src="call_argument [2912,2926]" dest="call_argument [3000,3014]"/>
  <match src="call_expression [96927,96943]" dest="call_expression [95187,95203]"/>
  <match src="(: ( [80737,80738]" dest="(: ( [78528,78529]"/>
  <match src="tuple_expression [81901,81927]" dest="tuple_expression [79731,79757]"/>
  <match src="): ) [45618,45619]" dest="): ) [42433,42434]"/>
  <match src="identifier: require [96847,96854]" dest="identifier: require [95106,95113]"/>
  <match src="call_argument [83646,83658]" dest="call_argument [81529,81541]"/>
  <match src="!=: != [72804,72806]" dest="!=: != [70356,70358]"/>
  <match src="call_argument [46889,46897]" dest="call_argument [43727,43735]"/>
  <match src="identifier: require [16881,16888]" dest="identifier: require [17076,17083]"/>
  <match src="call_expression [3210,3265]" dest="call_expression [3306,3361]"/>
  <match src="(: ( [92175,92176]" dest="(: ( [90312,90313]"/>
  <match src="}: } [21417,21418]" dest="}: } [20959,20960]"/>
  <match src="[: [ [6221,6222]" dest="[: [ [6422,6423]"/>
  <match src="identifier: getApproved [31875,31886]" dest="identifier: getApproved [28098,28109]"/>
  <match src="user_defined_type [83314,83330]" dest="user_defined_type [81189,81205]"/>
  <match src="emit: emit [6153,6157]" dest="emit: emit [6353,6357]"/>
  <match src="primitive_type [65029,65036]" dest="primitive_type [62356,62363]"/>
  <match src="call_expression [98566,98595]" dest="call_expression [96885,96914]"/>
  <match src="}: } [63659,63660]" dest="}: } [60937,60938]"/>
  <match src="identifier: _token [45139,45145]" dest="identifier: _token [41943,41949]"/>
  <match src="returns: returns [18210,18217]" dest="returns: returns [17714,17721]"/>
  <match src="address: address [31927,31934]" dest="address: address [28150,28157]"/>
  <match src="visibility [65040,65048]" dest="visibility [62367,62375]"/>
  <match src="function: function [5634,5642]" dest="function: function [5817,5825]"/>
  <match src="function: function [48596,48604]" dest="function: function [45474,45482]"/>
  <match src="identifier: set [75777,75780]" dest="identifier: set [73432,73435]"/>
  <match src="identifier: _setMediatorOwns [113103,113119]" dest="identifier: _setMediatorOwns [111258,111274]"/>
  <match src="yul_identifier [34471,34477]" dest="yul_identifier [30764,30770]"/>
  <match src=",: , [75411,75412]" dest=",: , [73055,73056]"/>
  <match src="): ) [73826,73827]" dest="): ) [71415,71416]"/>
  <match src="if: if [12937,12939]" dest="if: if [13919,13921]"/>
  <match src="type_name [4533,4540]" dest="type_name [4668,4675]"/>
  <match src="identifier: _receiver [111660,111669]" dest="identifier: _receiver [110992,111001]"/>
  <match src="type_name [42892,42899]" dest="type_name [39619,39626]"/>
  <match src="call_argument [23565,23571]" dest="call_argument [38445,38451]"/>
  <match src="^:  ^ [28759,28761]" dest="^:  ^ [24892,24894]"/>
  <match src="{: { [14585,14586]" dest="{: { [15453,15454]"/>
  <match src="array_access [17243,17276]" dest="array_access [17447,17480]"/>
  <match src="visibility [89540,89546]" dest="visibility [87601,87607]"/>
  <match src="): ) [7422,7423]" dest="): ) [8277,8278]"/>
  <match src="identifier: name [56652,56656]" dest="identifier: name [53730,53734]"/>
  <match src="): ) [95307,95308]" dest="): ) [93524,93525]"/>
  <match src="function_definition [15973,16087]" dest="function_definition [16448,16564]"/>
  <match src="memory: memory [43982,43988]" dest="memory: memory [40748,40754]"/>
  <match src=",: , [79432,79433]" dest=",: , [77200,77201]"/>
  <match src="interface_declaration [6314,7426]" dest="interface_declaration [6523,8282]"/>
  <match src="member_expression [79073,79085]" dest="member_expression [76828,76840]"/>
  <match src="visibility [55882,55889]" dest="visibility [52939,52946]"/>
  <match src="&quot;: &quot; [91499,91500]" dest="&quot;: &quot; [89614,89615]"/>
  <match src="(: ( [13382,13383]" dest="(: ( [14374,14375]"/>
  <match src="identifier: set [76149,76152]" dest="identifier: set [73817,73820]"/>
  <match src="yul_path [34997,35000]" dest="yul_path [31305,31308]"/>
  <match src="return_type_definition [68169,68186]" dest="return_type_definition [65589,65606]"/>
  <match src=",: , [53159,53160]" dest=",: , [50144,50145]"/>
  <match src="string_literal [2562,2576]" dest="string_literal [2641,2655]"/>
  <match src="returns: returns [2485,2492]" dest="returns: returns [2563,2570]"/>
  <match src="solidity: solidity [47076,47084]" dest="solidity: solidity [43921,43929]"/>
  <match src=",: , [54684,54685]" dest=",: , [51699,51700]"/>
  <match src="state_variable_declaration [55904,55935]" dest="state_variable_declaration [52962,52993]"/>
  <match src="): ) [78634,78635]" dest="): ) [76381,76382]"/>
  <match src="identifier: NFTOmnibridgeInfo [104408,104425]" dest="identifier: NFTOmnibridgeInfo [102923,102940]"/>
  <match src="}: } [73916,73917]" dest="}: } [71507,71508]"/>
  <match src="(: ( [50884,50885]" dest="(: ( [47829,47830]"/>
  <match src="identifier: IERC721 [116345,116352]" dest="identifier: IERC721 [114972,114979]"/>
  <match src="identifier: operator [32300,32308]" dest="identifier: operator [28535,28543]"/>
  <match src="parameter [72913,72928]" dest="parameter [70471,70486]"/>
  <match src="expression_statement [80721,80740]" dest="expression_statement [78512,78531]"/>
  <match src="): ) [92899,92900]" dest="): ) [91054,91055]"/>
  <match src="}: } [63067,63068]" dest="}: } [60329,60330]"/>
  <match src="primitive_type [6568,6575]" dest="primitive_type [7397,7404]"/>
  <match src="(: ( [18552,18553]" dest="(: ( [18065,18066]"/>
  <match src="number_literal: 0 [78807,78808]" dest="number_literal: 0 [76558,76559]"/>
  <match src="parameter [72952,72959]" dest="parameter [70510,70517]"/>
  <match src="interface_declaration [61325,61975]" dest="interface_declaration [58537,59199]"/>
  <match src="visibility [63510,63518]" dest="visibility [60785,60793]"/>
  <match src="comment: // upgradeabilityOwner() [4263,4287]" dest="comment: // upgradeabilityOwner() [4391,4415]"/>
  <match src="identifier: onlyMediator [20232,20244]" dest="identifier: onlyMediator [19782,19794]"/>
  <match src=",: , [56348,56349]" dest=",: , [53417,53418]"/>
  <match src="identifier: minor [40745,40750]" dest="identifier: minor [37216,37221]"/>
  <match src="parameter [115557,115573]" dest="parameter [114161,114177]"/>
  <match src="type_name [107515,107531]" dest="type_name [105373,105389]"/>
  <match src="variable_declaration [91225,91240]" dest="variable_declaration [89331,89346]"/>
  <match src="identifier: buffer [43583,43589]" dest="identifier: buffer [40330,40336]"/>
  <match src="primitive_type [46143,46149]" dest="primitive_type [42968,42974]"/>
  <match src="public: public [16581,16587]" dest="public: public [118361,118367]"/>
  <match src="address: address [97516,97523]" dest="address: address [95800,95807]"/>
  <match src="uint256: uint256 [91160,91167]" dest="uint256: uint256 [89265,89272]"/>
  <match src="visibility [96275,96283]" dest="visibility [94516,94524]"/>
  <match src="): ) [9988,9989]" dest="): ) [10903,10904]"/>
  <match src="uint256: uint256 [68805,68812]" dest="uint256: uint256 [66241,66248]"/>
  <match src="call_argument [110650,110656]" dest="call_argument [109143,109149]"/>
  <match src="call_expression [110624,110657]" dest="call_expression [109117,109150]"/>
  <match src="identifier: stringStorage [45166,45179]" dest="identifier: stringStorage [41971,41984]"/>
  <match src="yul_evm_builtin [53818,53824]" dest="yul_evm_builtin [50817,50823]"/>
  <match src="identifier: length [74559,74565]" dest="identifier: length [72172,72178]"/>
  <match src="type_name [89570,89576]" dest="type_name [87631,87637]"/>
  <match src=",: , [100627,100628]" dest=",: , [99004,99005]"/>
  <match src="call_expression [95418,95434]" dest="call_expression [93637,93653]"/>
  <match src="bytes32: bytes32 [81032,81039]" dest="bytes32: bytes32 [78837,78844]"/>
  <match src="type_name [82385,82391]" dest="type_name [80232,80238]"/>
  <match src="array_access [48229,48310]" dest="array_access [45099,45180]"/>
  <match src="call_argument [100305,100307]" dest="call_argument [98672,98674]"/>
  <match src="identifier: _tokenId [117365,117373]" dest="identifier: _tokenId [115889,115897]"/>
  <match src="internal: internal [11855,11863]" dest="internal: internal [12817,12825]"/>
  <match src="struct_field_assignment [12904,12919]" dest="struct_field_assignment [13885,13900]"/>
  <match src="comment: // repetition as possible, we write it in terms of a generic Map type with [77590,77664]" dest="comment: // repetition as possible, we write it in terms of a generic Map type with [75308,75382]"/>
  <match src="comment: /**  * @title ERC-721 Non-Fungible Token Standard, optional metadata extension  * @dev See https://eips.ethereum.org/EIPS/eip-721  */ [43695,43828]" dest="comment: /**  * @title ERC-721 Non-Fungible Token Standard, optional metadata extension  * @dev See https://eips.ethereum.org/EIPS/eip-721  */ [40452,40588]"/>
  <match src="contract_body [44545,46965]" dest="contract_body [41335,43806]"/>
  <match src="identifier: tokenId [97782,97789]" dest="identifier: tokenId [96076,96083]"/>
  <match src="string: string [45562,45568]" dest="string: string [42376,42382]"/>
  <match src="primitive_type [102576,102583]" dest="primitive_type [101020,101027]"/>
  <match src="block_statement [116427,116515]" dest="block_statement [115055,115145]"/>
  <match src="binary_expression [68870,68875]" dest="binary_expression [66308,66313]"/>
  <match src="identifier: spender [95452,95459]" dest="identifier: spender [93672,93679]"/>
  <match src=",: , [52243,52244]" dest=",: , [49210,49211]"/>
  <match src="pragma_directive [63717,63740]" dest="pragma_directive [61001,61024]"/>
  <match src="): ) [96391,96392]" dest="): ) [94634,94635]"/>
  <match src="comment: // in the array, and then remove the last entry (sometimes called as 'swap and pop'). [79815,79900]" dest="comment: // in the array, and then remove the last entry (sometimes called as 'swap and pop'). [77589,77674]"/>
  <match src="{: { [75182,75183]" dest="{: { [72816,72817]"/>
  <match src="call_expression [48808,48873]" dest="call_expression [45688,45753]"/>
  <match src="{: { [11887,11888]" dest="{: { [12849,12850]"/>
  <match src="identifier: lastEntry [80580,80589]" dest="identifier: lastEntry [78368,78377]"/>
  <match src=",: , [114093,114094]" dest=",: , [22779,22780]"/>
  <match src="identifier: value [75494,75499]" dest="identifier: value [73139,73144]"/>
  <match src="primitive_type [107503,107510]" dest="primitive_type [105361,105368]"/>
  <match src="returns: returns [1227,1234]" dest="returns: returns [1266,1273]"/>
  <match src="comment: /**      * @dev Tells the bridge interface version that this contract supports.      * @return major value of the version      * @return minor value of the version      * @return patch value of the version      */ [40379,40592]" dest="comment: /**      * @dev Tells the bridge interface version that this contract supports.      * @return major value of the version      * @return minor value of the version      * @return patch value of the version      */ [36838,37056]"/>
  <match src="}: } [17302,17303]" dest="}: } [17507,17508]"/>
  <match src="identifier: lastvalue [72274,72283]" dest="identifier: lastvalue [69808,69817]"/>
  <match src="identifier: errorMessage [65551,65563]" dest="identifier: errorMessage [62893,62905]"/>
  <match src=",: , [12524,12525]" dest=",: , [13498,13499]"/>
  <match src="external: external [26213,26221]" dest="external: external [22073,22081]"/>
  <match src="return_type_definition [47707,47724]" dest="return_type_definition [44567,44584]"/>
  <match src="visibility [23886,23892]" dest="visibility [38762,38768]"/>
  <match src="internal: internal [46718,46726]" dest="internal: internal [43554,43562]"/>
  <match src="pragma_directive [76759,76782]" dest="pragma_directive [74449,74472]"/>
  <match src="(: ( [49829,49830]" dest="(: ( [46741,46742]"/>
  <match src="identifier: name [107456,107460]" dest="identifier: name [105312,105316]"/>
  <match src="(: ( [50676,50677]" dest="(: ( [47615,47616]"/>
  <match src=",: , [32523,32524]" dest=",: , [28765,28766]"/>
  <match src="parameter [22161,22175]" dest="parameter [21716,21730]"/>
  <match src="primitive_type [90022,90028]" dest="primitive_type [88094,88100]"/>
  <match src="identifier: target [12738,12744]" dest="identifier: target [13716,13722]"/>
  <match src=",: , [36461,36462]" dest=",: , [32809,32810]"/>
  <match src="false [111112,111117]" dest="false [19376,19381]"/>
  <match src="=: = [91450,91451]" dest="=: = [89564,89565]"/>
  <match src=".: . [46224,46225]" dest=".: . [43050,43051]"/>
  <match src="primitive_type [29191,29198]" dest="primitive_type [25339,25346]"/>
  <match src="returns: returns [82426,82433]" dest="returns: returns [80273,80280]"/>
  <match src="bool: bool [106129,106133]" dest="bool: bool [103956,103960]"/>
  <match src=",: , [11819,11820]" dest=",: , [12781,12782]"/>
  <match src="call_argument [97065,97072]" dest="call_argument [95329,95336]"/>
  <match src="visibility [6786,6794]" dest="visibility [7621,7629]"/>
  <match src="parenthesized_expression [46942,46950]" dest="parenthesized_expression [43781,43789]"/>
  <match src="bool: bool [29440,29444]" dest="bool: bool [25593,25597]"/>
  <match src="external: external [6700,6708]" dest="external: external [7533,7541]"/>
  <match src="view: view [58574,58578]" dest="view: view [55701,55705]"/>
  <match src="expression_statement [93463,93503]" dest="expression_statement [91635,91675]"/>
  <match src="internal: internal [3840,3848]" dest="internal: internal [3952,3960]"/>
  <match src="(: ( [88801,88802]" dest="(: ( [86833,86834]"/>
  <match src=".: . [37508,37509]" dest=".: . [33883,33884]"/>
  <match src="sstore: sstore [56546,56552]" dest="sstore: sstore [53622,53628]"/>
  <match src="number_literal: 1 [43415,43416]" dest="number_literal: 1 [40156,40157]"/>
  <match src="type_name [40712,40718]" dest="type_name [37182,37188]"/>
  <match src="type_name [70329,70336]" dest="type_name [67816,67823]"/>
  <match src="primitive_type [47289,47296]" dest="primitive_type [44142,44149]"/>
  <match src="call_argument [19710,19724]" dest="call_argument [19303,19333]"/>
  <match src="]: ] [48309,48310]" dest="]: ] [45179,45180]"/>
  <match src="identifier: require [107313,107320]" dest="identifier: require [105166,105173]"/>
  <match src="address: address [30571,30578]" dest="address: address [26754,26761]"/>
  <match src="return_statement [23926,24005]" dest="return_statement [38800,38879]"/>
  <match src="function_definition [118636,118798]" dest="function_definition [116899,117208]"/>
  <match src="array_access [16628,16658]" dest="array_access [118409,118439]"/>
  <match src="type_name [86250,86254]" dest="type_name [84217,84221]"/>
  <match src="comment: /**      * @dev Returns true if the key is in the map. O(1).      */ [83444,83512]" dest="comment: /**      * @dev Returns true if the key is in the map. O(1).      */ [81323,81393]"/>
  <match src="function_body [75452,75508]" dest="function_body [73096,73154]"/>
  <match src="member_expression [73429,73440]" dest="member_expression [71002,71013]"/>
  <match src="state_mutability [65049,65053]" dest="state_mutability [62376,62380]"/>
  <match src="): ) [5940,5941]" dest="): ) [6131,6132]"/>
  <match src=",: , [100530,100531]" dest=",: , [98903,98904]"/>
  <match src="(: ( [75445,75446]" dest="(: ( [73089,73090]"/>
  <match src="(: ( [90671,90672]" dest="(: ( [88761,88762]"/>
  <match src="returns: returns [16593,16600]" dest="returns: returns [118373,118380]"/>
  <match src="interface_declaration [28838,33250]" dest="interface_declaration [24977,29508]"/>
  <match src="comment: /**      * @dev See {IERC721Enumerable-tokenByIndex}.      */ [91072,91133]" dest="comment: /**      * @dev See {IERC721Enumerable-tokenByIndex}.      */ [89174,89237]"/>
  <match src="contract_declaration [1855,3973]" dest="contract_declaration [1919,4088]"/>
  <match src="): ) [82535,82536]" dest="): ) [80384,80385]"/>
  <match src="function: function [1182,1190]" dest="function: function [1221,1229]"/>
  <match src="function_definition [7299,7356]" dest="function_definition [8152,8209]"/>
  <match src="call_argument [45223,45229]" dest="call_argument [42028,42034]"/>
  <match src="event_paramater [40197,40212]" dest="event_paramater [36651,36666]"/>
  <match src=".: . [112307,112308]" dest=".: . [111889,111890]"/>
  <match src="identifier: set [73360,73363]" dest="identifier: set [70932,70935]"/>
  <match src="solidity: solidity [104066,104074]" dest="solidity: solidity [102555,102563]"/>
  <match src="primitive_type [84884,84891]" dest="primitive_type [82805,82812]"/>
  <match src="type_name [43341,43346]" dest="type_name [40081,40086]"/>
  <match src="primitive_type [64582,64589]" dest="primitive_type [61892,61899]"/>
  <match src="{: { [16311,16312]" dest="{: { [16794,16795]"/>
  <match src="expression_statement [81755,81830]" dest="expression_statement [79582,79657]"/>
  <match src="address: address [54968,54975]" dest="address: address [51997,52004]"/>
  <match src="call_argument [43509,43523]" dest="call_argument [40253,40267]"/>
  <match src=",: , [2926,2927]" dest=",: , [3014,3015]"/>
  <match src=",: , [115136,115137]" dest=",: , [113727,113728]"/>
  <match src="identifier: _nativeToken [109607,109619]" dest="identifier: _nativeToken [107551,107563]"/>
  <match src="primitive_type [101808,101815]" dest="primitive_type [100225,100232]"/>
  <match src="if_statement [112563,113060]" dest="if_statement [111477,111658]"/>
  <match src="member_expression [72157,72168]" dest="member_expression [69689,69700]"/>
  <match src="}: } [75507,75508]" dest="}: } [73153,73154]"/>
  <match src="uint256: uint256 [84278,84285]" dest="uint256: uint256 [82180,82187]"/>
  <match src="identifier: returndata [12971,12981]" dest="identifier: returndata [13954,13964]"/>
  <match src="address: address [83021,83028]" dest="address: address [80887,80894]"/>
  <match src="type_name [65922,65929]" dest="type_name [63280,63287]"/>
  <match src="true: true [21236,21240]" dest="true: true [20798,20802]"/>
  <match src="uint256: uint256 [90732,90739]" dest="uint256: uint256 [88822,88829]"/>
  <match src="primitive_type [100533,100539]" dest="primitive_type [98906,98912]"/>
  <match src="visibility [74590,74598]" dest="visibility [72203,72211]"/>
  <match src="parameter [95246,95261]" dest="parameter [93463,93478]"/>
  <match src="comment: /**      * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.      * The call is not executed if the target address is not a contract.      *      * @param from address representing the previous owner of the given token ID      * @param to target address that will receive the tokens      * @param tokenId uint256 ID of the token to be transferred      * @param _data bytes optional data to send along with the call      * @return bool whether the call correctly returned the expected magic value      */ [99457,99999]" dest="comment: /**      * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.      * The call is not executed if the target address is not a contract.      *      * @param from address representing the previous owner of the given token ID      * @param to target address that will receive the tokens      * @param tokenId uint256 ID of the token to be transferred      * @param _data bytes optional data to send along with the call      * @return bool whether the call correctly returned the expected magic value      */ [97807,98358]"/>
  <match src="(: ( [38550,38551]" dest="(: ( [34947,34948]"/>
  <match src="identifier: contains [83526,83534]" dest="identifier: contains [81408,81416]"/>
  <match src="function: function [81209,81217]" dest="function: function [79021,79029]"/>
  <match src="visibility [33441,33449]" dest="visibility [29707,29715]"/>
  <match src="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [70933,71090]" dest="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [68441,68603]"/>
  <match src="is: is [85283,85285]" dest="is: is [83229,83231]"/>
  <match src="^:  ^ [61162,61164]" dest="^:  ^ [58367,58369]"/>
  <match src="expression_statement [14653,14711]" dest="expression_statement [15554,15619]"/>
  <match src="type_name [75071,75078]" dest="type_name [72698,72705]"/>
  <match src="string_literal [100430,100482]" dest="string_literal [98802,98854]"/>
  <match src="address: address [46104,46111]" dest="address: address [42929,42936]"/>
  <match src="identifier: _token [110914,110920]" dest="identifier: _token [109374,109380]"/>
  <match src="(: ( [29774,29775]" dest="(: ( [25941,25942]"/>
  <match src="): ) [18226,18227]" dest="): ) [17730,17731]"/>
  <match src="): ) [86130,86131]" dest="): ) [84094,84095]"/>
  <match src="(: ( [112326,112327]" dest="(: ( [111908,111909]"/>
  <match src="function_body [98999,99130]" dest="function_body [97335,97469]"/>
  <match src="identifier: to [97057,97059]" dest="identifier: to [95321,95323]"/>
  <match src="address: address [100036,100043]" dest="address: address [98396,98403]"/>
  <match src="visibility [55384,55391]" dest="visibility [52429,52436]"/>
  <match src="bytes: bytes [96255,96260]" dest="bytes: bytes [94496,94501]"/>
  <match src="function: function [6653,6661]" dest="function: function [7486,7494]"/>
  <match src="identifier: token [37055,37060]" dest="identifier: token [33420,33425]"/>
  <match src="yul_function_call [53840,53856]" dest="yul_function_call [50839,50855]"/>
  <match src="call_expression [20264,20288]" dest="call_expression [19815,19839]"/>
  <match src=",: , [48292,48293]" dest=",: , [45162,45163]"/>
  <match src="internal: internal [65899,65907]" dest="internal: internal [63257,63265]"/>
  <match src="): ) [14640,14641]" dest="): ) [15493,15494]"/>
  <match src=",: , [73884,73885]" dest=",: , [71474,71475]"/>
  <match src="solidity: solidity [76766,76774]" dest="solidity: solidity [74456,74464]"/>
  <match src="identifier: _messageId [2578,2588]" dest="identifier: _messageId [2657,2667]"/>
  <match src="&quot;: &quot; [82224,82225]" dest="&quot;: &quot; [80065,80066]"/>
  <match src="): ) [66296,66297]" dest="): ) [63663,63664]"/>
  <match src="indexed: indexed [40354,40361]" dest="indexed: indexed [36811,36818]"/>
  <match src="call_argument [89806,89814]" dest="call_argument [87873,87881]"/>
  <match src="identifier: _exists [99017,99024]" dest="identifier: _exists [97354,97361]"/>
  <match src="[: [ [114136,114137]" dest="[: [ [22183,22184]"/>
  <match src="primitive_type [22557,22564]" dest="primitive_type [117066,117073]"/>
  <match src="primitive_type [79434,79441]" dest="primitive_type [77202,77209]"/>
  <match src="storage: storage [83331,83338]" dest="storage: storage [81206,81213]"/>
  <match src="=: = [78761,78762]" dest="=: = [76510,76511]"/>
  <match src="comment: /**      * @dev See {IERC165-supportsInterface}.      *      * Time complexity O(1), guaranteed to always use less than 30 000 gas.      */ [62784,62923]" dest="comment: /**      * @dev See {IERC165-supportsInterface}.      *      * Time complexity O(1), guaranteed to always use less than 30 000 gas.      */ [60039,60182]"/>
  <match src="identifier: tokenId [94504,94511]" dest="identifier: tokenId [92698,92705]"/>
  <match src="identifier: _symbol [86370,86377]" dest="identifier: _symbol [84343,84350]"/>
  <match src="): ) [115093,115094]" dest="): ) [113682,113683]"/>
  <match src="(: ( [54680,54681]" dest="(: ( [51695,51696]"/>
  <match src="identifier: set [76211,76214]" dest="identifier: set [73880,73883]"/>
  <match src="{: { [50129,50130]" dest="{: { [47049,47050]"/>
  <match src="(: ( [113234,113235]" dest="(: ( [109446,109447]"/>
  <match src="primitive_type [7217,7222]" dest="primitive_type [8066,8071]"/>
  <match src="return: return [91278,91284]" dest="return: return [89385,89391]"/>
  <match src="memory: memory [107229,107235]" dest="memory: memory [105080,105086]"/>
  <match src="return: return [92535,92541]" dest="return: return [90682,90688]"/>
  <match src="comment: // Storage of map keys and values [78072,78105]" dest="comment: // Storage of map keys and values [75804,75837]"/>
  <match src="variable_declaration [78744,78760]" dest="variable_declaration [76493,76509]"/>
  <match src="call_expression [17608,17621]" dest="call_expression [118738,118751]"/>
  <match src="call_argument [38667,38676]" dest="call_argument [35066,35075]"/>
  <match src=".: . [45723,45724]" dest=".: . [42539,42540]"/>
  <match src="identifier: require [91478,91485]" dest="identifier: require [89593,89600]"/>
  <match src="!: ! [70606,70607]" dest="!: ! [68103,68104]"/>
  <match src="identifier: set [82974,82977]" dest="identifier: set [80840,80843]"/>
  <match src="(: ( [50103,50104]" dest="(: ( [47023,47024]"/>
  <match src="is: is [674,676]" dest="is: is [696,698]"/>
  <match src="address: address [17945,17952]" dest="address: address [111075,111082]"/>
  <match src="contract: contract [40041,40049]" dest="contract: contract [36491,36499]"/>
  <match src="variable_declaration [8484,8500]" dest="variable_declaration [9372,9388]"/>
  <match src="yul_evm_builtin [54686,54700]" dest="yul_evm_builtin [51701,51715]"/>
  <match src="internal: internal [35167,35175]" dest="internal: internal [31479,31487]"/>
  <match src="identifier: require [110616,110623]" dest="identifier: require [109109,109116]"/>
  <match src="true: true [38496,38500]" dest="true: true [34892,34896]"/>
  <match src="boolean_literal [80895,80900]" dest="boolean_literal [78693,78698]"/>
  <match src="variable_declaration_tuple [84306,84334]" dest="variable_declaration_tuple [82209,82237]"/>
  <match src=":=: := [51466,51468]" dest=":=: := [48422,48424]"/>
  <match src="type_name [66798,66805]" dest="type_name [64182,64189]"/>
  <match src="return: return [47735,47741]" dest="return: return [44596,44602]"/>
  <match src="): ) [62770,62771]" dest="): ) [60022,60023]"/>
  <match src="}: } [34498,34499]" dest="}: } [30793,30794]"/>
  <match src="): ) [4721,4722]" dest="): ) [4862,4863]"/>
  <match src="identifier: map [80721,80724]" dest="identifier: map [78512,78515]"/>
  <match src="comment: /**      * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is      * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.      */ [95992,96202]" dest="comment: /**      * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is      * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.      */ [94229,94442]"/>
  <match src="identifier: _tokenId [107799,107807]" dest="identifier: _tokenId [105624,105632]"/>
  <match src="call_expression [20883,20938]" dest="call_expression [20437,20492]"/>
  <match src="external: external [36344,36352]" dest="external: external [32690,32698]"/>
  <match src="visibility [50120,50128]" dest="visibility [47040,47048]"/>
  <match src="identifier: stringStorage [46332,46345]" dest="identifier: stringStorage [43159,43172]"/>
  <match src="primitive_type [39390,39397]" dest="primitive_type [35809,35816]"/>
  <match src="false: false [111112,111117]" dest="false: false [19376,19381]"/>
  <match src="private: private [55740,55747]" dest="private: private [52793,52800]"/>
  <match src="solidity: solidity [1731,1739]" dest="solidity: solidity [1788,1796]"/>
  <match src="primitive_type [67421,67428]" dest="primitive_type [64821,64828]"/>
  <match src="call_argument [112043,112049]" dest="call_argument [111705,111711]"/>
  <match src="identifier: approved [29445,29453]" dest="identifier: approved [25598,25606]"/>
  <match src="variable_declaration [66214,66223]" dest="variable_declaration [63580,63589]"/>
  <match src="yul_identifier [13400,13415]" dest="yul_identifier [14392,14407]"/>
  <match src="binary_expression [71713,71727]" dest="binary_expression [69236,69250]"/>
  <match src="type_name [96255,96260]" dest="type_name [94496,94501]"/>
  <match src="primitive_type [33470,33477]" dest="primitive_type [29738,29745]"/>
  <match src="{: { [65525,65526]" dest="{: { [62866,62867]"/>
  <match src="public: public [56961,56967]" dest="public: public [54048,54054]"/>
  <match src="bool: bool [45588,45592]" dest="bool: bool [42403,42407]"/>
  <match src="^:  ^ [43684,43686]" dest="^:  ^ [40438,40440]"/>
  <match src="call_expression [96987,97032]" dest="call_expression [95249,95294]"/>
  <match src="call_expression [57412,57499]" dest="call_expression [54511,54598]"/>
  <match src="type_name [83535,83551]" dest="type_name [81417,81433]"/>
  <match src="==: == [25629,25631]" dest="==: == [22667,22669]"/>
  <match src="identifier: require [110718,110725]" dest="identifier: require [109213,109220]"/>
  <match src="return: return [46909,46915]" dest="return: return [43748,43754]"/>
  <match src="address: address [86219,86226]" dest="address: address [84186,84193]"/>
  <match src="bool: bool [58588,58592]" dest="bool: bool [55715,55719]"/>
  <match src="return_type_definition [70577,70591]" dest="return_type_definition [68073,68087]"/>
  <match src="identifier: Initializable [104290,104303]" dest="identifier: Initializable [102800,102813]"/>
  <match src="call_argument [108551,108559]" dest="call_argument [106395,106403]"/>
  <match src="identifier: name [55787,55791]" dest="identifier: name [52841,52845]"/>
  <match src="identifier: _requestGasLimit [105315,105331]" dest="identifier: _requestGasLimit [119874,119890]"/>
  <match src="uint256: uint256 [64616,64623]" dest="uint256: uint256 [61926,61933]"/>
  <match src="}: } [80867,80868]" dest="}: } [78664,78665]"/>
  <match src="primitive_type [48626,48633]" dest="primitive_type [45504,45511]"/>
  <match src="number_literal: 0 [71346,71347]" dest="number_literal: 0 [68864,68865]"/>
  <match src="function_body [46158,46405]" dest="function_body [42983,43233]"/>
  <match src="visibility [81045,81052]" dest="visibility [78850,78857]"/>
  <match src="primitive_type [61891,61898]" dest="primitive_type [59113,59120]"/>
  <match src="memory: memory [42937,42943]" dest="memory: memory [39664,39670]"/>
  <match src="identifier: _readSymbol [46092,46103]" dest="identifier: _readSymbol [42917,42928]"/>
  <match src="identifier: _tokenURI [103886,103895]" dest="identifier: _tokenURI [102368,102377]"/>
  <match src="contract: contract [50422,50430]" dest="contract: contract [47356,47364]"/>
  <match src="expression_statement [110788,110829]" dest="expression_statement [109285,109326]"/>
  <match src="string: string [89237,89243]" dest="string: string [87284,87290]"/>
  <match src="return_type_definition [3854,3871]" dest="return_type_definition [3966,3983]"/>
  <match src="(: ( [6567,6568]" dest="(: ( [7396,7397]"/>
  <match src="member_expression [112696,112726]" dest="member_expression [111572,111602]"/>
  <match src="): ) [3147,3148]" dest="): ) [3242,3243]"/>
  <match src="call_expression [95327,95343]" dest="call_expression [93545,93561]"/>
  <match src="identifier: _key [78010,78014]" dest="identifier: _key [75737,75741]"/>
  <match src="call_argument [110624,110657]" dest="call_argument [109117,109150]"/>
  <match src="return_type_definition [20839,20853]" dest="return_type_definition [20392,20406]"/>
  <match src="member_expression [45190,45206]" dest="member_expression [41995,42011]"/>
  <match src="): ) [107761,107762]" dest="): ) [105585,105586]"/>
  <match src="yul_identifier [34453,34457]" dest="yul_identifier [30746,30750]"/>
  <match src="function_body [46756,46963]" dest="function_body [43592,43803]"/>
  <match src="identifier: owner [54937,54942]" dest="identifier: owner [51966,51971]"/>
  <match src="function: function [102843,102851]" dest="function: function [101296,101304]"/>
  <match src="): ) [540,541]" dest="): ) [554,555]"/>
  <match src="identifier: require [73421,73428]" dest="identifier: require [70994,71001]"/>
  <match src="(: ( [64570,64571]" dest="(: ( [61880,61881]"/>
  <match src="address: address [55904,55911]" dest="address: address [52962,52969]"/>
  <match src="call_expression [97754,97790]" dest="call_expression [96048,96084]"/>
  <match src="): ) [36501,36502]" dest="): ) [32849,32850]"/>
  <match src="delegatecall: delegatecall [53113,53125]" dest="delegatecall: delegatecall [50098,50110]"/>
  <match src="comment: /**      * @dev Returns the owner of the `tokenId` token.      *      * Requirements:      *      * - `tokenId` must exist.      */ [29622,29753]" dest="comment: /**      * @dev Returns the owner of the `tokenId` token.      *      * Requirements:      *      * - `tokenId` must exist.      */ [25782,25919]"/>
  <match src="uint256: uint256 [81690,81697]" dest="uint256: uint256 [79516,79523]"/>
  <match src="&quot;: &quot; [92202,92203]" dest="&quot;: &quot; [90339,90340]"/>
  <match src="identifier: _indexes [70338,70346]" dest="identifier: _indexes [67825,67833]"/>
  <match src="(: ( [65092,65093]" dest="(: ( [62420,62421]"/>
  <match src="}: } [39275,39276]" dest="}: } [35688,35689]"/>
  <match src="string [23972,23993]" dest="string [38846,38863]"/>
  <match src="storage: storage [81230,81237]" dest="storage: storage [79042,79049]"/>
  <match src="call_expression [110726,110741]" dest="call_expression [109221,109236]"/>
  <match src="function_body [96292,96454]" dest="function_body [94533,94698]"/>
  <match src="}: } [85044,85045]" dest="}: } [82968,82969]"/>
  <match src=".: . [1576,1577]" dest=".: . [1626,1627]"/>
  <match src="!=: != [96858,96860]" dest="!=: != [95117,95119]"/>
  <match src="function_body [14963,15015]" dest="function_body [15878,15932]"/>
  <match src="type_name [59946,59951]" dest="type_name [57112,57117]"/>
  <match src="visibility [884,892]" dest="visibility [909,917]"/>
  <match src="binary_expression [106189,106229]" dest="binary_expression [104017,104057]"/>
  <match src="expression_statement [99009,99083]" dest="expression_statement [97346,97420]"/>
  <match src="comment: /**      * @dev Internal function for updating address of the used ERC721 token image.      * @param _image address of the new token image.      */ [49928,50075]" dest="comment: /**      * @dev Internal function for updating address of the used ERC721 token image.      * @param _image address of the new token image.      */ [46844,46994]"/>
  <match src="&quot;: &quot; [73492,73493]" dest="&quot;: &quot; [71065,71066]"/>
  <match src="member_expression [39238,39258]" dest="member_expression [35650,35670]"/>
  <match src="string [65099,65131]" dest="string [62427,62459]"/>
  <match src="type_name [85440,85461]" dest="type_name [83389,83410]"/>
  <match src="comment: /*                 ptr current points to the value stored at 0x40,                 because we assigned it like ptr := mload(0x40).                 Because we use 0x40 as a free memory pointer,                 we want to make sure that the next time we want to allocate memory,                 we aren't overwriting anything important.                 So, by adding ptr and returndatasize,                 we get a memory location beyond the end of the data we will be copying to ptr.                 We place this in at 0x40, and any reads from 0x40 will now read from free memory             */ [53210,53805]" dest="comment: /*                 ptr current points to the value stored at 0x40,                 because we assigned it like ptr := mload(0x40).                 Because we use 0x40 as a free memory pointer,                 we want to make sure that the next time we want to allocate memory,                 we aren't overwriting anything important.                 So, by adding ptr and returndatasize,                 we get a memory location beyond the end of the data we will be copying to ptr.                 We place this in at 0x40, and any reads from 0x40 will now read from free memory             */ [50199,50803]"/>
  <match src="state_variable_declaration [55533,55571]" dest="state_variable_declaration [52582,52620]"/>
  <match src="identifier: _tokenOwners [97801,97813]" dest="identifier: _tokenOwners [96097,96109]"/>
  <match src="override: override [89008,89016]" dest="override: override [87048,87056]"/>
  <match src="function_body [109127,109246]" dest="function_body [106986,107182]"/>
  <match src="call_argument [43503,43524]" dest="call_argument [40247,40268]"/>
  <match src="primitive_type [55646,55653]" dest="primitive_type [52698,52705]"/>
  <match src="identifier: nativeTokenAddress [48140,48158]" dest="identifier: nativeTokenAddress [45009,45027]"/>
  <match src="}: } [118797,118798]" dest="}: } [117207,117208]"/>
  <match src="{: { [102009,102010]" dest="{: { [100434,100435]"/>
  <match src="function: function [74550,74558]" dest="function: function [72163,72171]"/>
  <match src="internal: internal [67460,67468]" dest="internal: internal [64860,64868]"/>
  <match src="visibility [100646,100653]" dest="visibility [99023,99030]"/>
  <match src="call_expression [83624,83659]" dest="call_expression [81507,81542]"/>
  <match src="call_argument [64678,64707]" dest="call_argument [61990,62019]"/>
  <match src="call_argument [48818,48872]" dest="call_argument [45698,45752]"/>
  <match src="call_expression [88577,88628]" dest="call_expression [86602,86653]"/>
  <match src="return: return [80888,80894]" dest="return: return [78686,78692]"/>
  <match src="(: ( [103203,103204]" dest="(: ( [101666,101667]"/>
  <match src="(: ( [111111,111112]" dest="(: ( [110489,110490]"/>
  <match src="call_argument [95967,95974]" dest="call_argument [94201,94208]"/>
  <match src="contract_body [1176,1247]" dest="contract_body [1214,1287]"/>
  <match src="{: { [13105,13106]" dest="{: { [14091,14092]"/>
  <match src="calldatasize: calldatasize [53145,53157]" dest="calldatasize: calldatasize [50130,50142]"/>
  <match src="primitive_type [67540,67547]" dest="primitive_type [64942,64949]"/>
  <match src="identifier: map [82367,82370]" dest="identifier: map [80214,80217]"/>
  <match src="type_name [76133,76140]" dest="type_name [73801,73808]"/>
  <match src="): ) [97525,97526]" dest="): ) [95809,95810]"/>
  <match src="parameter [106986,107002]" dest="parameter [104831,104847]"/>
  <match src="return_statement [89045,89123]" dest="return_statement [87086,87164]"/>
  <match src="): ) [100307,100308]" dest="): ) [98674,98675]"/>
  <match src="variable_declaration_statement [43203,43224]" dest="variable_declaration_statement [39937,39958]"/>
  <match src="identifier: _token [110805,110811]" dest="identifier: _token [109302,109308]"/>
  <match src="[: [ [16949,16950]" dest="[: [ [17145,17146]"/>
  <match src="internal: internal [2471,2479]" dest="internal: internal [2549,2557]"/>
  <match src="pragma_directive [43669,43692]" dest="pragma_directive [40423,40446]"/>
  <match src="member_expression [46854,46887]" dest="member_expression [43692,43725]"/>
  <match src="type_name [78598,78605]" dest="type_name [76345,76352]"/>
  <match src="external: external [109105,109113]" dest="external: external [106964,106972]"/>
  <match src="address: address [94394,94401]" dest="address: address [92587,92594]"/>
  <match src="primitive_type [33524,33531]" dest="primitive_type [29794,29801]"/>
  <match src="interface: interface [60362,60371]" dest="interface: interface [57544,57553]"/>
  <match src="): ) [98412,98413]" dest="): ) [96726,96727]"/>
  <match src="identifier: data [46195,46199]" dest="identifier: data [43021,43025]"/>
  <match src="identifier: _tokenId [59147,59155]" dest="identifier: _tokenId [56289,56297]"/>
  <match src="bool: bool [74158,74162]" dest="bool: bool [71757,71761]"/>
  <match src="identifier: status [45593,45599]" dest="identifier: status [42408,42414]"/>
  <match src="state_mutability [90896,90900]" dest="state_mutability [88993,88997]"/>
  <match src="): ) [25641,25642]" dest="): ) [22679,22680]"/>
  <match src="returns: returns [6435,6442]" dest="returns: returns [7260,7267]"/>
  <match src="(: ( [24675,24676]" dest="(: ( [23117,23118]"/>
  <match src="(: ( [76021,76022]" dest="(: ( [73683,73684]"/>
  <match src="(: ( [109203,109204]" dest="(: ( [107138,107139]"/>
  <match src="call_argument [45663,45692]" dest="call_argument [42478,42507]"/>
  <match src="): ) [100097,100098]" dest="): ) [98457,98458]"/>
  <match src="}: } [50237,50238]" dest="}: } [47161,47162]"/>
  <match src="primitive_type [81067,81071]" dest="primitive_type [78872,78876]"/>
  <match src="identifier: messageToken [2438,2450]" dest="identifier: messageToken [2516,2528]"/>
  <match src="return: return [11897,11903]" dest="return: return [12860,12866]"/>
  <match src="(: ( [57564,57565]" dest="(: ( [54665,54666]"/>
  <match src="member_expression [81291,81310]" dest="member_expression [79104,79123]"/>
  <match src="||: || [5212,5214]" dest="||: || [5383,5385]"/>
  <match src="visibility [49245,49253]" dest="visibility [46142,46150]"/>
  <match src="assignment_expression [79053,79092]" dest="assignment_expression [76808,76847]"/>
  <match src=".: . [57423,57424]" dest=".: . [54522,54523]"/>
  <match src="external: external [49620,49628]" dest="external: external [46524,46532]"/>
  <match src="external: external [37024,37032]" dest="external: external [33388,33396]"/>
  <match src="type_name [111574,111581]" dest="type_name [110889,110896]"/>
  <match src="parameter [81032,81043]" dest="parameter [78837,78848]"/>
  <match src="parameter [3510,3528]" dest="parameter [3614,3632]"/>
  <match src="): ) [6992,6993]" dest="): ) [7831,7832]"/>
  <match src="identifier: _owner [56397,56403]" dest="identifier: _owner [53468,53474]"/>
  <match src="type_name [33201,33208]" dest="type_name [29458,29465]"/>
  <match src="returns: returns [65054,65061]" dest="returns: returns [62381,62388]"/>
  <match src="(: ( [94999,95000]" dest="(: ( [93205,93206]"/>
  <match src=",: , [59012,59013]" dest=",: , [56150,56151]"/>
  <match src="(: ( [12737,12738]" dest="(: ( [13715,13716]"/>
  <match src="primitive_type [75746,75750]" dest="primitive_type [73400,73404]"/>
  <match src="identifier: returnData [5136,5146]" dest="identifier: returnData [5307,5317]"/>
  <match src="&quot;: &quot; [63572,63573]" dest="&quot;: &quot; [60848,60849]"/>
  <match src="type_name [100124,100128]" dest="type_name [98485,98489]"/>
  <match src="type_cast_expression [116374,116387]" dest="type_cast_expression [115001,115014]"/>
  <match src="): ) [12887,12888]" dest="): ) [13868,13869]"/>
  <match src="primitive_type [56329,56335]" dest="primitive_type [53398,53404]"/>
  <match src="parameter [92471,92487]" dest="parameter [90617,90633]"/>
  <match src="interface: interface [61325,61334]" dest="interface: interface [58537,58546]"/>
  <match src="function_body [72961,73003]" dest="function_body [70519,70563]"/>
  <match src=",: , [104402,104403]" dest=",: , [102916,102917]"/>
  <match src="identifier: _nativeToken [48634,48646]" dest="identifier: _nativeToken [45512,45524]"/>
  <match src="type_name [96791,96798]" dest="type_name [95049,95056]"/>
  <match src="address: address [12405,12412]" dest="address: address [13378,13385]"/>
  <match src="identifier: _mediatorContract [17279,17296]" dest="identifier: _mediatorContract [17483,17500]"/>
  <match src="call_argument [91603,91615]" dest="call_argument [89720,89732]"/>
  <match src="call_argument [112498,112506]" dest="call_argument [112110,112118]"/>
  <match src="==: == [111980,111982]" dest="==: == [110136,110138]"/>
  <match src="&quot;: &quot; [2575,2576]" dest="&quot;: &quot; [2654,2655]"/>
  <match src="returns: returns [11312,11319]" dest="returns: returns [12259,12266]"/>
  <match src="variable_declaration_statement [12849,12928]" dest="variable_declaration_statement [13830,13909]"/>
  <match src="comment: /**      * @dev Transfers `tokenId` token from `from` to `to`.      *      * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.      *      * Requirements:      *      * - `from` cannot be the zero address.      * - `to` cannot be the zero address.      * - `tokenId` token must be owned by `from`.      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.      *      * Emits a {Transfer} event.      */ [30615,31119]" dest="comment: /**      * @dev Transfers `tokenId` token from `from` to `to`.      *      * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.      *      * Requirements:      *      * - `from` cannot be the zero address.      * - `to` cannot be the zero address.      * - `tokenId` token must be owned by `from`.      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.      *      * Emits a {Transfer} event.      */ [26800,27317]"/>
  <match src="function_body [90928,91066]" dest="function_body [89025,89166]"/>
  <match src="call_expression [38461,38477]" dest="call_expression [34855,34871]"/>
  <match src="]: ] [16965,16966]" dest="]: ] [17161,17162]"/>
  <match src="parameter [116219,116235]" dest="parameter [114842,114858]"/>
  <match src="primitive_type [112225,112230]" dest="primitive_type [111820,111825]"/>
  <match src="identifier: tokenId [97024,97031]" dest="identifier: tokenId [95286,95293]"/>
  <match src="(: ( [47672,47673]" dest="(: ( [44532,44533]"/>
  <match src="yul_evm_builtin [53840,53854]" dest="yul_evm_builtin [50839,50853]"/>
  <match src="comment: /*                 delegatecall params explained:                 gas: the amount of gas to provide for the call. `gas` is an Opcode that gives                     us the amount of gas still available to execution                  _impl: address of the contract to delegate to                  ptr: to pass copied data                  calldatasize: loads the size of `bytes memory data`, same as msg.data.length                  0, 0: These are for the `out` and `outsize` params. Because the output could be dynamic,                         these are set to 0, 0 so the output data will not be written to memory. The output                         data will be read using `returndatasize` and `returdatacopy` instead.                  result: This will be 0 if the call fails and 1 if it succeeds             */ [52273,53086]" dest="comment: /*                 delegatecall params explained:                 gas: the amount of gas to provide for the call. `gas` is an Opcode that gives                     us the amount of gas still available to execution                  _impl: address of the contract to delegate to                  ptr: to pass copied data                  calldatasize: loads the size of `bytes memory data`, same as msg.data.length                  0, 0: These are for the `out` and `outsize` params. Because the output could be dynamic,                         these are set to 0, 0 so the output data will not be written to memory. The output                         data will be read using `returndatasize` and `returdatacopy` instead.                  result: This will be 0 if the call fails and 1 if it succeeds             */ [49241,50070]"/>
  <match src="call_argument [110771,110775]" dest="call_argument [109266,109270]"/>
  <match src=",: , [104487,104488]" dest=",: , [103005,103006]"/>
  <match src=",: , [37503,37504]" dest=",: , [33878,33879]"/>
  <match src="call_argument [96945,96975]" dest="call_argument [95205,95235]"/>
  <match src="comment: /*      * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7      */ [62277,62355]" dest="comment: /*      * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7      */ [59516,59596]"/>
  <match src="[: [ [99102,99103]" dest="[: [ [97440,97441]"/>
  <match src="call_argument [100739,100746]" dest="call_argument [99118,99125]"/>
  <match src=",: , [113136,113137]" dest=",: , [111291,111292]"/>
  <match src="type_name [86123,86130]" dest="type_name [84087,84094]"/>
  <match src="type_name [70554,70561]" dest="type_name [68050,68057]"/>
  <match src="view: view [91182,91186]" dest="view: view [89287,89291]"/>
  <match src="identifier: _token [42494,42500]" dest="identifier: _token [39123,39129]"/>
  <match src="address: address [101380,101387]" dest="address: address [99777,99784]"/>
  <match src="function: function [79400,79408]" dest="function: function [77168,77176]"/>
  <match src="): ) [39169,39170]" dest="): ) [35579,35580]"/>
  <match src="call_argument [48254,48308]" dest="call_argument [45124,45178]"/>
  <match src="identifier: key [85015,85018]" dest="identifier: key [82937,82940]"/>
  <match src="string: string [45025,45031]" dest="string: string [41827,41833]"/>
  <match src="primitive_type [107222,107228]" dest="primitive_type [105073,105079]"/>
  <match src="identifier: _token [116470,116476]" dest="identifier: _token [115099,115105]"/>
  <match src="returns: returns [45553,45560]" dest="returns: returns [42367,42374]"/>
  <match src="bytes: bytes [12373,12378]" dest="bytes: bytes [13345,13350]"/>
  <match src="): ) [9753,9754]" dest="): ) [10664,10665]"/>
  <match src="primitive_type [6509,6516]" dest="primitive_type [7336,7343]"/>
  <match src="function_body [59074,59173]" dest="function_body [56215,56316]"/>
  <match src="function_body [74164,74232]" dest="function_body [71763,71833]"/>
  <match src="): ) [109765,109766]" dest="): ) [107711,107712]"/>
  <match src="comment: /**  * @title TokenImageStorage  * @dev Storage functionality for working with ERC721 image contract.  */ [49087,49192]" dest="comment: /**  * @title TokenImageStorage  * @dev Storage functionality for working with ERC721 image contract.  */ [45979,46087]"/>
  <match src="comment: /**      * @dev Tells if mediator owns the given token. More strict than regular token.ownerOf() check,      * since does not take into account forced tokens.      * @param _token address of token contract.      * @param _tokenId id of the new owned token.      * @return true, if given token is already accounted in the mediator balance.      */ [58160,58506]" dest="comment: /**      * @dev Tells if mediator owns the given token. More strict than regular token.ownerOf() check,      * since does not take into account forced tokens.      * @param _token address of token contract.      * @param _tokenId id of the new owned token.      * @return true, if given token is already accounted in the mediator balance.      */ [55280,55632]"/>
  <match src="call_argument [98411,98412]" dest="call_argument [96725,96726]"/>
  <match src="state_mutability [89547,89551]" dest="state_mutability [87608,87612]"/>
  <match src="identifier: onlyMediator [108434,108446]" dest="identifier: onlyMediator [106275,106287]"/>
  <match src="internal: internal [94457,94465]" dest="internal: internal [92650,92658]"/>
  <match src="identifier: require [98389,98396]" dest="identifier: require [96703,96710]"/>
  <match src="{: { [34688,34689]" dest="{: { [30992,30993]"/>
  <match src="&quot;: &quot; [93401,93402]" dest="&quot;: &quot; [91572,91573]"/>
  <match src="identifier: value [73821,73826]" dest="identifier: value [71410,71415]"/>
  <match src="type_name [9739,9746]" dest="type_name [10650,10657]"/>
  <match src="view: view [54954,54958]" dest="view: view [51983,51987]"/>
  <match src="call_expression [90758,90788]" dest="call_expression [88849,88879]"/>
  <match src="assignment_expression [17243,17296]" dest="assignment_expression [17447,17500]"/>
  <match src="expression_statement [66241,66298]" dest="expression_statement [63608,63665]"/>
  <match src="expression_statement [117287,117328]" dest="expression_statement [115810,115851]"/>
  <match src="call_argument [109805,109817]" dest="call_argument [107752,107764]"/>
  <match src=",: , [53138,53139]" dest=",: , [50123,50124]"/>
  <match src="internal: internal [34636,34644]" dest="internal: internal [30939,30947]"/>
  <match src="): ) [107589,107590]" dest="): ) [105447,105448]"/>
  <match src="private: private [73380,73387]" dest="private: private [70952,70959]"/>
  <match src="primitive_type [61922,61927]" dest="primitive_type [59144,59149]"/>
  <match src="call_argument [91486,91497]" dest="call_argument [89601,89612]"/>
  <match src="parameter [114899,114913]" dest="parameter [113520,113534]"/>
  <match src="{: { [14397,14398]" dest="{: { [15257,15258]"/>
  <match src="member_expression [80580,80594]" dest="member_expression [78368,78382]"/>
  <match src="assembly_statement [34430,34493]" dest="assembly_statement [30722,30787]"/>
  <match src="string [48732,48750]" dest="string [45611,45629]"/>
  <match src="identifier: _data [39153,39158]" dest="identifier: _data [35563,35568]"/>
  <match src="yul_path [13387,13397]" dest="yul_path [14379,14389]"/>
  <match src="returns: returns [68169,68176]" dest="returns: returns [65589,65596]"/>
  <match src="identifier: tokenId [97725,97732]" dest="identifier: tokenId [96016,96023]"/>
  <match src="identifier: owner [95463,95468]" dest="identifier: owner [93683,93688]"/>
  <match src="primitive_type [38143,38150]" dest="primitive_type [34532,34539]"/>
  <match src="call_argument [59123,59137]" dest="call_argument [56265,56279]"/>
  <match src="identifier: _nativeToken [109865,109877]" dest="identifier: _nativeToken [108281,108293]"/>
  <match src="identifier: require [111652,111659]" dest="identifier: require [110984,110991]"/>
  <match src="call_expression [100509,100541]" dest="call_expression [98882,98914]"/>
  <match src="): ) [20825,20826]" dest="): ) [20378,20379]"/>
  <match src="memory: memory [67439,67445]" dest="memory: memory [64839,64845]"/>
  <match src="identifier: value [43433,43438]" dest="identifier: value [40175,40180]"/>
  <match src="view: view [106106,106110]" dest="view: view [103933,103937]"/>
  <match src="): ) [105759,105760]" dest="): ) [120211,120212]"/>
  <match src="call_argument [14992,15007]" dest="call_argument [15908,15923]"/>
  <match src="): ) [115665,115666]" dest="): ) [114272,114273]"/>
  <match src="parameter [83375,83379]" dest="parameter [81250,81254]"/>
  <match src=",: , [21340,21341]" dest=",: , [20907,20908]"/>
  <match src="call_argument [83116,83130]" dest="call_argument [80983,80997]"/>
  <match src="function: function [21101,21109]" dest="function: function [20662,20670]"/>
  <match src="call_argument [95045,95052]" dest="call_argument [93252,93259]"/>
  <match src="call_expression [116441,116504]" dest="call_expression [115070,115133]"/>
  <match src="else: else [79129,79133]" dest="else: else [76886,76890]"/>
  <match src="identifier: _from [39043,39048]" dest="identifier: _from [35451,35456]"/>
  <match src="): ) [14421,14422]" dest="): ) [15282,15283]"/>
  <match src="(: ( [97468,97469]" dest="(: ( [95750,95751]"/>
  <match src="{: { [999,1000]" dest="{: { [1028,1029]"/>
  <match src="visibility [50887,50895]" dest="visibility [47832,47840]"/>
  <match src="returns: returns [75737,75744]" dest="returns: returns [73391,73398]"/>
  <match src="}: } [98770,98771]" dest="}: } [97097,97098]"/>
  <match src=",: , [39357,39358]" dest=",: , [35774,35775]"/>
  <match src="view: view [76163,76167]" dest="view: view [73831,73835]"/>
  <match src="primitive_type [40764,40770]" dest="primitive_type [37236,37242]"/>
  <match src=",: , [46387,46388]" dest=",: , [43214,43215]"/>
  <match src=",: , [64676,64677]" dest=",: , [61988,61989]"/>
  <match src="identifier: _recordBridgeOperation [116991,117013]" dest="identifier: _recordBridgeOperation [115555,115577]"/>
  <match src="!=: != [8762,8764]" dest="!=: != [9654,9656]"/>
  <match src="expression_statement [72495,72522]" dest="expression_statement [70035,70062]"/>
  <match src="): ) [16271,16272]" dest="): ) [16754,16755]"/>
  <match src="block_statement [79644,80868]" dest="block_statement [77416,78665]"/>
  <match src="call_argument [45207,45221]" dest="call_argument [42012,42026]"/>
  <match src="identifier: data [110852,110856]" dest="identifier: data [110297,110301]"/>
  <match src="): ) [85909,85910]" dest="): ) [83867,83868]"/>
  <match src="bytes4: bytes4 [100493,100499]" dest="bytes4: bytes4 [98866,98872]"/>
  <match src="identifier: Address [109681,109688]" dest="identifier: Address [107626,107633]"/>
  <match src="expression_statement [56674,56691]" dest="expression_statement [53753,53770]"/>
  <match src="variable_declaration [20408,20421]" dest="variable_declaration [19963,19976]"/>
  <match src="identifier: failedMessageReceiver [6833,6854]" dest="identifier: failedMessageReceiver [7670,7691]"/>
  <match src="internal: internal [26861,26869]" dest="internal: internal [37978,37986]"/>
  <match src="address: address [7190,7197]" dest="address: address [8038,8045]"/>
  <match src="}: } [12991,12992]" dest="}: } [13975,13976]"/>
  <match src="(: ( [82151,82152]" dest="(: ( [79991,79992]"/>
  <match src="parameter [95000,95004]" dest="parameter [93206,93210]"/>
  <match src="(: ( [34633,34634]" dest="(: ( [30936,30937]"/>
  <match src="call_argument [73894,73908]" dest="call_argument [71484,71498]"/>
  <match src="memory: memory [12379,12385]" dest="memory: memory [13351,13357]"/>
  <match src="primitive_type [64616,64623]" dest="primitive_type [61926,61933]"/>
  <match src="function_definition [6583,6647]" dest="function_definition [7414,7478]"/>
  <match src="storage: storage [72917,72924]" dest="storage: storage [70475,70482]"/>
  <match src="identifier: target [11926,11932]" dest="identifier: target [12889,12895]"/>
  <match src="): ) [41711,41712]" dest="): ) [38367,38368]"/>
  <match src=",: , [68741,68742]" dest=",: , [66177,66178]"/>
  <match src="parameter [117075,117089]" dest="parameter [115617,115631]"/>
  <match src="(: ( [81264,81265]" dest="(: ( [79076,79077]"/>
  <match src="(: ( [90731,90732]" dest="(: ( [88821,88822]"/>
  <match src="): ) [7354,7355]" dest="): ) [8207,8208]"/>
  <match src="identifier: key [84385,84388]" dest="identifier: key [82289,82292]"/>
  <match src="call_argument [113266,113270]" dest="call_argument [109447,109451]"/>
  <match src="call_argument [108493,108499]" dest="call_argument [106335,106341]"/>
  <match src="comment: /**      * @dev Emitted when `tokenId` token is transferred from `from` to `to`.      */ [28873,28961]" dest="comment: /**      * @dev Emitted when `tokenId` token is transferred from `from` to `to`.      */ [25013,25103]"/>
  <match src="function_definition [25525,25724]" dest="function_definition [22560,22865]"/>
  <match src="(: ( [81225,81226]" dest="(: ( [79037,79038]"/>
  <match src="function_body [66852,66915]" dest="function_body [64236,64301]"/>
  <match src=",: , [106976,106977]" dest=",: , [104820,104821]"/>
  <match src="parameter [39707,39719]" dest="parameter [36141,36153]"/>
  <match src="primitive_type [114947,114954]" dest="primitive_type [113570,113577]"/>
  <match src="call_argument [68208,68209]" dest="call_argument [65629,65630]"/>
  <match src="type_cast_expression [6132,6142]" dest="type_cast_expression [6331,6341]"/>
  <match src="): ) [112847,112848]" dest="): ) [112315,112316]"/>
  <match src="=: = [5420,5421]" dest="=: = [5597,5598]"/>
  <match src="(: ( [31145,31146]" dest="(: ( [27344,27345]"/>
  <match src="return: return [89262,89268]" dest="return: return [87310,87316]"/>
  <match src="visibility [4210,4218]" dest="visibility [4338,4346]"/>
  <match src="member_expression [38655,38665]" dest="member_expression [35054,35064]"/>
  <match src="identifier: errorMessage [12664,12676]" dest="identifier: errorMessage [13641,13653]"/>
  <match src="contract: contract [59762,59770]" dest="contract: contract [56923,56931]"/>
  <match src=",: , [104376,104377]" dest=",: , [102889,102890]"/>
  <match src="primitive_type [7347,7354]" dest="primitive_type [8200,8207]"/>
  <match src="}: } [9984,9985]" dest="}: } [10899,10900]"/>
  <match src="): ) [68240,68241]" dest="): ) [65661,65662]"/>
  <match src="number_literal: 0 [106227,106228]" dest="number_literal: 0 [104055,104056]"/>
  <match src="}: } [59888,59889]" dest="}: } [57052,57053]"/>
  <match src="call_argument [107753,107761]" dest="call_argument [105577,105585]"/>
  <match src="primitive_type [253,260]" dest="primitive_type [262,269]"/>
  <match src="identifier: _burn [102914,102919]" dest="identifier: _burn [101368,101373]"/>
  <match src=",: , [10954,10955]" dest=",: , [11892,11893]"/>
  <match src="call_argument [105494,105509]" dest="call_argument [120059,120074]"/>
  <match src=",: , [48646,48647]" dest=",: , [45524,45525]"/>
  <match src="internal: internal [50120,50128]" dest="internal: internal [47040,47048]"/>
  <match src="identifier: _entries [79077,79085]" dest="identifier: _entries [76832,76840]"/>
  <match src="return_type_definition [29590,29615]" dest="return_type_definition [25748,25773]"/>
  <match src="comment: /**      * @dev Destroys `tokenId`.      * The approval is cleared when the token is burned.      *      * Requirements:      *      * - `tokenId` must exist.      *      * Emits a {Transfer} event.      */ [97175,97381]" dest="comment: /**      * @dev Destroys `tokenId`.      * The approval is cleared when the token is burned.      *      * Requirements:      *      * - `tokenId` must exist.      *      * Emits a {Transfer} event.      */ [95446,95661]"/>
  <match src="type_name [47289,47296]" dest="type_name [44142,44149]"/>
  <match src="binary_expression [68832,68838]" dest="binary_expression [66269,66275]"/>
  <match src="sstore: sstore [35504,35510]" dest="sstore: sstore [31821,31827]"/>
  <match src="yul_evm_builtin [52245,52257]" dest="yul_evm_builtin [49212,49224]"/>
  <match src="type_name [74566,74576]" dest="type_name [72179,72189]"/>
  <match src="): ) [115158,115159]" dest="): ) [113749,113750]"/>
  <match src="type_name [11805,11812]" dest="type_name [12767,12774]"/>
  <match src="returns: returns [61956,61963]" dest="returns: returns [59179,59186]"/>
  <match src="comment: /**      * @dev Retrieves the total spent amount for particular token during specific day.      * @param _token address of the token contract.      * @param _day day number for which spent amount if requested.      * @return amount of tokens sent through the bridge to the other side.      */ [22218,22510]" dest="comment: /**      * @dev Disabled bridging operations for the particular token.      * @param _token address of the token contract, or address(0) for configuring the global restriction.      * @param _disable true for disabling.      */ [21775,22006]"/>
  <match src="expression_statement [80462,80502]" dest="expression_statement [78248,78288]"/>
  <match src="]: ] [79069,79070]" dest="]: ] [76824,76825]"/>
  <match src="solidity: solidity [54886,54894]" dest="solidity: solidity [51912,51920]"/>
  <match src="yul_function_call [34461,34483]" dest="yul_function_call [30754,30776]"/>
  <match src="type_name [67410,67417]" dest="type_name [64810,64817]"/>
  <match src="call_argument [111119,111129]" dest="call_argument [110490,110500]"/>
  <match src="override: override [90714,90722]" dest="override: override [88804,88812]"/>
  <match src="(: ( [95523,95524]" dest="(: ( [93743,93744]"/>
  <match src="function_body [74399,74469]" dest="function_body [72005,72077]"/>
  <match src="user_defined_type [84587,84603]" dest="user_defined_type [82501,82517]"/>
  <match src="primitive_type [116219,116226]" dest="primitive_type [114842,114849]"/>
  <match src="primitive_type [21378,21385]" dest="primitive_type [20918,20925]"/>
  <match src="member_expression [57420,57462]" dest="member_expression [54519,54561]"/>
  <match src="member_expression [83406,83416]" dest="member_expression [81282,81292]"/>
  <match src="type_name [84307,84314]" dest="type_name [82210,82217]"/>
  <match src="identifier: _dailyLimit [26200,26211]" dest="identifier: _disable [22063,22071]"/>
  <match src=",: , [66874,66875]" dest=",: , [64259,64260]"/>
  <match src="(: ( [53125,53126]" dest="(: ( [50110,50111]"/>
  <match src="primitive_type [100629,100636]" dest="primitive_type [99006,99013]"/>
  <match src="number_literal: 0 [97869,97870]" dest="number_literal: 0 [96167,96168]"/>
  <match src="}: } [82655,82656]" dest="}: } [80506,80507]"/>
  <match src="identifier: executeActionOnFixedTokens [21262,21288]" dest="identifier: executeActionOnFixedTokens [20827,20853]"/>
  <match src="identifier: map [84612,84615]" dest="identifier: map [82526,82529]"/>
  <match src="internal: internal [74590,74598]" dest="internal: internal [72203,72211]"/>
  <match src=",: , [27221,27222]" dest=",: , [39129,39130]"/>
  <match src="[: [ [45097,45098]" dest="[: [ [41901,41902]"/>
  <match src="&quot;: &quot; [68239,68240]" dest="&quot;: &quot; [65660,65661]"/>
  <match src="return_type_definition [39801,39817]" dest="return_type_definition [36239,36255]"/>
  <match src="call_argument [45790,45802]" dest="call_argument [42606,42618]"/>
  <match src="identifier: _tokenImage [56621,56632]" dest="identifier: _tokenImage [53697,53708]"/>
  <match src="}: } [40823,40824]" dest="}: } [37299,37300]"/>
  <match src="parameter [88713,88726]" dest="parameter [86744,86757]"/>
  <match src="comment: // Storage of set values [70125,70149]" dest="comment: // Storage of set values [67607,67631]"/>
  <match src="external: external [54945,54953]" dest="external: external [51974,51982]"/>
  <match src="parameter [19311,19329]" dest="parameter [18952,18970]"/>
  <match src="comment: /**  * @title ERC721 Non-Fungible Token Standard basic implementation  * @dev see https://eips.ethereum.org/EIPS/eip-721  */ [85142,85266]" dest="comment: /**  * @title ERC721 Non-Fungible Token Standard basic implementation  * @dev see https://eips.ethereum.org/EIPS/eip-721  */ [83084,83211]"/>
  <match src="]: ] [2590,2591]" dest="]: ] [2669,2670]"/>
  <match src="call_argument [116382,116386]" dest="call_argument [115009,115013]"/>
  <match src="call_argument [20592,20602]" dest="call_argument [20138,20148]"/>
  <match src="==: == [5174,5176]" dest="==: == [5345,5347]"/>
  <match src="pragma_directive [57953,57975]" dest="pragma_directive [55065,55087]"/>
  <match src="pragma: pragma [7481,7487]" dest="pragma: pragma [8342,8348]"/>
  <match src="): ) [82225,82226]" dest="): ) [80066,80067]"/>
  <match src="parameter [31160,31170]" dest="parameter [27359,27369]"/>
  <match src="visibility [67460,67468]" dest="visibility [64860,64868]"/>
  <match src="primitive_type [74438,74445]" dest="primitive_type [72045,72052]"/>
  <match src="override: override [41006,41014]" dest="override: override [37488,37496]"/>
  <match src="identifier: encodePacked [42567,42579]" dest="identifier: encodePacked [39197,39209]"/>
  <match src="function: function [33397,33405]" dest="function: function [29663,29671]"/>
  <match src="user_defined_type [85996,86026]" dest="user_defined_type [83957,83987]"/>
  <match src="identifier: _mediatorContract [15343,15360]" dest="identifier: _mediatorContract [16267,16284]"/>
  <match src="identifier: IERC721 [110726,110733]" dest="identifier: IERC721 [109221,109228]"/>
  <match src="comment: // File: @openzeppelin/contracts/utils/Strings.sol [42652,42702]" dest="comment: // File: @openzeppelin/contracts/utils/Strings.sol [39367,39417]"/>
  <match src="call_argument [99035,99081]" dest="call_argument [97372,97418]"/>
  <match src="primitive_type [68732,68739]" dest="primitive_type [66168,66175]"/>
  <match src="delete: delete [97707,97713]" dest="delete: delete [95998,96004]"/>
  <match src="): ) [46754,46755]" dest="): ) [43590,43591]"/>
  <match src="number_literal: 0 [13102,13103]" dest="number_literal: 0 [14088,14089]"/>
  <match src="identifier: _values [72414,72421]" dest="identifier: _values [69951,69958]"/>
  <match src="visibility [116242,116250]" dest="visibility [114866,114874]"/>
  <match src="call_expression [110668,110708]" dest="call_expression [109162,109202]"/>
  <match src="(: ( [105715,105716]" dest="(: ( [120166,120167]"/>
  <match src="identifier: relayToken [37423,37433]" dest="identifier: relayToken [33797,33807]"/>
  <match src="identifier: tokenId [97065,97072]" dest="identifier: tokenId [95329,95336]"/>
  <match src="call_argument [10950,10954]" dest="call_argument [11888,11892]"/>
  <match src="identifier: interfaceId [63049,63060]" dest="identifier: interfaceId [60310,60321]"/>
  <match src="function: function [6335,6343]" dest="function: function [7158,7166]"/>
  <match src="parameter [61028,61041]" dest="parameter [58227,58240]"/>
  <match src="^:  ^ [68960,68962]" dest="^:  ^ [66405,66407]"/>
  <match src="(: ( [64669,64670]" dest="(: ( [61981,61982]"/>
  <match src="parameter [39810,39816]" dest="parameter [36248,36254]"/>
  <match src="override: override [91187,91195]" dest="override: override [89292,89300]"/>
  <match src="identifier: sub [65014,65017]" dest="identifier: sub [62341,62344]"/>
  <match src="identifier: encodeWithSelector [112873,112891]" dest="identifier: encodeWithSelector [112338,112356]"/>
  <match src="public: public [972,978]" dest="public: public [1001,1007]"/>
  <match src="): ) [53855,53856]" dest="): ) [50854,50855]"/>
  <match src="string: string [88307,88313]" dest="string: string [86325,86331]"/>
  <match src="bool: bool [83054,83058]" dest="bool: bool [80920,80924]"/>
  <match src="modifier_invocation [20232,20244]" dest="modifier_invocation [19782,19794]"/>
  <match src="storage: storage [76141,76148]" dest="storage: storage [73809,73816]"/>
  <match src="call_argument [117514,117520]" dest="call_argument [115940,115946]"/>
  <match src="inheritance_specifier [104290,104303]" dest="inheritance_specifier [102800,102813]"/>
  <match src="identifier: recipient [20611,20620]" dest="identifier: recipient [20157,20166]"/>
  <match src="=: = [71296,71297]" dest="=: = [68812,68813]"/>
  <match src="type_name [74158,74162]" dest="type_name [71757,71761]"/>
  <match src="type_cast_expression [107156,107166]" dest="type_cast_expression [105005,105015]"/>
  <match src=",: , [74123,74124]" dest=",: , [71722,71723]"/>
  <match src="identifier: _receiver [36982,36991]" dest="identifier: _receiver [33344,33353]"/>
  <match src="identifier: _tokenId [111609,111617]" dest="identifier: _tokenId [110925,110933]"/>
  <match src="call_expression [6112,6143]" dest="call_expression [6311,6342]"/>
  <match src="type_name [109621,109628]" dest="type_name [107565,107572]"/>
  <match src="call_expression [91452,91468]" dest="call_expression [89566,89582]"/>
  <match src="identifier: abi [19687,19690]" dest="identifier: abi [19280,19283]"/>
  <match src="type_cast_expression [112199,112210]" dest="type_cast_expression [111794,111805]"/>
  <match src="): ) [93079,93080]" dest="): ) [91242,91243]"/>
  <match src="): ) [111729,111730]" dest="): ) [111061,111062]"/>
  <match src="function_body [59855,59889]" dest="function_body [57017,57053]"/>
  <match src="return_statement [84672,84728]" dest="return_statement [82587,82643]"/>
  <match src="return_statement [12488,12553]" dest="return_statement [13462,13527]"/>
  <match src="address: address [55657,55664]" dest="address: address [52709,52716]"/>
  <match src="comment: /**  * @title NFTMediatorBalanceStorage  * @dev Functionality for storing expected mediator balance for native tokens.  */ [57978,58100]" dest="comment: /**  * @title NFTMediatorBalanceStorage  * @dev Functionality for storing expected mediator balance for native tokens.  */ [55093,55218]"/>
  <match src="(: ( [95245,95246]" dest="(: ( [93462,93463]"/>
  <match src="type_name [85545,85552]" dest="type_name [83496,83503]"/>
  <match src="solidity_pragma_token [18689,18703]" dest="solidity_pragma_token [18314,18328]"/>
  <match src=",: , [52240,52241]" dest=",: , [49207,49208]"/>
  <match src="private: private [86027,86034]" dest="private: private [83988,83995]"/>
  <match src="state_mutability [28660,28664]" dest="state_mutability [24787,24791]"/>
  <match src="=: = [85772,85773]" dest="=: = [83727,83728]"/>
  <match src="}: } [103976,103977]" dest="}: } [102461,102462]"/>
  <match src="): ) [108499,108500]" dest="): ) [106341,106342]"/>
  <match src="parameter [2818,2836]" dest="parameter [2905,2923]"/>
  <match src="comment: // bytes32 values. [69815,69833]" dest="comment: // bytes32 values. [67289,67307]"/>
  <match src="[: [ [97767,97768]" dest="[: [ [96061,96062]"/>
  <match src="): ) [54702,54703]" dest="): ) [51717,51718]"/>
  <match src="{: { [39171,39172]" dest="{: { [35581,35582]"/>
  <match src="call_expression [46303,46329]" dest="call_expression [43130,43156]"/>
  <match src=",: , [84615,84616]" dest=",: , [82529,82530]"/>
  <match src="): ) [105427,105428]" dest="): ) [119989,119990]"/>
  <match src="memory: memory [89577,89583]" dest="memory: memory [87638,87644]"/>
  <match src="identifier: lastvalue [72186,72195]" dest="identifier: lastvalue [69718,69727]"/>
  <match src="parameter [50677,50684]" dest="parameter [47616,47623]"/>
  <match src="contract_declaration [651,1049]" dest="contract_declaration [673,1081]"/>
  <match src="return_type_definition [16011,16025]" dest="return_type_definition [16486,16500]"/>
  <match src="primitive_type [71161,71165]" dest="primitive_type [68675,68679]"/>
  <match src="return_statement [11345,11406]" dest="return_statement [12293,12354]"/>
  <match src="=: = [80490,80491]" dest="=: = [78276,78277]"/>
  <match src="array_access [5698,5719]" dest="array_access [5882,5903]"/>
  <match src="call_argument [107809,107818]" dest="call_argument [105634,105643]"/>
  <match src="(: ( [100252,100253]" dest="(: ( [98618,98619]"/>
  <match src="{: { [39112,39113]" dest="{: { [35520,35521]"/>
  <match src="(: ( [13339,13340]" dest="(: ( [14330,14331]"/>
  <match src="call_expression [3914,3962]" dest="call_expression [4027,4075]"/>
  <match src="returns: returns [118704,118711]" dest="returns: returns [116958,116965]"/>
  <match src="(: ( [109680,109681]" dest="(: ( [107625,107626]"/>
  <match src="[: [ [81877,81878]" dest="[: [ [79706,79707]"/>
  <match src="identifier: keccak256 [3904,3913]" dest="identifier: keccak256 [4017,4026]"/>
  <match src="user_defined_type [104290,104303]" dest="user_defined_type [102800,102813]"/>
  <match src="}: } [91298,91299]" dest="}: } [89406,89407]"/>
  <match src=".: . [97813,97814]" dest=".: . [96109,96110]"/>
  <match src="identifier: _token [59139,59145]" dest="identifier: _token [56281,56287]"/>
  <match src="identifier: _holderTokens [98651,98664]" dest="identifier: _holderTokens [96973,96986]"/>
  <match src="identifier: _beforeTokenTransfer [98465,98485]" dest="identifier: _beforeTokenTransfer [96781,96801]"/>
  <match src="function_body [88330,88635]" dest="function_body [86348,86661]"/>
  <match src="call_expression [82178,82226]" dest="call_expression [80019,80067]"/>
  <match src="function_definition [7148,7293]" dest="function_definition [7995,8144]"/>
  <match src="identifier: _messageId [2459,2469]" dest="identifier: _messageId [2537,2547]"/>
  <match src="&quot;: &quot; [96945,96946]" dest="&quot;: &quot; [95205,95206]"/>
  <match src="==: == [102038,102040]" dest="==: == [100464,100466]"/>
  <match src="=&gt;: =&gt; [55840,55842]" dest="=&gt;: =&gt; [52896,52898]"/>
  <match src="function_definition [74085,74232]" dest="function_definition [71684,71833]"/>
  <match src="address: address [109030,109037]" dest="address: address [106886,106893]"/>
  <match src="identifier: nativeTokenAddress [106189,106207]" dest="identifier: nativeTokenAddress [104017,104035]"/>
  <match src="address: address [61891,61898]" dest="address: address [59113,59120]"/>
  <match src="identifier: onlyOwner [5951,5960]" dest="identifier: onlyOwner [6142,6151]"/>
  <match src="emit: emit [97840,97844]" dest="emit: emit [96138,96142]"/>
  <match src="identifier: decode [46929,46935]" dest="identifier: decode [43768,43774]"/>
  <match src="call_argument [100717,100733]" dest="call_argument [99096,99112]"/>
  <match src="identifier: _ERC721_RECEIVED [100569,100585]" dest="identifier: _ERC721_RECEIVED [98943,98959]"/>
  <match src="parameter [93052,93062]" dest="parameter [91215,91225]"/>
  <match src="comment: /**  * @title BridgedTokensRegistry  * @dev Functionality for keeping track of registered bridged token pairs.  */ [47094,47208]" dest="comment: /**  * @title BridgedTokensRegistry  * @dev Functionality for keeping track of registered bridged token pairs.  */ [43942,44059]"/>
  <match src="comment: // Mapping from holder address to their (enumerable) set of owned tokens [85791,85863]" dest="comment: // Mapping from holder address to their (enumerable) set of owned tokens [83748,83820]"/>
  <match src="function: function [74997,75005]" dest="function: function [72624,72632]"/>
  <match src="(: ( [39667,39668]" dest="(: ( [36099,36100]"/>
  <match src="identifier: _messageId [3137,3147]" dest="identifier: _messageId [3232,3242]"/>
  <match src="): ) [30598,30599]" dest="): ) [26781,26782]"/>
  <match src="return_type_definition [7406,7423]" dest="return_type_definition [8261,8278]"/>
  <match src="identifier: _baseURI [99425,99433]" dest="identifier: _baseURI [97772,97780]"/>
  <match src="): ) [7264,7265]" dest="): ) [8115,8116]"/>
  <match src="identifier: encodePacked [46360,46372]" dest="identifier: encodePacked [43187,43199]"/>
  <match src="state_mutability [3158,3162]" dest="state_mutability [3253,3257]"/>
  <match src="primitive_type [73894,73901]" dest="primitive_type [71484,71491]"/>
  <match src="internal: internal [117147,117155]" dest="internal: internal [115692,115700]"/>
  <match src="expression_statement [110718,110778]" dest="expression_statement [109213,109273]"/>
  <match src="string [23551,23563]" dest="string [38426,38443]"/>
  <match src="member_expression [76670,76680]" dest="member_expression [74353,74363]"/>
  <match src="function_body [37476,37533]" dest="function_body [33850,33909]"/>
  <match src="): ) [33237,33238]" dest="): ) [29494,29495]"/>
  <match src="): ) [1211,1212]" dest="): ) [1250,1251]"/>
  <match src="state_mutability [5658,5662]" dest="state_mutability [5841,5845]"/>
  <match src="identifier: uintStorage [42541,42552]" dest="identifier: uintStorage [39171,39182]"/>
  <match src="assembly: assembly [34679,34687]" dest="assembly: assembly [30983,30991]"/>
  <match src="identifier: _requestGasLimit [105716,105732]" dest="identifier: _requestGasLimit [120167,120183]"/>
  <match src="uint256: uint256 [60776,60783]" dest="uint256: uint256 [57969,57976]"/>
  <match src="solidity_pragma_token [42712,42727]" dest="solidity_pragma_token [39430,39445]"/>
  <match src="(: ( [111023,111024]" dest="(: ( [120808,120809]"/>
  <match src="): ) [95342,95343]" dest="): ) [93560,93561]"/>
  <match src="==: == [26257,26259]" dest="==: == [22118,22120]"/>
  <match src="parameter [15255,15280]" dest="parameter [16178,16203]"/>
  <match src="}: } [109934,109935]" dest="}: } [108316,108317]"/>
  <match src="string: string [86355,86361]" dest="string: string [84328,84334]"/>
  <match src="primitive_type [83054,83058]" dest="primitive_type [80920,80924]"/>
  <match src="identifier: _transfer [94484,94493]" dest="identifier: _transfer [92678,92687]"/>
  <match src="identifier: encodePacked [45112,45124]" dest="identifier: encodePacked [41916,41928]"/>
  <match src="member_expression [112797,112838]" dest="member_expression [112265,112306]"/>
  <match src="parameter [92119,92132]" dest="parameter [90255,90268]"/>
  <match src="identifier: tokenId [91827,91834]" dest="identifier: tokenId [89954,89961]"/>
  <match src="(: ( [6418,6419]" dest="(: ( [7243,7244]"/>
  <match src="comment: /**      * @dev Throws if called by any account other than the owner.      */ [4580,4657]" dest="comment: /**      * @dev Throws if called by any account other than the owner.      */ [4717,4796]"/>
  <match src="address: address [33411,33418]" dest="address: address [29677,29684]"/>
  <match src="member_expression [72410,72425]" dest="member_expression [69947,69962]"/>
  <match src="{: { [84957,84958]" dest="{: { [82878,82879]"/>
  <match src="return: return [48222,48228]" dest="return: return [45092,45098]"/>
  <match src="type_name [61965,61971]" dest="type_name [59188,59194]"/>
  <match src="identifier: _operatorApprovals [92241,92259]" dest="identifier: _operatorApprovals [90380,90398]"/>
  <match src="mapping: mapping [354,361]" dest="mapping: mapping [365,372]"/>
  <match src="call_expression [23524,23573]" dest="call_expression [38399,38453]"/>
  <match src=",: , [108588,108589]" dest=",: , [106433,106434]"/>
  <match src="}: } [88904,88905]" dest="}: } [86939,86940]"/>
  <match src="identifier: _messageId [6863,6873]" dest="identifier: _messageId [7700,7710]"/>
  <match src="identifier: returndata [13387,13397]" dest="identifier: returndata [14379,14389]"/>
  <match src="identifier: _get [84990,84994]" dest="identifier: _get [82912,82916]"/>
  <match src="{: { [12902,12903]" dest="{: { [13883,13884]"/>
  <match src="returns: returns [67474,67481]" dest="returns: returns [64874,64881]"/>
  <match src="call_argument [107576,107589]" dest="call_argument [105434,105447]"/>
  <match src="}: } [95059,95060]" dest="}: } [93267,93268]"/>
  <match src="function: function [61006,61014]" dest="function: function [58205,58213]"/>
  <match src="uint256: uint256 [103852,103859]" dest="uint256: uint256 [102334,102341]"/>
  <match src="&gt;: &gt; [115662,115663]" dest="&gt;: &gt; [114269,114270]"/>
  <match src="address: address [110763,110770]" dest="address: address [109258,109265]"/>
  <match src="return_type_definition [59937,59959]" dest="return_type_definition [57103,57125]"/>
  <match src="(: ( [5187,5188]" dest="(: ( [5358,5359]"/>
  <match src="): ) [94511,94512]" dest="): ) [92705,92706]"/>
  <match src="constant: constant [14129,14137]" dest="constant: constant [117535,117543]"/>
  <match src="view: view [42073,42077]" dest="view: view [116560,116564]"/>
  <match src="member_expression [84700,84710]" dest="member_expression [82615,82625]"/>
  <match src="): ) [68812,68813]" dest="): ) [66248,66249]"/>
  <match src="event_paramater [29391,29412]" dest="event_paramater [25544,25565]"/>
  <match src="string: string [107222,107228]" dest="string: string [105073,105079]"/>
  <match src="type_name [73348,73351]" dest="type_name [70920,70923]"/>
  <match src="return_type_definition [65054,65071]" dest="return_type_definition [62381,62398]"/>
  <match src="identifier: map [82112,82115]" dest="identifier: map [79952,79955]"/>
  <match src="assignment_expression [70802,70842]" dest="assignment_expression [68303,68343]"/>
  <match src="/=: /= [43316,43318]" dest="/=: /= [40054,40056]"/>
  <match src="primitive_type [91819,91826]" dest="primitive_type [89946,89953]"/>
  <match src="uint256: uint256 [84884,84891]" dest="uint256: uint256 [82805,82812]"/>
  <match src="{: { [116276,116277]" dest="{: { [114901,114902]"/>
  <match src="): ) [112105,112106]" dest="): ) [111768,111769]"/>
  <match src="revert_statement [13472,13493]" dest="revert_statement [14467,14488]"/>
  <match src="call_argument [76682,76687]" dest="call_argument [74365,74370]"/>
  <match src="call_argument [3611,3629]" dest="call_argument [3716,3734]"/>
  <match src=",: , [30569,30570]" dest=",: , [26752,26753]"/>
  <match src="yul_path [57038,57042]" dest="yul_path [54127,54131]"/>
  <match src="call_expression [24748,24779]" dest="call_expression [23371,23405]"/>
  <match src="identifier: _setTokenImage [49649,49663]" dest="identifier: _setTokenImage [46554,46568]"/>
  <match src="visibility [48671,48679]" dest="visibility [45549,45557]"/>
  <match src="type_name [84278,84285]" dest="type_name [82180,82187]"/>
  <match src="): ) [73378,73379]" dest="): ) [70950,70951]"/>
  <match src="identifier: _token [115189,115195]" dest="identifier: _token [113782,113788]"/>
  <match src="identifier: _setTokenURI [107772,107784]" dest="identifier: _setTokenURI [105597,105609]"/>
  <match src="call_argument [92927,92929]" dest="call_argument [91084,91086]"/>
  <match src="call_argument [58666,58672]" dest="call_argument [55794,55800]"/>
  <match src="member_expression [118752,118768]" dest="member_expression [117023,117039]"/>
  <match src="identifier: this [111991,111995]" dest="identifier: this [110147,110151]"/>
  <match src="member_expression [102215,102257]" dest="member_expression [100649,100691]"/>
  <match src="call_argument [97101,97108]" dest="call_argument [95367,95374]"/>
  <match src="(: ( [39258,39259]" dest="(: ( [35670,35671]"/>
  <match src="identifier: _tokenId [117132,117140]" dest="identifier: _tokenId [115676,115684]"/>
  <match src="primitive_type [111877,111882]" dest="primitive_type [109338,109343]"/>
  <match src="address: address [18956,18963]" dest="address: address [18590,18597]"/>
  <match src="call_expression [5032,5364]" dest="call_expression [5201,5537]"/>
  <match src=",: , [7056,7057]" dest=",: , [7898,7899]"/>
  <match src="emit: emit [92304,92308]" dest="emit: emit [90444,90448]"/>
  <match src="call_expression [107605,107647]" dest="call_expression [105464,105506]"/>
  <match src=",: , [18872,18873]" dest=",: , [18505,18506]"/>
  <match src=",: , [12630,12631]" dest=",: , [13607,13608]"/>
  <match src="type_name [75692,75699]" dest="type_name [73346,73353]"/>
  <match src="binary_expression [92176,92200]" dest="binary_expression [90313,90337]"/>
  <match src="primitive_type [74158,74162]" dest="primitive_type [71757,71761]"/>
  <match src="identifier: IERC721Metadata [85312,85327]" dest="identifier: IERC721Metadata [83258,83273]"/>
  <match src="identifier: isInitialized [105448,105461]" dest="identifier: isInitialized [120011,120024]"/>
  <match src="contract_body [692,1049]" dest="contract_body [714,1081]"/>
  <match src="return: return [70898,70904]" dest="return: return [68402,68408]"/>
  <match src="/: / [66251,66252]" dest="/: / [63618,63619]"/>
  <match src="bytes32: bytes32 [6855,6862]" dest="bytes32: bytes32 [7692,7699]"/>
  <match src="]: ] [99110,99111]" dest="]: ] [97448,97449]"/>
  <match src="bytes: bytes [93296,93301]" dest="bytes: bytes [91466,91471]"/>
  <match src="(: ( [112098,112099]" dest="(: ( [111761,111762]"/>
  <match src="(: ( [91057,91058]" dest="(: ( [89156,89157]"/>
  <match src="identifier: b [68874,68875]" dest="identifier: b [66312,66313]"/>
  <match src="(: ( [18511,18512]" dest="(: ( [18023,18024]"/>
  <match src="uint256: uint256 [70329,70336]" dest="uint256: uint256 [67816,67823]"/>
  <match src="]: ] [114195,114196]" dest="]: ] [22239,22240]"/>
  <match src="address: address [56300,56307]" dest="address: address [53368,53375]"/>
  <match src="function_body [103504,103601]" dest="function_body [101975,102075]"/>
  <match src="identifier: tokenId [40205,40212]" dest="identifier: tokenId [36659,36666]"/>
  <match src="(: ( [45124,45125]" dest="(: ( [41928,41929]"/>
  <match src=",: , [108383,108384]" dest=",: , [106222,106223]"/>
  <match src="address: address [108339,108346]" dest="address: address [106177,106184]"/>
  <match src="number_literal: 0x150b7a02 [85774,85784]" dest="number_literal: 0x150b7a02 [83729,83739]"/>
  <match src="external: external [37467,37475]" dest="external: external [33841,33849]"/>
  <match src="user_defined_type [101656,101684]" dest="user_defined_type [100067,100095]"/>
  <match src="return_statement [76651,76690]" dest="return_statement [74334,74373]"/>
  <match src="{: { [692,693]" dest="{: { [714,715]"/>
  <match src="address: address [14919,14926]" dest="address: address [15834,15841]"/>
  <match src="return_statement [91278,91293]" dest="return_statement [89385,89400]"/>
  <match src="call_argument [49664,49670]" dest="call_argument [46569,46575]"/>
  <match src="(: ( [91613,91614]" dest="(: ( [89730,89731]"/>
  <match src="function: function [16234,16242]" dest="function: function [16717,16725]"/>
  <match src="type_name [78114,78122]" dest="type_name [75847,75855]"/>
  <match src="number_literal: 32 [5157,5159]" dest="number_literal: 32 [5328,5330]"/>
  <match src="{: { [2863,2864]" dest="{: { [2950,2951]"/>
  <match src="): ) [74138,74139]" dest="): ) [71737,71738]"/>
  <match src="visibility [382,390]" dest="visibility [393,401]"/>
  <match src="call_argument [97146,97147]" dest="call_argument [95414,95415]"/>
  <match src="internal: internal [98982,98990]" dest="internal: internal [97318,97326]"/>
  <match src="parameter [36291,36307]" dest="parameter [32635,32651]"/>
  <match src="state_variable_declaration [85868,85933]" dest="state_variable_declaration [83826,83891]"/>
  <match src="return: return [91969,91975]" dest="return: return [90099,90105]"/>
  <match src="private: private [100107,100114]" dest="private: private [98468,98475]"/>
  <match src="(: ( [45639,45640]" dest="(: ( [42454,42455]"/>
  <match src="(: ( [65876,65877]" dest="(: ( [63234,63235]"/>
  <match src="private: private [12678,12685]" dest="private: private [13655,13662]"/>
  <match src="(: ( [43949,43950]" dest="(: ( [40715,40716]"/>
  <match src="identifier: data [45731,45735]" dest="identifier: data [42547,42551]"/>
  <match src="=&gt;: =&gt; [70326,70328]" dest="=&gt;: =&gt; [67813,67815]"/>
  <match src="call_argument [38543,38556]" dest="call_argument [34940,34953]"/>
  <match src="(: ( [65921,65922]" dest="(: ( [63279,63280]"/>
  <match src="comment: // All indexes are 1-based [72306,72332]" dest="comment: // All indexes are 1-based [69840,69866]"/>
  <match src="(: ( [55645,55646]" dest="(: ( [52697,52698]"/>
  <match src="memory: memory [12657,12663]" dest="memory: memory [13634,13640]"/>
  <match src="state_mutability [41001,41005]" dest="state_mutability [37483,37487]"/>
  <match src="function_definition [68719,68882]" dest="function_definition [66155,66321]"/>
  <match src="): ) [112237,112238]" dest="): ) [111832,111833]"/>
  <match src="}: } [37088,37089]" dest="}: } [33454,33455]"/>
  <match src="expression_statement [97574,97604]" dest="expression_statement [95861,95891]"/>
  <match src="contract_declaration [62235,63662]" dest="contract_declaration [59473,60941]"/>
  <match src="memory: memory [112071,112077]" dest="memory: memory [111734,111740]"/>
  <match src="identifier: _readName [45513,45522]" dest="identifier: _readName [42327,42336]"/>
  <match src="identifier: token [21832,21837]" dest="identifier: token [21389,21394]"/>
  <match src="external: external [15751,15759]" dest="external: external [118066,118074]"/>
  <match src="parameter [79417,79432]" dest="parameter [77185,77200]"/>
  <match src="uint256: uint256 [65922,65929]" dest="uint256: uint256 [63280,63287]"/>
  <match src="identifier: _token [111779,111785]" dest="identifier: _token [110189,110195]"/>
  <match src="(: ( [8698,8699]" dest="(: ( [9589,9590]"/>
  <match src="uint64: uint64 [39733,39739]" dest="uint64: uint64 [36168,36174]"/>
  <match src="binary_expression [82508,82521]" dest="binary_expression [80357,80370]"/>
  <match src="(: ( [12276,12277]" dest="(: ( [13248,13249]"/>
  <match src="identifier: tokenId [97595,97602]" dest="identifier: tokenId [95882,95889]"/>
  <match src="primitive_type [44236,44243]" dest="primitive_type [41012,41019]"/>
  <match src="mapping: mapping [86210,86217]" dest="mapping: mapping [84177,84184]"/>
  <match src=",: , [31158,31159]" dest=",: , [27357,27358]"/>
  <match src="primitive_type [5924,5931]" dest="primitive_type [6115,6122]"/>
  <match src="identifier: _tokenURI [90056,90065]" dest="identifier: _tokenURI [88128,88137]"/>
  <match src="parameter [12293,12310]" dest="parameter [13265,13282]"/>
  <match src="call_argument [85021,85033]" dest="call_argument [82943,82955]"/>
  <match src=",: , [38556,38557]" dest=",: , [34953,34954]"/>
  <match src="call_argument [115209,115217]" dest="call_argument [113802,113810]"/>
  <match src="contract_body [28867,33250]" dest="contract_body [25006,29508]"/>
  <match src="primitive_type [26176,26183]" dest="primitive_type [22042,22049]"/>
  <match src="event_paramater [18971,18988]" dest="event_paramater [18605,18622]"/>
  <match src="internal: internal [96820,96828]" dest="internal: internal [95078,95086]"/>
  <match src="pragma: pragma [76759,76765]" dest="pragma: pragma [74449,74455]"/>
  <match src=".: . [23958,23959]" dest=".: . [38832,38833]"/>
  <match src="identifier: _at [81669,81672]" dest="identifier: _at [79495,79498]"/>
  <match src="return_type_definition [74384,74398]" dest="return_type_definition [71990,72004]"/>
  <match src="yul_path [8675,8683]" dest="yul_path [9566,9574]"/>
  <match src=",: , [46180,46181]" dest=",: , [43006,43007]"/>
  <match src="identifier: res [34997,35000]" dest="identifier: res [31305,31308]"/>
  <match src="state_mutability [42916,42920]" dest="state_mutability [39643,39647]"/>
  <match src="call_argument [70622,70627]" dest="call_argument [68119,68124]"/>
  <match src="returns: returns [79455,79462]" dest="returns: returns [77223,77230]"/>
  <match src="): ) [20287,20288]" dest="): ) [19838,19839]"/>
  <match src="=: = [43404,43405]" dest="=: = [40145,40146]"/>
  <match src=".: . [46834,46835]" dest=".: . [43672,43673]"/>
  <match src="visibility [39787,39795]" dest="visibility [36225,36233]"/>
  <match src="(: ( [58649,58650]" dest="(: ( [55777,55778]"/>
  <match src=".: . [80570,80571]" dest=".: . [78358,78359]"/>
  <match src="identifier: _msgSender [100348,100358]" dest="identifier: _msgSender [98716,98726]"/>
  <match src="function_definition [31124,31198]" dest="function_definition [27323,27397]"/>
  <match src="identifier: _values [71765,71772]" dest="identifier: _values [69289,69296]"/>
  <match src="parameter [116167,116181]" dest="parameter [114788,114802]"/>
  <match src="!: ! [105447,105448]" dest="!: ! [120010,120011]"/>
  <match src="identifier: REQUEST_GAS_LIMIT [17644,17661]" dest="identifier: REQUEST_GAS_LIMIT [118775,118792]"/>
  <match src="identifier: msg [38655,38658]" dest="identifier: msg [35054,35057]"/>
  <match src=".: . [82476,82477]" dest=".: . [80324,80325]"/>
  <match src="primitive_type [264,271]" dest="primitive_type [273,280]"/>
  <match src="type_name [105365,105372]" dest="type_name [119926,119933]"/>
  <match src="uint256: uint256 [264,271]" dest="uint256: uint256 [273,280]"/>
  <match src="identifier: b [65543,65544]" dest="identifier: b [62885,62886]"/>
  <match src="contract: contract [21670,21678]" dest="contract: contract [21223,21231]"/>
  <match src="returns: returns [29590,29597]" dest="returns: returns [25748,25755]"/>
  <match src="comment: /**      * @dev Allows to send to the other network some ERC721 token that can be forced into the contract      * without the invocation of the required methods. (e. g. regular transferFrom without a call to onERC721Received)      * @param _token address of the token contract.      * @param _receiver the address that will receive the token on the other network.      * @param _tokenId unique id of the bridged token.      */ [109941,110367]" dest="comment: /**      * @dev Checks if specified token was already bridged at least once and it is registered in the Omnibridge.      * @param _token address of the token contract.      * @return true, if token was already bridged.      */ [103647,103877]"/>
  <match src="}: } [18574,18575]" dest="}: } [18088,18089]"/>
  <match src="identifier: setBaseURI [103126,103136]" dest="identifier: setBaseURI [101588,101598]"/>
  <match src="(: ( [57583,57584]" dest="(: ( [54684,54685]"/>
  <match src="call_argument [114095,114101]" dest="call_argument [22781,22787]"/>
  <match src="identifier: _gas [7255,7259]" dest="identifier: _gas [8105,8109]"/>
  <match src="number_literal: 0 [98583,98584]" dest="number_literal: 0 [96902,96903]"/>
  <match src="identifier: _get [82095,82099]" dest="identifier: _get [79935,79939]"/>
  <match src="primitive_type [5289,5296]" dest="primitive_type [5461,5468]"/>
  <match src="identifier: set [76002,76005]" dest="identifier: set [73664,73667]"/>
  <match src="call_expression [19687,19737]" dest="call_expression [19280,19346]"/>
  <match src="call_argument [93132,93136]" dest="call_argument [91296,91300]"/>
  <match src="storage: storage [81019,81026]" dest="storage: storage [78824,78831]"/>
  <match src="emit_statement [20568,20629]" dest="emit_statement [20114,20175]"/>
  <match src="member_expression [3914,3930]" dest="member_expression [4027,4043]"/>
  <match src="inheritance_specifier [47243,47257]" dest="inheritance_specifier [44095,44109]"/>
  <match src="identifier: _tokenURI [107028,107037]" dest="identifier: _tokenURI [104874,104883]"/>
  <match src="address: address [47318,47325]" dest="address: address [44171,44178]"/>
  <match src=".: . [112676,112677]" dest=".: . [111552,111553]"/>
  <match src="function_definition [59895,60125]" dest="function_definition [57061,57294]"/>
  <match src="comment: /**  * @title NFTBridgeLimits  * @dev Functionality for keeping track of bridging limits for multiple ERC721 tokens.  */ [21540,21660]" dest="comment: /**  * @title NFTBridgeLimits  * @dev Functionality for keeping track of bridging limits for multiple ERC721 tokens.  */ [21089,21212]"/>
  <match src="number_literal: 0 [115664,115665]" dest="number_literal: 0 [114271,114272]"/>
  <match src="identifier: status [45711,45717]" dest="identifier: status [42527,42533]"/>
  <match src="(: ( [93476,93477]" dest="(: ( [91648,91649]"/>
  <match src="view: view [16588,16592]" dest="view: view [118368,118372]"/>
  <match src="identifier: AddressSet [74566,74576]" dest="identifier: AddressSet [72179,72189]"/>
  <match src="): ) [92938,92939]" dest="): ) [91095,91096]"/>
  <match src="identifier: bridgeContract [101706,101720]" dest="identifier: bridgeContract [100118,100132]"/>
  <match src="type_name [12373,12378]" dest="type_name [13345,13350]"/>
  <match src="binary_expression [95452,95503]" dest="binary_expression [93672,93723]"/>
  <match src="parameter [66809,66818]" dest="parameter [64193,64202]"/>
  <match src="parameter [60814,60829]" dest="parameter [58007,58022]"/>
  <match src="(: ( [106226,106227]" dest="(: ( [104054,104055]"/>
  <match src="}: } [107474,107475]" dest="}: } [105331,105332]"/>
  <match src="): ) [45229,45230]" dest="): ) [42034,42035]"/>
  <match src="new: new [43363,43366]" dest="new: new [40103,40106]"/>
  <match src="parameter [103460,103483]" dest="parameter [101931,101954]"/>
  <match src="bytes4: bytes4 [85731,85737]" dest="bytes4: bytes4 [83686,83692]"/>
  <match src="block_statement [70884,70921]" dest="block_statement [68387,68426]"/>
  <match src="call_argument [107634,107646]" dest="call_argument [105493,105505]"/>
  <match src="identifier: value [79184,79189]" dest="identifier: value [76942,76947]"/>
  <match src="visibility [16273,16279]" dest="visibility [16756,16762]"/>
  <match src="function_definition [114867,115238]" dest="function_definition [113487,113832]"/>
  <match src="primitive_type [36251,36258]" dest="primitive_type [32593,32600]"/>
  <match src="return_type_definition [81256,81273]" dest="return_type_definition [79068,79085]"/>
  <match src="identifier: _entries [78865,78873]" dest="identifier: _entries [76617,76625]"/>
  <match src="identifier: isContract [8175,8185]" dest="identifier: isContract [9059,9069]"/>
  <match src="identifier: require [111938,111945]" dest="identifier: require [110094,110101]"/>
  <match src="primitive_type [61905,61912]" dest="primitive_type [59127,59134]"/>
  <match src="member_expression [91246,91261]" dest="member_expression [89352,89367]"/>
  <match src="variable_declaration [46767,46778]" dest="variable_declaration [43604,43615]"/>
  <match src="uint256: uint256 [65877,65884]" dest="uint256: uint256 [63235,63242]"/>
  <match src="identifier: MEDIATOR_CONTRACT [13969,13986]" dest="identifier: MEDIATOR_CONTRACT [14992,15009]"/>
  <match src="call_argument [89611,89618]" dest="call_argument [87673,87680]"/>
  <match src="): ) [84955,84956]" dest="): ) [82876,82877]"/>
  <match src=".: . [70827,70828]" dest=".: . [68328,68329]"/>
  <match src="primitive_type [109030,109037]" dest="primitive_type [106886,106893]"/>
  <match src="bytes32: bytes32 [419,426]" dest="bytes32: bytes32 [431,438]"/>
  <match src="return_statement [66308,66317]" dest="return_statement [63677,63686]"/>
  <match src="identifier: lastIndex [80360,80369]" dest="identifier: lastIndex [78143,78152]"/>
  <match src="return_statement [83617,83660]" dest="return_statement [81500,81543]"/>
  <match src="override_specifier [89552,89560]" dest="override_specifier [87613,87621]"/>
  <match src="(: ( [17985,17986]" dest="(: ( [19020,19021]"/>
  <match src="): ) [75499,75500]" dest="): ) [73144,73145]"/>
  <match src="parameter [1236,1243]" dest="parameter [1275,1282]"/>
  <match src="type_name [35155,35159]" dest="type_name [31467,31471]"/>
  <match src="number_literal: 0x02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c0 [5422,5488]" dest="number_literal: 0x02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c0 [5599,5665]"/>
  <match src="call_argument [98397,98413]" dest="call_argument [96711,96727]"/>
  <match src=",: , [35932,35933]" dest=",: , [32266,32267]"/>
  <match src="function_definition [17506,17688]" dest="function_definition [118649,118813]"/>
  <match src="return_statement [58604,58686]" dest="return_statement [55732,55814]"/>
  <match src="call_argument [51042,51043]" dest="call_argument [47990,47991]"/>
  <match src="unary_expression [20263,20288]" dest="unary_expression [19814,19839]"/>
  <match src="override_specifier [113885,113893]" dest="override_specifier [112865,112873]"/>
  <match src="): ) [6543,6544]" dest="): ) [7372,7373]"/>
  <match src="{: { [103182,103183]" dest="{: { [101644,101645]"/>
  <match src="identifier: _tokenURI [108600,108609]" dest="identifier: _tokenURI [106445,106454]"/>
  <match src=",: , [93050,93051]" dest=",: , [91213,91214]"/>
  <match src="storage: storage [72711,72718]" dest="storage: storage [70262,70269]"/>
  <match src="function: function [14892,14900]" dest="function: function [15807,15815]"/>
  <match src="bytes: bytes [94437,94442]" dest="bytes: bytes [92630,92635]"/>
  <match src="(: ( [92920,92921]" dest="(: ( [91077,91078]"/>
  <match src="returns: returns [89384,89391]" dest="returns: returns [87438,87445]"/>
  <match src="): ) [76688,76689]" dest="): ) [74371,74372]"/>
  <match src=".: . [80067,80068]" dest=".: . [77845,77846]"/>
  <match src="(: ( [11925,11926]" dest="(: ( [12888,12889]"/>
  <match src="boolean_literal [930,934]" dest="boolean_literal [956,960]"/>
  <match src="if_statement [116261,116515]" dest="if_statement [114886,115145]"/>
  <match src="&quot;: &quot; [3250,3251]" dest="&quot;: &quot; [3346,3347]"/>
  <match src="override_specifier [41006,41014]" dest="override_specifier [37488,37496]"/>
  <match src="(: ( [112198,112199]" dest="(: ( [111793,111794]"/>
  <match src="yul_path [56621,56632]" dest="yul_path [53697,53708]"/>
  <match src="call_argument [76002,76012]" dest="call_argument [73664,73674]"/>
  <match src="primitive_type [89570,89576]" dest="primitive_type [87631,87637]"/>
  <match src=",: , [106884,106885]" dest=",: , [104725,104726]"/>
  <match src="call_expression [96330,96447]" dest="call_expression [94573,94690]"/>
  <match src="solidity_version: 0.7.0 [85123,85128]" dest="solidity_version: 0.7.0 [83052,83057]"/>
  <match src="identifier: from [98746,98750]" dest="identifier: from [97072,97076]"/>
  <match src="call_argument [12518,12524]" dest="call_argument [13492,13498]"/>
  <match src="parameter [90672,90685]" dest="parameter [88762,88775]"/>
  <match src="): ) [48210,48211]" dest="): ) [45079,45080]"/>
  <match src=".: . [83409,83410]" dest=".: . [81285,81286]"/>
  <match src="identifier: _bridgeContract [16969,16984]" dest="identifier: _bridgeContract [17165,17180]"/>
  <match src="parameter [11321,11333]" dest="parameter [12268,12280]"/>
  <match src="return_type_definition [7275,7292]" dest="return_type_definition [8126,8143]"/>
  <match src="comment: // The entry is stored at length-1, but we add 1 to all indexes [78932,78995]" dest="comment: // The entry is stored at length-1, but we add 1 to all indexes [76685,76748]"/>
  <match src="call_argument [84353,84358]" dest="call_argument [82256,82261]"/>
  <match src="internal: internal [97418,97426]" dest="internal: internal [95699,95707]"/>
  <match src="string_literal [3237,3251]" dest="string_literal [3333,3347]"/>
  <match src="=: = [107369,107370]" dest="=: = [105223,105224]"/>
  <match src="bool: bool [4917,4921]" dest="bool: bool [5066,5070]"/>
  <match src="type_name [81736,81743]" dest="type_name [79562,79569]"/>
  <match src="expression_statement [102304,102306]" dest="expression_statement [100739,100741]"/>
  <match src="array_access [80462,80489]" dest="array_access [78248,78275]"/>
  <match src=",: , [65463,65464]" dest=",: , [62804,62805]"/>
  <match src="function_body [18228,18280]" dest="function_body [17732,17786]"/>
  <match src="visibility [78613,78620]" dest="visibility [76360,76367]"/>
  <match src="call_argument [115138,115148]" dest="call_argument [113729,113739]"/>
  <match src="): ) [111922,111923]" dest="): ) [111241,111242]"/>
  <match src=",: , [90054,90055]" dest=",: , [88126,88127]"/>
  <match src="internal: internal [96275,96283]" dest="internal: internal [94516,94524]"/>
  <match src="(: ( [91595,91596]" dest="(: ( [89712,89713]"/>
  <match src="identifier: require [38461,38468]" dest="identifier: require [34855,34862]"/>
  <match src="{: { [16871,16872]" dest="{: { [17065,17066]"/>
  <match src="(: ( [109784,109785]" dest="(: ( [107731,107732]"/>
  <match src=",: , [112734,112735]" dest=",: , [111610,111611]"/>
  <match src="(: ( [111680,111681]" dest="(: ( [111012,111013]"/>
  <match src="identifier: length [73441,73447]" dest="identifier: length [71014,71020]"/>
  <match src="number_literal: 0x6fde8202 [4251,4261]" dest="number_literal: 0x6fde8202 [4379,4389]"/>
  <match src="identifier: res [34664,34667]" dest="identifier: res [30967,30970]"/>
  <match src="identifier: relayToken [36931,36941]" dest="identifier: relayToken [33291,33301]"/>
  <match src="expression_statement [38601,38688]" dest="expression_statement [35000,35087]"/>
  <match src="call_expression [84695,84725]" dest="call_expression [82610,82640]"/>
  <match src="]: ] [92282,92283]" dest="]: ] [90421,90422]"/>
  <match src="identifier: _entries [80466,80474]" dest="identifier: _entries [78252,78260]"/>
  <match src="type_cast_expression [14617,14642]" dest="type_cast_expression [15527,15542]"/>
  <match src="identifier: to [100149,100151]" dest="identifier: to [98512,98514]"/>
  <match src="call_expression [46203,46277]" dest="call_expression [43029,43103]"/>
  <match src="type_name [354,381]" dest="type_name [365,392]"/>
  <match src="expression_statement [903,935]" dest="expression_statement [929,961]"/>
  <match src="calldata: calldata [7223,7231]" dest="calldata: calldata [8072,8080]"/>
  <match src="[: [ [73522,73523]" dest="[: [ [71096,71097]"/>
  <match src="expression_statement [111938,111998]" dest="expression_statement [110094,110154]"/>
  <match src="-: - [43413,43414]" dest="-: - [40154,40155]"/>
  <match src="type_name [75746,75750]" dest="type_name [73400,73404]"/>
  <match src="assignment_expression [88340,88353]" dest="assignment_expression [86359,86372]"/>
  <match src="): ) [97112,97113]" dest="): ) [95378,95379]"/>
  <match src="primitive_type [105269,105276]" dest="primitive_type [118678,118685]"/>
  <match src="call_expression [90191,90237]" dest="call_expression [88266,88312]"/>
  <match src="identifier: toDeleteIndex [80475,80488]" dest="identifier: toDeleteIndex [78261,78274]"/>
  <match src="identifier: _bridgeContract [14992,15007]" dest="identifier: _bridgeContract [15908,15923]"/>
  <match src="=: = [43361,43362]" dest="=: = [40101,40102]"/>
  <match src="identifier: add [75388,75391]" dest="identifier: add [73032,73035]"/>
  <match src="(: ( [54794,54795]" dest="(: ( [51812,51813]"/>
  <match src="uint256: uint256 [21839,21846]" dest="uint256: uint256 [37970,37977]"/>
  <match src="identifier: data [12306,12310]" dest="identifier: data [13278,13282]"/>
  <match src="assignment_expression [2195,2275]" dest="assignment_expression [2266,2346]"/>
  <match src="(: ( [39809,39810]" dest="(: ( [36247,36248]"/>
  <match src="(: ( [74612,74613]" dest="(: ( [72225,72226]"/>
  <match src="solidity: solidity [57960,57968]" dest="solidity: solidity [55072,55080]"/>
  <match src="binary_expression [102215,102285]" dest="binary_expression [100649,100719]"/>
  <match src="address: address [114899,114906]" dest="address: address [113520,113527]"/>
  <match src="call_expression [95319,95392]" dest="call_expression [93537,93610]"/>
  <match src="member_expression [112909,112938]" dest="member_expression [112357,112386]"/>
  <match src="(: ( [33523,33524]" dest="(: ( [29793,29794]"/>
  <match src="function: function [29542,29550]" dest="function: function [25700,25708]"/>
  <match src="primitive_type [50677,50684]" dest="primitive_type [47616,47623]"/>
  <match src="{: { [58594,58595]" dest="{: { [55721,55722]"/>
  <match src="primitive_type [22206,22210]" dest="primitive_type [21761,21765]"/>
  <match src="pragma_directive [61147,61170]" dest="pragma_directive [58352,58375]"/>
  <match src="identifier: Address [50147,50154]" dest="identifier: Address [47068,47075]"/>
  <match src="(: ( [59837,59838]" dest="(: ( [56999,57000]"/>
  <match src="comment: // According to EIP-1052, 0x0 is the value returned for not-yet created accounts [8242,8322]" dest="comment: // According to EIP-1052, 0x0 is the value returned for not-yet created accounts [9127,9207]"/>
  <match src="primitive_type [111527,111534]" dest="primitive_type [110864,110871]"/>
  <match src="parameter [32566,32570]" dest="parameter [28808,28812]"/>
  <match src="parameter [60776,60789]" dest="parameter [57969,57982]"/>
  <match src="=&gt;: =&gt; [55592,55594]" dest="=&gt;: =&gt; [52642,52644]"/>
  <match src="type_name [58588,58592]" dest="type_name [55715,55719]"/>
  <match src="): ) [92709,92710]" dest="): ) [90862,90863]"/>
  <match src="bytes32: bytes32 [472,479]" dest="bytes32: bytes32 [485,492]"/>
  <match src="type_cast_expression [1562,1575]" dest="type_cast_expression [1612,1625]"/>
  <match src="address: address [113825,113832]" dest="address: address [112803,112810]"/>
  <match src="[: [ [45762,45763]" dest="[: [ [42578,42579]"/>
  <match src="identifier: to [101402,101404]" dest="identifier: to [99799,99801]"/>
  <match src="(: ( [115118,115119]" dest="(: ( [113709,113710]"/>
  <match src="address: address [85403,85410]" dest="address: address [83351,83358]"/>
  <match src="comment: /**      * @dev See {IERC721-ownerOf}.      */ [88911,88957]" dest="comment: /**      * @dev See {IERC721-ownerOf}.      */ [86948,86996]"/>
  <match src="type_name [55695,55739]" dest="type_name [52748,52792]"/>
  <match src="public: public [89363,89369]" dest="public: public [87417,87423]"/>
  <match src="call_argument [115150,115158]" dest="call_argument [113741,113749]"/>
  <match src="function: function [103433,103441]" dest="function: function [101904,101912]"/>
  <match src="internal: internal [95926,95934]" dest="internal: internal [94159,94167]"/>
  <match src="{: { [80874,80875]" dest="{: { [78671,78672]"/>
  <match src="call_argument [91262,91267]" dest="call_argument [89368,89373]"/>
  <match src="bytes: bytes [11821,11826]" dest="bytes: bytes [12783,12788]"/>
  <match src="event_paramater [4533,4554]" dest="event_paramater [4668,4689]"/>
  <match src="): ) [91614,91615]" dest="): ) [89731,89732]"/>
  <match src="call_argument [59147,59155]" dest="call_argument [56289,56297]"/>
  <match src="): ) [76027,76028]" dest="): ) [73689,73690]"/>
  <match src="(: ( [55367,55368]" dest="(: ( [52412,52413]"/>
  <match src=",: , [107566,107567]" dest=",: , [105424,105425]"/>
  <match src="): ) [19490,19491]" dest="): ) [19154,19155]"/>
  <match src="{: { [78810,78811]" dest="{: { [76561,76562]"/>
  <match src="call_argument [89078,89121]" dest="call_argument [87119,87162]"/>
  <match src="=: = [110857,110858]" dest="=: = [109356,109357]"/>
  <match src="call_expression [103935,103968]" dest="call_expression [102418,102451]"/>
  <match src="call_argument [95335,95342]" dest="call_argument [93553,93560]"/>
  <match src="emit: emit [100703,100707]" dest="emit: emit [99082,99086]"/>
  <match src="identifier: _data [94572,94577]" dest="identifier: _data [92767,92772]"/>
  <match src="variable_declaration_statement [72023,72066]" dest="variable_declaration_statement [69552,69595]"/>
  <match src="parameter [68732,68741]" dest="parameter [66168,66177]"/>
  <match src="&quot;: &quot; [91911,91912]" dest="&quot;: &quot; [90039,90040]"/>
  <match src="primitive_type [19667,19672]" dest="primitive_type [19260,19265]"/>
  <match src="internal: internal [46120,46128]" dest="internal: internal [42945,42953]"/>
  <match src="variable_declaration [113904,113933]" dest="variable_declaration [103467,103481]"/>
  <match src="call_argument [96386,96391]" dest="call_argument [94629,94634]"/>
  <match src="member_expression [80347,80359]" dest="member_expression [78130,78142]"/>
  <match src="identifier: _data [100413,100418]" dest="identifier: _data [98784,98789]"/>
  <match src="contract_body [50437,54833]" dest="contract_body [47371,51855]"/>
  <match src="): ) [6451,6452]" dest="): ) [7276,7277]"/>
  <match src="call_argument [107720,107732]" dest="call_argument [105544,105556]"/>
  <match src="identifier: name [45679,45683]" dest="identifier: name [42494,42498]"/>
  <match src="bool: bool [92119,92123]" dest="bool: bool [90255,90259]"/>
  <match src="function_body [102904,102936]" dest="function_body [101357,101391]"/>
  <match src="bool: bool [6723,6727]" dest="bool: bool [7556,7560]"/>
  <match src="type_name [118660,118666]" dest="type_name [116923,116929]"/>
  <match src=",: , [83342,83343]" dest=",: , [81217,81218]"/>
  <match src="variable_declaration [110953,110971]" dest="variable_declaration [110361,110379]"/>
  <match src="function_body [48212,48317]" dest="function_body [45081,45188]"/>
  <match src="type_name [55843,55849]" dest="type_name [52899,52905]"/>
  <match src="=: = [736,737]" dest="=: = [759,760]"/>
  <match src="yul_hex_number: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [56553,56619]" dest="yul_hex_number: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [53629,53695]"/>
  <match src="assignment_expression [99425,99444]" dest="assignment_expression [97772,97791]"/>
  <match src=",: , [67515,67516]" dest=",: , [64916,64917]"/>
  <match src="comment: // solhint-disable-previous-line no-complex-fallback [50914,50966]" dest="comment: // solhint-disable-previous-line no-complex-fallback [47860,47912]"/>
  <match src="): ) [54360,54361]" dest="): ) [51366,51367]"/>
  <match src="call_argument [74438,74461]" dest="call_argument [72045,72068]"/>
  <match src="solidity_pragma_token [47076,47090]" dest="solidity_pragma_token [43921,43935]"/>
  <match src="type_name [29191,29198]" dest="type_name [25339,25346]"/>
  <match src="member_expression [97653,97686]" dest="member_expression [95943,95976]"/>
  <match src="address: address [46684,46691]" dest="address: address [43520,43527]"/>
  <match src="call_argument [20329,20339]" dest="call_argument [19882,19892]"/>
  <match src="state_mutability [6430,6434]" dest="state_mutability [7255,7259]"/>
  <match src="identifier: IERC721 [37434,37441]" dest="identifier: IERC721 [33808,33815]"/>
  <match src="): ) [24002,24003]" dest="): ) [38872,38873]"/>
  <match src="string_literal [3611,3629]" dest="string_literal [3716,3734]"/>
  <match src="parameter [72761,72765]" dest="parameter [70312,70316]"/>
  <match src="return_statement [40801,40818]" dest="return_statement [37276,37293]"/>
  <match src="return_statement [73862,73911]" dest="return_statement [71452,71501]"/>
  <match src="type_name [74613,74620]" dest="type_name [72226,72233]"/>
  <match src="): ) [3962,3963]" dest="): ) [4075,4076]"/>
  <match src="identifier: data [113266,113270]" dest="identifier: data [109447,109451]"/>
  <match src="function: function [106056,106064]" dest="function: function [103883,103891]"/>
  <match src="solidity_version:  0.7.5 [35752,35758]" dest="solidity_version:  0.7.5 [32076,32082]"/>
  <match src="call_argument [2578,2588]" dest="call_argument [2657,2667]"/>
  <match src="false [107734,107739]" dest="false [105558,105563]"/>
  <match src="contract: contract [13735,13743]" dest="contract: contract [14756,14764]"/>
  <match src="identifier: setMessageToken [2124,2139]" dest="identifier: setMessageToken [2194,2209]"/>
  <match src="identifier: require [93350,93357]" dest="identifier: require [91521,91528]"/>
  <match src="calldata: calldata [45001,45009]" dest="calldata: calldata [41802,41810]"/>
  <match src="identifier: returndata_size [13400,13415]" dest="identifier: returndata_size [14392,14407]"/>
  <match src="(: ( [51024,51025]" dest="(: ( [47972,47973]"/>
  <match src=",: , [33187,33188]" dest=",: , [29444,29445]"/>
  <match src="if_statement [39149,39276]" dest="if_statement [35559,35689]"/>
  <match src="=: = [64645,64646]" dest="=: = [61956,61957]"/>
  <match src="]: ] [89726,89727]" dest="]: ] [87790,87791]"/>
  <match src="expression_statement [88577,88629]" dest="expression_statement [86602,86654]"/>
  <match src="{: { [27253,27254]" dest="{: { [39156,39157]"/>
  <match src=",: , [6186,6187]" dest=",: , [6386,6387]"/>
  <match src="call_expression [81755,81829]" dest="call_expression [79582,79656]"/>
  <match src="++: ++ [43295,43297]" dest="++: ++ [40032,40034]"/>
  <match src="(: ( [9789,9790]" dest="(: ( [10701,10702]"/>
  <match src="memory: memory [96261,96267]" dest="memory: memory [94502,94508]"/>
  <match src="address: address [85877,85884]" dest="address: address [83835,83842]"/>
  <match src="): ) [39110,39111]" dest="): ) [35518,35519]"/>
  <match src="identifier: _msgSender [59794,59804]" dest="identifier: _msgSender [56956,56966]"/>
  <match src="primitive_type [62519,62525]" dest="primitive_type [59766,59772]"/>
  <match src="call_argument [67517,67529]" dest="call_argument [64918,64930]"/>
  <match src="{: { [108447,108448]" dest="{: { [106288,106289]"/>
  <match src=".: . [59875,59876]" dest=".: . [57038,57039]"/>
  <match src="parameter [6942,6960]" dest="parameter [7781,7799]"/>
  <match src="member_expression [79053,79065]" dest="member_expression [76808,76820]"/>
  <match src="call_expression [91038,91059]" dest="call_expression [89137,89158]"/>
  <match src="identifier: tokenId [97670,97677]" dest="identifier: tokenId [95960,95967]"/>
  <match src="binary_expression [65543,65549]" dest="binary_expression [62885,62891]"/>
  <match src="internal: internal [17922,17930]" dest="internal: internal [18160,18168]"/>
  <match src="modifier_invocation [49629,49638]" dest="modifier_invocation [46533,46542]"/>
  <match src="pragma_directive [33622,33644]" dest="pragma_directive [29897,29919]"/>
  <match src="identifier: this [38551,38555]" dest="identifier: this [34948,34952]"/>
  <match src="function_definition [6459,6518]" dest="function_definition [7286,7345]"/>
  <match src="(: ( [39092,39093]" dest="(: ( [35500,35501]"/>
  <match src="{: { [93105,93106]" dest="{: { [91268,91269]"/>
  <match src=",: , [44984,44985]" dest=",: , [41784,41785]"/>
  <match src="function_body [58594,58692]" dest="function_body [55721,55821]"/>
  <match src="primitive_type [523,530]" dest="primitive_type [537,544]"/>
  <match src="string_literal [11947,11990]" dest="string_literal [12910,12953]"/>
  <match src="visibility [85738,85745]" dest="visibility [83693,83700]"/>
  <match src="): ) [109817,109818]" dest="): ) [107764,107765]"/>
  <match src="): ) [51043,51044]" dest="): ) [47991,47992]"/>
  <match src="assembly: assembly [57611,57619]" dest="assembly: assembly [54713,54721]"/>
  <match src="identifier: tokenOfOwnerByIndex [90652,90671]" dest="identifier: tokenOfOwnerByIndex [88742,88761]"/>
  <match src="state_mutability [47702,47706]" dest="state_mutability [44562,44566]"/>
  <match src="): ) [86449,86450]" dest="): ) [84425,84426]"/>
  <match src="calldatasize: calldatasize [52245,52257]" dest="calldatasize: calldatasize [49212,49224]"/>
  <match src="unary_expression [96926,96943]" dest="unary_expression [95186,95203]"/>
  <match src="string [9986,9988]" dest="string [10901,10903]"/>
  <match src="uint256: uint256 [83008,83015]" dest="uint256: uint256 [80874,80881]"/>
  <match src="return_type_definition [8217,8231]" dest="return_type_definition [9101,9115]"/>
  <match src="primitive_type [107270,107275]" dest="primitive_type [105122,105127]"/>
  <match src="{: { [89408,89409]" dest="{: { [87462,87463]"/>
  <match src="identifier: index [84248,84253]" dest="identifier: index [82150,82155]"/>
  <match src="solidity: solidity [62044,62052]" dest="solidity: solidity [59273,59281]"/>
  <match src="state_mutability [34645,34649]" dest="state_mutability [30948,30952]"/>
  <match src="identifier: key [84892,84895]" dest="identifier: key [82813,82816]"/>
  <match src="{: { [73579,73580]" dest="{: { [71158,71159]"/>
  <match src="call_argument [115046,115052]" dest="call_argument [115743,115749]"/>
  <match src="return: return [18531,18537]" dest="return: return [18044,18050]"/>
  <match src="identifier: tokenId [98673,98680]" dest="identifier: tokenId [96995,97002]"/>
  <match src="}: } [6245,6246]" dest="}: } [6447,6448]"/>
  <match src="): ) [14641,14642]" dest="): ) [15541,15542]"/>
  <match src="contract_declaration [40041,41137]" dest="contract_declaration [36491,37622]"/>
  <match src="yul_evm_builtin [56546,56552]" dest="yul_evm_builtin [53622,53628]"/>
  <match src="call_argument [68214,68240]" dest="call_argument [65635,65661]"/>
  <match src="function_definition [2429,2598]" dest="function_definition [2507,2678]"/>
  <match src="&quot;: &quot; [94631,94632]" dest="&quot;: &quot; [92826,92827]"/>
  <match src="identifier: _token [2269,2275]" dest="identifier: _token [2340,2346]"/>
  <match src="): ) [49618,49619]" dest="): ) [46522,46523]"/>
  <match src=".: . [80589,80590]" dest=".: . [78377,78378]"/>
  <match src="call_argument [20277,20287]" dest="call_argument [19828,19838]"/>
  <match src="primitive_type [90919,90926]" dest="primitive_type [89016,89023]"/>
  <match src="function_body [97435,97888]" dest="function_body [95716,96187]"/>
  <match src="call_argument [38638,38653]" dest="call_argument [35037,35052]"/>
  <match src="}: } [89280,89281]" dest="}: } [87329,87330]"/>
  <match src="event_paramater [4556,4572]" dest="event_paramater [4691,4707]"/>
  <match src="type_cast_expression [76658,76689]" dest="type_cast_expression [74341,74372]"/>
  <match src="type_cast_expression [111673,111683]" dest="type_cast_expression [111005,111015]"/>
  <match src="type_name [108315,108322]" dest="type_name [106152,106159]"/>
  <match src="}: } [109245,109246]" dest="}: } [107181,107182]"/>
  <match src="external: external [31707,31715]" dest="external: external [27921,27929]"/>
  <match src="event: event [21792,21797]" dest="event: event [21345,21350]"/>
  <match src="call_argument [37055,37060]" dest="call_argument [33420,33425]"/>
  <match src="function_definition [83749,83870]" dest="function_definition [81638,81761]"/>
  <match src="return_type_definition [41698,41712]" dest="return_type_definition [38354,38368]"/>
  <match src="): ) [29453,29454]" dest="): ) [25606,25607]"/>
  <match src="identifier: _contains [83624,83633]" dest="identifier: _contains [81507,81516]"/>
  <match src="identifier: require [91546,91553]" dest="identifier: require [89663,89670]"/>
  <match src="yul_identifier [54775,54778]" dest="yul_identifier [51793,51796]"/>
  <match src="call_argument [105716,105732]" dest="call_argument [120167,120183]"/>
  <match src="primitive_type [118713,118719]" dest="primitive_type [116967,116973]"/>
  <match src="return_type_definition [100115,100129]" dest="return_type_definition [98476,98490]"/>
  <match src="interface: interface [28235,28244]" dest="interface: interface [24353,24362]"/>
  <match src="identifier: _messageId [20474,20484]" dest="identifier: _messageId [20030,20040]"/>
  <match src="user_defined_type [35934,35949]" dest="user_defined_type [32268,32283]"/>
  <match src="&lt;=: &lt;= [65545,65547]" dest="&lt;=: &lt;= [62887,62889]"/>
  <match src="uint256: uint256 [86112,86119]" dest="uint256: uint256 [84076,84083]"/>
  <match src="{: { [51064,51065]" dest="{: { [48013,48014]"/>
  <match src="parameter [6638,6645]" dest="parameter [7469,7476]"/>
  <match src="identifier: target [11813,11819]" dest="identifier: target [12775,12781]"/>
  <match src="identifier: Strings [85533,85540]" dest="identifier: Strings [83484,83491]"/>
  <match src="call_argument [88806,88850]" dest="call_argument [86838,86882]"/>
  <match src="function_definition [113728,114368]" dest="function_definition [112732,112978]"/>
  <match src="comment: /**      * @dev Internal function for reading ERC721 token URI.      * @param _token address of the ERC721 token contract.      * @param _tokenId unique identifier for the token.      * @return token URI for the particular token, if any.      */ [46411,46656]" dest="comment: /**      * @dev Internal function for reading ERC721 token URI.      * @param _token address of the ERC721 token contract.      * @param _tokenId unique identifier for the token.      * @return token URI for the particular token, if any.      */ [43241,43491]"/>
  <match src="solidity_version:  0.7.5 [641,647]" dest="solidity_version:  0.7.5 [660,666]"/>
  <match src="address: address [32510,32517]" dest="address: address [28752,28759]"/>
  <match src="uint256: uint256 [64571,64578]" dest="uint256: uint256 [61881,61888]"/>
  <match src=",: , [56619,56620]" dest=",: , [53695,53696]"/>
  <match src="identifier: value [73902,73907]" dest="identifier: value [71492,71497]"/>
  <match src="returns: returns [72943,72950]" dest="returns: returns [70501,70508]"/>
  <match src="parameter [70537,70552]" dest="parameter [68033,68048]"/>
  <match src="function: function [106826,106834]" dest="function: function [104666,104674]"/>
  <match src="string [45125,45137]" dest="string [41929,41941]"/>
  <match src="function_body [89035,89129]" dest="function_body [87075,87171]"/>
  <match src="call_argument [45190,45230]" dest="call_argument [41995,42035]"/>
  <match src="identifier: _msgSender [91603,91613]" dest="identifier: _msgSender [89720,89730]"/>
  <match src="function: function [2429,2437]" dest="function: function [2507,2515]"/>
  <match src="call_argument [36493,36501]" dest="call_argument [32841,32849]"/>
  <match src="(: ( [98574,98575]" dest="(: ( [96893,96894]"/>
  <match src="parameter [108393,108418]" dest="parameter [106233,106258]"/>
  <match src="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/components/bridged/BridgedTokensRegistry.sol [46967,47067]" dest="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/components/bridged/BridgedTokensRegistry.sol [43810,43910]"/>
  <match src="(: ( [97582,97583]" dest="(: ( [95869,95870]"/>
  <match src="primitive_type [112120,112126]" dest="primitive_type [111315,111321]"/>
  <match src="comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [65941,66020]" dest="comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [63300,63379]"/>
  <match src=",: , [93136,93137]" dest=",: , [91300,91301]"/>
  <match src="function_body [73852,73917]" dest="function_body [71441,71508]"/>
  <match src="identifier: valueIndex [71332,71342]" dest="identifier: valueIndex [68850,68860]"/>
  <match src="type_name [12277,12284]" dest="type_name [13249,13256]"/>
  <match src="return_statement [80846,80858]" dest="return_statement [78642,78654]"/>
  <match src="): ) [116409,116410]" dest="): ) [115036,115037]"/>
  <match src="internal: internal [9755,9763]" dest="internal: internal [10666,10674]"/>
  <match src="type_cast_expression [107321,107334]" dest="type_cast_expression [105174,105187]"/>
  <match src=",: , [83563,83564]" dest=",: , [81445,81446]"/>
  <match src="if: if [107266,107268]" dest="if: if [105118,105120]"/>
  <match src="identifier: OWNER [5414,5419]" dest="identifier: OWNER [5591,5596]"/>
  <match src="parameter [3863,3870]" dest="parameter [3975,3982]"/>
  <match src="string: string [44276,44282]" dest="string: string [41052,41058]"/>
  <match src="identifier: _token [106091,106097]" dest="identifier: _token [103918,103924]"/>
  <match src="comment: // and use 0 as a sentinel value [70757,70789]" dest="comment: // and use 0 as a sentinel value [68257,68289]"/>
  <match src=",: , [85293,85294]" dest=",: , [83239,83240]"/>
  <match src="parameter [106870,106884]" dest="parameter [104711,104725]"/>
  <match src=".: . [3223,3224]" dest=".: . [3319,3320]"/>
  <match src="identifier: bridgedToken [107084,107096]" dest="identifier: bridgedToken [104932,104944]"/>
  <match src=".: . [89815,89816]" dest=".: . [87882,87883]"/>
  <match src="): ) [93314,93315]" dest="): ) [91484,91485]"/>
  <match src="): ) [20288,20289]" dest="): ) [19839,19840]"/>
  <match src="call_argument [59139,59145]" dest="call_argument [56281,56287]"/>
  <match src=",: , [91497,91498]" dest=",: , [89612,89613]"/>
  <match src="identifier: _messageId [117258,117268]" dest="identifier: _messageId [115780,115790]"/>
  <match src="uint256: uint256 [29599,29606]" dest="uint256: uint256 [25757,25764]"/>
  <match src="function_body [12387,12559]" dest="function_body [13359,13534]"/>
  <match src="view: view [20834,20838]" dest="view: view [20387,20391]"/>
  <match src="identifier: a [64647,64648]" dest="identifier: a [61958,61959]"/>
  <match src="{: { [2503,2504]" dest="{: { [2581,2582]"/>
  <match src="identifier: to [100237,100239]" dest="identifier: to [98603,98605]"/>
  <match src="(: ( [6765,6766]" dest="(: ( [7600,7601]"/>
  <match src="): ) [6645,6646]" dest="): ) [7476,7477]"/>
  <match src="parameter [12597,12611]" dest="parameter [13574,13588]"/>
  <match src="identifier: this [112696,112700]" dest="identifier: this [111572,111576]"/>
  <match src="&gt;: &gt; [112218,112219]" dest="&gt;: &gt; [111813,111814]"/>
  <match src="address: address [107076,107083]" dest="address: address [104924,104931]"/>
  <match src="function_definition [23429,23581]" dest="function_definition [38284,38489]"/>
  <match src="returns: returns [46732,46739]" dest="returns: returns [43568,43575]"/>
  <match src="&quot;: &quot; [95345,95346]" dest="&quot;: &quot; [93563,93564]"/>
  <match src="view: view [24699,24703]" dest="view: view [23141,23145]"/>
  <match src="function: function [101350,101358]" dest="function: function [99747,99755]"/>
  <match src="call_argument [43583,43589]" dest="call_argument [40330,40336]"/>
  <match src="type_name [110409,110416]" dest="type_name [108986,108993]"/>
  <match src="primitive_type [109082,109089]" dest="primitive_type [106940,106947]"/>
  <match src="array_access [59084,59158]" dest="array_access [56226,56300]"/>
  <match src="(: ( [83851,83852]" dest="(: ( [81741,81742]"/>
  <match src="state_mutability [22184,22188]" dest="state_mutability [21739,21743]"/>
  <match src="binary_expression [115638,115665]" dest="binary_expression [114245,114272]"/>
  <match src="address: address [29391,29398]" dest="address: address [25544,25551]"/>
  <match src="identifier: isProxy [4922,4929]" dest="identifier: isProxy [5071,5078]"/>
  <match src="): ) [3838,3839]" dest="): ) [3950,3951]"/>
  <match src="function_definition [98918,99130]" dest="function_definition [97254,97469]"/>
  <match src="{: { [101440,101441]" dest="{: { [99837,99838]"/>
  <match src="}: } [90077,90078]" dest="}: } [88150,88151]"/>
  <match src="identifier: symbol [107408,107414]" dest="identifier: symbol [105263,105269]"/>
  <match src="): ) [71347,71348]" dest="): ) [68865,68866]"/>
  <match src="call_expression [91893,91909]" dest="call_expression [90021,90037]"/>
  <match src="}: } [97887,97888]" dest="}: } [96186,96187]"/>
  <match src="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [74238,74308]" dest="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [71841,71913]"/>
  <match src="{: { [111924,111925]" dest="{: { [111243,111244]"/>
  <match src="(: ( [81672,81673]" dest="(: ( [79498,79499]"/>
  <match src="): ) [91534,91535]" dest="): ) [89649,89650]"/>
  <match src="solidity_pragma_token [39926,39940]" dest="solidity_pragma_token [36369,36383]"/>
  <match src="&quot;: &quot; [46955,46956]" dest="&quot;: &quot; [43794,43795]"/>
  <match src="identifier: keccak256 [3210,3219]" dest="identifier: keccak256 [3306,3315]"/>
  <match src="&quot;: &quot; [3611,3612]" dest="&quot;: &quot; [3716,3717]"/>
  <match src="&quot;: &quot; [65130,65131]" dest="&quot;: &quot; [62458,62459]"/>
  <match src="expression_statement [116441,116505]" dest="expression_statement [115070,115134]"/>
  <match src="): ) [110758,110759]" dest="): ) [109253,109254]"/>
  <match src="view: view [46129,46133]" dest="view: view [42954,42958]"/>
  <match src="identifier: onlyOwner [102185,102194]" dest="identifier: onlyOwner [100618,100627]"/>
  <match src="call_argument [115740,115749]" dest="call_argument [114348,114357]"/>
  <match src="function: function [16554,16562]" dest="function: function [118334,118342]"/>
  <match src="call_argument [19726,19736]" dest="call_argument [19335,19345]"/>
  <match src="identifier: to [91381,91383]" dest="identifier: to [89494,89496]"/>
  <match src="type_name [31927,31934]" dest="type_name [28150,28157]"/>
  <match src="type_name [72952,72959]" dest="type_name [70510,70517]"/>
  <match src="identifier: to [94500,94502]" dest="identifier: to [92694,92696]"/>
  <match src="returns: returns [60805,60812]" dest="returns: returns [57998,58005]"/>
  <match src="function_definition [11774,11998]" dest="function_definition [12736,12962]"/>
  <match src="inheritance_specifier [49223,49230]" dest="inheritance_specifier [46119,46126]"/>
  <match src="=: = [45233,45234]" dest="=: = [42038,42039]"/>
  <match src=".: . [81919,81920]" dest=".: . [79749,79750]"/>
  <match src="identifier: symbol [112231,112237]" dest="identifier: symbol [111826,111832]"/>
  <match src="identifier: REQUEST_GAS_LIMIT [14138,14155]" dest="identifier: REQUEST_GAS_LIMIT [117544,117561]"/>
  <match src="contract_declaration [4162,6248]" dest="contract_declaration [4289,6451]"/>
  <match src="return_statement [23505,23575]" dest="return_statement [38380,38482]"/>
  <match src=",: , [20539,20540]" dest=",: , [20095,20096]"/>
  <match src="visibility [84925,84933]" dest="visibility [82846,82854]"/>
  <match src="yul_evm_builtin [35004,35009]" dest="yul_evm_builtin [31312,31317]"/>
  <match src="view: view [74379,74383]" dest="view: view [71985,71989]"/>
  <match src="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the key was removed from the map, that is if it was present.      */ [83145,83293]" dest="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the key was removed from the map, that is if it was present.      */ [81015,81167]"/>
  <match src="function_body [100654,100754]" dest="function_body [99031,99134]"/>
  <match src=",: , [89619,89620]" dest=",: , [87681,87682]"/>
  <match src="identifier: ERC721 [101648,101654]" dest="identifier: ERC721 [100059,100065]"/>
  <match src="public: public [88728,88734]" dest="public: public [86759,86765]"/>
  <match src="pure: pure [39796,39800]" dest="pure: pure [36234,36238]"/>
  <match src="(: ( [6722,6723]" dest="(: ( [7555,7556]"/>
  <match src="solidity_version: 0.7.0 [59245,59250]" dest="solidity_version: 0.7.0 [56394,56399]"/>
  <match src="call_argument [113351,113357]" dest="call_argument [109504,109510]"/>
  <match src=",: , [107002,107003]" dest=",: , [104847,104848]"/>
  <match src="comment: /**  * @title ERC721BridgeToken  * @dev template token contract for bridged ERC721 tokens.  */ [101523,101617]" dest="comment: /**  * @title ERC721BridgeToken  * @dev template token contract for bridged ERC721 tokens.  */ [99930,100027]"/>
  <match src="function_definition [54928,54977]" dest="function_definition [51957,52006]"/>
  <match src="number_literal: 0 [97690,97691]" dest="number_literal: 0 [95980,95981]"/>
  <match src="{: { [107066,107067]" dest="{: { [104913,104914]"/>
  <match src="binary_expression [67552,67557]" dest="binary_expression [64954,64959]"/>
  <match src="function_body [59960,60125]" dest="function_body [57126,57294]"/>
  <match src="): ) [111001,111002]" dest="): ) [120786,120787]"/>
  <match src="identifier: operator [92338,92346]" dest="identifier: operator [90478,90486]"/>
  <match src=".: . [100239,100240]" dest=".: . [98605,98606]"/>
  <match src="array_access [16328,16361]" dest="array_access [16812,16845]"/>
  <match src="yul_path [34471,34477]" dest="yul_path [30764,30770]"/>
  <match src="if: if [107398,107400]" dest="if: if [105253,105255]"/>
  <match src="return_type_definition [76623,76640]" dest="return_type_definition [74305,74322]"/>
  <match src="): ) [3642,3643]" dest="): ) [3747,3748]"/>
  <match src=",: , [11838,11839]" dest=",: , [12800,12801]"/>
  <match src="&quot;: &quot; [92898,92899]" dest="&quot;: &quot; [91053,91054]"/>
  <match src="identifier: major [40719,40724]" dest="identifier: major [37189,37194]"/>
  <match src="identifier: Map [81673,81676]" dest="identifier: Map [79499,79502]"/>
  <match src="identifier: _impl [53133,53138]" dest="identifier: _impl [50118,50123]"/>
  <match src="parameter [91160,91173]" dest="parameter [89265,89278]"/>
  <match src="(: ( [112204,112205]" dest="(: ( [111799,111800]"/>
  <match src="identifier: _tokenId [109090,109098]" dest="identifier: _tokenId [106948,106956]"/>
  <match src="true [21236,21240]" dest="true [20798,20802]"/>
  <match src="}: } [39819,39820]" dest="}: } [36258,36259]"/>
  <match src="primitive_type [42050,42057]" dest="primitive_type [109911,109918]"/>
  <match src=",: , [114350,114351]" dest=",: , [112959,112960]"/>
  <match src="view: view [72747,72751]" dest="view: view [70298,70302]"/>
  <match src="call_argument [107321,107345]" dest="call_argument [105174,105198]"/>
  <match src="primitive_type [84320,84327]" dest="primitive_type [82223,82230]"/>
  <match src=",: , [117539,117540]" dest=",: , [115965,115966]"/>
  <match src="): ) [43523,43524]" dest="): ) [40267,40268]"/>
  <match src="string [27302,27314]" dest="string [39304,39321]"/>
  <match src=",: , [94561,94562]" dest=",: , [92756,92757]"/>
  <match src="identifier: _nativeToken [47804,47816]" dest="identifier: _nativeToken [44665,44677]"/>
  <match src="(: ( [2561,2562]" dest="(: ( [2640,2641]"/>
  <match src="call_argument [66876,66877]" dest="call_argument [64261,64262]"/>
  <match src="call_expression [62731,62771]" dest="call_expression [59983,60023]"/>
  <match src="call_argument [24318,24328]" dest="call_argument [23947,23957]"/>
  <match src="view: view [59816,59820]" dest="view: view [56978,56982]"/>
  <match src="call_argument [91722,91729]" dest="call_argument [89843,89850]"/>
  <match src="address: address [117741,117748]" dest="address: address [116475,116482]"/>
  <match src="{: { [102197,102198]" dest="{: { [100630,100631]"/>
  <match src="type_name [78114,78124]" dest="type_name [75847,75857]"/>
  <match src="(: ( [82977,82978]" dest="(: ( [80843,80844]"/>
  <match src="return_type_definition [75737,75751]" dest="return_type_definition [73391,73405]"/>
  <match src="primitive_type [105341,105348]" dest="primitive_type [119901,119908]"/>
  <match src="comment: // Equivalent to !contains(map, key) [78812,78848]" dest="comment: // Equivalent to !contains(map, key) [76563,76599]"/>
  <match src="array_access [23512,23574]" dest="array_access [38387,38454]"/>
  <match src="function_definition [89505,90245]" dest="function_definition [87566,88321]"/>
  <match src="state_variable_declaration [55875,55899]" dest="state_variable_declaration [52932,52956]"/>
  <match src="member_expression [80567,80579]" dest="member_expression [78355,78367]"/>
  <match src=".: . [107334,107335]" dest=".: . [105187,105188]"/>
  <match src="function_definition [94943,95060]" dest="function_definition [93149,93268]"/>
  <match src="): ) [6419,6420]" dest="): ) [7244,7245]"/>
  <match src="identifier: IERC721Metadata [46244,46259]" dest="identifier: IERC721Metadata [43070,43085]"/>
  <match src="primitive_type [63005,63009]" dest="primitive_type [60265,60269]"/>
  <match src="yul_assignment [34997,35077]" dest="yul_assignment [31305,31385]"/>
  <match src="identifier: encodePacked [118756,118768]" dest="identifier: encodePacked [117027,117039]"/>
  <match src="identifier: IOwnable [54913,54921]" dest="identifier: IOwnable [51941,51949]"/>
  <match src="storage: storage [84604,84611]" dest="storage: storage [82518,82525]"/>
  <match src="(: ( [89971,89972]" dest="(: ( [88042,88043]"/>
  <match src="identifier: set [74350,74353]" dest="identifier: set [71956,71959]"/>
  <match src="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [64329,64553]" dest="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [61629,61862]"/>
  <match src="array_access [1016,1040]" dest="array_access [1046,1070]"/>
  <match src="identifier: _recipient [106966,106976]" dest="identifier: _recipient [104810,104820]"/>
  <match src="identifier: abi [45640,45643]" dest="identifier: abi [42455,42458]"/>
  <match src="identifier: _owner [105753,105759]" dest="identifier: _owner [120205,120211]"/>
  <match src="bytes: bytes [12293,12298]" dest="bytes: bytes [13265,13270]"/>
  <match src="memory: memory [43347,43353]" dest="memory: memory [40087,40093]"/>
  <match src="for: for [85399,85402]" dest="for: for [83347,83350]"/>
  <match src="type_name [118713,118719]" dest="type_name [116967,116973]"/>
  <match src=",: , [33199,33200]" dest=",: , [29456,29457]"/>
  <match src="(: ( [12404,12405]" dest="(: ( [13377,13378]"/>
  <match src="state_variable_declaration [55576,55632]" dest="state_variable_declaration [52626,52682]"/>
  <match src="uint256: uint256 [65443,65450]" dest="uint256: uint256 [62784,62791]"/>
  <match src="string [73457,73493]" dest="string [71030,71066]"/>
  <match src="[: [ [17257,17258]" dest="[: [ [17461,17462]"/>
  <match src="member_expression [97043,97064]" dest="member_expression [95307,95328]"/>
  <match src="identifier: require [12397,12404]" dest="identifier: require [13370,13377]"/>
  <match src="(: ( [82354,82355]" dest="(: ( [80201,80202]"/>
  <match src="(: ( [75493,75494]" dest="(: ( [73138,73139]"/>
  <match src=",: , [107807,107808]" dest=",: , [105632,105633]"/>
  <match src="{: { [37033,37034]" dest="{: { [33397,33398]"/>
  <match src="identifier: tokenImage [49819,49829]" dest="identifier: tokenImage [46731,46741]"/>
  <match src="(: ( [19709,19710]" dest="(: ( [19302,19303]"/>
  <match src="parameter [82355,82370]" dest="parameter [80202,80217]"/>
  <match src="contract_body [239,564]" dest="contract_body [247,579]"/>
  <match src="parameter [7347,7354]" dest="parameter [8200,8207]"/>
  <match src="user_defined_type [35916,35932]" dest="user_defined_type [32250,32266]"/>
  <match src="primitive_type [19478,19485]" dest="primitive_type [19142,19149]"/>
  <match src="parameter [11256,11273]" dest="parameter [12203,12220]"/>
  <match src="primitive_type [6809,6816]" dest="primitive_type [7644,7651]"/>
  <match src="parameter [109054,109072]" dest="parameter [106911,106929]"/>
  <match src="contract_body [85347,101445]" dest="contract_body [83293,99843]"/>
  <match src="block_statement [13454,13507]" dest="block_statement [14448,14503]"/>
  <match src="type_name [8186,8193]" dest="type_name [9070,9077]"/>
  <match src="(: ( [28980,28981]" dest="(: ( [25123,25124]"/>
  <match src="external: external [102594,102602]" dest="external: external [101038,101046]"/>
  <match src="view: view [24270,24274]" dest="view: view [23692,23696]"/>
  <match src="external: external [33239,33247]" dest="external: external [29496,29504]"/>
  <match src="type_name [43203,43210]" dest="type_name [39937,39944]"/>
  <match src="]: ] [43494,43495]" dest="]: ] [40238,40239]"/>
  <match src="): ) [83034,83035]" dest="): ) [80900,80901]"/>
  <match src="identifier: tokenId [97409,97416]" dest="identifier: tokenId [95690,95697]"/>
  <match src="parameter [94960,94975]" dest="parameter [93166,93181]"/>
  <match src="primitive_type [74613,74620]" dest="primitive_type [72226,72233]"/>
  <match src="bytes4: bytes4 [62955,62961]" dest="bytes4: bytes4 [60215,60221]"/>
  <match src="type_cast_expression [85007,85019]" dest="type_cast_expression [82929,82941]"/>
  <match src="identifier: _indexes [79057,79065]" dest="identifier: _indexes [76812,76820]"/>
  <match src="function_body [16871,16991]" dest="function_body [17065,17188]"/>
  <match src="constant: constant [715,723]" dest="constant: constant [738,746]"/>
  <match src="identifier: _symbol [88363,88370]" dest="identifier: _symbol [86383,86390]"/>
  <match src="identifier: symbol [107568,107574]" dest="identifier: symbol [105426,105432]"/>
  <match src="identifier: _inner [76215,76221]" dest="identifier: _inner [73884,73890]"/>
  <match src="binary_expression [5136,5159]" dest="binary_expression [5307,5330]"/>
  <match src="identifier: map [81090,81093]" dest="identifier: map [78896,78899]"/>
  <match src="modifier_invocation [45064,45073]" dest="modifier_invocation [41867,41876]"/>
  <match src="identifier: require [88777,88784]" dest="identifier: require [86809,86816]"/>
  <match src="if_statement [107136,107696]" dest="if_statement [104985,105518]"/>
  <match src="): ) [37525,37526]" dest="): ) [33900,33901]"/>
  <match src="primitive_type [2494,2501]" dest="primitive_type [2572,2579]"/>
  <match src="bool: bool [12850,12854]" dest="bool: bool [13831,13835]"/>
  <match src="visibility [5651,5657]" dest="visibility [5834,5840]"/>
  <match src="call_argument [116401,116409]" dest="call_argument [115028,115036]"/>
  <match src="binary_expression [72784,72808]" dest="binary_expression [70336,70360]"/>
  <match src="call_argument [112344,112383]" dest="call_argument [111931,111970]"/>
  <match src="(: ( [98410,98411]" dest="(: ( [96724,96725]"/>
  <match src="address: address [96226,96233]" dest="address: address [94467,94474]"/>
  <match src=".: . [118755,118756]" dest=".: . [117026,117027]"/>
  <match src="function_definition [91798,92007]" dest="function_definition [89925,90138]"/>
  <match src="identifier: _checkOnERC721Received [96338,96360]" dest="identifier: _checkOnERC721Received [94581,94603]"/>
  <match src="{: { [64323,64324]" dest="{: { [61622,61623]"/>
  <match src="function: function [31866,31874]" dest="function: function [28089,28097]"/>
  <match src="primitive_type [107012,107018]" dest="primitive_type [104858,104864]"/>
  <match src="): ) [107165,107166]" dest="): ) [105014,105015]"/>
  <match src="yul_evm_builtin [53145,53157]" dest="yul_evm_builtin [50130,50142]"/>
  <match src="call_argument [98752,98754]" dest="call_argument [97078,97080]"/>
  <match src="{: { [109127,109128]" dest="{: { [106986,106987]"/>
  <match src="type_name [86423,86450]" dest="type_name [84399,84426]"/>
  <match src="function_body [68187,68248]" dest="function_body [65607,65670]"/>
  <match src="identifier: abi [48818,48821]" dest="identifier: abi [45698,45701]"/>
  <match src="comment: // bytes32(uint256(keccak256('eip1967.proxy.implementation')) - 1) [56467,56533]" dest="comment: // bytes32(uint256(keccak256('eip1967.proxy.implementation')) - 1) [53542,53608]"/>
  <match src="primitive_type [90672,90679]" dest="primitive_type [88762,88769]"/>
  <match src="call_argument [46942,46950]" dest="call_argument [43781,43789]"/>
  <match src="identifier: stringStorage [45749,45762]" dest="identifier: stringStorage [42565,42578]"/>
  <match src="{: { [74622,74623]" dest="{: { [72235,72236]"/>
  <match src="(: ( [84586,84587]" dest="(: ( [82500,82501]"/>
  <match src="): ) [89814,89815]" dest="): ) [87881,87882]"/>
  <match src="primitive_type [18219,18226]" dest="primitive_type [17723,17730]"/>
  <match src="identifier: key [83573,83576]" dest="identifier: key [81455,81458]"/>
  <match src="struct_member [73589,73600]" dest="struct_member [71169,71180]"/>
  <match src="identifier: _tokenApprovals [100664,100679]" dest="identifier: _tokenApprovals [99042,99057]"/>
  <match src="): ) [10880,10881]" dest="): ) [11817,11818]"/>
  <match src="function: function [82086,82094]" dest="function: function [79926,79934]"/>
  <match src="(: ( [84989,84990]" dest="(: ( [82911,82912]"/>
  <match src="string [58650,58664]" dest="string [55778,55792]"/>
  <match src="identifier: _tokenURI [33558,33567]" dest="identifier: _tokenURI [29828,29837]"/>
  <match src="(: ( [16836,16837]" dest="(: ( [17030,17031]"/>
  <match src="): ) [96942,96943]" dest="): ) [95202,95203]"/>
  <match src=",: , [46698,46699]" dest=",: , [43534,43535]"/>
  <match src="): ) [81703,81704]" dest="): ) [79529,79530]"/>
  <match src="identifier: _token [111954,111960]" dest="identifier: _token [110110,110116]"/>
  <match src="identifier: getBridgeMode [39771,39784]" dest="identifier: getBridgeMode [36209,36222]"/>
  <match src="comment: /**      * @dev Tells the mediator contract address from the other network.      * @return the address of the mediator contract.      */ [16093,16229]" dest="comment: /**      * @dev Tells the mediator contract address from the other network.      * @return the address of the mediator contract.      */ [16572,16711]"/>
  <match src="primitive_type [8226,8230]" dest="primitive_type [9110,9114]"/>
  <match src="(: ( [48270,48271]" dest="(: ( [45140,45141]"/>
  <match src="call_expression [112956,112982]" dest="call_expression [112907,112933]"/>
  <match src="view: view [89370,89374]" dest="view: view [87424,87428]"/>
  <match src="identifier: getBridgeMode [40976,40989]" dest="identifier: getBridgeMode [37458,37471]"/>
  <match src="): ) [91058,91059]" dest="): ) [89157,89158]"/>
  <match src="assignment_expression [56700,56723]" dest="assignment_expression [53780,53803]"/>
  <match src="identifier: success [9941,9948]" dest="identifier: success [10856,10863]"/>
  <match src="bool: bool [72761,72765]" dest="bool: bool [70312,70316]"/>
  <match src="member_expression [18538,18566]" dest="member_expression [18051,18079]"/>
  <match src="call_expression [96338,96392]" dest="call_expression [94581,94635]"/>
  <match src=",: , [56319,56320]" dest=",: , [53387,53388]"/>
  <match src="call_expression [27275,27324]" dest="call_expression [39277,39331]"/>
  <match src="address: address [49853,49860]" dest="address: address [46765,46772]"/>
  <match src="identifier: _relayToken [37043,37054]" dest="identifier: _relayToken [33408,33419]"/>
  <match src="solidity_pragma_token [34572,34586]" dest="solidity_pragma_token [30872,30886]"/>
  <match src="(: ( [89569,89570]" dest="(: ( [87630,87631]"/>
  <match src="pragma: pragma [42705,42711]" dest="pragma: pragma [39423,39429]"/>
  <match src="function_body [14585,14717]" dest="function_body [15453,15626]"/>
  <match src="visibility [489,497]" dest="visibility [502,510]"/>
  <match src="(: ( [38495,38496]" dest="(: ( [34891,34892]"/>
  <match src="parameter [29815,29828]" dest="parameter [25982,25995]"/>
  <match src="view: view [49839,49843]" dest="view: view [46751,46755]"/>
  <match src="primitive_type [46321,46327]" dest="primitive_type [43148,43154]"/>
  <match src="return_statement [84967,85037]" dest="return_statement [82889,82959]"/>
  <match src="array_access [80567,80595]" dest="array_access [78355,78383]"/>
  <match src="member_expression [48715,48731]" dest="member_expression [45594,45610]"/>
  <match src="comment: /**      * @dev Tells the maximum gas limit that a message can use on its execution by the AMB bridge on the other network.      * @return the maximum gas limit value.      */ [18286,18461]" dest="comment: /**      * @dev Tells the maximum gas limit that a message can use on its execution by the AMB bridge on the other network.      * @return the maximum gas limit value.      */ [17794,17972]"/>
  <match src="member_expression [81865,81877]" dest="member_expression [79694,79706]"/>
  <match src="}: } [95985,95986]" dest="}: } [94220,94221]"/>
  <match src="primitive_type [113801,113808]" dest="primitive_type [112778,112785]"/>
  <match src="}: } [80910,80911]" dest="}: } [78709,78710]"/>
  <match src="returns: returns [81718,81725]" dest="returns: returns [79544,79551]"/>
  <match src=",: , [18954,18955]" dest=",: , [18588,18589]"/>
  <match src="type_name [90672,90679]" dest="type_name [88762,88769]"/>
  <match src="type_name [61066,61073]" dest="type_name [58265,58272]"/>
  <match src="view: view [81251,81255]" dest="view: view [79063,79067]"/>
  <match src="): ) [48872,48873]" dest="): ) [45752,45753]"/>
  <match src=",: , [3629,3630]" dest=",: , [3734,3735]"/>
  <match src="): ) [34381,34382]" dest="): ) [30672,30673]"/>
  <match src="function_definition [14892,15015]" dest="function_definition [15807,15932]"/>
  <match src="pragma_directive [104059,104081]" dest="pragma_directive [102548,102570]"/>
  <match src="primitive_type [44994,45000]" dest="primitive_type [41795,41801]"/>
  <match src="identifier: value [12430,12435]" dest="identifier: value [13403,13408]"/>
  <match src="string [64678,64707]" dest="string [61990,62019]"/>
  <match src="visibility [65493,65501]" dest="visibility [62834,62842]"/>
  <match src="call_argument [91718,91720]" dest="call_argument [89839,89841]"/>
  <match src="(: ( [35510,35511]" dest="(: ( [31827,31828]"/>
  <match src="bool: bool [46169,46173]" dest="bool: bool [42995,42999]"/>
  <match src="!: ! [5053,5054]" dest="!: ! [5223,5224]"/>
  <match src="): ) [38686,38687]" dest="): ) [35085,35086]"/>
  <match src="type_name [84948,84955]" dest="type_name [82869,82876]"/>
  <match src=",: , [68212,68213]" dest=",: , [65633,65634]"/>
  <match src="call_argument [46314,46318]" dest="call_argument [43141,43145]"/>
  <match src=",: , [109044,109045]" dest=",: , [106900,106901]"/>
  <match src="parenthesized_expression [46320,46328]" dest="parenthesized_expression [43147,43155]"/>
  <match src="identifier: this [9790,9794]" dest="identifier: this [10702,10706]"/>
  <match src="(: ( [44235,44236]" dest="(: ( [41011,41012]"/>
  <match src="): ) [35165,35166]" dest="): ) [31477,31478]"/>
  <match src=",: , [35577,35578]" dest=",: , [31894,31895]"/>
  <match src="bytes: bytes [12695,12700]" dest="bytes: bytes [13672,13677]"/>
  <match src="): ) [54795,54796]" dest="): ) [51813,51814]"/>
  <match src="): ) [74223,74224]" dest="): ) [71823,71824]"/>
  <match src="return_statement [79203,79216]" dest="return_statement [76962,76975]"/>
  <match src="(: ( [102214,102215]" dest="(: ( [100648,100649]"/>
  <match src="(: ( [20909,20910]" dest="(: ( [20463,20464]"/>
  <match src="state_mutability [24270,24274]" dest="state_mutability [23692,23696]"/>
  <match src="==: == [102258,102260]" dest="==: == [100692,100694]"/>
  <match src="contract_body [39577,39820]" dest="contract_body [36005,36259]"/>
  <match src="call_argument [114340,114350]" dest="call_argument [112949,112959]"/>
  <match src="string [96873,96907]" dest="string [95132,95166]"/>
  <match src="identifier: token [37498,37503]" dest="identifier: token [33873,33878]"/>
  <match src="identifier: EternalStorage [677,691]" dest="identifier: EternalStorage [699,713]"/>
  <match src="string_literal [114081,114093]" dest="string_literal [22760,22779]"/>
  <match src="primitive_type [117023,117027]" dest="primitive_type [120667,120671]"/>
  <match src="(: ( [24767,24768]" dest="(: ( [23393,23394]"/>
  <match src="primitive_type [42892,42899]" dest="primitive_type [39619,39626]"/>
  <match src="function: function [105143,105151]" dest="function: function [119766,119774]"/>
  <match src="identifier: BasicAMBMediator [35916,35932]" dest="identifier: BasicAMBMediator [32250,32266]"/>
  <match src="): ) [95391,95392]" dest="): ) [93609,93610]"/>
  <match src="}: } [76228,76229]" dest="}: } [73898,73899]"/>
  <match src="member_expression [23534,23550]" dest="member_expression [38409,38425]"/>
  <match src="yul_function_call [13334,13351]" dest="yul_function_call [14325,14342]"/>
  <match src="bytes32: bytes32 [5388,5395]" dest="bytes32: bytes32 [5565,5572]"/>
  <match src="identifier: a [67552,67553]" dest="identifier: a [64954,64955]"/>
  <match src="call_argument [38655,38665]" dest="call_argument [35054,35064]"/>
  <match src="variable_declaration_statement [97445,97478]" dest="variable_declaration_statement [95727,95760]"/>
  <match src="comment: /**      * @dev Internal function to set the base URI for all token IDs. It is      * automatically added as a prefix to the value returned in {tokenURI},      * or to the token ID if {tokenURI} is empty.      */ [99136,99348]" dest="comment: /**      * @dev Internal function to set the base URI for all token IDs. It is      * automatically added as a prefix to the value returned in {tokenURI},      * or to the token ID if {tokenURI} is empty.      */ [97477,97693]"/>
  <match src="type_name [14112,14119]" dest="type_name [117518,117525]"/>
  <match src="identifier: _token [23457,23463]" dest="identifier: _token [38334,38340]"/>
  <match src="): ) [2939,2940]" dest="): ) [3027,3028]"/>
  <match src="}: } [57128,57129]" dest="}: } [54218,54219]"/>
  <match src="identifier: to [96799,96801]" dest="identifier: to [95057,95059]"/>
  <match src="internal: internal [8203,8211]" dest="internal: internal [9087,9095]"/>
  <match src="visibility [103163,103171]" dest="visibility [101625,101633]"/>
  <match src="address: address [58533,58540]" dest="address: address [55660,55667]"/>
  <match src="variable_declaration_statement [100493,100542]" dest="variable_declaration_statement [98866,98915]"/>
  <match src="identifier: _to [33419,33422]" dest="identifier: _to [29685,29688]"/>
  <match src=",: , [95965,95966]" dest=",: , [94199,94200]"/>
  <match src="comment: /**      * @dev Returns the number of values on the set. O(1).      */ [76042,76112]" dest="comment: /**      * @dev Returns the number of values on the set. O(1).      */ [73707,73779]"/>
  <match src="(: ( [7346,7347]" dest="(: ( [8199,8200]"/>
  <match src="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/components/native/NFTMediatorBalanceStorage.sol [57848,57951]" dest="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/components/native/NFTMediatorBalanceStorage.sol [54958,55061]"/>
  <match src="call_argument [117522,117529]" dest="call_argument [115948,115955]"/>
  <match src="call_argument [98718,98720]" dest="call_argument [97042,97044]"/>
  <match src="comment: // To delete an element from the _values array in O(1), we swap the element to delete with the last one in [71401,71507]" dest="comment: // To delete an element from the _values array in O(1), we swap the element to delete with the last one in [68920,69026]"/>
  <match src="(: ( [81014,81015]" dest="(: ( [78819,78820]"/>
  <match src="identifier: selector [46267,46275]" dest="identifier: selector [43093,43101]"/>
  <match src="bool: bool [8226,8230]" dest="bool: bool [9110,9114]"/>
  <match src="(: ( [38637,38638]" dest="(: ( [35036,35037]"/>
  <match src="member_expression [50147,50165]" dest="member_expression [47068,47086]"/>
  <match src="primitive_type [70329,70336]" dest="primitive_type [67816,67823]"/>
  <match src="event_definition [40259,40373]" dest="event_definition [36716,36830]"/>
  <match src="identifier: tokenId [95484,95491]" dest="identifier: tokenId [93704,93711]"/>
  <match src="expression_statement [96987,97033]" dest="expression_statement [95249,95295]"/>
  <match src="type_name [32292,32299]" dest="type_name [28527,28534]"/>
  <match src="binary_expression [95452,95468]" dest="binary_expression [93672,93688]"/>
  <match src="identifier: data [12922,12926]" dest="identifier: data [13903,13907]"/>
  <match src="comment: // which will call bridgeSpecificActionsOnTokenTransfer. [38396,38452]" dest="comment: // which will call bridgeSpecificActionsOnTokenTransfer. [34789,34845]"/>
  <match src="type_name [72724,72731]" dest="type_name [70275,70282]"/>
  <match src="call_expression [9774,9847]" dest="call_expression [10686,10759]"/>
  <match src="variable_declaration_tuple [91224,91243]" dest="variable_declaration_tuple [89330,89349]"/>
  <match src="member_expression [70802,70814]" dest="member_expression [68303,68315]"/>
  <match src="binary_expression [111660,111683]" dest="binary_expression [110992,111015]"/>
  <match src="call_argument [98415,98453]" dest="call_argument [96729,96767]"/>
  <match src="): ) [40785,40786]" dest="): ) [37258,37259]"/>
  <match src="solidity_version:  0.7.5 [33331,33337]" dest="solidity_version:  0.7.5 [29593,29599]"/>
  <match src="identifier: c [64670,64671]" dest="identifier: c [61982,61983]"/>
  <match src="identifier: ApprovalForAll [29376,29390]" dest="identifier: ApprovalForAll [25529,25543]"/>
  <match src="string: string [56329,56335]" dest="string: string [53398,53404]"/>
  <match src="array_access [46294,46398]" dest="array_access [43121,43225]"/>
  <match src="==: == [89823,89825]" dest="==: == [87890,87892]"/>
  <match src="): ) [21855,21856]" dest="): ) [21409,21410]"/>
  <match src="solidity_pragma_token [633,647]" dest="solidity_pragma_token [652,666]"/>
  <match src="type_name [24713,24717]" dest="type_name [23155,23159]"/>
  <match src="primitive_type [18512,18519]" dest="primitive_type [18024,18031]"/>
  <match src="parameter [81673,81688]" dest="parameter [79499,79514]"/>
  <match src="returns: returns [66834,66841]" dest="returns: returns [64218,64225]"/>
  <match src="memory: memory [56336,56342]" dest="memory: memory [53405,53411]"/>
  <match src="visibility [34383,34391]" dest="visibility [30674,30682]"/>
  <match src="type_name [4203,4209]" dest="type_name [4331,4337]"/>
  <match src="identifier: _msgSender [92188,92198]" dest="identifier: _msgSender [90325,90335]"/>
  <match src="mapping: mapping [78283,78290]" dest="mapping: mapping [76020,76027]"/>
  <match src="==: == [102226,102228]" dest="==: == [100660,100662]"/>
  <match src="visibility [90496,90502]" dest="visibility [88579,88585]"/>
  <match src="(: ( [54967,54968]" dest="(: ( [51996,51997]"/>
  <match src="function_definition [110372,111166]" dest="function_definition [108948,109540]"/>
  <match src="-: - [65588,65589]" dest="-: - [62931,62932]"/>
  <match src="[: [ [16639,16640]" dest="[: [ [118420,118421]"/>
  <match src="yul_function_call [54345,54361]" dest="yul_function_call [51351,51367]"/>
  <match src="identifier: messageId [40238,40247]" dest="identifier: messageId [36693,36702]"/>
  <match src="identifier: sender [57424,57430]" dest="identifier: sender [54523,54529]"/>
  <match src=",: , [117037,117038]" dest=",: , [115606,115607]"/>
  <match src="function_body [78636,79232]" dest="function_body [76383,76993]"/>
  <match src="identifier: functionCallWithValue [12255,12276]" dest="identifier: functionCallWithValue [13227,13248]"/>
  <match src="string_literal [23972,23993]" dest="string_literal [38846,38863]"/>
  <match src="identifier: a [64579,64580]" dest="identifier: a [61889,61890]"/>
  <match src="identifier: isContract [109689,109699]" dest="identifier: isContract [107634,107644]"/>
  <match src="public: public [88996,89002]" dest="public: public [87036,87042]"/>
  <match src="expression_statement [20255,20290]" dest="expression_statement [19806,19841]"/>
  <match src=",: , [105230,105231]" dest=",: , [119855,119856]"/>
  <match src="): ) [118726,118727]" dest="): ) [116980,116981]"/>
  <match src=".: . [46209,46210]" dest=".: . [43035,43036]"/>
  <match src="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [76234,76556]" dest="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [73906,74237]"/>
  <match src="identifier: setCustomTokenAddressPair [109573,109598]" dest="identifier: setCustomTokenAddressPair [107517,107542]"/>
  <match src="call_argument [2237,2251]" dest="call_argument [2308,2322]"/>
  <match src="identifier: OWNER [5713,5718]" dest="identifier: OWNER [5897,5902]"/>
  <match src=".: . [36532,36533]" dest=".: . [32882,32883]"/>
  <match src="address: address [29191,29198]" dest="address: address [25339,25346]"/>
  <match src="return_statement [18238,18274]" dest="return_statement [17743,17779]"/>
  <match src="(: ( [88285,88286]" dest="(: ( [86303,86304]"/>
  <match src="address: address [93267,93274]" dest="address: address [91437,91444]"/>
  <match src="{: { [1915,1916]" dest="{: { [1979,1980]"/>
  <match src="type_cast_expression [43576,43590]" dest="type_cast_expression [40323,40337]"/>
  <match src="identifier: _symbol [89425,89432]" dest="identifier: _symbol [87480,87487]"/>
  <match src="variable_declaration_statement [71277,71318]" dest="variable_declaration_statement [68793,68834]"/>
  <match src="function_definition [89191,89281]" dest="function_definition [87238,87330]"/>
  <match src="primitive_type [1236,1243]" dest="primitive_type [1275,1282]"/>
  <match src="{: { [115667,115668]" dest="{: { [114274,114275]"/>
  <match src="expression_statement [109137,109180]" dest="expression_statement [106997,107040]"/>
  <match src="): ) [14642,14643]" dest="): ) [15542,15543]"/>
  <match src="(: ( [92270,92271]" dest="(: ( [90409,90410]"/>
  <match src="identifier: EternalStorage [58139,58153]" dest="identifier: EternalStorage [55258,55272]"/>
  <match src="address: address [31678,31685]" dest="address: address [27892,27899]"/>
  <match src="struct: struct [78051,78057]" dest="struct: struct [75782,75788]"/>
  <match src="type_name [82721,82724]" dest="type_name [80577,80580]"/>
  <match src="): ) [9950,9951]" dest="): ) [10865,10866]"/>
  <match src="call_argument [46244,46275]" dest="call_argument [43070,43101]"/>
  <match src="bool: bool [75446,75450]" dest="bool: bool [73090,73094]"/>
  <match src="identifier: _handleTokens [108511,108524]" dest="identifier: _handleTokens [106355,106368]"/>
  <match src="identifier: tokenId [98756,98763]" dest="identifier: tokenId [97082,97089]"/>
  <match src="number_literal: 0 [40812,40813]" dest="number_literal: 0 [37287,37288]"/>
  <match src=",: , [91616,91617]" dest=",: , [89733,89734]"/>
  <match src="identifier: _token [109204,109210]" dest="identifier: _token [107139,107145]"/>
  <match src="primitive_type [43367,43372]" dest="primitive_type [40107,40112]"/>
  <match src="type_name [23907,23914]" dest="type_name [38783,38787]"/>
  <match src="comment: /**      * @dev Returns the token collection name.      */ [43873,43931]" dest="comment: /**      * @dev Returns the token collection name.      */ [40636,40696]"/>
  <match src="(: ( [98708,98709]" dest="(: ( [97032,97033]"/>
  <match src=".: . [81303,81304]" dest=".: . [79116,79117]"/>
  <match src="parameter [83021,83034]" dest="parameter [80887,80900]"/>
  <match src="binary_expression [39153,39169]" dest="binary_expression [35563,35579]"/>
  <match src="comment: /**      * @dev Returns true if the key is in the map. O(1).      */ [80923,80991]" dest="comment: /**      * @dev Returns true if the key is in the map. O(1).      */ [78725,78795]"/>
  <match src="string: string [46943,46949]" dest="string: string [43782,43788]"/>
  <match src="identifier: index [90782,90787]" dest="identifier: index [88873,88878]"/>
  <match src="call_argument [76211,76221]" dest="call_argument [73880,73890]"/>
  <match src="visibility [18196,18204]" dest="visibility [17700,17708]"/>
  <match src="(: ( [46830,46831]" dest="(: ( [43668,43669]"/>
  <match src="(: ( [95962,95963]" dest="(: ( [94196,94197]"/>
  <match src="type_name [71129,71136]" dest="type_name [68643,68650]"/>
  <match src="}: } [116420,116421]" dest="}: } [115048,115049]"/>
  <match src="type_cast_expression [26260,26270]" dest="type_cast_expression [22121,22131]"/>
  <match src="number_literal: 1 [40809,40810]" dest="number_literal: 2 [37284,37285]"/>
  <match src="): ) [75136,75137]" dest="): ) [72764,72765]"/>
  <match src="binary_expression [41730,41778]" dest="binary_expression [111216,111241]"/>
  <match src="(: ( [110675,110676]" dest="(: ( [109169,109170]"/>
  <match src="type_name [101748,101754]" dest="type_name [100163,100169]"/>
  <match src="number_literal: 0 [26268,26269]" dest="number_literal: 0 [22129,22130]"/>
  <match src="{: { [71167,71168]" dest="{: { [68681,68682]"/>
  <match src="type_cast_expression [98575,98585]" dest="type_cast_expression [96894,96904]"/>
  <match src="identifier: registrationMessageId [113912,113933]" dest="identifier: suffix [103475,103481]"/>
  <match src="type_name [37001,37008]" dest="type_name [33364,33371]"/>
  <match src="memory: memory [89400,89406]" dest="memory: memory [87454,87460]"/>
  <match src="constant: constant [88100,88108]" dest="constant: constant [86113,86121]"/>
  <match src=".: . [100325,100326]" dest=".: . [98692,98693]"/>
  <match src="identifier: Address [16889,16896]" dest="identifier: Address [17084,17091]"/>
  <match src="(: ( [110770,110771]" dest="(: ( [109265,109266]"/>
  <match src="call_expression [112191,112250]" dest="call_expression [111786,111845]"/>
  <match src="call_expression [11352,11405]" dest="call_expression [12300,12353]"/>
  <match src="identifier: _setMediatorContractOnOtherSide [15311,15342]" dest="identifier: _setMediatorContractOnOtherSide [16235,16266]"/>
  <match src="identifier: _INTERFACE_ID_ERC721_ENUMERABLE [88109,88140]" dest="identifier: _INTERFACE_ID_ERC721_ENUMERABLE [86122,86153]"/>
  <match src="state_mutability [16006,16010]" dest="state_mutability [16481,16485]"/>
  <match src="&quot;: &quot; [3948,3949]" dest="&quot;: &quot; [4061,4062]"/>
  <match src="(: ( [63489,63490]" dest="(: ( [60764,60765]"/>
  <match src="inheritance_specifier [104408,104425]" dest="inheritance_specifier [102923,102940]"/>
  <match src=".: . [80350,80351]" dest=".: . [78133,78134]"/>
  <match src="member_expression [46813,46830]" dest="member_expression [43651,43668]"/>
  <match src="memory: memory [12870,12876]" dest="memory: memory [13851,13857]"/>
  <match src="contract_declaration [58101,59175]" dest="contract_declaration [55220,56319]"/>
  <match src="identifier: implementation [50991,51005]" dest="identifier: implementation [47938,47952]"/>
  <match src="identifier: _tokenId [37073,37081]" dest="identifier: _tokenId [33438,33446]"/>
  <match src="): ) [107333,107334]" dest="): ) [105186,105187]"/>
  <match src="identifier: messageFixed [20264,20276]" dest="identifier: messageFixed [19815,19827]"/>
  <match src="return_statement [80888,80901]" dest="return_statement [78686,78699]"/>
  <match src="call_argument [115219,115230]" dest="call_argument [113812,113823]"/>
  <match src="identifier: MapEntry [81840,81848]" dest="identifier: MapEntry [79669,79677]"/>
  <match src="return: return [64719,64725]" dest="return: return [62033,62039]"/>
  <match src="call_argument [100532,100540]" dest="call_argument [98905,98913]"/>
  <match src="): ) [102592,102593]" dest="): ) [101036,101037]"/>
  <match src="): ) [102284,102285]" dest="): ) [100718,100719]"/>
  <match src="identifier: executionDailyLimit [23850,23869]" dest="identifier: isRegisteredAsNativeToken [38720,38745]"/>
  <match src="identifier: keccak256 [46346,46355]" dest="identifier: keccak256 [43173,43182]"/>
  <match src="identifier: requireToPassMessage [111003,111023]" dest="identifier: requireToPassMessage [120788,120808]"/>
  <match src="comment: // All indexes are 1-based [82624,82650]" dest="comment: // All indexes are 1-based [80474,80500]"/>
  <match src="(: ( [92323,92324]" dest="(: ( [90463,90464]"/>
  <match src="parameter [40764,40776]" dest="parameter [37236,37248]"/>
  <match src="variable_declaration_statement [66214,66232]" dest="variable_declaration_statement [63580,63598]"/>
  <match src="identifier: keccak256 [45180,45189]" dest="identifier: keccak256 [41985,41994]"/>
  <match src="=: = [3645,3646]" dest="=: = [3750,3751]"/>
  <match src="return: return [72578,72584]" dest="return: return [70122,70128]"/>
  <match src="primitive_type [94420,94427]" dest="primitive_type [92613,92620]"/>
  <match src="uint256: uint256 [66843,66850]" dest="uint256: uint256 [64227,64234]"/>
  <match src=",: , [114913,114914]" dest=",: , [113534,113535]"/>
  <match src="comment: /**      * @dev Hook that is called before any token transfer. This includes minting      * and burning.      *      * Calling conditions:      *      * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be      * transferred to `to`.      * - When `from` is zero, `tokenId` will be minted for `to`.      * - When `to` is zero, ``from``'s `tokenId` will be burned.      * - `from` cannot be the zero address.      * - `to` cannot be the zero address.      *      * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].      */ [100760,101345]" dest="comment: /**      * @dev Hook that is called before any token transfer. This includes minting      * and burning.      *      * Calling conditions:      *      * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be      * transferred to `to`.      * - When `from` is zero, `tokenId` will be minted for `to`.      * - When `to` is zero, ``from``'s `tokenId` will be burned.      * - `from` cannot be the zero address.      * - `to` cannot be the zero address.      *      * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].      */ [99142,99741]"/>
  <match src="view: view [60527,60531]" dest="view: view [57714,57718]"/>
  <match src="function_body [102197,102312]" dest="function_body [100630,100748]"/>
  <match src="call_argument [46221,46276]" dest="call_argument [43047,43102]"/>
  <match src="if_statement [71328,72601]" dest="if_statement [68846,70146]"/>
  <match src="pragma_directive [39525,39547]" dest="pragma_directive [35951,35973]"/>
  <match src="address: address [9712,9719]" dest="address: address [10623,10630]"/>
  <match src=",: , [104537,104538]" dest=",: , [103057,103058]"/>
  <match src="identifier: _day [23061,23065]" dest="identifier: _state [39139,39145]"/>
  <match src="pragma_directive [60199,60222]" dest="pragma_directive [57374,57397]"/>
  <match src="type_name [101691,101698]" dest="type_name [100103,100110]"/>
  <match src="identifier: uintStorage [27263,27274]" dest="identifier: uintStorage [39265,39276]"/>
  <match src="&quot;: &quot; [89120,89121]" dest="&quot;: &quot; [87161,87162]"/>
  <match src="identifier: name [107276,107280]" dest="identifier: name [105128,105132]"/>
  <match src="identifier: _bridgedToken [109629,109642]" dest="identifier: _bridgedToken [107573,107586]"/>
  <match src="return_type_definition [82426,82443]" dest="return_type_definition [80273,80290]"/>
  <match src="type_name [48203,48210]" dest="type_name [45072,45079]"/>
  <match src="call_expression [105836,105851]" dest="call_expression [120293,120308]"/>
  <match src="pure: pure [40660,40664]" dest="pure: pure [37127,37131]"/>
  <match src="): ) [3641,3642]" dest="): ) [3746,3747]"/>
  <match src="(: ( [8225,8226]" dest="(: ( [9109,9110]"/>
  <match src="function_body [17570,17688]" dest="function_body [118706,118813]"/>
  <match src="primitive_type [115557,115564]" dest="primitive_type [114161,114168]"/>
  <match src="identifier: onlyOwner [45064,45073]" dest="identifier: onlyOwner [41867,41876]"/>
  <match src="pragma: pragma [28744,28750]" dest="pragma: pragma [24877,24883]"/>
  <match src="expression_statement [91478,91536]" dest="expression_statement [89593,89651]"/>
  <match src="event_definition [21792,21857]" dest="event_definition [21345,21411]"/>
  <match src="string: string [112120,112126]" dest="string: string [111315,111321]"/>
  <match src="expression_statement [107706,107763]" dest="expression_statement [105530,105587]"/>
  <match src="primitive_type [96255,96260]" dest="primitive_type [94496,94501]"/>
  <match src="primitive_type [98403,98410]" dest="primitive_type [96717,96724]"/>
  <match src="}: } [82232,82233]" dest="}: } [80074,80075]"/>
  <match src="primitive_type [13943,13950]" dest="primitive_type [14966,14973]"/>
  <match src="expression_statement [43539,43550]" dest="expression_statement [40284,40295]"/>
  <match src="): ) [103895,103896]" dest="): ) [102377,102378]"/>
  <match src="uint256: uint256 [76632,76639]" dest="uint256: uint256 [74314,74321]"/>
  <match src="identifier: b [67510,67511]" dest="identifier: b [64911,64912]"/>
  <match src="type_name [85996,86026]" dest="type_name [83957,83987]"/>
  <match src="identifier: value [84407,84412]" dest="identifier: value [82311,82316]"/>
  <match src="type_name [3129,3136]" dest="type_name [3224,3231]"/>
  <match src="{: { [35176,35177]" dest="{: { [31488,31489]"/>
  <match src="{: { [83060,83061]" dest="{: { [80926,80927]"/>
  <match src="identifier: _data [39063,39068]" dest="identifier: _data [35471,35476]"/>
  <match src="extcodehash: extcodehash [8687,8698]" dest="extcodehash: extcodehash [9578,9589]"/>
  <match src="solidity_version: 0.7.0 [28761,28766]" dest="solidity_version: 0.7.0 [24894,24899]"/>
  <match src="(: ( [112230,112231]" dest="(: ( [111825,111826]"/>
  <match src="modifier_invocation [110492,110517]" dest="modifier_invocation [109072,109097]"/>
  <match src="variable_declaration_statement [50975,51008]" dest="variable_declaration_statement [47922,47955]"/>
  <match src=".: . [85504,85505]" dest=".: . [83454,83455]"/>
  <match src="solidity_version:  0.7.5 [1129,1135]" dest="solidity_version:  0.7.5 [1165,1171]"/>
  <match src="primitive_type [85545,85552]" dest="primitive_type [83496,83503]"/>
  <match src="call_argument [74647,74657]" dest="call_argument [72261,72271]"/>
  <match src="pragma: pragma [43669,43675]" dest="pragma: pragma [40423,40429]"/>
  <match src="primitive_type [12850,12854]" dest="primitive_type [13831,13835]"/>
  <match src="identifier: _inner [84999,85005]" dest="identifier: _inner [82921,82927]"/>
  <match src="): ) [73908,73909]" dest="): ) [71498,71499]"/>
  <match src="call_argument [65096,65097]" dest="call_argument [62424,62425]"/>
  <match src="identifier: operator [92274,92282]" dest="identifier: operator [90413,90421]"/>
  <match src=",: , [105297,105298]" dest=",: , [119915,119916]"/>
  <match src="address: address [97008,97015]" dest="address: address [95270,95277]"/>
  <match src="primitive_type [65877,65884]" dest="primitive_type [63235,63242]"/>
  <match src="call_expression [108570,108610]" dest="call_expression [106415,106455]"/>
  <match src="}: } [15014,15015]" dest="}: } [15931,15932]"/>
  <match src="comment: // UintSet [75151,75161]" dest="comment: // UintSet [72783,72793]"/>
  <match src="type_cast_expression [4958,4971]" dest="type_cast_expression [5120,5133]"/>
  <match src="call_expression [93350,93453]" dest="call_expression [91521,91624]"/>
  <match src="?: ? [46301,46302]" dest="?: ? [43128,43129]"/>
  <match src="identifier: _tokenURIs [99092,99102]" dest="identifier: _tokenURIs [97430,97440]"/>
  <match src="identifier: burn [33465,33469]" dest="identifier: burn [29733,29737]"/>
  <match src="): ) [84724,84725]" dest="): ) [82639,82640]"/>
  <match src="block_statement [79134,79226]" dest="block_statement [76891,76986]"/>
  <match src="string_literal [3931,3949]" dest="string_literal [4044,4062]"/>
  <match src="call_expression [21177,21232]" dest="call_expression [20739,20794]"/>
  <match src="): ) [107345,107346]" dest="): ) [105198,105199]"/>
  <match src="identifier: mod [68204,68207]" dest="identifier: mod [65625,65628]"/>
  <match src="): ) [96975,96976]" dest="): ) [95235,95236]"/>
  <match src="function: function [947,955]" dest="function: function [976,984]"/>
  <match src="identifier: selector [112718,112726]" dest="identifier: selector [111594,111602]"/>
  <match src="address: address [26176,26183]" dest="address: address [22042,22049]"/>
  <match src="&quot;: &quot; [96445,96446]" dest="&quot;: &quot; [94688,94689]"/>
  <match src="identifier: IAMB [16020,16024]" dest="identifier: IAMB [16495,16499]"/>
  <match src="parameter [76133,76152]" dest="parameter [73801,73820]"/>
  <match src="user_defined_type [104493,104506]" dest="user_defined_type [103012,103025]"/>
  <match src="state_variable_declaration [55797,55819]" dest="state_variable_declaration [52852,52874]"/>
  <match src="(: ( [5296,5297]" dest="(: ( [5468,5469]"/>
  <match src="primitive_type [36268,36275]" dest="primitive_type [32611,32618]"/>
  <match src="identifier: target [10855,10861]" dest="identifier: target [11792,11798]"/>
  <match src="): ) [65523,65524]" dest="): ) [62864,62865]"/>
  <match src="member_expression [71298,71310]" dest="member_expression [68814,68826]"/>
  <match src="interface_declaration [28235,28682]" dest="interface_declaration [24353,24810]"/>
  <match src="primitive_type [70554,70561]" dest="primitive_type [68050,68057]"/>
  <match src="identifier: boolStorage [903,914]" dest="identifier: boolStorage [929,940]"/>
  <match src="type_name [106083,106090]" dest="type_name [103910,103917]"/>
  <match src="returns: returns [84939,84946]" dest="returns: returns [82860,82867]"/>
  <match src="}: } [8708,8709]" dest="}: } [9599,9600]"/>
  <match src="identifier: failedMessageSender [6922,6941]" dest="identifier: failedMessageSender [7761,7780]"/>
  <match src="function: function [859,867]" dest="function: function [884,892]"/>
  <match src="identifier: map [83852,83855]" dest="identifier: map [81742,81745]"/>
  <match src="return: return [72536,72542]" dest="return: return [70078,70084]"/>
  <match src="uint256: uint256 [73365,73372]" dest="uint256: uint256 [70937,70944]"/>
  <match src="external: external [19331,19339]" dest="external: external [18972,18980]"/>
  <match src="function_definition [84198,84422]" dest="function_definition [82100,82327]"/>
  <match src="contract_body [54922,54979]" dest="contract_body [51950,52009]"/>
  <match src="call_argument [112425,112429]" dest="call_argument [112022,112026]"/>
  <match src="}: } [103219,103220]" dest="}: } [101683,101684]"/>
  <match src=".: . [47770,47771]" dest=".: . [44631,44632]"/>
  <match src="expression_statement [59084,59167]" dest="expression_statement [56226,56309]"/>
  <match src="string_literal [91630,91688]" dest="string_literal [89748,89806]"/>
  <match src="identifier: set [73511,73514]" dest="identifier: set [71085,71088]"/>
  <match src="uint256: uint256 [102857,102864]" dest="uint256: uint256 [101310,101317]"/>
  <match src="state_variable_declaration [55638,55690]" dest="state_variable_declaration [52690,52742]"/>
  <match src="primitive_type [34362,34367]" dest="primitive_type [30653,30658]"/>
  <match src="call_expression [68824,68853]" dest="call_expression [66261,66290]"/>
  <match src="inheritance_specifier [62263,62270]" dest="inheritance_specifier [59501,59508]"/>
  <match src="internal: internal [18196,18204]" dest="internal: internal [17700,17708]"/>
  <match src="-: - [80018,80019]" dest="-: - [77795,77796]"/>
  <match src="primitive_type [12632,12639]" dest="primitive_type [13609,13616]"/>
  <match src="identifier: _token [23565,23571]" dest="identifier: _token [38445,38451]"/>
  <match src="block_statement [78810,79128]" dest="block_statement [76561,76885]"/>
  <match src="identifier: IERC721 [43858,43865]" dest="identifier: IERC721 [40619,40626]"/>
  <match src="): ) [85033,85034]" dest="): ) [82955,82956]"/>
  <match src="(: ( [46766,46767]" dest="(: ( [43603,43604]"/>
  <match src="event_paramater [29217,29240]" dest="event_paramater [25365,25388]"/>
  <match src="parameter [82435,82442]" dest="parameter [80282,80289]"/>
  <match src="}: } [7425,7426]" dest="}: } [8281,8282]"/>
  <match src="return_statement [81083,81113]" dest="return_statement [78889,78919]"/>
  <match src="=: = [46799,46800]" dest="=: = [43636,43637]"/>
  <match src="identifier: functionCallWithValue [11904,11925]" dest="identifier: functionCallWithValue [12867,12888]"/>
  <match src="(: ( [107784,107785]" dest="(: ( [105609,105610]"/>
  <match src="if_statement [89796,89870]" dest="if_statement [87863,87939]"/>
  <match src="solidity: solidity [633,641]" dest="solidity: solidity [652,660]"/>
  <match src="function_definition [8166,8776]" dest="function_definition [9050,9669]"/>
  <match src="identifier: index [73450,73455]" dest="identifier: index [71023,71028]"/>
  <match src="(: ( [18218,18219]" dest="(: ( [17722,17723]"/>
  <match src="(: ( [252,253]" dest="(: ( [261,262]"/>
  <match src="type_name [86103,86131]" dest="type_name [84067,84095]"/>
  <match src="user_defined_type [49223,49230]" dest="user_defined_type [46119,46126]"/>
  <match src="block_statement [72564,72601]" dest="block_statement [70107,70146]"/>
  <match src="primitive_type [78303,78310]" dest="primitive_type [76040,76047]"/>
  <match src="identifier: abi [20893,20896]" dest="identifier: abi [20447,20450]"/>
  <match src="visibility [542,550]" dest="visibility [556,564]"/>
  <match src="pragma_directive [54,76]" dest="pragma_directive [56,78]"/>
  <match src="primitive_type [483,487]" dest="primitive_type [496,500]"/>
  <match src="): ) [2264,2265]" dest="): ) [2335,2336]"/>
  <match src="): ) [51006,51007]" dest="): ) [47953,47954]"/>
  <match src="virtual: virtual [92718,92725]" dest="virtual: virtual [90871,90878]"/>
  <match src="identifier: to [93275,93277]" dest="identifier: to [91445,91447]"/>
  <match src="call_argument [48294,48307]" dest="call_argument [45164,45177]"/>
  <match src="visibility [34636,34644]" dest="visibility [30939,30947]"/>
  <match src="parameter [71161,71165]" dest="parameter [68675,68679]"/>
  <match src="type_name [89026,89033]" dest="type_name [87066,87073]"/>
  <match src="return_type_definition [10891,10913]" dest="return_type_definition [11828,11850]"/>
  <match src="function_body [3181,3273]" dest="function_body [3276,3370]"/>
  <match src=".: . [115654,115655]" dest=".: . [114261,114262]"/>
  <match src="comment: // Look for revert reason and bubble it up if present [13012,13065]" dest="comment: // Look for revert reason and bubble it up if present [13997,14050]"/>
  <match src="(: ( [992,993]" dest="(: ( [1021,1022]"/>
  <match src="function: function [94371,94379]" dest="function: function [92564,92572]"/>
  <match src="{: { [50437,50438]" dest="{: { [47371,47372]"/>
  <match src=",: , [108549,108550]" dest=",: , [106393,106394]"/>
  <match src="): ) [65038,65039]" dest="): ) [62365,62366]"/>
  <match src="identifier: _requestGasLimit [17588,17604]" dest="identifier: _gasLimit [118725,118734]"/>
  <match src="user_defined_type [21698,21705]" dest="user_defined_type [21251,21258]"/>
  <match src="public: public [90496,90502]" dest="public: public [88579,88585]"/>
  <match src="): ) [46327,46328]" dest="): ) [43154,43155]"/>
  <match src="=: = [80596,80597]" dest="=: = [78384,78385]"/>
  <match src="): ) [75500,75501]" dest="): ) [73145,73146]"/>
  <match src="): ) [6141,6142]" dest="): ) [6340,6341]"/>
  <match src="primitive_type [92456,92463]" dest="primitive_type [90602,90609]"/>
  <match src="parameter [83765,83793]" dest="parameter [81654,81682]"/>
  <match src="external: external [7392,7400]" dest="external: external [8247,8255]"/>
  <match src="yul_function_call [54780,54796]" dest="yul_function_call [51798,51814]"/>
  <match src="primitive_type [61028,61035]" dest="primitive_type [58227,58234]"/>
  <match src=",: , [112726,112727]" dest=",: , [111602,111603]"/>
  <match src="string_literal [9986,9988]" dest="string_literal [10901,10903]"/>
  <match src="call_argument [118769,118774]" dest="call_argument [117040,117045]"/>
  <match src=",: , [112165,112166]" dest=",: , [111360,111361]"/>
  <match src="identifier: symbol [89354,89360]" dest="identifier: symbol [87408,87414]"/>
  <match src="{: { [83827,83828]" dest="{: { [81716,81717]"/>
  <match src="address: address [98245,98252]" dest="address: address [96557,96564]"/>
  <match src="primitive_type [86355,86361]" dest="primitive_type [84328,84334]"/>
  <match src="view: view [89003,89007]" dest="view: view [87043,87047]"/>
  <match src="function: function [90866,90874]" dest="function: function [88963,88971]"/>
  <match src="): ) [95433,95434]" dest="): ) [93652,93653]"/>
  <match src="yul_path [35579,35584]" dest="yul_path [31896,31901]"/>
  <match src="primitive_type [29561,29568]" dest="primitive_type [25719,25726]"/>
  <match src="identifier: burn [102852,102856]" dest="identifier: burn [101305,101309]"/>
  <match src="identifier: ReentrancyGuard [34598,34613]" dest="identifier: ReentrancyGuard [30900,30915]"/>
  <match src="address: address [92456,92463]" dest="address: address [90602,90609]"/>
  <match src="true: true [72543,72547]" dest="true: true [70085,70089]"/>
  <match src="call_argument [23972,23993]" dest="call_argument [38846,38863]"/>
  <match src="call_argument [4977,5021]" dest="call_argument [5145,5189]"/>
  <match src="call_argument [113366,113374]" dest="call_argument [109523,109531]"/>
  <match src="type_name [102563,102570]" dest="type_name [101007,101014]"/>
  <match src="view: view [45548,45552]" dest="view: view [42362,42366]"/>
  <match src="external: external [29576,29584]" dest="external: external [25734,25742]"/>
  <match src="identifier: tokenId [29783,29790]" dest="identifier: tokenId [25950,25957]"/>
  <match src="): ) [5301,5302]" dest="): ) [5473,5474]"/>
  <match src="type_name [37434,37441]" dest="type_name [33808,33815]"/>
  <match src="call_argument [88802,88803]" dest="call_argument [86834,86835]"/>
  <match src="string_literal [47784,47802]" dest="string_literal [44645,44663]"/>
  <match src="identifier: _token [24255,24261]" dest="identifier: _token [23677,23683]"/>
  <match src="parameter [25564,25583]" dest="parameter [22607,22620]"/>
  <match src="return_statement [88862,88899]" dest="return_statement [86896,86933]"/>
  <match src="boolean_literal [70905,70910]" dest="boolean_literal [68409,68414]"/>
  <match src="identifier: _tokenURIs [97659,97669]" dest="identifier: _tokenURIs [95949,95959]"/>
  <match src="parameter [16020,16024]" dest="parameter [16495,16499]"/>
  <match src="type_name [65574,65581]" dest="type_name [62917,62924]"/>
  <match src="primitive_type [91205,91212]" dest="primitive_type [89310,89317]"/>
  <match src="return_statement [75985,76030]" dest="return_statement [73647,73692]"/>
  <match src="identifier: ERC721Reader [104452,104464]" dest="identifier: ERC721Reader [102969,102981]"/>
  <match src="call_expression [97084,97113]" dest="call_expression [95350,95379]"/>
  <match src="state_variable_declaration [698,805]" dest="state_variable_declaration [721,828]"/>
  <match src="call_expression [110718,110777]" dest="call_expression [109213,109272]"/>
  <match src="(: ( [48817,48818]" dest="(: ( [45697,45698]"/>
  <match src="pragma: pragma [1114,1120]" dest="pragma: pragma [1150,1156]"/>
  <match src="is: is [40068,40070]" dest="is: is [36518,36520]"/>
  <match src="comment: /**      * @dev Handles the bridged token that are native to this chain.      * Checks that the bridged token is inside the execution limits and invokes the Unlock accordingly.      * @param _token address of the native ERC721 token contract.      * @param _recipient address that will receive the tokens.      * @param _tokenId unique id of the bridged token.      */ [108623,108991]" dest="comment: /**      * @dev Handles the bridged token that are native to this chain.      * Checks that the bridged token is inside the execution limits and invokes the Unlock accordingly.      * @param _token address of the native ERC721 token contract.      * @param _recipient address that will receive the tokens.      * @param _tokenId unique id of the bridged token.      */ [106471,106845]"/>
  <match src="public: public [93081,93087]" dest="public: public [91244,91250]"/>
  <match src="identifier: isKnownToken [111746,111758]" dest="identifier: isDisabled [23728,23738]"/>
  <match src="type_name [67432,67438]" dest="type_name [64832,64838]"/>
  <match src="identifier: tokenURI [89514,89522]" dest="identifier: tokenURI [87575,87583]"/>
  <match src="primitive_type [92471,92478]" dest="primitive_type [90617,90624]"/>
  <match src="binary_expression [78795,78808]" dest="binary_expression [76546,76559]"/>
  <match src="(: ( [115188,115189]" dest="(: ( [113781,113782]"/>
  <match src="identifier: tokenId [97873,97880]" dest="identifier: tokenId [96171,96178]"/>
  <match src="}: } [60126,60127]" dest="}: } [57296,57297]"/>
  <match src="visibility [117954,117962]" dest="visibility [110012,110020]"/>
  <match src="[: [ [23523,23524]" dest="[: [ [38398,38399]"/>
  <match src="identifier: add [97061,97064]" dest="identifier: add [95325,95328]"/>
  <match src="pragma: pragma [104059,104065]" dest="pragma: pragma [102548,102554]"/>
  <match src="primitive_type [88085,88091]" dest="primitive_type [86098,86104]"/>
  <match src="identifier: abi [21187,21190]" dest="identifier: abi [20749,20752]"/>
  <match src="bytes32: bytes32 [18219,18226]" dest="bytes32: bytes32 [17723,17730]"/>
  <match src="identifier: _name [101762,101767]" dest="identifier: _name [100177,100182]"/>
  <match src="): ) [112175,112176]" dest="): ) [111370,111371]"/>
  <match src="parameter [98957,98980]" dest="parameter [97293,97316]"/>
  <match src="primitive_type [15255,15262]" dest="primitive_type [16178,16185]"/>
  <match src="override: override [93331,93339]" dest="override: override [91501,91509]"/>
  <match src="(: ( [16888,16889]" dest="(: ( [17083,17084]"/>
  <match src="primitive_type [56358,56364]" dest="primitive_type [53428,53434]"/>
  <match src="function_definition [23841,24011]" dest="function_definition [38711,38886]"/>
  <match src="call_argument [110750,110758]" dest="call_argument [109245,109253]"/>
  <match src="return_statement [76196,76223]" dest="return_statement [73865,73892]"/>
  <match src="call_argument [98486,98490]" dest="call_argument [96802,96806]"/>
  <match src="identifier: IERC721 [85303,85310]" dest="identifier: IERC721 [83249,83256]"/>
  <match src="): ) [94577,94578]" dest="): ) [92772,92773]"/>
  <match src="parameter [23870,23884]" dest="parameter [38746,38760]"/>
  <match src="external: external [107044,107052]" dest="external: external [104891,104899]"/>
  <match src="identifier: _token [109038,109044]" dest="identifier: _token [106894,106900]"/>
  <match src="identifier: EnumerableSet [85422,85435]" dest="identifier: EnumerableSet [83371,83384]"/>
  <match src="string [96394,96446]" dest="string [94637,94689]"/>
  <match src="identifier: map [83003,83006]" dest="identifier: map [80869,80872]"/>
  <match src="internal: internal [45539,45547]" dest="internal: internal [42353,42361]"/>
  <match src="type_name [75910,75917]" dest="type_name [73571,73578]"/>
  <match src="address: address [93253,93260]" dest="address: address [91423,91430]"/>
  <match src="function_body [6102,6246]" dest="function_body [6300,6448]"/>
  <match src="type_name [42087,42094]" dest="type_name [18186,18193]"/>
  <match src="return_type_definition [81058,81072]" dest="return_type_definition [78863,78877]"/>
  <match src="primitive_type [9712,9727]" dest="primitive_type [10623,10638]"/>
  <match src="type_name [110460,110467]" dest="type_name [109039,109046]"/>
  <match src="expression_statement [108511,108561]" dest="expression_statement [106355,106405]"/>
  <match src="): ) [97147,97148]" dest="): ) [95415,95416]"/>
  <match src="type_cast_expression [111983,111996]" dest="type_cast_expression [110139,110152]"/>
  <match src="primitive_type [7133,7140]" dest="primitive_type [7978,7985]"/>
  <match src="(: ( [6178,6179]" dest="(: ( [6378,6379]"/>
  <match src="primitive_type [80035,80042]" dest="primitive_type [77813,77820]"/>
  <match src="(: ( [74392,74393]" dest="(: ( [71998,71999]"/>
  <match src="return_type_definition [92510,92524]" dest="return_type_definition [90656,90670]"/>
  <match src="identifier: nativeTokenAddress [112956,112974]" dest="identifier: nativeTokenAddress [112907,112925]"/>
  <match src="yul_evm_builtin [54768,54774]" dest="yul_evm_builtin [51786,51792]"/>
  <match src="=&gt;: =&gt; [531,533]" dest="=&gt;: =&gt; [545,547]"/>
  <match src=".: . [38517,38518]" dest=".: . [34914,34915]"/>
  <match src="call_argument [92805,92846]" dest="call_argument [90960,91001]"/>
  <match src=".: . [12418,12419]" dest=".: . [13391,13392]"/>
  <match src="binary_expression [107270,107293]" dest="binary_expression [105122,105145]"/>
  <match src="type_name [23053,23060]" dest="type_name [39131,39138]"/>
  <match src=",: , [36483,36484]" dest=",: , [32831,32832]"/>
  <match src="call_expression [23955,24002]" dest="call_expression [38829,38872]"/>
  <match src="(: ( [21125,21126]" dest="(: ( [20686,20687]"/>
  <match src="modifier_invocation [108434,108446]" dest="modifier_invocation [106275,106287]"/>
  <match src="call_argument [112471,112480]" dest="call_argument [112078,112087]"/>
  <match src="array_access [92542,92567]" dest="array_access [90689,90714]"/>
  <match src="primitive_type [20300,20307]" dest="primitive_type [19853,19860]"/>
  <match src="parameter [105365,105379]" dest="parameter [119926,119940]"/>
  <match src="comment: // Enumerable mapping from token ids to their owners [85939,85991]" dest="comment: // Enumerable mapping from token ids to their owners [83899,83951]"/>
  <match src="user_defined_type [82721,82724]" dest="user_defined_type [80577,80580]"/>
  <match src="=: = [4249,4250]" dest="=: = [4377,4378]"/>
  <match src="primitive_type [109054,109061]" dest="primitive_type [106911,106918]"/>
  <match src="return: return [40801,40807]" dest="return: return [37276,37282]"/>
  <match src=".: . [46819,46820]" dest=".: . [43657,43658]"/>
  <match src="parameter [78630,78634]" dest="parameter [76377,76381]"/>
  <match src="}: } [16664,16665]" dest="}: } [118446,118447]"/>
  <match src="call_argument [68211,68212]" dest="call_argument [65632,65633]"/>
  <match src="address: address [59838,59845]" dest="address: address [57000,57007]"/>
  <match src="address: address [6383,6390]" dest="address: address [7206,7213]"/>
  <match src="(: ( [110749,110750]" dest="(: ( [109244,109245]"/>
  <match src="identifier: Map [78568,78571]" dest="identifier: Map [76315,76318]"/>
  <match src="type_name [86443,86449]" dest="type_name [84419,84425]"/>
  <match src="boolean_literal [116325,116330]" dest="boolean_literal [114951,114956]"/>
  <match src="parameter [74158,74162]" dest="parameter [71757,71761]"/>
  <match src="(: ( [84340,84341]" dest="(: ( [82243,82244]"/>
  <match src="function_definition [108996,109246]" dest="function_definition [106851,107182]"/>
  <match src="(: ( [90781,90782]" dest="(: ( [88872,88873]"/>
  <match src="identifier: transferFrom [38518,38530]" dest="identifier: transferFrom [34915,34927]"/>
  <match src="block_statement [71349,72558]" dest="block_statement [68867,70101]"/>
  <match src="visibility [111624,111632]" dest="visibility [110941,110949]"/>
  <match src="user_defined_type [104309,104320]" dest="user_defined_type [102820,102831]"/>
  <match src="view: view [6709,6713]" dest="view: view [7542,7546]"/>
  <match src="bool: bool [55378,55382]" dest="bool: bool [52423,52427]"/>
  <match src=",: , [85301,85302]" dest=",: , [83247,83248]"/>
  <match src="): ) [16579,16580]" dest="): ) [118359,118360]"/>
  <match src="(: ( [1561,1562]" dest="(: ( [1611,1612]"/>
  <match src="call_argument [94530,94578]" dest="call_argument [92725,92773]"/>
  <match src="uint256: uint256 [61066,61073]" dest="uint256: uint256 [58265,58272]"/>
  <match src="visibility [14944,14952]" dest="visibility [15859,15867]"/>
  <match src=",: , [33422,33423]" dest=",: , [29688,29689]"/>
  <match src="]: ] [90777,90778]" dest="]: ] [88868,88869]"/>
  <match src=",: , [70620,70621]" dest=",: , [68117,68118]"/>
  <match src="comment: // The easiest way to bubble the revert reason is using memory via assembly [13123,13198]" dest="comment: // The easiest way to bubble the revert reason is using memory via assembly [14110,14185]"/>
  <match src="identifier: set [76670,76673]" dest="identifier: set [74353,74356]"/>
  <match src="internal: internal [10882,10890]" dest="internal: internal [11819,11827]"/>
  <match src="): ) [3179,3180]" dest="): ) [3274,3275]"/>
  <match src="user_defined_type [85295,85301]" dest="user_defined_type [83241,83247]"/>
  <match src="string: string [55772,55778]" dest="string: string [52826,52832]"/>
  <match src="primitive_type [10900,10905]" dest="primitive_type [11837,11842]"/>
  <match src="override: override [91848,91856]" dest="override: override [89975,89983]"/>
  <match src="address: address [39093,39100]" dest="address: address [35501,35508]"/>
  <match src="): ) [882,883]" dest="): ) [907,908]"/>
  <match src="primitive_type [113825,113832]" dest="primitive_type [112803,112810]"/>
  <match src="parameter [39093,39110]" dest="parameter [35501,35518]"/>
  <match src=",: , [45599,45600]" dest=",: , [42414,42415]"/>
  <match src="identifier: tokenId [98709,98716]" dest="identifier: tokenId [97033,97040]"/>
  <match src=",: , [115547,115548]" dest=",: , [114150,114151]"/>
  <match src="(: ( [2911,2912]" dest="(: ( [2999,3000]"/>
  <match src=",: , [104349,104350]" dest=",: , [102861,102862]"/>
  <match src="call_argument [75474,75484]" dest="call_argument [73119,73129]"/>
  <match src="identifier: require [25614,25621]" dest="identifier: require [22652,22659]"/>
  <match src="{: { [57620,57621]" dest="{: { [54722,54723]"/>
  <match src="identifier: lastIndex [71749,71758]" dest="identifier: lastIndex [69273,69282]"/>
  <match src="comment: /**      * @dev Updates the implementation contract address.      * Only the bridge and bridge owner can call this method.      * @param _implementation address of the new implementation.      */ [57141,57336]" dest="comment: /**      * @dev Updates the implementation contract address.      * Only the bridge and bridge owner can call this method.      * @param _implementation address of the new implementation.      */ [54234,54433]"/>
  <match src="(: ( [57419,57420]" dest="(: ( [54518,54519]"/>
  <match src="identifier: push [70656,70660]" dest="identifier: push [68154,68158]"/>
  <match src="type_name [60541,60548]" dest="type_name [57728,57735]"/>
  <match src="(: ( [4999,5000]" dest="(: ( [5167,5168]"/>
  <match src="): ) [15007,15008]" dest="): ) [15923,15924]"/>
  <match src="binary_expression [57420,57448]" dest="binary_expression [54519,54547]"/>
  <match src="struct_declaration [73561,73606]" dest="struct_declaration [71140,71187]"/>
  <match src="primitive_type [94408,94415]" dest="primitive_type [92601,92608]"/>
  <match src="(: ( [74216,74217]" dest="(: ( [71816,71817]"/>
  <match src="public: public [101699,101705]" dest="public: public [100111,100117]"/>
  <match src="bytes: bytes [100211,100216]" dest="bytes: bytes [98577,98582]"/>
  <match src="}: } [6247,6248]" dest="}: } [6450,6451]"/>
  <match src="function: function [12246,12254]" dest="function: function [13218,13226]"/>
  <match src="primitive_type [36362,36368]" dest="primitive_type [32708,32714]"/>
  <match src="): ) [22175,22176]" dest="): ) [21730,21731]"/>
  <match src="bytes32: bytes32 [82435,82442]" dest="bytes32: bytes32 [80282,80289]"/>
  <match src=".: . [83855,83856]" dest=".: . [81745,81746]"/>
  <match src="primitive_type [114923,114927]" dest="primitive_type [113545,113549]"/>
  <match src="visibility [16862,16870]" dest="visibility [17056,17064]"/>
  <match src="type_name [7190,7197]" dest="type_name [8038,8045]"/>
  <match src="visibility [58567,58573]" dest="visibility [55694,55700]"/>
  <match src="(: ( [1235,1236]" dest="(: ( [1274,1275]"/>
  <match src="gas: gas [53126,53129]" dest="gas: gas [50111,50114]"/>
  <match src="return_type_definition [89017,89034]" dest="return_type_definition [87057,87074]"/>
  <match src="=: = [97459,97460]" dest="=: = [95741,95742]"/>
  <match src="&quot;: &quot; [45136,45137]" dest="&quot;: &quot; [41940,41941]"/>
  <match src="identifier: _owner [105349,105355]" dest="identifier: _owner [119909,119915]"/>
  <match src="): ) [105791,105792]" dest="): ) [120244,120245]"/>
  <match src=",: , [10014,10015]" dest=",: , [10930,10931]"/>
  <match src="function: function [116982,116990]" dest="function: function [115546,115554]"/>
  <match src="identifier: _token [114241,114247]" dest="identifier: _token [110241,110247]"/>
  <match src="uint256: uint256 [71277,71284]" dest="uint256: uint256 [68793,68800]"/>
  <match src="(: ( [115729,115730]" dest="(: ( [114337,114338]"/>
  <match src="expression_statement [39226,39266]" dest="expression_statement [35638,35678]"/>
  <match src="&quot;: &quot; [43182,43183]" dest="&quot;: &quot; [39914,39915]"/>
  <match src="identifier: addressStorage [2520,2534]" dest="identifier: addressStorage [2599,2613]"/>
  <match src="identifier: TokenImageStorage [104470,104487]" dest="identifier: TokenImageStorage [102988,103005]"/>
  <match src=".: . [75780,75781]" dest=".: . [73435,73436]"/>
  <match src="solidity_version:  0.7.5 [4044,4050]" dest="solidity_version:  0.7.5 [4163,4169]"/>
  <match src="): ) [106228,106229]" dest="): ) [104056,104057]"/>
  <match src=".: . [91050,91051]" dest=".: . [89149,89150]"/>
  <match src="primitive_type [3129,3136]" dest="primitive_type [3224,3231]"/>
  <match src="parameter [64616,64623]" dest="parameter [61926,61933]"/>
  <match src="(: ( [91485,91486]" dest="(: ( [89600,89601]"/>
  <match src="type_name [56389,56396]" dest="type_name [53460,53467]"/>
  <match src="member_expression [82473,82485]" dest="member_expression [80321,80333]"/>
  <match src="view: view [92496,92500]" dest="view: view [90642,90646]"/>
  <match src="bytes: bytes [107402,107407]" dest="bytes: bytes [105257,105262]"/>
  <match src="variable_declaration_statement [107182,107209]" dest="variable_declaration_statement [105032,105059]"/>
  <match src="(: ( [34466,34467]" dest="(: ( [30759,30760]"/>
  <match src="internal: internal [4210,4218]" dest="internal: internal [4338,4346]"/>
  <match src="storage: storage [82995,83002]" dest="storage: storage [80861,80868]"/>
  <match src="): ) [110706,110707]" dest="): ) [109200,109201]"/>
  <match src="identifier: sender [102031,102037]" dest="identifier: sender [100457,100463]"/>
  <match src="}: } [35639,35640]" dest="}: } [31958,31959]"/>
  <match src="): ) [98324,98325]" dest="): ) [96637,96638]"/>
  <match src="primitive_type [43503,43508]" dest="primitive_type [40247,40252]"/>
  <match src="address: address [40279,40286]" dest="address: address [36736,36743]"/>
  <match src="(: ( [111076,111077]" dest="(: ( [120862,120863]"/>
  <match src="solidity_version:  0.7.5 [55093,55099]" dest="solidity_version:  0.7.5 [52127,52133]"/>
  <match src="primitive_type [91225,91232]" dest="primitive_type [89331,89338]"/>
  <match src="): ) [114101,114102]" dest="): ) [22787,22788]"/>
  <match src="type_cast_expression [89800,89815]" dest="type_cast_expression [87867,87882]"/>
  <match src="]: ] [55541,55542]" dest="]: ] [52590,52591]"/>
  <match src="type_name [105205,105212]" dest="type_name [119830,119837]"/>
  <match src="call_argument [88785,88804]" dest="call_argument [86817,86836]"/>
  <match src="bytes32: bytes32 [6809,6816]" dest="bytes32: bytes32 [7644,7651]"/>
  <match src="call_argument [20387,20397]" dest="call_argument [19941,19951]"/>
  <match src="call_argument [112747,112755]" dest="call_argument [111623,111631]"/>
  <match src="bytes: bytes [36317,36322]" dest="bytes: bytes [32662,32667]"/>
  <match src="primitive_type [373,380]" dest="primitive_type [384,391]"/>
  <match src="primitive_type [12312,12319]" dest="primitive_type [13284,13291]"/>
  <match src="member_expression [112199,112245]" dest="member_expression [111794,111840]"/>
  <match src="address: address [110409,110416]" dest="address: address [108986,108993]"/>
  <match src="identifier: newOwner [6083,6091]" dest="identifier: newOwner [6281,6289]"/>
  <match src="identifier: Map [79417,79420]" dest="identifier: Map [77185,77188]"/>
  <match src="bool: bool [95303,95307]" dest="bool: bool [93520,93524]"/>
  <match src="parameter [91819,91834]" dest="parameter [89946,89961]"/>
  <match src="contract_declaration [49193,50238]" dest="contract_declaration [46089,47162]"/>
  <match src="is: is [43855,43857]" dest="is: is [40616,40618]"/>
  <match src="contract_body [55295,57846]" dest="contract_body [52338,54954]"/>
  <match src="): ) [5209,5210]" dest="): ) [5380,5381]"/>
  <match src="): ) [74224,74225]" dest="): ) [71824,71825]"/>
  <match src="array_access [70802,70821]" dest="array_access [68303,68322]"/>
  <match src="): ) [57599,57600]" dest="): ) [54700,54701]"/>
  <match src="visibility [6486,6494]" dest="visibility [7313,7321]"/>
  <match src="type_name [18219,18226]" dest="type_name [17723,17730]"/>
  <match src="identifier: impl [57038,57042]" dest="identifier: impl [54127,54131]"/>
  <match src="view: view [48189,48193]" dest="view: view [45058,45062]"/>
  <match src="identifier: _to [102643,102646]" dest="identifier: _to [101088,101091]"/>
  <match src="state_variable_declaration [88085,88154]" dest="state_variable_declaration [86098,86167]"/>
  <match src="(: ( [88978,88979]" dest="(: ( [87018,87019]"/>
  <match src="parameter [93279,93294]" dest="parameter [91449,91464]"/>
  <match src="function: function [84841,84849]" dest="function: function [82762,82770]"/>
  <match src="bytes32: bytes32 [6766,6773]" dest="bytes32: bytes32 [7601,7608]"/>
  <match src="comment: /**      * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.      * Use along with {totalSupply} to enumerate all tokens.      */ [60837,61001]" dest="comment: /**      * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.      * Use along with {totalSupply} to enumerate all tokens.      */ [58032,58199]"/>
  <match src="address: address [47673,47680]" dest="address: address [44533,44540]"/>
  <match src="internal: internal [84630,84638]" dest="internal: internal [82544,82552]"/>
  <match src="call_argument [14625,14641]" dest="call_argument [15535,15541]"/>
  <match src="(: ( [61872,61873]" dest="(: ( [59094,59095]"/>
  <match src="(: ( [3913,3914]" dest="(: ( [4026,4027]"/>
  <match src="member_expression [4701,4711]" dest="member_expression [4842,4852]"/>
  <match src="identifier: codehash [8726,8734]" dest="identifier: codehash [9618,9626]"/>
  <match src="inheritance_specifier [1900,1914]" dest="inheritance_specifier [1964,1978]"/>
  <match src="parameter [41024,41036]" dest="parameter [37506,37518]"/>
  <match src="type_name [31146,31153]" dest="type_name [27345,27352]"/>
  <match src="visibility [7266,7274]" dest="visibility [8117,8125]"/>
  <match src="type_name [55418,55445]" dest="type_name [52464,52491]"/>
  <match src="address: address [36268,36275]" dest="address: address [32611,32618]"/>
  <match src="function_definition [92430,92584]" dest="function_definition [90576,90732]"/>
  <match src="call_argument [96377,96384]" dest="call_argument [94620,94627]"/>
  <match src="public: public [91402,91408]" dest="public: public [89515,89521]"/>
  <match src="call_expression [88518,88567]" dest="call_expression [86542,86591]"/>
  <match src="binary_expression [66163,66169]" dest="binary_expression [63525,63531]"/>
  <match src="(: ( [3610,3611]" dest="(: ( [3715,3716]"/>
  <match src="address: address [21326,21333]" dest="address: address [20864,20871]"/>
  <match src="parameter [116191,116209]" dest="parameter [114813,114831]"/>
  <match src="visibility [55543,55550]" dest="visibility [52592,52599]"/>
  <match src="type_name [72761,72765]" dest="type_name [70312,70316]"/>
  <match src="comment: /**  * @dev Required interface of an ERC721 compliant contract.  */ [28770,28837]" dest="comment: /**  * @dev Required interface of an ERC721 compliant contract.  */ [24906,24975]"/>
  <match src="}: } [114367,114368]" dest="}: } [112977,112978]"/>
  <match src="uint256: uint256 [102576,102583]" dest="uint256: uint256 [101020,101027]"/>
  <match src="return_type_definition [60805,60830]" dest="return_type_definition [57998,58023]"/>
  <match src="call_argument [100520,100530]" dest="call_argument [98893,98903]"/>
  <match src="type_name [44994,45000]" dest="type_name [41795,41801]"/>
  <match src="primitive_type [93064,93071]" dest="primitive_type [91227,91234]"/>
  <match src="): ) [27322,27323]" dest="): ) [39329,39330]"/>
  <match src="variable_declaration_statement [108457,108501]" dest="variable_declaration_statement [106299,106343]"/>
  <match src="member_expression [78763,78775]" dest="member_expression [76512,76524]"/>
  <match src="identifier: tokenByIndex [91147,91159]" dest="identifier: tokenByIndex [89252,89264]"/>
  <match src="): ) [92523,92524]" dest="): ) [90669,90670]"/>
  <match src="(: ( [108524,108525]" dest="(: ( [106368,106369]"/>
  <match src="call_argument [118752,118790]" dest="call_argument [117023,117054]"/>
  <match src="identifier: Proxy [55289,55294]" dest="identifier: Proxy [52332,52337]"/>
  <match src="returns: returns [41015,41022]" dest="returns: returns [37497,37504]"/>
  <match src="type_name [100050,100057]" dest="type_name [98410,98417]"/>
  <match src="view: view [43961,43965]" dest="view: view [40727,40731]"/>
  <match src="call_argument [117258,117268]" dest="call_argument [115780,115790]"/>
  <match src="type_name [74393,74397]" dest="type_name [71999,72003]"/>
  <match src="string: string [112064,112070]" dest="string: string [111727,111733]"/>
  <match src="contract_body [6329,7426]" dest="contract_body [6538,8282]"/>
  <match src="identifier: _entries [82593,82601]" dest="identifier: _entries [80443,80451]"/>
  <match src="&quot;: &quot; [20923,20924]" dest="&quot;: &quot; [20477,20478]"/>
  <match src="view: view [34645,34649]" dest="view: view [30948,30952]"/>
  <match src="parameter [91866,91873]" dest="parameter [89993,90000]"/>
  <match src="identifier: bridgeContract [56700,56714]" dest="identifier: bridgeContract [53780,53794]"/>
  <match src="expression_statement [57412,57500]" dest="expression_statement [54511,54599]"/>
  <match src="type_name [95402,95409]" dest="type_name [93621,93628]"/>
  <match src="uint256: uint256 [84377,84384]" dest="uint256: uint256 [82281,82288]"/>
  <match src="identifier: uintStorage [2873,2884]" dest="identifier: uintStorage [2961,2972]"/>
  <match src="}: } [13447,13448]" dest="}: } [14441,14442]"/>
  <match src="type_cast_expression [84399,84413]" dest="type_cast_expression [82303,82317]"/>
  <match src="function_body [90532,90564]" dest="function_body [88615,88649]"/>
  <match src="call_argument [51025,51044]" dest="call_argument [47973,47992]"/>
  <match src="return: return [43569,43575]" dest="return: return [40316,40322]"/>
  <match src="type_name [39417,39424]" dest="type_name [35837,35844]"/>
  <match src="identifier: _isNative [115127,115136]" dest="identifier: _isNative [113718,113727]"/>
  <match src="(: ( [19485,19486]" dest="(: ( [19149,19150]"/>
  <match src="primitive_type [46182,46187]" dest="primitive_type [43008,43013]"/>
  <match src="member_expression [112304,112326]" dest="member_expression [111886,111908]"/>
  <match src="call_argument [91554,91616]" dest="call_argument [89671,89733]"/>
  <match src="(: ( [90918,90919]" dest="(: ( [89015,89016]"/>
  <match src="string [68214,68240]" dest="string [65635,65661]"/>
  <match src="]: ] [97677,97678]" dest="]: ] [95967,95968]"/>
  <match src="state_mutability [62982,62986]" dest="state_mutability [60242,60246]"/>
  <match src="): ) [45145,45146]" dest="): ) [41949,41950]"/>
  <match src="identifier: NFTBridgeLimits [21679,21694]" dest="identifier: NFTBridgeLimits [21232,21247]"/>
  <match src="state_mutability [54954,54958]" dest="state_mutability [51983,51987]"/>
  <match src="identifier: totalSupply [60504,60515]" dest="identifier: totalSupply [57691,57702]"/>
  <match src="array_access [72157,72183]" dest="array_access [69689,69715]"/>
  <match src="contract_declaration [85267,101445]" dest="contract_declaration [83213,99843]"/>
  <match src="virtual: virtual [91409,91416]" dest="virtual: virtual [89522,89529]"/>
  <match src="{: { [81073,81074]" dest="{: { [78878,78879]"/>
  <match src="identifier: _tokenId [108375,108383]" dest="identifier: _tokenId [106214,106222]"/>
  <match src="identifier: _setDailyLimit [27192,27206]" dest="identifier: _setNativeTokenIsRegistered [39087,39114]"/>
  <match src="override: override [88740,88748]" dest="override: override [86771,86779]"/>
  <match src="{: { [66171,66172]" dest="{: { [63533,63534]"/>
  <match src=",: , [12537,12538]" dest=",: , [13511,13512]"/>
  <match src="parameter [6855,6873]" dest="parameter [7692,7710]"/>
  <match src="parameter [21126,21144]" dest="parameter [20687,20705]"/>
  <match src="identifier: from [100374,100378]" dest="identifier: from [98743,98747]"/>
  <match src="type_name [84617,84624]" dest="type_name [82531,82538]"/>
  <match src="&quot;: &quot; [68214,68215]" dest="&quot;: &quot; [65635,65636]"/>
  <match src="function: function [5897,5905]" dest="function: function [6088,6096]"/>
  <match src=".: . [57455,57456]" dest=".: . [54554,54555]"/>
  <match src="identifier: _recipient [109218,109228]" dest="identifier: _recipient [107153,107163]"/>
  <match src="parameter [83054,83058]" dest="parameter [80920,80924]"/>
  <match src="=: = [88346,88347]" dest="=: = [86365,86366]"/>
  <match src="identifier: _tokenId [59030,59038]" dest="identifier: _tokenId [56169,56177]"/>
  <match src="member_expression [75474,75484]" dest="member_expression [73119,73129]"/>
  <match src="assignment_expression [107488,107591]" dest="assignment_expression [105346,105449]"/>
  <match src="solidity: solidity [4036,4044]" dest="solidity: solidity [4155,4163]"/>
  <match src="): ) [63508,63509]" dest="): ) [60783,60784]"/>
  <match src="library: library [64306,64313]" dest="library: library [61605,61612]"/>
  <match src="): ) [6185,6186]" dest="): ) [6385,6386]"/>
  <match src="solidity: solidity [39926,39934]" dest="solidity: solidity [36369,36377]"/>
  <match src="type_name [46104,46111]" dest="type_name [42929,42936]"/>
  <match src="yul_hex_number: 0x6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e92 [35010,35076]" dest="yul_hex_number: 0x6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e92 [31318,31384]"/>
  <match src="string_literal [66879,66907]" dest="string_literal [64264,64292]"/>
  <match src="identifier: key [80827,80830]" dest="identifier: key [78621,78624]"/>
  <match src="(: ( [92667,92668]" dest="(: ( [90820,90821]"/>
  <match src="primitive_type [116191,116198]" dest="primitive_type [114813,114820]"/>
  <match src="): ) [105509,105510]" dest="): ) [120074,120075]"/>
  <match src="return: return [90542,90548]" dest="return: return [88626,88632]"/>
  <match src="primitive_type [107182,107188]" dest="primitive_type [105032,105038]"/>
  <match src="): ) [109103,109104]" dest="): ) [106962,106963]"/>
  <match src="function_body [111642,113382]" dest="function_body [110973,112429]"/>
  <match src="variable_declaration_tuple [9935,9951]" dest="variable_declaration_tuple [10850,10866]"/>
  <match src="(: ( [36443,36444]" dest="(: ( [32791,32792]"/>
  <match src="function_definition [102843,102936]" dest="function_definition [101296,101391]"/>
  <match src="comment: // we register support for ERC165 itself here [62677,62722]" dest="comment: // we register support for ERC165 itself here [59928,59973]"/>
  <match src="): ) [95278,95279]" dest="): ) [93495,93496]"/>
  <match src="interface: interface [54903,54912]" dest="interface: interface [51931,51940]"/>
  <match src="function_definition [100004,100593]" dest="function_definition [98364,98968]"/>
  <match src="parameter [83344,83355]" dest="parameter [81219,81230]"/>
  <match src=",: , [37060,37061]" dest=",: , [33425,33426]"/>
  <match src="return: return [66862,66868]" dest="return: return [64247,64253]"/>
  <match src="returns: returns [22197,22204]" dest="returns: returns [21752,21759]"/>
  <match src="address: address [24247,24254]" dest="address: address [23669,23676]"/>
  <match src="function: function [47644,47652]" dest="function: function [44504,44512]"/>
  <match src="string: string [55843,55849]" dest="string: string [52899,52905]"/>
  <match src="=: = [107243,107244]" dest="=: = [105094,105095]"/>
  <match src="identifier: abi [45773,45776]" dest="identifier: abi [42589,42592]"/>
  <match src="call_argument [110805,110811]" dest="call_argument [109302,109308]"/>
  <match src="contract_body [1915,3973]" dest="contract_body [1979,4088]"/>
  <match src="visibility [70569,70576]" dest="visibility [68065,68072]"/>
  <match src="identifier: _INTERFACE_ID_ERC721 [87415,87435]" dest="identifier: _INTERFACE_ID_ERC721 [85410,85430]"/>
  <match src="function: function [75676,75684]" dest="function: function [73330,73338]"/>
  <match src="expression_statement [6207,6240]" dest="expression_statement [6408,6441]"/>
  <match src="type_name [43367,43372]" dest="type_name [40107,40112]"/>
  <match src="=: = [66224,66225]" dest="=: = [63590,63591]"/>
  <match src="primitive_type [6680,6687]" dest="primitive_type [7513,7520]"/>
  <match src="user_defined_type [84854,84870]" dest="user_defined_type [82775,82791]"/>
  <match src="memory: memory [39056,39062]" dest="memory: memory [35464,35470]"/>
  <match src=",: , [109619,109620]" dest=",: , [107563,107564]"/>
  <match src="call_expression [117174,117193]" dest="call_expression [113651,113682]"/>
  <match src="): ) [73850,73851]" dest="): ) [71439,71440]"/>
  <match src="}: } [75810,75811]" dest="}: } [73466,73467]"/>
  <match src="{: { [12709,12710]" dest="{: { [13686,13687]"/>
  <match src="identifier: _relayToken [37486,37497]" dest="identifier: _relayToken [33861,33872]"/>
  <match src="[: [ [17643,17644]" dest="[: [ [118774,118775]"/>
  <match src="type_name [56329,56335]" dest="type_name [53398,53404]"/>
  <match src="identifier: owner [92561,92566]" dest="identifier: owner [90708,90713]"/>
  <match src="parameter [92682,92692]" dest="parameter [90835,90845]"/>
  <match src="type_name [76177,76184]" dest="type_name [73845,73852]"/>
  <match src="uint256: uint256 [90919,90926]" dest="uint256: uint256 [89016,89023]"/>
  <match src="call_argument [2928,2938]" dest="call_argument [3016,3026]"/>
  <match src="identifier: errorMessage [13479,13491]" dest="identifier: errorMessage [14474,14486]"/>
  <match src="contract_body [49231,50238]" dest="contract_body [46127,47162]"/>
  <match src="identifier: abi [100509,100512]" dest="identifier: abi [98882,98885]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [11418,11769]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [12369,12730]"/>
  <match src="internal: internal [95280,95288]" dest="internal: internal [93497,93505]"/>
  <match src="identifier: OwnershipTransferred [4512,4532]" dest="identifier: OwnershipTransferred [4647,4667]"/>
  <match src="primitive_type [76014,76021]" dest="primitive_type [73676,73683]"/>
  <match src=",: , [93481,93482]" dest=",: , [91653,91654]"/>
  <match src="function_body [89585,90245]" dest="function_body [87646,88321]"/>
  <match src="function_definition [46661,46963]" dest="function_definition [43497,43803]"/>
  <match src=",: , [85005,85006]" dest=",: , [82927,82928]"/>
  <match src="comment: /**      * @dev Stores the bridged token of a message sent to the AMB bridge.      * @param _messageId of the message sent to the bridge.      * @param _token bridged token address.      */ [1921,2110]" dest="comment: /**      * @dev Stores the bridged token of a message sent to the AMB bridge.      * @param _messageId of the message sent to the bridge.      * @param _token bridged token address.      */ [1986,2179]"/>
  <match src="type_name [96238,96245]" dest="type_name [94479,94486]"/>
  <match src=",: , [45137,45138]" dest=",: , [41941,41942]"/>
  <match src="variable_declaration [95402,95415]" dest="variable_declaration [93621,93634]"/>
  <match src="identifier: value [11940,11945]" dest="identifier: value [12903,12908]"/>
  <match src="function_body [24290,24406]" dest="function_body [23712,23966]"/>
  <match src="state_mutability [90709,90713]" dest="state_mutability [88799,88803]"/>
  <match src="type_name [81727,81734]" dest="type_name [79553,79560]"/>
  <match src="==: == [66255,66257]" dest="==: == [63622,63624]"/>
  <match src=".: . [73432,73433]" dest=".: . [71005,71006]"/>
  <match src="function_body [10914,10996]" dest="function_body [11851,11935]"/>
  <match src="identifier: handleBridgedNFT [112701,112717]" dest="identifier: handleBridgedNFT [111577,111593]"/>
  <match src="type_name [76632,76639]" dest="type_name [74314,74321]"/>
  <match src="type_name [26192,26199]" dest="type_name [22058,22062]"/>
  <match src="}: } [28681,28682]" dest="}: } [24809,24810]"/>
  <match src="type_name [63490,63496]" dest="type_name [60765,60771]"/>
  <match src="): ) [39438,39439]" dest="): ) [35859,35860]"/>
  <match src="address: address [4556,4563]" dest="address: address [4691,4698]"/>
  <match src="primitive_type [118745,118751]" dest="primitive_type [117016,117022]"/>
  <match src="comment: /**      * @dev Internal function for reducing onlyMediator modifier bytecode overhead.      */ [14446,14541]" dest="comment: /**      * @dev Internal function for reducing onlyMediator modifier bytecode overhead.      */ [15311,15408]"/>
  <match src="type_cast_expression [89972,89988]" dest="type_cast_expression [88043,88059]"/>
  <match src="parameter [94408,94418]" dest="parameter [92601,92611]"/>
  <match src="call_expression [63537,63603]" dest="call_expression [60813,60879]"/>
  <match src="expression_statement [45166,45243]" dest="expression_statement [41971,42048]"/>
  <match src="call_argument [20926,20936]" dest="call_argument [20480,20490]"/>
  <match src="call_argument [115710,115716]" dest="call_argument [114318,114324]"/>
  <match src="returns: returns [24275,24282]" dest="returns: returns [23697,23704]"/>
  <match src="(: ( [102026,102027]" dest="(: ( [100452,100453]"/>
  <match src="): ) [29828,29829]" dest="): ) [25995,25996]"/>
  <match src="primitive_type [11873,11878]" dest="primitive_type [12835,12840]"/>
  <match src="return_statement [64719,64728]" dest="return_statement [62033,62042]"/>
  <match src="(: ( [21894,21895]" dest="(: ( [21445,21446]"/>
  <match src="primitive_type [86239,86246]" dest="primitive_type [84206,84213]"/>
  <match src="call_argument [76014,76028]" dest="call_argument [73676,73690]"/>
  <match src="visibility [26213,26221]" dest="visibility [22073,22081]"/>
  <match src="): ) [46118,46119]" dest="): ) [42943,42944]"/>
  <match src="boolean_literal [109212,109216]" dest="boolean_literal [107147,107151]"/>
  <match src="call_expression [74181,74225]" dest="call_expression [71781,71825]"/>
  <match src="identifier: b [64590,64591]" dest="identifier: b [61900,61901]"/>
  <match src="primitive_type [51034,51041]" dest="primitive_type [47982,47989]"/>
  <match src="type_name [10863,10868]" dest="type_name [11800,11805]"/>
  <match src="(: ( [102856,102857]" dest="(: ( [101309,101310]"/>
  <match src="function_body [81745,81934]" dest="function_body [79571,79765]"/>
  <match src="call_argument [11926,11932]" dest="call_argument [12889,12895]"/>
  <match src="parameter [31146,31158]" dest="parameter [27345,27357]"/>
  <match src=".: . [9963,9964]" dest=".: . [10878,10879]"/>
  <match src="function: function [116111,116119]" dest="function: function [114730,114738]"/>
  <match src="call_argument [12738,12744]" dest="call_argument [13716,13722]"/>
  <match src="identifier: _inner [73878,73884]" dest="identifier: _inner [71468,71474]"/>
  <match src="address: address [96791,96798]" dest="address: address [95049,95056]"/>
  <match src="returns: returns [59829,59836]" dest="returns: returns [56991,56998]"/>
  <match src="call_expression [109734,109766]" dest="call_expression [107680,107712]"/>
  <match src="call_argument [19510,19591]" dest="call_argument [19175,19246]"/>
  <match src=".: . [4971,4972]" dest=".: . [5133,5134]"/>
  <match src="assignment_expression [39122,39139]" dest="assignment_expression [35531,35548]"/>
  <match src="call_expression [110528,110606]" dest="call_expression [109469,109532]"/>
  <match src="solidity_pragma_token [68952,68967]" dest="solidity_pragma_token [66397,66412]"/>
  <match src="identifier: b [66876,66877]" dest="identifier: b [64261,64262]"/>
  <match src="primitive_type [60761,60768]" dest="primitive_type [57954,57961]"/>
  <match src=",: , [29001,29002]" dest=",: , [25144,25145]"/>
  <match src="identifier: temp [43426,43430]" dest="identifier: temp [40168,40172]"/>
  <match src="identifier: setLock [38488,38495]" dest="identifier: setLock [34884,34891]"/>
  <match src="string: string [98957,98963]" dest="string: string [97293,97299]"/>
  <match src="identifier: errorMessage [67446,67458]" dest="identifier: errorMessage [64846,64858]"/>
  <match src="address: address [107156,107163]" dest="address: address [105005,105012]"/>
  <match src="member_expression [57565,57583]" dest="member_expression [54666,54684]"/>
  <match src="identifier: isInitialized [956,969]" dest="identifier: isInitialized [985,998]"/>
  <match src="type_name [60776,60783]" dest="type_name [57969,57976]"/>
  <match src="identifier: _initToken [112264,112274]" dest="identifier: isBridgedTokenDeployAcknowledged [111481,111513]"/>
  <match src=".: . [4980,4981]" dest=".: . [5148,5149]"/>
  <match src="uint64: uint64 [40738,40744]" dest="uint64: uint64 [37209,37215]"/>
  <match src="parameter [41707,41711]" dest="parameter [38363,38367]"/>
  <match src="(: ( [113763,113764]" dest="(: ( [112767,112768]"/>
  <match src="identifier: _tokenOwners [97084,97096]" dest="identifier: _tokenOwners [95350,95362]"/>
  <match src="inheritance_specifier [104452,104464]" dest="inheritance_specifier [102969,102981]"/>
  <match src="&quot;: &quot; [48291,48292]" dest="&quot;: &quot; [45161,45162]"/>
  <match src="): ) [115230,115231]" dest="): ) [113823,113824]"/>
  <match src="visibility [118681,118689]" dest="visibility [116944,116952]"/>
  <match src="{: { [1353,1354]" dest="{: { [1400,1401]"/>
  <match src="type_name [75033,75040]" dest="type_name [72660,72667]"/>
  <match src="variable_declaration_statement [67540,67558]" dest="variable_declaration_statement [64942,64960]"/>
  <match src="bytes: bytes [59946,59951]" dest="bytes: bytes [57112,57117]"/>
  <match src="&quot;: &quot; [2237,2238]" dest="&quot;: &quot; [2308,2309]"/>
  <match src="internal: internal [118681,118689]" dest="internal: internal [116944,116952]"/>
  <match src="using_directive [85416,85462]" dest="using_directive [83365,83411]"/>
  <match src="type_name [66843,66850]" dest="type_name [64227,64234]"/>
  <match src="block_statement [43159,43194]" dest="block_statement [39890,39927]"/>
  <match src="returns: returns [83045,83052]" dest="returns: returns [80911,80918]"/>
  <match src="member_expression [80055,80067]" dest="member_expression [77833,77845]"/>
  <match src="emit: emit [20568,20572]" dest="emit: emit [20114,20118]"/>
  <match src="state_variable_declaration [55418,55468]" dest="state_variable_declaration [52464,52514]"/>
  <match src="): ) [84333,84334]" dest="): ) [82236,82237]"/>
  <match src="primitive_type [11821,11826]" dest="primitive_type [12783,12788]"/>
  <match src="variable_declaration_statement [79985,80022]" dest="variable_declaration_statement [77762,77799]"/>
  <match src="): ) [98594,98595]" dest="): ) [96913,96914]"/>
  <match src="visibility [21146,21154]" dest="visibility [20707,20715]"/>
  <match src=",: , [65097,65098]" dest=",: , [62425,62426]"/>
  <match src="(: ( [111953,111954]" dest="(: ( [110109,110110]"/>
  <match src="identifier: _get [82350,82354]" dest="identifier: _get [80197,80201]"/>
  <match src="user_defined_type [28859,28866]" dest="user_defined_type [24998,25005]"/>
  <match src="parameter [109621,109642]" dest="parameter [107565,107586]"/>
  <match src="identifier: set [72261,72264]" dest="identifier: set [69795,69798]"/>
  <match src="call_expression [93358,93399]" dest="call_expression [91529,91570]"/>
  <match src="(: ( [96337,96338]" dest="(: ( [94580,94581]"/>
  <match src="external: external [32326,32334]" dest="external: external [28561,28569]"/>
  <match src="(: ( [117306,117307]" dest="(: ( [115829,115830]"/>
  <match src="&gt;=: &gt;= [64672,64674]" dest="&gt;=: &gt;= [61984,61986]"/>
  <match src="comment: // File: contracts/libraries/Bytes.sol [33582,33620]" dest="comment: // File: contracts/libraries/Bytes.sol [29855,29893]"/>
  <match src="): ) [18487,18488]" dest="): ) [17999,18000]"/>
  <match src="call_expression [109777,109833]" dest="call_expression [107724,107780]"/>
  <match src=",: , [83019,83020]" dest=",: , [80885,80886]"/>
  <match src="event_paramater [40165,40187]" dest="event_paramater [36618,36640]"/>
  <match src="function_definition [92646,92946]" dest="function_definition [90799,91104]"/>
  <match src="internal: internal [99398,99406]" dest="internal: internal [97744,97752]"/>
  <match src="address: address [117099,117106]" dest="address: address [115642,115649]"/>
  <match src="identifier: from [98329,98333]" dest="identifier: from [96642,96646]"/>
  <match src="primitive_type [103137,103143]" dest="primitive_type [101599,101605]"/>
  <match src="identifier: _name [89269,89274]" dest="identifier: _name [87317,87322]"/>
  <match src="string_literal [96394,96446]" dest="string_literal [94637,94689]"/>
  <match src="parameter [3129,3147]" dest="parameter [3224,3242]"/>
  <match src="yul_evm_builtin [35504,35510]" dest="yul_evm_builtin [31821,31827]"/>
  <match src="storage: storage [74112,74119]" dest="storage: storage [71711,71718]"/>
  <match src="uint256: uint256 [55533,55540]" dest="uint256: uint256 [52582,52589]"/>
  <match src="call_argument [24326,24327]" dest="call_argument [23955,23956]"/>
  <match src="bool: bool [62529,62533]" dest="bool: bool [59776,59780]"/>
  <match src="call_argument [105753,105759]" dest="call_argument [120205,120211]"/>
  <match src="type_name [96803,96810]" dest="type_name [95061,95068]"/>
  <match src="if: if [78791,78793]" dest="if: if [76542,76544]"/>
  <match src="(: ( [54774,54775]" dest="(: ( [51792,51793]"/>
  <match src="pure: pure [34392,34396]" dest="pure: pure [30683,30687]"/>
  <match src="return_type_definition [118704,118727]" dest="return_type_definition [116958,116981]"/>
  <match src="identifier: _tokenURIs [55859,55869]" dest="identifier: _tokenURIs [52915,52925]"/>
  <match src="(: ( [9985,9986]" dest="(: ( [10900,10901]"/>
  <match src="expression_statement [5032,5365]" dest="expression_statement [5201,5538]"/>
  <match src="assignment_expression [72157,72195]" dest="assignment_expression [69689,69727]"/>
  <match src="(: ( [48253,48254]" dest="(: ( [45123,45124]"/>
  <match src="uint64: uint64 [40764,40770]" dest="uint64: uint64 [37236,37242]"/>
  <match src="primitive_type [86219,86226]" dest="primitive_type [84186,84193]"/>
  <match src="bytes32: bytes32 [307,314]" dest="bytes32: bytes32 [317,324]"/>
  <match src="expression_statement [88468,88509]" dest="expression_statement [86491,86532]"/>
  <match src="): ) [54975,54976]" dest="): ) [52004,52005]"/>
  <match src="view: view [44262,44266]" dest="view: view [41038,41042]"/>
  <match src="(: ( [78794,78795]" dest="(: ( [76545,76546]"/>
  <match src="{: { [101861,101862]" dest="{: { [100279,100280]"/>
  <match src=",: , [97022,97023]" dest=",: , [95284,95285]"/>
  <match src="(: ( [44960,44961]" dest="(: ( [41759,41760]"/>
  <match src="visibility [15751,15759]" dest="visibility [118066,118074]"/>
  <match src="user_defined_type [70537,70540]" dest="user_defined_type [68033,68036]"/>
  <match src="identifier: _inner [75478,75484]" dest="identifier: _inner [73123,73129]"/>
  <match src="(: ( [103851,103852]" dest="(: ( [102333,102334]"/>
  <match src="): ) [76184,76185]" dest="): ) [73852,73853]"/>
  <match src="array_access [92542,92577]" dest="array_access [90689,90724]"/>
  <match src="external: external [6962,6970]" dest="external: external [7801,7809]"/>
  <match src="identifier: returndata [12877,12887]" dest="identifier: returndata [13858,13868]"/>
  <match src="primitive_type [55772,55778]" dest="primitive_type [52826,52832]"/>
  <match src="primitive_type [92682,92689]" dest="primitive_type [90835,90842]"/>
  <match src="(: ( [111778,111779]" dest="(: ( [110188,110189]"/>
  <match src="function: function [39583,39591]" dest="function: function [36012,36020]"/>
  <match src="}: } [48960,48961]" dest="}: } [45844,45845]"/>
  <match src="): ) [43524,43525]" dest="): ) [40268,40269]"/>
  <match src="parameter [93253,93265]" dest="parameter [91423,91435]"/>
  <match src=",: , [81734,81735]" dest=",: , [79560,79561]"/>
  <match src="parameter [93064,93079]" dest="parameter [91227,91242]"/>
  <match src="): ) [9794,9795]" dest="): ) [10706,10707]"/>
  <match src="function_definition [73335,73536]" dest="function_definition [70907,71111]"/>
  <match src="parameter [78598,78611]" dest="parameter [76345,76358]"/>
  <match src="call_argument [23995,24001]" dest="call_argument [38865,38871]"/>
  <match src="{: { [98999,99000]" dest="{: { [97335,97336]"/>
  <match src="): ) [57489,57490]" dest="): ) [54588,54589]"/>
  <match src="{: { [75752,75753]" dest="{: { [73406,73407]"/>
  <match src="primitive_type [93279,93286]" dest="primitive_type [91449,91456]"/>
  <match src="user_defined_type [104452,104464]" dest="user_defined_type [102969,102981]"/>
  <match src="type_name [12650,12656]" dest="type_name [13627,13633]"/>
  <match src="parameter [18219,18226]" dest="parameter [17723,17730]"/>
  <match src="bool: bool [22206,22210]" dest="bool: bool [21761,21765]"/>
  <match src="variable_declaration_statement [46766,46900]" dest="variable_declaration_statement [43603,43738]"/>
  <match src="identifier: _msgData [59904,59912]" dest="identifier: _msgData [57070,57078]"/>
  <match src=",: , [101392,101393]" dest=",: , [99789,99790]"/>
  <match src="primitive_type [32566,32570]" dest="primitive_type [28808,28812]"/>
  <match src="function: function [46661,46669]" dest="function: function [43497,43505]"/>
  <match src="user_defined_type [81015,81018]" dest="user_defined_type [78820,78823]"/>
  <match src="type_name [89523,89530]" dest="type_name [87584,87591]"/>
  <match src="identifier: UintToAddressMap [85505,85521]" dest="identifier: UintToAddressMap [83455,83471]"/>
  <match src="function: function [6913,6921]" dest="function: function [7752,7760]"/>
  <match src="type_name [31678,31685]" dest="type_name [27892,27899]"/>
  <match src="type_name [45025,45031]" dest="type_name [41827,41833]"/>
  <match src="variable_declaration_statement [20300,20341]" dest="variable_declaration_statement [19853,19894]"/>
  <match src="type_name [2494,2501]" dest="type_name [2572,2579]"/>
  <match src="&gt;: &gt; [107342,107343]" dest="&gt;: &gt; [105195,105196]"/>
  <match src="): ) [91834,91835]" dest="): ) [89961,89962]"/>
  <match src="(: ( [97590,97591]" dest="(: ( [95877,95878]"/>
  <match src="): ) [105850,105851]" dest="): ) [120307,120308]"/>
  <match src="identifier: decode [45724,45730]" dest="identifier: decode [42540,42546]"/>
  <match src="identifier: handleNativeNFT [109005,109020]" dest="identifier: handleNativeNFT [106860,106875]"/>
  <match src="user_defined_type [73789,73799]" dest="user_defined_type [71378,71388]"/>
  <match src="): ) [19591,19592]" dest="): ) [19246,19247]"/>
  <match src="parameter [90517,90530]" dest="parameter [88600,88613]"/>
  <match src="call_argument [9815,9846]" dest="call_argument [10727,10758]"/>
  <match src="bytes32: bytes32 [20807,20814]" dest="bytes32: bytes32 [20360,20367]"/>
  <match src="type_name [117023,117027]" dest="type_name [120667,120671]"/>
  <match src="): ) [111078,111079]" dest="): ) [120864,120865]"/>
  <match src="expression_statement [80567,80616]" dest="expression_statement [78355,78404]"/>
  <match src="variable_declaration [20300,20313]" dest="variable_declaration [19853,19866]"/>
  <match src="modifier_definition [4876,5382]" dest="modifier_definition [5024,5557]"/>
  <match src="&gt;: &gt; [39166,39167]" dest="&gt;: &gt; [35576,35577]"/>
  <match src="binary_expression [19424,19491]" dest="binary_expression [19098,19155]"/>
  <match src="identifier: value [71137,71142]" dest="identifier: value [68651,68656]"/>
  <match src="]: ] [926,927]" dest="]: ] [952,953]"/>
  <match src="(: ( [27284,27285]" dest="(: ( [39286,39287]"/>
  <match src="primitive_type [110460,110467]" dest="primitive_type [109039,109046]"/>
  <match src="type_cast_expression [114249,114259]" dest="type_cast_expression [23297,23307]"/>
  <match src="member_expression [102215,102225]" dest="member_expression [100649,100659]"/>
  <match src="identifier: _checkOnERC721Received [94530,94552]" dest="identifier: _checkOnERC721Received [92725,92747]"/>
  <match src="(: ( [43502,43503]" dest="(: ( [40246,40247]"/>
  <match src="primitive_type [116374,116381]" dest="primitive_type [115001,115008]"/>
  <match src="): ) [1597,1598]" dest="): ) [1647,1648]"/>
  <match src="identifier: patch [40771,40776]" dest="identifier: patch [37243,37248]"/>
  <match src="[: [ [49893,49894]" dest="[: [ [46806,46807]"/>
  <match src="primitive_type [84377,84384]" dest="primitive_type [82281,82288]"/>
  <match src=",: , [104320,104321]" dest=",: , [102831,102832]"/>
  <match src="(: ( [105784,105785]" dest="(: ( [120237,120238]"/>
  <match src="primitive_type [39343,39350]" dest="primitive_type [35760,35767]"/>
  <match src="identifier: requestGasLimit [16563,16578]" dest="identifier: requestGasLimit [118343,118358]"/>
  <match src="comment: // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked). [89879,89959]" dest="comment: // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked). [87949,88029]"/>
  <match src="call_argument [90056,90065]" dest="call_argument [88128,88137]"/>
  <match src="comment: // bytes4(keccak256(abi.encodePacked(&quot;multi-nft-to-nft-amb&quot;))) [41067,41129]" dest="comment: // bytes4(keccak256(abi.encodePacked(&quot;multi-nft-to-nft-amb&quot;))) [37550,37612]"/>
  <match src="binary_expression [5053,5278]" dest="binary_expression [5223,5450]"/>
  <match src="type_cast_expression [97008,97018]" dest="type_cast_expression [95270,95280]"/>
  <match src="true [72543,72547]" dest="true [70085,70089]"/>
  <match src="parameter [73348,73363]" dest="parameter [70920,70935]"/>
  <match src="true [70863,70867]" dest="true [68365,68369]"/>
  <match src="]: ] [63645,63646]" dest="]: ] [60922,60923]"/>
  <match src="public: public [15999,16005]" dest="public: public [16474,16480]"/>
  <match src="parameter [111574,111591]" dest="parameter [110889,110906]"/>
  <match src="call_expression [109145,109178]" dest="call_expression [107005,107038]"/>
  <match src="emit: emit [117485,117489]" dest="emit: emit [115911,115915]"/>
  <match src="internal: internal [117954,117962]" dest="internal: internal [110012,110020]"/>
  <match src="return_type_definition [31918,31944]" dest="return_type_definition [28141,28167]"/>
  <match src="parameter [12632,12648]" dest="parameter [13609,13625]"/>
  <match src="): ) [83576,83577]" dest="): ) [81458,81459]"/>
  <match src="): ) [83657,83658]" dest="): ) [81540,81541]"/>
  <match src="function_body [16611,16665]" dest="function_body [118391,118447]"/>
  <match src="type_name [93052,93059]" dest="type_name [91215,91222]"/>
  <match src="(: ( [54359,54360]" dest="(: ( [51365,51366]"/>
  <match src="primitive_type [4958,4965]" dest="primitive_type [5120,5127]"/>
  <match src=",: , [18988,18989]" dest=",: , [18622,18623]"/>
  <match src="primitive_type [94960,94967]" dest="primitive_type [93166,93173]"/>
  <match src="yul_evm_builtin [57737,57743]" dest="yul_evm_builtin [54842,54848]"/>
  <match src="identifier: data [11383,11387]" dest="identifier: data [12331,12335]"/>
  <match src=".: . [5146,5147]" dest=".: . [5317,5318]"/>
  <match src="): ) [39785,39786]" dest="): ) [36223,36224]"/>
  <match src=".: . [18554,18555]" dest=".: . [18067,18068]"/>
  <match src="call_argument [70661,70666]" dest="call_argument [68159,68164]"/>
  <match src="identifier: require [12719,12726]" dest="identifier: require [13697,13704]"/>
  <match src="function_definition [65005,65139]" dest="function_definition [62332,62468]"/>
  <match src="comment: // File: contracts/upgradeable_contracts/Initializable.sol [566,624]" dest="comment: // File: contracts/upgradeable_contracts/Initializable.sol [583,641]"/>
  <match src="primitive_type [70158,70165]" dest="primitive_type [67641,67648]"/>
  <match src="call_expression [45098,45147]" dest="call_expression [41902,41951]"/>
  <match src="visibility [71144,71151]" dest="visibility [68658,68665]"/>
  <match src="(: ( [84398,84399]" dest="(: ( [82302,82303]"/>
  <match src="uint256: uint256 [84687,84694]" dest="uint256: uint256 [82602,82609]"/>
  <match src=".: . [85901,85902]" dest=".: . [83859,83860]"/>
  <match src="}: } [66322,66323]" dest="}: } [63692,63693]"/>
  <match src="comment: // File: contracts/upgradeability/EternalStorage.sol [0,52]" dest="comment: // File: contracts/upgradeability/EternalStorage.sol [0,52]"/>
  <match src="returns: returns [91196,91203]" dest="returns: returns [89301,89308]"/>
  <match src="): ) [54701,54702]" dest="): ) [51716,51717]"/>
  <match src="identifier: a [68870,68871]" dest="identifier: a [66308,66309]"/>
  <match src="array_access [3889,3964]" dest="array_access [4002,4077]"/>
  <match src="state_variable_declaration [85996,86048]" dest="state_variable_declaration [83957,84009]"/>
  <match src="function_definition [65864,66323]" dest="function_definition [63222,63693]"/>
  <match src="type_name [97401,97408]" dest="type_name [95682,95689]"/>
  <match src="variable_declaration_statement [9935,9990]" dest="variable_declaration_statement [10850,10905]"/>
  <match src="function: function [11218,11226]" dest="function: function [12165,12173]"/>
  <match src="identifier: _bridgeContract [101888,101903]" dest="identifier: _bridgeContract [100307,100322]"/>
  <match src="view: view [6795,6799]" dest="view: view [7630,7634]"/>
  <match src="{: { [104567,104568]" dest="{: { [103089,103090]"/>
  <match src=",: , [98955,98956]" dest=",: , [97291,97292]"/>
  <match src="return_type_definition [56982,57004]" dest="return_type_definition [54069,54091]"/>
  <match src="comment: // because index 0 means a key is not in the map. [78225,78274]" dest="comment: // because index 0 means a key is not in the map. [75961,76010]"/>
  <match src="): ) [100359,100360]" dest="): ) [98727,98728]"/>
  <match src="(: ( [38530,38531]" dest="(: ( [34927,34928]"/>
  <match src="call_argument [98575,98585]" dest="call_argument [96894,96904]"/>
  <match src="(: ( [105752,105753]" dest="(: ( [120204,120205]"/>
  <match src="return_statement [83391,83432]" dest="return_statement [81267,81308]"/>
  <match src="): ) [91212,91213]" dest="): ) [89317,89318]"/>
  <match src="call_argument [97861,97871]" dest="call_argument [96159,96169]"/>
  <match src="primitive_type [91866,91873]" dest="primitive_type [89993,90000]"/>
  <match src="identifier: _INTERFACE_ID_ERC721_METADATA [88537,88566]" dest="identifier: _INTERFACE_ID_ERC721_METADATA [86561,86590]"/>
  <match src="parameter [11275,11301]" dest="parameter [12222,12248]"/>
  <match src="identifier: toDeleteIndex [79993,80006]" dest="identifier: toDeleteIndex [77770,77783]"/>
  <match src=",: , [100334,100335]" dest=",: , [98701,98702]"/>
  <match src="assembly_statement [57611,57838]" dest="assembly_statement [54713,54944]"/>
  <match src="): ) [91615,91616]" dest="): ) [89732,89733]"/>
  <match src="binary_expression [112199,112221]" dest="binary_expression [111794,111816]"/>
  <match src="{: { [17233,17234]" dest="{: { [17436,17437]"/>
  <match src="): ) [76687,76688]" dest="): ) [74370,74371]"/>
  <match src="call_expression [114137,114195]" dest="call_expression [22184,22239]"/>
  <match src="call_expression [96918,96976]" dest="call_expression [95178,95236]"/>
  <match src="call_argument [36456,36461]" dest="call_argument [32804,32809]"/>
  <match src=",: , [112755,112756]" dest=",: , [111631,111632]"/>
  <match src="address: address [84287,84294]" dest="address: address [82189,82196]"/>
  <match src="call_argument [113359,113364]" dest="call_argument [110510,110515]"/>
  <match src="): ) [10988,10989]" dest="): ) [11926,11927]"/>
  <match src="function_body [16311,16368]" dest="function_body [16794,16853]"/>
  <match src="identifier: set [75474,75477]" dest="identifier: set [73119,73122]"/>
  <match src="): ) [91400,91401]" dest="): ) [89513,89514]"/>
  <match src="type_name [92456,92463]" dest="type_name [90602,90609]"/>
  <match src="comment: // File: @openzeppelin/contracts/introspection/IERC165.sol [27869,27927]" dest="comment: // File: @openzeppelin/contracts/introspection/IERC165.sol [23973,24031]"/>
  <match src="identifier: this [112344,112348]" dest="identifier: this [111931,111935]"/>
  <match src="primitive_type [29003,29010]" dest="primitive_type [25146,25153]"/>
  <match src="call_argument [38558,38566]" dest="call_argument [34955,34963]"/>
  <match src="identifier: tokenId [98633,98640]" dest="identifier: tokenId [96954,96961]"/>
  <match src="identifier: Upgradeable [104309,104320]" dest="identifier: Upgradeable [102820,102831]"/>
  <match src="variable_declaration_statement [110839,110943]" dest="variable_declaration_statement [109338,109403]"/>
  <match src="type_name [29599,29606]" dest="type_name [25757,25764]"/>
  <match src="): ) [46395,46396]" dest="): ) [43222,43223]"/>
  <match src="uint256: uint256 [113853,113860]" dest="uint256: uint256 [112832,112839]"/>
  <match src=",: , [115195,115196]" dest=",: , [113788,113789]"/>
  <match src="view: view [83587,83591]" dest="view: view [81469,81473]"/>
  <match src="identifier: IBurnableMintableERC721Token [101656,101684]" dest="identifier: IBurnableMintableERC721Token [100067,100095]"/>
  <match src="visibility [83357,83365]" dest="visibility [81232,81240]"/>
  <match src="(: ( [111727,111728]" dest="(: ( [111059,111060]"/>
  <match src="internal: internal [48671,48679]" dest="internal: internal [45549,45557]"/>
  <match src="): ) [13103,13104]" dest="): ) [14089,14090]"/>
  <match src="comment: /**      * @dev Initiate the bridge operation for some token from msg.sender.      * The user should first call Approve method of the ERC721 token.      * @param token bridged token contract address.      * @param _receiver address that will receive the token on the other network.      * @param _tokenId id of the token to be transferred to the other network.      */ [36549,36917]" dest="comment: /**      * @dev Initiate the bridge operation for some token from msg.sender.      * The user should first call Approve method of the ERC721 token.      * @param token bridged token contract address.      * @param _receiver address that will receive the token on the other network.      * @param _tokenId id of the token to be transferred to the other network.      */ [32902,33276]"/>
  <match src="identifier: bridgeSpecificActionsOnTokenTransfer [39297,39333]" dest="identifier: bridgeSpecificActionsOnTokenTransfer [35713,35749]"/>
  <match src=",: , [105195,105196]" dest=",: , [119819,119820]"/>
  <match src="(: ( [92198,92199]" dest="(: ( [90335,90336]"/>
  <match src="(: ( [9935,9936]" dest="(: ( [10850,10851]"/>
  <match src="{: { [66852,66853]" dest="{: { [64236,64237]"/>
  <match src="state_variable_declaration [85731,85785]" dest="state_variable_declaration [83686,83740]"/>
  <match src="bool: bool [75746,75750]" dest="bool: bool [73400,73404]"/>
  <match src="function_body [92158,92364]" dest="function_body [90294,90505]"/>
  <match src="): ) [48871,48872]" dest="): ) [45751,45752]"/>
  <match src="identifier: to [95963,95965]" dest="identifier: to [94197,94199]"/>
  <match src="variable_declaration_statement [84306,84360]" dest="variable_declaration_statement [82209,82263]"/>
  <match src="member_expression [19510,19546]" dest="member_expression [19175,19201]"/>
  <match src="solidity_pragma_token [21522,21536]" dest="solidity_pragma_token [21068,21082]"/>
  <match src="uint256: uint256 [80035,80042]" dest="uint256: uint256 [77813,77820]"/>
  <match src="identifier: _inner [82725,82731]" dest="identifier: _inner [80581,80587]"/>
  <match src="): ) [5020,5021]" dest="): ) [5188,5189]"/>
  <match src="user_defined_type [76133,76140]" dest="user_defined_type [73801,73808]"/>
  <match src="type_name [43975,43981]" dest="type_name [40741,40747]"/>
  <match src=",: , [11254,11255]" dest=",: , [12201,12202]"/>
  <match src="address: address [93038,93045]" dest="address: address [91201,91208]"/>
  <match src="identifier: requireToPassMessage [7009,7029]" dest="identifier: requireToPassMessage [7850,7870]"/>
  <match src="identifier: bridgeContract [57475,57489]" dest="identifier: bridgeContract [54574,54588]"/>
  <match src="identifier: to [93060,93062]" dest="identifier: to [91223,91225]"/>
  <match src=".: . [112929,112930]" dest=".: . [112377,112378]"/>
  <match src="=: = [56657,56658]" dest="=: = [53735,53736]"/>
  <match src="binary_expression [14603,14642]" dest="binary_expression [15513,15542]"/>
  <match src="state_mutability [39796,39800]" dest="state_mutability [36234,36238]"/>
  <match src="call_expression [107099,107126]" dest="call_expression [104947,104974]"/>
  <match src="identifier: addressStorage [2195,2209]" dest="identifier: addressStorage [2266,2280]"/>
  <match src="identifier: b [65037,65038]" dest="identifier: b [62364,62365]"/>
  <match src="type_cast_expression [97861,97871]" dest="type_cast_expression [96159,96169]"/>
  <match src="parameter [33218,33237]" dest="parameter [29475,29494]"/>
  <match src=".: . [89988,89989]" dest=".: . [88059,88060]"/>
  <match src="string_literal [95345,95391]" dest="string_literal [93563,93609]"/>
  <match src="uint256: uint256 [67421,67428]" dest="uint256: uint256 [64821,64828]"/>
  <match src="[: [ [50198,50199]" dest="[: [ [47120,47121]"/>
  <match src="(: ( [14602,14603]" dest="(: ( [15512,15513]"/>
  <match src="identifier: withinExecutionLimit [115025,115045]" dest="identifier: isTokenBridgingAllowed [115720,115742]"/>
  <match src="type_name [25564,25571]" dest="type_name [37923,37930]"/>
  <match src="identifier: _exists [94952,94959]" dest="identifier: _exists [93158,93165]"/>
  <match src="primitive_type [46700,46707]" dest="primitive_type [43536,43543]"/>
  <match src=",: , [83644,83645]" dest=",: , [81527,81528]"/>
  <match src="primitive_type [78292,78299]" dest="primitive_type [76029,76036]"/>
  <match src="identifier: _tokenOwnersEntries [55551,55570]" dest="identifier: _tokenOwnersEntries [52600,52619]"/>
  <match src="function: function [2115,2123]" dest="function: function [2185,2193]"/>
  <match src="(: ( [68207,68208]" dest="(: ( [65628,65629]"/>
  <match src="view: view [23472,23476]" dest="view: view [38349,38353]"/>
  <match src="(: ( [75008,75009]" dest="(: ( [72635,72636]"/>
  <match src="identifier: tokenId [29039,29046]" dest="identifier: tokenId [25182,25189]"/>
  <match src="identifier: onlyIfUpgradeabilityOwner [1474,1499]" dest="identifier: onlyIfUpgradeabilityOwner [1523,1548]"/>
  <match src="yul_evm_builtin [57046,57051]" dest="yul_evm_builtin [54135,54140]"/>
  <match src="(: ( [45662,45663]" dest="(: ( [42477,42478]"/>
  <match src="comment: // All indexes are 1-based [80617,80643]" dest="comment: // All indexes are 1-based [78405,78431]"/>
  <match src="parameter [44276,44289]" dest="parameter [41052,41065]"/>
  <match src="function_body [48680,48959]" dest="function_body [45558,45842]"/>
  <match src="address: address [24676,24683]" dest="address: address [23118,23125]"/>
  <match src="inheritance_specifier [35934,35949]" dest="inheritance_specifier [32268,32283]"/>
  <match src="type_name [100493,100499]" dest="type_name [98866,98872]"/>
  <match src="identifier: require [110668,110675]" dest="identifier: require [109162,109169]"/>
  <match src="variable_declaration [4931,4954]" dest="variable_declaration [5080,5103]"/>
  <match src="identifier: value [20622,20627]" dest="identifier: value [20168,20173]"/>
  <match src="primitive_type [65454,65461]" dest="primitive_type [62795,62802]"/>
  <match src="call_expression [14973,15008]" dest="call_expression [15889,15924]"/>
  <match src="return: return [81894,81900]" dest="return: return [79724,79730]"/>
  <match src="identifier: _tokenId [38678,38686]" dest="identifier: _tokenId [35077,35085]"/>
  <match src=",: , [48750,48751]" dest=",: , [45629,45630]"/>
  <match src="member_expression [112673,112695]" dest="member_expression [111549,111571]"/>
  <match src="call_argument [93477,93481]" dest="call_argument [91649,91653]"/>
  <match src="private: private [55912,55919]" dest="private: private [52970,52977]"/>
  <match src="for: for [85368,85371]" dest="for: for [83315,83318]"/>
  <match src="primitive_type [30557,30564]" dest="primitive_type [26740,26747]"/>
  <match src="&quot;: &quot; [12437,12438]" dest="&quot;: &quot; [13410,13411]"/>
  <match src="function_definition [61006,61075]" dest="function_definition [58205,58274]"/>
  <match src="): ) [6905,6906]" dest="): ) [7742,7743]"/>
  <match src="): ) [76152,76153]" dest="): ) [73820,73821]"/>
  <match src="visibility [3550,3558]" dest="visibility [3654,3662]"/>
  <match src="identifier: ERC721BridgeToken [101627,101644]" dest="identifier: ERC721BridgeToken [100038,100055]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [11002,11213]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [11943,12159]"/>
  <match src="type_name [61891,61898]" dest="type_name [59113,59120]"/>
  <match src="(: ( [107139,107140]" dest="(: ( [104988,104989]"/>
  <match src="return_type_definition [46732,46755]" dest="return_type_definition [43568,43591]"/>
  <match src="primitive_type [58588,58592]" dest="primitive_type [55715,55719]"/>
  <match src="identifier: _baseURI [90208,90216]" dest="identifier: _baseURI [88283,88291]"/>
  <match src="function: function [38062,38070]" dest="function: function [34448,34456]"/>
  <match src="type_name [33411,33418]" dest="type_name [29677,29684]"/>
  <match src="address: address [40302,40309]" dest="address: address [36759,36766]"/>
  <match src="comment: /**      * @dev Transfers `tokenId` from `from` to `to`.      *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.      *      * Requirements:      *      * - `to` cannot be the zero address.      * - `tokenId` token must be owned by `from`.      *      * Emits a {Transfer} event.      */ [97894,98207]" dest="comment: /**      * @dev Transfers `tokenId` from `from` to `to`.      *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.      *      * Requirements:      *      * - `to` cannot be the zero address.      * - `tokenId` token must be owned by `from`.      *      * Emits a {Transfer} event.      */ [96195,96518]"/>
  <match src="type_name [58549,58556]" dest="type_name [55676,55683]"/>
  <match src="primitive_type [73365,73372]" dest="primitive_type [70937,70944]"/>
  <match src="identifier: map [80814,80817]" dest="identifier: map [78608,78611]"/>
  <match src="(: ( [75473,75474]" dest="(: ( [73118,73119]"/>
  <match src="): ) [3264,3265]" dest="): ) [3360,3361]"/>
  <match src="identifier: remove [97775,97781]" dest="identifier: remove [96069,96075]"/>
  <match src="primitive_type [59838,59853]" dest="primitive_type [57000,57015]"/>
  <match src="identifier: messageId [18184,18193]" dest="identifier: messageId [17688,17697]"/>
  <match src="state_mutability [45548,45552]" dest="state_mutability [42362,42366]"/>
  <match src="uint256: uint256 [40329,40336]" dest="uint256: uint256 [36786,36793]"/>
  <match src="primitive_type [98940,98947]" dest="primitive_type [97276,97283]"/>
  <match src="contract: contract [58101,58109]" dest="contract: contract [55220,55228]"/>
  <match src="}: } [95546,95547]" dest="}: } [93767,93768]"/>
  <match src="identifier: addressStorage [16328,16342]" dest="identifier: addressStorage [16812,16826]"/>
  <match src="type_name [29561,29568]" dest="type_name [25719,25726]"/>
  <match src="call_argument [107119,107125]" dest="call_argument [104967,104973]"/>
  <match src="return_statement [90542,90558]" dest="return_statement [88626,88642]"/>
  <match src="call_argument [42563,42617]" dest="call_argument [39193,39236]"/>
  <match src="comment: /**      * @dev Internal function for recording bridge operation for further usage.      * Recorded information is used for fixing failed requests on the other side.      * @param _register true, if native token is bridged for the first time.      * @param _messageId id of the sent message.      * @param _token bridged token address.      * @param _sender address of the tokens sender.      * @param _tokenId unique id of the bridged token.      */ [116527,116977]" dest="comment: /**      * @dev Constructs the message to be sent to the other side. Burns/locks bridged token.      * @param _token bridged token address.      * @param _receiver address of the tokens receiver on the other side.      * @param _tokenId unique id of the bridged token.      */ [110542,110823]"/>
  <match src="): ) [73909,73910]" dest="): ) [71499,71500]"/>
  <match src="identifier: baseURI_ [99436,99444]" dest="identifier: baseURI_ [97783,97791]"/>
  <match src="primitive_type [24676,24683]" dest="primitive_type [23118,23125]"/>
  <match src="parameter [11821,11838]" dest="parameter [12783,12800]"/>
  <match src="primitive_type [59946,59951]" dest="primitive_type [57112,57117]"/>
  <match src="type_name [8226,8230]" dest="type_name [9110,9114]"/>
  <match src="(: ( [49663,49664]" dest="(: ( [46568,46569]"/>
  <match src="return_type_definition [84939,84956]" dest="return_type_definition [82860,82877]"/>
  <match src="function: function [17156,17164]" dest="function: function [17359,17367]"/>
  <match src="type_name [88085,88091]" dest="type_name [86098,86104]"/>
  <match src="): ) [38652,38653]" dest="): ) [35051,35052]"/>
  <match src="): ) [16024,16025]" dest="): ) [16499,16500]"/>
  <match src="(: ( [75909,75910]" dest="(: ( [73570,73571]"/>
  <match src="call_expression [49649,49671]" dest="call_expression [46554,46576]"/>
  <match src="&quot;: &quot; [46386,46387]" dest="&quot;: &quot; [43213,43214]"/>
  <match src="identifier: BridgedTokensRegistry [47218,47239]" dest="identifier: BridgedTokensRegistry [44070,44091]"/>
  <match src="string_literal [114164,114185]" dest="string_literal [22211,22229]"/>
  <match src="return: return [3882,3888]" dest="return: return [3995,4001]"/>
  <match src="internal: internal [84255,84263]" dest="internal: internal [82157,82165]"/>
  <match src="identifier: _msgSender [92324,92334]" dest="identifier: _msgSender [90464,90474]"/>
  <match src=".: . [107281,107282]" dest=".: . [105133,105134]"/>
  <match src="parameter [84240,84253]" dest="parameter [82142,82155]"/>
  <match src="identifier: safeTransferFrom [93236,93252]" dest="identifier: safeTransferFrom [91406,91422]"/>
  <match src="yul_function_call [35004,35077]" dest="yul_function_call [31312,31385]"/>
  <match src="call_expression [50139,50174]" dest="call_expression [47060,47095]"/>
  <match src="(: ( [48714,48715]" dest="(: ( [45593,45594]"/>
  <match src="add: add [53831,53834]" dest="add: add [50830,50833]"/>
  <match src="): ) [83130,83131]" dest="): ) [80997,80998]"/>
  <match src="call_argument [75486,75500]" dest="call_argument [73131,73145]"/>
  <match src="}: } [46404,46405]" dest="}: } [43232,43233]"/>
  <match src="identifier: Transfer [98737,98745]" dest="identifier: Transfer [97063,97071]"/>
  <match src="function: function [108996,109004]" dest="function: function [106851,106859]"/>
  <match src="identifier: require [105439,105446]" dest="identifier: require [120002,120009]"/>
  <match src="call_argument [113138,113142]" dest="call_argument [111293,111297]"/>
  <match src="string: string [90517,90523]" dest="string: string [88600,88606]"/>
  <match src="identifier: setApprovalForAll [92083,92100]" dest="identifier: setApprovalForAll [90219,90236]"/>
  <match src="user_defined_type [104512,104537]" dest="user_defined_type [103032,103057]"/>
  <match src="identifier: _sender [117107,117114]" dest="identifier: _sender [115650,115657]"/>
  <match src="(: ( [55702,55703]" dest="(: ( [52755,52756]"/>
  <match src="storage: storage [70541,70548]" dest="storage: storage [68037,68044]"/>
  <match src=",: , [117065,117066]" dest=",: , [115631,115632]"/>
  <match src="call_expression [12719,12779]" dest="call_expression [13697,13757]"/>
  <match src="identifier: maxGasPerTx [17608,17619]" dest="identifier: maxGasPerTx [118738,118749]"/>
  <match src=",: , [11390,11391]" dest=",: , [12338,12339]"/>
  <match src="identifier: _contract [7047,7056]" dest="identifier: _contract [7889,7898]"/>
  <match src="fallback_receive_definition [50876,54831]" dest="fallback_receive_definition [47821,51852]"/>
  <match src="(: ( [471,472]" dest="(: ( [484,485]"/>
  <match src="primitive_type [33218,33223]" dest="primitive_type [29475,29480]"/>
  <match src="=: = [80053,80054]" dest="=: = [77831,77832]"/>
  <match src="): ) [17621,17622]" dest="): ) [118751,118752]"/>
  <match src="identifier: safeTransferFrom [93115,93131]" dest="identifier: safeTransferFrom [91279,91295]"/>
  <match src="identifier: _tokenId [114352,114360]" dest="identifier: _tokenId [112961,112969]"/>
  <match src="identifier: _sender [117319,117326]" dest="identifier: _sender [115842,115849]"/>
  <match src="identifier: Set [72913,72916]" dest="identifier: Set [70471,70474]"/>
  <match src="(: ( [42562,42563]" dest="(: ( [39192,39193]"/>
  <match src="call_argument [66879,66907]" dest="call_argument [64264,64292]"/>
  <match src="yul_hex_number: 0x6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e92 [35511,35577]" dest="yul_hex_number: 0x6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e92 [31828,31894]"/>
  <match src="): ) [66907,66908]" dest="): ) [64292,64293]"/>
  <match src="event: event [28966,28971]" dest="event: event [25109,25114]"/>
  <match src="return_statement [91969,92001]" dest="return_statement [90099,90131]"/>
  <match src="comment: // solhint-disable-next-line no-inline-assembly [13216,13263]" dest="comment: // solhint-disable-next-line no-inline-assembly [14205,14252]"/>
  <match src="&quot;: &quot; [12777,12778]" dest="&quot;: &quot; [13755,13756]"/>
  <match src="visibility [88092,88099]" dest="visibility [86105,86112]"/>
  <match src="type_name [85491,85521]" dest="type_name [83441,83471]"/>
  <match src="call_argument [12437,12477]" dest="call_argument [13410,13450]"/>
  <match src="type_name [81226,81229]" dest="type_name [79038,79041]"/>
  <match src="parameter [45025,45048]" dest="parameter [41827,41850]"/>
  <match src="): ) [78916,78917]" dest="): ) [76668,76669]"/>
  <match src="): ) [29240,29241]" dest="): ) [25388,25389]"/>
  <match src="): ) [110776,110777]" dest="): ) [109271,109272]"/>
  <match src="{: { [5961,5962]" dest="{: { [6152,6153]"/>
  <match src="variable_declaration [45601,45618]" dest="variable_declaration [42416,42433]"/>
  <match src="call_argument [83094,83106]" dest="call_argument [80961,80973]"/>
  <match src="function: function [49581,49589]" dest="function: function [46485,46493]"/>
  <match src="string_literal [66261,66296]" dest="string_literal [63628,63663]"/>
  <match src="uint256: uint256 [114975,114982]" dest="uint256: uint256 [113599,113606]"/>
  <match src="[: [ [80826,80827]" dest="[: [ [78620,78621]"/>
  <match src="user_defined_type [47243,47257]" dest="user_defined_type [44095,44109]"/>
  <match src="if: if [71328,71330]" dest="if: if [68846,68848]"/>
  <match src="primitive_type [90732,90739]" dest="primitive_type [88822,88829]"/>
  <match src="identifier: totalSupply [90875,90886]" dest="identifier: totalSupply [88972,88983]"/>
  <match src="call_argument [14603,14642]" dest="call_argument [15513,15542]"/>
  <match src="): ) [100128,100129]" dest="): ) [98489,98490]"/>
  <match src="parameter [44236,44251]" dest="parameter [41012,41027]"/>
  <match src="string_literal [2237,2251]" dest="string_literal [2308,2322]"/>
  <match src="identifier: target [10942,10948]" dest="identifier: target [11880,11886]"/>
  <match src="boolean_literal [80853,80857]" dest="boolean_literal [78649,78653]"/>
  <match src="{: { [55295,55296]" dest="{: { [52338,52339]"/>
  <match src="returns: returns [16293,16300]" dest="returns: returns [16776,16783]"/>
  <match src="string_literal [82193,82225]" dest="string_literal [80034,80066]"/>
  <match src="(: ( [74157,74158]" dest="(: ( [71756,71757]"/>
  <match src="uint256: uint256 [85545,85552]" dest="uint256: uint256 [83496,83503]"/>
  <match src="visibility [98982,98990]" dest="visibility [97318,97326]"/>
  <match src="library_declaration [42765,43599]" dest="library_declaration [39488,40348]"/>
  <match src="string [46373,46387]" dest="string [43200,43214]"/>
  <match src="yul_identifier [52237,52240]" dest="yul_identifier [49204,49207]"/>
  <match src="variable_declaration [20350,20367]" dest="variable_declaration [19904,19921]"/>
  <match src="state_mutability [83804,83808]" dest="state_mutability [81693,81697]"/>
  <match src="parameter [111527,111541]" dest="parameter [110864,110878]"/>
  <match src="indexed: indexed [40310,40317]" dest="indexed: indexed [36767,36774]"/>
  <match src="primitive_type [107402,107407]" dest="primitive_type [105257,105262]"/>
  <match src="type_name [6509,6516]" dest="type_name [7336,7343]"/>
  <match src="identifier: owner [88721,88726]" dest="identifier: owner [86752,86757]"/>
  <match src="state_mutability [94986,94990]" dest="state_mutability [93192,93196]"/>
  <match src="identifier: boolStorage [1016,1027]" dest="identifier: boolStorage [1046,1057]"/>
  <match src="address: address [34406,34413]" dest="address: address [30697,30704]"/>
  <match src="call_argument [96869,96870]" dest="call_argument [95128,95129]"/>
  <match src="type_name [78002,78009]" dest="type_name [75729,75736]"/>
  <match src="call_argument [6120,6142]" dest="call_argument [6319,6341]"/>
  <match src="string_literal [64678,64707]" dest="string_literal [61990,62019]"/>
  <match src=".: . [48257,48258]" dest=".: . [45127,45128]"/>
  <match src="comment: // Avoid using onlyUpgradeabilityOwner name to prevent issues with implementation from proxy contract [1359,1460]" dest="comment: // Avoid using onlyUpgradeabilityOwner name to prevent issues with implementation from proxy contract [1407,1508]"/>
  <match src="(: ( [74330,74331]" dest="(: ( [71936,71937]"/>
  <match src="identifier: key [83426,83429]" dest="identifier: key [81302,81305]"/>
  <match src="function_body [4683,4741]" dest="function_body [4823,4884]"/>
  <match src=",: , [112745,112746]" dest=",: , [111621,111622]"/>
  <match src=",: , [31170,31171]" dest=",: , [27369,27370]"/>
  <match src="primitive_type [105240,105247]" dest="primitive_type [118047,118054]"/>
  <match src="parameter [114923,114937]" dest="parameter [113545,113559]"/>
  <match src=",: , [29021,29022]" dest=",: , [25164,25165]"/>
  <match src="identifier: msg [59872,59875]" dest="identifier: msg [57035,57038]"/>
  <match src="): ) [74459,74460]" dest="): ) [72066,72067]"/>
  <match src="(: ( [43582,43583]" dest="(: ( [40329,40330]"/>
  <match src="address: address [50975,50982]" dest="address: address [47922,47929]"/>
  <match src="indexed: indexed [29199,29206]" dest="indexed: indexed [25347,25354]"/>
  <match src="): ) [117551,117552]" dest="): ) [115977,115978]"/>
  <match src="constructor_definition [62570,62778]" dest="constructor_definition [59819,60031]"/>
  <match src="type_name [299,325]" dest="type_name [309,335]"/>
  <match src="identifier: messageRecipient [3803,3819]" dest="identifier: messageRecipient [3915,3931]"/>
  <match src="primitive_type [31887,31894]" dest="primitive_type [28110,28117]"/>
  <match src="member_expression [80462,80474]" dest="member_expression [78248,78260]"/>
  <match src="function: function [110372,110380]" dest="function: function [108948,108956]"/>
  <match src="identifier: symbol [107371,107377]" dest="identifier: symbol [105225,105231]"/>
  <match src="): ) [47817,47818]" dest="): ) [44678,44679]"/>
  <match src="]: ] [6227,6228]" dest="]: ] [6428,6429]"/>
  <match src="string [10956,10988]" dest="string [11894,11926]"/>
  <match src="return: return [18238,18244]" dest="return: return [17743,17749]"/>
  <match src="(: ( [83405,83406]" dest="(: ( [81281,81282]"/>
  <match src="public: public [92134,92140]" dest="public: public [90270,90276]"/>
  <match src="call_expression [38470,38476]" dest="call_expression [34864,34870]"/>
  <match src="comment: // keccak256(abi.encodePacked(&quot;isInitialized&quot;)) [806,853]" dest="comment: // keccak256(abi.encodePacked(&quot;isInitialized&quot;)) [829,876]"/>
  <match src="==: == [14677,14679]" dest="==: == [15585,15587]"/>
  <match src="solidity_pragma_token [28751,28766]" dest="solidity_pragma_token [24884,24899]"/>
  <match src="solidity: solidity [44394,44402]" dest="solidity: solidity [41175,41183]"/>
  <match src="): ) [25671,25672]" dest="): ) [22709,22710]"/>
  <match src="bytes32: bytes32 [55584,55591]" dest="bytes32: bytes32 [52634,52641]"/>
  <match src="parameter [106925,106948]" dest="parameter [104768,104791]"/>
  <match src="identifier: keccak256 [59096,59105]" dest="identifier: keccak256 [56238,56247]"/>
  <match src="uint256: uint256 [92694,92701]" dest="uint256: uint256 [90847,90854]"/>
  <match src="function_body [63011,63068]" dest="function_body [60271,60330]"/>
  <match src="): ) [61971,61972]" dest="): ) [59194,59195]"/>
  <match src="identifier: functionCallWithValue [11783,11804]" dest="identifier: functionCallWithValue [12745,12766]"/>
  <match src="member_expression [71761,71772]" dest="member_expression [69285,69296]"/>
  <match src="}: } [72600,72601]" dest="}: } [70145,70146]"/>
  <match src="uint256: uint256 [68144,68151]" dest="uint256: uint256 [65564,65571]"/>
  <match src="identifier: _token [112099,112105]" dest="identifier: _token [111762,111768]"/>
  <match src="(: ( [105493,105494]" dest="(: ( [120058,120059]"/>
  <match src="expression_statement [107605,107648]" dest="expression_statement [105464,105507]"/>
  <match src="call_expression [92324,92336]" dest="call_expression [90464,90476]"/>
  <match src="comment: // covers calls through upgradeAndCall proxy method [5303,5354]" dest="comment: // covers calls through upgradeAndCall proxy method [5475,5526]"/>
  <match src="return: return [68863,68869]" dest="return: return [66301,66307]"/>
  <match src="identifier: _from [36276,36281]" dest="identifier: _from [32619,32624]"/>
  <match src="(: ( [115643,115644]" dest="(: ( [114250,114251]"/>
  <match src="expression_statement [108570,108611]" dest="expression_statement [106415,106456]"/>
  <match src="returns: returns [24704,24711]" dest="returns: returns [23146,23153]"/>
  <match src=",: , [12291,12292]" dest=",: , [13263,13264]"/>
  <match src="public: public [91836,91842]" dest="public: public [89963,89969]"/>
  <match src="identifier: ownerOf [98309,98316]" dest="identifier: ownerOf [96622,96629]"/>
  <match src=",: , [97526,97527]" dest=",: , [95810,95811]"/>
  <match src="member_expression [76211,76221]" dest="member_expression [73880,73890]"/>
  <match src="comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [67567,67644]" dest="comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [64970,65047]"/>
  <match src="&quot;: &quot; [88806,88807]" dest="&quot;: &quot; [86838,86839]"/>
  <match src="identifier: _receiver [38667,38676]" dest="identifier: _receiver [35066,35075]"/>
  <match src="(: ( [74188,74189]" dest="(: ( [71788,71789]"/>
  <match src="using_directive [85385,85411]" dest="using_directive [83333,83359]"/>
  <match src="string [3237,3251]" dest="string [3333,3347]"/>
  <match src="identifier: require [110528,110535]" dest="identifier: _recordBridgeOperation [109469,109491]"/>
  <match src="call_expression [92805,92846]" dest="call_expression [90960,91001]"/>
  <match src="(: ( [1569,1570]" dest="(: ( [1619,1620]"/>
  <match src="): ) [84358,84359]" dest="): ) [82261,82262]"/>
  <match src="storage: storage [76581,76588]" dest="storage: storage [74263,74270]"/>
  <match src="expression_statement [116345,116411]" dest="expression_statement [114972,115038]"/>
  <match src=",: , [102646,102647]" dest=",: , [101091,101092]"/>
  <match src=".: . [107415,107416]" dest=".: . [105270,105271]"/>
  <match src=",: , [91383,91384]" dest=",: , [89496,89497]"/>
  <match src="identifier: _tokenId [112498,112506]" dest="identifier: _tokenId [112110,112118]"/>
  <match src="call_expression [92797,92900]" dest="call_expression [90952,91055]"/>
  <match src="): ) [112580,112581]" dest="): ) [111521,111522]"/>
  <match src="call_argument [19424,19491]" dest="call_argument [19098,19155]"/>
  <match src="identifier: tokenId [94428,94435]" dest="identifier: tokenId [92621,92628]"/>
  <match src="modifier_definition [14375,14440]" dest="modifier_definition [15235,15303]"/>
  <match src="pure: pure [39646,39650]" dest="pure: pure [36077,36081]"/>
  <match src="function: function [26144,26152]" dest="function: function [22012,22020]"/>
  <match src="(: ( [98939,98940]" dest="(: ( [97275,97276]"/>
  <match src="variable_declaration_statement [82454,82491]" dest="variable_declaration_statement [80302,80339]"/>
  <match src="comment: /**      * @dev Tells if a message sent to the AMB bridge has been fixed.      * @return bool indicating the status of the message.      */ [20641,20780]" dest="comment: /**      * @dev Tells if a message sent to the AMB bridge has been fixed.      * @return bool indicating the status of the message.      */ [20190,20332]"/>
  <match src="view: view [23893,23897]" dest="view: view [38769,38773]"/>
  <match src="(: ( [34361,34362]" dest="(: ( [30652,30653]"/>
  <match src="bool: bool [83375,83379]" dest="bool: bool [81250,81254]"/>
  <match src="&quot;: &quot; [93151,93152]" dest="&quot;: &quot; [91315,91316]"/>
  <match src="): ) [43157,43158]" dest="): ) [39888,39889]"/>
  <match src=",: , [104506,104507]" dest=",: , [103025,103026]"/>
  <match src="binary_expression [64670,64676]" dest="binary_expression [61982,61988]"/>
  <match src="state_variable_declaration [13778,13889]" dest="state_variable_declaration [14800,14911]"/>
  <match src="(: ( [89522,89523]" dest="(: ( [87583,87584]"/>
  <match src="primitive_type [74209,74216]" dest="primitive_type [71809,71816]"/>
  <match src="parameter [32292,32308]" dest="parameter [28527,28543]"/>
  <match src="(: ( [25639,25640]" dest="(: ( [22677,22678]"/>
  <match src="(: ( [6119,6120]" dest="(: ( [6318,6319]"/>
  <match src="return_type_definition [40690,40786]" dest="return_type_definition [37159,37259]"/>
  <match src="identifier: addressStorage [48690,48704]" dest="identifier: addressStorage [45569,45583]"/>
  <match src="override_specifier [91417,91425]" dest="override_specifier [89530,89538]"/>
  <match src="(: ( [45107,45108]" dest="(: ( [41911,41912]"/>
  <match src="): ) [107590,107591]" dest="): ) [105448,105449]"/>
  <match src="visibility [6093,6101]" dest="visibility [6291,6299]"/>
  <match src="identifier: lastIndex [72055,72064]" dest="identifier: lastIndex [69584,69593]"/>
  <match src="type_name [97445,97452]" dest="type_name [95727,95734]"/>
  <match src="modifier: modifier [1465,1473]" dest="modifier: modifier [1514,1522]"/>
  <match src="}: } [81933,81934]" dest="}: } [79764,79765]"/>
  <match src="(: ( [112274,112275]" dest="(: ( [111513,111514]"/>
  <match src="array_access [63028,63061]" dest="array_access [60289,60322]"/>
  <match src="user_defined_type [83765,83781]" dest="user_defined_type [81654,81670]"/>
  <match src="identifier: amount [9747,9753]" dest="identifier: amount [10658,10664]"/>
  <match src=",: , [4554,4555]" dest=",: , [4689,4690]"/>
  <match src="array_access [97659,97678]" dest="array_access [95949,95968]"/>
  <match src="type_name [39343,39350]" dest="type_name [35760,35767]"/>
  <match src="state_mutability [65502,65506]" dest="state_mutability [62843,62847]"/>
  <match src="primitive_type [96791,96798]" dest="primitive_type [95049,95056]"/>
  <match src="call_argument [110734,110740]" dest="call_argument [109229,109235]"/>
  <match src="function: function [6583,6591]" dest="function: function [7414,7422]"/>
  <match src="internal: internal [113876,113884]" dest="internal: internal [112856,112864]"/>
  <match src="{: { [18521,18522]" dest="{: { [18033,18034]"/>
  <match src="identifier: set [71761,71764]" dest="identifier: set [69285,69288]"/>
  <match src="contract: contract [215,223]" dest="contract: contract [223,231]"/>
  <match src="): ) [27242,27243]" dest="): ) [39145,39146]"/>
  <match src=",: , [114185,114186]" dest=",: , [22229,22230]"/>
  <match src="call_argument [38551,38555]" dest="call_argument [34948,34952]"/>
  <match src="function_body [89408,89439]" dest="function_body [87462,87495]"/>
  <match src="function_definition [44061,44117]" dest="function_definition [40832,40888]"/>
  <match src=",: , [114965,114966]" dest=",: , [113588,113589]"/>
  <match src="identifier: msg [38531,38534]" dest="identifier: msg [34928,34931]"/>
  <match src=".: . [19648,19649]" dest=".: . [19324,19325]"/>
  <match src="if_statement [43143,43194]" dest="if_statement [39874,39927]"/>
  <match src="call_expression [73869,73910]" dest="call_expression [71459,71500]"/>
  <match src="comment: /**      * @dev See {IERC721-approve}.      */ [91305,91351]" dest="comment: /**      * @dev See {IERC721-approve}.      */ [89415,89463]"/>
  <match src="expression_statement [17243,17297]" dest="expression_statement [17447,17501]"/>
  <match src="identifier: this [4966,4970]" dest="identifier: this [5128,5132]"/>
  <match src="call_argument [109865,109877]" dest="call_argument [108281,108293]"/>
  <match src="contract: contract [34589,34597]" dest="contract: contract [30891,30899]"/>
  <match src="type_name [65063,65070]" dest="type_name [62390,62397]"/>
  <match src="identifier: keyIndex [82602,82610]" dest="identifier: keyIndex [80452,80460]"/>
  <match src="call_expression [14595,14643]" dest="call_expression [15505,15543]"/>
  <match src="identifier: _token [115046,115052]" dest="identifier: _token [115743,115749]"/>
  <match src="): ) [103551,103552]" dest="): ) [102023,102024]"/>
  <match src="type_name [48159,48166]" dest="type_name [45028,45035]"/>
  <match src="function_body [107066,107826]" dest="function_body [104913,105652]"/>
  <match src="identifier: _owns [59161,59166]" dest="identifier: _owns [56303,56308]"/>
  <match src="call_argument [46936,46940]" dest="call_argument [43775,43779]"/>
  <match src="): ) [41777,41778]" dest="): ) [111240,111241]"/>
  <match src="): ) [48951,48952]" dest="): ) [45833,45834]"/>
  <match src="identifier: addressStorage [47742,47756]" dest="identifier: addressStorage [44603,44617]"/>
  <match src="state_variable_declaration [86210,86284]" dest="state_variable_declaration [84177,84251]"/>
  <match src="comment: /**      * @dev Adds a key-value pair to a map, or updates the value for an existing      * key. O(1).      *      * Returns true if the key was added to the map, that is if it was not      * already present.      */ [82744,82960]" dest="comment: /**      * @dev Adds a key-value pair to a map, or updates the value for an existing      * key. O(1).      *      * Returns true if the key was added to the map, that is if it was not      * already present.      */ [80603,80825]"/>
  <match src="type_name [98245,98252]" dest="type_name [96557,96564]"/>
  <match src=",: , [98716,98717]" dest=",: , [97040,97041]"/>
  <match src="identifier: VersionableBridge [39559,39576]" dest="identifier: VersionableBridge [35987,36004]"/>
  <match src="(: ( [91892,91893]" dest="(: ( [90020,90021]"/>
  <match src="internal: internal [83357,83365]" dest="internal: internal [81232,81240]"/>
  <match src="{: { [33391,33392]" dest="{: { [29656,29657]"/>
  <match src="function: function [3107,3115]" dest="function: function [3202,3210]"/>
  <match src="identifier: require [109725,109732]" dest="identifier: require [107671,107678]"/>
  <match src="expression_statement [70802,70843]" dest="expression_statement [68303,68344]"/>
  <match src="(: ( [26249,26250]" dest="(: ( [22110,22111]"/>
  <match src="): ) [98272,98273]" dest="): ) [96584,96585]"/>
  <match src="identifier: _tokenURI [89978,89987]" dest="identifier: _tokenURI [88049,88058]"/>
  <match src="primitive_type [98575,98582]" dest="primitive_type [96894,96901]"/>
  <match src="returns: returns [47707,47714]" dest="returns: returns [44567,44574]"/>
  <match src="string_literal [92202,92229]" dest="string_literal [90339,90366]"/>
  <match src="variable_declaration [111796,111814]" dest="variable_declaration [23172,23187]"/>
  <match src="bytes4: bytes4 [36362,36368]" dest="bytes4: bytes4 [32708,32714]"/>
  <match src="}: } [102663,102664]" dest="}: } [101109,101110]"/>
  <match src="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [65145,65425]" dest="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [62476,62765]"/>
  <match src="solidity_pragma_token [50292,50306]" dest="solidity_pragma_token [47220,47234]"/>
  <match src="internal: internal [83036,83044]" dest="internal: internal [80902,80910]"/>
  <match src="function_definition [48131,48317]" dest="function_definition [45000,45188]"/>
  <match src="state_mutability [67469,67473]" dest="state_mutability [64869,64873]"/>
  <match src="number_literal: 10 [43547,43549]" dest="number_literal: 10 [40292,40294]"/>
  <match src="): ) [53130,53131]" dest="): ) [50115,50116]"/>
  <match src="return_statement [10922,10990]" dest="return_statement [11860,11928]"/>
  <match src="inheritance_specifier [104493,104506]" dest="inheritance_specifier [103012,103025]"/>
  <match src="]: ] [92566,92567]" dest="]: ] [90713,90714]"/>
  <match src="(: ( [89799,89800]" dest="(: ( [87866,87867]"/>
  <match src="}: } [78915,78916]" dest="}: } [76667,76668]"/>
  <match src="): ) [50684,50685]" dest="): ) [47623,47624]"/>
  <match src="identifier: require [6112,6119]" dest="identifier: require [6311,6318]"/>
  <match src=".: . [3917,3918]" dest=".: . [4030,4031]"/>
  <match src="array_access [6207,6228]" dest="array_access [6408,6429]"/>
  <match src="interface: interface [43829,43838]" dest="interface: interface [40590,40599]"/>
  <match src="(: ( [12517,12518]" dest="(: ( [13491,13492]"/>
  <match src="uint256: uint256 [16602,16609]" dest="uint256: uint256 [118382,118389]"/>
  <match src="}: } [81316,81317]" dest="}: } [79130,79131]"/>
  <match src="): ) [23572,23573]" dest="): ) [38452,38453]"/>
  <match src="assembly: assembly [13280,13288]" dest="assembly: assembly [14270,14278]"/>
  <match src="contract_body [42781,43599]" dest="contract_body [39504,40348]"/>
  <match src="): ) [50173,50174]" dest="): ) [47094,47095]"/>
  <match src="string [2912,2926]" dest="string [3000,3014]"/>
  <match src="type_name [68178,68185]" dest="type_name [65598,65605]"/>
  <match src=",: , [97152,97153]" dest=",: , [95420,95421]"/>
  <match src=".: . [3597,3598]" dest=".: . [3702,3703]"/>
  <match src="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [74670,74992]" dest="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [72287,72618]"/>
  <match src="comment: // If there is a baseURI but no tokenURI, concatenate the tokenID to the baseURI. [90087,90168]" dest="comment: // If there is a baseURI but no tokenURI, concatenate the tokenID to the baseURI. [88161,88242]"/>
  <match src="type_name [44970,44977]" dest="type_name [41770,41777]"/>
  <match src="expression_statement [50139,50175]" dest="expression_statement [47060,47096]"/>
  <match src="): ) [46797,46798]" dest="): ) [43634,43635]"/>
  <match src="uint256: uint256 [42892,42899]" dest="uint256: uint256 [39619,39626]"/>
  <match src="call_expression [65535,65564]" dest="call_expression [62877,62906]"/>
  <match src="primitive_type [107321,107326]" dest="primitive_type [105174,105179]"/>
  <match src="new_expression [107511,107531]" dest="new_expression [105369,105389]"/>
  <match src="identifier: lastEntry [80335,80344]" dest="identifier: lastEntry [78118,78127]"/>
  <match src="identifier: _image [49664,49670]" dest="identifier: _image [46569,46575]"/>
  <match src="(: ( [100519,100520]" dest="(: ( [98892,98893]"/>
  <match src="function_definition [38062,38694]" dest="function_definition [34448,35094]"/>
  <match src="): ) [14708,14709]" dest="): ) [15616,15617]"/>
  <match src="identifier: _bridgedToken [109752,109765]" dest="identifier: _bridgedToken [107698,107711]"/>
  <match src="identifier: _approved [32315,32324]" dest="identifier: _approved [28550,28559]"/>
  <match src="string: string [46143,46149]" dest="string: string [42968,42974]"/>
  <match src="function_body [24719,24880]" dest="function_body [23161,23413]"/>
  <match src="visibility [26861,26869]" dest="visibility [37978,37986]"/>
  <match src="identifier: IERC721 [28848,28855]" dest="identifier: IERC721 [24987,24994]"/>
  <match src="visibility [99398,99406]" dest="visibility [97744,97752]"/>
  <match src="returns: returns [90508,90515]" dest="returns: returns [88591,88598]"/>
  <match src="call_expression [57565,57600]" dest="call_expression [54666,54701]"/>
  <match src="(: ( [109751,109752]" dest="(: ( [107697,107698]"/>
  <match src="bool: bool [78630,78634]" dest="bool: bool [76377,76381]"/>
  <match src="identifier: data [11269,11273]" dest="identifier: data [12216,12220]"/>
  <match src="memory: memory [110845,110851]" dest="memory: memory [110290,110296]"/>
  <match src="identifier: index [81785,81790]" dest="identifier: index [79612,79617]"/>
  <match src="view: view [6430,6434]" dest="view: view [7255,7259]"/>
  <match src="return_statement [16036,16081]" dest="return_statement [16512,16557]"/>
  <match src="}: } [57845,57846]" dest="}: } [54953,54954]"/>
  <match src="identifier: to [100305,100307]" dest="identifier: to [98672,98674]"/>
  <match src="call_expression [112869,113049]" dest="call_expression [112334,112421]"/>
  <match src=",: , [115573,115574]" dest=",: , [114177,114178]"/>
  <match src="view: view [32552,32556]" dest="view: view [28794,28798]"/>
  <match src="user_defined_type [85312,85327]" dest="user_defined_type [83258,83273]"/>
  <match src="!=: != [43269,43271]" dest="!=: != [40005,40007]"/>
  <match src="visibility [113876,113884]" dest="visibility [112856,112864]"/>
  <match src="identifier: _messageId [3253,3263]" dest="identifier: _messageId [3349,3359]"/>
  <match src="member_expression [97801,97820]" dest="member_expression [96097,96116]"/>
  <match src="primitive_type [58998,59005]" dest="primitive_type [56136,56143]"/>
  <match src="primitive_type [114899,114906]" dest="primitive_type [113520,113527]"/>
  <match src=",: , [11387,11388]" dest=",: , [12335,12336]"/>
  <match src="number_literal: 1 [71726,71727]" dest="number_literal: 1 [69249,69250]"/>
  <match src="identifier: require [19502,19509]" dest="identifier: require [19167,19174]"/>
  <match src="identifier: _indexes [71302,71310]" dest="identifier: _indexes [68818,68826]"/>
  <match src="sload: sload [35004,35009]" dest="sload: sload [31312,31317]"/>
  <match src="address: address [40134,40141]" dest="address: address [36586,36593]"/>
  <match src="): ) [34418,34419]" dest="): ) [30709,30710]"/>
  <match src="comment: // File: contracts/interfaces/IOwnable.sol [54835,54877]" dest="comment: // File: contracts/interfaces/IOwnable.sol [51859,51901]"/>
  <match src="type_cast_expression [112225,112238]" dest="type_cast_expression [111820,111833]"/>
  <match src="number_literal: 1 [79172,79173]" dest="number_literal: 1 [76930,76931]"/>
  <match src="): ) [89827,89828]" dest="): ) [87894,87895]"/>
  <match src="call_argument [97595,97602]" dest="call_argument [95882,95889]"/>
  <match src="binary_expression [25622,25642]" dest="binary_expression [22660,22680]"/>
  <match src="solidity_version:  0.7.5 [33637,33643]" dest="solidity_version:  0.7.5 [29912,29918]"/>
  <match src=",: , [96236,96237]" dest=",: , [94477,94478]"/>
  <match src="array_access [97754,97774]" dest="array_access [96048,96068]"/>
  <match src="visibility [74370,74378]" dest="visibility [71976,71984]"/>
  <match src="type_cast_expression [75097,75137]" dest="type_cast_expression [72725,72765]"/>
  <match src="calldata: calldata [106932,106940]" dest="calldata: calldata [104775,104783]"/>
  <match src="identifier: AddressSet [75009,75019]" dest="identifier: AddressSet [72636,72646]"/>
  <match src="call_expression [91885,91958]" dest="call_expression [90013,90086]"/>
  <match src="]: ] [3265,3266]" dest="]: ] [3361,3362]"/>
  <match src="identifier: _bytes [34375,34381]" dest="identifier: _bytes [30666,30672]"/>
  <match src="}: } [79231,79232]" dest="}: } [76992,76993]"/>
  <match src="array_access [98651,98668]" dest="array_access [96973,96990]"/>
  <match src="call_expression [15311,15361]" dest="call_expression [16235,16285]"/>
  <match src="function_body [45074,45249]" dest="function_body [41877,42055]"/>
  <match src="identifier: _recipient [108539,108549]" dest="identifier: _recipient [106383,106393]"/>
  <match src="user_defined_type [74566,74576]" dest="user_defined_type [72179,72189]"/>
  <match src="visibility [86451,86458]" dest="visibility [84427,84434]"/>
  <match src="member_expression [46244,46266]" dest="member_expression [43070,43092]"/>
  <match src="address: address [6898,6905]" dest="address: address [7735,7742]"/>
  <match src="(: ( [66797,66798]" dest="(: ( [64181,64182]"/>
  <match src="state_mutability [2480,2484]" dest="state_mutability [2558,2562]"/>
  <match src="{: { [65072,65073]" dest="{: { [62399,62400]"/>
  <match src="parameter [6723,6727]" dest="parameter [7556,7560]"/>
  <match src="identifier: to [97020,97022]" dest="identifier: to [95282,95284]"/>
  <match src="memory: memory [46188,46194]" dest="memory: memory [43014,43020]"/>
  <match src="external: external [39629,39637]" dest="external: external [36059,36067]"/>
  <match src="call_argument [103948,103956]" dest="call_argument [102431,102439]"/>
  <match src="return_type_definition [78621,78635]" dest="return_type_definition [76368,76382]"/>
  <match src="comment: // underlying Set. [69981,69999]" dest="comment: // underlying Set. [67458,67476]"/>
  <match src="identifier: length [72990,72996]" dest="identifier: length [70549,70555]"/>
  <match src="solidity_pragma_token [118093,118107]" dest="solidity_pragma_token [117319,117333]"/>
  <match src="variable_declaration [46780,46797]" dest="variable_declaration [43617,43634]"/>
  <match src="=: = [928,929]" dest="=: = [954,955]"/>
  <match src="event_paramater [40222,40247]" dest="event_paramater [36677,36702]"/>
  <match src="return: return [90015,90021]" dest="return: return [88087,88093]"/>
  <match src="function_definition [47644,47826]" dest="function_definition [44504,44688]"/>
  <match src="pragma_directive [27930,27953]" dest="pragma_directive [24037,24060]"/>
  <match src="(: ( [107407,107408]" dest="(: ( [105262,105263]"/>
  <match src=",: , [91601,91602]" dest=",: , [89718,89719]"/>
  <match src="type_name [2451,2458]" dest="type_name [2529,2536]"/>
  <match src=",: , [38106,38107]" dest=",: , [34493,34494]"/>
  <match src="function_body [20854,20946]" dest="function_body [20407,20501]"/>
  <match src="true [110823,110827]" dest="true [109320,109324]"/>
  <match src="memory: memory [11879,11885]" dest="memory: memory [12841,12847]"/>
  <match src="}: } [24405,24406]" dest="}: } [23965,23966]"/>
  <match src="identifier: EnumerableMap [77498,77511]" dest="identifier: EnumerableMap [75214,75227]"/>
  <match src="!: ! [100148,100149]" dest="!: ! [98511,98512]"/>
  <match src="call_argument [113000,113009]" dest="call_argument [112401,112410]"/>
  <match src=".: . [76673,76674]" dest=".: . [74356,74357]"/>
  <match src="visibility [50648,50654]" dest="visibility [47587,47593]"/>
  <match src="modifier_definition [102176,102312]" dest="modifier_definition [100609,100748]"/>
  <match src="state_mutability [89370,89374]" dest="state_mutability [87424,87428]"/>
  <match src="}: } [94639,94640]" dest="}: } [92835,92836]"/>
  <match src="): ) [107125,107126]" dest="): ) [104973,104974]"/>
  <match src="identifier: token [20604,20609]" dest="identifier: token [20150,20155]"/>
  <match src="{: { [64625,64626]" dest="{: { [61935,61936]"/>
  <match src="identifier: owner [88785,88790]" dest="identifier: owner [86817,86822]"/>
  <match src="type_name [49604,49611]" dest="type_name [46508,46515]"/>
  <match src="visibility [103897,103905]" dest="visibility [102379,102387]"/>
  <match src="visibility [17922,17930]" dest="visibility [18160,18168]"/>
  <match src="visibility [36344,36352]" dest="visibility [32690,32698]"/>
  <match src="primitive_type [88307,88313]" dest="primitive_type [86325,86331]"/>
  <match src="address: address [106219,106226]" dest="address: address [104047,104054]"/>
  <match src="): ) [75046,75047]" dest="): ) [72673,72674]"/>
  <match src="identifier: set [98705,98708]" dest="identifier: set [97029,97032]"/>
  <match src="primitive_type [61965,61971]" dest="primitive_type [59188,59194]"/>
  <match src="uint256: uint256 [89523,89530]" dest="uint256: uint256 [87584,87591]"/>
  <match src="{: { [90741,90742]" dest="{: { [88831,88832]"/>
  <match src="internal: internal [42907,42915]" dest="internal: internal [39634,39642]"/>
  <match src="internal: internal [59807,59815]" dest="internal: internal [56969,56977]"/>
  <match src="comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [8782,9688]" dest="comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [9677,10598]"/>
  <match src="call_argument [107511,107590]" dest="call_argument [105369,105448]"/>
  <match src="identifier: functionCall [11227,11239]" dest="identifier: functionCall [12174,12186]"/>
  <match src="(: ( [24712,24713]" dest="(: ( [23154,23155]"/>
  <match src="identifier: a [65093,65094]" dest="identifier: a [62421,62422]"/>
  <match src="): ) [106214,106215]" dest="): ) [104042,104043]"/>
  <match src="array_access [81090,81107]" dest="array_access [78896,78913]"/>
  <match src="}: } [115237,115238]" dest="}: } [113831,113832]"/>
  <match src="identifier: _tokenOwners [91038,91050]" dest="identifier: _tokenOwners [89137,89149]"/>
  <match src="solidity_version_comparison_operator [27945,27947]" dest="solidity_version_comparison_operator [24052,24054]"/>
  <match src="member_expression [2895,2911]" dest="member_expression [2983,2999]"/>
  <match src="variable_declaration_tuple [12849,12888]" dest="variable_declaration_tuple [13830,13869]"/>
  <match src="solidity: solidity [101503,101511]" dest="solidity: solidity [99905,99913]"/>
  <match src="call_argument [12922,12926]" dest="call_argument [13903,13907]"/>
  <match src=",: , [101767,101768]" dest=",: , [100182,100183]"/>
  <match src="comment: // To implement this library for multiple types with as little code [69664,69731]" dest="comment: // To implement this library for multiple types with as little code [67136,67203]"/>
  <match src="if_statement [107266,107475]" dest="if_statement [105118,105332]"/>
  <match src="identifier: value [12532,12537]" dest="identifier: value [13506,13511]"/>
  <match src="): ) [74162,74163]" dest="): ) [71761,71762]"/>
  <match src="): ) [114337,114338]" dest="): ) [112946,112947]"/>
  <match src="identifier: toDeleteIndex [72287,72300]" dest="identifier: toDeleteIndex [69821,69834]"/>
  <match src="function: function [23429,23437]" dest="function: function [38284,38292]"/>
  <match src="primitive_type [114249,114256]" dest="primitive_type [23297,23304]"/>
  <match src="uint256: uint256 [55646,55653]" dest="uint256: uint256 [52698,52705]"/>
  <match src="type_name [45562,45568]" dest="type_name [42376,42382]"/>
  <match src="state_variable_declaration [86423,86470]" dest="state_variable_declaration [84399,84446]"/>
  <match src="(: ( [76176,76177]" dest="(: ( [73844,73845]"/>
  <match src="[: [ [63048,63049]" dest="[: [ [60309,60310]"/>
  <match src="state_mutability [31913,31917]" dest="state_mutability [28136,28140]"/>
  <match src="expression_statement [67502,67531]" dest="expression_statement [64903,64932]"/>
  <match src="expression_statement [98692,98722]" dest="expression_statement [97016,97046]"/>
  <match src="contract_declaration [101618,103977]" dest="contract_declaration [100029,102462]"/>
  <match src=",: , [74199,74200]" dest=",: , [71799,71800]"/>
  <match src="identifier: _safeMint [96216,96225]" dest="identifier: _safeMint [94457,94466]"/>
  <match src="identifier: _setBaseURI [103192,103203]" dest="identifier: _setBaseURI [101655,101666]"/>
  <match src="type_name [72913,72916]" dest="type_name [70471,70474]"/>
  <match src="identifier: from [98239,98243]" dest="identifier: from [96551,96555]"/>
  <match src="return_statement [68863,68876]" dest="return_statement [66301,66314]"/>
  <match src="(: ( [31886,31887]" dest="(: ( [28109,28110]"/>
  <match src="call_argument [89603,89619]" dest="call_argument [87665,87681]"/>
  <match src="call_argument [3594,3642]" dest="call_argument [3699,3747]"/>
  <match src=",: , [98255,98256]" dest=",: , [96567,96568]"/>
  <match src="return_type_definition [84269,84295]" dest="return_type_definition [82171,82197]"/>
  <match src="call_argument [68832,68838]" dest="call_argument [66269,66275]"/>
  <match src="): ) [271,272]" dest="): ) [280,281]"/>
  <match src="(: ( [31926,31927]" dest="(: ( [28149,28150]"/>
  <match src="type_name [1236,1243]" dest="type_name [1275,1282]"/>
  <match src="return_statement [89262,89275]" dest="return_statement [87310,87323]"/>
  <match src="(: ( [75116,75117]" dest="(: ( [72744,72745]"/>
  <match src=".: . [112717,112718]" dest=".: . [111593,111594]"/>
  <match src="identifier: _tokenApprovals [86140,86155]" dest="identifier: _tokenApprovals [84104,84119]"/>
  <match src="emit_statement [92304,92358]" dest="emit_statement [90444,90498]"/>
  <match src="identifier: _tokenId [107753,107761]" dest="identifier: _tokenId [105577,105585]"/>
  <match src="(: ( [106860,106861]" dest="(: ( [104700,104701]"/>
  <match src="&quot;: &quot; [95390,95391]" dest="&quot;: &quot; [93608,93609]"/>
  <match src="user_defined_type [118382,118400]" dest="user_defined_type [119210,119228]"/>
  <match src="{: { [44545,44546]" dest="{: { [41335,41336]"/>
  <match src="call_argument [39259,39264]" dest="call_argument [35671,35676]"/>
  <match src="binary_expression [64647,64652]" dest="binary_expression [61958,61963]"/>
  <match src="array_access [48793,48874]" dest="array_access [45673,45754]"/>
  <match src="returns: returns [76168,76175]" dest="returns: returns [73836,73843]"/>
  <match src="): ) [88994,88995]" dest="): ) [87034,87035]"/>
  <match src="identifier: retval [100500,100506]" dest="identifier: retval [98873,98879]"/>
  <match src="function: function [44934,44942]" dest="function: function [41733,41741]"/>
  <match src="visibility [65899,65907]" dest="visibility [63257,63265]"/>
  <match src="call_expression [5971,5990]" dest="call_expression [6163,6182]"/>
  <match src="indexed: indexed [47297,47304]" dest="indexed: indexed [44150,44157]"/>
  <match src="call_argument [39193,39211]" dest="call_argument [35604,35622]"/>
  <match src="function_definition [60732,60831]" dest="function_definition [57925,58024]"/>
  <match src="&quot;: &quot; [96974,96975]" dest="&quot;: &quot; [95234,95235]"/>
  <match src="call_argument [97138,97148]" dest="call_argument [95406,95416]"/>
  <match src="type_cast_expression [73894,73908]" dest="type_cast_expression [71484,71498]"/>
  <match src="member_expression [78861,78873]" dest="member_expression [76613,76625]"/>
  <match src="call_expression [1520,1598]" dest="call_expression [1570,1648]"/>
  <match src=".: . [2223,2224]" dest=".: . [2294,2295]"/>
  <match src="primitive_type [110953,110960]" dest="primitive_type [110361,110368]"/>
  <match src="view: view [84264,84268]" dest="view: view [82166,82170]"/>
  <match src="address: address [116191,116198]" dest="address: address [114813,114820]"/>
  <match src="identifier: transferOwnership [5906,5923]" dest="identifier: transferOwnership [6097,6114]"/>
  <match src="call_argument [83634,83644]" dest="call_argument [81517,81527]"/>
  <match src="identifier: length [83758,83764]" dest="identifier: length [81647,81653]"/>
  <match src="): ) [38555,38556]" dest="): ) [34952,34953]"/>
  <match src="call_argument [20622,20627]" dest="call_argument [20168,20173]"/>
  <match src="override_specifier [91187,91195]" dest="override_specifier [89292,89300]"/>
  <match src="identifier: tokenId [88987,88994]" dest="identifier: tokenId [87027,87034]"/>
  <match src="identifier: set [72978,72981]" dest="identifier: set [70537,70540]"/>
  <match src=".: . [9795,9796]" dest=".: . [10707,10708]"/>
  <match src="view: view [90503,90507]" dest="view: view [88586,88590]"/>
  <match src="event_paramater [29191,29215]" dest="event_paramater [25339,25363]"/>
  <match src="): ) [42617,42618]" dest="): ) [39236,39237]"/>
  <match src="!=: != [106216,106218]" dest="!=: != [104044,104046]"/>
  <match src="): ) [13350,13351]" dest="): ) [14341,14342]"/>
  <match src="uint256: uint256 [67540,67547]" dest="uint256: uint256 [64942,64949]"/>
  <match src="binary_expression [57420,57490]" dest="binary_expression [54519,54589]"/>
  <match src="internal: internal [14571,14579]" dest="internal: internal [15439,15447]"/>
  <match src="call_argument [12539,12551]" dest="call_argument [13513,13525]"/>
  <match src="): ) [7113,7114]" dest="): ) [7958,7959]"/>
  <match src="primitive_type [56300,56307]" dest="primitive_type [53368,53375]"/>
  <match src="call_argument [3253,3263]" dest="call_argument [3349,3359]"/>
  <match src="): ) [76639,76640]" dest="): ) [74321,74322]"/>
  <match src="type_name [115533,115540]" dest="type_name [114136,114143]"/>
  <match src="identifier: approved [92124,92132]" dest="identifier: approved [90260,90268]"/>
  <match src="(: ( [46853,46854]" dest="(: ( [43691,43692]"/>
  <match src=".: . [90032,90033]" dest=".: . [88104,88105]"/>
  <match src="while_statement [43448,43560]" dest="while_statement [40191,40306]"/>
  <match src="visibility [6875,6883]" dest="visibility [7712,7720]"/>
  <match src="identifier: abi [27285,27288]" dest="identifier: abi [39287,39290]"/>
  <match src="visibility [11855,11863]" dest="visibility [12817,12825]"/>
  <match src="primitive_type [101748,101754]" dest="primitive_type [100163,100169]"/>
  <match src="identifier: messageId [40362,40371]" dest="identifier: messageId [36819,36828]"/>
  <match src="call_argument [90191,90237]" dest="call_argument [88266,88312]"/>
  <match src="view: view [89214,89218]" dest="view: view [87261,87265]"/>
  <match src="member_expression [72502,72514]" dest="member_expression [70042,70054]"/>
  <match src=",: , [9737,9738]" dest=",: , [10648,10649]"/>
  <match src="call_argument [4701,4722]" dest="call_argument [4842,4863]"/>
  <match src="primitive_type [100493,100499]" dest="primitive_type [98866,98872]"/>
  <match src="state_mutability [16588,16592]" dest="state_mutability [118368,118372]"/>
  <match src="{: { [88330,88331]" dest="{: { [86348,86349]"/>
  <match src="return: return [12488,12494]" dest="return: return [13462,13468]"/>
  <match src="(: ( [47766,47767]" dest="(: ( [44627,44628]"/>
  <match src="number_literal: 0 [24326,24327]" dest="number_literal: 0 [23955,23956]"/>
  <match src="return: return [82171,82177]" dest="return: return [80012,80018]"/>
  <match src="identifier: _inner [75121,75127]" dest="identifier: _inner [72749,72755]"/>
  <match src="comment: // _owner == HomeOmnibridgeNFT/ForeignOmnibridgeNFT mediator [56725,56785]" dest="comment: // _owner == HomeOmnibridgeNFT/ForeignOmnibridgeNFT mediator [53805,53865]"/>
  <match src="pragma: pragma [4029,4035]" dest="pragma: pragma [4148,4154]"/>
  <match src="{: { [90928,90929]" dest="{: { [89025,89026]"/>
  <match src="identifier: errorMessage [68840,68852]" dest="identifier: errorMessage [66277,66289]"/>
  <match src="call_argument [38531,38541]" dest="call_argument [34928,34938]"/>
  <match src="member_expression [79148,79181]" dest="member_expression [76906,76939]"/>
  <match src="): ) [91729,91730]" dest="): ) [89850,89851]"/>
  <match src="address: address [9782,9789]" dest="address: address [10694,10701]"/>
  <match src="&gt;: &gt; [67512,67513]" dest="&gt;: &gt; [64913,64914]"/>
  <match src="number_literal: 0 [39168,39169]" dest="number_literal: 0 [35578,35579]"/>
  <match src="type_name [92471,92478]" dest="type_name [90617,90624]"/>
  <match src="&quot;: &quot; [59123,59124]" dest="&quot;: &quot; [56265,56266]"/>
  <match src="): ) [75802,75803]" dest="): ) [73457,73458]"/>
  <match src="abstract: abstract [104246,104254]" dest="abstract: abstract [102755,102763]"/>
  <match src="struct_declaration [70104,70353]" dest="struct_declaration [67585,67841]"/>
  <match src="primitive_type [81736,81743]" dest="primitive_type [79562,79569]"/>
  <match src="[: [ [3209,3210]" dest="[: [ [3305,3306]"/>
  <match src="bool: bool [32566,32570]" dest="bool: bool [28808,28812]"/>
  <match src="): ) [28678,28679]" dest="): ) [24805,24806]"/>
  <match src="identifier: upgradeabilityOwner [1577,1596]" dest="identifier: upgradeabilityOwner [1627,1646]"/>
  <match src="parameter [90919,90926]" dest="parameter [89016,89023]"/>
  <match src="): ) [115749,115750]" dest="): ) [114357,114358]"/>
  <match src="call_expression [37486,37526]" dest="call_expression [33861,33901]"/>
  <match src="identifier: from [101388,101392]" dest="identifier: from [99785,99789]"/>
  <match src="expression_statement [97801,97830]" dest="expression_statement [96097,96126]"/>
  <match src="identifier: requestGasLimit [111061,111076]" dest="identifier: requestGasLimit [120847,120862]"/>
  <match src="function_definition [36216,36543]" dest="function_definition [32557,32894]"/>
  <match src="uint256: uint256 [7415,7422]" dest="uint256: uint256 [8270,8277]"/>
  <match src="comment: /**      * @dev See {IERC721Metadata-name}.      */ [89135,89186]" dest="comment: /**      * @dev See {IERC721Metadata-name}.      */ [87179,87232]"/>
  <match src="type_cast_expression [96861,96871]" dest="type_cast_expression [95120,95130]"/>
  <match src="type_cast_expression [24318,24328]" dest="type_cast_expression [23947,23957]"/>
  <match src="solidity_version: 0.7.0 [43686,43691]" dest="solidity_version: 0.7.0 [40440,40445]"/>
  <match src="(: ( [4680,4681]" dest="(: ( [4820,4821]"/>
  <match src=",: , [97514,97515]" dest=",: , [95798,95799]"/>
  <match src="): ) [12676,12677]" dest="): ) [13653,13654]"/>
  <match src="return: return [1009,1015]" dest="return: return [1039,1045]"/>
  <match src="identifier: _name [88340,88345]" dest="identifier: _name [86359,86364]"/>
  <match src="primitive_type [40165,40172]" dest="primitive_type [36618,36625]"/>
  <match src="visibility [2471,2479]" dest="visibility [2549,2557]"/>
  <match src="}: } [18576,18577]" dest="}: } [18197,18198]"/>
  <match src="internal: internal [34383,34391]" dest="internal: internal [30674,30682]"/>
  <match src="member_expression [88869,88896]" dest="member_expression [86903,86930]"/>
  <match src="primitive_type [109621,109628]" dest="primitive_type [107565,107572]"/>
  <match src="(: ( [90886,90887]" dest="(: ( [88983,88984]"/>
  <match src="parameter [84210,84238]" dest="parameter [82112,82140]"/>
  <match src="unary_expression [80807,80826]" dest="unary_expression [78601,78620]"/>
  <match src="identifier: map [81763,81766]" dest="identifier: map [79590,79593]"/>
  <match src="solidity: solidity [43676,43684]" dest="solidity: solidity [40430,40438]"/>
  <match src="expression_statement [92797,92901]" dest="expression_statement [90952,91056]"/>
  <match src="type_name [63005,63009]" dest="type_name [60265,60269]"/>
  <match src="variable_declaration [82454,82470]" dest="variable_declaration [80302,80318]"/>
  <match src="address: address [73813,73820]" dest="address: address [71402,71409]"/>
  <match src="^:  ^ [76774,76776]" dest="^:  ^ [74464,74466]"/>
  <match src="&amp;&amp;: &amp;&amp; [5160,5162]" dest="&amp;&amp;: &amp;&amp; [5331,5333]"/>
  <match src="): ) [95052,95053]" dest="): ) [93259,93260]"/>
  <match src="function_definition [7362,7424]" dest="function_definition [8217,8279]"/>
  <match src="identifier: uintStorage [3198,3209]" dest="identifier: uintStorage [3294,3305]"/>
  <match src="block_statement [111924,112557]" dest="block_statement [111243,112180]"/>
  <match src="visibility [60518,60526]" dest="visibility [57705,57713]"/>
  <match src="identifier: sender [38535,38541]" dest="identifier: sender [34932,34938]"/>
  <match src="constant: constant [49254,49262]" dest="constant: constant [46151,46159]"/>
  <match src="(: ( [52257,52258]" dest="(: ( [49224,49225]"/>
  <match src="call_expression [19416,19492]" dest="call_expression [19090,19156]"/>
  <match src="call_argument [98709,98716]" dest="call_argument [97033,97040]"/>
  <match src="array_access [72043,72065]" dest="array_access [69572,69594]"/>
  <match src="visibility [37024,37032]" dest="visibility [33388,33396]"/>
  <match src="%: % [43519,43520]" dest="%: % [40263,40264]"/>
  <match src="type_name [108339,108346]" dest="type_name [106177,106184]"/>
  <match src="call_argument [98756,98763]" dest="call_argument [97082,97089]"/>
  <match src="): ) [74460,74461]" dest="): ) [72067,72068]"/>
  <match src="primitive_type [1562,1569]" dest="primitive_type [1612,1619]"/>
  <match src="call_expression [2885,2940]" dest="call_expression [2973,3028]"/>
  <match src="comment: // File: contracts/upgradeable_contracts/BasicAMBMediator.sol [13527,13588]" dest="comment: // File: contracts/upgradeable_contracts/BasicAMBMediator.sol [14528,14589]"/>
  <match src="{: { [83607,83608]" dest="{: { [81489,81490]"/>
  <match src="parameter [81736,81743]" dest="parameter [79562,79569]"/>
  <match src="returns: returns [6800,6807]" dest="returns: returns [7635,7642]"/>
  <match src="function_body [113894,114368]" dest="function_body [112874,112978]"/>
  <match src="&quot;: &quot; [9986,9987]" dest="&quot;: &quot; [10901,10902]"/>
  <match src="primitive_type [29414,29421]" dest="primitive_type [25567,25574]"/>
  <match src="function_definition [81209,81317]" dest="function_definition [79021,79131]"/>
  <match src="type_name [464,488]" dest="type_name [477,501]"/>
  <match src="parameter [73813,73826]" dest="parameter [71402,71415]"/>
  <match src="address: address [90672,90679]" dest="address: address [88762,88769]"/>
  <match src=",: , [70552,70553]" dest=",: , [68048,68049]"/>
  <match src=",: , [83006,83007]" dest=",: , [80872,80873]"/>
  <match src="library: library [69636,69643]" dest="library: library [67107,67114]"/>
  <match src="call_argument [92176,92200]" dest="call_argument [90313,90337]"/>
  <match src="identifier: to [93483,93485]" dest="identifier: to [91655,91657]"/>
  <match src="address: address [92101,92108]" dest="address: address [90237,90244]"/>
  <match src="}: } [113381,113382]" dest="}: } [112428,112429]"/>
  <match src=",: , [12648,12649]" dest=",: , [13625,13626]"/>
  <match src="returns: returns [70577,70584]" dest="returns: returns [68073,68080]"/>
  <match src="bool: bool [114923,114927]" dest="bool: bool [113545,113549]"/>
  <match src="string: string [55797,55803]" dest="string: string [52852,52858]"/>
  <match src="identifier: key [82188,82191]" dest="identifier: key [80029,80032]"/>
  <match src="call_argument [3914,3962]" dest="call_argument [4027,4075]"/>
  <match src="): ) [75726,75727]" dest="): ) [73380,73381]"/>
  <match src="comment: // File: @openzeppelin/contracts/introspection/ERC165.sol [61977,62034]" dest="comment: // File: @openzeppelin/contracts/introspection/ERC165.sol [59203,59260]"/>
  <match src="}: } [106235,106236]" dest="}: } [104064,104065]"/>
  <match src="visibility [101699,101705]" dest="visibility [100111,100117]"/>
  <match src=",: , [96943,96944]" dest=",: , [95203,95204]"/>
  <match src="identifier: _tokenId [113027,113035]" dest="identifier: _tokenId [112412,112420]"/>
  <match src="comment: /**      * @dev Checks if specified token was already bridged at least once.      * @param _token address of the token contract.      * @return true, if token was already bridged.      */ [105864,106051]" dest="comment: // Since contract is intended to be deployed under EternalStorageProxy, only constant and immutable variables can be set here [103243,103368]"/>
  <match src="struct_field_assignment [9970,9983]" dest="struct_field_assignment [10885,10898]"/>
  <match src="tuple_expression [40808,40817]" dest="tuple_expression [37283,37292]"/>
  <match src="}: } [34492,34493]" dest="}: } [30786,30787]"/>
  <match src="identifier: operator [92176,92184]" dest="identifier: operator [90313,90321]"/>
  <match src="bytes32: bytes32 [2818,2825]" dest="bytes32: bytes32 [2905,2912]"/>
  <match src="block_statement [116276,116421]" dest="block_statement [114901,115049]"/>
  <match src="bytes32: bytes32 [6568,6575]" dest="bytes32: bytes32 [7397,7404]"/>
  <match src="{: { [28253,28254]" dest="{: { [24371,24372]"/>
  <match src="new: new [107511,107514]" dest="new: new [105369,105372]"/>
  <match src=".: . [102030,102031]" dest=".: . [100456,100457]"/>
  <match src="comment: // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs [71798,71904]" dest="comment: // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs [69324,69430]"/>
  <match src="primitive_type [115533,115540]" dest="primitive_type [114136,114143]"/>
  <match src="memory: memory [100217,100223]" dest="memory: memory [98583,98589]"/>
  <match src="event_definition [18904,19005]" dest="event_definition [18538,18639]"/>
  <match src="(: ( [4965,4966]" dest="(: ( [5127,5128]"/>
  <match src="function: function [99353,99361]" dest="function: function [97699,97707]"/>
  <match src="function_definition [6913,6994]" dest="function_definition [7752,7833]"/>
  <match src="^:  ^ [63732,63734]" dest="^:  ^ [61016,61018]"/>
  <match src="identifier: require [1512,1519]" dest="identifier: require [1562,1569]"/>
  <match src="call_argument [57584,57599]" dest="call_argument [54685,54700]"/>
  <match src="identifier: safeTransferFrom [30540,30556]" dest="identifier: safeTransferFrom [26723,26739]"/>
  <match src="&quot;: &quot; [99035,99036]" dest="&quot;: &quot; [97372,97373]"/>
  <match src="): ) [108559,108560]" dest="): ) [106403,106404]"/>
  <match src="identifier: UintSet [75692,75699]" dest="identifier: UintSet [73346,73353]"/>
  <match src="(: ( [108582,108583]" dest="(: ( [106427,106428]"/>
  <match src="internal: internal [11303,11311]" dest="internal: internal [12250,12258]"/>
  <match src="string [96945,96975]" dest="string [95205,95235]"/>
  <match src="}: } [3970,3971]" dest="}: } [4084,4085]"/>
  <match src="(: ( [76210,76211]" dest="(: ( [73879,73880]"/>
  <match src="): ) [82159,82160]" dest="): ) [79999,80000]"/>
  <match src="yul_function_call [54768,54797]" dest="yul_function_call [51786,51815]"/>
  <match src=",: , [100077,100078]" dest=",: , [98437,98438]"/>
  <match src="primitive_type [84687,84694]" dest="primitive_type [82602,82609]"/>
  <match src="visibility [3149,3157]" dest="visibility [3244,3252]"/>
  <match src="primitive_type [75071,75078]" dest="primitive_type [72698,72705]"/>
  <match src="expression_statement [109190,109240]" dest="expression_statement [107125,107175]"/>
  <match src="{: { [107168,107169]" dest="{: { [105017,105018]"/>
  <match src="comment: /**      * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.      */ [29054,29148]" dest="comment: /**      * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.      */ [25199,25295]"/>
  <match src="identifier: value [70661,70666]" dest="identifier: value [68159,68164]"/>
  <match src="identifier: _key [80590,80594]" dest="identifier: _key [78378,78382]"/>
  <match src="primitive_type [83565,83572]" dest="primitive_type [81447,81454]"/>
  <match src="state_mutability [82421,82425]" dest="state_mutability [80268,80272]"/>
  <match src="call_argument [116325,116330]" dest="call_argument [114951,114956]"/>
  <match src="address: address [111574,111581]" dest="address: address [110889,110896]"/>
  <match src="): ) [100163,100164]" dest="): ) [98526,98527]"/>
  <match src="call_expression [94522,94633]" dest="call_expression [92717,92828]"/>
  <match src="address: address [38638,38645]" dest="address: address [35037,35044]"/>
  <match src="return: return [75462,75468]" dest="return: return [73107,73113]"/>
  <match src="type_name [22557,22564]" dest="type_name [117066,117073]"/>
  <match src="member_expression [78861,78878]" dest="member_expression [76613,76630]"/>
  <match src=",: , [110811,110812]" dest=",: , [109308,109309]"/>
  <match src="override: override [92149,92157]" dest="override: override [90285,90293]"/>
  <match src="function_body [63527,63660]" dest="function_body [60802,60938]"/>
  <match src="(: ( [56552,56553]" dest="(: ( [53628,53629]"/>
  <match src="): ) [88850,88851]" dest="): ) [86882,86883]"/>
  <match src="call_argument [95976,95978]" dest="call_argument [94210,94212]"/>
  <match src="member_expression [59106,59122]" dest="member_expression [56248,56264]"/>
  <match src="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [66921,67392]" dest="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [64309,64791]"/>
  <match src="identifier: _baseURI [103153,103161]" dest="identifier: _baseURI [101615,101623]"/>
  <match src="primitive_type [93296,93301]" dest="primitive_type [91466,91471]"/>
  <match src="): ) [81828,81829]" dest="): ) [79655,79656]"/>
  <match src="call_argument [82193,82225]" dest="call_argument [80034,80066]"/>
  <match src="identifier: set [70549,70552]" dest="identifier: set [68045,68048]"/>
  <match src="returns: returns [82143,82150]" dest="returns: returns [79983,79990]"/>
  <match src="solidity_pragma_token [49068,49082]" dest="solidity_pragma_token [45956,45970]"/>
  <match src="address: address [91373,91380]" dest="address: address [89486,89493]"/>
  <match src="for: for [85487,85490]" dest="for: for [83437,83440]"/>
  <match src="type_name [93296,93301]" dest="type_name [91466,91471]"/>
  <match src="identifier: _token [116307,116313]" dest="identifier: _token [114933,114939]"/>
  <match src="returns: returns [94991,94998]" dest="returns: returns [93197,93204]"/>
  <match src="identifier: encodePacked [27289,27301]" dest="identifier: encodePacked [39291,39303]"/>
  <match src="primitive_type [95246,95253]" dest="primitive_type [93463,93470]"/>
  <match src="identifier: keccak256 [27275,27284]" dest="identifier: keccak256 [39277,39286]"/>
  <match src="call_argument [107408,107414]" dest="call_argument [105263,105269]"/>
  <match src="event_definition [28966,29048]" dest="event_definition [25109,25191]"/>
  <match src="): ) [47693,47694]" dest="): ) [44553,44554]"/>
  <match src="identifier: Address [7582,7589]" dest="identifier: Address [8448,8455]"/>
  <match src="): ) [105732,105733]" dest="): ) [120183,120184]"/>
  <match src="type_name [29217,29224]" dest="type_name [25365,25372]"/>
  <match src="parameter [117741,117755]" dest="parameter [116475,116489]"/>
  <match src="identifier: _name [56343,56348]" dest="identifier: _name [53412,53417]"/>
  <match src="identifier: _tokenId [116227,116235]" dest="identifier: _tokenId [114850,114858]"/>
  <match src=".: . [86009,86010]" dest=".: . [83970,83971]"/>
  <match src="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/components/bridged/ERC721TokenProxy.sol [54981,55076]" dest="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/components/bridged/ERC721TokenProxy.sol [52013,52108]"/>
  <match src="return_type_definition [46134,46157]" dest="return_type_definition [42959,42982]"/>
  <match src="string: string [89570,89576]" dest="string: string [87631,87637]"/>
  <match src="member_expression [57420,57496]" dest="member_expression [54519,54595]"/>
  <match src="user_defined_type [85286,85293]" dest="user_defined_type [83232,83239]"/>
  <match src="type_name [116143,116150]" dest="type_name [114763,114770]"/>
  <match src="external: external [6486,6494]" dest="external: external [7313,7321]"/>
  <match src="string_literal [89621,89670]" dest="string_literal [87683,87732]"/>
  <match src="call_argument [97110,97112]" dest="call_argument [95376,95378]"/>
  <match src="): ) [17620,17621]" dest="): ) [118750,118751]"/>
  <match src="): ) [107427,107428]" dest="): ) [105282,105283]"/>
  <match src="user_defined_type [73589,73592]" dest="user_defined_type [71169,71172]"/>
  <match src="identifier: _tokenOwners [86035,86047]" dest="identifier: _tokenOwners [83996,84008]"/>
  <match src="primitive_type [110839,110844]" dest="primitive_type [110284,110289]"/>
  <match src="identifier: owner [29184,29189]" dest="identifier: owner [25332,25337]"/>
  <match src="call_argument [59106,59156]" dest="call_argument [56248,56298]"/>
  <match src=".: . [60113,60114]" dest=".: . [57281,57282]"/>
  <match src="parameter [113853,113869]" dest="parameter [112832,112848]"/>
  <match src="identifier: _tokenURI [99114,99123]" dest="identifier: _tokenURI [97452,97461]"/>
  <match src="function_body [75975,76036]" dest="function_body [73636,73699]"/>
  <match src="identifier: keccak256 [48808,48817]" dest="identifier: keccak256 [45688,45697]"/>
  <match src="(: ( [20806,20807]" dest="(: ( [20359,20360]"/>
  <match src="call_argument [111946,111996]" dest="call_argument [110102,110152]"/>
  <match src="(: ( [31677,31678]" dest="(: ( [27891,27892]"/>
  <match src="identifier: operator [32533,32541]" dest="identifier: operator [28775,28783]"/>
  <match src=",: , [113009,113010]" dest=",: , [112410,112411]"/>
  <match src="assignment_expression [48793,48889]" dest="assignment_expression [45673,45769]"/>
  <match src="internal: internal [76609,76617]" dest="internal: internal [74291,74299]"/>
  <match src="expression_statement [56652,56665]" dest="expression_statement [53730,53743]"/>
  <match src="identifier: ownerOf [95418,95425]" dest="identifier: ownerOf [93637,93644]"/>
  <match src="return_type_definition [39084,39111]" dest="return_type_definition [35492,35519]"/>
  <match src="(: ( [97658,97659]" dest="(: ( [95948,95949]"/>
  <match src="primitive_type [35155,35159]" dest="primitive_type [31467,31471]"/>
  <match src="yul_path [52237,52240]" dest="yul_path [49204,49207]"/>
  <match src="(: ( [94493,94494]" dest="(: ( [92687,92688]"/>
  <match src="identifier: tokenId [91233,91240]" dest="identifier: tokenId [89339,89346]"/>
  <match src="call_argument [100253,100428]" dest="call_argument [98619,98800]"/>
  <match src="function: function [56935,56943]" dest="function: function [54022,54030]"/>
  <match src="call_expression [115219,115230]" dest="call_expression [113812,113823]"/>
  <match src="identifier: map [83339,83342]" dest="identifier: map [81214,81217]"/>
  <match src="primitive_type [37001,37008]" dest="primitive_type [33364,33371]"/>
  <match src="bytes: bytes [19667,19672]" dest="bytes: bytes [19260,19265]"/>
  <match src="variable_declaration [71689,71710]" dest="variable_declaration [69212,69233]"/>
  <match src="identifier: remove [98626,98632]" dest="identifier: remove [96947,96953]"/>
  <match src="identifier: operator [92568,92576]" dest="identifier: operator [90715,90723]"/>
  <match src="type_name [79417,79420]" dest="type_name [77185,77188]"/>
  <match src="call_expression [110986,111079]" dest="call_expression [120771,120865]"/>
  <match src="call_argument [111681,111682]" dest="call_argument [111013,111014]"/>
  <match src="call_expression [25614,25672]" dest="call_expression [22652,22710]"/>
  <match src=",: , [53131,53132]" dest=",: , [50116,50117]"/>
  <match src="string [93401,93452]" dest="string [91572,91623]"/>
  <match src="memory: memory [94443,94449]" dest="memory: memory [92636,92642]"/>
  <match src=".: . [98668,98669]" dest=".: . [96990,96991]"/>
  <match src="}: } [103974,103975]" dest="}: } [102458,102459]"/>
  <match src="string [45790,45802]" dest="string [42606,42618]"/>
  <match src="call_expression [39185,39212]" dest="call_expression [35596,35623]"/>
  <match src="identifier: newOwner [6188,6196]" dest="identifier: newOwner [6388,6396]"/>
  <match src="visibility [32543,32551]" dest="visibility [28785,28793]"/>
  <match src="type_name [116191,116198]" dest="type_name [114813,114820]"/>
  <match src="identifier: addressStorage [16935,16949]" dest="identifier: addressStorage [17131,17145]"/>
  <match src="identifier: returndata [13340,13350]" dest="identifier: returndata [14331,14341]"/>
  <match src="primitive_type [95402,95409]" dest="primitive_type [93621,93628]"/>
  <match src="string [92202,92229]" dest="string [90339,90366]"/>
  <match src="call_expression [111938,111997]" dest="call_expression [110094,110153]"/>
  <match src="call_argument [109145,109178]" dest="call_argument [107005,107038]"/>
  <match src=",: , [116399,116400]" dest=",: , [115026,115027]"/>
  <match src="identifier: _token [39351,39357]" dest="identifier: _token [35768,35774]"/>
  <match src="{: { [92735,92736]" dest="{: { [90888,90889]"/>
  <match src="identifier: encodePacked [47771,47783]" dest="identifier: encodePacked [44632,44644]"/>
  <match src="function: function [37414,37422]" dest="function: function [33788,33796]"/>
  <match src="binary_expression [107402,107427]" dest="binary_expression [105257,105282]"/>
  <match src="]: ] [79613,79614]" dest="]: ] [77383,77384]"/>
  <match src="block_statement [112582,112777]" dest="block_statement [111523,111658]"/>
  <match src="memory: memory [59952,59958]" dest="memory: memory [57118,57124]"/>
  <match src="augmented_assignment_expression [43311,43321]" dest="augmented_assignment_expression [40049,40059]"/>
  <match src="function_body [91426,91737]" dest="function_body [89539,89859]"/>
  <match src="external: external [110483,110491]" dest="external: external [109063,109071]"/>
  <match src="contract_declaration [59753,60127]" dest="contract_declaration [56914,57297]"/>
  <match src="identifier: value [71311,71316]" dest="identifier: value [68827,68832]"/>
  <match src="parameter [110433,110450]" dest="parameter [109011,109028]"/>
  <match src="primitive_type [3172,3179]" dest="primitive_type [3267,3274]"/>
  <match src="member_expression [81763,81782]" dest="member_expression [79590,79609]"/>
  <match src="type_cast_expression [83418,83430]" dest="type_cast_expression [81294,81306]"/>
  <match src="identifier: set [73808,73811]" dest="identifier: set [71397,71400]"/>
  <match src="primitive_type [93038,93045]" dest="primitive_type [91201,91208]"/>
  <match src="identifier: b [65896,65897]" dest="identifier: b [63254,63255]"/>
  <match src="uint256: uint256 [66809,66816]" dest="uint256: uint256 [64193,64200]"/>
  <match src="identifier: _value [79175,79181]" dest="identifier: _value [76933,76939]"/>
  <match src="(: ( [10006,10007]" dest="(: ( [10922,10923]"/>
  <match src="parameter [92519,92523]" dest="parameter [90665,90669]"/>
  <match src="primitive_type [49853,49860]" dest="primitive_type [46765,46772]"/>
  <match src="function_body [62585,62778]" dest="function_body [59834,60031]"/>
  <match src="parameter [33175,33187]" dest="parameter [29432,29444]"/>
  <match src="return_type_definition [45553,45576]" dest="return_type_definition [42367,42390]"/>
  <match src="contract_body [60401,61077]" dest="contract_body [57583,58277]"/>
  <match src="boolean_literal [110823,110827]" dest="boolean_literal [109320,109324]"/>
  <match src="address: address [105365,105372]" dest="address: address [119926,119933]"/>
  <match src="identifier: mod [68129,68132]" dest="identifier: mod [65549,65552]"/>
  <match src="indexed: indexed [28989,28996]" dest="indexed: indexed [25132,25139]"/>
  <match src="call_argument [96361,96371]" dest="call_argument [94604,94614]"/>
  <match src="string: string [89682,89688]" dest="string: string [87746,87752]"/>
  <match src="comment: /**      * @dev Returns the number of values on the set. O(1).      */ [72821,72891]" dest="comment: /**      * @dev Returns the number of values on the set. O(1).      */ [70376,70448]"/>
  <match src="primitive_type [534,540]" dest="primitive_type [548,554]"/>
  <match src="identifier: returndata [100224,100234]" dest="identifier: returndata [98590,98600]"/>
</matches>
<actions>
  <move-tree tree="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/ForeignNFTOmnibridge.sol [118004,118084]" parent="source_file [0,120876]" at="149"/>
  <insert-node tree="comment: // File: contracts/upgradeable_contracts/omnibridge_nft/components/common/GasLimitManager.sol [117215,117308]" parent="source_file [0,120876]" at="148"/>
  <insert-node tree="comment: /**  * @title GasLimitManager  * @dev Functionality for determining the request gas limit for AMB execution.  */ [117340,117455]" parent="source_file [0,120876]" at="150"/>
  <insert-node tree="contract_declaration [117457,118816]" parent="source_file [0,120876]" at="151"/>
  <insert-tree tree="pragma_directive [118904,118926]" parent="source_file [0,120876]" at="153"/>
  <insert-node tree="contract_declaration [119177,120876]" parent="source_file [0,120876]" at="155"/>
  <insert-node tree="abstract: abstract [14747,14755]" parent="contract_declaration [14747,18198]" at="0"/>
  <move-tree tree="function_definition [26144,26361]" parent="contract_body [21259,23969]" at="7"/>
  <move-tree tree="function_definition [25525,25724]" parent="contract_body [21259,23969]" at="10"/>
  <move-tree tree="function_definition [24646,24880]" parent="contract_body [21259,23969]" at="13"/>
  <move-tree tree="comment: /**      * @dev Checks if a given token is a bridged token that is native to this side of the bridge.      * @param _token address of token contract.      * @return message id of the send message.      */ [41426,41630]" parent="contract_body [37916,39363]" at="3"/>
  <move-tree tree="comment: /**      * @dev Allows to send to the other network some ERC721 token that can be forced into the contract      * without the invocation of the required methods. (e. g. regular transferFrom without a call to onERC721Received)      * @param _token address of the token contract.      * @param _receiver the address that will receive the token on the other network.      * @param _tokenId unique id of the bridged token.      */ [109941,110367]" parent="contract_body [103089,117211]" at="4"/>
  <move-tree tree="comment: /**      * @dev Unlock/Mint back the bridged token that was bridged to the other network but failed.      * @param _messageId id of the failed message.      * @param _token address that bridged token contract.      * @param _recipient address that will receive the tokens.      * @param _tokenId unique id of the bridged token.      */ [113388,113723]" parent="contract_body [103089,117211]" at="14"/>
  <move-tree tree="comment: /**      * @dev Internal function for recording bridge operation for further usage.      * Recorded information is used for fixing failed requests on the other side.      * @param _register true, if native token is bridged for the first time.      * @param _messageId id of the sent message.      * @param _token bridged token address.      * @param _sender address of the tokens sender.      * @param _tokenId unique id of the bridged token.      */ [116527,116977]" parent="contract_body [103089,117211]" at="17"/>
  <move-tree tree="comment: /**      * @dev Internal function for initializing newly bridged token related information.      * @param _token address of the token contract.      */ [117565,117716]" parent="contract_body [103089,117211]" at="19"/>
  <insert-node tree="abstract: abstract [117457,117465]" parent="contract_declaration [117457,118816]" at="0"/>
  <insert-node tree="contract: contract [117466,117474]" parent="contract_declaration [117457,118816]" at="1"/>
  <insert-node tree="identifier: GasLimitManager [117475,117490]" parent="contract_declaration [117457,118816]" at="2"/>
  <insert-node tree="is: is [117491,117493]" parent="contract_declaration [117457,118816]" at="3"/>
  <insert-tree tree="inheritance_specifier [117494,117510]" parent="contract_declaration [117457,118816]" at="4"/>
  <insert-node tree="contract_body [117511,118816]" parent="contract_declaration [117457,118816]" at="5"/>
  <insert-node tree="contract: contract [119177,119185]" parent="contract_declaration [119177,120876]" at="0"/>
  <insert-node tree="identifier: ForeignNFTOmnibridge [119186,119206]" parent="contract_declaration [119177,120876]" at="1"/>
  <insert-node tree="is: is [119207,119209]" parent="contract_declaration [119177,120876]" at="2"/>
  <move-tree tree="inheritance_specifier [118382,118400]" parent="contract_declaration [119177,120876]" at="3"/>
  <insert-node tree=",: , [119228,119229]" parent="contract_declaration [119177,120876]" at="4"/>
  <insert-tree tree="inheritance_specifier [119230,119245]" parent="contract_declaration [119177,120876]" at="5"/>
  <insert-node tree="contract_body [119246,120876]" parent="contract_declaration [119177,120876]" at="6"/>
  <insert-tree tree="event_definition [6545,6623]" parent="contract_body [6538,8282]" at="1"/>
  <insert-tree tree="event_definition [6629,6705]" parent="contract_body [6538,8282]" at="2"/>
  <insert-node tree="event_definition [6711,6867]" parent="contract_body [6538,8282]" at="3"/>
  <insert-tree tree="event_definition [6873,7033]" parent="contract_body [6538,8282]" at="4"/>
  <insert-tree tree="event_definition [7039,7150]" parent="contract_body [6538,8282]" at="5"/>
  <insert-node tree="function_definition [18097,18195]" parent="contract_body [14793,18198]" at="25"/>
  <move-tree tree=",: , [21316,21317]" parent="function_definition [20818,20957]" at="5"/>
  <move-tree tree=",: , [21340,21341]" parent="function_definition [20818,20957]" at="7"/>
  <update-node tree="comment: // token == 0x00..00 represents default limits for all newly created tokens [21712,21787]" label="// token == 0x00..00 represents global restriction applied for all tokens"/>
  <update-node tree="comment: /**      * @dev Retrieves the total spent amount for particular token during specific day.      * @param _token address of the token contract.      * @param _day day number for which spent amount if requested.      * @return amount of tokens sent through the bridge to the other side.      */ [22218,22510]" label="/**      * @dev Disabled bridging operations for the particular token.      * @param _token address of the token contract, or address(0) for configuring the global restriction.      * @param _disable true for disabling.      */"/>
  <update-node tree="comment: /**      * @dev Retrieves the total executed amount for particular token during specific day.      * @param _token address of the token contract.      * @param _day day number for which spent amount if requested.      * @return amount of tokens received from the bridge from the other side.      */ [22705,23003]" label="/**      * @dev Disabled execution operations for the particular token.      * @param _token address of the token contract, or address(0) for configuring the global restriction.      * @param _disable true for disabling.      */"/>
  <update-node tree="comment: /**      * @dev Retrieves current daily limit for a particular token contract.      * @param _token address of the token contract.      * @return daily limit on tokens that can be sent through the bridge per day.      */ [23204,23424]" label="/**      * @dev Tells if the bridging operations for the particular token are allowed.      * @param _token address of the token contract.      * @return true, if bridging operations are allowed.      */"/>
  <update-node tree="comment: /**      * @dev Retrieves current execution daily limit for a particular token contract.      * @param _token address of the token contract.      * @return daily limit on tokens that can be received from the bridge on the other side per day.      */ [23587,23836]" label="/**      * @dev Tells if the execution operations for the particular token are allowed.      * @param _token address of the token contract.      * @return true, if execution operations are allowed.      */"/>
  <insert-node tree="state_variable_declaration [37923,37964]" parent="contract_body [37916,39363]" at="1"/>
  <insert-node tree="state_variable_declaration [37970,38024]" parent="contract_body [37916,39363]" at="2"/>
  <update-node tree="comment: /**      * @dev Returns message id where specified token was first seen and deploy on the other side was requested.      * @param _token address of token contract.      * @return message id of the send message.      */ [41791,42009]" label="/**      * @dev Checks if for a given native token, the deployment of its bridged alternative was already acknowledged.      * @param _token address of native token contract.      * @return true, if bridged token was already deployed.      */"/>
  <move-tree tree="function_definition [23429,23581]" parent="contract_body [37916,39363]" at="5"/>
  <move-tree tree="function_definition [23841,24011]" parent="contract_body [37916,39363]" at="7"/>
  <update-node tree="comment: /**      * @dev Updates message id where specified token was first seen and deploy on the other side was requested.      * @param _token address of token contract.      * @param _messageId message id of the send message.      */ [42213,42441]" label="/**      * @dev Internal function for marking native token as registered.      * @param _token address of the token contract.      * @param _state registration state.      */"/>
  <move-tree tree="function_definition [27183,27399]" parent="contract_body [37916,39363]" at="10"/>
  <update-node tree="comment: /**      * @dev Stores the initial parameters of the mediator.      * @param _bridgeContract the address of the AMB bridge contract.      * @param _mediatorContract the address of the mediator contract on the other network.      * @param _dailyLimit daily limit for outgoing transfers      * @param _executionDailyLimit daily limit for ingoing bridge operations      * @param _requestGasLimit the gas limit for the message execution.      * @param _owner address of the owner of the mediator contract.      * @param _image address of the ERC721 token image.      */ [104573,105138]" label="// Workaround for storing variable up-to-32 bytes suffix"/>
  <insert-node tree="state_variable_declaration [103158,103196]" parent="contract_body [103089,117211]" at="2"/>
  <insert-tree tree="state_variable_declaration [103202,103235]" parent="contract_body [103089,117211]" at="3"/>
  <update-node tree="comment: /**      * @dev Checks if specified token was already bridged at least once.      * @param _token address of the token contract.      * @return true, if token was already bridged.      */ [105864,106051]" label="// Since contract is intended to be deployed under EternalStorageProxy, only constant and immutable variables can be set here"/>
  <insert-node tree="constructor_definition [103374,103639]" parent="contract_body [103089,117211]" at="5"/>
  <update-node tree="comment: /**      * @dev Allows to send to the other network some ERC721 token that can be forced into the contract      * without the invocation of the required methods. (e. g. regular transferFrom without a call to onERC721Received)      * @param _token address of the token contract.      * @param _receiver the address that will receive the token on the other network.      * @param _tokenId unique id of the bridged token.      */ [109941,110367]" label="/**      * @dev Checks if specified token was already bridged at least once and it is registered in the Omnibridge.      * @param _token address of the token contract.      * @return true, if token was already bridged.      */"/>
  <update-node tree="comment: /**      * @dev Unlock/Mint back the bridged token that was bridged to the other network but failed.      * @param _messageId id of the failed message.      * @param _token address that bridged token contract.      * @param _recipient address that will receive the tokens.      * @param _tokenId unique id of the bridged token.      */ [113388,113723]" label="/**      * @dev Allows to send to the other network some ERC721 token that can be forced into the contract      * without the invocation of the required methods. (e. g. regular transferFrom without a call to onERC721Received)      * Before calling this method, it must be carefully investigated how imbalance happened      * in order to avoid an attempt to steal the funds from a token with double addresses.      * @param _token address of the token contract.      * @param _receiver the address that will receive the token on the other network.      * @param _tokenId unique id of the bridged token.      */"/>
  <insert-node tree="function_definition [109855,110534]" parent="contract_body [103089,117211]" at="19"/>
  <update-node tree="comment: /**      * @dev Internal function for recording bridge operation for further usage.      * Recorded information is used for fixing failed requests on the other side.      * @param _register true, if native token is bridged for the first time.      * @param _messageId id of the sent message.      * @param _token bridged token address.      * @param _sender address of the tokens sender.      * @param _tokenId unique id of the bridged token.      */ [116527,116977]" label="/**      * @dev Constructs the message to be sent to the other side. Burns/locks bridged token.      * @param _token bridged token address.      * @param _receiver address of the tokens receiver on the other side.      * @param _tokenId unique id of the bridged token.      */"/>
  <move-tree tree=",: , [111564,111565]" parent="function_definition [110829,112429]" at="7"/>
  <update-node tree="comment: /**      * @dev Internal function for initializing newly bridged token related information.      * @param _token address of the token contract.      */ [117565,117716]" label="/**      * @dev Unlock/Mint back the bridged token that was bridged to the other network but failed.      * @param _token address that bridged token contract.      * @param _recipient address that will receive the tokens.      * @param _tokenId unique id of the bridged token.      */"/>
  <move-tree tree=",: , [113791,113792]" parent="function_definition [112732,112978]" at="5"/>
  <move-tree tree=",: , [113815,113816]" parent="function_definition [112732,112978]" at="7"/>
  <insert-node tree="comment: /**      * @dev Internal function for recording bridge operation for further usage.      * Recorded information is used for fixing failed requests on the other side.      * @param _messageId id of the sent message.      * @param _token bridged token address.      * @param _sender address of the tokens sender.      * @param _tokenId unique id of the bridged token.      */ [115160,115540]" parent="contract_body [103089,117211]" at="30"/>
  <move-tree tree=",: , [117037,117038]" parent="function_definition [115546,115986]" at="5"/>
  <move-tree tree=",: , [117065,117066]" parent="function_definition [115546,115986]" at="7"/>
  <move-tree tree=",: , [117089,117090]" parent="function_definition [115546,115986]" at="9"/>
  <insert-node tree="comment: /**      * @dev Checks if bridge operation is allowed to use oracle driven lane.      * @param _token address of the token contract on the foreign side of the bridge.      * @param _sender address of the tokens sender on the home side of the bridge.      * @param _receiver address of the tokens receiver on the foreign side of the bridge.      * @return true, if message can be forwarded to the oracle-driven lane.      */ [115994,116423]" parent="contract_body [103089,117211]" at="32"/>
  <insert-node tree="function_definition [116429,116657]" parent="contract_body [103089,117211]" at="33"/>
  <insert-node tree="comment: /**      * @dev Internal function for transforming the bridged token name. Appends a side-specific suffix.      * @param _name bridged token from the other side.      * @return token name for this side of the bridge.      */ [116665,116893]" parent="contract_body [103089,117211]" at="34"/>
  <move-tree tree="function_definition [118636,118798]" parent="contract_body [103089,117211]" at="36"/>
  <insert-node tree="{: { [117511,117512]" parent="contract_body [117511,118816]" at="0"/>
  <move-tree tree="state_variable_declaration [14112,14225]" parent="contract_body [117511,118816]" at="1"/>
  <insert-node tree="comment: // keccak256(abi.encodePacked(&quot;requestGasLimit&quot;)) [117632,117681]" parent="contract_body [117511,118816]" at="2"/>
  <insert-node tree="comment: /**      * @dev Sets the default gas limit to be used in the message execution by the AMB bridge on the other network.      * This value can't exceed the parameter maxGasPerTx defined on the AMB bridge.      * Only the owner can call this method.      * @param _gasLimit the gas limit for the message execution.      */ [117689,118013]" parent="contract_body [117511,118816]" at="3"/>
  <insert-node tree="function_definition [118019,118134]" parent="contract_body [117511,118816]" at="4"/>
  <insert-node tree="comment: /**      * @dev Tells the default gas limit to be used in the message execution by the AMB bridge on the other network.      * @return the gas limit for the message execution.      */ [118142,118328]" parent="contract_body [117511,118816]" at="5"/>
  <move-tree tree="function_definition [16554,16665]" parent="contract_body [117511,118816]" at="6"/>
  <insert-node tree="comment: /**      * @dev Stores the gas limit to be used in the message execution by the AMB bridge on the other network.      * @param _gasLimit the gas limit for the message execution.      */ [118455,118643]" parent="contract_body [117511,118816]" at="7"/>
  <move-tree tree="function_definition [17506,17688]" parent="contract_body [117511,118816]" at="8"/>
  <insert-node tree="}: } [118815,118816]" parent="contract_body [117511,118816]" at="9"/>
  <insert-node tree="{: { [119246,119247]" parent="contract_body [119246,120876]" at="0"/>
  <insert-tree tree="constructor_definition [119253,119318]" parent="contract_body [119246,120876]" at="1"/>
  <insert-node tree="comment: /**      * @dev Stores the initial parameters of the mediator.      * @param _bridgeContract the address of the AMB bridge contract.      * @param _mediatorContract the address of the mediator contract on the other network.      * @param _requestGasLimit the gas limit for the message execution.      * @param _owner address of the owner of the mediator contract.      * @param _image address of the ERC721 token image.      */ [119326,119760]" parent="contract_body [119246,120876]" at="2"/>
  <move-tree tree="function_definition [105143,105858]" parent="contract_body [119246,120876]" at="3"/>
  <move-tree tree=",: , [105259,105260]" parent="function_definition [119766,120316]" at="11"/>
  <move-tree tree=",: , [105297,105298]" parent="function_definition [119766,120316]" at="13"/>
  <insert-node tree="comment: /**      * @dev Internal function for sending an AMB message to the mediator on the other side.      * @param _data data to be sent to the other side of the bridge.      * @param _useOracleLane always true, not used on this side of the bridge.      * @return id of the sent message.      */ [120324,120619]" parent="contract_body [119246,120876]" at="4"/>
  <insert-node tree="function_definition [120625,120873]" parent="contract_body [119246,120876]" at="5"/>
  <insert-node tree="}: } [120875,120876]" parent="contract_body [119246,120876]" at="6"/>
  <insert-node tree="event: event [6711,6716]" parent="event_definition [6711,6867]" at="0"/>
  <insert-node tree="identifier: CollectedSignatures [6717,6736]" parent="event_definition [6711,6867]" at="1"/>
  <insert-node tree="(: ( [6736,6737]" parent="event_definition [6711,6867]" at="2"/>
  <insert-tree tree="event_paramater [6747,6783]" parent="event_definition [6711,6867]" at="3"/>
  <insert-node tree=",: , [6783,6784]" parent="event_definition [6711,6867]" at="4"/>
  <insert-tree tree="event_paramater [6794,6813]" parent="event_definition [6711,6867]" at="5"/>
  <insert-node tree=",: , [6813,6814]" parent="event_definition [6711,6867]" at="6"/>
  <move-tree tree="event_paramater [21918,21934]" parent="event_definition [6711,6867]" at="7"/>
  <insert-node tree="): ) [6865,6866]" parent="event_definition [6711,6867]" at="8"/>
  <insert-node tree="function: function [18097,18105]" parent="function_definition [18097,18195]" at="0"/>
  <insert-node tree="identifier: _passMessage [18106,18118]" parent="function_definition [18097,18195]" at="1"/>
  <insert-node tree="(: ( [18118,18119]" parent="function_definition [18097,18195]" at="2"/>
  <insert-tree tree="parameter [18119,18137]" parent="function_definition [18097,18195]" at="3"/>
  <insert-node tree=",: , [18137,18138]" parent="function_definition [18097,18195]" at="4"/>
  <insert-tree tree="parameter [18139,18158]" parent="function_definition [18097,18195]" at="5"/>
  <insert-node tree="): ) [18158,18159]" parent="function_definition [18097,18195]" at="6"/>
  <move-tree tree="visibility [17922,17930]" parent="function_definition [18097,18195]" at="7"/>
  <insert-node tree="virtual: virtual [18169,18176]" parent="function_definition [18097,18195]" at="8"/>
  <move-tree tree="return_type_definition [42078,42095]" parent="function_definition [18097,18195]" at="9"/>
  <move-tree tree="variable_declaration_statement [19667,19738]" parent="function_body [18981,19390]" at="1"/>
  <update-node tree="identifier: DailyLimitChanged [21798,21815]" label="TokenBridgingDisabled"/>
  <update-node tree="identifier: ExecutionDailyLimitChanged [21868,21894]" label="TokenExecutionDisabled"/>
  <insert-tree tree="event_paramater [21469,21482]" parent="event_definition [21417,21484]" at="5"/>
  <update-node tree="identifier: setExecutionDailyLimit [26153,26175]" label="disableTokenBridging"/>
  <update-node tree="identifier: setDailyLimit [25534,25547]" label="disableTokenExecution"/>
  <update-node tree="identifier: withinExecutionLimit [24655,24675]" label="isTokenBridgingAllowed"/>
  <update-node tree="identifier: withinLimit [24235,24246]" label="isTokenExecutionAllowed"/>
  <move-tree tree="type_name [25564,25571]" parent="state_variable_declaration [37923,37964]" at="0"/>
  <move-tree tree="visibility [27244,27252]" parent="state_variable_declaration [37923,37964]" at="1"/>
  <insert-node tree="constant: constant [37940,37948]" parent="state_variable_declaration [37923,37964]" at="2"/>
  <insert-node tree="identifier: REGISTERED [37949,37959]" parent="state_variable_declaration [37923,37964]" at="3"/>
  <insert-node tree="=: = [37960,37961]" parent="state_variable_declaration [37923,37964]" at="4"/>
  <insert-node tree="number_literal: 1 [37962,37963]" parent="state_variable_declaration [37923,37964]" at="5"/>
  <move-tree tree="type_name [21839,21846]" parent="state_variable_declaration [37970,38024]" at="0"/>
  <move-tree tree="visibility [26861,26869]" parent="state_variable_declaration [37970,38024]" at="1"/>
  <insert-node tree="constant: constant [37987,37995]" parent="state_variable_declaration [37970,38024]" at="2"/>
  <insert-node tree="identifier: REGISTERED_AND_DEPLOYED [37996,38019]" parent="state_variable_declaration [37970,38024]" at="3"/>
  <insert-node tree="=: = [38020,38021]" parent="state_variable_declaration [37970,38024]" at="4"/>
  <insert-node tree="number_literal: 2 [38022,38023]" parent="state_variable_declaration [37970,38024]" at="5"/>
  <update-node tree="identifier: dailyLimit [23438,23448]" label="isBridgedTokenDeployAcknowledged"/>
  <move-tree tree="return_type_definition [41698,41712]" parent="function_definition [38284,38489]" at="7"/>
  <update-node tree="identifier: executionDailyLimit [23850,23869]" label="isRegisteredAsNativeToken"/>
  <update-node tree="identifier: _setDailyLimit [27192,27206]" label="_setNativeTokenIsRegistered"/>
  <move-tree tree="parameter [42486,42500]" parent="function_definition [39078,39360]" at="3"/>
  <move-tree tree="parameter [23053,23065]" parent="function_definition [39078,39360]" at="6"/>
  <move-tree tree="visibility [42522,42530]" parent="function_definition [39078,39360]" at="9"/>
  <move-tree tree="type_name [27223,27230]" parent="state_variable_declaration [103158,103196]" at="0"/>
  <insert-tree tree="visibility [103166,103173]" parent="state_variable_declaration [103158,103196]" at="1"/>
  <insert-node tree="immutable: immutable [103174,103183]" parent="state_variable_declaration [103158,103196]" at="2"/>
  <insert-node tree="identifier: SUFFIX_SIZE [103184,103195]" parent="state_variable_declaration [103158,103196]" at="3"/>
  <insert-node tree="constructor: constructor [103374,103385]" parent="constructor_definition [103374,103639]" at="0"/>
  <insert-node tree="(: ( [103385,103386]" parent="constructor_definition [103374,103639]" at="1"/>
  <insert-tree tree="parameter [103386,103407]" parent="constructor_definition [103374,103639]" at="2"/>
  <insert-node tree="): ) [103407,103408]" parent="constructor_definition [103374,103639]" at="3"/>
  <insert-node tree="function_body [103409,103639]" parent="constructor_definition [103374,103639]" at="4"/>
  <move-tree tree="expression_statement [110528,110607]" parent="function_body [109098,109540]" at="6"/>
  <insert-node tree="function: function [109855,109863]" parent="function_definition [109855,110534]" at="0"/>
  <insert-node tree="identifier: bridgeSpecificActionsOnTokenTransfer [109864,109900]" parent="function_definition [109855,110534]" at="1"/>
  <insert-node tree="(: ( [109900,109901]" parent="function_definition [109855,110534]" at="2"/>
  <move-tree tree="parameter [42050,42064]" parent="function_definition [109855,110534]" at="3"/>
  <insert-node tree=",: , [109925,109926]" parent="function_definition [109855,110534]" at="4"/>
  <move-tree tree="parameter [111551,111564]" parent="function_definition [109855,110534]" at="5"/>
  <insert-node tree=",: , [109949,109950]" parent="function_definition [109855,110534]" at="6"/>
  <insert-tree tree="parameter [109960,109977]" parent="function_definition [109855,110534]" at="7"/>
  <insert-node tree=",: , [109977,109978]" parent="function_definition [109855,110534]" at="8"/>
  <insert-tree tree="parameter [109988,110004]" parent="function_definition [109855,110534]" at="9"/>
  <insert-node tree="): ) [110010,110011]" parent="function_definition [109855,110534]" at="10"/>
  <move-tree tree="visibility [117954,117962]" parent="function_definition [109855,110534]" at="11"/>
  <move-tree tree="override_specifier [111633,111641]" parent="function_definition [109855,110534]" at="12"/>
  <insert-node tree="function_body [110030,110534]" parent="function_definition [109855,110534]" at="13"/>
  <update-node tree="identifier: bridgeSpecificActionsOnTokenTransfer [111481,111517]" label="_prepareMessage"/>
  <insert-tree tree="return_type_definition [110950,110972]" parent="function_definition [110829,112429]" at="10"/>
  <insert-node tree="function: function [116429,116437]" parent="function_definition [116429,116657]" at="0"/>
  <insert-node tree="identifier: _isOracleDrivenLaneAllowed [116438,116464]" parent="function_definition [116429,116657]" at="1"/>
  <insert-node tree="(: ( [116464,116465]" parent="function_definition [116429,116657]" at="2"/>
  <move-tree tree="parameter [117741,117755]" parent="function_definition [116429,116657]" at="3"/>
  <insert-node tree=",: , [116489,116490]" parent="function_definition [116429,116657]" at="4"/>
  <insert-tree tree="parameter [116500,116515]" parent="function_definition [116429,116657]" at="5"/>
  <insert-node tree=",: , [116515,116516]" parent="function_definition [116429,116657]" at="6"/>
  <insert-tree tree="parameter [116526,116543]" parent="function_definition [116429,116657]" at="7"/>
  <insert-node tree="): ) [116549,116550]" parent="function_definition [116429,116657]" at="8"/>
  <move-tree tree="visibility [117757,117765]" parent="function_definition [116429,116657]" at="9"/>
  <move-tree tree="state_mutability [42073,42077]" parent="function_definition [116429,116657]" at="10"/>
  <insert-node tree="virtual: virtual [116565,116572]" parent="function_definition [116429,116657]" at="11"/>
  <insert-tree tree="return_type_definition [116573,116587]" parent="function_definition [116429,116657]" at="12"/>
  <insert-tree tree="function_body [116588,116657]" parent="function_definition [116429,116657]" at="13"/>
  <move-tree tree="state_mutability [22578,22582]" parent="function_definition [116899,117208]" at="6"/>
  <insert-node tree="function: function [118019,118027]" parent="function_definition [118019,118134]" at="0"/>
  <insert-node tree="identifier: setRequestGasLimit [118028,118046]" parent="function_definition [118019,118134]" at="1"/>
  <insert-node tree="(: ( [118046,118047]" parent="function_definition [118019,118134]" at="2"/>
  <move-tree tree="parameter [105240,105259]" parent="function_definition [118019,118134]" at="3"/>
  <insert-node tree="): ) [118064,118065]" parent="function_definition [118019,118134]" at="4"/>
  <move-tree tree="visibility [15751,15759]" parent="function_definition [118019,118134]" at="5"/>
  <move-tree tree="modifier_invocation [15760,15769]" parent="function_definition [118019,118134]" at="6"/>
  <insert-tree tree="function_body [118085,118134]" parent="function_definition [118019,118134]" at="7"/>
  <insert-node tree="function: function [120625,120633]" parent="function_definition [120625,120873]" at="0"/>
  <insert-node tree="identifier: _passMessage [120634,120646]" parent="function_definition [120625,120873]" at="1"/>
  <insert-node tree="(: ( [120646,120647]" parent="function_definition [120625,120873]" at="2"/>
  <insert-tree tree="parameter [120647,120665]" parent="function_definition [120625,120873]" at="3"/>
  <insert-node tree=",: , [120665,120666]" parent="function_definition [120625,120873]" at="4"/>
  <move-tree tree="parameter [117023,117037]" parent="function_definition [120625,120873]" at="5"/>
  <insert-node tree="): ) [120686,120687]" parent="function_definition [120625,120873]" at="6"/>
  <move-tree tree="visibility [26550,26558]" parent="function_definition [120625,120873]" at="7"/>
  <move-tree tree="override_specifier [118695,118703]" parent="function_definition [120625,120873]" at="8"/>
  <insert-tree tree="return_type_definition [120706,120723]" parent="function_definition [120625,120873]" at="9"/>
  <insert-node tree="function_body [120724,120873]" parent="function_definition [120625,120873]" at="10"/>
  <update-node tree="identifier: newLimit [21926,21934]" label="numberOfCollectedSignatures"/>
  <insert-node tree="variable_declaration_statement [15464,15495]" parent="function_body [15453,15626]" at="1"/>
  <insert-node tree="expression_statement [19033,19080]" parent="function_body [18981,19390]" at="2"/>
  <insert-node tree="expression_statement [19357,19383]" parent="function_body [18981,19390]" at="6"/>
  <insert-tree tree="type_name [21396,21400]" parent="event_paramater [21396,21409]" at="0"/>
  <update-node tree="identifier: newLimit [21847,21855]" label="disabled"/>
  <update-node tree="identifier: _dailyLimit [26200,26211]" label="_disable"/>
  <insert-node tree="emit_statement [22262,22307]" parent="function_body [22092,22314]" at="3"/>
  <insert-tree tree="type_name [22607,22611]" parent="parameter [22607,22620]" at="0"/>
  <update-node tree="identifier: _dailyLimit [25572,25583]" label="_disable"/>
  <insert-node tree="emit_statement [22812,22858]" parent="function_body [22641,22865]" at="3"/>
  <insert-node tree="variable_declaration_statement [23172,23259]" parent="function_body [23161,23413]" at="1"/>
  <insert-node tree="if_statement [23269,23354]" parent="function_body [23161,23413]" at="2"/>
  <insert-node tree="variable_declaration_statement [23723,23811]" parent="function_body [23712,23966]" at="1"/>
  <insert-tree tree="if_statement [23821,23906]" parent="function_body [23712,23966]" at="2"/>
  <update-node tree="identifier: _day [23061,23065]" label="_state"/>
  <insert-node tree="if_statement [39167,39353]" parent="function_body [39156,39360]" at="1"/>
  <insert-node tree="{: { [103409,103410]" parent="function_body [103409,103639]" at="0"/>
  <insert-tree tree="expression_statement [103420,103457]" parent="function_body [103409,103639]" at="1"/>
  <move-tree tree="variable_declaration_statement [113904,113971]" parent="function_body [103409,103639]" at="2"/>
  <insert-tree tree="assembly_statement [103492,103560]" parent="function_body [103409,103639]" at="3"/>
  <insert-tree tree="expression_statement [103570,103586]" parent="function_body [103409,103639]" at="4"/>
  <insert-tree tree="expression_statement [103596,103632]" parent="function_body [103409,103639]" at="5"/>
  <insert-node tree="}: } [103638,103639]" parent="function_body [103409,103639]" at="6"/>
  <insert-node tree="expression_statement [107052,107113]" parent="function_body [106986,107182]" at="2"/>
  <insert-node tree="comment: // Unfortunately, there is no simple way to verify that the _nativeToken address [107791,107871]" parent="function_body [107607,108317]" at="4"/>
  <insert-node tree="comment: // does not belong to the bridged token on the other side, [107881,107939]" parent="function_body [107607,108317]" at="5"/>
  <insert-node tree="comment: // since information about bridged tokens addresses is not transferred back. [107949,108025]" parent="function_body [107607,108317]" at="6"/>
  <insert-node tree="comment: // Therefore, owner account calling this function SHOULD manually verify on the other side of the bridge that [108035,108144]" parent="function_body [107607,108317]" at="7"/>
  <insert-node tree="comment: // nativeTokenAddress(_nativeToken) == address(0) &amp;&amp; isTokenRegistered(_nativeToken) == false. [108154,108248]" parent="function_body [107607,108317]" at="8"/>
  <move-tree tree="variable_declaration_statement [113164,113291]" parent="function_body [109098,109540]" at="6"/>
  <insert-node tree="{: { [110030,110031]" parent="function_body [110030,110534]" at="0"/>
  <insert-node tree="comment: // verify that token was indeed transferred [110041,110084]" parent="function_body [110030,110534]" at="1"/>
  <move-tree tree="expression_statement [111938,111998]" parent="function_body [110030,110534]" at="2"/>
  <insert-node tree="if_statement [110166,110272]" parent="function_body [110030,110534]" at="3"/>
  <insert-node tree="variable_declaration_statement [110284,110349]" parent="function_body [110030,110534]" at="4"/>
  <move-tree tree="variable_declaration_statement [110953,111080]" parent="function_body [110030,110534]" at="5"/>
  <move-tree tree="expression_statement [111089,111160]" parent="function_body [110030,110534]" at="6"/>
  <insert-node tree="}: } [110533,110534]" parent="function_body [110030,110534]" at="7"/>
  <insert-node tree="variable_declaration_statement [111075,111124]" parent="function_body [110973,112429]" at="2"/>
  <insert-node tree="comment: // process token is native with respect to this side of the bridge [111136,111202]" parent="function_body [110973,112429]" at="3"/>
  <insert-node tree="comment: // process already known token that is bridged from other chain [112192,112255]" parent="function_body [110973,112429]" at="5"/>
  <move-tree tree="expression_statement [112797,112849]" parent="function_body [110973,112429]" at="9"/>
  <insert-node tree="return_statement [112327,112422]" parent="function_body [110973,112429]" at="7"/>
  <move-tree tree="expression_statement [112862,113050]" parent="function_body [112874,112978]" at="1"/>
  <move-tree tree="expression_statement [115017,115055]" parent="function_body [115701,115986]" at="1"/>
  <insert-node tree="variable_declaration_statement [116993,117056]" parent="function_body [116982,117208]" at="1"/>
  <insert-node tree="variable_declaration_statement [117066,117093]" parent="function_body [116982,117208]" at="2"/>
  <insert-tree tree="assembly_statement [117103,117177]" parent="function_body [116982,117208]" at="3"/>
  <update-node tree="identifier: _dailyLimit [105248,105259]" label="_gasLimit"/>
  <move-tree tree="type_name [105269,105276]" parent="parameter [118678,118695]" at="0"/>
  <update-node tree="identifier: _requestGasLimit [17543,17559]" label="_gasLimit"/>
  <update-node tree="identifier: _register [117028,117037]" label="_useOracleLane"/>
  <insert-node tree="{: { [120724,120725]" parent="function_body [120724,120873]" at="0"/>
  <insert-tree tree="expression_statement [120735,120752]" parent="function_body [120724,120873]" at="1"/>
  <insert-node tree="return_statement [120764,120866]" parent="function_body [120724,120873]" at="2"/>
  <insert-node tree="}: } [120872,120873]" parent="function_body [120724,120873]" at="3"/>
  <insert-tree tree="variable_declaration [15464,15475]" parent="variable_declaration_statement [15464,15495]" at="0"/>
  <insert-node tree="=: = [15476,15477]" parent="variable_declaration_statement [15464,15495]" at="1"/>
  <move-tree tree="call_expression [14625,14641]" parent="variable_declaration_statement [15464,15495]" at="2"/>
  <insert-tree tree="variable_declaration [18992,19003]" parent="variable_declaration_statement [18992,19023]" at="0"/>
  <move-tree tree="call_expression [17971,17987]" parent="variable_declaration_statement [18992,19023]" at="3"/>
  <insert-node tree="call_expression [19033,19079]" parent="expression_statement [19033,19080]" at="0"/>
  <move-tree tree="variable_declaration [19667,19684]" parent="variable_declaration_statement [19260,19347]" at="0"/>
  <move-tree tree="call_expression [19687,19737]" parent="variable_declaration_statement [19260,19347]" at="3"/>
  <insert-node tree="call_expression [19357,19382]" parent="expression_statement [19357,19383]" at="0"/>
  <move-tree tree=",: , [20532,20533]" parent="call_expression [20052,20103]" at="4"/>
  <move-tree tree=",: , [20539,20540]" parent="call_expression [20052,20103]" at="6"/>
  <insert-node tree="assignment_expression [22172,22251]" parent="expression_statement [22172,22252]" at="0"/>
  <insert-node tree="emit: emit [22262,22266]" parent="emit_statement [22262,22307]" at="0"/>
  <insert-node tree="identifier: TokenBridgingDisabled [22267,22288]" parent="emit_statement [22262,22307]" at="1"/>
  <insert-node tree="(: ( [22288,22289]" parent="emit_statement [22262,22307]" at="2"/>
  <move-tree tree="call_argument [27838,27844]" parent="emit_statement [22262,22307]" at="3"/>
  <insert-node tree=",: , [22295,22296]" parent="emit_statement [22262,22307]" at="4"/>
  <insert-tree tree="call_argument [22297,22305]" parent="emit_statement [22262,22307]" at="5"/>
  <insert-node tree="): ) [22305,22306]" parent="emit_statement [22262,22307]" at="6"/>
  <insert-node tree="assignment_expression [22721,22801]" parent="expression_statement [22721,22802]" at="0"/>
  <insert-node tree="emit: emit [22812,22816]" parent="emit_statement [22812,22858]" at="0"/>
  <insert-node tree="identifier: TokenExecutionDisabled [22817,22839]" parent="emit_statement [22812,22858]" at="1"/>
  <insert-node tree="(: ( [22839,22840]" parent="emit_statement [22812,22858]" at="2"/>
  <move-tree tree="call_argument [27372,27378]" parent="emit_statement [22812,22858]" at="3"/>
  <insert-node tree=",: , [22846,22847]" parent="emit_statement [22812,22858]" at="4"/>
  <insert-tree tree="call_argument [22848,22856]" parent="emit_statement [22812,22858]" at="5"/>
  <insert-node tree="): ) [22856,22857]" parent="emit_statement [22812,22858]" at="6"/>
  <move-tree tree="variable_declaration [111796,111814]" parent="variable_declaration_statement [23172,23259]" at="0"/>
  <insert-node tree="=: = [23188,23189]" parent="variable_declaration_statement [23172,23259]" at="1"/>
  <insert-tree tree="array_access [23190,23258]" parent="variable_declaration_statement [23172,23259]" at="2"/>
  <insert-node tree="if: if [23269,23271]" parent="if_statement [23269,23354]" at="0"/>
  <insert-node tree="(: ( [23272,23273]" parent="if_statement [23269,23354]" at="1"/>
  <insert-node tree="binary_expression [23273,23307]" parent="if_statement [23269,23354]" at="2"/>
  <insert-node tree="): ) [23307,23308]" parent="if_statement [23269,23354]" at="3"/>
  <insert-tree tree="block_statement [23309,23354]" parent="if_statement [23269,23354]" at="4"/>
  <move-tree tree="call_expression [24748,24779]" parent="return_statement [23364,23406]" at="1"/>
  <move-tree tree="variable_declaration [111741,111758]" parent="variable_declaration_statement [23723,23811]" at="0"/>
  <insert-node tree="=: = [23739,23740]" parent="variable_declaration_statement [23723,23811]" at="1"/>
  <insert-tree tree="array_access [23741,23810]" parent="variable_declaration_statement [23723,23811]" at="2"/>
  <move-tree tree="call_expression [24307,24329]" parent="return_statement [23916,23959]" at="1"/>
  <insert-node tree="binary_expression [38387,38481]" parent="return_statement [38380,38482]" at="1"/>
  <insert-node tree="binary_expression [38807,38878]" parent="return_statement [38800,38879]" at="1"/>
  <insert-node tree="if: if [39167,39169]" parent="if_statement [39167,39353]" at="0"/>
  <insert-node tree="(: ( [39170,39171]" parent="if_statement [39167,39353]" at="1"/>
  <insert-node tree="binary_expression [39171,39248]" parent="if_statement [39167,39353]" at="2"/>
  <insert-node tree="): ) [39248,39249]" parent="if_statement [39167,39353]" at="3"/>
  <insert-node tree="block_statement [39250,39353]" parent="if_statement [39167,39353]" at="4"/>
  <insert-node tree="call_expression [107052,107112]" parent="expression_statement [107052,107113]" at="0"/>
  <move-tree tree="variable_declaration [111877,111894]" parent="variable_declaration_statement [109338,109403]" at="0"/>
  <move-tree tree=",: , [110912,110913]" parent="call_expression [109358,109402]" at="4"/>
  <move-tree tree=",: , [110920,110921]" parent="call_expression [109358,109402]" at="6"/>
  <move-tree tree=",: , [113264,113265]" parent="call_expression [109434,109458]" at="4"/>
  <insert-node tree="if: if [110166,110168]" parent="if_statement [110166,110272]" at="0"/>
  <insert-node tree="(: ( [110169,110170]" parent="if_statement [110166,110272]" at="1"/>
  <insert-node tree="unary_expression [110170,110196]" parent="if_statement [110166,110272]" at="2"/>
  <insert-node tree="): ) [110196,110197]" parent="if_statement [110166,110272]" at="3"/>
  <insert-node tree="block_statement [110198,110272]" parent="if_statement [110166,110272]" at="4"/>
  <move-tree tree="variable_declaration [110839,110856]" parent="variable_declaration_statement [110284,110349]" at="0"/>
  <insert-node tree="=: = [110302,110303]" parent="variable_declaration_statement [110284,110349]" at="1"/>
  <insert-node tree="call_expression [110304,110348]" parent="variable_declaration_statement [110284,110349]" at="2"/>
  <insert-node tree="call_expression [110382,110454]" parent="variable_declaration_statement [110361,110455]" at="2"/>
  <move-tree tree=",: , [111117,111118]" parent="call_expression [110467,110526]" at="4"/>
  <move-tree tree=",: , [111129,111130]" parent="call_expression [110467,110526]" at="6"/>
  <insert-node tree="variable_declaration [111075,111094]" parent="variable_declaration_statement [111075,111124]" at="0"/>
  <insert-node tree="=: = [111095,111096]" parent="variable_declaration_statement [111075,111124]" at="1"/>
  <insert-tree tree="call_expression [111097,111123]" parent="variable_declaration_statement [111075,111124]" at="2"/>
  <move-tree tree="binary_expression [41730,41778]" parent="if_statement [111212,112180]" at="2"/>
  <move-tree tree="variable_declaration_statement [112120,112177]" parent="block_statement [111243,112180]" at="1"/>
  <insert-node tree="return: return [112327,112333]" parent="return_statement [112327,112422]" at="0"/>
  <move-tree tree="call_expression [112869,113049]" parent="return_statement [112327,112422]" at="1"/>
  <move-tree tree="call_expression [114281,114361]" parent="expression_statement [112885,112971]" at="0"/>
  <insert-tree tree="variable_declaration [116993,117013]" parent="variable_declaration_statement [116993,117056]" at="0"/>
  <insert-node tree="=: = [117014,117015]" parent="variable_declaration_statement [116993,117056]" at="1"/>
  <move-tree tree="type_cast_expression [118745,118791]" parent="variable_declaration_statement [116993,117056]" at="2"/>
  <insert-node tree="variable_declaration [117066,117078]" parent="variable_declaration_statement [117066,117093]" at="0"/>
  <insert-node tree="=: = [117079,117080]" parent="variable_declaration_statement [117066,117093]" at="1"/>
  <insert-node tree="identifier: SUFFIX_SIZE [117081,117092]" parent="variable_declaration_statement [117066,117093]" at="2"/>
  <insert-node tree="identifier: result [117194,117200]" parent="return_statement [117187,117201]" at="1"/>
  <insert-node tree="return: return [120764,120770]" parent="return_statement [120764,120866]" at="0"/>
  <move-tree tree="call_expression [110986,111079]" parent="return_statement [120764,120866]" at="1"/>
  <insert-node tree="identifier: require [19033,19040]" parent="call_expression [19033,19079]" at="0"/>
  <insert-node tree="(: ( [19040,19041]" parent="call_expression [19033,19079]" at="1"/>
  <insert-node tree="call_argument [19041,19078]" parent="call_expression [19033,19079]" at="2"/>
  <insert-node tree="): ) [19078,19079]" parent="call_expression [19033,19079]" at="3"/>
  <insert-node tree="identifier: _passMessage [19357,19369]" parent="call_expression [19357,19382]" at="0"/>
  <insert-node tree="(: ( [19369,19370]" parent="call_expression [19357,19382]" at="1"/>
  <move-tree tree="call_argument [19816,19820]" parent="call_expression [19357,19382]" at="2"/>
  <insert-node tree=",: , [19374,19375]" parent="call_expression [19357,19382]" at="3"/>
  <move-tree tree="call_argument [111112,111117]" parent="call_expression [19357,19382]" at="4"/>
  <insert-node tree="): ) [19381,19382]" parent="call_expression [19357,19382]" at="5"/>
  <insert-node tree="bool: bool [22058,22062]" parent="primitive_type [22058,22062]" at="0"/>
  <move-tree tree="array_access [114118,114196]" parent="assignment_expression [22172,22251]" at="0"/>
  <insert-node tree="=: = [22241,22242]" parent="assignment_expression [22172,22251]" at="1"/>
  <insert-node tree="identifier: _disable [22243,22251]" parent="assignment_expression [22172,22251]" at="2"/>
  <move-tree tree="array_access [114035,114104]" parent="assignment_expression [22721,22801]" at="0"/>
  <insert-node tree="=: = [22791,22792]" parent="assignment_expression [22721,22801]" at="1"/>
  <insert-node tree="identifier: _disable [22793,22801]" parent="assignment_expression [22721,22801]" at="2"/>
  <update-node tree="identifier: isNativeToken [111801,111814]" label="isDisabled"/>
  <insert-node tree="identifier: isDisabled [23273,23283]" parent="binary_expression [23273,23307]" at="0"/>
  <insert-node tree="||: || [23284,23286]" parent="binary_expression [23273,23307]" at="1"/>
  <insert-node tree="binary_expression [23287,23307]" parent="binary_expression [23273,23307]" at="2"/>
  <update-node tree="identifier: executionDailyLimit [24748,24767]" label="isTokenBridgingAllowed"/>
  <update-node tree="identifier: isKnownToken [111746,111758]" label="isDisabled"/>
  <update-node tree="identifier: dailyLimit [24307,24317]" label="isTokenExecutionAllowed"/>
  <update-node tree="number_literal: 1 [40809,40810]" label="2"/>
  <update-node tree="number_literal: 0 [40815,40816]" label="1"/>
  <move-tree tree="array_access [23512,23574]" parent="binary_expression [38387,38481]" at="0"/>
  <insert-node tree="==: == [38455,38457]" parent="binary_expression [38387,38481]" at="1"/>
  <insert-node tree="identifier: REGISTERED_AND_DEPLOYED [38458,38481]" parent="binary_expression [38387,38481]" at="2"/>
  <move-tree tree="array_access [23933,24004]" parent="binary_expression [38807,38878]" at="0"/>
  <insert-node tree="&gt;: &gt; [38875,38876]" parent="binary_expression [38807,38878]" at="1"/>
  <insert-node tree="number_literal: 0 [38877,38878]" parent="binary_expression [38807,38878]" at="2"/>
  <move-tree tree="array_access [42541,42619]" parent="binary_expression [39171,39248]" at="0"/>
  <insert-node tree="!=: != [39239,39241]" parent="binary_expression [39171,39248]" at="1"/>
  <insert-node tree="identifier: _state [39242,39248]" parent="binary_expression [39171,39248]" at="2"/>
  <insert-node tree="{: { [39250,39251]" parent="block_statement [39250,39353]" at="0"/>
  <move-tree tree="expression_statement [27263,27340]" parent="block_statement [39250,39353]" at="1"/>
  <insert-node tree="}: } [39352,39353]" parent="block_statement [39250,39353]" at="2"/>
  <update-node tree="identifier: registrationMessageId [113912,113933]" label="suffix"/>
  <insert-node tree="identifier: _setNativeTokenIsRegistered [107052,107079]" parent="call_expression [107052,107112]" at="0"/>
  <insert-node tree="(: ( [107079,107080]" parent="call_expression [107052,107112]" at="1"/>
  <move-tree tree="call_argument [115087,115093]" parent="call_expression [107052,107112]" at="2"/>
  <insert-node tree=",: , [107086,107087]" parent="call_expression [107052,107112]" at="3"/>
  <insert-tree tree="call_argument [107088,107111]" parent="call_expression [107052,107112]" at="4"/>
  <insert-node tree="): ) [107111,107112]" parent="call_expression [107052,107112]" at="5"/>
  <insert-node tree="identifier: _prepareMessage [109358,109373]" parent="call_expression [109358,109402]" at="0"/>
  <insert-node tree="identifier: _passMessage [109434,109446]" parent="call_expression [109434,109458]" at="0"/>
  <insert-tree tree="call_argument [109453,109457]" parent="call_expression [109434,109458]" at="4"/>
  <update-node tree="identifier: require [110528,110535]" label="_recordBridgeOperation"/>
  <move-tree tree="call_argument [113339,113349]" parent="call_expression [109469,109532]" at="2"/>
  <insert-node tree=",: , [109502,109503]" parent="call_expression [109469,109532]" at="3"/>
  <move-tree tree="call_argument [113351,113357]" parent="call_expression [109469,109532]" at="4"/>
  <insert-node tree=",: , [109510,109511]" parent="call_expression [109469,109532]" at="5"/>
  <move-tree tree="call_argument [111139,111148]" parent="call_expression [109469,109532]" at="6"/>
  <insert-node tree=",: , [109521,109522]" parent="call_expression [109469,109532]" at="7"/>
  <move-tree tree="call_argument [113366,113374]" parent="call_expression [109469,109532]" at="8"/>
  <insert-node tree="!: ! [110170,110171]" parent="unary_expression [110170,110196]" at="0"/>
  <move-tree tree="call_expression [111761,111786]" parent="unary_expression [110170,110196]" at="1"/>
  <insert-node tree="{: { [110198,110199]" parent="block_statement [110198,110272]" at="0"/>
  <insert-node tree="expression_statement [110213,110261]" parent="block_statement [110198,110272]" at="1"/>
  <insert-node tree="}: } [110271,110272]" parent="block_statement [110198,110272]" at="2"/>
  <insert-node tree="identifier: _prepareMessage [110304,110319]" parent="call_expression [110304,110348]" at="0"/>
  <insert-node tree="(: ( [110319,110320]" parent="call_expression [110304,110348]" at="1"/>
  <move-tree tree="call_argument [113963,113969]" parent="call_expression [110304,110348]" at="2"/>
  <insert-node tree=",: , [110326,110327]" parent="call_expression [110304,110348]" at="3"/>
  <insert-tree tree="call_argument [110328,110337]" parent="call_expression [110304,110348]" at="4"/>
  <insert-node tree=",: , [110337,110338]" parent="call_expression [110304,110348]" at="5"/>
  <insert-tree tree="call_argument [110339,110347]" parent="call_expression [110304,110348]" at="6"/>
  <insert-node tree="): ) [110347,110348]" parent="call_expression [110304,110348]" at="7"/>
  <insert-node tree="identifier: _passMessage [110382,110394]" parent="call_expression [110382,110454]" at="0"/>
  <insert-node tree="(: ( [110394,110395]" parent="call_expression [110382,110454]" at="1"/>
  <move-tree tree="call_argument [111055,111059]" parent="call_expression [110382,110454]" at="2"/>
  <insert-node tree=",: , [110399,110400]" parent="call_expression [110382,110454]" at="3"/>
  <insert-node tree="call_argument [110401,110453]" parent="call_expression [110382,110454]" at="4"/>
  <insert-node tree="): ) [110453,110454]" parent="call_expression [110382,110454]" at="5"/>
  <move-tree tree="call_argument [113359,113364]" parent="call_expression [110467,110526]" at="6"/>
  <move-tree tree="type_name [17945,17952]" parent="variable_declaration [111075,111094]" at="0"/>
  <insert-node tree="identifier: nativeToken [111083,111094]" parent="variable_declaration [111075,111094]" at="1"/>
  <insert-node tree="identifier: nativeToken [111216,111227]" parent="binary_expression [111216,111241]" at="0"/>
  <insert-node tree="==: == [111228,111230]" parent="binary_expression [111216,111241]" at="1"/>
  <move-tree tree="expression_statement [113103,113144]" parent="block_statement [111243,112180]" at="1"/>
  <insert-node tree="comment: // process token which bridged alternative was already ACKed to be deployed [111388,111463]" parent="block_statement [111243,112180]" at="3"/>
  <move-tree tree="if_statement [112563,113060]" parent="block_statement [111243,112180]" at="4"/>
  <insert-node tree="return_statement [111862,112169]" parent="block_statement [111243,112180]" at="8"/>
  <insert-tree tree="call_argument [112388,112399]" parent="call_expression [112334,112421]" at="4"/>
  <move-tree tree="call_argument [112956,112982]" parent="call_expression [112885,112970]" at="4"/>
  <update-node tree="identifier: addTotalExecutedPerDay [115064,115086]" label="require"/>
  <move-tree tree="call_argument [117174,117193]" parent="call_expression [113643,113683]" at="2"/>
  <move-tree tree="type_name [22557,22564]" parent="variable_declaration [117066,117078]" at="0"/>
  <insert-node tree="identifier: size [117074,117078]" parent="variable_declaration [117066,117078]" at="1"/>
  <update-node tree="identifier: _requestGasLimit [17665,17681]" label="_gasLimit"/>
  <insert-tree tree="call_argument [120840,120845]" parent="call_expression [120771,120865]" at="4"/>
  <update-node tree="identifier: call [4972,4976]" label="staticcall"/>
  <insert-node tree="unary_expression [19041,19078]" parent="call_argument [19041,19078]" at="0"/>
  <move-tree tree="member_expression [19627,19657]" parent="call_argument [19303,19333]" at="0"/>
  <insert-node tree="identifier: boolStorage [22172,22183]" parent="array_access [22172,22240]" at="0"/>
  <insert-node tree="identifier: boolStorage [22721,22732]" parent="array_access [22721,22790]" at="0"/>
  <insert-node tree="identifier: _token [23287,23293]" parent="binary_expression [23287,23307]" at="0"/>
  <insert-node tree="==: == [23294,23296]" parent="binary_expression [23287,23307]" at="1"/>
  <move-tree tree="type_cast_expression [114249,114259]" parent="binary_expression [23287,23307]" at="2"/>
  <insert-node tree="bool: bool [38783,38787]" parent="primitive_type [38783,38787]" at="0"/>
  <insert-node tree="call_expression [110213,110260]" parent="expression_statement [110213,110261]" at="0"/>
  <insert-node tree="call_expression [110401,110453]" parent="call_argument [110401,110453]" at="0"/>
  <move-tree tree="call_expression [112264,112282]" parent="if_statement [111477,111658]" at="2"/>
  <insert-node tree="return: return [111862,111868]" parent="return_statement [111862,112169]" at="0"/>
  <move-tree tree="call_expression [112304,112546]" parent="return_statement [111862,112169]" at="1"/>
  <move-tree tree="binary_expression [114303,114338]" parent="call_argument [112907,112947]" at="0"/>
  <insert-node tree="!: ! [19041,19042]" parent="unary_expression [19041,19078]" at="0"/>
  <insert-node tree="call_expression [19042,19078]" parent="unary_expression [19041,19078]" at="1"/>
  <update-node tree="identifier: _dailyLimit [27328,27339]" label="_state"/>
  <insert-node tree="identifier: _setNativeTokenIsRegistered [110213,110240]" parent="call_expression [110213,110260]" at="0"/>
  <insert-node tree="(: ( [110240,110241]" parent="call_expression [110213,110260]" at="1"/>
  <move-tree tree="call_argument [114241,114247]" parent="call_expression [110213,110260]" at="2"/>
  <insert-node tree=",: , [110247,110248]" parent="call_expression [110213,110260]" at="3"/>
  <insert-tree tree="call_argument [110249,110259]" parent="call_expression [110213,110260]" at="4"/>
  <insert-node tree="): ) [110259,110260]" parent="call_expression [110213,110260]" at="5"/>
  <insert-node tree="identifier: _isOracleDrivenLaneAllowed [110401,110427]" parent="call_expression [110401,110453]" at="0"/>
  <insert-node tree="(: ( [110427,110428]" parent="call_expression [110401,110453]" at="1"/>
  <move-tree tree="call_argument [23176,23182]" parent="call_expression [110401,110453]" at="2"/>
  <insert-node tree=",: , [110434,110435]" parent="call_expression [110401,110453]" at="3"/>
  <insert-tree tree="call_argument [110436,110441]" parent="call_expression [110401,110453]" at="4"/>
  <insert-node tree=",: , [110441,110442]" parent="call_expression [110401,110453]" at="5"/>
  <insert-tree tree="call_argument [110443,110452]" parent="call_expression [110401,110453]" at="6"/>
  <insert-node tree="): ) [110452,110453]" parent="call_expression [110401,110453]" at="7"/>
  <insert-node tree="address: address [111231,111238]" parent="primitive_type [111231,111238]" at="0"/>
  <update-node tree="identifier: _initToken [112264,112274]" label="isBridgedTokenDeployAcknowledged"/>
  <insert-node tree="return_statement [111542,111643]" parent="block_statement [111523,111658]" at="1"/>
  <move-tree tree="call_expression [112956,112982]" parent="binary_expression [112907,112947]" at="0"/>
  <insert-node tree="==: == [112934,112936]" parent="binary_expression [112907,112947]" at="1"/>
  <update-node tree="identifier: withinLimit [117174,117185]" label="isTokenExecutionAllowed"/>
  <update-node tree="identifier: withinExecutionLimit [115025,115045]" label="isTokenBridgingAllowed"/>
  <update-node tree="identifier: _requestGasLimit [17588,17604]" label="_gasLimit"/>
  <insert-tree tree="member_expression [15562,15582]" parent="call_expression [15562,15584]" at="0"/>
  <insert-tree tree="member_expression [19042,19066]" parent="call_expression [19042,19078]" at="0"/>
  <insert-node tree="(: ( [19066,19067]" parent="call_expression [19042,19078]" at="1"/>
  <move-tree tree="call_argument [19394,19404]" parent="call_expression [19042,19078]" at="2"/>
  <insert-node tree="): ) [19077,19078]" parent="call_expression [19042,19078]" at="3"/>
  <move-tree tree="call_argument [19547,19557]" parent="call_expression [19098,19138]" at="2"/>
  <move-tree tree="call_argument [19463,19473]" parent="call_expression [19175,19213]" at="2"/>
  <insert-node tree="address: address [23297,23304]" parent="primitive_type [23297,23304]" at="0"/>
  <insert-node tree="return: return [111542,111548]" parent="return_statement [111542,111643]" at="0"/>
  <move-tree tree="call_expression [112673,112766]" parent="return_statement [111542,111643]" at="1"/>
  <insert-node tree="identifier: SUFFIX [117047,117053]" parent="call_argument [117047,117053]" at="0"/>
  <insert-node tree="identifier: bridge [15535,15541]" parent="call_argument [15535,15541]" at="0"/>
  <insert-node tree="identifier: bridge [19098,19104]" parent="member_expression [19098,19126]" at="0"/>
  <insert-node tree="identifier: bridge [19175,19181]" parent="member_expression [19175,19201]" at="0"/>
  <insert-node tree="address: address [112937,112944]" parent="primitive_type [112937,112944]" at="0"/>
  <delete-node tree="comment: // keccak256(abi.encodePacked(&quot;requestGasLimit&quot;)) [14226,14275]"/>
  <delete-node tree="identifier: messageSender [14661,14674]"/>
  <delete-node tree="comment: /**      * @dev Sets the gas limit to be used in the message execution by the AMB bridge on the other network.      * This value can't exceed the parameter maxGasPerTx defined on the AMB bridge.      * Only the owner can call this method.      * @param _requestGasLimit the gas limit for the message execution.      */ [15374,15692]"/>
  <delete-node tree="function: function [15697,15705]"/>
  <delete-node tree="identifier: setRequestGasLimit [15706,15724]"/>
  <delete-node tree="(: ( [15724,15725]"/>
  <delete-tree tree="parameter [15725,15749]"/>
  <delete-node tree="): ) [15749,15750]"/>
  <delete-tree tree="function_body [15770,15824]"/>
  <delete-node tree="function_definition [15697,15824]"/>
  <delete-node tree="comment: /**      * @dev Tells the gas limit to be used in the message execution by the AMB bridge on the other network.      * @return the gas limit for the message execution.      */ [16374,16549]"/>
  <delete-node tree="comment: /**      * @dev Stores the gas limit to be used in the message execution by the AMB bridge on the other network.      * @param _requestGasLimit the gas limit for the message execution.      */ [17309,17501]"/>
  <delete-node tree="comment: /**      * @dev Tells the address that generated the message on the other network that is currently being executed by      * the AMB bridge.      * @return the address of the message sender.      */ [17694,17892]"/>
  <delete-node tree="function: function [17897,17905]"/>
  <delete-node tree="identifier: messageSender [17906,17919]"/>
  <delete-node tree="(: ( [17919,17920]"/>
  <delete-node tree="): ) [17920,17921]"/>
  <delete-tree tree="state_mutability [17931,17935]"/>
  <delete-node tree="returns: returns [17936,17943]"/>
  <delete-node tree="(: ( [17944,17945]"/>
  <delete-node tree="parameter [17945,17952]"/>
  <delete-node tree="): ) [17952,17953]"/>
  <delete-node tree="return_type_definition [17936,17953]"/>
  <delete-node tree="{: { [17954,17955]"/>
  <delete-node tree="return: return [17964,17970]"/>
  <delete-node tree=".: . [17987,17988]"/>
  <delete-node tree="identifier: messageSender [17988,18001]"/>
  <delete-node tree="member_expression [17971,18001]"/>
  <delete-node tree="(: ( [18001,18002]"/>
  <delete-node tree="): ) [18002,18003]"/>
  <delete-node tree="call_expression [17971,18003]"/>
  <delete-node tree="return_statement [17964,18004]"/>
  <delete-node tree="}: } [18009,18010]"/>
  <delete-node tree="function_body [17954,18010]"/>
  <delete-node tree="function_definition [17897,18010]"/>
  <delete-node tree="identifier: require [19350,19357]"/>
  <delete-node tree="(: ( [19357,19358]"/>
  <delete-tree tree="member_expression [19358,19393]"/>
  <delete-node tree="(: ( [19393,19394]"/>
  <delete-node tree="): ) [19404,19405]"/>
  <delete-node tree="call_expression [19358,19405]"/>
  <delete-node tree="call_argument [19358,19405]"/>
  <delete-node tree="): ) [19405,19406]"/>
  <delete-node tree="call_expression [19350,19406]"/>
  <delete-node tree="expression_statement [19350,19407]"/>
  <delete-tree tree="call_expression [19424,19440]"/>
  <delete-tree tree="call_expression [19510,19526]"/>
  <delete-tree tree="variable_declaration [19603,19624]"/>
  <delete-node tree="identifier: methodSelector [19710,19724]"/>
  <delete-tree tree="member_expression [19747,19784]"/>
  <delete-node tree="(: ( [19784,19785]"/>
  <delete-tree tree="call_argument [19785,19814]"/>
  <delete-node tree=",: , [19814,19815]"/>
  <delete-node tree=",: , [19820,19821]"/>
  <delete-tree tree="call_argument [19822,19839]"/>
  <delete-node tree="): ) [19839,19840]"/>
  <delete-node tree="call_expression [19747,19840]"/>
  <delete-node tree="expression_statement [19747,19841]"/>
  <delete-tree tree="call_argument [20522,20532]"/>
  <delete-node tree=",: , [20550,20551]"/>
  <delete-tree tree="parameter [21298,21316]"/>
  <delete-node tree=",: , [21368,21369]"/>
  <delete-node tree="uint256: uint256 [26192,26199]"/>
  <delete-tree tree="unary_expression [114118,114136]"/>
  <delete-tree tree="call_expression [26310,26354]"/>
  <delete-node tree="function: function [22515,22523]"/>
  <delete-node tree="identifier: totalSpentPerDay [22524,22540]"/>
  <delete-node tree="(: ( [22540,22541]"/>
  <delete-tree tree="parameter [22541,22555]"/>
  <delete-node tree=",: , [22555,22556]"/>
  <delete-node tree="identifier: _day [22565,22569]"/>
  <delete-node tree="parameter [22557,22569]"/>
  <delete-node tree="): ) [22569,22570]"/>
  <delete-tree tree="visibility [22571,22577]"/>
  <delete-tree tree="return_type_definition [22583,22600]"/>
  <delete-tree tree="function_body [22601,22699]"/>
  <delete-node tree="function_definition [22515,22699]"/>
  <delete-tree tree="unary_expression [114035,114053]"/>
  <delete-tree tree="call_expression [25682,25717]"/>
  <delete-node tree="function: function [23008,23016]"/>
  <delete-node tree="identifier: totalExecutedPerDay [23017,23036]"/>
  <delete-node tree="(: ( [23036,23037]"/>
  <delete-tree tree="parameter [23037,23051]"/>
  <delete-node tree=",: , [23051,23052]"/>
  <delete-node tree="): ) [23065,23066]"/>
  <delete-tree tree="visibility [23067,23073]"/>
  <delete-tree tree="state_mutability [23074,23078]"/>
  <delete-tree tree="return_type_definition [23079,23096]"/>
  <delete-node tree="{: { [23097,23098]"/>
  <delete-node tree="return: return [23107,23113]"/>
  <delete-node tree="identifier: uintStorage [23114,23125]"/>
  <delete-node tree="[: [ [23125,23126]"/>
  <delete-node tree="identifier: keccak256 [23126,23135]"/>
  <delete-node tree="(: ( [23135,23136]"/>
  <delete-tree tree="member_expression [23136,23152]"/>
  <delete-node tree="(: ( [23152,23153]"/>
  <delete-tree tree="call_argument [23153,23174]"/>
  <delete-node tree=",: , [23174,23175]"/>
  <delete-node tree=",: , [23182,23183]"/>
  <delete-tree tree="call_argument [23184,23188]"/>
  <delete-node tree="): ) [23188,23189]"/>
  <delete-node tree="call_expression [23136,23189]"/>
  <delete-node tree="call_argument [23136,23189]"/>
  <delete-node tree="): ) [23189,23190]"/>
  <delete-node tree="call_expression [23126,23190]"/>
  <delete-node tree="]: ] [23190,23191]"/>
  <delete-node tree="array_access [23114,23191]"/>
  <delete-node tree="return_statement [23107,23192]"/>
  <delete-node tree="}: } [23197,23198]"/>
  <delete-node tree="function_body [23097,23198]"/>
  <delete-node tree="function_definition [23008,23198]"/>
  <delete-node tree="bytes32: bytes32 [114249,114256]"/>
  <delete-node tree="&gt;: &gt; [24780,24781]"/>
  <delete-node tree="number_literal: 0 [24782,24783]"/>
  <delete-node tree="binary_expression [24748,24783]"/>
  <delete-node tree="&amp;&amp;: &amp;&amp; [24784,24786]"/>
  <delete-tree tree="binary_expression [24799,24873]"/>
  <delete-node tree="binary_expression [24748,24873]"/>
  <delete-node tree="comment: /**      * @dev Checks that bridged amount of tokens conforms to the configured limits.      * @param _token address of the token contract.      * @return true, if specified amount can be bridged.      */ [24017,24221]"/>
  <delete-node tree="&gt;: &gt; [24330,24331]"/>
  <delete-node tree="number_literal: 0 [24332,24333]"/>
  <delete-node tree="binary_expression [24307,24333]"/>
  <delete-node tree="&amp;&amp;: &amp;&amp; [24334,24336]"/>
  <delete-tree tree="binary_expression [24337,24399]"/>
  <delete-node tree="binary_expression [24307,24399]"/>
  <delete-node tree="comment: /**      * @dev Checks that bridged amount of tokens conforms to the configured execution limits.      * @param _token address of the token contract.      * @return true, if specified amount can be processed and executed.      */ [24412,24641]"/>
  <delete-node tree="comment: /**      * @dev Returns current day number.      * @return day number.      */ [24886,24964]"/>
  <delete-tree tree="function_definition [24969,25126]"/>
  <delete-node tree="comment: /**      * @dev Updates daily limit for the particular token. Only owner can call this method.      * @param _token address of the token contract, or address(0) for configuring the efault limit.      * @param _dailyLimit daily allowed amount of bridged tokens, should be greater than maxPerTx.      * 0 value is also allowed, will stop the bridge operations in outgoing direction.      */ [25132,25520]"/>
  <delete-node tree="comment: /**      * @dev Updates execution daily limit for the particular token. Only owner can call this method.      * @param _token address of the token contract, or address(0) for configuring the default limit.      * @param _dailyLimit daily allowed amount of executed tokens, should be greater than executionMaxPerTx.      * 0 value is also allowed, will stop the bridge operations in incoming direction.      */ [25730,26139]"/>
  <delete-node tree="comment: /**      * @dev Internal function for adding spent amount for some token.      * @param _token address of the token contract.      */ [26367,26500]"/>
  <delete-node tree="function: function [26505,26513]"/>
  <delete-node tree="identifier: addTotalSpentPerDay [26514,26533]"/>
  <delete-node tree="(: ( [26533,26534]"/>
  <delete-tree tree="parameter [26534,26548]"/>
  <delete-node tree="): ) [26548,26549]"/>
  <delete-tree tree="function_body [26559,26666]"/>
  <delete-node tree="function_definition [26505,26666]"/>
  <delete-node tree="comment: /**      * @dev Internal function for adding executed amount for some token.      * @param _token address of the token contract.      */ [26672,26808]"/>
  <delete-node tree="function: function [26813,26821]"/>
  <delete-node tree="identifier: addTotalExecutedPerDay [26822,26844]"/>
  <delete-node tree="(: ( [26844,26845]"/>
  <delete-tree tree="parameter [26845,26859]"/>
  <delete-node tree="): ) [26859,26860]"/>
  <delete-tree tree="function_body [26870,26980]"/>
  <delete-node tree="function_definition [26813,26980]"/>
  <delete-node tree="comment: /**      * @dev Internal function for initializing limits for some token.      * @param _token address of the token contract.      * @param _dailyLimit daily limit for the given token.      */ [26986,27178]"/>
  <delete-node tree="comment: /**      * @dev Internal function for initializing execution limits for some token.      * @param _token address of the token contract.      * @param _dailyLimit daily execution limit for the given token.      */ [27405,27617]"/>
  <delete-node tree="function: function [27622,27630]"/>
  <delete-node tree="identifier: _setExecutionDailyLimit [27631,27654]"/>
  <delete-node tree="(: ( [27654,27655]"/>
  <delete-tree tree="parameter [27655,27669]"/>
  <delete-node tree=",: , [27669,27670]"/>
  <delete-tree tree="parameter [27671,27690]"/>
  <delete-node tree="): ) [27690,27691]"/>
  <delete-tree tree="visibility [27692,27700]"/>
  <delete-node tree="{: { [27701,27702]"/>
  <delete-tree tree="expression_statement [27711,27797]"/>
  <delete-node tree="emit: emit [27806,27810]"/>
  <delete-node tree="identifier: ExecutionDailyLimitChanged [27811,27837]"/>
  <delete-node tree="(: ( [27837,27838]"/>
  <delete-node tree=",: , [27844,27845]"/>
  <delete-tree tree="call_argument [27846,27857]"/>
  <delete-node tree="): ) [27857,27858]"/>
  <delete-node tree="emit_statement [27806,27859]"/>
  <delete-node tree="}: } [27864,27865]"/>
  <delete-node tree="function_body [27701,27865]"/>
  <delete-node tree="function_definition [27622,27865]"/>
  <delete-node tree="function: function [41635,41643]"/>
  <delete-node tree="identifier: isRegisteredAsNativeToken [41644,41669]"/>
  <delete-node tree="(: ( [41669,41670]"/>
  <delete-tree tree="parameter [41670,41684]"/>
  <delete-node tree="): ) [41684,41685]"/>
  <delete-tree tree="visibility [41686,41692]"/>
  <delete-tree tree="state_mutability [41693,41697]"/>
  <delete-node tree="{: { [41713,41714]"/>
  <delete-node tree="return: return [41723,41729]"/>
  <delete-node tree="return_statement [41723,41779]"/>
  <delete-node tree="}: } [41784,41785]"/>
  <delete-node tree="function_body [41713,41785]"/>
  <delete-node tree="function_definition [41635,41785]"/>
  <delete-tree tree="return_type_definition [23477,23494]"/>
  <delete-node tree="uint256: uint256 [23907,23914]"/>
  <delete-node tree="function: function [42014,42022]"/>
  <delete-node tree="identifier: tokenRegistrationMessageId [42023,42049]"/>
  <delete-node tree="(: ( [42049,42050]"/>
  <delete-node tree="): ) [42064,42065]"/>
  <delete-tree tree="visibility [42066,42072]"/>
  <delete-tree tree="function_body [42096,42207]"/>
  <delete-node tree="function_definition [42014,42207]"/>
  <delete-tree tree="parameter [27207,27221]"/>
  <delete-node tree="identifier: _dailyLimit [27231,27242]"/>
  <delete-node tree="parameter [27223,27242]"/>
  <delete-node tree="emit: emit [27349,27353]"/>
  <delete-node tree="identifier: DailyLimitChanged [27354,27371]"/>
  <delete-node tree="(: ( [27371,27372]"/>
  <delete-node tree=",: , [27378,27379]"/>
  <delete-tree tree="call_argument [27380,27391]"/>
  <delete-node tree="): ) [27391,27392]"/>
  <delete-node tree="emit_statement [27349,27393]"/>
  <delete-node tree="function: function [42446,42454]"/>
  <delete-node tree="identifier: _setTokenRegistrationMessageId [42455,42485]"/>
  <delete-node tree="(: ( [42485,42486]"/>
  <delete-node tree=",: , [42500,42501]"/>
  <delete-tree tree="parameter [42502,42520]"/>
  <delete-node tree="): ) [42520,42521]"/>
  <delete-node tree="{: { [42531,42532]"/>
  <delete-node tree="=: = [42620,42621]"/>
  <delete-tree tree="type_cast_expression [42622,42641]"/>
  <delete-node tree="assignment_expression [42541,42641]"/>
  <delete-node tree="expression_statement [42541,42642]"/>
  <delete-node tree="}: } [42647,42648]"/>
  <delete-node tree="function_body [42531,42648]"/>
  <delete-node tree="function_definition [42446,42648]"/>
  <delete-node tree="=: = [113934,113935]"/>
  <delete-node tree="identifier: tokenRegistrationMessageId [113936,113962]"/>
  <delete-node tree="(: ( [113962,113963]"/>
  <delete-node tree="): ) [113969,113970]"/>
  <delete-node tree="call_expression [113936,113970]"/>
  <delete-tree tree="expression_statement [107661,107686]"/>
  <delete-tree tree="expression_statement [109903,109929]"/>
  <delete-tree tree="member_expression [110859,110881]"/>
  <delete-tree tree="call_argument [110882,110912]"/>
  <delete-node tree=",: , [110931,110932]"/>
  <delete-tree tree="member_expression [113197,113234]"/>
  <delete-tree tree="call_argument [113235,113264]"/>
  <delete-node tree=",: , [113270,113271]"/>
  <delete-tree tree="call_argument [113272,113289]"/>
  <delete-tree tree="call_argument [110536,110605]"/>
  <delete-node tree=",: , [111148,111149]"/>
  <delete-node tree=",: , [111591,111592]"/>
  <delete-node tree="=: = [111759,111760]"/>
  <delete-node tree="variable_declaration_statement [111741,111787]"/>
  <delete-node tree="=: = [111815,111816]"/>
  <delete-tree tree="binary_expression [111817,111867]"/>
  <delete-node tree="variable_declaration_statement [111796,111868]"/>
  <delete-node tree="variable_declaration_statement [111877,111895]"/>
  <delete-tree tree="call_expression [41730,41764]"/>
  <delete-node tree="!=: != [41765,41767]"/>
  <delete-node tree="bytes32: bytes32 [41768,41775]"/>
  <delete-tree tree="unary_expression [111909,111922]"/>
  <delete-node tree="identifier: isNativeToken [112567,112580]"/>
  <delete-tree tree="variable_declaration_statement [112596,112653]"/>
  <delete-node tree="identifier: data [112666,112670]"/>
  <delete-node tree="=: = [112671,112672]"/>
  <delete-node tree="assignment_expression [112666,112766]"/>
  <delete-node tree="expression_statement [112666,112767]"/>
  <delete-node tree="else: else [112778,112782]"/>
  <delete-node tree="{: { [112783,112784]"/>
  <delete-node tree="}: } [113059,113060]"/>
  <delete-node tree="block_statement [112783,113060]"/>
  <delete-node tree="expression_statement [112264,112283]"/>
  <delete-node tree="identifier: data [112297,112301]"/>
  <delete-node tree="=: = [112302,112303]"/>
  <delete-node tree="assignment_expression [112297,112546]"/>
  <delete-node tree="expression_statement [112297,112547]"/>
  <delete-node tree="else: else [112558,112562]"/>
  <delete-node tree="if: if [113070,113072]"/>
  <delete-node tree="(: ( [113073,113074]"/>
  <delete-node tree="identifier: isNativeToken [113074,113087]"/>
  <delete-node tree="): ) [113087,113088]"/>
  <delete-node tree="{: { [113089,113090]"/>
  <delete-node tree="}: } [113153,113154]"/>
  <delete-node tree="block_statement [113089,113154]"/>
  <delete-node tree="if_statement [113070,113154]"/>
  <delete-node tree="identifier: _recordBridgeOperation [113301,113323]"/>
  <delete-node tree="(: ( [113323,113324]"/>
  <delete-tree tree="call_argument [113324,113337]"/>
  <delete-node tree=",: , [113337,113338]"/>
  <delete-node tree=",: , [113349,113350]"/>
  <delete-node tree=",: , [113357,113358]"/>
  <delete-node tree=",: , [113364,113365]"/>
  <delete-node tree="): ) [113374,113375]"/>
  <delete-node tree="call_expression [113301,113375]"/>
  <delete-node tree="expression_statement [113301,113376]"/>
  <delete-tree tree="parameter [113773,113791]"/>
  <delete-node tree=",: , [113843,113844]"/>
  <delete-node tree="identifier: registrationMessageId [114303,114324]"/>
  <delete-node tree="!=: != [114325,114327]"/>
  <delete-node tree="bytes32: bytes32 [114328,114335]"/>
  <delete-node tree="call_argument [114303,114338]"/>
  <delete-node tree="identifier: data [112862,112866]"/>
  <delete-node tree="=: = [112867,112868]"/>
  <delete-node tree="assignment_expression [112862,113049]"/>
  <delete-node tree="if: if [113980,113982]"/>
  <delete-node tree="(: ( [113983,113984]"/>
  <delete-tree tree="binary_expression [113984,114019]"/>
  <delete-node tree="): ) [114019,114020]"/>
  <delete-node tree="{: { [114021,114022]"/>
  <delete-node tree="expression_statement [114035,114105]"/>
  <delete-node tree="expression_statement [114118,114197]"/>
  <delete-node tree="identifier: _setTokenRegistrationMessageId [114210,114240]"/>
  <delete-node tree="(: ( [114240,114241]"/>
  <delete-node tree=",: , [114247,114248]"/>
  <delete-node tree="call_argument [114249,114259]"/>
  <delete-node tree="): ) [114259,114260]"/>
  <delete-node tree="call_expression [114210,114260]"/>
  <delete-node tree="expression_statement [114210,114261]"/>
  <delete-node tree="}: } [114270,114271]"/>
  <delete-node tree="block_statement [114021,114271]"/>
  <delete-node tree="if_statement [113980,114271]"/>
  <delete-node tree="expression_statement [114281,114362]"/>
  <delete-node tree=",: , [117114,117115]"/>
  <delete-node tree="identifier: require [117166,117173]"/>
  <delete-node tree="(: ( [117173,117174]"/>
  <delete-node tree="): ) [117193,117194]"/>
  <delete-node tree="call_expression [117166,117194]"/>
  <delete-node tree="expression_statement [117166,117195]"/>
  <delete-tree tree="expression_statement [117204,117232]"/>
  <delete-tree tree="if_statement [117385,117475]"/>
  <delete-tree tree="state_mutability [118690,118694]"/>
  <delete-tree tree="string_literal [118776,118789]"/>
  <delete-node tree="function: function [117721,117729]"/>
  <delete-node tree="identifier: _initToken [117730,117740]"/>
  <delete-node tree="(: ( [117740,117741]"/>
  <delete-node tree="): ) [117755,117756]"/>
  <delete-tree tree="function_body [117766,117903]"/>
  <delete-node tree="function_definition [117721,117903]"/>
  <delete-node tree="function: function [117909,117917]"/>
  <delete-node tree="identifier: _transformName [117918,117932]"/>
  <delete-node tree="(: ( [117932,117933]"/>
  <delete-tree tree="parameter [117933,117952]"/>
  <delete-node tree="): ) [117952,117953]"/>
  <delete-tree tree="state_mutability [117963,117967]"/>
  <delete-node tree="virtual: virtual [117968,117975]"/>
  <delete-tree tree="return_type_definition [117976,117999]"/>
  <delete-node tree="function_definition [117909,118000]"/>
  <delete-tree tree="type_name [17535,17542]"/>
  <delete-node tree="identifier: _executionDailyLimit [105277,105297]"/>
  <delete-node tree="parameter [105269,105297]"/>
  <delete-node tree=",: , [105331,105332]"/>
  <delete-node tree=",: , [105355,105356]"/>
  <delete-tree tree="expression_statement [105580,105620]"/>
  <delete-tree tree="expression_statement [105629,105687]"/>
  <delete-node tree="contract: contract [118349,118357]"/>
  <delete-node tree="identifier: ForeignNFTOmnibridge [118358,118378]"/>
  <delete-node tree="is: is [118379,118381]"/>
  <delete-node tree="{: { [118401,118402]"/>
  <delete-node tree="comment: /**      * @dev Internal function for transforming the bridged token name. Appends a side-specific suffix.      * @param _name bridged token from the other side.      * @return token name for this side of the bridge.      */ [118407,118631]"/>
  <delete-node tree="}: } [118799,118800]"/>
  <delete-node tree="contract_body [118401,118800]"/>
  <delete-node tree="contract_declaration [118349,118800]"/>
</actions>
