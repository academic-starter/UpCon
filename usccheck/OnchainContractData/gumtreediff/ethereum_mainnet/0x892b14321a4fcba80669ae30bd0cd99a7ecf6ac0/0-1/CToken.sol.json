{
  "matches": [
    {
      "src": "identifier: this [37876,37880]",
      "dest": "identifier: this [24511,24515]"
    },
    {
      "src": "identifier: SET_RESERVE_FACTOR_FRESH_CHECK [54702,54732]",
      "dest": "identifier: SET_RESERVE_FACTOR_FRESH_CHECK [38465,38495]"
    },
    {
      "src": "internal: internal [63919,63927]",
      "dest": "internal: internal [47390,47398]"
    },
    {
      "src": "identifier: fail [54885,54889]",
      "dest": "identifier: fail [38648,38652]"
    },
    {
      "src": "): ) [35627,35628]",
      "dest": "): ) [22262,22263]"
    },
    {
      "src": "call_argument [7804,7816]",
      "dest": "call_argument [5170,5182]"
    },
    {
      "src": "): ) [19778,19779]",
      "dest": "): ) [15892,15893]"
    },
    {
      "src": "identifier: FailureInfo [54907,54918]",
      "dest": "identifier: FailureInfo [38670,38681]"
    },
    {
      "src": "call_argument [40755,40775]",
      "dest": "call_argument [27215,27235]"
    },
    {
      "src": "returns: returns [58280,58287]",
      "dest": "returns: returns [41926,41933]"
    },
    {
      "src": ",: , [58554,58555]",
      "dest": ",: , [42200,42201]"
    },
    {
      "src": ".: . [43495,43496]",
      "dest": ".: . [29985,29986]"
    },
    {
      "src": ".: . [44039,44040]",
      "dest": ".: . [30529,30530]"
    },
    {
      "src": "type_name [31996,32000]",
      "dest": "type_name [18934,18938]"
    },
    {
      "src": "identifier: name [2158,2162]",
      "dest": "identifier: name [2158,2162]"
    },
    {
      "src": "function_definition [13803,14959]",
      "dest": "function_definition [11539,12312]"
    },
    {
      "src": "identifier: redeemer [26625,26633]",
      "dest": "identifier: redeemer [48757,48765]"
    },
    {
      "src": "address: address [41552,41559]",
      "dest": "address: address [28042,28049]"
    },
    {
      "src": "identifier: nonReentrant [64532,64544]",
      "dest": "identifier: nonReentrant [49406,49418]"
    },
    {
      "src": "identifier: vars [33957,33961]",
      "dest": "identifier: vars [20752,20756]"
    },
    {
      "src": "visibility [15142,15150]",
      "dest": "visibility [12495,12503]"
    },
    {
      "src": "function_body [8380,8973]",
      "dest": "function_body [5642,5938]"
    },
    {
      "src": "(: ( [45404,45405]",
      "dest": "(: ( [31894,31895]"
    },
    {
      "src": "identifier: number [9204,9210]",
      "dest": "identifier: number [6169,6175]"
    },
    {
      "src": "address: address [47198,47205]",
      "dest": "address: address [33718,33725]"
    },
    {
      "src": "primitive_type [13340,13344]",
      "dest": "primitive_type [11238,11242]"
    },
    {
      "src": "member_expression [1686,1700]",
      "dest": "member_expression [1686,1700]"
    },
    {
      "src": "call_argument [16200,16213]",
      "dest": "call_argument [13553,13566]"
    },
    {
      "src": "comment: // EFFECTS & INTERACTIONS [56853,56878]",
      "dest": "comment: // EFFECTS & INTERACTIONS [40616,40641]"
    },
    {
      "src": "=: = [16432,16433]",
      "dest": "=: = [13764,13765]"
    },
    {
      "src": "external: external [5776,5784]",
      "dest": "external: external [3167,3175]"
    },
    {
      "src": "identifier: allowed [43443,43450]",
      "dest": "identifier: allowed [29933,29940]"
    },
    {
      "src": "if_statement [12026,12116]",
      "dest": "if_statement [10164,10232]"
    },
    {
      "src": "uint: uint [8390,8394]",
      "dest": "uint: uint [5652,5656]"
    },
    {
      "src": "primitive_type [35651,35655]",
      "dest": "primitive_type [22286,22290]"
    },
    {
      "src": "return_statement [31818,31863]",
      "dest": "return_statement [18756,18801]"
    },
    {
      "src": ",: , [8366,8367]",
      "dest": ",: , [5628,5629]"
    },
    {
      "src": "type_name [37700,37707]",
      "dest": "type_name [24335,24342]"
    },
    {
      "src": "{: { [38711,38712]",
      "dest": "{: { [24885,24886]"
    },
    {
      "src": "call_argument [38652,38660]",
      "dest": "call_argument [20659,20667]"
    },
    {
      "src": "function_definition [19614,20153]",
      "dest": "function_definition [15728,16267]"
    },
    {
      "src": "primitive_type [8443,8447]",
      "dest": "primitive_type [5716,5720]"
    },
    {
      "src": "primitive_type [15970,15974]",
      "dest": "primitive_type [13323,13327]"
    },
    {
      "src": "type_cast_expression [46165,46185]",
      "dest": "type_cast_expression [32655,32675]"
    },
    {
      "src": "comment: /**      * @notice Accrue interest then return the up-to-date exchange rate      * @return Calculated exchange rate scaled by 1e18      */ [12708,12846]",
      "dest": "comment: /**      * @notice Accrue interest then return the up-to-date exchange rate      * @return Calculated exchange rate scaled by 1e18      */ [10606,10744]"
    },
    {
      "src": "): ) [62702,62703]",
      "dest": "): ) [46173,46174]"
    },
    {
      "src": "uint: uint [15608,15612]",
      "dest": "uint: uint [12961,12965]"
    },
    {
      "src": "(: ( [24416,24417]",
      "dest": "(: ( [16727,16728]"
    },
    {
      "src": "type_name [50626,50630]",
      "dest": "type_name [34389,34393]"
    },
    {
      "src": "modifier_invocation [41631,41643]",
      "dest": "modifier_invocation [28121,28133]"
    },
    {
      "src": "function_definition [13289,13546]",
      "dest": "function_definition [11187,11296]"
    },
    {
      "src": "): ) [11516,11517]",
      "dest": "): ) [9815,9816]"
    },
    {
      "src": "primitive_type [5387,5391]",
      "dest": "primitive_type [2778,2782]"
    },
    {
      "src": "uint: uint [35651,35655]",
      "dest": "uint: uint [22286,22290]"
    },
    {
      "src": "(: ( [63627,63628]",
      "dest": "(: ( [47098,47099]"
    },
    {
      "src": "identifier: Error [5883,5888]",
      "dest": "identifier: Error [3274,3279]"
    },
    {
      "src": "): ) [9508,9509]",
      "dest": "): ) [6473,6474]"
    },
    {
      "src": "primitive_type [2862,2869]",
      "dest": "primitive_type [48066,48073]"
    },
    {
      "src": "=: = [45871,45872]",
      "dest": "=: = [32361,32362]"
    },
    {
      "src": "): ) [64380,64381]",
      "dest": "): ) [47851,47852]"
    },
    {
      "src": "if: if [32958,32960]",
      "dest": "if: if [20188,20190]"
    },
    {
      "src": "): ) [36796,36797]",
      "dest": "): ) [23431,23432]"
    },
    {
      "src": "uint: uint [8356,8360]",
      "dest": "uint: uint [5618,5622]"
    },
    {
      "src": "uint256: uint256 [6993,7000]",
      "dest": "uint256: uint256 [4384,4391]"
    },
    {
      "src": "parameter [32329,32346]",
      "dest": "parameter [19267,19284]"
    },
    {
      "src": "call_argument [1523,1573]",
      "dest": "call_argument [1523,1573]"
    },
    {
      "src": "address: address [48082,48089]",
      "dest": "address: address [49206,49213]"
    },
    {
      "src": "identifier: exchangeRateStoredInternal [13812,13838]",
      "dest": "identifier: exchangeRateStoredInternal [11548,11574]"
    },
    {
      "src": "(: ( [42231,42232]",
      "dest": "(: ( [28721,28722]"
    },
    {
      "src": "identifier: liquidator [43395,43405]",
      "dest": "identifier: liquidator [29885,29895]"
    },
    {
      "src": "identifier: doTransferIn [39674,39686]",
      "dest": "identifier: doTransferIn [26394,26406]"
    },
    {
      "src": "function: function [54263,54271]",
      "dest": "function: function [38026,38034]"
    },
    {
      "src": "member_expression [60728,60742]",
      "dest": "member_expression [44199,44213]"
    },
    {
      "src": ",: , [56780,56781]",
      "dest": ",: , [40543,40544]"
    },
    {
      "src": "parameter [2888,2899]",
      "dest": "parameter [48092,48103]"
    },
    {
      "src": "{: { [42076,42077]",
      "dest": "{: { [28566,28567]"
    },
    {
      "src": "comment: /* We write the previously calculated values into storage */ [18810,18870]",
      "dest": "comment: /* We write the previously calculated values into storage */ [14924,14984]"
    },
    {
      "src": "call_argument [42240,42295]",
      "dest": "call_argument [28730,28785]"
    },
    {
      "src": "block_statement [32530,32652]",
      "dest": "block_statement [19468,19590]"
    },
    {
      "src": "): ) [8331,8332]",
      "dest": "): ) [5593,5594]"
    },
    {
      "src": "uint: uint [38955,38959]",
      "dest": "uint: uint [25675,25679]"
    },
    {
      "src": "identifier: addUInt [33694,33701]",
      "dest": "identifier: add_ [20703,20707]"
    },
    {
      "src": "type_name [61198,61202]",
      "dest": "type_name [44669,44673]"
    },
    {
      "src": "(: ( [31499,31500]",
      "dest": "(: ( [18437,18438]"
    },
    {
      "src": "type_name [32329,32333]",
      "dest": "type_name [19267,19271]"
    },
    {
      "src": "{: { [41749,41750]",
      "dest": "{: { [28239,28240]"
    },
    {
      "src": "(: ( [32561,32562]",
      "dest": "(: ( [19499,19500]"
    },
    {
      "src": "identifier: accrualBlockNumber [32737,32755]",
      "dest": "identifier: accrualBlockNumber [19967,19985]"
    },
    {
      "src": ".: . [12546,12547]",
      "dest": ".: . [10555,10556]"
    },
    {
      "src": "call_expression [8556,8592]",
      "dest": "call_expression [9487,9523]"
    },
    {
      "src": ".: . [25352,25353]",
      "dest": ".: . [17663,17664]"
    },
    {
      "src": "emit: emit [52075,52079]",
      "dest": "emit: emit [35838,35842]"
    },
    {
      "src": ",: , [57835,57836]",
      "dest": ",: , [41481,41482]"
    },
    {
      "src": "identifier: getCashPrior [15188,15200]",
      "dest": "identifier: getCashPrior [12541,12553]"
    },
    {
      "src": "(: ( [42438,42439]",
      "dest": "(: ( [28928,28929]"
    },
    {
      "src": "uint: uint [10633,10637]",
      "dest": "uint: uint [9096,9100]"
    },
    {
      "src": ".: . [34950,34951]",
      "dest": ".: . [21555,21556]"
    },
    {
      "src": "call_argument [35026,35034]",
      "dest": "call_argument [21631,21639]"
    },
    {
      "src": "(: ( [13037,13038]",
      "dest": "(: ( [10935,10936]"
    },
    {
      "src": "(: ( [59696,59697]",
      "dest": "(: ( [43342,43343]"
    },
    {
      "src": "identifier: FailureInfo [58556,58567]",
      "dest": "identifier: FailureInfo [42202,42213]"
    },
    {
      "src": "assignment_expression [38979,39017]",
      "dest": "assignment_expression [25699,25737]"
    },
    {
      "src": "call_argument [18441,18461]",
      "dest": "call_argument [14739,14759]"
    },
    {
      "src": "comment: /**      * @notice Reduces reserves by transferring to admin      * @dev Requires fresh interest accrual      * @param reduceAmount Amount of reduction to reserves      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)      */ [58783,59041]",
      "dest": "comment: /**      * @notice Reduces reserves by transferring to admin      * @dev Requires fresh interest accrual      * @param reduceAmount Amount of reduction to reserves      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)      */ [42429,42687]"
    },
    {
      "src": "function: function [10038,10046]",
      "dest": "function: function [8501,8509]"
    },
    {
      "src": "\": \" [64578,64579]",
      "dest": "\": \" [49452,49453]"
    },
    {
      "src": "function: function [5712,5720]",
      "dest": "function: function [3103,3111]"
    },
    {
      "src": "[: [ [38472,38473]",
      "dest": "[: [ [25407,25408]"
    },
    {
      "src": ",: , [41911,41912]",
      "dest": ",: , [28401,28402]"
    },
    {
      "src": "type_name [26635,26639]",
      "dest": "type_name [48767,48771]"
    },
    {
      "src": "parameter [15492,15496]",
      "dest": "parameter [12845,12849]"
    },
    {
      "src": "identifier: liquidator [44162,44172]",
      "dest": "identifier: liquidator [30652,30662]"
    },
    {
      "src": "type_name [50575,50590]",
      "dest": "type_name [34338,34353]"
    },
    {
      "src": "}: } [64701,64702]",
      "dest": "}: } [49575,49576]"
    },
    {
      "src": "!=: != [55603,55605]",
      "dest": "!=: != [39366,39368]"
    },
    {
      "src": "return_statement [9191,9211]",
      "dest": "return_statement [6156,6176]"
    },
    {
      "src": ",: , [12530,12531]",
      "dest": ",: , [10539,10540]"
    },
    {
      "src": "identifier: Error [44922,44927]",
      "dest": "identifier: Error [31412,31417]"
    },
    {
      "src": "}: } [51740,51741]",
      "dest": "}: } [35503,35504]"
    },
    {
      "src": "call_argument [43361,43365]",
      "dest": "call_argument [29851,29855]"
    },
    {
      "src": "primitive_type [11552,11556]",
      "dest": "primitive_type [9840,9844]"
    },
    {
      "src": "(: ( [53429,53430]",
      "dest": "(: ( [37192,37193]"
    },
    {
      "src": "block_statement [15771,15823]",
      "dest": "block_statement [13124,13176]"
    },
    {
      "src": "call_argument [32827,32861]",
      "dest": "call_argument [20057,20091]"
    },
    {
      "src": "}: } [60749,60750]",
      "dest": "}: } [44220,44221]"
    },
    {
      "src": "identifier: src [6548,6551]",
      "dest": "identifier: src [3939,3942]"
    },
    {
      "src": "uint: uint [44739,44743]",
      "dest": "uint: uint [31229,31233]"
    },
    {
      "src": "variable_declaration_statement [55554,55584]",
      "dest": "variable_declaration_statement [39317,39347]"
    },
    {
      "src": "identifier: Error [51665,51670]",
      "dest": "identifier: Error [35428,35433]"
    },
    {
      "src": "call_argument [44947,44994]",
      "dest": "call_argument [31437,31484]"
    },
    {
      "src": "return_type_definition [31418,31432]",
      "dest": "return_type_definition [18356,18370]"
    },
    {
      "src": "): ) [54732,54733]",
      "dest": "): ) [38495,38496]"
    },
    {
      "src": "binary_expression [1674,1701]",
      "dest": "binary_expression [1674,1701]"
    },
    {
      "src": "comment: /* Fail if borrower = liquidator */ [44102,44137]",
      "dest": "comment: /* Fail if borrower = liquidator */ [30592,30627]"
    },
    {
      "src": "uint: uint [5387,5391]",
      "dest": "uint: uint [2778,2782]"
    },
    {
      "src": ".: . [5888,5889]",
      "dest": ".: . [3279,3280]"
    },
    {
      "src": "=: = [7703,7704]",
      "dest": "=: = [5094,5095]"
    },
    {
      "src": "type_name [6953,6960]",
      "dest": "type_name [4344,4351]"
    },
    {
      "src": "uint: uint [48136,48140]",
      "dest": "uint: uint [49260,49264]"
    },
    {
      "src": "external: external [6970,6978]",
      "dest": "external: external [4361,4369]"
    },
    {
      "src": "parameter [20863,20877]",
      "dest": "parameter [48484,48498]"
    },
    {
      "src": "}: } [55211,55212]",
      "dest": "}: } [38974,38975]"
    },
    {
      "src": "block_statement [38965,39028]",
      "dest": "block_statement [25685,25748]"
    },
    {
      "src": "user_defined_type [33109,33124]",
      "dest": "user_defined_type [20339,20354]"
    },
    {
      "src": "modifier_invocation [5785,5797]",
      "dest": "modifier_invocation [3176,3188]"
    },
    {
      "src": "identifier: Error [59741,59746]",
      "dest": "identifier: Error [43387,43392]"
    },
    {
      "src": "(: ( [9149,9150]",
      "dest": "(: ( [6114,6115]"
    },
    {
      "src": "modifier_invocation [55516,55528]",
      "dest": "modifier_invocation [39279,39291]"
    },
    {
      "src": ",: , [43393,43394]",
      "dest": ",: , [29883,29884]"
    },
    {
      "src": "tuple_expression [19919,19983]",
      "dest": "tuple_expression [16033,16097]"
    },
    {
      "src": "returns: returns [54335,54342]",
      "dest": "returns: returns [38098,38105]"
    },
    {
      "src": "primitive_type [43353,43360]",
      "dest": "primitive_type [29843,29850]"
    },
    {
      "src": ".: . [19768,19769]",
      "dest": ".: . [15882,15883]"
    },
    {
      "src": "return_statement [43991,44082]",
      "dest": "return_statement [30481,30572]"
    },
    {
      "src": "assignment_expression [33942,34016]",
      "dest": "assignment_expression [20752,20807]"
    },
    {
      "src": ".: . [19950,19951]",
      "dest": ".: . [16064,16065]"
    },
    {
      "src": ",: , [8928,8929]",
      "dest": ",: , [5893,5894]"
    },
    {
      "src": "return: return [59729,59735]",
      "dest": "return: return [43375,43381]"
    },
    {
      "src": "uint8: uint8 [1163,1168]",
      "dest": "uint8: uint8 [1163,1168]"
    },
    {
      "src": "comment: /* We emit a RepayBorrow event */ [40631,40664]",
      "dest": "comment: /* We emit a RepayBorrow event */ [27091,27124]"
    },
    {
      "src": "identifier: TOKEN_INSUFFICIENT_CASH [59747,59770]",
      "dest": "identifier: TOKEN_INSUFFICIENT_CASH [43393,43416]"
    },
    {
      "src": "return_statement [14097,14154]",
      "dest": "return_statement [11822,11857]"
    },
    {
      "src": "(: ( [38674,38675]",
      "dest": "(: ( [24866,24867]"
    },
    {
      "src": "if_statement [19745,19994]",
      "dest": "if_statement [15859,16108]"
    },
    {
      "src": "{: { [1187,1188]",
      "dest": "{: { [1187,1188]"
    },
    {
      "src": "string [64578,64590]",
      "dest": "string [49452,49464]"
    },
    {
      "src": "identifier: cTokenCollateral [45325,45341]",
      "dest": "identifier: cTokenCollateral [31815,31831]"
    },
    {
      "src": "}: } [10731,10732]",
      "dest": "}: } [9194,9195]"
    },
    {
      "src": "): ) [12560,12561]",
      "dest": "): ) [10569,10570]"
    },
    {
      "src": "return_statement [9456,9540]",
      "dest": "return_statement [6421,6505]"
    },
    {
      "src": "member_expression [34946,34966]",
      "dest": "member_expression [21551,21571]"
    },
    {
      "src": "member_expression [59977,60015]",
      "dest": "member_expression [43623,43661]"
    },
    {
      "src": "): ) [36792,36793]",
      "dest": "): ) [23427,23428]"
    },
    {
      "src": "identifier: FailureInfo [44229,44240]",
      "dest": "identifier: FailureInfo [30719,30730]"
    },
    {
      "src": "user_defined_type [31908,31917]",
      "dest": "user_defined_type [18846,18855]"
    },
    {
      "src": "primitive_type [37754,37758]",
      "dest": "primitive_type [24389,24393]"
    },
    {
      "src": "block_statement [59715,59830]",
      "dest": "block_statement [43361,43476]"
    },
    {
      "src": "call_struct_argument [17265,17293]",
      "dest": "call_struct_argument [14340,14368]"
    },
    {
      "src": "identifier: RepayBorrowLocalVars [36987,37007]",
      "dest": "identifier: RepayBorrowLocalVars [23622,23642]"
    },
    {
      "src": "): ) [53579,53580]",
      "dest": "): ) [37342,37343]"
    },
    {
      "src": "identifier: accrueInterest [58318,58332]",
      "dest": "identifier: accrueInterest [41964,41978]"
    },
    {
      "src": "identifier: borrowIndexNew [18942,18956]",
      "dest": "identifier: borrowIndexNew [15056,15070]"
    },
    {
      "src": "identifier: msg [1205,1208]",
      "dest": "identifier: msg [1205,1208]"
    },
    {
      "src": "function: function [52389,52397]",
      "dest": "function: function [36152,36160]"
    },
    {
      "src": "variable_declaration [6449,6460]",
      "dest": "variable_declaration [3840,3851]"
    },
    {
      "src": "identifier: fail [44381,44385]",
      "dest": "identifier: fail [30871,30875]"
    },
    {
      "src": "identifier: accrueInterest [10613,10627]",
      "dest": "identifier: accrueInterest [9076,9090]"
    },
    {
      "src": "(: ( [54443,54444]",
      "dest": "(: ( [38206,38207]"
    },
    {
      "src": "): ) [9150,9151]",
      "dest": "): ) [6115,6116]"
    },
    {
      "src": "=: = [63089,63090]",
      "dest": "=: = [46560,46561]"
    },
    {
      "src": "identifier: borrowRateMantissa [16232,16250]",
      "dest": "identifier: borrowRateMantissa [13585,13603]"
    },
    {
      "src": "parameter [26656,26675]",
      "dest": "parameter [48788,48807]"
    },
    {
      "src": "identifier: err [2011,2014]",
      "dest": "identifier: err [2011,2014]"
    },
    {
      "src": "(: ( [45216,45217]",
      "dest": "(: ( [31706,31707]"
    },
    {
      "src": "call_argument [58548,58553]",
      "dest": "call_argument [42194,42199]"
    },
    {
      "src": "}: } [10226,10227]",
      "dest": "}: } [8689,8690]"
    },
    {
      "src": "): ) [40775,40776]",
      "dest": "): ) [27235,27236]"
    },
    {
      "src": "(: ( [12934,12935]",
      "dest": "(: ( [10832,10833]"
    },
    {
      "src": ",: , [52811,52812]",
      "dest": ",: , [36574,36575]"
    },
    {
      "src": "): ) [18497,18498]",
      "dest": "): ) [14795,14796]"
    },
    {
      "src": "return: return [51146,51152]",
      "dest": "return: return [34909,34915]"
    },
    {
      "src": ",: , [6951,6952]",
      "dest": ",: , [4342,4343]"
    },
    {
      "src": "identifier: BorrowLocalVars [33109,33124]",
      "dest": "identifier: BorrowLocalVars [20339,20354]"
    },
    {
      "src": "type_name [31935,31939]",
      "dest": "type_name [18873,18877]"
    },
    {
      "src": "member_expression [57927,57941]",
      "dest": "member_expression [41573,41587]"
    },
    {
      "src": "(: ( [19114,19115]",
      "dest": "(: ( [15228,15229]"
    },
    {
      "src": "identifier: NO_ERROR [10644,10652]",
      "dest": "identifier: NO_ERROR [9107,9115]"
    },
    {
      "src": "): ) [42490,42491]",
      "dest": "): ) [28980,28981]"
    },
    {
      "src": "string [33,61]",
      "dest": "string [33,61]"
    },
    {
      "src": "assignment_expression [19006,19038]",
      "dest": "assignment_expression [15120,15152]"
    },
    {
      "src": "identifier: addUInt [33981,33988]",
      "dest": "identifier: add_ [20775,20779]"
    },
    {
      "src": "call_expression [53521,53537]",
      "dest": "call_expression [37284,37300]"
    },
    {
      "src": "identifier: accrueInterest [12935,12949]",
      "dest": "identifier: accrueInterest [10833,10847]"
    },
    {
      "src": ".: . [39653,39654]",
      "dest": ".: . [26373,26374]"
    },
    {
      "src": "identifier: Error [36569,36574]",
      "dest": "identifier: Error [23204,23209]"
    },
    {
      "src": "variable_declaration [24389,24399]",
      "dest": "variable_declaration [16700,16710]"
    },
    {
      "src": "==: == [5384,5386]",
      "dest": "==: == [2775,2777]"
    },
    {
      "src": "address: address [2875,2882]",
      "dest": "address: address [48079,48086]"
    },
    {
      "src": ".: . [25533,25534]",
      "dest": ".: . [17844,17845]"
    },
    {
      "src": "comment: /*** Safe Token ***/ [63335,63355]",
      "dest": "comment: /*** Safe Token ***/ [46806,46826]"
    },
    {
      "src": "import: import [227,233]",
      "dest": "import: import [227,233]"
    },
    {
      "src": "string_literal [62966,62996]",
      "dest": "string_literal [46437,46467]"
    },
    {
      "src": "(: ( [5346,5347]",
      "dest": "(: ( [2737,2738]"
    },
    {
      "src": "identifier: msg [5359,5362]",
      "dest": "identifier: msg [2750,2753]"
    },
    {
      "src": "return: return [58530,58536]",
      "dest": "return: return [42176,42182]"
    },
    {
      "src": ",: , [52111,52112]",
      "dest": ",: , [35874,35875]"
    },
    {
      "src": "call_argument [24783,24793]",
      "dest": "call_argument [17094,17104]"
    },
    {
      "src": "): ) [24460,24461]",
      "dest": "): ) [16771,16772]"
    },
    {
      "src": "}: } [46047,46048]",
      "dest": "}: } [32537,32538]"
    },
    {
      "src": "if: if [62561,62563]",
      "dest": "if: if [46032,46034]"
    },
    {
      "src": "visibility [63605,63613]",
      "dest": "visibility [47076,47084]"
    },
    {
      "src": "primitive_type [37209,37213]",
      "dest": "primitive_type [23844,23848]"
    },
    {
      "src": "uint: uint [25224,25228]",
      "dest": "uint: uint [17535,17539]"
    },
    {
      "src": "): ) [35587,35588]",
      "dest": "): ) [22222,22223]"
    },
    {
      "src": "primitive_type [37700,37707]",
      "dest": "primitive_type [24335,24342]"
    },
    {
      "src": "(: ( [36554,36555]",
      "dest": "(: ( [23189,23190]"
    },
    {
      "src": "identifier: totalReserves [19006,19019]",
      "dest": "identifier: totalReserves [15120,15133]"
    },
    {
      "src": "}: } [24817,24818]",
      "dest": "}: } [17128,17129]"
    },
    {
      "src": "member_expression [46170,46184]",
      "dest": "member_expression [32660,32674]"
    },
    {
      "src": "): ) [43428,43429]",
      "dest": "): ) [29918,29919]"
    },
    {
      "src": ".: . [42442,42443]",
      "dest": ".: . [28932,28933]"
    },
    {
      "src": "): ) [57941,57942]",
      "dest": "): ) [41587,41588]"
    },
    {
      "src": "identifier: cashPrior [16175,16184]",
      "dest": "identifier: cashPrior [13528,13537]"
    },
    {
      "src": "identifier: totalBorrows [40231,40243]",
      "dest": "identifier: totalBorrows [26797,26809]"
    },
    {
      "src": "expression_statement [50974,51005]",
      "dest": "expression_statement [34737,34768]"
    },
    {
      "src": "struct_member [37179,37200]",
      "dest": "struct_member [23814,23835]"
    },
    {
      "src": ".: . [57400,57401]",
      "dest": ".: . [41163,41164]"
    },
    {
      "src": "comment: // accrueInterest emits logs on errors, but we still want to log the fact that an attempted redeem failed [25378,25483]",
      "dest": "comment: // accrueInterest emits logs on errors, but we still want to log the fact that an attempted redeem failed [17689,17794]"
    },
    {
      "src": "uint: uint [59169,59173]",
      "dest": "uint: uint [42815,42819]"
    },
    {
      "src": "parameter [36423,36439]",
      "dest": "parameter [23058,23074]"
    },
    {
      "src": "function_body [43249,46613]",
      "dest": "function_body [29739,33133]"
    },
    {
      "src": "call_argument [25522,25563]",
      "dest": "call_argument [17833,17874]"
    },
    {
      "src": "primitive_type [54972,54976]",
      "dest": "primitive_type [38735,38739]"
    },
    {
      "src": "(: ( [35823,35824]",
      "dest": "(: ( [22458,22459]"
    },
    {
      "src": "(: ( [41898,41899]",
      "dest": "(: ( [28388,28389]"
    },
    {
      "src": "if_statement [36551,36808]",
      "dest": "if_statement [23186,23443]"
    },
    {
      "src": "(: ( [44380,44381]",
      "dest": "(: ( [30870,30871]"
    },
    {
      "src": "identifier: FailureInfo [59977,59988]",
      "dest": "identifier: FailureInfo [43623,43634]"
    },
    {
      "src": "]: ] [38481,38482]",
      "dest": "]: ] [25416,25417]"
    },
    {
      "src": "member_expression [34800,34834]",
      "dest": "member_expression [21405,21439]"
    },
    {
      "src": "(: ( [26694,26695]",
      "dest": "(: ( [48826,48827]"
    },
    {
      "src": "member_expression [51158,51172]",
      "dest": "member_expression [34921,34935]"
    },
    {
      "src": ",: , [57407,57408]",
      "dest": ",: , [41170,41171]"
    },
    {
      "src": "call_expression [2073,2147]",
      "dest": "call_expression [2073,2147]"
    },
    {
      "src": "!=: != [37934,37936]",
      "dest": "!=: != [24569,24571]"
    },
    {
      "src": "identifier: Error [1686,1691]",
      "dest": "identifier: Error [1686,1691]"
    },
    {
      "src": "(: ( [44581,44582]",
      "dest": "(: ( [31071,31072]"
    },
    {
      "src": "identifier: oldPendingAdmin [51102,51117]",
      "dest": "identifier: oldPendingAdmin [34865,34880]"
    },
    {
      "src": "member_expression [35832,35879]",
      "dest": "member_expression [22467,22514]"
    },
    {
      "src": "comment: // liquidateBorrowFresh emits borrow-specific logs on errors, so we don't need to [42321,42402]",
      "dest": "comment: // liquidateBorrowFresh emits borrow-specific logs on errors, so we don't need to [28811,28892]"
    },
    {
      "src": "): ) [15811,15812]",
      "dest": "): ) [13164,13165]"
    },
    {
      "src": "binary_expression [62565,62603]",
      "dest": "binary_expression [46036,46074]"
    },
    {
      "src": "identifier: borrower [40538,40546]",
      "dest": "identifier: borrower [26998,27006]"
    },
    {
      "src": "=: = [37835,37836]",
      "dest": "=: = [24470,24471]"
    },
    {
      "src": "identifier: amount [6562,6568]",
      "dest": "identifier: amount [3953,3959]"
    },
    {
      "src": "identifier: fail [62380,62384]",
      "dest": "identifier: fail [45851,45855]"
    },
    {
      "src": "uint: uint [32423,32427]",
      "dest": "uint: uint [19361,19365]"
    },
    {
      "src": "returns: returns [59104,59111]",
      "dest": "returns: returns [42750,42757]"
    },
    {
      "src": "(: ( [43442,43443]",
      "dest": "(: ( [29932,29933]"
    },
    {
      "src": "type_name [43129,43136]",
      "dest": "type_name [29619,29626]"
    },
    {
      "src": "): ) [46184,46185]",
      "dest": "): ) [32674,32675]"
    },
    {
      "src": "): ) [24810,24811]",
      "dest": "): ) [17121,17122]"
    },
    {
      "src": "\": \" [62995,62996]",
      "dest": "\": \" [46466,46467]"
    },
    {
      "src": "identifier: NewMarketInterestRateModel [63214,63240]",
      "dest": "identifier: NewMarketInterestRateModel [46685,46711]"
    },
    {
      "src": "]: ] [40477,40478]",
      "dest": "]: ] [26937,26938]"
    },
    {
      "src": "primitive_type [37760,37764]",
      "dest": "primitive_type [24395,24399]"
    },
    {
      "src": ".: . [59316,59317]",
      "dest": ".: . [42962,42963]"
    },
    {
      "src": "return_statement [13526,13540]",
      "dest": "return_statement [10580,10594]"
    },
    {
      "src": "{: { [5813,5814]",
      "dest": "{: { [3204,3205]"
    },
    {
      "src": "parameter [47178,47196]",
      "dest": "parameter [33698,33716]"
    },
    {
      "src": "): ) [10067,10068]",
      "dest": "): ) [8530,8531]"
    },
    {
      "src": "function: function [50549,50557]",
      "dest": "function: function [34312,34320]"
    },
    {
      "src": "primitive_type [6433,6437]",
      "dest": "primitive_type [3824,3828]"
    },
    {
      "src": "type_name [31964,31968]",
      "dest": "type_name [18902,18906]"
    },
    {
      "src": "identifier: Error [60728,60733]",
      "dest": "identifier: Error [44199,44204]"
    },
    {
      "src": "identifier: repayBorrowError [44853,44869]",
      "dest": "identifier: repayBorrowError [31343,31359]"
    },
    {
      "src": "(: ( [20913,20914]",
      "dest": "(: ( [48534,48535]"
    },
    {
      "src": "identifier: transferTokens [5830,5844]",
      "dest": "identifier: transferTokens [3221,3235]"
    },
    {
      "src": "): ) [36055,36056]",
      "dest": "): ) [22690,22691]"
    },
    {
      "src": "identifier: dst [5371,5374]",
      "dest": "identifier: dst [2762,2765]"
    },
    {
      "src": "member_expression [38225,38247]",
      "dest": "member_expression [25160,25182]"
    },
    {
      "src": "parameter [43167,43183]",
      "dest": "parameter [29657,29673]"
    },
    {
      "src": "call_expression [44582,44672]",
      "dest": "call_expression [31072,31162]"
    },
    {
      "src": "primitive_type [36512,36516]",
      "dest": "primitive_type [23147,23151]"
    },
    {
      "src": "identifier: admin [60667,60672]",
      "dest": "identifier: admin [44138,44143]"
    },
    {
      "src": "binary_expression [44341,44357]",
      "dest": "binary_expression [30831,30847]"
    },
    {
      "src": "comment: // repayBorrowFresh emits repay-borrow-specific logs on errors, so we don't need to [35904,35987]",
      "dest": "comment: // repayBorrowFresh emits repay-borrow-specific logs on errors, so we don't need to [22539,22622]"
    },
    {
      "src": "binary_expression [12030,12059]",
      "dest": "binary_expression [10168,10197]"
    },
    {
      "src": "): ) [7742,7743]",
      "dest": "): ) [5133,5134]"
    },
    {
      "src": "parameter [6953,6968]",
      "dest": "parameter [4344,4359]"
    },
    {
      "src": "identifier: getBlockNumber [56674,56688]",
      "dest": "identifier: getBlockNumber [40437,40451]"
    },
    {
      "src": "identifier: error [25514,25519]",
      "dest": "identifier: error [17825,17830]"
    },
    {
      "src": "!=: != [59249,59251]",
      "dest": "!=: != [42895,42897]"
    },
    {
      "src": "identifier: Error [51158,51163]",
      "dest": "identifier: Error [34921,34926]"
    },
    {
      "src": "comment: /**      * @dev Prevents a contract from calling itself, directly or indirectly.      */ [64430,64518]",
      "dest": "comment: /**      * @dev Prevents a contract from calling itself, directly or indirectly.      */ [49304,49392]"
    },
    {
      "src": "identifier: mintInternal [19623,19635]",
      "dest": "identifier: mintInternal [15737,15749]"
    },
    {
      "src": "): ) [64590,64591]",
      "dest": "): ) [49464,49465]"
    },
    {
      "src": "): ) [40969,40970]",
      "dest": "): ) [27459,27460]"
    },
    {
      "src": "call_argument [43739,43761]",
      "dest": "call_argument [30229,30251]"
    },
    {
      "src": "primitive_type [50868,50875]",
      "dest": "primitive_type [34631,34638]"
    },
    {
      "src": "expression_statement [38979,39018]",
      "dest": "expression_statement [25699,25738]"
    },
    {
      "src": "uint: uint [37760,37764]",
      "dest": "uint: uint [24395,24399]"
    },
    {
      "src": "identifier: mathErr [37047,37054]",
      "dest": "identifier: mathErr [23682,23689]"
    },
    {
      "src": "identifier: transferAllowances [6483,6501]",
      "dest": "identifier: transferAllowances [3874,3892]"
    },
    {
      "src": ".: . [55195,55196]",
      "dest": ".: . [38958,38959]"
    },
    {
      "src": "primitive_type [1116,1122]",
      "dest": "primitive_type [1116,1122]"
    },
    {
      "src": "tuple_expression [38219,38294]",
      "dest": "tuple_expression [25154,25229]"
    },
    {
      "src": "return: return [42213,42219]",
      "dest": "return: return [28703,28709]"
    },
    {
      "src": "(: ( [32961,32962]",
      "dest": "(: ( [20191,20192]"
    },
    {
      "src": "identifier: error [55797,55802]",
      "dest": "identifier: error [39560,39565]"
    },
    {
      "src": "(: ( [59740,59741]",
      "dest": "(: ( [43386,43387]"
    },
    {
      "src": "member_expression [38458,38496]",
      "dest": "member_expression [25393,25431]"
    },
    {
      "src": "identifier: error [36555,36560]",
      "dest": "identifier: error [23190,23195]"
    },
    {
      "src": "(: ( [32974,32975]",
      "dest": "(: ( [20204,20205]"
    },
    {
      "src": "state_mutability [9161,9165]",
      "dest": "state_mutability [6126,6130]"
    },
    {
      "src": "type_name [6399,6406]",
      "dest": "type_name [3790,3797]"
    },
    {
      "src": "call_expression [33981,34016]",
      "dest": "call_expression [20775,20807]"
    },
    {
      "src": "): ) [41620,41621]",
      "dest": "): ) [28110,28111]"
    },
    {
      "src": "(: ( [44927,44928]",
      "dest": "(: ( [31417,31418]"
    },
    {
      "src": "{: { [32777,32778]",
      "dest": "{: { [20007,20008]"
    },
    {
      "src": "uint: uint [12955,12959]",
      "dest": "uint: uint [10853,10857]"
    },
    {
      "src": "identifier: addUInt [17823,17830]",
      "dest": "identifier: add_ [14507,14511]"
    },
    {
      "src": "call_argument [20123,20133]",
      "dest": "call_argument [16237,16247]"
    },
    {
      "src": "!=: != [59476,59478]",
      "dest": "!=: != [43122,43124]"
    },
    {
      "src": "(: ( [51492,51493]",
      "dest": "(: ( [35255,35256]"
    },
    {
      "src": "member_expression [47302,47312]",
      "dest": "member_expression [33822,33832]"
    },
    {
      "src": "identifier: Error [57927,57932]",
      "dest": "identifier: Error [41573,41578]"
    },
    {
      "src": "): ) [46353,46354]",
      "dest": "): ) [32843,32844]"
    },
    {
      "src": "expression_statement [34683,34721]",
      "dest": "expression_statement [21288,21326]"
    },
    {
      "src": "returns: returns [7654,7661]",
      "dest": "returns: returns [5045,5052]"
    },
    {
      "src": "call_argument [46170,46184]",
      "dest": "call_argument [32660,32674]"
    },
    {
      "src": "parameter [6433,6437]",
      "dest": "parameter [3824,3828]"
    },
    {
      "src": "type_name [47216,47220]",
      "dest": "type_name [33736,33740]"
    },
    {
      "src": "tuple_expression [46565,46606]",
      "dest": "tuple_expression [33085,33126]"
    },
    {
      "src": "uint: uint [9175,9179]",
      "dest": "uint: uint [6140,6144]"
    },
    {
      "src": "identifier: _reduceReserves [58223,58238]",
      "dest": "identifier: _reduceReserves [41869,41884]"
    },
    {
      "src": "binary_expression [1283,1326]",
      "dest": "binary_expression [1283,1326]"
    },
    {
      "src": ",: , [40753,40754]",
      "dest": ",: , [27213,27214]"
    },
    {
      "src": "function: function [37659,37667]",
      "dest": "function: function [24294,24302]"
    },
    {
      "src": "call_argument [31500,31514]",
      "dest": "call_argument [18438,18452]"
    },
    {
      "src": "identifier: msg [24783,24786]",
      "dest": "identifier: msg [17094,17097]"
    },
    {
      "src": "identifier: repayAmount [36955,36966]",
      "dest": "identifier: repayAmount [23590,23601]"
    },
    {
      "src": "call_expression [32551,32641]",
      "dest": "call_expression [19489,19579]"
    },
    {
      "src": "{: { [39034,39035]",
      "dest": "{: { [25754,25755]"
    },
    {
      "src": "(: ( [52048,52049]",
      "dest": "(: ( [35811,35812]"
    },
    {
      "src": "call_argument [46288,46298]",
      "dest": "call_argument [32778,32788]"
    },
    {
      "src": "(: ( [23904,23905]",
      "dest": "(: ( [24972,24973]"
    },
    {
      "src": "primitive_type [61214,61218]",
      "dest": "primitive_type [44685,44689]"
    },
    {
      "src": "identifier: reduceAmount [59701,59713]",
      "dest": "identifier: reduceAmount [43347,43359]"
    },
    {
      "src": "call_argument [40697,40705]",
      "dest": "call_argument [27157,27165]"
    },
    {
      "src": ".: . [8903,8904]",
      "dest": ".: . [5868,5869]"
    },
    {
      "src": "identifier: seizerToken [48049,48060]",
      "dest": "identifier: seizerToken [49173,49184]"
    },
    {
      "src": "assignment_expression [2344,2362]",
      "dest": "assignment_expression [2344,2362]"
    },
    {
      "src": "number_literal: 0 [12058,12059]",
      "dest": "number_literal: 0 [10196,10197]"
    },
    {
      "src": "identifier: vars [34837,34841]",
      "dest": "identifier: vars [21442,21446]"
    },
    {
      "src": "call_argument [2110,2146]",
      "dest": "call_argument [2110,2146]"
    },
    {
      "src": ",: , [45922,45923]",
      "dest": ",: , [32412,32413]"
    },
    {
      "src": "{: { [18120,18121]",
      "dest": "{: { [14610,14611]"
    },
    {
      "src": "\": \" [33,34]",
      "dest": "\": \" [33,34]"
    },
    {
      "src": "=: = [24400,24401]",
      "dest": "=: = [16711,16712]"
    },
    {
      "src": ",: , [46298,46299]",
      "dest": ",: , [32788,32789]"
    },
    {
      "src": "identifier: FailureInfo [32827,32838]",
      "dest": "identifier: FailureInfo [20057,20068]"
    },
    {
      "src": "user_defined_type [43185,43200]",
      "dest": "user_defined_type [29675,29690]"
    },
    {
      "src": "(: ( [19919,19920]",
      "dest": "(: ( [16033,16034]"
    },
    {
      "src": "call_argument [36945,36953]",
      "dest": "call_argument [23580,23588]"
    },
    {
      "src": "(: ( [37961,37962]",
      "dest": "(: ( [24596,24597]"
    },
    {
      "src": ",: , [31673,31674]",
      "dest": ",: , [18611,18612]"
    },
    {
      "src": "): ) [41968,41969]",
      "dest": "): ) [28458,28459]"
    },
    {
      "src": "return_statement [42213,42301]",
      "dest": "return_statement [28703,28791]"
    },
    {
      "src": "): ) [10724,10725]",
      "dest": "): ) [9187,9188]"
    },
    {
      "src": "uint: uint [25290,25294]",
      "dest": "uint: uint [17601,17605]"
    },
    {
      "src": "identifier: totalReservesNew [60468,60484]",
      "dest": "identifier: totalReservesNew [43939,43955]"
    },
    {
      "src": ",: , [45315,45316]",
      "dest": ",: , [31805,31806]"
    },
    {
      "src": "identifier: error [55597,55602]",
      "dest": "identifier: error [39360,39365]"
    },
    {
      "src": "identifier: borrower [32479,32487]",
      "dest": "identifier: borrower [19417,19425]"
    },
    {
      "src": "identifier: comptroller [43318,43329]",
      "dest": "identifier: comptroller [29808,29819]"
    },
    {
      "src": "primitive_type [43149,43156]",
      "dest": "primitive_type [29639,29646]"
    },
    {
      "src": "tuple_expression [36725,36797]",
      "dest": "tuple_expression [23360,23432]"
    },
    {
      "src": "identifier: comptroller [45260,45271]",
      "dest": "identifier: comptroller [31750,31761]"
    },
    {
      "src": ",: , [47312,47313]",
      "dest": ",: , [33832,33833]"
    },
    {
      "src": "visibility [50608,50616]",
      "dest": "visibility [34371,34379]"
    },
    {
      "src": "call_argument [31675,31716]",
      "dest": "call_argument [18613,18654]"
    },
    {
      "src": "uint: uint [11552,11556]",
      "dest": "uint: uint [9840,9844]"
    },
    {
      "src": "call_argument [45302,45315]",
      "dest": "call_argument [31792,31805]"
    },
    {
      "src": "if: if [54807,54809]",
      "dest": "if: if [38570,38572]"
    },
    {
      "src": "): ) [9890,9891]",
      "dest": "): ) [6855,6856]"
    },
    {
      "src": "): ) [15917,15918]",
      "dest": "): ) [13270,13271]"
    },
    {
      "src": "returns: returns [12902,12909]",
      "dest": "returns: returns [10800,10807]"
    },
    {
      "src": "comment: /*          * We calculate the new borrower and total borrow balances, failing on overflow:          *  accountBorrowsNew = accountBorrows + borrowAmount          *  totalBorrowsNew = totalBorrows + borrowAmount          */ [33147,33370]",
      "dest": "comment: /*          * We calculate the new borrower and total borrow balances, failing on overflow:          *  accountBorrowsNew = accountBorrows + borrowAmount          *  totalBorrowsNew = totalBorrows + borrowAmount          */ [20377,20600]"
    },
    {
      "src": "call_argument [1283,1326]",
      "dest": "call_argument [1283,1326]"
    },
    {
      "src": "): ) [62602,62603]",
      "dest": "): ) [46073,46074]"
    },
    {
      "src": "call_argument [32591,32631]",
      "dest": "call_argument [19529,19569]"
    },
    {
      "src": "(: ( [2092,2093]",
      "dest": "(: ( [2092,2093]"
    },
    {
      "src": "type_cast_expression [44873,44893]",
      "dest": "type_cast_expression [31363,31383]"
    },
    {
      "src": "call_argument [45620,45646]",
      "dest": "call_argument [32110,32136]"
    },
    {
      "src": "identifier: cashPrior [19115,19124]",
      "dest": "identifier: cashPrior [15229,15238]"
    },
    {
      "src": "type_name [47265,47269]",
      "dest": "type_name [33785,33789]"
    },
    {
      "src": "identifier: sender [5849,5855]",
      "dest": "identifier: sender [3240,3246]"
    },
    {
      "src": "string [12977,13001]",
      "dest": "string [10875,10899]"
    },
    {
      "src": "identifier: Error [37018,37023]",
      "dest": "identifier: Error [23653,23658]"
    },
    {
      "src": "parameter [8316,8331]",
      "dest": "parameter [5578,5593]"
    },
    {
      "src": "{: { [62158,62159]",
      "dest": "{: { [45629,45630]"
    },
    {
      "src": "function_body [37766,41002]",
      "dest": "function_body [24401,27492]"
    },
    {
      "src": "identifier: error [58548,58553]",
      "dest": "identifier: error [42194,42199]"
    },
    {
      "src": "primitive_type [6382,6389]",
      "dest": "primitive_type [3773,3780]"
    },
    {
      "src": "comment: /**      * @notice Accrue interest to updated borrowIndex and then calculate account's borrow balance using the updated borrowIndex      * @param account The address whose balance should be calculated after updating borrowIndex      * @return The calculated balance      */ [10233,10506]",
      "dest": "comment: /**      * @notice Accrue interest to updated borrowIndex and then calculate account's borrow balance using the updated borrowIndex      * @param account The address whose balance should be calculated after updating borrowIndex      * @return The calculated balance      */ [8696,8969]"
    },
    {
      "src": "identifier: error [35824,35829]",
      "dest": "identifier: error [22459,22464]"
    },
    {
      "src": "(: ( [1282,1283]",
      "dest": "(: ( [1282,1283]"
    },
    {
      "src": "function: function [41519,41527]",
      "dest": "function: function [28009,28017]"
    },
    {
      "src": "primitive_type [5747,5754]",
      "dest": "primitive_type [3138,3145]"
    },
    {
      "src": "function_definition [51451,52171]",
      "dest": "function_definition [35214,35934]"
    },
    {
      "src": "): ) [44466,44467]",
      "dest": "): ) [30956,30957]"
    },
    {
      "src": "(: ( [36568,36569]",
      "dest": "(: ( [23203,23204]"
    },
    {
      "src": ".: . [56724,56725]",
      "dest": ".: . [40487,40488]"
    },
    {
      "src": "): ) [41663,41664]",
      "dest": "): ) [28153,28154]"
    },
    {
      "src": "\": \" [2145,2146]",
      "dest": "\": \" [2145,2146]"
    },
    {
      "src": "): ) [59818,59819]",
      "dest": "): ) [43464,43465]"
    },
    {
      "src": "emit: emit [57789,57793]",
      "dest": "emit: emit [41435,41439]"
    },
    {
      "src": "expression_statement [46143,46211]",
      "dest": "expression_statement [32633,32701]"
    },
    {
      "src": "(: ( [58756,58757]",
      "dest": "(: ( [42402,42403]"
    },
    {
      "src": "identifier: borrowerIndex [37095,37108]",
      "dest": "identifier: borrowerIndex [23730,23743]"
    },
    {
      "src": "parameter [10589,10593]",
      "dest": "parameter [9052,9056]"
    },
    {
      "src": ",: , [51117,51118]",
      "dest": ",: , [34880,34881]"
    },
    {
      "src": "(: ( [6547,6548]",
      "dest": "(: ( [3938,3939]"
    },
    {
      "src": "call_argument [38249,38289]",
      "dest": "call_argument [25184,25224]"
    },
    {
      "src": "uint: uint [15970,15974]",
      "dest": "uint: uint [13323,13327]"
    },
    {
      "src": "(: ( [24782,24783]",
      "dest": "(: ( [17093,17094]"
    },
    {
      "src": ".: . [51163,51164]",
      "dest": ".: . [34926,34927]"
    },
    {
      "src": "uint: uint [32329,32333]",
      "dest": "uint: uint [19267,19271]"
    },
    {
      "src": "uint: uint [4951,4955]",
      "dest": "uint: uint [19851,19855]"
    },
    {
      "src": "return: return [35219,35225]",
      "dest": "return: return [21854,21860]"
    },
    {
      "src": "call_argument [47326,47334]",
      "dest": "call_argument [33846,33854]"
    },
    {
      "src": "external: external [47234,47242]",
      "dest": "external: external [33754,33762]"
    },
    {
      "src": "(: ( [47264,47265]",
      "dest": "(: ( [33784,33785]"
    },
    {
      "src": "return: return [35996,36002]",
      "dest": "return: return [22631,22637]"
    },
    {
      "src": "): ) [13001,13002]",
      "dest": "): ) [10899,10900]"
    },
    {
      "src": "return_statement [53940,53996]",
      "dest": "return_statement [37703,37759]"
    },
    {
      "src": "visibility [43219,43227]",
      "dest": "visibility [29709,29717]"
    },
    {
      "src": "member_expression [56719,56741]",
      "dest": "member_expression [40482,40504]"
    },
    {
      "src": "call_argument [18116,18154]",
      "dest": "call_argument [14606,14644]"
    },
    {
      "src": "payable: payable [50583,50590]",
      "dest": "payable: payable [34346,34353]"
    },
    {
      "src": ".: . [59746,59747]",
      "dest": ".: . [43392,43393]"
    },
    {
      "src": ".: . [36035,36036]",
      "dest": ".: . [22670,22671]"
    },
    {
      "src": "member_expression [34837,34859]",
      "dest": "member_expression [21442,21464]"
    },
    {
      "src": "identifier: BORROW_FRESHNESS_CHECK [32839,32861]",
      "dest": "identifier: BORROW_FRESHNESS_CHECK [20069,20091]"
    },
    {
      "src": "): ) [24377,24378]",
      "dest": "): ) [16688,16689]"
    },
    {
      "src": "variable_declaration_statement [11766,11830]",
      "dest": "variable_declaration_statement [9904,9968]"
    },
    {
      "src": "return_statement [7929,7944]",
      "dest": "return_statement [5144,5206]"
    },
    {
      "src": "comment: /* Remember the initial block number */ [15508,15547]",
      "dest": "comment: /* Remember the initial block number */ [12861,12900]"
    },
    {
      "src": "member_expression [43739,43761]",
      "dest": "member_expression [30229,30251]"
    },
    {
      "src": "=: = [55565,55566]",
      "dest": "=: = [39328,39329]"
    },
    {
      "src": "return_statement [61452,61538]",
      "dest": "return_statement [44923,45009]"
    },
    {
      "src": "return_statement [51146,51174]",
      "dest": "return_statement [34909,34937]"
    },
    {
      "src": "call_argument [52781,52811]",
      "dest": "call_argument [36544,36574]"
    },
    {
      "src": "call_expression [42226,42238]",
      "dest": "call_expression [28716,28728]"
    },
    {
      "src": "call_expression [45260,45362]",
      "dest": "call_expression [31750,31852]"
    },
    {
      "src": "identifier: NO_ERROR [8904,8912]",
      "dest": "identifier: NO_ERROR [5869,5877]"
    },
    {
      "src": "call_expression [55786,55853]",
      "dest": "call_expression [39549,39616]"
    },
    {
      "src": "identifier: NO_ERROR [35237,35245]",
      "dest": "identifier: NO_ERROR [21872,21880]"
    },
    {
      "src": "call_expression [53746,53819]",
      "dest": "call_expression [37509,37582]"
    },
    {
      "src": "call_argument [2044,2062]",
      "dest": "call_argument [2044,2062]"
    },
    {
      "src": "call_expression [45873,45936]",
      "dest": "call_expression [32363,32426]"
    },
    {
      "src": "identifier: decimals_ [2217,2226]",
      "dest": "identifier: decimals_ [2217,2226]"
    },
    {
      "src": "(: ( [46565,46566]",
      "dest": "(: ( [33085,33086]"
    },
    {
      "src": "identifier: error [58310,58315]",
      "dest": "identifier: error [41956,41961]"
    },
    {
      "src": "): ) [32476,32477]",
      "dest": "): ) [19414,19415]"
    },
    {
      "src": "): ) [15474,15475]",
      "dest": "): ) [12827,12828]"
    },
    {
      "src": "return_statement [7319,7347]",
      "dest": "return_statement [4710,4738]"
    },
    {
      "src": ",: , [40729,40730]",
      "dest": ",: , [27189,27190]"
    },
    {
      "src": "): ) [36500,36501]",
      "dest": "): ) [23135,23136]"
    },
    {
      "src": "primitive_type [2875,2882]",
      "dest": "primitive_type [48079,48086]"
    },
    {
      "src": "type_name [2845,2852]",
      "dest": "type_name [48049,48056]"
    },
    {
      "src": "identifier: borrowBalanceStoredInternal [8556,8583]",
      "dest": "identifier: borrowBalanceStoredInternal [9487,9514]"
    },
    {
      "src": "=: = [40489,40490]",
      "dest": "=: = [26949,26950]"
    },
    {
      "src": ",: , [42238,42239]",
      "dest": ",: , [28728,28729]"
    },
    {
      "src": ".: . [60733,60734]",
      "dest": ".: . [44204,44205]"
    },
    {
      "src": "(: ( [1685,1686]",
      "dest": "(: ( [1685,1686]"
    },
    {
      "src": "uint: uint [37209,37213]",
      "dest": "uint: uint [23844,23848]"
    },
    {
      "src": "): ) [40267,40268]",
      "dest": "): ) [26833,26834]"
    },
    {
      "src": "call_expression [19920,19979]",
      "dest": "call_expression [16034,16093]"
    },
    {
      "src": "return_statement [15181,15203]",
      "dest": "return_statement [12534,12556]"
    },
    {
      "src": "emit: emit [35014,35018]",
      "dest": "emit: emit [21619,21623]"
    },
    {
      "src": "returns: returns [48127,48134]",
      "dest": "returns: returns [49251,49258]"
    },
    {
      "src": "variable_declaration [16117,16140]",
      "dest": "variable_declaration [13470,13493]"
    },
    {
      "src": "primitive_type [40950,40954]",
      "dest": "primitive_type [27440,27444]"
    },
    {
      "src": "parameter [5309,5313]",
      "dest": "parameter [2700,2704]"
    },
    {
      "src": "address: address [37868,37875]",
      "dest": "address: address [24503,24510]"
    },
    {
      "src": "): ) [24340,24341]",
      "dest": "): ) [16651,16652]"
    },
    {
      "src": "(: ( [40013,40014]",
      "dest": "(: ( [26714,26715]"
    },
    {
      "src": "member_expression [52567,52585]",
      "dest": "member_expression [36330,36348]"
    },
    {
      "src": "address: address [37700,37707]",
      "dest": "address: address [24335,24342]"
    },
    {
      "src": "primitive_type [1163,1168]",
      "dest": "primitive_type [1163,1168]"
    },
    {
      "src": "if_statement [44337,44482]",
      "dest": "if_statement [30827,30972]"
    },
    {
      "src": "parameter [2845,2860]",
      "dest": "parameter [48049,48064]"
    },
    {
      "src": "): ) [32991,32992]",
      "dest": "): ) [20221,20222]"
    },
    {
      "src": "): ) [59697,59698]",
      "dest": "): ) [43343,43344]"
    },
    {
      "src": "primitive_type [20920,20924]",
      "dest": "primitive_type [48541,48545]"
    },
    {
      "src": "block_statement [43457,43587]",
      "dest": "block_statement [29947,30077]"
    },
    {
      "src": "string [62966,62996]",
      "dest": "string [46437,46467]"
    },
    {
      "src": "member_expression [39048,39064]",
      "dest": "member_expression [25768,25784]"
    },
    {
      "src": "(: ( [60666,60667]",
      "dest": "(: ( [44137,44138]"
    },
    {
      "src": "return_statement [44574,44677]",
      "dest": "return_statement [31064,31167]"
    },
    {
      "src": "visibility [52451,52457]",
      "dest": "visibility [36214,36220]"
    },
    {
      "src": "member_expression [9198,9210]",
      "dest": "member_expression [6163,6175]"
    },
    {
      "src": "): ) [63941,63942]",
      "dest": "): ) [47412,47413]"
    },
    {
      "src": "return_statement [11197,11211]",
      "dest": "return_statement [9480,9524]"
    },
    {
      "src": "primitive_type [7663,7667]",
      "dest": "primitive_type [5054,5058]"
    },
    {
      "src": "(: ( [1489,1490]",
      "dest": "(: ( [1489,1490]"
    },
    {
      "src": "(: ( [37875,37876]",
      "dest": "(: ( [24510,24511]"
    },
    {
      "src": "identifier: accountBorrowsNew [31969,31986]",
      "dest": "identifier: accountBorrowsNew [18907,18924]"
    },
    {
      "src": "): ) [50697,50698]",
      "dest": "): ) [34460,34461]"
    },
    {
      "src": "assignment_expression [64641,64659]",
      "dest": "assignment_expression [49515,49533]"
    },
    {
      "src": "return_type_definition [5300,5314]",
      "dest": "return_type_definition [2691,2705]"
    },
    {
      "src": "string [2110,2146]",
      "dest": "string [2110,2146]"
    },
    {
      "src": "!=: != [19755,19757]",
      "dest": "!=: != [15869,15871]"
    },
    {
      "src": "binary_expression [43443,43455]",
      "dest": "binary_expression [29933,29945]"
    },
    {
      "src": "(: ( [10612,10613]",
      "dest": "(: ( [9075,9076]"
    },
    {
      "src": "): ) [19178,19179]",
      "dest": "): ) [15292,15293]"
    },
    {
      "src": "member_expression [54444,54462]",
      "dest": "member_expression [38207,38225]"
    },
    {
      "src": "member_expression [44587,44623]",
      "dest": "member_expression [31077,31113]"
    },
    {
      "src": "(: ( [62093,62094]",
      "dest": "(: ( [45564,45565]"
    },
    {
      "src": "identifier: _setInterestRateModelFresh [2017,2043]",
      "dest": "identifier: _setInterestRateModelFresh [2017,2043]"
    },
    {
      "src": "(: ( [44003,44004]",
      "dest": "(: ( [30493,30494]"
    },
    {
      "src": "identifier: require [10605,10612]",
      "dest": "identifier: require [9068,9075]"
    },
    {
      "src": "identifier: totalReserves [57676,57689]",
      "dest": "identifier: totalReserves [41322,41335]"
    },
    {
      "src": "type_cast_expression [37868,37881]",
      "dest": "type_cast_expression [24503,24516]"
    },
    {
      "src": "identifier: seizeInternal [47288,47301]",
      "dest": "identifier: seizeInternal [33808,33821]"
    },
    {
      "src": "comment: // Set the interest rate model to newInterestRateModel [63008,63062]",
      "dest": "comment: // Set the interest rate model to newInterestRateModel [46479,46533]"
    },
    {
      "src": "call_argument [43490,43517]",
      "dest": "call_argument [29980,30007]"
    },
    {
      "src": "comment: /**       * @notice Sender borrows assets from the protocol to their own address       * @param borrowAmount The amount of the underlying asset to borrow       * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)       */ [31098,31348]",
      "dest": "comment: /**       * @notice Sender borrows assets from the protocol to their own address       * @param borrowAmount The amount of the underlying asset to borrow       * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)       */ [18036,18286]"
    },
    {
      "src": "member_expression [19763,19777]",
      "dest": "member_expression [15877,15891]"
    },
    {
      "src": "array_access [34869,34893]",
      "dest": "array_access [21474,21498]"
    },
    {
      "src": "): ) [33453,33454]",
      "dest": "): ) [25579,25580]"
    },
    {
      "src": "call_argument [54907,54950]",
      "dest": "call_argument [38670,38713]"
    },
    {
      "src": "call_expression [1869,1885]",
      "dest": "call_expression [1869,1885]"
    },
    {
      "src": "}: } [45946,45947]",
      "dest": "}: } [32436,32437]"
    },
    {
      "src": ",: , [31847,31848]",
      "dest": ",: , [18785,18786]"
    },
    {
      "src": "}: } [62463,62464]",
      "dest": "}: } [45934,45935]"
    },
    {
      "src": "(: ( [15491,15492]",
      "dest": "(: ( [12844,12845]"
    },
    {
      "src": "primitive_type [43237,43241]",
      "dest": "primitive_type [29727,29731]"
    },
    {
      "src": "return_statement [14892,14943]",
      "dest": "return_statement [12276,12296]"
    },
    {
      "src": "comment: /* We calculate the number of collateral tokens that will be seized */ [45137,45207]",
      "dest": "comment: /* We calculate the number of collateral tokens that will be seized */ [31627,31697]"
    },
    {
      "src": "identifier: owner [7038,7043]",
      "dest": "identifier: owner [4429,4434]"
    },
    {
      "src": "identifier: repayBorrowError [44928,44944]",
      "dest": "identifier: repayBorrowError [31418,31434]"
    },
    {
      "src": "identifier: doTransferIn [63879,63891]",
      "dest": "identifier: doTransferIn [47350,47362]"
    },
    {
      "src": "call_expression [58736,58770]",
      "dest": "call_expression [42382,42416]"
    },
    {
      "src": "type_name [59076,59080]",
      "dest": "type_name [42722,42726]"
    },
    {
      "src": ".: . [40960,40961]",
      "dest": ".: . [27450,27451]"
    },
    {
      "src": "string_literal [1226,1264]",
      "dest": "string_literal [1226,1264]"
    },
    {
      "src": "identifier: newPendingAdmin [50591,50606]",
      "dest": "identifier: newPendingAdmin [34354,34369]"
    },
    {
      "src": "(: ( [890,891]",
      "dest": "(: ( [890,891]"
    },
    {
      "src": "block_statement [35673,35895]",
      "dest": "block_statement [22308,22530]"
    },
    {
      "src": "identifier: InterestRateModel [62252,62269]",
      "dest": "identifier: InterestRateModel [45723,45740]"
    },
    {
      "src": "[: [ [34883,34884]",
      "dest": "[: [ [21488,21489]"
    },
    {
      "src": "member_expression [61271,61285]",
      "dest": "member_expression [44742,44756]"
    },
    {
      "src": "public: public [1180,1186]",
      "dest": "public: public [1180,1186]"
    },
    {
      "src": ".: . [44206,44207]",
      "dest": ".: . [30696,30697]"
    },
    {
      "src": ",: , [8360,8361]",
      "dest": ",: , [5622,5623]"
    },
    {
      "src": "comment: /* We emit a Borrow event */ [34977,35005]",
      "dest": "comment: /* We emit a Borrow event */ [21582,21610]"
    },
    {
      "src": "type_name [25290,25294]",
      "dest": "type_name [17601,17605]"
    },
    {
      "src": "block_statement [12061,12116]",
      "dest": "block_statement [10199,10232]"
    },
    {
      "src": "variable_declaration_statement [11662,11687]",
      "dest": "variable_declaration_statement [10421,10492]"
    },
    {
      "src": "parameter [1012,1045]",
      "dest": "parameter [1012,1045]"
    },
    {
      "src": "primitive_type [58239,58243]",
      "dest": "primitive_type [41885,41889]"
    },
    {
      "src": "(: ( [57921,57922]",
      "dest": "(: ( [41567,41568]"
    },
    {
      "src": "variable_declaration [41675,41685]",
      "dest": "variable_declaration [28165,28175]"
    },
    {
      "src": "expression_statement [52773,52845]",
      "dest": "expression_statement [36536,36608]"
    },
    {
      "src": ",: , [46327,46328]",
      "dest": ",: , [32817,32818]"
    },
    {
      "src": "member_expression [44878,44892]",
      "dest": "member_expression [31368,31382]"
    },
    {
      "src": "identifier: exchangeRateStoredInternal [13387,13413]",
      "dest": "identifier: exchangeRateStoredInternal [5811,5837]"
    },
    {
      "src": "return_statement [13012,13040]",
      "dest": "return_statement [10910,10938]"
    },
    {
      "src": "): ) [62357,62358]",
      "dest": "): ) [45828,45829]"
    },
    {
      "src": "identifier: seizeTokens [45924,45935]",
      "dest": "identifier: seizeTokens [32414,32425]"
    },
    {
      "src": "variable_declaration_statement [45773,45789]",
      "dest": "variable_declaration_statement [32263,32279]"
    },
    {
      "src": "identifier: error [56029,56034]",
      "dest": "identifier: error [39792,39797]"
    },
    {
      "src": "string_literal [64578,64590]",
      "dest": "string_literal [49452,49464]"
    },
    {
      "src": "call_expression [36726,36793]",
      "dest": "call_expression [23361,23428]"
    },
    {
      "src": "identifier: INVALID_CLOSE_AMOUNT_REQUESTED [44593,44623]",
      "dest": "identifier: INVALID_CLOSE_AMOUNT_REQUESTED [31083,31113]"
    },
    {
      "src": "uint: uint [43243,43247]",
      "dest": "uint: uint [29733,29737]"
    },
    {
      "src": "identifier: msg [50678,50681]",
      "dest": "identifier: msg [34441,34444]"
    },
    {
      "src": "parameter [37685,37698]",
      "dest": "parameter [24320,24333]"
    },
    {
      "src": ".: . [10643,10644]",
      "dest": ".: . [9106,9107]"
    },
    {
      "src": "(: ( [17259,17260]",
      "dest": "(: ( [14334,14335]"
    },
    {
      "src": "variable_declaration [17125,17145]",
      "dest": "variable_declaration [14484,14504]"
    },
    {
      "src": ".: . [42014,42015]",
      "dest": ".: . [28504,28505]"
    },
    {
      "src": "variable_declaration_statement [24389,24419]",
      "dest": "variable_declaration_statement [16700,16730]"
    },
    {
      "src": "call_argument [17560,17580]",
      "dest": "call_argument [14439,14459]"
    },
    {
      "src": "identifier: NO_ERROR [46176,46184]",
      "dest": "identifier: NO_ERROR [32666,32674]"
    },
    {
      "src": "identifier: reduceAmount [59081,59093]",
      "dest": "identifier: reduceAmount [42727,42739]"
    },
    {
      "src": "member_expression [25684,25694]",
      "dest": "member_expression [17995,18005]"
    },
    {
      "src": "variable_declaration [16415,16430]",
      "dest": "variable_declaration [13748,13763]"
    },
    {
      "src": "identifier: exchangeRateStored [13019,13037]",
      "dest": "identifier: exchangeRateStored [10917,10935]"
    },
    {
      "src": "return: return [14097,14103]",
      "dest": "return: return [11822,11828]"
    },
    {
      "src": "(: ( [35655,35656]",
      "dest": "(: ( [22290,22291]"
    },
    {
      "src": "identifier: accountBorrows [11806,11820]",
      "dest": "identifier: accountBorrows [9944,9958]"
    },
    {
      "src": "identifier: fail [44582,44586]",
      "dest": "identifier: fail [31072,31076]"
    },
    {
      "src": "identifier: totalReservesNew [57692,57708]",
      "dest": "identifier: totalReservesNew [41338,41354]"
    },
    {
      "src": "(: ( [38224,38225]",
      "dest": "(: ( [25159,25160]"
    },
    {
      "src": "identifier: msg [36020,36023]",
      "dest": "identifier: msg [22655,22658]"
    },
    {
      "src": "=: = [2356,2357]",
      "dest": "=: = [2356,2357]"
    },
    {
      "src": "call_argument [14734,14762]",
      "dest": "call_argument [12202,12230]"
    },
    {
      "src": ".: . [34893,34894]",
      "dest": ".: . [21498,21499]"
    },
    {
      "src": "return: return [53073,53079]",
      "dest": "return: return [36836,36842]"
    },
    {
      "src": "(: ( [33018,33019]",
      "dest": "(: ( [20248,20249]"
    },
    {
      "src": "=: = [1867,1868]",
      "dest": "=: = [1867,1868]"
    },
    {
      "src": "variable_declaration [8443,8461]",
      "dest": "variable_declaration [5716,5734]"
    },
    {
      "src": "type_name [63628,63632]",
      "dest": "type_name [47099,47103]"
    },
    {
      "src": "comment: // get a gas-refund post-Istanbul [64661,64694]",
      "dest": "comment: // get a gas-refund post-Istanbul [49535,49568]"
    },
    {
      "src": "type_name [17186,17190]",
      "dest": "type_name [14691,14695]"
    },
    {
      "src": "identifier: NO_ERROR [60734,60742]",
      "dest": "identifier: NO_ERROR [44205,44213]"
    },
    {
      "src": "identifier: accrualBlockNumber [43935,43953]",
      "dest": "identifier: accrualBlockNumber [30425,30443]"
    },
    {
      "src": "return_statement [31649,31718]",
      "dest": "return_statement [18587,18656]"
    },
    {
      "src": ",: , [32825,32826]",
      "dest": ",: , [20055,20056]"
    },
    {
      "src": "emit_statement [19095,19180]",
      "dest": "emit_statement [15209,15294]"
    },
    {
      "src": "public: public [52451,52457]",
      "dest": "public: public [36214,36220]"
    },
    {
      "src": "(: ( [62564,62565]",
      "dest": "(: ( [46035,46036]"
    },
    {
      "src": ".: . [54671,54672]",
      "dest": ".: . [38434,38435]"
    },
    {
      "src": "(: ( [43671,43672]",
      "dest": "(: ( [30161,30162]"
    },
    {
      "src": "identifier: spender [6507,6514]",
      "dest": "identifier: spender [3898,3905]"
    },
    {
      "src": "\": \" [10166,10167]",
      "dest": "\": \" [8629,8630]"
    },
    {
      "src": "call_argument [33989,34001]",
      "dest": "call_argument [20780,20792]"
    },
    {
      "src": "(: ( [36539,36540]",
      "dest": "(: ( [23174,23175]"
    },
    {
      "src": "call_argument [45914,45922]",
      "dest": "call_argument [32404,32412]"
    },
    {
      "src": "}: } [15822,15823]",
      "dest": "}: } [13175,13176]"
    },
    {
      "src": "uint: uint [45240,45244]",
      "dest": "uint: uint [31730,31734]"
    },
    {
      "src": "call_expression [43959,43975]",
      "dest": "call_expression [30449,30465]"
    },
    {
      "src": "if: if [37922,37924]",
      "dest": "if: if [24557,24559]"
    },
    {
      "src": "identifier: Error [23910,23915]",
      "dest": "identifier: Error [24978,24983]"
    },
    {
      "src": "): ) [2062,2063]",
      "dest": "): ) [2062,2063]"
    },
    {
      "src": "identifier: redeemTokens [24328,24340]",
      "dest": "identifier: redeemTokens [16639,16651]"
    },
    {
      "src": "): ) [44273,44274]",
      "dest": "): ) [30763,30764]"
    },
    {
      "src": "array_access [38458,38482]",
      "dest": "array_access [25393,25417]"
    },
    {
      "src": "comment: /* We remember the original borrowerIndex for verification purposes */ [38358,38428]",
      "dest": "comment: /* We remember the original borrowerIndex for verification purposes */ [25293,25363]"
    },
    {
      "src": "identifier: accountBorrows [31940,31954]",
      "dest": "identifier: accountBorrows [18878,18892]"
    },
    {
      "src": "identifier: mintAmount [19641,19651]",
      "dest": "identifier: mintAmount [15755,15765]"
    },
    {
      "src": "identifier: totalReservesNew [59174,59190]",
      "dest": "identifier: totalReservesNew [42820,42836]"
    },
    {
      "src": ",: , [10164,10165]",
      "dest": ",: , [8627,8628]"
    },
    {
      "src": "call_argument [17260,17295]",
      "dest": "call_argument [14335,14370]"
    },
    {
      "src": "identifier: borrowIndex [16038,16049]",
      "dest": "identifier: borrowIndex [13391,13402]"
    },
    {
      "src": "member_expression [35656,35670]",
      "dest": "member_expression [22291,22305]"
    },
    {
      "src": "returns: returns [5300,5307]",
      "dest": "returns: returns [2691,2698]"
    },
    {
      "src": ",: , [23925,23926]",
      "dest": ",: , [24993,24994]"
    },
    {
      "src": "binary_expression [45380,45420]",
      "dest": "binary_expression [31870,31910]"
    },
    {
      "src": "type_name [41659,41663]",
      "dest": "type_name [28149,28153]"
    },
    {
      "src": "identifier: totalReserves [14572,14585]",
      "dest": "identifier: totalReserves [12149,12162]"
    },
    {
      "src": "(: ( [13863,13864]",
      "dest": "(: ( [11599,11600]"
    },
    {
      "src": "(: ( [52148,52149]",
      "dest": "(: ( [35911,35912]"
    },
    {
      "src": "identifier: _ [64630,64631]",
      "dest": "identifier: _ [49504,49505]"
    },
    {
      "src": "parameter [36441,36457]",
      "dest": "parameter [23076,23092]"
    },
    {
      "src": "expression_statement [38437,38497]",
      "dest": "expression_statement [25372,25432]"
    },
    {
      "src": "uint: uint [61266,61270]",
      "dest": "uint: uint [44737,44741]"
    },
    {
      "src": "uint: uint [8471,8475]",
      "dest": "uint: uint [5783,5787]"
    },
    {
      "src": "): ) [43709,43710]",
      "dest": "): ) [30199,30200]"
    },
    {
      "src": ",: , [43572,43573]",
      "dest": ",: , [30062,30063]"
    },
    {
      "src": "identifier: result [13533,13539]",
      "dest": "identifier: result [10587,10593]"
    },
    {
      "src": "parameter [47265,47269]",
      "dest": "parameter [33785,33789]"
    },
    {
      "src": "internal: internal [64382,64390]",
      "dest": "internal: internal [47853,47861]"
    },
    {
      "src": "import: import [185,191]",
      "dest": "import: import [185,191]"
    },
    {
      "src": "expression_statement [1848,1886]",
      "dest": "expression_statement [1848,1886]"
    },
    {
      "src": "primitive_type [55491,55495]",
      "dest": "primitive_type [39254,39258]"
    },
    {
      "src": "): ) [58256,58257]",
      "dest": "): ) [41902,41903]"
    },
    {
      "src": "variable_declaration_statement [43303,43430]",
      "dest": "variable_declaration_statement [29793,29920]"
    },
    {
      "src": "primitive_type [15165,15169]",
      "dest": "primitive_type [12518,12522]"
    },
    {
      "src": "uint: uint [50626,50630]",
      "dest": "uint: uint [34389,34393]"
    },
    {
      "src": "identifier: FailureInfo [54690,54701]",
      "dest": "identifier: FailureInfo [38453,38464]"
    },
    {
      "src": "): ) [45899,45900]",
      "dest": "): ) [32389,32390]"
    },
    {
      "src": "primitive_type [1012,1016]",
      "dest": "primitive_type [1012,1016]"
    },
    {
      "src": ".: . [9480,9481]",
      "dest": ".: . [6445,6446]"
    },
    {
      "src": "(: ( [57396,57397]",
      "dest": "(: ( [41159,41160]"
    },
    {
      "src": "variable_declaration_statement [6449,6474]",
      "dest": "variable_declaration_statement [3840,3865]"
    },
    {
      "src": "function: function [19614,19622]",
      "dest": "function: function [15728,15736]"
    },
    {
      "src": "assignment_expression [39048,39078]",
      "dest": "assignment_expression [25768,25798]"
    },
    {
      "src": "identifier: accrueInterest [24402,24416]",
      "dest": "identifier: accrueInterest [16713,16727]"
    },
    {
      "src": "comment: ///////////////////////// [45020,45045]",
      "dest": "comment: ///////////////////////// [31510,31535]"
    },
    {
      "src": "variable_declaration_statement [25290,25320]",
      "dest": "variable_declaration_statement [17601,17631]"
    },
    {
      "src": "identifier: totalBorrows [14558,14570]",
      "dest": "identifier: totalBorrows [12134,12146]"
    },
    {
      "src": "visibility [6415,6423]",
      "dest": "visibility [3806,3814]"
    },
    {
      "src": "(: ( [40689,40690]",
      "dest": "(: ( [27149,27150]"
    },
    {
      "src": "type_name [38315,38335]",
      "dest": "type_name [25250,25270]"
    },
    {
      "src": "(: ( [9414,9415]",
      "dest": "(: ( [6379,6380]"
    },
    {
      "src": "if_statement [38936,39089]",
      "dest": "if_statement [25656,25809]"
    },
    {
      "src": "type_cast_expression [1681,1701]",
      "dest": "type_cast_expression [1681,1701]"
    },
    {
      "src": "uint: uint [8443,8447]",
      "dest": "uint: uint [5716,5720]"
    },
    {
      "src": "(: ( [10716,10717]",
      "dest": "(: ( [9179,9180]"
    },
    {
      "src": ",: , [38000,38001]",
      "dest": ",: , [24635,24636]"
    },
    {
      "src": ",: , [35034,35035]",
      "dest": ",: , [21639,21640]"
    },
    {
      "src": "uint: uint [51153,51157]",
      "dest": "uint: uint [34916,34920]"
    },
    {
      "src": "identifier: vars [40600,40604]",
      "dest": "identifier: vars [27060,27064]"
    },
    {
      "src": "variable_declaration_statement [8443,8462]",
      "dest": "variable_declaration_statement [5716,5774]"
    },
    {
      "src": "type_cast_expression [12955,12975]",
      "dest": "type_cast_expression [10853,10873]"
    },
    {
      "src": "): ) [46585,46586]",
      "dest": "): ) [33105,33106]"
    },
    {
      "src": "call_argument [42474,42490]",
      "dest": "call_argument [28964,28980]"
    },
    {
      "src": "type_name [1071,1077]",
      "dest": "type_name [1071,1077]"
    },
    {
      "src": "): ) [19978,19979]",
      "dest": "): ) [16092,16093]"
    },
    {
      "src": "return_type_definition [13855,13880]",
      "dest": "return_type_definition [11591,11605]"
    },
    {
      "src": "call_argument [46337,46353]",
      "dest": "call_argument [32827,32843]"
    },
    {
      "src": "identifier: UNAUTHORIZED [50731,50743]",
      "dest": "identifier: UNAUTHORIZED [34494,34506]"
    },
    {
      "src": "type_name [32303,32318]",
      "dest": "type_name [19241,19256]"
    },
    {
      "src": "call_argument [12346,12370]",
      "dest": "call_argument [10453,10477]"
    },
    {
      "src": "return_statement [46558,46607]",
      "dest": "return_statement [33078,33127]"
    },
    {
      "src": "assignment_expression [38437,38496]",
      "dest": "assignment_expression [25372,25431]"
    },
    {
      "src": "variable_declaration [14374,14407]",
      "dest": "variable_declaration [12077,12110]"
    },
    {
      "src": "comment: /* Emit NewReserves(admin, actualAddAmount, reserves[n+1]) */ [57719,57780]",
      "dest": "comment: /* Emit NewReserves(admin, actualAddAmount, reserves[n+1]) */ [41365,41426]"
    },
    {
      "src": "call_argument [53751,53763]",
      "dest": "call_argument [37514,37526]"
    },
    {
      "src": "{: { [47271,47272]",
      "dest": "{: { [33791,33792]"
    },
    {
      "src": "call_expression [1482,1574]",
      "dest": "call_expression [1482,1574]"
    },
    {
      "src": "): ) [44892,44893]",
      "dest": "): ) [31382,31383]"
    },
    {
      "src": "expression_statement [63071,63112]",
      "dest": "expression_statement [46542,46583]"
    },
    {
      "src": "address: address [45302,45309]",
      "dest": "address: address [31792,31799]"
    },
    {
      "src": "if: if [51579,51581]",
      "dest": "if: if [35342,35344]"
    },
    {
      "src": "parameter [35528,35544]",
      "dest": "parameter [22163,22179]"
    },
    {
      "src": "function: function [56373,56381]",
      "dest": "function: function [40136,40144]"
    },
    {
      "src": "call_argument [61464,61476]",
      "dest": "call_argument [44935,44947]"
    },
    {
      "src": "==: == [15748,15750]",
      "dest": "==: == [13101,13103]"
    },
    {
      "src": "identifier: MathError [37037,37046]",
      "dest": "identifier: MathError [23672,23681]"
    },
    {
      "src": "comment: // Emit NewComptroller(oldComptroller, newComptroller) [52948,53002]",
      "dest": "comment: // Emit NewComptroller(oldComptroller, newComptroller) [36711,36765]"
    },
    {
      "src": "identifier: cTokenBalance [8915,8928]",
      "dest": "identifier: cTokenBalance [5880,5893]"
    },
    {
      "src": "comment: /**      * @notice Return the borrow balance of account based on stored data      * @param account The address whose balance should be calculated      * @return The calculated balance      */ [10738,10929]",
      "dest": "comment: /**      * @notice Return the borrow balance of account based on stored data      * @param account The address whose balance should be calculated      * @return The calculated balance      */ [9201,9392]"
    },
    {
      "src": "binary_expression [38675,38709]",
      "dest": "binary_expression [24867,24883]"
    },
    {
      "src": "type_name [10541,10548]",
      "dest": "type_name [9004,9011]"
    },
    {
      "src": "): ) [52539,52540]",
      "dest": "): ) [36302,36303]"
    },
    {
      "src": "identifier: allowance [6928,6937]",
      "dest": "identifier: allowance [4319,4328]"
    },
    {
      "src": ",: , [924,925]",
      "dest": ",: , [924,925]"
    },
    {
      "src": "): ) [51636,51637]",
      "dest": "): ) [35399,35400]"
    },
    {
      "src": "identifier: borrowIndexPrior [18463,18479]",
      "dest": "identifier: borrowIndexPrior [14761,14777]"
    },
    {
      "src": "identifier: accrualBlockNumber [18879,18897]",
      "dest": "identifier: accrualBlockNumber [14993,15011]"
    },
    {
      "src": "(: ( [55490,55491]",
      "dest": "(: ( [39253,39254]"
    },
    {
      "src": "identifier: FailureInfo [59772,59783]",
      "dest": "identifier: FailureInfo [43418,43429]"
    },
    {
      "src": "comment: // Clear the pending value [51964,51990]",
      "dest": "comment: // Clear the pending value [35727,35753]"
    },
    {
      "src": ",: , [17850,17851]",
      "dest": ",: , [14531,14532]"
    },
    {
      "src": "(: ( [42225,42226]",
      "dest": "(: ( [28715,28716]"
    },
    {
      "src": ",: , [5745,5746]",
      "dest": ",: , [3136,3137]"
    },
    {
      "src": "payable: payable [64357,64364]",
      "dest": "payable: payable [47828,47835]"
    },
    {
      "src": "identifier: Error [54444,54449]",
      "dest": "identifier: Error [38207,38212]"
    },
    {
      "src": "identifier: accountBorrowsNew [35055,35072]",
      "dest": "identifier: accountBorrowsNew [21660,21677]"
    },
    {
      "src": "binary_expression [55597,55626]",
      "dest": "binary_expression [39360,39389]"
    },
    {
      "src": "(: ( [15796,15797]",
      "dest": "(: ( [13149,13150]"
    },
    {
      "src": "parameter [13875,13879]",
      "dest": "parameter [11600,11604]"
    },
    {
      "src": "uint: uint [51493,51497]",
      "dest": "uint: uint [35256,35260]"
    },
    {
      "src": "identifier: interestRateModel [16143,16160]",
      "dest": "identifier: interestRateModel [13496,13513]"
    },
    {
      "src": ".: . [12360,12361]",
      "dest": ".: . [10467,10468]"
    },
    {
      "src": "): ) [19734,19735]",
      "dest": "): ) [15848,15849]"
    },
    {
      "src": "call_expression [45567,45603]",
      "dest": "call_expression [32057,32093]"
    },
    {
      "src": "identifier: totalReserves [59919,59932]",
      "dest": "identifier: totalReserves [43565,43578]"
    },
    {
      "src": ".: . [31505,31506]",
      "dest": ".: . [18443,18444]"
    },
    {
      "src": "comment: ///////////////////////// [34213,34238]",
      "dest": "comment: ///////////////////////// [20818,20843]"
    },
    {
      "src": "type_name [32366,32370]",
      "dest": "type_name [19304,19308]"
    },
    {
      "src": "identifier: addAmount [57409,57418]",
      "dest": "identifier: addAmount [41172,41181]"
    },
    {
      "src": "returns: returns [8347,8354]",
      "dest": "returns: returns [5609,5616]"
    },
    {
      "src": "identifier: newReserveFactorMantissa [55142,55166]",
      "dest": "identifier: newReserveFactorMantissa [38905,38929]"
    },
    {
      "src": "{: { [37940,37941]",
      "dest": "{: { [24575,24576]"
    },
    {
      "src": "identifier: owner [7832,7837]",
      "dest": "identifier: owner [5198,5203]"
    },
    {
      "src": "internal: internal [32348,32356]",
      "dest": "internal: internal [19286,19294]"
    },
    {
      "src": "): ) [44784,44785]",
      "dest": "): ) [31274,31275]"
    },
    {
      "src": "}: } [44091,44092]",
      "dest": "}: } [30581,30582]"
    },
    {
      "src": "(: ( [33444,33445]",
      "dest": "(: ( [25570,25571]"
    },
    {
      "src": "function_body [10106,10227]",
      "dest": "function_body [8569,8690]"
    },
    {
      "src": "identifier: seize [47172,47177]",
      "dest": "identifier: seize [33692,33697]"
    },
    {
      "src": "primitive_type [43167,43171]",
      "dest": "primitive_type [29657,29661]"
    },
    {
      "src": "identifier: error [42045,42050]",
      "dest": "identifier: error [28535,28540]"
    },
    {
      "src": "binary_expression [46151,46185]",
      "dest": "binary_expression [32641,32675]"
    },
    {
      "src": "if_statement [38154,38305]",
      "dest": "if_statement [25089,25240]"
    },
    {
      "src": "parameter [50575,50606]",
      "dest": "parameter [34338,34369]"
    },
    {
      "src": "identifier: borrowSnapshot [12346,12360]",
      "dest": "identifier: borrowSnapshot [10453,10467]"
    },
    {
      "src": "binary_expression [51583,51609]",
      "dest": "binary_expression [35346,35372]"
    },
    {
      "src": "identifier: Error [5392,5397]",
      "dest": "identifier: Error [2783,2788]"
    },
    {
      "src": "call_argument [31661,31673]",
      "dest": "call_argument [18599,18611]"
    },
    {
      "src": "struct_member [31935,31955]",
      "dest": "struct_member [18873,18893]"
    },
    {
      "src": "(: ( [59284,59285]",
      "dest": "(: ( [42930,42931]"
    },
    {
      "src": "call_argument [63241,63261]",
      "dest": "call_argument [46712,46732]"
    },
    {
      "src": "type_name [43237,43241]",
      "dest": "type_name [29727,29731]"
    },
    {
      "src": "member_expression [59523,59545]",
      "dest": "member_expression [43169,43191]"
    },
    {
      "src": "call_argument [33050,33087]",
      "dest": "call_argument [20280,20317]"
    },
    {
      "src": "identifier: borrowSnapshot [11789,11803]",
      "dest": "identifier: borrowSnapshot [9927,9941]"
    },
    {
      "src": "comment: /**      * @notice Get the current allowance from `owner` for `spender`      * @param owner The address of the account which owns the tokens to be spent      * @param spender The address of the account which may transfer tokens      * @return The number of tokens allowed to be spent (-1 means infinite)      */ [6603,6914]",
      "dest": "comment: /**      * @notice Get the current allowance from `owner` for `spender`      * @param owner The address of the account which owns the tokens to be spent      * @param spender The address of the account which may transfer tokens      * @return The number of tokens allowed to be spent (-1 means infinite)      */ [3994,4305]"
    },
    {
      "src": ",: , [41586,41587]",
      "dest": ",: , [28076,28077]"
    },
    {
      "src": "call_argument [4956,4970]",
      "dest": "call_argument [19856,19870]"
    },
    {
      "src": "identifier: spender [2853,2860]",
      "dest": "identifier: spender [48057,48064]"
    },
    {
      "src": "variable_declaration [11696,11707]",
      "dest": "variable_declaration [10501,10512]"
    },
    {
      "src": "{: { [44174,44175]",
      "dest": "{: { [30664,30665]"
    },
    {
      "src": "assignment_expression [40585,40620]",
      "dest": "assignment_expression [27045,27080]"
    },
    {
      "src": "identifier: seizeTokens [48105,48116]",
      "dest": "identifier: seizeTokens [49229,49240]"
    },
    {
      "src": "!=: != [52531,52533]",
      "dest": "!=: != [36294,36296]"
    },
    {
      "src": "identifier: exchangeRate [7804,7816]",
      "dest": "identifier: exchangeRate [5170,5182]"
    },
    {
      "src": "identifier: repayBorrowAllowed [37849,37867]",
      "dest": "identifier: repayBorrowAllowed [24484,24502]"
    },
    {
      "src": "type_name [36423,36430]",
      "dest": "type_name [23058,23065]"
    },
    {
      "src": ".: . [44636,44637]",
      "dest": ".: . [31126,31127]"
    },
    {
      "src": "identifier: src [2870,2873]",
      "dest": "identifier: src [48074,48077]"
    },
    {
      "src": ",: , [47334,47335]",
      "dest": ",: , [33854,33855]"
    },
    {
      "src": "identifier: nonReentrant [41631,41643]",
      "dest": "identifier: nonReentrant [28121,28133]"
    },
    {
      "src": "binary_expression [32516,32528]",
      "dest": "binary_expression [19454,19466]"
    },
    {
      "src": "identifier: msg [20123,20126]",
      "dest": "identifier: msg [16237,16240]"
    },
    {
      "src": "member_expression [41998,42029]",
      "dest": "member_expression [28488,28519]"
    },
    {
      "src": "call_argument [40245,40267]",
      "dest": "call_argument [26811,26833]"
    },
    {
      "src": ",: , [1045,1046]",
      "dest": ",: , [1045,1046]"
    },
    {
      "src": "return_type_definition [53483,53497]",
      "dest": "return_type_definition [37246,37260]"
    },
    {
      "src": "(: ( [12910,12911]",
      "dest": "(: ( [10808,10809]"
    },
    {
      "src": "(: ( [40954,40955]",
      "dest": "(: ( [27444,27445]"
    },
    {
      "src": "pragma_directive [0,24]",
      "dest": "pragma_directive [0,24]"
    },
    {
      "src": "comment: // totalReserves - reduceAmount [59129,59160]",
      "dest": "comment: // totalReserves - reduceAmount [42775,42806]"
    },
    {
      "src": "uint: uint [14329,14333]",
      "dest": "uint: uint [12032,12036]"
    },
    {
      "src": "}: } [33098,33099]",
      "dest": "}: } [20328,20329]"
    },
    {
      "src": "memory: memory [33125,33131]",
      "dest": "memory: memory [20355,20361]"
    },
    {
      "src": "type_name [5760,5767]",
      "dest": "type_name [3151,3158]"
    },
    {
      "src": "identifier: seizeError [45860,45870]",
      "dest": "identifier: seizeError [32350,32360]"
    },
    {
      "src": "): ) [45843,45844]",
      "dest": "): ) [32333,32334]"
    },
    {
      "src": "identifier: interestAccumulated [17831,17850]",
      "dest": "identifier: interestAccumulated [14512,14531]"
    },
    {
      "src": "{: { [9446,9447]",
      "dest": "{: { [6411,6412]"
    },
    {
      "src": "): ) [43392,43393]",
      "dest": "): ) [29882,29883]"
    },
    {
      "src": "): ) [16307,16308]",
      "dest": "): ) [13660,13661]"
    },
    {
      "src": "(: ( [44340,44341]",
      "dest": "(: ( [30830,30831]"
    },
    {
      "src": ".: . [38230,38231]",
      "dest": ".: . [25165,25166]"
    },
    {
      "src": "identifier: BorrowSnapshot [11766,11780]",
      "dest": "identifier: BorrowSnapshot [9904,9918]"
    },
    {
      "src": "(: ( [18115,18116]",
      "dest": "(: ( [14605,14606]"
    },
    {
      "src": "): ) [31515,31516]",
      "dest": "): ) [18453,18454]"
    },
    {
      "src": "identifier: principal [12361,12370]",
      "dest": "identifier: principal [10468,10477]"
    },
    {
      "src": "if: if [15720,15722]",
      "dest": "if: if [13073,13075]"
    },
    {
      "src": ",: , [62403,62404]",
      "dest": ",: , [45874,45875]"
    },
    {
      "src": "member_expression [61478,61536]",
      "dest": "member_expression [44949,45007]"
    },
    {
      "src": ".: . [59988,59989]",
      "dest": ".: . [43634,43635]"
    },
    {
      "src": "primitive_type [45773,45777]",
      "dest": "primitive_type [32263,32267]"
    },
    {
      "src": "{: { [17264,17265]",
      "dest": "{: { [14339,14340]"
    },
    {
      "src": "!=: != [35648,35650]",
      "dest": "!=: != [22283,22285]"
    },
    {
      "src": "call_argument [25508,25520]",
      "dest": "call_argument [17819,17831]"
    },
    {
      "src": "identifier: msg [51583,51586]",
      "dest": "identifier: msg [35346,35349]"
    },
    {
      "src": "identifier: doTransferOut [34683,34696]",
      "dest": "identifier: doTransferOut [21288,21301]"
    },
    {
      "src": "identifier: borrowAllowed [32450,32463]",
      "dest": "identifier: borrowAllowed [19388,19401]"
    },
    {
      "src": "identifier: principal [40479,40488]",
      "dest": "identifier: principal [26939,26948]"
    },
    {
      "src": "member_expression [53085,53099]",
      "dest": "member_expression [36848,36862]"
    },
    {
      "src": "comment: // Fail gracefully if protocol has insufficient underlying cash [59608,59671]",
      "dest": "comment: // Fail gracefully if protocol has insufficient underlying cash [43254,43317]"
    },
    {
      "src": "identifier: error [61257,61262]",
      "dest": "identifier: error [44728,44733]"
    },
    {
      "src": "(: ( [19924,19925]",
      "dest": "(: ( [16038,16039]"
    },
    {
      "src": "identifier: _notEntered [64601,64612]",
      "dest": "identifier: _notEntered [49475,49486]"
    },
    {
      "src": "return: return [55178,55184]",
      "dest": "return: return [38941,38947]"
    },
    {
      "src": "number_literal: 0 [38060,38061]",
      "dest": "number_literal: 0 [24695,24696]"
    },
    {
      "src": "call_expression [45559,45647]",
      "dest": "call_expression [32049,32137]"
    },
    {
      "src": "type_name [16415,16419]",
      "dest": "type_name [13748,13752]"
    },
    {
      "src": "): ) [13839,13840]",
      "dest": "): ) [11575,11576]"
    },
    {
      "src": "if: if [59453,59455]",
      "dest": "if: if [43099,43101]"
    },
    {
      "src": "return: return [58729,58735]",
      "dest": "return: return [42375,42381]"
    },
    {
      "src": "(: ( [16231,16232]",
      "dest": "(: ( [13584,13585]"
    },
    {
      "src": "if: if [62334,62336]",
      "dest": "if: if [45805,45807]"
    },
    {
      "src": "identifier: getSupplyRate [9810,9823]",
      "dest": "identifier: getSupplyRate [6775,6788]"
    },
    {
      "src": "call_argument [16277,16307]",
      "dest": "call_argument [13630,13660]"
    },
    {
      "src": "uint: uint [31964,31968]",
      "dest": "uint: uint [18902,18906]"
    },
    {
      "src": "identifier: error [61219,61224]",
      "dest": "identifier: error [44690,44695]"
    },
    {
      "src": "}: } [51179,51180]",
      "dest": "}: } [34942,34943]"
    },
    {
      "src": "if_statement [54393,54518]",
      "dest": "if_statement [38156,38281]"
    },
    {
      "src": "type_name [5262,5269]",
      "dest": "type_name [2653,2660]"
    },
    {
      "src": "variable_declaration_statement [15970,16005]",
      "dest": "variable_declaration_statement [13323,13358]"
    },
    {
      "src": "return_type_definition [36481,36501]",
      "dest": "return_type_definition [23116,23136]"
    },
    {
      "src": "(: ( [12029,12030]",
      "dest": "(: ( [10167,10168]"
    },
    {
      "src": "(: ( [18119,18120]",
      "dest": "(: ( [14609,14610]"
    },
    {
      "src": "(: ( [56713,56714]",
      "dest": "(: ( [40476,40477]"
    },
    {
      "src": "primitive_type [55538,55542]",
      "dest": "primitive_type [39301,39305]"
    },
    {
      "src": "uint: uint [36490,36494]",
      "dest": "uint: uint [23125,23129]"
    },
    {
      "src": "return_statement [42411,42492]",
      "dest": "return_statement [28901,28982]"
    },
    {
      "src": "): ) [10139,10140]",
      "dest": "): ) [8602,8603]"
    },
    {
      "src": "primitive_type [36490,36494]",
      "dest": "primitive_type [23125,23129]"
    },
    {
      "src": "variable_declaration_statement [17050,17082]",
      "dest": "variable_declaration_statement [14296,14384]"
    },
    {
      "src": "}: } [44481,44482]",
      "dest": "}: } [30971,30972]"
    },
    {
      "src": "(: ( [45309,45310]",
      "dest": "(: ( [31799,31800]"
    },
    {
      "src": "modifier_invocation [31405,31417]",
      "dest": "modifier_invocation [18343,18355]"
    },
    {
      "src": "type_name [1012,1016]",
      "dest": "type_name [1012,1016]"
    },
    {
      "src": "): ) [55505,55506]",
      "dest": "): ) [39268,39269]"
    },
    {
      "src": "identifier: Error [59523,59528]",
      "dest": "identifier: Error [43169,43174]"
    },
    {
      "src": "true: true [2358,2362]",
      "dest": "true: true [2358,2362]"
    },
    {
      "src": "identifier: mulUInt [12338,12345]",
      "dest": "identifier: mul_ [10448,10452]"
    },
    {
      "src": "call_argument [37890,37898]",
      "dest": "call_argument [24525,24533]"
    },
    {
      "src": ".: . [57932,57933]",
      "dest": ".: . [41578,41579]"
    },
    {
      "src": "identifier: borrowBalanceStoredInternal [33417,33444]",
      "dest": "identifier: borrowBalanceStoredInternal [25543,25570]"
    },
    {
      "src": "identifier: fail [59280,59284]",
      "dest": "identifier: fail [42926,42930]"
    },
    {
      "src": "call_argument [54666,54688]",
      "dest": "call_argument [38429,38451]"
    },
    {
      "src": "identifier: SET_COMPTROLLER_OWNER_CHECK [52599,52626]",
      "dest": "identifier: SET_COMPTROLLER_OWNER_CHECK [36362,36389]"
    },
    {
      "src": "(: ( [52413,52414]",
      "dest": "(: ( [36176,36177]"
    },
    {
      "src": "call_argument [36933,36943]",
      "dest": "call_argument [23568,23578]"
    },
    {
      "src": "(: ( [58347,58348]",
      "dest": "(: ( [41993,41994]"
    },
    {
      "src": "primitive_type [26656,26660]",
      "dest": "primitive_type [48788,48792]"
    },
    {
      "src": ".: . [34824,34825]",
      "dest": ".: . [21429,21430]"
    },
    {
      "src": "address: address [2845,2852]",
      "dest": "address: address [48049,48056]"
    },
    {
      "src": "binary_expression [12935,12975]",
      "dest": "binary_expression [10833,10873]"
    },
    {
      "src": "call_argument [54690,54732]",
      "dest": "call_argument [38453,38495]"
    },
    {
      "src": "identifier: Error [35231,35236]",
      "dest": "identifier: Error [21866,21871]"
    },
    {
      "src": "call_argument [44386,44422]",
      "dest": "call_argument [30876,30912]"
    },
    {
      "src": "member_expression [56743,56779]",
      "dest": "member_expression [40506,40542]"
    },
    {
      "src": "string_literal [10166,10190]",
      "dest": "string_literal [8629,8653]"
    },
    {
      "src": "type_name [62152,62156]",
      "dest": "type_name [45623,45627]"
    },
    {
      "src": "=: = [55057,55058]",
      "dest": "=: = [38820,38821]"
    },
    {
      "src": "uint: uint [1012,1016]",
      "dest": "uint: uint [1012,1016]"
    },
    {
      "src": "identifier: newComptroller [52781,52795]",
      "dest": "identifier: newComptroller [36544,36558]"
    },
    {
      "src": "identifier: COMPTROLLER_REJECTION [32568,32589]",
      "dest": "identifier: COMPTROLLER_REJECTION [19506,19527]"
    },
    {
      "src": "{: { [7002,7003]",
      "dest": "{: { [4393,4394]"
    },
    {
      "src": "}: } [7059,7060]",
      "dest": "}: } [4450,4451]"
    },
    {
      "src": "identifier: newReserveFactorMantissa [53970,53994]",
      "dest": "identifier: newReserveFactorMantissa [37733,37757]"
    },
    {
      "src": "identifier: ReservesAdded [57794,57807]",
      "dest": "identifier: ReservesAdded [41440,41453]"
    },
    {
      "src": "identifier: borrowAmount [32489,32501]",
      "dest": "identifier: borrowAmount [19427,19439]"
    },
    {
      "src": "identifier: liquidator [43137,43147]",
      "dest": "identifier: liquidator [29627,29637]"
    },
    {
      "src": "type_name [6382,6389]",
      "dest": "type_name [3773,3780]"
    },
    {
      "src": "identifier: actualAddAmount [56782,56797]",
      "dest": "identifier: actualAddAmount [40545,40560]"
    },
    {
      "src": "block_statement [39034,39089]",
      "dest": "block_statement [25754,25809]"
    },
    {
      "src": "member_expression [51665,51683]",
      "dest": "member_expression [35428,35446]"
    },
    {
      "src": "identifier: vars [38979,38983]",
      "dest": "identifier: vars [25699,25703]"
    },
    {
      "src": "identifier: actualRepayAmount [37214,37231]",
      "dest": "identifier: actualRepayAmount [23849,23866]"
    },
    {
      "src": "parameter [26609,26633]",
      "dest": "parameter [48741,48765]"
    },
    {
      "src": "identifier: REDUCE_RESERVES_ACCRUE_INTEREST_FAILED [58568,58606]",
      "dest": "identifier: REDUCE_RESERVES_ACCRUE_INTEREST_FAILED [42214,42252]"
    },
    {
      "src": "type_name [64369,64373]",
      "dest": "type_name [47840,47844]"
    },
    {
      "src": "call_argument [32479,32487]",
      "dest": "call_argument [19417,19425]"
    },
    {
      "src": "call_argument [57808,57818]",
      "dest": "call_argument [41454,41464]"
    },
    {
      "src": "uint: uint [53508,53512]",
      "dest": "uint: uint [37271,37275]"
    },
    {
      "src": "primitive_type [51153,51157]",
      "dest": "primitive_type [34916,34920]"
    },
    {
      "src": "[: [ [34814,34815]",
      "dest": "[: [ [21419,21420]"
    },
    {
      "src": "primitive_type [15792,15796]",
      "dest": "primitive_type [13145,13149]"
    },
    {
      "src": "(: ( [38651,38652]",
      "dest": "(: ( [20658,20659]"
    },
    {
      "src": "if: if [31482,31484]",
      "dest": "if: if [18420,18422]"
    },
    {
      "src": "!=: != [32524,32526]",
      "dest": "!=: != [19462,19464]"
    },
    {
      "src": "emit: emit [46267,46271]",
      "dest": "emit: emit [32757,32761]"
    },
    {
      "src": "block_statement [44560,44687]",
      "dest": "block_statement [31050,31177]"
    },
    {
      "src": "return: return [44188,44194]",
      "dest": "return: return [30678,30684]"
    },
    {
      "src": "identifier: vars [39694,39698]",
      "dest": "identifier: vars [26414,26418]"
    },
    {
      "src": "identifier: name_ [1085,1090]",
      "dest": "identifier: name_ [1085,1090]"
    },
    {
      "src": "return: return [14892,14898]",
      "dest": "return: return [12276,12282]"
    },
    {
      "src": "return_statement [43471,43577]",
      "dest": "return_statement [29961,30067]"
    },
    {
      "src": "): ) [59494,59495]",
      "dest": "): ) [43140,43141]"
    },
    {
      "src": "identifier: borrowBalance [8930,8943]",
      "dest": "identifier: borrowBalance [5895,5908]"
    },
    {
      "src": "string_literal [16277,16307]",
      "dest": "string_literal [13630,13660]"
    },
    {
      "src": "): ) [36742,36743]",
      "dest": "): ) [23377,23378]"
    },
    {
      "src": "if_statement [24428,24674]",
      "dest": "if_statement [16739,16985]"
    },
    {
      "src": "block_statement [14170,14953]",
      "dest": "block_statement [11873,12306]"
    },
    {
      "src": "call_argument [1674,1701]",
      "dest": "call_argument [1674,1701]"
    },
    {
      "src": "(: ( [61256,61257]",
      "dest": "(: ( [44727,44728]"
    },
    {
      "src": "else: else [14165,14169]",
      "dest": "else: else [11868,11872]"
    },
    {
      "src": "=: = [1625,1626]",
      "dest": "=: = [1625,1626]"
    },
    {
      "src": "(: ( [44586,44587]",
      "dest": "(: ( [31076,31077]"
    },
    {
      "src": "call_argument [9525,9538]",
      "dest": "call_argument [6490,6503]"
    },
    {
      "src": "primitive_type [19636,19640]",
      "dest": "primitive_type [15750,15754]"
    },
    {
      "src": "type_name [7262,7269]",
      "dest": "type_name [4653,4660]"
    },
    {
      "src": "==: == [13949,13951]",
      "dest": "==: == [11674,11676]"
    },
    {
      "src": "): ) [63603,63604]",
      "dest": "): ) [47074,47075]"
    },
    {
      "src": "member_expression [43519,43562]",
      "dest": "member_expression [30009,30052]"
    },
    {
      "src": "member_expression [62385,62403]",
      "dest": "member_expression [45856,45874]"
    },
    {
      "src": "): ) [1700,1701]",
      "dest": "): ) [1700,1701]"
    },
    {
      "src": "=: = [51820,51821]",
      "dest": "=: = [35583,35584]"
    },
    {
      "src": "\": \" [1263,1264]",
      "dest": "\": \" [1263,1264]"
    },
    {
      "src": "function: function [24299,24307]",
      "dest": "function: function [16610,16618]"
    },
    {
      "src": "expression_statement [64557,64592]",
      "dest": "expression_statement [49431,49466]"
    },
    {
      "src": "state_mutability [7286,7290]",
      "dest": "state_mutability [4677,4681]"
    },
    {
      "src": "parameter [12911,12915]",
      "dest": "parameter [10809,10813]"
    },
    {
      "src": "comment: // (No safe failures beyond this point) [45088,45127]",
      "dest": "comment: // (No safe failures beyond this point) [31578,31617]"
    },
    {
      "src": "comment: /**      * @notice Returns the current per-block borrow interest rate for this cToken      * @return The borrow interest rate per block, scaled by 1e18      */ [9223,9382]",
      "dest": "comment: /**      * @notice Returns the current per-block borrow interest rate for this cToken      * @return The borrow interest rate per block, scaled by 1e18      */ [6188,6347]"
    },
    {
      "src": "primitive_type [46165,46169]",
      "dest": "primitive_type [32655,32659]"
    },
    {
      "src": "state_mutability [13326,13330]",
      "dest": "state_mutability [11224,11228]"
    },
    {
      "src": "identifier: NO_ERROR [40961,40969]",
      "dest": "identifier: NO_ERROR [27451,27459]"
    },
    {
      "src": ",: , [9523,9524]",
      "dest": ",: , [6488,6489]"
    },
    {
      "src": ",: , [35072,35073]",
      "dest": ",: , [21677,21678]"
    },
    {
      "src": "(: ( [13316,13317]",
      "dest": "(: ( [11214,11215]"
    },
    {
      "src": "identifier: sender [36024,36030]",
      "dest": "identifier: sender [22659,22665]"
    },
    {
      "src": "=: = [45258,45259]",
      "dest": "=: = [31748,31749]"
    },
    {
      "src": "(: ( [4955,4956]",
      "dest": "(: ( [19855,19856]"
    },
    {
      "src": ".: . [62390,62391]",
      "dest": ".: . [45861,45862]"
    },
    {
      "src": "parameter [32366,32370]",
      "dest": "parameter [19304,19308]"
    },
    {
      "src": "block_statement [42076,42311]",
      "dest": "block_statement [28566,28801]"
    },
    {
      "src": "return_type_definition [7654,7668]",
      "dest": "return_type_definition [5045,5059]"
    },
    {
      "src": "external: external [5278,5286]",
      "dest": "external: external [2669,2677]"
    },
    {
      "src": "parameter [6993,7000]",
      "dest": "parameter [4384,4391]"
    },
    {
      "src": "identifier: subUInt [40223,40230]",
      "dest": "identifier: sub_ [26792,26796]"
    },
    {
      "src": "parameter [6399,6413]",
      "dest": "parameter [3790,3804]"
    },
    {
      "src": "\": \" [45474,45475]",
      "dest": "\": \" [31964,31965]"
    },
    {
      "src": "call_argument [40707,40729]",
      "dest": "call_argument [27167,27189]"
    },
    {
      "src": "number_literal: 0 [41967,41968]",
      "dest": "number_literal: 0 [28457,28458]"
    },
    {
      "src": "address: address [36423,36430]",
      "dest": "address: address [23058,23065]"
    },
    {
      "src": "identifier: accrueInterest [55567,55581]",
      "dest": "identifier: accrueInterest [39330,39344]"
    },
    {
      "src": "address: address [8316,8323]",
      "dest": "address: address [5578,5585]"
    },
    {
      "src": "modifier_invocation [53470,53482]",
      "dest": "modifier_invocation [37233,37245]"
    },
    {
      "src": ",: , [53763,53764]",
      "dest": ",: , [37526,37527]"
    },
    {
      "src": "member_expression [43318,43352]",
      "dest": "member_expression [29808,29842]"
    },
    {
      "src": "uint: uint [45773,45777]",
      "dest": "uint: uint [32263,32267]"
    },
    {
      "src": "visibility [6970,6978]",
      "dest": "visibility [4361,4369]"
    },
    {
      "src": "call_argument [46356,46367]",
      "dest": "call_argument [32846,32857]"
    },
    {
      "src": "import_directive [227,260]",
      "dest": "import_directive [227,260]"
    },
    {
      "src": "parameter [20920,20924]",
      "dest": "parameter [48541,48545]"
    },
    {
      "src": "identifier: borrower [47326,47334]",
      "dest": "identifier: borrower [33846,33854]"
    },
    {
      "src": "identifier: vars [33702,33706]",
      "dest": "identifier: vars [20708,20712]"
    },
    {
      "src": "comment: /**       * @notice Accepts transfer of admin rights. msg.sender must be pendingAdmin       * @dev Admin function for pending admin to accept role and update admin       * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)       */ [51186,51446]",
      "dest": "comment: /**       * @notice Accepts transfer of admin rights. msg.sender must be pendingAdmin       * @dev Admin function for pending admin to accept role and update admin       * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)       */ [34949,35209]"
    },
    {
      "src": ".: . [54895,54896]",
      "dest": ".: . [38658,38659]"
    },
    {
      "src": "call_argument [7818,7838]",
      "dest": "call_argument [5184,5204]"
    },
    {
      "src": "expression_statement [60452,60485]",
      "dest": "expression_statement [43923,43956]"
    },
    {
      "src": "function_body [35589,36063]",
      "dest": "function_body [22224,22698]"
    },
    {
      "src": ".: . [62942,62943]",
      "dest": ".: . [46413,46414]"
    },
    {
      "src": "identifier: pendingAdmin [52113,52125]",
      "dest": "identifier: pendingAdmin [35876,35888]"
    },
    {
      "src": "string [16277,16307]",
      "dest": "string [13630,13660]"
    },
    {
      "src": "identifier: currentBlockNumber [16442,16460]",
      "dest": "identifier: currentBlockNumber [13771,13789]"
    },
    {
      "src": "return: return [52555,52561]",
      "dest": "return: return [36318,36324]"
    },
    {
      "src": "internal: internal [62134,62142]",
      "dest": "internal: internal [45605,45613]"
    },
    {
      "src": "(: ( [37925,37926]",
      "dest": "(: ( [24560,24561]"
    },
    {
      "src": "variable_declaration_statement [7679,7744]",
      "dest": "variable_declaration_statement [5070,5135]"
    },
    {
      "src": "primitive_type [16014,16018]",
      "dest": "primitive_type [13367,13371]"
    },
    {
      "src": "member_expression [32827,32861]",
      "dest": "member_expression [20057,20091]"
    },
    {
      "src": "call_expression [9792,9891]",
      "dest": "call_expression [6757,6856]"
    },
    {
      "src": "): ) [10652,10653]",
      "dest": "): ) [9115,9116]"
    },
    {
      "src": "): ) [36966,36967]",
      "dest": "): ) [23601,23602]"
    },
    {
      "src": "number_literal: 0 [42298,42299]",
      "dest": "number_literal: 0 [28788,28789]"
    },
    {
      "src": "identifier: Error [62631,62636]",
      "dest": "identifier: Error [46102,46107]"
    },
    {
      "src": "primitive_type [5262,5269]",
      "dest": "primitive_type [2653,2660]"
    },
    {
      "src": "primitive_type [15556,15560]",
      "dest": "primitive_type [12909,12913]"
    },
    {
      "src": "uint: uint [37147,37151]",
      "dest": "uint: uint [23782,23786]"
    },
    {
      "src": "type_name [35583,35587]",
      "dest": "type_name [22218,22222]"
    },
    {
      "src": "call_argument [38002,38048]",
      "dest": "call_argument [24637,24683]"
    },
    {
      "src": "variable_declaration [17091,17115]",
      "dest": "variable_declaration [14393,14417]"
    },
    {
      "src": "type_name [56400,56404]",
      "dest": "type_name [40163,40167]"
    },
    {
      "src": "comment: // We fail gracefully unless market's block number equals current block number [56561,56639]",
      "dest": "comment: // We fail gracefully unless market's block number equals current block number [40324,40402]"
    },
    {
      "src": "uint256: uint256 [7300,7307]",
      "dest": "uint256: uint256 [4691,4698]"
    },
    {
      "src": "primitive_type [52014,52021]",
      "dest": "primitive_type [35777,35784]"
    },
    {
      "src": "=: = [57690,57691]",
      "dest": "=: = [41336,41337]"
    },
    {
      "src": "identifier: seize [45997,46002]",
      "dest": "identifier: seize [32487,32492]"
    },
    {
      "src": "primitive_type [17125,17129]",
      "dest": "primitive_type [14484,14488]"
    },
    {
      "src": "{: { [13346,13347]",
      "dest": "{: { [11244,11245]"
    },
    {
      "src": "identifier: nonReentrant [19662,19674]",
      "dest": "identifier: nonReentrant [15776,15788]"
    },
    {
      "src": "(: ( [16441,16442]",
      "dest": "(: ( [13770,13771]"
    },
    {
      "src": "comment: /**      * @notice Accrues interest and reduces reserves by transferring to admin      * @param reduceAmount Amount of reduction to reserves      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)      */ [57974,58209]",
      "dest": "comment: /**      * @notice Accrues interest and reduces reserves by transferring to admin      * @param reduceAmount Amount of reduction to reserves      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)      */ [41620,41855]"
    },
    {
      "src": "identifier: accrueInterest [36525,36539]",
      "dest": "identifier: accrueInterest [23160,23174]"
    },
    {
      "src": "): ) [35094,35095]",
      "dest": "): ) [21699,21700]"
    },
    {
      "src": "identifier: borrowIndex [40564,40575]",
      "dest": "identifier: borrowIndex [27024,27035]"
    },
    {
      "src": ".: . [34841,34842]",
      "dest": ".: . [21446,21447]"
    },
    {
      "src": "call_expression [12503,12561]",
      "dest": "call_expression [10515,10570]"
    },
    {
      "src": "if: if [59234,59236]",
      "dest": "if: if [42880,42882]"
    },
    {
      "src": "{: { [12917,12918]",
      "dest": "{: { [10815,10816]"
    },
    {
      "src": ".: . [63312,63313]",
      "dest": ".: . [46783,46784]"
    },
    {
      "src": "block_statement [13955,14164]",
      "dest": "block_statement [11680,11867]"
    },
    {
      "src": "): ) [8965,8966]",
      "dest": "): ) [5930,5931]"
    },
    {
      "src": "uint: uint [8362,8366]",
      "dest": "uint: uint [5624,5628]"
    },
    {
      "src": "identifier: _setReserveFactor [53412,53429]",
      "dest": "identifier: _setReserveFactor [37175,37192]"
    },
    {
      "src": "identifier: accrueInterest [42015,42029]",
      "dest": "identifier: accrueInterest [28505,28519]"
    },
    {
      "src": "type_name [53492,53496]",
      "dest": "type_name [37255,37259]"
    },
    {
      "src": "comment: /**      * @notice Returns the current per-block supply interest rate for this cToken      * @return The supply interest rate per block, scaled by 1e18      */ [9552,9711]",
      "dest": "comment: /**      * @notice Returns the current per-block supply interest rate for this cToken      * @return The supply interest rate per block, scaled by 1e18      */ [6517,6676]"
    },
    {
      "src": "identifier: accountBorrows [40454,40468]",
      "dest": "identifier: accountBorrows [26914,26928]"
    },
    {
      "src": "return_statement [63295,63323]",
      "dest": "return_statement [46766,46794]"
    },
    {
      "src": "identifier: totalBorrowsNew [34951,34966]",
      "dest": "identifier: totalBorrowsNew [21556,21571]"
    },
    {
      "src": "): ) [1264,1265]",
      "dest": "): ) [1264,1265]"
    },
    {
      "src": "(: ( [59237,59238]",
      "dest": "(: ( [42883,42884]"
    },
    {
      "src": ".: . [38983,38984]",
      "dest": ".: . [25703,25704]"
    },
    {
      "src": "==: == [1678,1680]",
      "dest": "==: == [1678,1680]"
    },
    {
      "src": "(: ( [12959,12960]",
      "dest": "(: ( [10857,10858]"
    },
    {
      "src": ",: , [57818,57819]",
      "dest": ",: , [41464,41465]"
    },
    {
      "src": "identifier: vars [39048,39052]",
      "dest": "identifier: vars [25768,25772]"
    },
    {
      "src": "=: = [18898,18899]",
      "dest": "=: = [15012,15013]"
    },
    {
      "src": "identifier: getBlockNumber [62587,62601]",
      "dest": "identifier: getBlockNumber [46058,46072]"
    },
    {
      "src": "assignment_expression [45860,45936]",
      "dest": "assignment_expression [32350,32426]"
    },
    {
      "src": "identifier: NO_ERROR [46577,46585]",
      "dest": "identifier: NO_ERROR [33097,33105]"
    },
    {
      "src": "): ) [45341,45342]",
      "dest": "): ) [31831,31832]"
    },
    {
      "src": "import_directive [154,184]",
      "dest": "import_directive [154,184]"
    },
    {
      "src": "(: ( [57926,57927]",
      "dest": "(: ( [41572,41573]"
    },
    {
      "src": "variable_declaration [56530,56550]",
      "dest": "variable_declaration [40293,40313]"
    },
    {
      "src": "emit: emit [51081,51085]",
      "dest": "emit: emit [34844,34848]"
    },
    {
      "src": "member_expression [40035,40057]",
      "dest": "member_expression [26736,26758]"
    },
    {
      "src": "uint: uint [7663,7667]",
      "dest": "uint: uint [5054,5058]"
    },
    {
      "src": "identifier: getCashPrior [9824,9836]",
      "dest": "identifier: getCashPrior [6789,6801]"
    },
    {
      "src": "identifier: Error [24446,24451]",
      "dest": "identifier: Error [16757,16762]"
    },
    {
      "src": "variable_declaration [51837,51860]",
      "dest": "variable_declaration [35600,35623]"
    },
    {
      "src": "type_cast_expression [60723,60743]",
      "dest": "type_cast_expression [44194,44214]"
    },
    {
      "src": "call_argument [19115,19124]",
      "dest": "call_argument [15229,15238]"
    },
    {
      "src": "user_defined_type [62094,62111]",
      "dest": "user_defined_type [45565,45582]"
    },
    {
      "src": "): ) [29886,29887]",
      "dest": "): ) [8158,8159]"
    },
    {
      "src": "import: import [126,132]",
      "dest": "import: import [126,132]"
    },
    {
      "src": ",: , [37888,37889]",
      "dest": ",: , [24523,24524]"
    },
    {
      "src": "identifier: require [16224,16231]",
      "dest": "identifier: require [13577,13584]"
    },
    {
      "src": "visibility [2901,2909]",
      "dest": "visibility [48105,48113]"
    },
    {
      "src": "): ) [31861,31862]",
      "dest": "): ) [18799,18800]"
    },
    {
      "src": "parameter [19636,19651]",
      "dest": "parameter [15750,15765]"
    },
    {
      "src": "type_name [950,967]",
      "dest": "type_name [950,967]"
    },
    {
      "src": "identifier: initialExchangeRateMantissa [1414,1441]",
      "dest": "identifier: initialExchangeRateMantissa [1414,1441]"
    },
    {
      "src": "type_name [43303,43307]",
      "dest": "type_name [29793,29797]"
    },
    {
      "src": "): ) [1731,1732]",
      "dest": "): ) [1731,1732]"
    },
    {
      "src": "(: ( [35812,35813]",
      "dest": "(: ( [22447,22448]"
    },
    {
      "src": "if: if [42041,42043]",
      "dest": "if: if [28531,28533]"
    },
    {
      "src": "identifier: pendingAdmin [51941,51953]",
      "dest": "identifier: pendingAdmin [35704,35716]"
    },
    {
      "src": "{: { [12061,12062]",
      "dest": "{: { [10199,10200]"
    },
    {
      "src": "identifier: error [41718,41723]",
      "dest": "identifier: error [28208,28213]"
    },
    {
      "src": "type_cast_expression [52014,52024]",
      "dest": "type_cast_expression [35777,35787]"
    },
    {
      "src": "identifier: FailureInfo [33050,33061]",
      "dest": "identifier: FailureInfo [20280,20291]"
    },
    {
      "src": "identifier: owner [7340,7345]",
      "dest": "identifier: owner [4731,4736]"
    },
    {
      "src": "=: = [19020,19021]",
      "dest": "=: = [15134,15135]"
    },
    {
      "src": "address: address [32464,32471]",
      "dest": "address: address [19402,19409]"
    },
    {
      "src": ".: . [40735,40736]",
      "dest": ".: . [27195,27196]"
    },
    {
      "src": "binary_expression [10613,10653]",
      "dest": "binary_expression [9076,9116]"
    },
    {
      "src": "identifier: borrower [35026,35034]",
      "dest": "identifier: borrower [21631,21639]"
    },
    {
      "src": ",: , [44077,44078]",
      "dest": ",: , [30567,30568]"
    },
    {
      "src": "parameter [59076,59093]",
      "dest": "parameter [42722,42739]"
    },
    {
      "src": "call_expression [24602,24663]",
      "dest": "call_expression [16913,16974]"
    },
    {
      "src": "inheritance_specifier [400,411]",
      "dest": "inheritance_specifier [400,411]"
    },
    {
      "src": "return: return [10690,10696]",
      "dest": "return: return [9153,9159]"
    },
    {
      "src": "): ) [54638,54639]",
      "dest": "): ) [38401,38402]"
    },
    {
      "src": "binary_expression [52520,52539]",
      "dest": "binary_expression [36283,36302]"
    },
    {
      "src": "type_cast_expression [31495,31515]",
      "dest": "type_cast_expression [18433,18453]"
    },
    {
      "src": "tuple_expression [57921,57960]",
      "dest": "tuple_expression [41567,41606]"
    },
    {
      "src": "type_name [48082,48089]",
      "dest": "type_name [49206,49213]"
    },
    {
      "src": "identifier: error [19749,19754]",
      "dest": "identifier: error [15863,15868]"
    },
    {
      "src": "identifier: accrueInterest [15459,15473]",
      "dest": "identifier: accrueInterest [12812,12826]"
    },
    {
      "src": "(: ( [36489,36490]",
      "dest": "(: ( [23124,23125]"
    },
    {
      "src": "identifier: getBorrowRate [9481,9494]",
      "dest": "identifier: getBorrowRate [6446,6459]"
    },
    {
      "src": "identifier: LIQUIDATE_REPAY_BORROW_FRESH_FAILED [44959,44994]",
      "dest": "identifier: LIQUIDATE_REPAY_BORROW_FRESH_FAILED [31449,31484]"
    },
    {
      "src": "variable_declaration [14329,14343]",
      "dest": "variable_declaration [12032,12046]"
    },
    {
      "src": ",: , [5758,5759]",
      "dest": ",: , [3149,3150]"
    },
    {
      "src": "function: function [53403,53411]",
      "dest": "function: function [37166,37174]"
    },
    {
      "src": "call_argument [18481,18497]",
      "dest": "call_argument [14779,14795]"
    },
    {
      "src": "identifier: simpleInterestFactor [18441,18461]",
      "dest": "identifier: simpleInterestFactor [14739,14759]"
    },
    {
      "src": "identifier: require [1197,1204]",
      "dest": "identifier: require [1197,1204]"
    },
    {
      "src": "call_expression [54622,54638]",
      "dest": "call_expression [38385,38401]"
    },
    {
      "src": "identifier: totalReservesNew [56504,56520]",
      "dest": "identifier: totalReservesNew [40267,40283]"
    },
    {
      "src": "member_expression [24621,24662]",
      "dest": "member_expression [16932,16973]"
    },
    {
      "src": "return: return [47281,47287]",
      "dest": "return: return [33801,33807]"
    },
    {
      "src": "primitive_type [10589,10593]",
      "dest": "primitive_type [9052,9056]"
    },
    {
      "src": "[: [ [7037,7038]",
      "dest": "[: [ [4428,4429]"
    },
    {
      "src": "type_name [37209,37213]",
      "dest": "type_name [23844,23848]"
    },
    {
      "src": ",: , [25697,25698]",
      "dest": ",: , [18008,18009]"
    },
    {
      "src": "return_statement [10690,10726]",
      "dest": "return_statement [9153,9189]"
    },
    {
      "src": "number_literal: 0 [1520,1521]",
      "dest": "number_literal: 0 [1520,1521]"
    },
    {
      "src": "}: } [25718,25719]",
      "dest": "}: } [18029,18030]"
    },
    {
      "src": "return_type_definition [32357,32371]",
      "dest": "return_type_definition [19295,19309]"
    },
    {
      "src": "variable_declaration_statement [54972,55026]",
      "dest": "variable_declaration_statement [38735,38789]"
    },
    {
      "src": "): ) [25563,25564]",
      "dest": "): ) [17874,17875]"
    },
    {
      "src": "identifier: totalBorrowsNew [40605,40620]",
      "dest": "identifier: totalBorrowsNew [27065,27080]"
    },
    {
      "src": "identifier: from [63900,63904]",
      "dest": "identifier: from [47371,47375]"
    },
    {
      "src": "type_name [5309,5313]",
      "dest": "type_name [2700,2704]"
    },
    {
      "src": "type_name [37018,37023]",
      "dest": "type_name [23653,23658]"
    },
    {
      "src": "(: ( [58332,58333]",
      "dest": "(: ( [41978,41979]"
    },
    {
      "src": "uint: uint [19690,19694]",
      "dest": "uint: uint [15804,15808]"
    },
    {
      "src": "visibility [26677,26685]",
      "dest": "visibility [48809,48817]"
    },
    {
      "src": "visibility [19653,19661]",
      "dest": "visibility [15767,15775]"
    },
    {
      "src": "primitive_type [56440,56444]",
      "dest": "primitive_type [40203,40207]"
    },
    {
      "src": "call_argument [19763,19777]",
      "dest": "call_argument [15877,15891]"
    },
    {
      "src": "): ) [36457,36458]",
      "dest": "): ) [23092,23093]"
    },
    {
      "src": "(: ( [41702,41703]",
      "dest": "(: ( [28192,28193]"
    },
    {
      "src": "call_argument [35036,35048]",
      "dest": "call_argument [21641,21653]"
    },
    {
      "src": ",: , [20918,20919]",
      "dest": ",: , [48539,48540]"
    },
    {
      "src": "variable_declaration_statement [16395,16487]",
      "dest": "variable_declaration_statement [13748,13816]"
    },
    {
      "src": "uint: uint [56530,56534]",
      "dest": "uint: uint [40293,40297]"
    },
    {
      "src": "identifier: sender [5363,5369]",
      "dest": "identifier: sender [2754,2760]"
    },
    {
      "src": "if: if [19745,19747]",
      "dest": "if: if [15859,15861]"
    },
    {
      "src": "call_expression [13019,13039]",
      "dest": "call_expression [10917,10937]"
    },
    {
      "src": "identifier: this [45895,45899]",
      "dest": "identifier: this [32385,32389]"
    },
    {
      "src": "parameter [37700,37716]",
      "dest": "parameter [24335,24351]"
    },
    {
      "src": "identifier: amount [5270,5276]",
      "dest": "identifier: amount [2661,2667]"
    },
    {
      "src": "identifier: comptroller [32438,32449]",
      "dest": "identifier: comptroller [19376,19387]"
    },
    {
      "src": "identifier: borrowFresh [32291,32302]",
      "dest": "identifier: borrowFresh [19229,19240]"
    },
    {
      "src": "\": \" [1328,1329]",
      "dest": "\": \" [1328,1329]"
    },
    {
      "src": "member_expression [63307,63321]",
      "dest": "member_expression [46778,46792]"
    },
    {
      "src": "identifier: isInterestRateModel [62943,62962]",
      "dest": "identifier: isInterestRateModel [46414,46433]"
    },
    {
      "src": "type_name [16014,16018]",
      "dest": "type_name [13367,13371]"
    },
    {
      "src": "address: address [45831,45838]",
      "dest": "address: address [32321,32328]"
    },
    {
      "src": "expression_statement [62914,62998]",
      "dest": "expression_statement [46385,46469]"
    },
    {
      "src": "payable: payable [32311,32318]",
      "dest": "payable: payable [19249,19256]"
    },
    {
      "src": "block_statement [19780,19994]",
      "dest": "block_statement [15894,16108]"
    },
    {
      "src": ".: . [36023,36024]",
      "dest": ".: . [22658,22659]"
    },
    {
      "src": "(: ( [25346,25347]",
      "dest": "(: ( [17657,17658]"
    },
    {
      "src": "block_statement [38711,38861]",
      "dest": "block_statement [24885,25008]"
    },
    {
      "src": "array_access [40454,40478]",
      "dest": "array_access [26914,26938]"
    },
    {
      "src": "call_argument [37868,37881]",
      "dest": "call_argument [24503,24516]"
    },
    {
      "src": "identifier: borrower [46300,46308]",
      "dest": "identifier: borrower [32790,32798]"
    },
    {
      "src": "identifier: nonReentrant [5287,5299]",
      "dest": "identifier: nonReentrant [2678,2690]"
    },
    {
      "src": "}: } [15208,15209]",
      "dest": "}: } [12561,12562]"
    },
    {
      "src": "identifier: cashPlusBorrowsMinusReserves [14734,14762]",
      "dest": "identifier: cashPlusBorrowsMinusReserves [12202,12230]"
    },
    {
      "src": "call_expression [43918,43955]",
      "dest": "call_expression [30408,30445]"
    },
    {
      "src": ".: . [33672,33673]",
      "dest": ".: . [20682,20683]"
    },
    {
      "src": "): ) [9444,9445]",
      "dest": "): ) [6409,6410]"
    },
    {
      "src": "identifier: accountBorrowsNew [37152,37169]",
      "dest": "identifier: accountBorrowsNew [23787,23804]"
    },
    {
      "src": "return_type_definition [48127,48141]",
      "dest": "return_type_definition [49251,49265]"
    },
    {
      "src": ".: . [44240,44241]",
      "dest": ".: . [30730,30731]"
    },
    {
      "src": "variable_declaration [43303,43315]",
      "dest": "variable_declaration [29793,29805]"
    },
    {
      "src": "!=: != [58354,58356]",
      "dest": "!=: != [42000,42002]"
    },
    {
      "src": "primitive_type [41552,41559]",
      "dest": "primitive_type [28042,28049]"
    },
    {
      "src": "comment: ///////////////////////// [39099,39124]",
      "dest": "comment: ///////////////////////// [25819,25844]"
    },
    {
      "src": "view: view [7286,7290]",
      "dest": "view: view [4677,4681]"
    },
    {
      "src": "identifier: error [36517,36522]",
      "dest": "identifier: error [23152,23157]"
    },
    {
      "src": ",: , [7816,7817]",
      "dest": ",: , [5182,5183]"
    },
    {
      "src": "return_statement [55779,55854]",
      "dest": "return_statement [39542,39617]"
    },
    {
      "src": "type_name [7630,7637]",
      "dest": "type_name [5021,5028]"
    },
    {
      "src": "visibility [15476,15482]",
      "dest": "visibility [12829,12835]"
    },
    {
      "src": "primitive_type [19758,19762]",
      "dest": "primitive_type [15872,15876]"
    },
    {
      "src": "call_argument [55797,55802]",
      "dest": "call_argument [39560,39565]"
    },
    {
      "src": "(: ( [25683,25684]",
      "dest": "(: ( [17994,17995]"
    },
    {
      "src": "visibility [9152,9160]",
      "dest": "visibility [6117,6125]"
    },
    {
      "src": "primitive_type [26635,26639]",
      "dest": "primitive_type [48767,48771]"
    },
    {
      "src": "return_type_definition [5798,5812]",
      "dest": "return_type_definition [3189,3203]"
    },
    {
      "src": "primitive_type [8374,8378]",
      "dest": "primitive_type [5636,5640]"
    },
    {
      "src": "function_definition [62058,63329]",
      "dest": "function_definition [45529,46800]"
    },
    {
      "src": "): ) [44080,44081]",
      "dest": "): ) [30570,30571]"
    },
    {
      "src": "primitive_type [61198,61202]",
      "dest": "primitive_type [44669,44673]"
    },
    {
      "src": ",: , [16460,16461]",
      "dest": ",: , [13789,13790]"
    },
    {
      "src": "identifier: accountBorrows [38458,38472]",
      "dest": "identifier: accountBorrows [25393,25407]"
    },
    {
      "src": "address: address [63892,63899]",
      "dest": "address: address [47363,47370]"
    },
    {
      "src": "): ) [47347,47348]",
      "dest": "): ) [33867,33868]"
    },
    {
      "src": "): ) [9179,9180]",
      "dest": "): ) [6144,6145]"
    },
    {
      "src": "): ) [58553,58554]",
      "dest": "): ) [42199,42200]"
    },
    {
      "src": "(: ( [24612,24613]",
      "dest": "(: ( [16923,16924]"
    },
    {
      "src": "function_definition [54263,55212]",
      "dest": "function_definition [38026,38975]"
    },
    {
      "src": "call_argument [32464,32477]",
      "dest": "call_argument [19402,19415]"
    },
    {
      "src": "visibility [56416,56424]",
      "dest": "visibility [40179,40187]"
    },
    {
      "src": "boolean_literal [6586,6590]",
      "dest": "boolean_literal [3977,3981]"
    },
    {
      "src": "variable_declaration [17186,17205]",
      "dest": "variable_declaration [14691,14710]"
    },
    {
      "src": "state_mutability [9755,9759]",
      "dest": "state_mutability [6720,6724]"
    },
    {
      "src": "): ) [15169,15170]",
      "dest": "): ) [12522,12523]"
    },
    {
      "src": "member_expression [40014,40033]",
      "dest": "member_expression [26715,26734]"
    },
    {
      "src": ",: , [5357,5358]",
      "dest": ",: , [2748,2749]"
    },
    {
      "src": "parameter [20914,20918]",
      "dest": "parameter [48535,48539]"
    },
    {
      "src": "type_cast_expression [41727,41747]",
      "dest": "type_cast_expression [28217,28237]"
    },
    {
      "src": "(: ( [38194,38195]",
      "dest": "(: ( [25129,25130]"
    },
    {
      "src": ",: , [60620,60621]",
      "dest": ",: , [44091,44092]"
    },
    {
      "src": "call_argument [54464,54506]",
      "dest": "call_argument [38227,38269]"
    },
    {
      "src": "function_definition [36388,36974]",
      "dest": "function_definition [23023,23609]"
    },
    {
      "src": "assignment_expression [2180,2196]",
      "dest": "assignment_expression [2180,2196]"
    },
    {
      "src": "returns: returns [9760,9767]",
      "dest": "returns: returns [6725,6732]"
    },
    {
      "src": ".: . [44958,44959]",
      "dest": ".: . [31448,31449]"
    },
    {
      "src": "type_name [8471,8475]",
      "dest": "type_name [5783,5787]"
    },
    {
      "src": "return_type_definition [52458,52472]",
      "dest": "return_type_definition [36221,36235]"
    },
    {
      "src": "comment: /**      * @notice Borrows are repaid by another user (possibly the borrower).      * @param payer the account paying off the borrow      * @param borrower the account with the debt being payed off      * @param repayAmount the amount of undelrying tokens being returned      * @return (uint, uint) An error code (0=success, otherwise a failure, see ErrorReporter.sol), and the actual repayment amount.      */ [37244,37654]",
      "dest": "comment: /**      * @notice Borrows are repaid by another user (possibly the borrower).      * @param payer the account paying off the borrow      * @param borrower the account with the debt being payed off      * @param repayAmount the amount of undelrying tokens being returned      * @return (uint, uint) An error code (0=success, otherwise a failure, see ErrorReporter.sol), and the actual repayment amount.      */ [23879,24289]"
    },
    {
      "src": "return_type_definition [9166,9180]",
      "dest": "return_type_definition [6131,6145]"
    },
    {
      "src": "): ) [53994,53995]",
      "dest": "): ) [37757,37758]"
    },
    {
      "src": "=: = [2015,2016]",
      "dest": "=: = [2015,2016]"
    },
    {
      "src": "type_name [5747,5754]",
      "dest": "type_name [3138,3145]"
    },
    {
      "src": "identifier: MARKET_NOT_FRESH [38231,38247]",
      "dest": "identifier: MARKET_NOT_FRESH [25166,25182]"
    },
    {
      "src": "type_name [25274,25278]",
      "dest": "type_name [17585,17589]"
    },
    {
      "src": "variable_declaration_statement [15887,15919]",
      "dest": "variable_declaration_statement [13240,13272]"
    },
    {
      "src": "call_argument [10717,10724]",
      "dest": "call_argument [9180,9187]"
    },
    {
      "src": "}: } [50797,50798]",
      "dest": "}: } [34560,34561]"
    },
    {
      "src": "primitive_type [9175,9179]",
      "dest": "primitive_type [6140,6144]"
    },
    {
      "src": "parameter [10100,10104]",
      "dest": "parameter [8563,8567]"
    },
    {
      "src": "identifier: Error [55190,55195]",
      "dest": "identifier: Error [38953,38958]"
    },
    {
      "src": "(: ( [36932,36933]",
      "dest": "(: ( [23567,23568]"
    },
    {
      "src": "if_statement [37922,38073]",
      "dest": "if_statement [24557,24708]"
    },
    {
      "src": "call_expression [10605,10680]",
      "dest": "call_expression [9068,9143]"
    },
    {
      "src": "address: address [43129,43136]",
      "dest": "address: address [29619,29626]"
    },
    {
      "src": "visibility [13841,13849]",
      "dest": "visibility [11577,11585]"
    },
    {
      "src": "function: function [10934,10942]",
      "dest": "function: function [9397,9405]"
    },
    {
      "src": "): ) [12880,12881]",
      "dest": "): ) [10778,10779]"
    },
    {
      "src": "(: ( [25332,25333]",
      "dest": "(: ( [17643,17644]"
    },
    {
      "src": "uint: uint [47216,47220]",
      "dest": "uint: uint [33736,33740]"
    },
    {
      "src": "returns: returns [20905,20912]",
      "dest": "returns: returns [48526,48533]"
    },
    {
      "src": "uint: uint [2978,2982]",
      "dest": "uint: uint [12177,12181]"
    },
    {
      "src": "public: public [10980,10986]",
      "dest": "public: public [9443,9449]"
    },
    {
      "src": "=: = [51861,51862]",
      "dest": "=: = [35624,35625]"
    },
    {
      "src": "identifier: interestRateModel_ [968,986]",
      "dest": "identifier: interestRateModel_ [968,986]"
    },
    {
      "src": "call_argument [61478,61536]",
      "dest": "call_argument [44949,45007]"
    },
    {
      "src": "comment: // Set the interest rate model (depends on block number / borrow index) [1931,2002]",
      "dest": "comment: // Set the interest rate model (depends on block number / borrow index) [1931,2002]"
    },
    {
      "src": "comment: /**      * @notice Calculates the exchange rate from the underlying to the CToken      * @dev This function does not accrue interest before calculating the exchange rate      * @return (error code, calculated exchange rate scaled by 1e18)      */ [13552,13798]",
      "dest": "comment: /**      * @notice Return the borrow balance of account based on stored data      * @param account The address whose balance should be calculated      * @return the calculated balance or 0 if error code is non-zero      */ [9536,9758]"
    },
    {
      "src": ",: , [16184,16185]",
      "dest": ",: , [13537,13538]"
    },
    {
      "src": "identifier: sender [20127,20133]",
      "dest": "identifier: sender [16241,16247]"
    },
    {
      "src": "function: function [5231,5239]",
      "dest": "function: function [2622,2630]"
    },
    {
      "src": "type_name [11001,11005]",
      "dest": "type_name [9464,9468]"
    },
    {
      "src": "return_statement [36909,36968]",
      "dest": "return_statement [23544,23603]"
    },
    {
      "src": "member_expression [51583,51623]",
      "dest": "member_expression [35346,35386]"
    },
    {
      "src": "call_argument [7709,7742]",
      "dest": "call_argument [5100,5133]"
    },
    {
      "src": "call_argument [60667,60672]",
      "dest": "call_argument [44138,44143]"
    },
    {
      "src": "(: ( [55610,55611]",
      "dest": "(: ( [39373,39374]"
    },
    {
      "src": "type_name [37754,37758]",
      "dest": "type_name [24389,24393]"
    },
    {
      "src": "call_argument [52049,52057]",
      "dest": "call_argument [35812,35820]"
    },
    {
      "src": "{: { [38965,38966]",
      "dest": "{: { [25685,25686]"
    },
    {
      "src": "parameter [13340,13344]",
      "dest": "parameter [11238,11242]"
    },
    {
      "src": "comment: /* We fetch the amount the borrower owes, with accumulated interest */ [38507,38577]",
      "dest": "comment: /* We fetch the amount the borrower owes, with accumulated interest */ [25442,25512]"
    },
    {
      "src": "identifier: SET_RESERVE_FACTOR_ACCRUE_INTEREST_FAILED [53777,53818]",
      "dest": "identifier: SET_RESERVE_FACTOR_ACCRUE_INTEREST_FAILED [37540,37581]"
    },
    {
      "src": "call_argument [52022,52023]",
      "dest": "call_argument [35785,35786]"
    },
    {
      "src": "return: return [37954,37960]",
      "dest": "return: return [24589,24595]"
    },
    {
      "src": "primitive_type [44762,44766]",
      "dest": "primitive_type [31252,31256]"
    },
    {
      "src": "uint: uint [31443,31447]",
      "dest": "uint: uint [18381,18385]"
    },
    {
      "src": "member_expression [62631,62653]",
      "dest": "member_expression [46102,46124]"
    },
    {
      "src": "block_statement [44895,45010]",
      "dest": "block_statement [31385,31500]"
    },
    {
      "src": "identifier: require [2073,2080]",
      "dest": "identifier: require [2073,2080]"
    },
    {
      "src": "call_argument [40014,40033]",
      "dest": "call_argument [26715,26734]"
    },
    {
      "src": "): ) [44357,44358]",
      "dest": "): ) [30847,30848]"
    },
    {
      "src": "call_expression [62626,62703]",
      "dest": "call_expression [46097,46174]"
    },
    {
      "src": "\": \" [151,152]",
      "dest": "\": \" [151,152]"
    },
    {
      "src": "return: return [44909,44915]",
      "dest": "return: return [31399,31405]"
    },
    {
      "src": "identifier: fail [32798,32802]",
      "dest": "identifier: fail [20028,20032]"
    },
    {
      "src": "): ) [45256,45257]",
      "dest": "): ) [31746,31747]"
    },
    {
      "src": "(: ( [64348,64349]",
      "dest": "(: ( [47819,47820]"
    },
    {
      "src": "identifier: nonReentrant [24351,24363]",
      "dest": "identifier: nonReentrant [16662,16674]"
    },
    {
      "src": "import: import [63,69]",
      "dest": "import: import [63,69]"
    },
    {
      "src": "identifier: require [1482,1489]",
      "dest": "identifier: require [1482,1489]"
    },
    {
      "src": "): ) [44994,44995]",
      "dest": "): ) [31484,31485]"
    },
    {
      "src": "parameter [7300,7307]",
      "dest": "parameter [4691,4698]"
    },
    {
      "src": "call_argument [9495,9509]",
      "dest": "call_argument [6460,6474]"
    },
    {
      "src": "binary_expression [35642,35671]",
      "dest": "binary_expression [22277,22306]"
    },
    {
      "src": ".: . [50730,50731]",
      "dest": ".: . [34493,34494]"
    },
    {
      "src": "identifier: NO_ERROR [63313,63321]",
      "dest": "identifier: NO_ERROR [46784,46792]"
    },
    {
      "src": "type_cast_expression [19758,19778]",
      "dest": "type_cast_expression [15872,15892]"
    },
    {
      "src": "identifier: reduceAmount [60674,60686]",
      "dest": "identifier: reduceAmount [44145,44157]"
    },
    {
      "src": "return_statement [50713,50788]",
      "dest": "return_statement [34476,34551]"
    },
    {
      "src": "identifier: getBlockNumber [38180,38194]",
      "dest": "identifier: getBlockNumber [25115,25129]"
    },
    {
      "src": "): ) [47232,47233]",
      "dest": "): ) [33752,33753]"
    },
    {
      "src": "function_definition [59046,60750]",
      "dest": "function_definition [42692,44221]"
    },
    {
      "src": "identifier: error [19711,19716]",
      "dest": "identifier: error [15825,15830]"
    },
    {
      "src": "call_expression [62922,62964]",
      "dest": "call_expression [46393,46435]"
    },
    {
      "src": ",: , [19145,19146]",
      "dest": ",: , [15259,15260]"
    },
    {
      "src": "type_name [13340,13344]",
      "dest": "type_name [11238,11242]"
    },
    {
      "src": "identifier: getCashPrior [63590,63602]",
      "dest": "identifier: getCashPrior [47061,47073]"
    },
    {
      "src": "uint: uint [31377,31381]",
      "dest": "uint: uint [18315,18319]"
    },
    {
      "src": "(: ( [42058,42059]",
      "dest": "(: ( [28548,28549]"
    },
    {
      "src": "identifier: account [10549,10556]",
      "dest": "identifier: account [9012,9019]"
    },
    {
      "src": "parameter [63892,63904]",
      "dest": "parameter [47363,47375]"
    },
    {
      "src": "call_argument [37883,37888]",
      "dest": "call_argument [24518,24523]"
    },
    {
      "src": "}: } [55863,55864]",
      "dest": "}: } [39626,39627]"
    },
    {
      "src": "address: address [50575,50582]",
      "dest": "address: address [34338,34345]"
    },
    {
      "src": "=: = [15637,15638]",
      "dest": "=: = [12990,12991]"
    },
    {
      "src": "variable_declaration [2978,2990]",
      "dest": "variable_declaration [12177,12194]"
    },
    {
      "src": "identifier: repayAmount [39053,39064]",
      "dest": "identifier: repayAmount [25773,25784]"
    },
    {
      "src": "call_argument [46310,46327]",
      "dest": "call_argument [32800,32817]"
    },
    {
      "src": "identifier: Error [53751,53756]",
      "dest": "identifier: Error [37514,37519]"
    },
    {
      "src": "(: ( [9507,9508]",
      "dest": "(: ( [6472,6473]"
    },
    {
      "src": "call_expression [58542,58554]",
      "dest": "call_expression [42188,42200]"
    },
    {
      "src": "emit_statement [52075,52127]",
      "dest": "emit_statement [35838,35890]"
    },
    {
      "src": "): ) [59117,59118]",
      "dest": "): ) [42763,42764]"
    },
    {
      "src": "(: ( [46169,46170]",
      "dest": "(: ( [32659,32660]"
    },
    {
      "src": "identifier: MARKET_NOT_FRESH [56725,56741]",
      "dest": "identifier: MARKET_NOT_FRESH [40488,40504]"
    },
    {
      "src": "): ) [59495,59496]",
      "dest": "): ) [43141,43142]"
    },
    {
      "src": "array_access [7326,7346]",
      "dest": "array_access [4717,4737]"
    },
    {
      "src": "return: return [8885,8891]",
      "dest": "return: return [5850,5856]"
    },
    {
      "src": "(: ( [44877,44878]",
      "dest": "(: ( [31367,31368]"
    },
    {
      "src": "identifier: accrualBlockNumber [38158,38176]",
      "dest": "identifier: accrualBlockNumber [25093,25111]"
    },
    {
      "src": "identifier: FailureInfo [38002,38013]",
      "dest": "identifier: FailureInfo [24637,24648]"
    },
    {
      "src": "call_expression [61464,61476]",
      "dest": "call_expression [44935,44947]"
    },
    {
      "src": "identifier: NO_ERROR [31506,31514]",
      "dest": "identifier: NO_ERROR [18444,18452]"
    },
    {
      "src": "return: return [57914,57920]",
      "dest": "return: return [41560,41566]"
    },
    {
      "src": "}: } [58776,58777]",
      "dest": "}: } [42422,42423]"
    },
    {
      "src": "function_body [55544,56041]",
      "dest": "function_body [39307,39804]"
    },
    {
      "src": "binary_expression [25333,25362]",
      "dest": "binary_expression [17644,17673]"
    },
    {
      "src": "=: = [31454,31455]",
      "dest": "=: = [18392,18393]"
    },
    {
      "src": "type_name [15556,15560]",
      "dest": "type_name [12909,12913]"
    },
    {
      "src": "address: address [26609,26616]",
      "dest": "address: address [48741,48748]"
    },
    {
      "src": "): ) [61475,61476]",
      "dest": "): ) [44946,44947]"
    },
    {
      "src": "call_expression [54661,54733]",
      "dest": "call_expression [38424,38496]"
    },
    {
      "src": "call_expression [62380,62453]",
      "dest": "call_expression [45851,45924]"
    },
    {
      "src": "primitive_type [36496,36500]",
      "dest": "primitive_type [23131,23135]"
    },
    {
      "src": "==: == [44159,44161]",
      "dest": "==: == [30649,30651]"
    },
    {
      "src": "}: } [36062,36063]",
      "dest": "}: } [22697,22698]"
    },
    {
      "src": "identifier: msg [42439,42442]",
      "dest": "identifier: msg [28929,28932]"
    },
    {
      "src": "=: = [50987,50988]",
      "dest": "=: = [34750,34751]"
    },
    {
      "src": "variable_declaration [8471,8496]",
      "dest": "variable_declaration [5783,5808]"
    },
    {
      "src": "identifier: repayAmount [37723,37734]",
      "dest": "identifier: repayAmount [24358,24369]"
    },
    {
      "src": "parameter [52414,52449]",
      "dest": "parameter [36177,36212]"
    },
    {
      "src": "member_expression [37837,37867]",
      "dest": "member_expression [24472,24502]"
    },
    {
      "src": ".: . [44391,44392]",
      "dest": ".: . [30881,30882]"
    },
    {
      "src": "primitive_type [16117,16121]",
      "dest": "primitive_type [13470,13474]"
    },
    {
      "src": "uint: uint [19758,19762]",
      "dest": "uint: uint [15872,15876]"
    },
    {
      "src": "(: ( [5882,5883]",
      "dest": "(: ( [3273,3274]"
    },
    {
      "src": "primitive_type [58289,58293]",
      "dest": "primitive_type [41935,41939]"
    },
    {
      "src": "identifier: BORROW_CASH_NOT_AVAILABLE [33062,33087]",
      "dest": "identifier: BORROW_CASH_NOT_AVAILABLE [20292,20317]"
    },
    {
      "src": "): ) [8378,8379]",
      "dest": "): ) [5640,5641]"
    },
    {
      "src": "primitive_type [50575,50590]",
      "dest": "primitive_type [34338,34353]"
    },
    {
      "src": "call_argument [19163,19178]",
      "dest": "call_argument [15277,15292]"
    },
    {
      "src": "\": \" [103,104]",
      "dest": "\": \" [103,104]"
    },
    {
      "src": "uint: uint [8368,8372]",
      "dest": "uint: uint [5630,5634]"
    },
    {
      "src": "member_expression [19202,19216]",
      "dest": "member_expression [15316,15330]"
    },
    {
      "src": "uint: uint [57922,57926]",
      "dest": "uint: uint [41568,41572]"
    },
    {
      "src": "return: return [50713,50719]",
      "dest": "return: return [34476,34482]"
    },
    {
      "src": "identifier: getBlockNumber [9135,9149]",
      "dest": "identifier: getBlockNumber [6100,6114]"
    },
    {
      "src": "uint: uint [19706,19710]",
      "dest": "uint: uint [15820,15824]"
    },
    {
      "src": "call_argument [31849,31861]",
      "dest": "call_argument [18787,18799]"
    },
    {
      "src": "emit: emit [63209,63213]",
      "dest": "emit: emit [46680,46684]"
    },
    {
      "src": "identifier: Error [50725,50730]",
      "dest": "identifier: Error [34488,34493]"
    },
    {
      "src": "==: == [10630,10632]",
      "dest": "==: == [9093,9095]"
    },
    {
      "src": "if: if [44849,44851]",
      "dest": "if: if [31339,31341]"
    },
    {
      "src": "function_body [53498,54002]",
      "dest": "function_body [37261,37765]"
    },
    {
      "src": "(: ( [52780,52781]",
      "dest": "(: ( [36543,36544]"
    },
    {
      "src": "call_argument [50745,50786]",
      "dest": "call_argument [34508,34549]"
    },
    {
      "src": "parameter [48041,48060]",
      "dest": "parameter [49165,49184]"
    },
    {
      "src": "identifier: borrower [36431,36439]",
      "dest": "identifier: borrower [23066,23074]"
    },
    {
      "src": "string_literal [52813,52843]",
      "dest": "string_literal [36576,36606]"
    },
    {
      "src": "return_statement [44188,44279]",
      "dest": "return_statement [30678,30769]"
    },
    {
      "src": ".: . [62666,62667]",
      "dest": ".: . [46137,46138]"
    },
    {
      "src": "identifier: Error [33019,33024]",
      "dest": "identifier: Error [20249,20254]"
    },
    {
      "src": "[: [ [11820,11821]",
      "dest": "[: [ [9958,9959]"
    },
    {
      "src": "expression_statement [33942,34017]",
      "dest": "expression_statement [20752,20808]"
    },
    {
      "src": "call_argument [5857,5860]",
      "dest": "call_argument [3248,3251]"
    },
    {
      "src": "{: { [11007,11008]",
      "dest": "{: { [9470,9471]"
    },
    {
      "src": "(: ( [54636,54637]",
      "dest": "(: ( [38399,38400]"
    },
    {
      "src": "member_expression [54890,54905]",
      "dest": "member_expression [38653,38668]"
    },
    {
      "src": "variable_declaration_tuple [45216,45257]",
      "dest": "variable_declaration_tuple [31706,31747]"
    },
    {
      "src": "]: ] [7052,7053]",
      "dest": "]: ] [4443,4444]"
    },
    {
      "src": "number_literal: 1 [38961,38962]",
      "dest": "number_literal: 1 [25681,25682]"
    },
    {
      "src": "\": \" [52813,52814]",
      "dest": "\": \" [36576,36577]"
    },
    {
      "src": "identifier: NewComptroller [53016,53030]",
      "dest": "identifier: NewComptroller [36779,36793]"
    },
    {
      "src": "call_expression [44788,44839]",
      "dest": "call_expression [31278,31329]"
    },
    {
      "src": "return_type_definition [25265,25279]",
      "dest": "return_type_definition [17576,17590]"
    },
    {
      "src": "): ) [7667,7668]",
      "dest": "): ) [5058,5059]"
    },
    {
      "src": "primitive_type [2088,2092]",
      "dest": "primitive_type [2088,2092]"
    },
    {
      "src": "parameter [61142,61180]",
      "dest": "parameter [44613,44651]"
    },
    {
      "src": "call_argument [10166,10190]",
      "dest": "call_argument [8629,8653]"
    },
    {
      "src": "type_name [19684,19688]",
      "dest": "type_name [15798,15802]"
    },
    {
      "src": "function_definition [6919,7060]",
      "dest": "function_definition [4310,4451]"
    },
    {
      "src": "identifier: vars [39980,39984]",
      "dest": "identifier: vars [26685,26689]"
    },
    {
      "src": "if: if [25329,25331]",
      "dest": "if: if [17640,17642]"
    },
    {
      "src": "identifier: oldAdmin [51811,51819]",
      "dest": "identifier: oldAdmin [35574,35582]"
    },
    {
      "src": "{: { [55628,55629]",
      "dest": "{: { [39391,39392]"
    },
    {
      "src": "=: = [41686,41687]",
      "dest": "=: = [28176,28177]"
    },
    {
      "src": "): ) [43804,43805]",
      "dest": "): ) [30294,30295]"
    },
    {
      "src": "if_statement [32733,32873]",
      "dest": "if_statement [19963,20103]"
    },
    {
      "src": "): ) [43575,43576]",
      "dest": "): ) [30065,30066]"
    },
    {
      "src": ",: , [44945,44946]",
      "dest": ",: , [31435,31436]"
    },
    {
      "src": "primitive_type [36441,36445]",
      "dest": "primitive_type [23076,23080]"
    },
    {
      "src": "identifier: accrualBlockNumberPrior [16462,16485]",
      "dest": "identifier: accrualBlockNumberPrior [13791,13814]"
    },
    {
      "src": ",: , [18461,18462]",
      "dest": ",: , [14759,14760]"
    },
    {
      "src": "identifier: SET_RESERVE_FACTOR_ADMIN_CHECK [54476,54506]",
      "dest": "identifier: SET_RESERVE_FACTOR_ADMIN_CHECK [38239,38269]"
    },
    {
      "src": "): ) [43571,43572]",
      "dest": "): ) [30061,30062]"
    },
    {
      "src": "identifier: _setInterestRateModel [61120,61141]",
      "dest": "identifier: _setInterestRateModel [44591,44612]"
    },
    {
      "src": "member_expression [44947,44994]",
      "dest": "member_expression [31437,31484]"
    },
    {
      "src": "(: ( [56433,56434]",
      "dest": "(: ( [40196,40197]"
    },
    {
      "src": "): ) [19216,19217]",
      "dest": "): ) [15330,15331]"
    },
    {
      "src": "identifier: accountBorrowsNew [39985,40002]",
      "dest": "identifier: accountBorrowsNew [26690,26707]"
    },
    {
      "src": "primitive_type [48136,48140]",
      "dest": "primitive_type [49260,49264]"
    },
    {
      "src": "): ) [33087,33088]",
      "dest": "): ) [20317,20318]"
    },
    {
      "src": "primitive_type [46329,46336]",
      "dest": "primitive_type [32819,32826]"
    },
    {
      "src": "type_cast_expression [45802,45827]",
      "dest": "type_cast_expression [32292,32317]"
    },
    {
      "src": ",: , [40695,40696]",
      "dest": ",: , [27155,27156]"
    },
    {
      "src": "): ) [52449,52450]",
      "dest": "): ) [36212,36213]"
    },
    {
      "src": "==: == [46162,46164]",
      "dest": "==: == [32652,32654]"
    },
    {
      "src": "primitive_type [35226,35230]",
      "dest": "primitive_type [21861,21865]"
    },
    {
      "src": "comment: // Check caller is admin [59201,59225]",
      "dest": "comment: // Check caller is admin [42847,42871]"
    },
    {
      "src": "(: ( [59493,59494]",
      "dest": "(: ( [43139,43140]"
    },
    {
      "src": "(: ( [33988,33989]",
      "dest": "(: ( [20779,20780]"
    },
    {
      "src": "}: } [31868,31869]",
      "dest": "}: } [18806,18807]"
    },
    {
      "src": "internal: internal [37736,37744]",
      "dest": "internal: internal [24371,24379]"
    },
    {
      "src": "address: address [43149,43156]",
      "dest": "address: address [29639,29646]"
    },
    {
      "src": "call_expression [36003,36056]",
      "dest": "call_expression [22638,22691]"
    },
    {
      "src": "binary_expression [53551,53580]",
      "dest": "binary_expression [37314,37343]"
    },
    {
      "src": "}: } [12701,12702]",
      "dest": "}: } [10599,10600]"
    },
    {
      "src": "type_name [41675,41679]",
      "dest": "type_name [28165,28169]"
    },
    {
      "src": "visibility [10980,10986]",
      "dest": "visibility [9443,9449]"
    },
    {
      "src": "comment: // borrowFresh emits borrow-specific logs on errors, so we don't need to [31737,31809]",
      "dest": "comment: // borrowFresh emits borrow-specific logs on errors, so we don't need to [18675,18747]"
    },
    {
      "src": "call_argument [60688,60704]",
      "dest": "call_argument [44159,44175]"
    },
    {
      "src": "call_argument [5392,5406]",
      "dest": "call_argument [2783,2797]"
    },
    {
      "src": "block_statement [59497,59598]",
      "dest": "block_statement [43143,43244]"
    },
    {
      "src": "return: return [62373,62379]",
      "dest": "return: return [45844,45850]"
    },
    {
      "src": "member_expression [39694,39710]",
      "dest": "member_expression [26414,26430]"
    },
    {
      "src": "uint: uint [37822,37826]",
      "dest": "uint: uint [24457,24461]"
    },
    {
      "src": "=: = [40004,40005]",
      "dest": "=: = [26708,26709]"
    },
    {
      "src": "(: ( [10588,10589]",
      "dest": "(: ( [9051,9052]"
    },
    {
      "src": "function: function [9126,9134]",
      "dest": "function: function [6091,6099]"
    },
    {
      "src": "uint: uint [62152,62156]",
      "dest": "uint: uint [45623,45627]"
    },
    {
      "src": "{: { [53498,53499]",
      "dest": "{: { [37261,37262]"
    },
    {
      "src": "block_statement [36586,36808]",
      "dest": "block_statement [23221,23443]"
    },
    {
      "src": "visibility [41622,41630]",
      "dest": "visibility [28112,28120]"
    },
    {
      "src": "assignment_expression [2158,2170]",
      "dest": "assignment_expression [2158,2170]"
    },
    {
      "src": "(: ( [55115,55116]",
      "dest": "(: ( [38878,38879]"
    },
    {
      "src": "if_statement [44849,45010]",
      "dest": "if_statement [31339,31500]"
    },
    {
      "src": "assignment_expression [40523,40575]",
      "dest": "assignment_expression [26983,27035]"
    },
    {
      "src": ",: , [5855,5856]",
      "dest": ",: , [3246,3247]"
    },
    {
      "src": "parameter [56440,56444]",
      "dest": "parameter [40203,40207]"
    },
    {
      "src": "}: } [35894,35895]",
      "dest": "}: } [22529,22530]"
    },
    {
      "src": "identifier: redeemAmountIn [26661,26675]",
      "dest": "identifier: redeemAmountIn [48793,48807]"
    },
    {
      "src": "}: } [45009,45010]",
      "dest": "}: } [31499,31500]"
    },
    {
      "src": "address: address [5734,5741]",
      "dest": "address: address [3125,3132]"
    },
    {
      "src": "return: return [55779,55785]",
      "dest": "return: return [39542,39548]"
    },
    {
      "src": "primitive_type [1071,1077]",
      "dest": "primitive_type [1071,1077]"
    },
    {
      "src": "type_cast_expression [57922,57942]",
      "dest": "type_cast_expression [41568,41588]"
    },
    {
      "src": "): ) [19936,19937]",
      "dest": "): ) [16050,16051]"
    },
    {
      "src": ".: . [1691,1692]",
      "dest": ".: . [1691,1692]"
    },
    {
      "src": "type_name [35577,35581]",
      "dest": "type_name [22212,22216]"
    },
    {
      "src": "primitive_type [54344,54348]",
      "dest": "primitive_type [38107,38111]"
    },
    {
      "src": "call_argument [51102,51117]",
      "dest": "call_argument [34865,34880]"
    },
    {
      "src": "{: { [52541,52542]",
      "dest": "{: { [36304,36305]"
    },
    {
      "src": ",: , [19937,19938]",
      "dest": ",: , [16051,16052]"
    },
    {
      "src": "function: function [11464,11472]",
      "dest": "function: function [9763,9771]"
    },
    {
      "src": ",: , [54462,54463]",
      "dest": ",: , [38225,38226]"
    },
    {
      "src": "call_argument [44201,44227]",
      "dest": "call_argument [30691,30717]"
    },
    {
      "src": "type_name [14374,14378]",
      "dest": "type_name [12077,12081]"
    },
    {
      "src": "identifier: borrower [38652,38660]",
      "dest": "identifier: borrower [20659,20667]"
    },
    {
      "src": ",: , [1701,1702]",
      "dest": ",: , [1701,1702]"
    },
    {
      "src": ".: . [42251,42252]",
      "dest": ".: . [28741,28742]"
    },
    {
      "src": "identifier: FailureInfo [53765,53776]",
      "dest": "identifier: FailureInfo [37528,37539]"
    },
    {
      "src": "): ) [11005,11006]",
      "dest": "): ) [9468,9469]"
    },
    {
      "src": "type_name [37147,37151]",
      "dest": "type_name [23782,23786]"
    },
    {
      "src": "primitive_type [31495,31499]",
      "dest": "primitive_type [18433,18437]"
    },
    {
      "src": "function_definition [8288,8973]",
      "dest": "function_definition [5550,5938]"
    },
    {
      "src": "(: ( [15139,15140]",
      "dest": "(: ( [12492,12493]"
    },
    {
      "src": "type_name [45773,45777]",
      "dest": "type_name [32263,32267]"
    },
    {
      "src": "call_argument [35832,35879]",
      "dest": "call_argument [22467,22514]"
    },
    {
      "src": "uint: uint [54344,54348]",
      "dest": "uint: uint [38107,38111]"
    },
    {
      "src": "==: == [44547,44549]",
      "dest": "==: == [31037,31039]"
    },
    {
      "src": "call_argument [57820,57835]",
      "dest": "call_argument [41466,41481]"
    },
    {
      "src": "identifier: FailureInfo [38249,38260]",
      "dest": "identifier: FailureInfo [25184,25195]"
    },
    {
      "src": "identifier: FailureInfo [56743,56754]",
      "dest": "identifier: FailureInfo [40506,40517]"
    },
    {
      "src": "identifier: getCashPrior [14346,14358]",
      "dest": "identifier: getCashPrior [12049,12061]"
    },
    {
      "src": "}: } [32651,32652]",
      "dest": "}: } [19589,19590]"
    },
    {
      "src": "call_argument [14572,14585]",
      "dest": "call_argument [12149,12162]"
    },
    {
      "src": "function_definition [25190,25719]",
      "dest": "function_definition [17501,18030]"
    },
    {
      "src": "type_name [13891,13895]",
      "dest": "type_name [11616,11620]"
    },
    {
      "src": "primitive_type [37147,37151]",
      "dest": "primitive_type [23782,23786]"
    },
    {
      "src": "=: = [34944,34945]",
      "dest": "=: = [21549,21550]"
    },
    {
      "src": "call_argument [45810,45826]",
      "dest": "call_argument [32300,32316]"
    },
    {
      "src": "parameter [58239,58256]",
      "dest": "parameter [41885,41902]"
    },
    {
      "src": "type_name [8362,8366]",
      "dest": "type_name [5624,5628]"
    },
    {
      "src": "type_name [43149,43156]",
      "dest": "type_name [29639,29646]"
    },
    {
      "src": "uint: uint [55185,55189]",
      "dest": "uint: uint [38948,38952]"
    },
    {
      "src": "): ) [25278,25279]",
      "dest": "): ) [17589,17590]"
    },
    {
      "src": "visibility [48118,48126]",
      "dest": "visibility [49242,49250]"
    },
    {
      "src": "=: = [45978,45979]",
      "dest": "=: = [32468,32469]"
    },
    {
      "src": "(: ( [39686,39687]",
      "dest": "(: ( [26406,26407]"
    },
    {
      "src": "member_expression [23910,23924]",
      "dest": "member_expression [24978,24992]"
    },
    {
      "src": "member_expression [41732,41746]",
      "dest": "member_expression [28222,28236]"
    },
    {
      "src": "parameter [19690,19694]",
      "dest": "parameter [15804,15808]"
    },
    {
      "src": "variable_declaration [45773,45788]",
      "dest": "variable_declaration [32263,32278]"
    },
    {
      "src": "identifier: repayBorrowBehalfInternal [36397,36422]",
      "dest": "identifier: repayBorrowBehalfInternal [23032,23057]"
    },
    {
      "src": "string_literal [1703,1731]",
      "dest": "string_literal [1703,1731]"
    },
    {
      "src": "}: } [56040,56041]",
      "dest": "}: } [39803,39804]"
    },
    {
      "src": ".: . [46576,46577]",
      "dest": ".: . [33096,33097]"
    },
    {
      "src": "return: return [19190,19196]",
      "dest": "return: return [15304,15310]"
    },
    {
      "src": "function_body [36502,36974]",
      "dest": "function_body [23137,23609]"
    },
    {
      "src": "user_defined_type [950,967]",
      "dest": "user_defined_type [950,967]"
    },
    {
      "src": ",: , [59975,59976]",
      "dest": ",: , [43621,43622]"
    },
    {
      "src": "): ) [41703,41704]",
      "dest": "): ) [28193,28194]"
    },
    {
      "src": "identifier: vars [38343,38347]",
      "dest": "identifier: vars [25278,25282]"
    },
    {
      "src": ".: . [40249,40250]",
      "dest": ".: . [26815,26816]"
    },
    {
      "src": "member_expression [41913,41964]",
      "dest": "member_expression [28403,28454]"
    },
    {
      "src": "\": \" [10678,10679]",
      "dest": "\": \" [9141,9142]"
    },
    {
      "src": "{: { [15171,15172]",
      "dest": "{: { [12524,12525]"
    },
    {
      "src": "{: { [54418,54419]",
      "dest": "{: { [38181,38182]"
    },
    {
      "src": "call_expression [24607,24619]",
      "dest": "call_expression [16918,16930]"
    },
    {
      "src": "identifier: admin [52534,52539]",
      "dest": "identifier: admin [36297,36302]"
    },
    {
      "src": "returns: returns [63928,63935]",
      "dest": "returns: returns [47399,47406]"
    },
    {
      "src": "return: return [7012,7018]",
      "dest": "return: return [4403,4409]"
    },
    {
      "src": "): ) [10163,10164]",
      "dest": "): ) [8626,8627]"
    },
    {
      "src": "modifier_definition [64523,64700]",
      "dest": "modifier_definition [49397,49574]"
    },
    {
      "src": "comment: // Set the comptroller [1585,1607]",
      "dest": "comment: // Set the comptroller [1585,1607]"
    },
    {
      "src": "=: = [6461,6462]",
      "dest": "=: = [3852,3853]"
    },
    {
      "src": "return_type_definition [63619,63633]",
      "dest": "return_type_definition [47090,47104]"
    },
    {
      "src": "]: ] [34892,34893]",
      "dest": "]: ] [21497,21498]"
    },
    {
      "src": "]: ] [6505,6506]",
      "dest": "]: ] [3896,3897]"
    },
    {
      "src": "(: ( [44200,44201]",
      "dest": "(: ( [30690,30691]"
    },
    {
      "src": "identifier: Error [10149,10154]",
      "dest": "identifier: Error [8612,8617]"
    },
    {
      "src": "identifier: allowed [32633,32640]",
      "dest": "identifier: allowed [19571,19578]"
    },
    {
      "src": "): ) [19777,19778]",
      "dest": "): ) [15891,15892]"
    },
    {
      "src": "{: { [25364,25365]",
      "dest": "{: { [17675,17676]"
    },
    {
      "src": "primitive_type [63937,63941]",
      "dest": "primitive_type [47408,47412]"
    },
    {
      "src": "comment: /**      * @dev Function to simply retrieve block number      *  This exists mainly for inheriting test contracts to stub this result.      */ [8979,9121]",
      "dest": "comment: /**      * @dev Function to simply retrieve block number      *  This exists mainly for inheriting test contracts to stub this result.      */ [5944,6086]"
    },
    {
      "src": "identifier: interestIndex [12547,12560]",
      "dest": "identifier: interestIndex [10556,10569]"
    },
    {
      "src": "import_directive [185,226]",
      "dest": "import_directive [185,226]"
    },
    {
      "src": "identifier: ReservesReduced [60651,60666]",
      "dest": "identifier: ReservesReduced [44122,44137]"
    },
    {
      "src": "identifier: principalTimesIndex [12511,12530]",
      "dest": "identifier: principalTimesIndex [10520,10539]"
    },
    {
      "src": "comment: /**      * @notice Sender repays their own borrow      * @param repayAmount The amount to repay      * @return (uint, uint) An error code (0=success, otherwise a failure, see ErrorReporter.sol), and the actual repayment amount.      */ [35259,35494]",
      "dest": "comment: /**      * @notice Sender repays their own borrow      * @param repayAmount The amount to repay      * @return (uint, uint) An error code (0=success, otherwise a failure, see ErrorReporter.sol), and the actual repayment amount.      */ [21894,22129]"
    },
    {
      "src": "identifier: FailureInfo [44028,44039]",
      "dest": "identifier: FailureInfo [30518,30529]"
    },
    {
      "src": "identifier: nonReentrant [12889,12901]",
      "dest": "identifier: nonReentrant [10787,10799]"
    },
    {
      "src": ",: , [55978,55979]",
      "dest": ",: , [39741,39742]"
    },
    {
      "src": "identifier: seizeTokens [45607,45618]",
      "dest": "identifier: seizeTokens [32097,32108]"
    },
    {
      "src": "return: return [43991,43997]",
      "dest": "return: return [30481,30487]"
    },
    {
      "src": "): ) [55625,55626]",
      "dest": "): ) [39388,39389]"
    },
    {
      "src": "identifier: newInterestRateModel [61708,61728]",
      "dest": "identifier: newInterestRateModel [45179,45199]"
    },
    {
      "src": "returns: returns [15483,15490]",
      "dest": "returns: returns [12836,12843]"
    },
    {
      "src": "primitive_type [7262,7269]",
      "dest": "primitive_type [4653,4660]"
    },
    {
      "src": "uint: uint [44873,44877]",
      "dest": "uint: uint [31363,31367]"
    },
    {
      "src": "identifier: balanceOf [7252,7261]",
      "dest": "identifier: balanceOf [4643,4652]"
    },
    {
      "src": "(: ( [62151,62152]",
      "dest": "(: ( [45622,45623]"
    },
    {
      "src": "call_expression [60601,60635]",
      "dest": "call_expression [44072,44106]"
    },
    {
      "src": "visibility [54326,54334]",
      "dest": "visibility [38089,38097]"
    },
    {
      "src": "): ) [38196,38197]",
      "dest": "): ) [25131,25132]"
    },
    {
      "src": "=: = [25301,25302]",
      "dest": "=: = [17612,17613]"
    },
    {
      "src": "call_argument [36569,36583]",
      "dest": "call_argument [23204,23218]"
    },
    {
      "src": "(: ( [44195,44196]",
      "dest": "(: ( [30685,30686]"
    },
    {
      "src": "call_argument [45380,45420]",
      "dest": "call_argument [31870,31910]"
    },
    {
      "src": "assignment_expression [55972,56012]",
      "dest": "assignment_expression [39735,39775]"
    },
    {
      "src": "}: } [24673,24674]",
      "dest": "}: } [16984,16985]"
    },
    {
      "src": "call_expression [62587,62603]",
      "dest": "call_expression [46058,46074]"
    },
    {
      "src": "identifier: totalReservesNew [60688,60704]",
      "dest": "identifier: totalReservesNew [44159,44175]"
    },
    {
      "src": "=: = [19717,19718]",
      "dest": "=: = [15831,15832]"
    },
    {
      "src": "identifier: oldInterestRateModel [63241,63261]",
      "dest": "identifier: oldInterestRateModel [46712,46732]"
    },
    {
      "src": "identifier: RepayBorrow [40678,40689]",
      "dest": "identifier: RepayBorrow [27138,27149]"
    },
    {
      "src": "comment: /**      * @notice Transfer `tokens` tokens from `src` to `dst` by `spender`      * @dev Called by both `transfer` and `transferFrom` internally      * @param spender The address of the account performing the transfer      * @param src The address of the source account      * @param dst The address of the destination account      * @param tokens The number of tokens to transfer      * @return Whether or not the transfer succeeded      */ [2375,2816]",
      "dest": "comment: /**      * @notice Returns the estimated per-block borrow interest rate for this cToken after some change      * @return The borrow interest rate per block, scaled by 1e18      */ [6869,7048]"
    },
    {
      "src": ",: , [43517,43518]",
      "dest": ",: , [30007,30008]"
    },
    {
      "src": "return: return [33007,33013]",
      "dest": "return: return [20237,20243]"
    },
    {
      "src": "identifier: amount [6407,6413]",
      "dest": "identifier: amount [3798,3804]"
    },
    {
      "src": "identifier: allowed [37926,37933]",
      "dest": "identifier: allowed [24561,24568]"
    },
    {
      "src": ",: , [46308,46309]",
      "dest": ",: , [32798,32799]"
    },
    {
      "src": "{: { [31433,31434]",
      "dest": "{: { [18371,18372]"
    },
    {
      "src": "comment: /* Read the previous values out of storage */ [15833,15878]",
      "dest": "comment: /* Read the previous values out of storage */ [13186,13231]"
    },
    {
      "src": "member_expression [38601,38620]",
      "dest": "member_expression [25521,25540]"
    },
    {
      "src": "(: ( [40230,40231]",
      "dest": "(: ( [26796,26797]"
    },
    {
      "src": "): ) [38195,38196]",
      "dest": "): ) [25130,25131]"
    },
    {
      "src": "visibility [35546,35554]",
      "dest": "visibility [22181,22189]"
    },
    {
      "src": "call_expression [5830,5874]",
      "dest": "call_expression [3221,3265]"
    },
    {
      "src": "call_argument [33723,33735]",
      "dest": "call_argument [20729,20741]"
    },
    {
      "src": "call_argument [55116,55140]",
      "dest": "call_argument [38879,38903]"
    },
    {
      "src": "primitive_type [63628,63632]",
      "dest": "primitive_type [47099,47103]"
    },
    {
      "src": "identifier: FailureInfo [24621,24632]",
      "dest": "identifier: FailureInfo [16932,16943]"
    },
    {
      "src": "): ) [44838,44839]",
      "dest": "): ) [31328,31329]"
    },
    {
      "src": "identifier: LiquidateBorrow [46272,46287]",
      "dest": "identifier: LiquidateBorrow [32762,32777]"
    },
    {
      "src": "=: = [33415,33416]",
      "dest": "=: = [25541,25542]"
    },
    {
      "src": "call_argument [45902,45912]",
      "dest": "call_argument [32392,32402]"
    },
    {
      "src": "type_name [62094,62111]",
      "dest": "type_name [45565,45582]"
    },
    {
      "src": "(: ( [19635,19636]",
      "dest": "(: ( [15749,15750]"
    },
    {
      "src": "return: return [19912,19918]",
      "dest": "return: return [16026,16032]"
    },
    {
      "src": "variable_declaration_statement [36512,36542]",
      "dest": "variable_declaration_statement [23147,23177]"
    },
    {
      "src": "emit_statement [6534,6570]",
      "dest": "emit_statement [3925,3961]"
    },
    {
      "src": "): ) [32975,32976]",
      "dest": "): ) [20205,20206]"
    },
    {
      "src": "comment: /**       * @notice Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.       * @dev Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.       * @param newPendingAdmin New pending admin.       * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)       */ [50149,50544]",
      "dest": "comment: /**       * @notice Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.       * @dev Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.       * @param newPendingAdmin New pending admin.       * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)       */ [33912,34307]"
    },
    {
      "src": "identifier: repayAmount [36044,36055]",
      "dest": "identifier: repayAmount [22679,22690]"
    },
    {
      "src": ",: , [986,987]",
      "dest": ",: , [986,987]"
    },
    {
      "src": "binary_expression [1205,1224]",
      "dest": "binary_expression [1205,1224]"
    },
    {
      "src": "tuple_expression [35812,35884]",
      "dest": "tuple_expression [22447,22519]"
    },
    {
      "src": "string_literal [1328,1365]",
      "dest": "string_literal [1328,1365]"
    },
    {
      "src": "variable_declaration_statement [16117,16215]",
      "dest": "variable_declaration_statement [13470,13568]"
    },
    {
      "src": "function: function [871,879]",
      "dest": "function: function [871,879]"
    },
    {
      "src": "identifier: error [31448,31453]",
      "dest": "identifier: error [18386,18391]"
    },
    {
      "src": "identifier: error [24394,24399]",
      "dest": "identifier: error [16705,16710]"
    },
    {
      "src": "identifier: NO_ERROR [25353,25361]",
      "dest": "identifier: NO_ERROR [17664,17672]"
    },
    {
      "src": "function: function [13289,13297]",
      "dest": "function: function [11187,11195]"
    },
    {
      "src": "identifier: vars [40014,40018]",
      "dest": "identifier: vars [26715,26719]"
    },
    {
      "src": "parameter [24373,24377]",
      "dest": "parameter [16684,16688]"
    },
    {
      "src": "type_cast_expression [15792,15812]",
      "dest": "type_cast_expression [13145,13165]"
    },
    {
      "src": "block_statement [54640,54744]",
      "dest": "block_statement [38403,38507]"
    },
    {
      "src": "uint: uint [28537,28541]",
      "dest": "uint: uint [14556,14560]"
    },
    {
      "src": "comment: // accrueInterest emits logs on errors, but on top of that we want to log the fact that an attempted reduce reserves failed. [55642,55766]",
      "dest": "comment: // accrueInterest emits logs on errors, but on top of that we want to log the fact that an attempted reduce reserves failed. [39405,39529]"
    },
    {
      "src": "identifier: liquidator [47314,47324]",
      "dest": "identifier: liquidator [33834,33844]"
    },
    {
      "src": "{: { [43457,43458]",
      "dest": "{: { [29947,29948]"
    },
    {
      "src": "): ) [32528,32529]",
      "dest": "): ) [19466,19467]"
    },
    {
      "src": "identifier: accountBorrowsNew [40736,40753]",
      "dest": "identifier: accountBorrowsNew [27196,27213]"
    },
    {
      "src": "expression_statement [34869,34922]",
      "dest": "expression_statement [21474,21527]"
    },
    {
      "src": "identifier: vars [33668,33672]",
      "dest": "identifier: vars [20678,20682]"
    },
    {
      "src": "call_argument [45405,45419]",
      "dest": "call_argument [31895,31909]"
    },
    {
      "src": "modifier_invocation [25252,25264]",
      "dest": "modifier_invocation [17563,17575]"
    },
    {
      "src": "identifier: UNAUTHORIZED [54450,54462]",
      "dest": "identifier: UNAUTHORIZED [38213,38225]"
    },
    {
      "src": "uint: uint [46566,46570]",
      "dest": "uint: uint [33086,33090]"
    },
    {
      "src": "): ) [45314,45315]",
      "dest": "): ) [31804,31805]"
    },
    {
      "src": "}: } [31727,31728]",
      "dest": "}: } [18665,18666]"
    },
    {
      "src": "uint: uint [40950,40954]",
      "dest": "uint: uint [27440,27444]"
    },
    {
      "src": "identifier: _setComptroller [52398,52413]",
      "dest": "identifier: _setComptroller [36161,36176]"
    },
    {
      "src": "member_expression [12960,12974]",
      "dest": "member_expression [10858,10872]"
    },
    {
      "src": "identifier: decimals [2206,2214]",
      "dest": "identifier: decimals [2206,2214]"
    },
    {
      "src": "(: ( [37972,37973]",
      "dest": "(: ( [24607,24608]"
    },
    {
      "src": "(: ( [43478,43479]",
      "dest": "(: ( [29968,29969]"
    },
    {
      "src": "call_argument [46003,46013]",
      "dest": "call_argument [32493,32503]"
    },
    {
      "src": "variable_declaration [35599,35609]",
      "dest": "variable_declaration [22234,22244]"
    },
    {
      "src": "call_argument [6548,6551]",
      "dest": "call_argument [3939,3942]"
    },
    {
      "src": "expression_statement [39048,39079]",
      "dest": "expression_statement [25768,25799]"
    },
    {
      "src": "uint: uint [11001,11005]",
      "dest": "uint: uint [9464,9468]"
    },
    {
      "src": ".: . [12044,12045]",
      "dest": ".: . [10182,10183]"
    },
    {
      "src": "member_expression [40523,40561]",
      "dest": "member_expression [26983,27021]"
    },
    {
      "src": "call_argument [62655,62702]",
      "dest": "call_argument [46126,46173]"
    },
    {
      "src": "block_statement [32777,32873]",
      "dest": "block_statement [20007,20103]"
    },
    {
      "src": "(: ( [38959,38960]",
      "dest": "(: ( [25679,25680]"
    },
    {
      "src": "parameter [8374,8378]",
      "dest": "parameter [5636,5640]"
    },
    {
      "src": "external: external [9746,9754]",
      "dest": "external: external [6711,6719]"
    },
    {
      "src": "address: address [7262,7269]",
      "dest": "address: address [4653,4660]"
    },
    {
      "src": ",: , [64367,64368]",
      "dest": ",: , [47838,47839]"
    },
    {
      "src": "identifier: CTokenInterface [43185,43200]",
      "dest": "identifier: CTokenInterface [29675,29690]"
    },
    {
      "src": "public: public [12882,12888]",
      "dest": "public: public [10780,10786]"
    },
    {
      "src": "identifier: ACCEPT_ADMIN_PENDING_ADMIN_CHECK [51697,51729]",
      "dest": "identifier: ACCEPT_ADMIN_PENDING_ADMIN_CHECK [35460,35492]"
    },
    {
      "src": "identifier: liquidator [48070,48080]",
      "dest": "identifier: liquidator [49194,49204]"
    },
    {
      "src": "identifier: Borrow [35019,35025]",
      "dest": "identifier: Borrow [21624,21630]"
    },
    {
      "src": ".: . [24451,24452]",
      "dest": ".: . [16762,16763]"
    },
    {
      "src": "type_name [2862,2869]",
      "dest": "type_name [48066,48073]"
    },
    {
      "src": "comment: /**      * @notice updates the interest rate model (*requires fresh interest accrual)      * @dev Admin function to update the interest rate model      * @param newInterestRateModel the new interest rate model to use      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)      */ [61742,62053]",
      "dest": "comment: /**      * @notice updates the interest rate model (*requires fresh interest accrual)      * @dev Admin function to update the interest rate model      * @param newInterestRateModel the new interest rate model to use      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)      */ [45213,45524]"
    },
    {
      "src": "identifier: totalBorrows [10208,10220]",
      "dest": "identifier: totalBorrows [8671,8683]"
    },
    {
      "src": "return_statement [51653,51731]",
      "dest": "return_statement [35416,35494]"
    },
    {
      "src": "type_name [59169,59173]",
      "dest": "type_name [42815,42819]"
    },
    {
      "src": "function: function [61111,61119]",
      "dest": "function: function [44582,44590]"
    },
    {
      "src": "): ) [59257,59258]",
      "dest": "): ) [42903,42904]"
    },
    {
      "src": "member_expression [59772,59818]",
      "dest": "member_expression [43418,43464]"
    },
    {
      "src": "identifier: Exp [7679,7682]",
      "dest": "identifier: Exp [5070,5073]"
    },
    {
      "src": "uint: uint [61214,61218]",
      "dest": "uint: uint [44685,44689]"
    },
    {
      "src": "string: string [1071,1077]",
      "dest": "string: string [1071,1077]"
    },
    {
      "src": "call_argument [53765,53818]",
      "dest": "call_argument [37528,37581]"
    },
    {
      "src": "comment: // Store pendingAdmin with value newPendingAdmin [50917,50965]",
      "dest": "comment: // Store pendingAdmin with value newPendingAdmin [34680,34728]"
    },
    {
      "src": "identifier: totalReserves [9525,9538]",
      "dest": "identifier: totalReserves [6490,6503]"
    },
    {
      "src": "binary_expression [54811,54862]",
      "dest": "binary_expression [38574,38625]"
    },
    {
      "src": "call_argument [59977,60015]",
      "dest": "call_argument [43623,43661]"
    },
    {
      "src": "): ) [58376,58377]",
      "dest": "): ) [42022,42023]"
    },
    {
      "src": "identifier: transferFrom [5721,5733]",
      "dest": "identifier: transferFrom [3112,3124]"
    },
    {
      "src": "identifier: error [41905,41910]",
      "dest": "identifier: error [28395,28400]"
    },
    {
      "src": "identifier: borrower [48090,48098]",
      "dest": "identifier: borrower [49214,49222]"
    },
    {
      "src": "(: ( [53550,53551]",
      "dest": "(: ( [37313,37314]"
    },
    {
      "src": "comment: /**      * @notice Initialize the money market      * @param comptroller_ The address of the Comptroller      * @param interestRateModel_ The address of the interest rate model      * @param initialExchangeRateMantissa_ The initial exchange rate, scaled by 1e18      * @param name_ EIP-20 name of this token      * @param symbol_ EIP-20 symbol of this token      * @param decimals_ EIP-20 decimal precision of this token      */ [438,866]",
      "dest": "comment: /**      * @notice Initialize the money market      * @param comptroller_ The address of the Comptroller      * @param interestRateModel_ The address of the interest rate model      * @param initialExchangeRateMantissa_ The initial exchange rate, scaled by 1e18      * @param name_ EIP-20 name of this token      * @param symbol_ EIP-20 symbol of this token      * @param decimals_ EIP-20 decimal precision of this token      */ [438,866]"
    },
    {
      "src": "member_expression [62338,62348]",
      "dest": "member_expression [45809,45819]"
    },
    {
      "src": "identifier: accountBorrowsNew [40496,40513]",
      "dest": "identifier: accountBorrowsNew [26956,26973]"
    },
    {
      "src": "identifier: accountBorrows [34800,34814]",
      "dest": "identifier: accountBorrows [21405,21419]"
    },
    {
      "src": "type_name [53430,53434]",
      "dest": "type_name [37193,37197]"
    },
    {
      "src": "variable_declaration_statement [62252,62291]",
      "dest": "variable_declaration_statement [45723,45762]"
    },
    {
      "src": "expression_statement [55035,55084]",
      "dest": "expression_statement [38798,38847]"
    },
    {
      "src": "identifier: seizeTokens [46356,46367]",
      "dest": "identifier: seizeTokens [32846,32857]"
    },
    {
      "src": "identifier: borrowBalanceStoredInternal [11048,11075]",
      "dest": "identifier: borrowBalanceStoredInternal [5737,5764]"
    },
    {
      "src": "(: ( [58547,58548]",
      "dest": "(: ( [42193,42194]"
    },
    {
      "src": "if: if [24428,24430]",
      "dest": "if: if [16739,16741]"
    },
    {
      "src": "identifier: NO_ERROR [57933,57941]",
      "dest": "identifier: NO_ERROR [41579,41587]"
    },
    {
      "src": "if_statement [13932,14953]",
      "dest": "if_statement [11657,12306]"
    },
    {
      "src": "): ) [24417,24418]",
      "dest": "): ) [16728,16729]"
    },
    {
      "src": "assignment_expression [2011,2063]",
      "dest": "assignment_expression [2011,2063]"
    },
    {
      "src": "function: function [8288,8296]",
      "dest": "function: function [5550,5558]"
    },
    {
      "src": ",: , [46354,46355]",
      "dest": ",: , [32844,32845]"
    },
    {
      "src": "identifier: interestIndex [40548,40561]",
      "dest": "identifier: interestIndex [27008,27021]"
    },
    {
      "src": "(: ( [5308,5309]",
      "dest": "(: ( [2699,2700]"
    },
    {
      "src": "primitive_type [25224,25228]",
      "dest": "primitive_type [17535,17539]"
    },
    {
      "src": "uint: uint [24323,24327]",
      "dest": "uint: uint [16634,16638]"
    },
    {
      "src": "member_expression [45980,46002]",
      "dest": "member_expression [32470,32492]"
    },
    {
      "src": "call_argument [35818,35830]",
      "dest": "call_argument [22453,22465]"
    },
    {
      "src": "identifier: REPAY_BORROW_FRESHNESS_CHECK [38261,38289]",
      "dest": "identifier: REPAY_BORROW_FRESHNESS_CHECK [25196,25224]"
    },
    {
      "src": "uint: uint [63937,63941]",
      "dest": "uint: uint [47408,47412]"
    },
    {
      "src": "comment: // Ensure invoke comptroller.isComptroller() returns true [52707,52764]",
      "dest": "comment: // Ensure invoke comptroller.isComptroller() returns true [36470,36527]"
    },
    {
      "src": "user_defined_type [11766,11780]",
      "dest": "user_defined_type [9904,9918]"
    },
    {
      "src": ":: : [18129,18130]",
      "dest": ":: : [14619,14620]"
    },
    {
      "src": "identifier: actualRepayAmount [40977,40994]",
      "dest": "identifier: actualRepayAmount [27467,27484]"
    },
    {
      "src": "identifier: msg [36032,36035]",
      "dest": "identifier: msg [22667,22670]"
    },
    {
      "src": "modifier_invocation [35555,35567]",
      "dest": "modifier_invocation [22190,22202]"
    },
    {
      "src": ".: . [50756,50757]",
      "dest": ".: . [34519,34520]"
    },
    {
      "src": "identifier: msg [5845,5848]",
      "dest": "identifier: msg [3236,3239]"
    },
    {
      "src": "=: = [51939,51940]",
      "dest": "=: = [35702,35703]"
    },
    {
      "src": "if: if [38671,38673]",
      "dest": "if: if [24863,24865]"
    },
    {
      "src": "identifier: LIQUIDATE_FRESHNESS_CHECK [43775,43800]",
      "dest": "identifier: LIQUIDATE_FRESHNESS_CHECK [30265,30290]"
    },
    {
      "src": ",: , [12975,12976]",
      "dest": ",: , [10873,10874]"
    },
    {
      "src": "identifier: accountTokens [7818,7831]",
      "dest": "identifier: accountTokens [5184,5197]"
    },
    {
      "src": "call_argument [18177,18190]",
      "dest": "call_argument [14667,14680]"
    },
    {
      "src": "identifier: totalReserves [60452,60465]",
      "dest": "identifier: totalReserves [43923,43936]"
    },
    {
      "src": "number_literal: 0 [24809,24810]",
      "dest": "number_literal: 0 [17120,17121]"
    },
    {
      "src": "call_argument [16175,16184]",
      "dest": "call_argument [13528,13537]"
    },
    {
      "src": "if_statement [15720,15823]",
      "dest": "if_statement [13073,13176]"
    },
    {
      "src": "identifier: NO_ERROR [19769,19777]",
      "dest": "identifier: NO_ERROR [15883,15891]"
    },
    {
      "src": "comment: // _setInterestRateModelFresh emits interest-rate-model-update-specific logs on errors, so we don't need to. [61557,61665]",
      "dest": "comment: // _setInterestRateModelFresh emits interest-rate-model-update-specific logs on errors, so we don't need to. [45028,45136]"
    },
    {
      "src": "member_expression [50725,50743]",
      "dest": "member_expression [34488,34506]"
    },
    {
      "src": "): ) [54506,54507]",
      "dest": "): ) [38269,38270]"
    },
    {
      "src": "member_expression [16143,16174]",
      "dest": "member_expression [13496,13527]"
    },
    {
      "src": "): ) [56689,56690]",
      "dest": "): ) [40452,40453]"
    },
    {
      "src": "parameter [24323,24340]",
      "dest": "parameter [16634,16651]"
    },
    {
      "src": "\": \" [46187,46188]",
      "dest": "\": \" [32677,32678]"
    },
    {
      "src": "(: ( [58541,58542]",
      "dest": "(: ( [42187,42188]"
    },
    {
      "src": "type_name [52648,52668]",
      "dest": "type_name [36411,36431]"
    },
    {
      "src": "member_expression [43763,43800]",
      "dest": "member_expression [30253,30290]"
    },
    {
      "src": "identifier: AccrueInterest [19100,19114]",
      "dest": "identifier: AccrueInterest [15214,15228]"
    },
    {
      "src": "tuple_expression [23904,23949]",
      "dest": "tuple_expression [24972,24997]"
    },
    {
      "src": "binary_expression [45567,45618]",
      "dest": "binary_expression [32057,32108]"
    },
    {
      "src": "false [64615,64620]",
      "dest": "false [49489,49494]"
    },
    {
      "src": "primitive_type [8390,8394]",
      "dest": "primitive_type [5652,5656]"
    },
    {
      "src": "call_argument [35074,35094]",
      "dest": "call_argument [21679,21699]"
    },
    {
      "src": "identifier: exchangeRateStoredInternal [8740,8766]",
      "dest": "identifier: exchangeRateStoredInternal [11261,11287]"
    },
    {
      "src": "emit: emit [55094,55098]",
      "dest": "emit: emit [38857,38861]"
    },
    {
      "src": "visibility [5278,5286]",
      "dest": "visibility [2669,2677]"
    },
    {
      "src": "): ) [55582,55583]",
      "dest": "): ) [39345,39346]"
    },
    {
      "src": "emit: emit [60646,60650]",
      "dest": "emit: emit [44117,44121]"
    },
    {
      "src": "uint: uint [58289,58293]",
      "dest": "uint: uint [41935,41939]"
    },
    {
      "src": ",: , [32327,32328]",
      "dest": ",: , [19265,19266]"
    },
    {
      "src": "uint: uint [31427,31431]",
      "dest": "uint: uint [18365,18369]"
    },
    {
      "src": "if_statement [43668,43816]",
      "dest": "if_statement [30158,30306]"
    },
    {
      "src": "): ) [60704,60705]",
      "dest": "): ) [44175,44176]"
    },
    {
      "src": "(: ( [56688,56689]",
      "dest": "(: ( [40451,40452]"
    },
    {
      "src": "primitive_type [37090,37094]",
      "dest": "primitive_type [23725,23729]"
    },
    {
      "src": ",: , [59545,59546]",
      "dest": ",: , [43191,43192]"
    },
    {
      "src": "comment: // accrueInterest emits logs on errors, but we still want to log the fact that an attempted borrow failed [31531,31636]",
      "dest": "comment: // accrueInterest emits logs on errors, but we still want to log the fact that an attempted borrow failed [18469,18574]"
    },
    {
      "src": "return_type_definition [15483,15497]",
      "dest": "return_type_definition [12836,12850]"
    },
    {
      "src": "binary_expression [58348,58377]",
      "dest": "binary_expression [41994,42023]"
    },
    {
      "src": "): ) [10593,10594]",
      "dest": "): ) [9056,9057]"
    },
    {
      "src": "parameter [5262,5276]",
      "dest": "parameter [2653,2667]"
    },
    {
      "src": "parameter [9440,9444]",
      "dest": "parameter [6405,6409]"
    },
    {
      "src": "identifier: sender [42443,42449]",
      "dest": "identifier: sender [28933,28939]"
    },
    {
      "src": ".: . [35661,35662]",
      "dest": ".: . [22296,22297]"
    },
    {
      "src": "comment: // Check newReserveFactor ≤ maxReserveFactor [54754,54800]",
      "dest": "comment: // Check newReserveFactor ≤ maxReserveFactor [38517,38563]"
    },
    {
      "src": "member_expression [40600,40620]",
      "dest": "member_expression [27060,27080]"
    },
    {
      "src": "comment: // (No safe failures beyond this point) [60105,60144]",
      "dest": "comment: // (No safe failures beyond this point) [43751,43790]"
    },
    {
      "src": "): ) [46036,46037]",
      "dest": "): ) [32526,32527]"
    },
    {
      "src": "primitive_type [8316,8323]",
      "dest": "primitive_type [5578,5585]"
    },
    {
      "src": "expression_statement [40454,40514]",
      "dest": "expression_statement [26914,26974]"
    },
    {
      "src": "emit_statement [63209,63285]",
      "dest": "emit_statement [46680,46756]"
    },
    {
      "src": "parameter [53492,53496]",
      "dest": "parameter [37255,37259]"
    },
    {
      "src": "call_argument [45567,45618]",
      "dest": "call_argument [32057,32108]"
    },
    {
      "src": "binary_expression [16232,16275]",
      "dest": "binary_expression [13585,13628]"
    },
    {
      "src": "uint: uint [2888,2892]",
      "dest": "uint: uint [48092,48096]"
    },
    {
      "src": "identifier: FailureInfo [36745,36756]",
      "dest": "identifier: FailureInfo [23380,23391]"
    },
    {
      "src": "\": \" [93,94]",
      "dest": "\": \" [93,94]"
    },
    {
      "src": "comment: /* If repayAmount == -1, repayAmount = accountBorrows */ [38871,38927]",
      "dest": "comment: /* If repayAmount == -1, repayAmount = accountBorrows */ [25591,25647]"
    },
    {
      "src": "identifier: FailureInfo [54464,54475]",
      "dest": "identifier: FailureInfo [38227,38238]"
    },
    {
      "src": "(: ( [43489,43490]",
      "dest": "(: ( [29979,29980]"
    },
    {
      "src": "if_statement [25329,25575]",
      "dest": "if_statement [17640,17886]"
    },
    {
      "src": "=: = [60466,60467]",
      "dest": "=: = [43937,43938]"
    },
    {
      "src": "return_statement [23897,23950]",
      "dest": "return_statement [24965,24998]"
    },
    {
      "src": "call_argument [42439,42449]",
      "dest": "call_argument [28929,28939]"
    },
    {
      "src": "string [70,94]",
      "dest": "string [70,94]"
    },
    {
      "src": "primitive_type [14329,14333]",
      "dest": "primitive_type [12032,12036]"
    },
    {
      "src": "variable_declaration [15970,15988]",
      "dest": "variable_declaration [13323,13341]"
    },
    {
      "src": "struct_member [31996,32017]",
      "dest": "struct_member [18934,18955]"
    },
    {
      "src": "type_name [10963,10970]",
      "dest": "type_name [9426,9433]"
    },
    {
      "src": "): ) [6413,6414]",
      "dest": "): ) [3804,3805]"
    },
    {
      "src": "parameter [53430,53459]",
      "dest": "parameter [37193,37222]"
    },
    {
      "src": "!=: != [41724,41726]",
      "dest": "!=: != [28214,28216]"
    },
    {
      "src": "uint: uint [58357,58361]",
      "dest": "uint: uint [42003,42007]"
    },
    {
      "src": "true [2358,2362]",
      "dest": "true [2358,2362]"
    },
    {
      "src": "primitive_type [7630,7637]",
      "dest": "primitive_type [5021,5028]"
    },
    {
      "src": "identifier: msg [31837,31840]",
      "dest": "identifier: msg [18775,18778]"
    },
    {
      "src": "function: function [51451,51459]",
      "dest": "function: function [35214,35222]"
    },
    {
      "src": "identifier: error [53757,53762]",
      "dest": "identifier: error [37520,37525]"
    },
    {
      "src": "comment: ///////////////////////// [60037,60062]",
      "dest": "comment: ///////////////////////// [43683,43708]"
    },
    {
      "src": "): ) [2923,2924]",
      "dest": "): ) [48127,48128]"
    },
    {
      "src": "): ) [58293,58294]",
      "dest": "): ) [41939,41940]"
    },
    {
      "src": "identifier: error [31486,31491]",
      "dest": "identifier: error [18424,18429]"
    },
    {
      "src": "call_argument [46025,46036]",
      "dest": "call_argument [32515,32526]"
    },
    {
      "src": "identifier: msg [25684,25687]",
      "dest": "identifier: msg [17995,17998]"
    },
    {
      "src": "unary_expression [44555,44557]",
      "dest": "unary_expression [31045,31047]"
    },
    {
      "src": "primitive_type [56499,56503]",
      "dest": "primitive_type [40262,40266]"
    },
    {
      "src": "primitive_type [16415,16419]",
      "dest": "primitive_type [13748,13752]"
    },
    {
      "src": "comment: /**      * @notice Accrues interest and reduces reserves by transferring from msg.sender      * @param addAmount Amount of addition to reserves      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)      */ [55218,55456]",
      "dest": "comment: /**      * @notice Accrues interest and reduces reserves by transferring from msg.sender      * @param addAmount Amount of addition to reserves      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)      */ [38981,39219]"
    },
    {
      "src": "parameter [51493,51497]",
      "dest": "parameter [35256,35260]"
    },
    {
      "src": "identifier: seizeError [46151,46161]",
      "dest": "identifier: seizeError [32641,32651]"
    },
    {
      "src": ",: , [43165,43166]",
      "dest": ",: , [29655,29656]"
    },
    {
      "src": ".: . [38482,38483]",
      "dest": ".: . [25417,25418]"
    },
    {
      "src": "(: ( [35576,35577]",
      "dest": "(: ( [22211,22212]"
    },
    {
      "src": "member_expression [59547,59586]",
      "dest": "member_expression [43193,43232]"
    },
    {
      "src": "(: ( [13935,13936]",
      "dest": "(: ( [11660,11661]"
    },
    {
      "src": "}: } [39027,39028]",
      "dest": "}: } [25747,25748]"
    },
    {
      "src": "type_name [17125,17129]",
      "dest": "type_name [14484,14488]"
    },
    {
      "src": ".: . [20126,20127]",
      "dest": ".: . [16240,16241]"
    },
    {
      "src": "\": \" [234,235]",
      "dest": "\": \" [234,235]"
    },
    {
      "src": "string_literal [1523,1573]",
      "dest": "string_literal [1523,1573]"
    },
    {
      "src": "}: } [53829,53830]",
      "dest": "}: } [37592,37593]"
    },
    {
      "src": "type_cast_expression [51627,51637]",
      "dest": "type_cast_expression [35390,35400]"
    },
    {
      "src": "binary_expression [50678,50697]",
      "dest": "binary_expression [34441,34460]"
    },
    {
      "src": "identifier: fail [52562,52566]",
      "dest": "identifier: fail [36325,36329]"
    },
    {
      "src": "return: return [24595,24601]",
      "dest": "return: return [16906,16912]"
    },
    {
      "src": "return_statement [58729,58771]",
      "dest": "return_statement [42375,42417]"
    },
    {
      "src": "block_statement [53582,53830]",
      "dest": "block_statement [37345,37593]"
    },
    {
      "src": "if: if [12026,12028]",
      "dest": "if: if [10164,10166]"
    },
    {
      "src": "primitive_type [2888,2892]",
      "dest": "primitive_type [48092,48096]"
    },
    {
      "src": "identifier: principal [12045,12054]",
      "dest": "identifier: principal [10183,10192]"
    },
    {
      "src": "comment: /* Verify market's block number equals current block number */ [32662,32724]",
      "dest": "comment: /* Verify market's block number equals current block number */ [19892,19954]"
    },
    {
      "src": "emit_statement [55094,55168]",
      "dest": "emit_statement [38857,38931]"
    },
    {
      "src": ".: . [31686,31687]",
      "dest": ".: . [18624,18625]"
    },
    {
      "src": "function: function [15123,15131]",
      "dest": "function: function [12476,12484]"
    },
    {
      "src": "]: ] [34823,34824]",
      "dest": "]: ] [21428,21429]"
    },
    {
      "src": "\": \" [123,124]",
      "dest": "\": \" [123,124]"
    },
    {
      "src": "(: ( [24606,24607]",
      "dest": "(: ( [16917,16918]"
    },
    {
      "src": "\": \" [64589,64590]",
      "dest": "\": \" [49463,49464]"
    },
    {
      "src": "(: ( [62630,62631]",
      "dest": "(: ( [46101,46102]"
    },
    {
      "src": "identifier: addAmount [56002,56011]",
      "dest": "identifier: addAmount [39765,39774]"
    },
    {
      "src": "primitive_type [37064,37068]",
      "dest": "primitive_type [23699,23703]"
    },
    {
      "src": "identifier: cTokenCollateral [45810,45826]",
      "dest": "identifier: cTokenCollateral [32300,32316]"
    },
    {
      "src": "primitive_type [32423,32427]",
      "dest": "primitive_type [19361,19365]"
    },
    {
      "src": "=: = [8409,8410]",
      "dest": "=: = [5671,5672]"
    },
    {
      "src": "identifier: amount [5768,5774]",
      "dest": "identifier: amount [3159,3165]"
    },
    {
      "src": "identifier: totalBorrowsNew [35079,35094]",
      "dest": "identifier: totalBorrowsNew [21684,21699]"
    },
    {
      "src": "call_argument [23910,23924]",
      "dest": "call_argument [24978,24992]"
    },
    {
      "src": "): ) [19982,19983]",
      "dest": "): ) [16096,16097]"
    },
    {
      "src": "comment: // accrueInterest emits logs on errors, but we still want to log the fact that an attempted liquidation failed [41763,41873]",
      "dest": "comment: // accrueInterest emits logs on errors, but we still want to log the fact that an attempted liquidation failed [28253,28363]"
    },
    {
      "src": ",: , [62964,62965]",
      "dest": ",: , [46435,46436]"
    },
    {
      "src": "type_name [6993,7000]",
      "dest": "type_name [4384,4391]"
    },
    {
      "src": "!=: != [54408,54410]",
      "dest": "!=: != [38171,38173]"
    },
    {
      "src": "assignment_expression [64601,64620]",
      "dest": "assignment_expression [49475,49494]"
    },
    {
      "src": "variable_declaration [61214,61224]",
      "dest": "variable_declaration [44685,44695]"
    },
    {
      "src": "call_argument [14547,14556]",
      "dest": "call_argument [12123,12132]"
    },
    {
      "src": "tuple_expression [55972,55981]",
      "dest": "tuple_expression [39735,39744]"
    },
    {
      "src": "array_access [7818,7838]",
      "dest": "array_access [5184,5204]"
    },
    {
      "src": "returns: returns [50617,50624]",
      "dest": "returns: returns [34380,34387]"
    },
    {
      "src": "identifier: totalReservesNew [19022,19038]",
      "dest": "identifier: totalReservesNew [15136,15152]"
    },
    {
      "src": "comment: // _setReserveFactorFresh emits reserve-factor-specific logs on errors, so we don't need to. [53839,53931]",
      "dest": "comment: // _setReserveFactorFresh emits reserve-factor-specific logs on errors, so we don't need to. [37602,37694]"
    },
    {
      "src": "call_argument [5371,5374]",
      "dest": "call_argument [2762,2765]"
    },
    {
      "src": "call_argument [59772,59818]",
      "dest": "call_argument [43418,43464]"
    },
    {
      "src": "array_access [6483,6515]",
      "dest": "array_access [3874,3906]"
    },
    {
      "src": "call_expression [17260,17295]",
      "dest": "call_expression [14335,14370]"
    },
    {
      "src": ",: , [59303,59304]",
      "dest": ",: , [42949,42950]"
    },
    {
      "src": "identifier: Error [63307,63312]",
      "dest": "identifier: Error [46778,46783]"
    },
    {
      "src": "(: ( [15723,15724]",
      "dest": "(: ( [13076,13077]"
    },
    {
      "src": "block_statement [38198,38305]",
      "dest": "block_statement [25133,25240]"
    },
    {
      "src": "): ) [46367,46368]",
      "dest": "): ) [32857,32858]"
    },
    {
      "src": "identifier: actualAddAmount [57820,57835]",
      "dest": "identifier: actualAddAmount [41466,41481]"
    },
    {
      "src": "false: false [64615,64620]",
      "dest": "false: false [49489,49494]"
    },
    {
      "src": "(: ( [7739,7740]",
      "dest": "(: ( [5130,5131]"
    },
    {
      "src": "type_cast_expression [35226,35246]",
      "dest": "type_cast_expression [21861,21881]"
    },
    {
      "src": "identifier: cTokenCollateral [42474,42490]",
      "dest": "identifier: cTokenCollateral [28964,28980]"
    },
    {
      "src": "identifier: _setInterestRateModelFresh [62067,62093]",
      "dest": "identifier: _setInterestRateModelFresh [45538,45564]"
    },
    {
      "src": "[: [ [7339,7340]",
      "dest": "[: [ [4730,4731]"
    },
    {
      "src": "): ) [45844,45845]",
      "dest": "): ) [32334,32335]"
    },
    {
      "src": "function_body [52473,53107]",
      "dest": "function_body [36236,36870]"
    },
    {
      "src": "state_mutability [63614,63618]",
      "dest": "state_mutability [47085,47089]"
    },
    {
      "src": "identifier: _setComptroller [1627,1642]",
      "dest": "identifier: _setComptroller [1627,1642]"
    },
    {
      "src": "(: ( [54599,54600]",
      "dest": "(: ( [38362,38363]"
    },
    {
      "src": "): ) [38963,38964]",
      "dest": "): ) [25683,25684]"
    },
    {
      "src": "(: ( [25507,25508]",
      "dest": "(: ( [17818,17819]"
    },
    {
      "src": "return: return [10201,10207]",
      "dest": "return: return [8664,8670]"
    },
    {
      "src": "identifier: Error [44878,44883]",
      "dest": "identifier: Error [31368,31373]"
    },
    {
      "src": "(: ( [58238,58239]",
      "dest": "(: ( [41884,41885]"
    },
    {
      "src": "): ) [53580,53581]",
      "dest": "): ) [37343,37344]"
    },
    {
      "src": "comment: // Save current values for inclusion in log [51751,51794]",
      "dest": "comment: // Save current values for inclusion in log [35514,35557]"
    },
    {
      "src": "): ) [61180,61181]",
      "dest": "): ) [44651,44652]"
    },
    {
      "src": "identifier: SET_INTEREST_RATE_MODEL_OWNER_CHECK [62417,62452]",
      "dest": "identifier: SET_INTEREST_RATE_MODEL_OWNER_CHECK [45888,45923]"
    },
    {
      "src": "identifier: repayAmount [38940,38951]",
      "dest": "identifier: repayAmount [25660,25671]"
    },
    {
      "src": "): ) [16213,16214]",
      "dest": "): ) [13566,13567]"
    },
    {
      "src": "call_struct_argument [7710,7741]",
      "dest": "call_struct_argument [5101,5132]"
    },
    {
      "src": "return_type_definition [35568,35588]",
      "dest": "return_type_definition [22203,22223]"
    },
    {
      "src": "returns: returns [7291,7298]",
      "dest": "returns: returns [4682,4689]"
    },
    {
      "src": "uint: uint [47265,47269]",
      "dest": "uint: uint [33785,33789]"
    },
    {
      "src": "identifier: actualRepayAmount [46588,46605]",
      "dest": "identifier: actualRepayAmount [33108,33125]"
    },
    {
      "src": "}: } [59597,59598]",
      "dest": "}: } [43243,43244]"
    },
    {
      "src": "string [52813,52843]",
      "dest": "string [36576,36606]"
    },
    {
      "src": "identifier: getBlockNumber [43694,43708]",
      "dest": "identifier: getBlockNumber [30184,30198]"
    },
    {
      "src": "member_expression [62922,62962]",
      "dest": "member_expression [46393,46433]"
    },
    {
      "src": "identifier: fail [61459,61463]",
      "dest": "identifier: fail [44930,44934]"
    },
    {
      "src": ",: , [57942,57943]",
      "dest": ",: , [41588,41589]"
    },
    {
      "src": "identifier: error [42232,42237]",
      "dest": "identifier: error [28722,28727]"
    },
    {
      "src": "type_name [15492,15496]",
      "dest": "type_name [12845,12849]"
    },
    {
      "src": "type_name [19636,19640]",
      "dest": "type_name [15750,15754]"
    },
    {
      "src": "}: } [62713,62714]",
      "dest": "}: } [46184,46185]"
    },
    {
      "src": "if_statement [43439,43587]",
      "dest": "if_statement [29929,30077]"
    },
    {
      "src": "identifier: fail [24602,24606]",
      "dest": "identifier: fail [16913,16917]"
    },
    {
      "src": "return_type_definition [10992,11006]",
      "dest": "return_type_definition [9455,9469]"
    },
    {
      "src": "identifier: _addReservesFresh [56382,56399]",
      "dest": "identifier: _addReservesFresh [40145,40162]"
    },
    {
      "src": "(: ( [43973,43974]",
      "dest": "(: ( [30463,30464]"
    },
    {
      "src": ".: . [36574,36575]",
      "dest": ".: . [23209,23210]"
    },
    {
      "src": ":: : [17273,17274]",
      "dest": ":: : [14348,14349]"
    },
    {
      "src": "identifier: dst [5257,5260]",
      "dest": "identifier: dst [2648,2651]"
    },
    {
      "src": "==: == [51624,51626]",
      "dest": "==: == [35387,35389]"
    },
    {
      "src": "variable_declaration [7679,7702]",
      "dest": "variable_declaration [5070,5093]"
    },
    {
      "src": "type_name [15970,15974]",
      "dest": "type_name [13323,13327]"
    },
    {
      "src": "uint: uint [64369,64373]",
      "dest": "uint: uint [47840,47844]"
    },
    {
      "src": "return_statement [58530,58608]",
      "dest": "return_statement [42176,42254]"
    },
    {
      "src": "binary_expression [43672,43710]",
      "dest": "binary_expression [30162,30200]"
    },
    {
      "src": "uint: uint [56499,56503]",
      "dest": "uint: uint [40262,40266]"
    },
    {
      "src": "inheritance_specifier [413,431]",
      "dest": "inheritance_specifier [413,431]"
    },
    {
      "src": "identifier: msg [57808,57811]",
      "dest": "identifier: msg [41454,41457]"
    },
    {
      "src": "call_expression [36525,36541]",
      "dest": "call_expression [23160,23176]"
    },
    {
      "src": "expression_statement [64601,64621]",
      "dest": "expression_statement [49475,49495]"
    },
    {
      "src": "): ) [57959,57960]",
      "dest": "): ) [41605,41606]"
    },
    {
      "src": "): ) [33735,33736]",
      "dest": "): ) [20741,20742]"
    },
    {
      "src": "identifier: actualRepayAmount [40250,40267]",
      "dest": "identifier: actualRepayAmount [26816,26833]"
    },
    {
      "src": "assignment_expression [55035,55083]",
      "dest": "assignment_expression [38798,38846]"
    },
    {
      "src": "]: ] [40546,40547]",
      "dest": "]: ] [27006,27007]"
    },
    {
      "src": "number_literal: 0 [43454,43455]",
      "dest": "number_literal: 0 [29944,29945]"
    },
    {
      "src": "function: function [6919,6927]",
      "dest": "function: function [4310,4318]"
    },
    {
      "src": "call_expression [31656,31717]",
      "dest": "call_expression [18594,18655]"
    },
    {
      "src": "(: ( [31836,31837]",
      "dest": "(: ( [18774,18775]"
    },
    {
      "src": "parameter [63628,63632]",
      "dest": "parameter [47099,47103]"
    },
    {
      "src": "memory: memory [17054,17060]",
      "dest": "memory: memory [14300,14306]"
    },
    {
      "src": "identifier: borrowSnapshot [12532,12546]",
      "dest": "identifier: borrowSnapshot [10541,10555]"
    },
    {
      "src": "comment: /**      * @notice Gets balance of this contract in terms of the underlying      * @dev This excludes the value of the current message, if any      * @return The quantity of underlying owned by this contract      */ [63361,63576]",
      "dest": "comment: /**      * @notice Gets balance of this contract in terms of the underlying      * @dev This excludes the value of the current message, if any      * @return The quantity of underlying owned by this contract      */ [46832,47047]"
    },
    {
      "src": "identifier: NewAdmin [52040,52048]",
      "dest": "identifier: NewAdmin [35803,35811]"
    },
    {
      "src": "(: ( [51157,51158]",
      "dest": "(: ( [34920,34921]"
    },
    {
      "src": "member_expression [40755,40775]",
      "dest": "member_expression [27215,27235]"
    },
    {
      "src": "(: ( [25273,25274]",
      "dest": "(: ( [17584,17585]"
    },
    {
      "src": "{: { [44560,44561]",
      "dest": "{: { [31050,31051]"
    },
    {
      "src": "return: return [6579,6585]",
      "dest": "return: return [3970,3976]"
    },
    {
      "src": "string [161,183]",
      "dest": "string [161,183]"
    },
    {
      "src": "function: function [32282,32290]",
      "dest": "function: function [19220,19228]"
    },
    {
      "src": "identifier: principal [34825,34834]",
      "dest": "identifier: principal [21430,21439]"
    },
    {
      "src": "member_expression [15797,15811]",
      "dest": "member_expression [13150,13164]"
    },
    {
      "src": "type_cast_expression [58357,58377]",
      "dest": "type_cast_expression [42003,42023]"
    },
    {
      "src": "identifier: FailureInfo [25522,25533]",
      "dest": "identifier: FailureInfo [17833,17844]"
    },
    {
      "src": ".: . [5362,5363]",
      "dest": ".: . [2753,2754]"
    },
    {
      "src": "block_statement [43712,43816]",
      "dest": "block_statement [30202,30306]"
    },
    {
      "src": "type_name [11696,11700]",
      "dest": "type_name [10501,10505]"
    },
    {
      "src": "variable_declaration_statement [37822,37913]",
      "dest": "variable_declaration_statement [24457,24548]"
    },
    {
      "src": "returns: returns [35568,35575]",
      "dest": "returns: returns [22203,22210]"
    },
    {
      "src": "(: ( [61270,61271]",
      "dest": "(: ( [44741,44742]"
    },
    {
      "src": "type_name [33109,33124]",
      "dest": "type_name [20339,20354]"
    },
    {
      "src": "identifier: comptroller [37837,37848]",
      "dest": "identifier: comptroller [24472,24483]"
    },
    {
      "src": "view: view [11527,11531]",
      "dest": "view: view [9826,9830]"
    },
    {
      "src": "call_argument [25347,25361]",
      "dest": "call_argument [17658,17672]"
    },
    {
      "src": "): ) [15769,15770]",
      "dest": "): ) [13122,13123]"
    },
    {
      "src": "parameter [54344,54348]",
      "dest": "parameter [38107,38111]"
    },
    {
      "src": "(: ( [8892,8893]",
      "dest": "(: ( [5857,5858]"
    },
    {
      "src": "(: ( [15200,15201]",
      "dest": "(: ( [12553,12554]"
    },
    {
      "src": "type_name [58289,58293]",
      "dest": "type_name [41935,41939]"
    },
    {
      "src": "identifier: vars [35050,35054]",
      "dest": "identifier: vars [21655,21659]"
    },
    {
      "src": "=: = [38996,38997]",
      "dest": "=: = [25716,25717]"
    },
    {
      "src": "{: { [7669,7670]",
      "dest": "{: { [5060,5061]"
    },
    {
      "src": "!=: != [38177,38179]",
      "dest": "!=: != [25112,25114]"
    },
    {
      "src": "): ) [44893,44894]",
      "dest": "): ) [31383,31384]"
    },
    {
      "src": "primitive_type [20879,20883]",
      "dest": "primitive_type [48500,48504]"
    },
    {
      "src": "call_argument [59305,59344]",
      "dest": "call_argument [42951,42990]"
    },
    {
      "src": "primitive_type [37179,37183]",
      "dest": "primitive_type [23814,23818]"
    },
    {
      "src": "member_expression [35231,35245]",
      "dest": "member_expression [21866,21880]"
    },
    {
      "src": "variable_declaration [37822,37834]",
      "dest": "variable_declaration [24457,24469]"
    },
    {
      "src": "=: = [40598,40599]",
      "dest": "=: = [27058,27059]"
    },
    {
      "src": "primitive_type [36423,36430]",
      "dest": "primitive_type [23058,23065]"
    },
    {
      "src": "type_cast_expression [2088,2108]",
      "dest": "type_cast_expression [2088,2108]"
    },
    {
      "src": "=: = [15580,15581]",
      "dest": "=: = [12933,12934]"
    },
    {
      "src": "identifier: borrowIndex [12372,12383]",
      "dest": "identifier: borrowIndex [10479,10490]"
    },
    {
      "src": "identifier: getCashPrior [29873,29885]",
      "dest": "identifier: getCashPrior [8145,8157]"
    },
    {
      "src": "comment: /**  * @title Compound's CToken Contract  * @notice Abstract base for CTokens  * @author Compound  */ [262,363]",
      "dest": "comment: /**  * @title Compound's CToken Contract  * @notice Abstract base for CTokens  * @author Compound  */ [262,363]"
    },
    {
      "src": "call_argument [1643,1655]",
      "dest": "call_argument [1643,1655]"
    },
    {
      "src": "(: ( [23909,23910]",
      "dest": "(: ( [24977,24978]"
    },
    {
      "src": "member_expression [55611,55625]",
      "dest": "member_expression [39374,39388]"
    },
    {
      "src": "=: = [33692,33693]",
      "dest": "=: = [20701,20702]"
    },
    {
      "src": ",: , [45238,45239]",
      "dest": ",: , [31728,31729]"
    },
    {
      "src": "returns: returns [31418,31425]",
      "dest": "returns: returns [18356,18363]"
    },
    {
      "src": "(: ( [52809,52810]",
      "dest": "(: ( [36572,36573]"
    },
    {
      "src": "uint: uint [20879,20883]",
      "dest": "uint: uint [48500,48504]"
    },
    {
      "src": "uint: uint [13891,13895]",
      "dest": "uint: uint [11616,11620]"
    },
    {
      "src": "[: [ [6501,6502]",
      "dest": "[: [ [3892,3893]"
    },
    {
      "src": "uint: uint [35528,35532]",
      "dest": "uint: uint [22163,22167]"
    },
    {
      "src": "return: return [54878,54884]",
      "dest": "return: return [38641,38647]"
    },
    {
      "src": "): ) [37938,37939]",
      "dest": "): ) [24573,24574]"
    },
    {
      "src": ".: . [45410,45411]",
      "dest": ".: . [31900,31901]"
    },
    {
      "src": "contract_body [432,64702]",
      "dest": "contract_body [432,49576]"
    },
    {
      "src": ",: , [43415,43416]",
      "dest": ",: , [29905,29906]"
    },
    {
      "src": "call_expression [1666,1732]",
      "dest": "call_expression [1666,1732]"
    },
    {
      "src": "(: ( [10066,10067]",
      "dest": "(: ( [8529,8530]"
    },
    {
      "src": "parameter [5807,5811]",
      "dest": "parameter [3198,3202]"
    },
    {
      "src": "): ) [5382,5383]",
      "dest": "): ) [2773,2774]"
    },
    {
      "src": ",: , [45420,45421]",
      "dest": ",: , [31910,31911]"
    },
    {
      "src": "(: ( [8583,8584]",
      "dest": "(: ( [9514,9515]"
    },
    {
      "src": "(: ( [52519,52520]",
      "dest": "(: ( [36282,36283]"
    },
    {
      "src": "type_name [31443,31447]",
      "dest": "type_name [18381,18385]"
    },
    {
      "src": "call_argument [43417,43428]",
      "dest": "call_argument [29907,29918]"
    },
    {
      "src": "primitive_type [5807,5811]",
      "dest": "primitive_type [3198,3202]"
    },
    {
      "src": "return_statement [33007,33089]",
      "dest": "return_statement [20237,20319]"
    },
    {
      "src": "return_type_definition [47256,47270]",
      "dest": "return_type_definition [33776,33790]"
    },
    {
      "src": "if: if [13932,13934]",
      "dest": "if: if [11657,11659]"
    },
    {
      "src": "comment: // mintFresh emits the actual Mint event if successful and logs on errors, so we don't need to [20003,20097]",
      "dest": "comment: // mintFresh emits the actual Mint event if successful and logs on errors, so we don't need to [16117,16211]"
    },
    {
      "src": "uint: uint [10144,10148]",
      "dest": "uint: uint [8607,8611]"
    },
    {
      "src": "type_name [8374,8378]",
      "dest": "type_name [5636,5640]"
    },
    {
      "src": ".: . [4961,4962]",
      "dest": ".: . [19861,19862]"
    },
    {
      "src": "if: if [56648,56650]",
      "dest": "if: if [40411,40413]"
    },
    {
      "src": ">: > [1518,1519]",
      "dest": ">: > [1518,1519]"
    },
    {
      "src": "call_argument [1328,1365]",
      "dest": "call_argument [1328,1365]"
    },
    {
      "src": "identifier: this [45839,45843]",
      "dest": "identifier: this [32329,32333]"
    },
    {
      "src": "return: return [4944,4950]",
      "dest": "return: return [19844,19850]"
    },
    {
      "src": ".: . [55616,55617]",
      "dest": ".: . [39379,39380]"
    },
    {
      "src": "identifier: error [24613,24618]",
      "dest": "identifier: error [16924,16929]"
    },
    {
      "src": "member_expression [33668,33690]",
      "dest": "member_expression [20678,20700]"
    },
    {
      "src": "}: } [39088,39089]",
      "dest": "}: } [25808,25809]"
    },
    {
      "src": "uint: uint [15556,15560]",
      "dest": "uint: uint [12909,12913]"
    },
    {
      "src": "type_name [10100,10104]",
      "dest": "type_name [8563,8567]"
    },
    {
      "src": "call_argument [34003,34015]",
      "dest": "call_argument [20794,20806]"
    },
    {
      "src": "}: } [38072,38073]",
      "dest": "}: } [24707,24708]"
    },
    {
      "src": "parameter [62094,62132]",
      "dest": "parameter [45565,45603]"
    },
    {
      "src": "type_name [14329,14333]",
      "dest": "type_name [12032,12036]"
    },
    {
      "src": "return: return [23897,23903]",
      "dest": "return: return [24965,24971]"
    },
    {
      "src": "identifier: Error [25347,25352]",
      "dest": "identifier: Error [17658,17663]"
    },
    {
      "src": "\": \" [45645,45646]",
      "dest": "\": \" [32135,32136]"
    },
    {
      "src": "(: ( [31485,31486]",
      "dest": "(: ( [18423,18424]"
    },
    {
      "src": "if: if [53547,53549]",
      "dest": "if: if [37310,37312]"
    },
    {
      "src": "identifier: FailureInfo [59305,59316]",
      "dest": "identifier: FailureInfo [42951,42962]"
    },
    {
      "src": "if_statement [58344,58618]",
      "dest": "if_statement [41990,42264]"
    },
    {
      "src": "identifier: simpleInterestFactor [17061,17081]",
      "dest": "identifier: simpleInterestFactor [14307,14327]"
    },
    {
      "src": "(: ( [43375,43376]",
      "dest": "(: ( [29865,29866]"
    },
    {
      "src": "(: ( [48135,48136]",
      "dest": "(: ( [49259,49260]"
    },
    {
      "src": "binary_expression [5830,5898]",
      "dest": "binary_expression [3221,3289]"
    },
    {
      "src": "call_argument [44229,44273]",
      "dest": "call_argument [30719,30763]"
    },
    {
      "src": "{: { [43977,43978]",
      "dest": "{: { [30467,30468]"
    },
    {
      "src": "primitive_type [45831,45838]",
      "dest": "primitive_type [32321,32328]"
    },
    {
      "src": "user_defined_type [37037,37046]",
      "dest": "user_defined_type [23672,23681]"
    },
    {
      "src": "function_definition [47163,47355]",
      "dest": "function_definition [33683,33875]"
    },
    {
      "src": "primitive_type [47265,47269]",
      "dest": "primitive_type [33785,33789]"
    },
    {
      "src": "(: ( [55790,55791]",
      "dest": "(: ( [39553,39554]"
    },
    {
      "src": "=: = [55002,55003]",
      "dest": "=: = [38765,38766]"
    },
    {
      "src": "==: == [45397,45399]",
      "dest": "==: == [31887,31889]"
    },
    {
      "src": "identifier: borrower [34697,34705]",
      "dest": "identifier: borrower [21302,21310]"
    },
    {
      "src": "parameter [43237,43241]",
      "dest": "parameter [29727,29731]"
    },
    {
      "src": "=: = [38456,38457]",
      "dest": "=: = [25391,25392]"
    },
    {
      "src": "identifier: getCashPrior [15904,15916]",
      "dest": "identifier: getCashPrior [13257,13269]"
    },
    {
      "src": "member_expression [40454,40488]",
      "dest": "member_expression [26914,26948]"
    },
    {
      "src": "variable_declaration_statement [44738,44840]",
      "dest": "variable_declaration_statement [31228,31330]"
    },
    {
      "src": "(: ( [14546,14547]",
      "dest": "(: ( [12117,12118]"
    },
    {
      "src": "uint: uint [26635,26639]",
      "dest": "uint: uint [48767,48771]"
    },
    {
      "src": "state_mutability [11527,11531]",
      "dest": "state_mutability [9826,9830]"
    },
    {
      "src": "identifier: LIQUIDATE_COMPTROLLER_REJECTION [43531,43562]",
      "dest": "identifier: LIQUIDATE_COMPTROLLER_REJECTION [30021,30052]"
    },
    {
      "src": "identifier: borrowAmount [34707,34719]",
      "dest": "identifier: borrowAmount [21312,21324]"
    },
    {
      "src": "): ) [12950,12951]",
      "dest": "): ) [10848,10849]"
    },
    {
      "src": "string [45620,45646]",
      "dest": "string [32110,32136]"
    },
    {
      "src": "visibility [64382,64390]",
      "dest": "visibility [47853,47861]"
    },
    {
      "src": "primitive_type [8356,8360]",
      "dest": "primitive_type [5618,5622]"
    },
    {
      "src": "variable_declaration_statement [17186,17206]",
      "dest": "variable_declaration_statement [14691,14797]"
    },
    {
      "src": "uint: uint [37754,37758]",
      "dest": "uint: uint [24389,24393]"
    },
    {
      "src": "function_body [7669,7950]",
      "dest": "function_body [5060,5212]"
    },
    {
      "src": "return_statement [35219,35247]",
      "dest": "return_statement [21854,21882]"
    },
    {
      "src": "{: { [59934,59935]",
      "dest": "{: { [43580,43581]"
    },
    {
      "src": "!=: != [25339,25341]",
      "dest": "!=: != [17650,17652]"
    },
    {
      "src": "(: ( [32515,32516]",
      "dest": "(: ( [19453,19454]"
    },
    {
      "src": "identifier: totalReserves [9854,9867]",
      "dest": "identifier: totalReserves [6819,6832]"
    },
    {
      "src": "number_literal: 0 [1325,1326]",
      "dest": "number_literal: 0 [1325,1326]"
    },
    {
      "src": "if: if [54393,54395]",
      "dest": "if: if [38156,38158]"
    },
    {
      "src": ".: . [55816,55817]",
      "dest": ".: . [39579,39580]"
    },
    {
      "src": "function_body [10595,10732]",
      "dest": "function_body [9058,9195]"
    },
    {
      "src": "(: ( [14358,14359]",
      "dest": "(: ( [12061,12062]"
    },
    {
      "src": "primitive_type [2919,2923]",
      "dest": "primitive_type [48123,48127]"
    },
    {
      "src": "returns: returns [5798,5805]",
      "dest": "returns: returns [3189,3196]"
    },
    {
      "src": "type_name [5807,5811]",
      "dest": "type_name [3198,3202]"
    },
    {
      "src": "): ) [55542,55543]",
      "dest": "): ) [39305,39306]"
    },
    {
      "src": "member_expression [42240,42295]",
      "dest": "member_expression [28730,28785]"
    },
    {
      "src": "{: { [53582,53583]",
      "dest": "{: { [37345,37346]"
    },
    {
      "src": "identifier: REDUCE_RESERVES_FRESH_CHECK [59559,59586]",
      "dest": "identifier: REDUCE_RESERVES_FRESH_CHECK [43205,43232]"
    },
    {
      "src": "]: ] [7345,7346]",
      "dest": "]: ] [4736,4737]"
    },
    {
      "src": "type_name [7679,7682]",
      "dest": "type_name [5070,5073]"
    },
    {
      "src": "type_name [15887,15891]",
      "dest": "type_name [13240,13244]"
    },
    {
      "src": "): ) [45646,45647]",
      "dest": "): ) [32136,32137]"
    },
    {
      "src": "binary_expression [62338,62357]",
      "dest": "binary_expression [45809,45828]"
    },
    {
      "src": "type_name [32423,32427]",
      "dest": "type_name [19361,19365]"
    },
    {
      "src": "string: string [1116,1122]",
      "dest": "string: string [1116,1122]"
    },
    {
      "src": "return: return [25665,25671]",
      "dest": "return: return [17976,17982]"
    },
    {
      "src": "identifier: sender [62342,62348]",
      "dest": "identifier: sender [45813,45819]"
    },
    {
      "src": "(: ( [38219,38220]",
      "dest": "(: ( [25154,25155]"
    },
    {
      "src": "call_argument [32803,32825]",
      "dest": "call_argument [20033,20055]"
    },
    {
      "src": "parameter [37718,37734]",
      "dest": "parameter [24353,24369]"
    },
    {
      "src": "comment: /* Return (NO_ERROR, actualAddAmount) */ [57865,57905]",
      "dest": "comment: /* Return (NO_ERROR, actualAddAmount) */ [41511,41551]"
    },
    {
      "src": "address: address [10963,10970]",
      "dest": "address: address [9426,9433]"
    },
    {
      "src": "identifier: reserveFactorMantissa [55035,55056]",
      "dest": "identifier: reserveFactorMantissa [38798,38819]"
    },
    {
      "src": "{: { [58379,58380]",
      "dest": "{: { [42025,42026]"
    },
    {
      "src": ",: , [41965,41966]",
      "dest": ",: , [28455,28456]"
    },
    {
      "src": "}: } [19223,19224]",
      "dest": "}: } [15337,15338]"
    },
    {
      "src": ".: . [51696,51697]",
      "dest": ".: . [35459,35460]"
    },
    {
      "src": "state_mutability [6979,6983]",
      "dest": "state_mutability [4370,4374]"
    },
    {
      "src": "call_expression [45372,45476]",
      "dest": "call_expression [31862,31966]"
    },
    {
      "src": "return_statement [4944,4972]",
      "dest": "return_statement [19844,19872]"
    },
    {
      "src": "parameter [11501,11516]",
      "dest": "parameter [9800,9815]"
    },
    {
      "src": "uint: uint [24441,24445]",
      "dest": "uint: uint [16752,16756]"
    },
    {
      "src": "binary_expression [10124,10164]",
      "dest": "binary_expression [8587,8627]"
    },
    {
      "src": "call_argument [46015,46023]",
      "dest": "call_argument [32505,32513]"
    },
    {
      "src": "type_name [8443,8447]",
      "dest": "type_name [5716,5720]"
    },
    {
      "src": "primitive_type [45400,45404]",
      "dest": "primitive_type [31890,31894]"
    },
    {
      "src": "return: return [43471,43477]",
      "dest": "return: return [29961,29967]"
    },
    {
      "src": ",: , [37698,37699]",
      "dest": ",: , [24333,24334]"
    },
    {
      "src": "identifier: mintAmount [20884,20894]",
      "dest": "identifier: mintAmount [48505,48515]"
    },
    {
      "src": "variable_declaration [59169,59190]",
      "dest": "variable_declaration [42815,42836]"
    },
    {
      "src": "call_argument [32489,32501]",
      "dest": "call_argument [19427,19439]"
    },
    {
      "src": "call_expression [33417,33454]",
      "dest": "call_expression [25543,25580]"
    },
    {
      "src": "identifier: mulScalarTruncateAddUInt [18416,18440]",
      "dest": "identifier: mul_ScalarTruncateAddUInt [14713,14738]"
    },
    {
      "src": "primitive_type [32464,32471]",
      "dest": "primitive_type [19402,19409]"
    },
    {
      "src": "type_name [2875,2882]",
      "dest": "type_name [48079,48086]"
    },
    {
      "src": "(: ( [8355,8356]",
      "dest": "(: ( [5617,5618]"
    },
    {
      "src": "comment: /* Verify market's block number equals current block number */ [38083,38145]",
      "dest": "comment: /* Verify market's block number equals current block number */ [25018,25080]"
    },
    {
      "src": "primitive_type [41659,41663]",
      "dest": "primitive_type [28149,28153]"
    },
    {
      "src": "call_argument [24613,24618]",
      "dest": "call_argument [16924,16929]"
    },
    {
      "src": "(: ( [11540,11541]",
      "dest": "(: ( [9839,9840]"
    },
    {
      "src": "call_expression [25672,25712]",
      "dest": "call_expression [17983,18023]"
    },
    {
      "src": "identifier: vars [40731,40735]",
      "dest": "identifier: vars [27191,27195]"
    },
    {
      "src": "): ) [54950,54951]",
      "dest": "): ) [38713,38714]"
    },
    {
      "src": "primitive_type [11001,11005]",
      "dest": "primitive_type [9464,9468]"
    },
    {
      "src": "member_expression [5392,5406]",
      "dest": "member_expression [2783,2797]"
    },
    {
      "src": "(: ( [32365,32366]",
      "dest": "(: ( [19303,19304]"
    },
    {
      "src": "primitive_type [35528,35532]",
      "dest": "primitive_type [22163,22167]"
    },
    {
      "src": ">=: >= [45604,45606]",
      "dest": ">=: >= [32094,32096]"
    },
    {
      "src": ",: , [39692,39693]",
      "dest": ",: , [26412,26413]"
    },
    {
      "src": "identifier: mantissa [17265,17273]",
      "dest": "identifier: mantissa [14340,14348]"
    },
    {
      "src": ":: : [7718,7719]",
      "dest": ":: : [5109,5110]"
    },
    {
      "src": "member_expression [36745,36792]",
      "dest": "member_expression [23380,23427]"
    },
    {
      "src": "primitive_type [52467,52471]",
      "dest": "primitive_type [36230,36234]"
    },
    {
      "src": "identifier: allowed [43308,43315]",
      "dest": "identifier: allowed [29798,29805]"
    },
    {
      "src": "call_expression [39674,39711]",
      "dest": "call_expression [26394,26431]"
    },
    {
      "src": "): ) [59093,59094]",
      "dest": "): ) [42739,42740]"
    },
    {
      "src": "{: { [44359,44360]",
      "dest": "{: { [30849,30850]"
    },
    {
      "src": "expression_statement [2011,2064]",
      "dest": "expression_statement [2011,2064]"
    },
    {
      "src": "identifier: borrowIndex [18928,18939]",
      "dest": "identifier: borrowIndex [15042,15053]"
    },
    {
      "src": "visibility [59095,59103]",
      "dest": "visibility [42741,42749]"
    },
    {
      "src": "identifier: newPendingAdmin [51119,51134]",
      "dest": "identifier: newPendingAdmin [34882,34897]"
    },
    {
      "src": "identifier: oldPendingAdmin [52096,52111]",
      "dest": "identifier: oldPendingAdmin [35859,35874]"
    },
    {
      "src": "assignment_expression [40184,40268]",
      "dest": "assignment_expression [26769,26834]"
    },
    {
      "src": "): ) [54416,54417]",
      "dest": "): ) [38179,38180]"
    },
    {
      "src": "if: if [44531,44533]",
      "dest": "if: if [31021,31023]"
    },
    {
      "src": "identifier: accountBorrows [33707,33721]",
      "dest": "identifier: accountBorrows [20713,20727]"
    },
    {
      "src": "identifier: require [52773,52780]",
      "dest": "identifier: require [36536,36543]"
    },
    {
      "src": "type_name [56530,56534]",
      "dest": "type_name [40293,40297]"
    },
    {
      "src": "): ) [12059,12060]",
      "dest": "): ) [10197,10198]"
    },
    {
      "src": "identifier: Error [40955,40960]",
      "dest": "identifier: Error [27445,27450]"
    },
    {
      "src": "=: = [43316,43317]",
      "dest": "=: = [29806,29807]"
    },
    {
      "src": "}: } [52170,52171]",
      "dest": "}: } [35933,35934]"
    },
    {
      "src": "assignment_expression [6483,6524]",
      "dest": "assignment_expression [3874,3915]"
    },
    {
      "src": "call_argument [17582,17594]",
      "dest": "call_argument [14461,14473]"
    },
    {
      "src": "binary_expression [36555,36584]",
      "dest": "binary_expression [23190,23219]"
    },
    {
      "src": "identifier: NO_ERROR [51164,51172]",
      "dest": "identifier: NO_ERROR [34927,34935]"
    },
    {
      "src": "identifier: err [37024,37027]",
      "dest": "identifier: err [23659,23662]"
    },
    {
      "src": "=: = [16141,16142]",
      "dest": "=: = [13494,13495]"
    },
    {
      "src": "identifier: sender [5351,5357]",
      "dest": "identifier: sender [2742,2748]"
    },
    {
      "src": "comment: /* Revert if borrower collateral token balance < seizeTokens */ [45487,45550]",
      "dest": "comment: /* Revert if borrower collateral token balance < seizeTokens */ [31977,32040]"
    },
    {
      "src": "!=: != [36561,36563]",
      "dest": "!=: != [23196,23198]"
    },
    {
      "src": "expression_statement [2206,2227]",
      "dest": "expression_statement [2206,2227]"
    },
    {
      "src": "assignment_expression [60452,60484]",
      "dest": "assignment_expression [43923,43955]"
    },
    {
      "src": "comment: // doTransferOut reverts if anything goes wrong, since we can't be sure if side effects occurred. [60495,60592]",
      "dest": "comment: // doTransferOut reverts if anything goes wrong, since we can't be sure if side effects occurred. [43966,44063]"
    },
    {
      "src": "return: return [62619,62625]",
      "dest": "return: return [46090,46096]"
    },
    {
      "src": "call_expression [18116,18154]",
      "dest": "call_expression [14606,14644]"
    },
    {
      "src": "memory: memory [1123,1129]",
      "dest": "memory: memory [1123,1129]"
    },
    {
      "src": "): ) [44172,44173]",
      "dest": "): ) [30662,30663]"
    },
    {
      "src": "type_name [37090,37094]",
      "dest": "type_name [23725,23729]"
    },
    {
      "src": "parameter [9769,9773]",
      "dest": "parameter [6734,6738]"
    },
    {
      "src": "identifier: oldComptroller [52669,52683]",
      "dest": "identifier: oldComptroller [36432,36446]"
    },
    {
      "src": "identifier: nonReentrant [47243,47255]",
      "dest": "identifier: nonReentrant [33763,33775]"
    },
    {
      "src": "call_argument [17852,17864]",
      "dest": "call_argument [14533,14545]"
    },
    {
      "src": "call_argument [35050,35072]",
      "dest": "call_argument [21655,21677]"
    },
    {
      "src": "comment: // (No safe failures beyond this point) [39167,39206]",
      "dest": "comment: // (No safe failures beyond this point) [25887,25926]"
    },
    {
      "src": "]: ] [7043,7044]",
      "dest": "]: ] [4434,4435]"
    },
    {
      "src": "if: if [44337,44339]",
      "dest": "if: if [30827,30829]"
    },
    {
      "src": "call_argument [32472,32476]",
      "dest": "call_argument [19410,19414]"
    },
    {
      "src": "parameter [2862,2873]",
      "dest": "parameter [48066,48077]"
    },
    {
      "src": "): ) [50786,50787]",
      "dest": "): ) [34549,34550]"
    },
    {
      "src": "call_expression [38220,38290]",
      "dest": "call_expression [25155,25225]"
    },
    {
      "src": "member_expression [55805,55852]",
      "dest": "member_expression [39568,39615]"
    },
    {
      "src": "view: view [9161,9165]",
      "dest": "view: view [6126,6130]"
    },
    {
      "src": "user_defined_type [62252,62269]",
      "dest": "user_defined_type [45723,45740]"
    },
    {
      "src": "internal: internal [26677,26685]",
      "dest": "internal: internal [48809,48817]"
    },
    {
      "src": "): ) [53496,53497]",
      "dest": "): ) [37259,37260]"
    },
    {
      "src": "member_expression [40491,40513]",
      "dest": "member_expression [26951,26973]"
    },
    {
      "src": "returns: returns [63619,63626]",
      "dest": "returns: returns [47090,47097]"
    },
    {
      "src": "identifier: fail [50720,50724]",
      "dest": "identifier: fail [34483,34487]"
    },
    {
      "src": ",: , [45618,45619]",
      "dest": ",: , [32108,32109]"
    },
    {
      "src": "binary_expression [24432,24461]",
      "dest": "binary_expression [16743,16772]"
    },
    {
      "src": "identifier: repayAmount [44535,44546]",
      "dest": "identifier: repayAmount [31025,31036]"
    },
    {
      "src": ".: . [32602,32603]",
      "dest": ".: . [19540,19541]"
    },
    {
      "src": "{: { [38198,38199]",
      "dest": "{: { [25133,25134]"
    },
    {
      "src": "address: address [6953,6960]",
      "dest": "address: address [4344,4351]"
    },
    {
      "src": "if_statement [59680,59830]",
      "dest": "if_statement [43326,43476]"
    },
    {
      "src": "identifier: redeemUnderlyingInternal [25199,25223]",
      "dest": "identifier: redeemUnderlyingInternal [17510,17534]"
    },
    {
      "src": "member_expression [42059,42073]",
      "dest": "member_expression [28549,28563]"
    },
    {
      "src": "identifier: require [12927,12934]",
      "dest": "identifier: require [10825,10832]"
    },
    {
      "src": "}: } [5904,5905]",
      "dest": "}: } [3295,3296]"
    },
    {
      "src": "visibility [31396,31404]",
      "dest": "visibility [18334,18342]"
    },
    {
      "src": "parameter [9175,9179]",
      "dest": "parameter [6140,6144]"
    },
    {
      "src": "identifier: reserveFactorMantissa [18131,18152]",
      "dest": "identifier: reserveFactorMantissa [14621,14642]"
    },
    {
      "src": "call_expression [41899,41911]",
      "dest": "call_expression [28389,28401]"
    },
    {
      "src": "primitive_type [25274,25278]",
      "dest": "primitive_type [17585,17589]"
    },
    {
      "src": "): ) [7740,7741]",
      "dest": "): ) [5131,5132]"
    },
    {
      "src": "member_expression [62655,62702]",
      "dest": "member_expression [46126,46173]"
    },
    {
      "src": "function_body [9775,9898]",
      "dest": "function_body [6740,6863]"
    },
    {
      "src": "(: ( [19683,19684]",
      "dest": "(: ( [15797,15798]"
    },
    {
      "src": "member_expression [59238,59248]",
      "dest": "member_expression [42884,42894]"
    },
    {
      "src": "primitive_type [17091,17095]",
      "dest": "primitive_type [14393,14397]"
    },
    {
      "src": "type_name [8368,8372]",
      "dest": "type_name [5630,5634]"
    },
    {
      "src": "uint: uint [11662,11666]",
      "dest": "uint: uint [10421,10425]"
    },
    {
      "src": "call_argument [44028,44076]",
      "dest": "call_argument [30518,30566]"
    },
    {
      "src": "true [6586,6590]",
      "dest": "true [3977,3981]"
    },
    {
      "src": "}: } [6596,6597]",
      "dest": "}: } [3987,3988]"
    },
    {
      "src": "expression_statement [60601,60636]",
      "dest": "expression_statement [44072,44107]"
    },
    {
      "src": "identifier: Error [31661,31666]",
      "dest": "identifier: Error [18599,18604]"
    },
    {
      "src": "): ) [57418,57419]",
      "dest": "): ) [41181,41182]"
    },
    {
      "src": "primitive_type [32303,32318]",
      "dest": "primitive_type [19241,19256]"
    },
    {
      "src": "identifier: mulScalarTruncate [7786,7803]",
      "dest": "identifier: mul_ScalarTruncate [5151,5169]"
    },
    {
      "src": "): ) [12383,12384]",
      "dest": "): ) [10490,10491]"
    },
    {
      "src": "uint: uint [53560,53564]",
      "dest": "uint: uint [37323,37327]"
    },
    {
      "src": "identifier: oldInterestRateModel [62270,62290]",
      "dest": "identifier: oldInterestRateModel [45741,45761]"
    },
    {
      "src": "parameter [26635,26654]",
      "dest": "parameter [48767,48786]"
    },
    {
      "src": "parameter [35583,35587]",
      "dest": "parameter [22218,22222]"
    },
    {
      "src": "type_cast_expression [43368,43393]",
      "dest": "type_cast_expression [29858,29883]"
    },
    {
      "src": "return_statement [19190,19218]",
      "dest": "return_statement [15304,15332]"
    },
    {
      "src": "identifier: borrowerIndex [38442,38455]",
      "dest": "identifier: borrowerIndex [25377,25390]"
    },
    {
      "src": "call_argument [61470,61475]",
      "dest": "call_argument [44941,44946]"
    },
    {
      "src": "primitive_type [9440,9444]",
      "dest": "primitive_type [6405,6409]"
    },
    {
      "src": "primitive_type [11662,11666]",
      "dest": "primitive_type [10421,10425]"
    },
    {
      "src": "if_statement [51579,51741]",
      "dest": "if_statement [35342,35504]"
    },
    {
      "src": "view: view [10987,10991]",
      "dest": "view: view [9450,9454]"
    },
    {
      "src": "type_cast_expression [51153,51173]",
      "dest": "type_cast_expression [34916,34936]"
    },
    {
      "src": "): ) [10628,10629]",
      "dest": "): ) [9091,9092]"
    },
    {
      "src": "): ) [44277,44278]",
      "dest": "): ) [30767,30768]"
    },
    {
      "src": "primitive_type [31377,31381]",
      "dest": "primitive_type [18315,18319]"
    },
    {
      "src": "(: ( [50625,50626]",
      "dest": "(: ( [34388,34389]"
    },
    {
      "src": "uint: uint [63628,63632]",
      "dest": "uint: uint [47099,47103]"
    },
    {
      "src": "identifier: interestAccumulated [19126,19145]",
      "dest": "identifier: interestAccumulated [15240,15259]"
    },
    {
      "src": "primitive_type [12911,12915]",
      "dest": "primitive_type [10809,10813]"
    },
    {
      "src": "type_name [11766,11780]",
      "dest": "type_name [9904,9918]"
    },
    {
      "src": "call_expression [40223,40268]",
      "dest": "call_expression [26792,26834]"
    },
    {
      "src": "type_name [8390,8394]",
      "dest": "type_name [5652,5656]"
    },
    {
      "src": "call_argument [10655,10679]",
      "dest": "call_argument [9118,9142]"
    },
    {
      "src": "identifier: NewPendingAdmin [51086,51101]",
      "dest": "identifier: NewPendingAdmin [34849,34864]"
    },
    {
      "src": "call_expression [46143,46210]",
      "dest": "call_expression [32633,32700]"
    },
    {
      "src": "call_argument [44817,44825]",
      "dest": "call_argument [31307,31315]"
    },
    {
      "src": "call_argument [55142,55166]",
      "dest": "call_argument [38905,38929]"
    },
    {
      "src": "parameter [35577,35581]",
      "dest": "parameter [22212,22216]"
    },
    {
      "src": "): ) [2107,2108]",
      "dest": "): ) [2107,2108]"
    },
    {
      "src": "=: = [64653,64654]",
      "dest": "=: = [49527,49528]"
    },
    {
      "src": ",: , [52057,52058]",
      "dest": ",: , [35820,35821]"
    },
    {
      "src": "(: ( [35641,35642]",
      "dest": "(: ( [22276,22277]"
    },
    {
      "src": "comment: // Verify market's block number equals current block number [54528,54587]",
      "dest": "comment: // Verify market's block number equals current block number [38291,38350]"
    },
    {
      "src": "identifier: borrower [37708,37716]",
      "dest": "identifier: borrower [24343,24351]"
    },
    {
      "src": "(: ( [5391,5392]",
      "dest": "(: ( [2782,2783]"
    },
    {
      "src": "comment: // The counter starts true to prevent changing it from zero to non-zero (i.e. smaller cost/refund) [2237,2335]",
      "dest": "comment: // The counter starts true to prevent changing it from zero to non-zero (i.e. smaller cost/refund) [2237,2335]"
    },
    {
      "src": "identifier: getBorrowRate [16161,16174]",
      "dest": "identifier: getBorrowRate [13514,13527]"
    },
    {
      "src": "call_argument [50725,50743]",
      "dest": "call_argument [34488,34506]"
    },
    {
      "src": "): ) [46209,46210]",
      "dest": "): ) [32699,32700]"
    },
    {
      "src": "variable_declaration [8390,8408]",
      "dest": "variable_declaration [5652,5670]"
    },
    {
      "src": "identifier: symbol_ [1130,1137]",
      "dest": "identifier: symbol_ [1130,1137]"
    },
    {
      "src": "view: view [63614,63618]",
      "dest": "view: view [47085,47089]"
    },
    {
      "src": "(: ( [45301,45302]",
      "dest": "(: ( [31791,31792]"
    },
    {
      "src": "return_type_definition [10580,10594]",
      "dest": "return_type_definition [9043,9057]"
    },
    {
      "src": "function_body [59119,60750]",
      "dest": "function_body [42765,44221]"
    },
    {
      "src": "identifier: blockDelta [17297,17307]",
      "dest": "identifier: blockDelta [14372,14382]"
    },
    {
      "src": "identifier: reserveFactorMantissa [9869,9890]",
      "dest": "identifier: reserveFactorMantissa [6834,6855]"
    },
    {
      "src": "member_expression [32591,32631]",
      "dest": "member_expression [19529,19569]"
    },
    {
      "src": "variable_declaration [55554,55564]",
      "dest": "variable_declaration [39317,39327]"
    },
    {
      "src": "comment: /**      * @notice accrues interest and updates the interest rate model using _setInterestRateModelFresh      * @dev Admin function to accrue interest and update the interest rate model      * @param newInterestRateModel the new interest rate model to use      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)      */ [60756,61106]",
      "dest": "comment: /**      * @notice accrues interest and updates the interest rate model using _setInterestRateModelFresh      * @dev Admin function to accrue interest and update the interest rate model      * @param newInterestRateModel the new interest rate model to use      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)      */ [44227,44577]"
    },
    {
      "src": "identifier: error [53551,53556]",
      "dest": "identifier: error [37314,37319]"
    },
    {
      "src": "identifier: _setReserveFactorFresh [54272,54294]",
      "dest": "identifier: _setReserveFactorFresh [38035,38057]"
    },
    {
      "src": "return_statement [20106,20147]",
      "dest": "return_statement [16220,16261]"
    },
    {
      "src": "call_argument [18463,18479]",
      "dest": "call_argument [14761,14777]"
    },
    {
      "src": "{: { [61288,61289]",
      "dest": "{: { [44759,44760]"
    },
    {
      "src": "type_name [15165,15169]",
      "dest": "type_name [12518,12522]"
    },
    {
      "src": "type_cast_expression [45302,45315]",
      "dest": "type_cast_expression [31792,31805]"
    },
    {
      "src": "call_argument [51635,51636]",
      "dest": "call_argument [35398,35399]"
    },
    {
      "src": "member_expression [35074,35094]",
      "dest": "member_expression [21679,21699]"
    },
    {
      "src": "identifier: TokenErrorReporter [413,431]",
      "dest": "identifier: TokenErrorReporter [413,431]"
    },
    {
      "src": "identifier: actualRepayAmount [40040,40057]",
      "dest": "identifier: actualRepayAmount [26741,26758]"
    },
    {
      "src": "call_argument [47336,47347]",
      "dest": "call_argument [33856,33867]"
    },
    {
      "src": "member_expression [12030,12054]",
      "dest": "member_expression [10168,10192]"
    },
    {
      "src": "): ) [61202,61203]",
      "dest": "): ) [44673,44674]"
    },
    {
      "src": "address: address [52014,52021]",
      "dest": "address: address [35777,35784]"
    },
    {
      "src": "type_name [55554,55558]",
      "dest": "type_name [39317,39321]"
    },
    {
      "src": "return_statement [62619,62704]",
      "dest": "return_statement [46090,46175]"
    },
    {
      "src": "{: { [9181,9182]",
      "dest": "{: { [6146,6147]"
    },
    {
      "src": "call_argument [42059,42073]",
      "dest": "call_argument [28549,28563]"
    },
    {
      "src": "return: return [9456,9462]",
      "dest": "return: return [6421,6427]"
    },
    {
      "src": "): ) [53099,53100]",
      "dest": "): ) [36862,36863]"
    },
    {
      "src": "return_statement [57914,57961]",
      "dest": "return_statement [41560,41607]"
    },
    {
      "src": "identifier: fail [62626,62630]",
      "dest": "identifier: fail [46097,46101]"
    },
    {
      "src": ",: , [32477,32478]",
      "dest": ",: , [19415,19416]"
    },
    {
      "src": "identifier: error [24432,24437]",
      "dest": "identifier: error [16743,16748]"
    },
    {
      "src": "if: if [45798,45800]",
      "dest": "if: if [32288,32290]"
    },
    {
      "src": "external: external [58258,58266]",
      "dest": "external: external [41904,41912]"
    },
    {
      "src": "}: } [9545,9546]",
      "dest": "}: } [6510,6511]"
    },
    {
      "src": "member_expression [32562,32589]",
      "dest": "member_expression [19500,19527]"
    },
    {
      "src": "identifier: Error [19202,19207]",
      "dest": "identifier: Error [15316,15321]"
    },
    {
      "src": "(: ( [61241,61242]",
      "dest": "(: ( [44712,44713]"
    },
    {
      "src": "block_statement [56692,56809]",
      "dest": "block_statement [40455,40572]"
    },
    {
      "src": "call_expression [32759,32775]",
      "dest": "call_expression [19989,20005]"
    },
    {
      "src": "assignment_expression [62782,62822]",
      "dest": "assignment_expression [46253,46293]"
    },
    {
      "src": "call_argument [1686,1700]",
      "dest": "call_argument [1686,1700]"
    },
    {
      "src": "call_argument [46329,46354]",
      "dest": "call_argument [32819,32844]"
    },
    {
      "src": "identifier: fail [35813,35817]",
      "dest": "identifier: fail [22448,22452]"
    },
    {
      "src": "): ) [13038,13039]",
      "dest": "): ) [10936,10937]"
    },
    {
      "src": "identifier: accountBorrows [40523,40537]",
      "dest": "identifier: accountBorrows [26983,26997]"
    },
    {
      "src": "call_expression [62914,62997]",
      "dest": "call_expression [46385,46468]"
    },
    {
      "src": "parameter [7262,7275]",
      "dest": "parameter [4653,4666]"
    },
    {
      "src": "call_argument [39687,39692]",
      "dest": "call_argument [26407,26412]"
    },
    {
      "src": ",: , [44422,44423]",
      "dest": ",: , [30912,30913]"
    },
    {
      "src": "identifier: NO_ERROR [5398,5406]",
      "dest": "identifier: NO_ERROR [2789,2797]"
    },
    {
      "src": "}: } [7352,7353]",
      "dest": "}: } [4743,4744]"
    },
    {
      "src": "call_expression [31661,31673]",
      "dest": "call_expression [18599,18611]"
    },
    {
      "src": "binary_expression [44150,44172]",
      "dest": "binary_expression [30640,30662]"
    },
    {
      "src": "call_argument [38050,38057]",
      "dest": "call_argument [24685,24692]"
    },
    {
      "src": "struct_member [37090,37109]",
      "dest": "struct_member [23725,23744]"
    },
    {
      "src": "(: ( [43236,43237]",
      "dest": "(: ( [29726,29727]"
    },
    {
      "src": "call_argument [52587,52626]",
      "dest": "call_argument [36350,36389]"
    },
    {
      "src": "string [1523,1573]",
      "dest": "string [1523,1573]"
    },
    {
      "src": "call_expression [16224,16308]",
      "dest": "call_expression [13577,13661]"
    },
    {
      "src": "identifier: actualAddAmount [56535,56550]",
      "dest": "identifier: actualAddAmount [40298,40313]"
    },
    {
      "src": "call_argument [32562,32589]",
      "dest": "call_argument [19500,19527]"
    },
    {
      "src": "identifier: error [53513,53518]",
      "dest": "identifier: error [37276,37281]"
    },
    {
      "src": "comment: /**      * @notice Get the token balance of the `owner`      * @param owner The address of the account to query      * @return The number of tokens owned by `owner`      */ [7066,7238]",
      "dest": "comment: /**      * @notice Get the token balance of the `owner`      * @param owner The address of the account to query      * @return The number of tokens owned by `owner`      */ [4457,4629]"
    },
    {
      "src": "identifier: NO_ERROR [42065,42073]",
      "dest": "identifier: NO_ERROR [28555,28563]"
    },
    {
      "src": "=: = [2163,2164]",
      "dest": "=: = [2163,2164]"
    },
    {
      "src": "modifier: modifier [64523,64531]",
      "dest": "modifier: modifier [49397,49405]"
    },
    {
      "src": "call_argument [55190,55204]",
      "dest": "call_argument [38953,38967]"
    },
    {
      "src": "uint: uint [37118,37122]",
      "dest": "uint: uint [23753,23757]"
    },
    {
      "src": "type_name [26609,26624]",
      "dest": "type_name [48741,48756]"
    },
    {
      "src": ".: . [33961,33962]",
      "dest": ".: . [20756,20757]"
    },
    {
      "src": "identifier: _notEntered [64565,64576]",
      "dest": "identifier: _notEntered [49439,49450]"
    },
    {
      "src": "expression_statement [1414,1473]",
      "dest": "expression_statement [1414,1473]"
    },
    {
      "src": "identifier: borrowAmount [31849,31861]",
      "dest": "identifier: borrowAmount [18787,18799]"
    },
    {
      "src": "expression_statement [1895,1921]",
      "dest": "expression_statement [1895,1921]"
    },
    {
      "src": "): ) [62156,62157]",
      "dest": "): ) [45627,45628]"
    },
    {
      "src": "identifier: ComptrollerInterface [52648,52668]",
      "dest": "identifier: ComptrollerInterface [36411,36431]"
    },
    {
      "src": "): ) [44470,44471]",
      "dest": "): ) [30960,30961]"
    },
    {
      "src": "(: ( [11500,11501]",
      "dest": "(: ( [9799,9800]"
    },
    {
      "src": "uint: uint [37179,37183]",
      "dest": "uint: uint [23814,23818]"
    },
    {
      "src": "return: return [25496,25502]",
      "dest": "return: return [17807,17813]"
    },
    {
      "src": "state_mutability [13850,13854]",
      "dest": "state_mutability [11586,11590]"
    },
    {
      "src": ",: , [1224,1225]",
      "dest": ",: , [1224,1225]"
    },
    {
      "src": "type_name [25224,25228]",
      "dest": "type_name [17535,17539]"
    },
    {
      "src": "comment: /**      * @notice Return the borrow balance of account based on stored data      * @param account The address whose balance should be calculated      * @return (error code, the calculated balance or 0 if error code is non-zero)      */ [11223,11459]",
      "dest": "comment: /**      * @notice Returns the estimated per-block supply interest rate for this cToken after some change      * @return The supply interest rate per block, scaled by 1e18      */ [7606,7785]"
    },
    {
      "src": ".: . [59290,59291]",
      "dest": ".: . [42936,42937]"
    },
    {
      "src": "(: ( [11075,11076]",
      "dest": "(: ( [5764,5765]"
    },
    {
      "src": "internal: internal [48118,48126]",
      "dest": "internal: internal [49242,49250]"
    },
    {
      "src": "identifier: error [35604,35609]",
      "dest": "identifier: error [22239,22244]"
    },
    {
      "src": "comment: // Check caller is pendingAdmin and pendingAdmin ≠ address(0) [51509,51572]",
      "dest": "comment: // Check caller is pendingAdmin and pendingAdmin ≠ address(0) [35272,35335]"
    },
    {
      "src": "member_expression [57808,57818]",
      "dest": "member_expression [41454,41464]"
    },
    {
      "src": "internal: internal [13841,13849]",
      "dest": "internal: internal [11577,11585]"
    },
    {
      "src": "identifier: BAD_INPUT [59966,59975]",
      "dest": "identifier: BAD_INPUT [43612,43621]"
    },
    {
      "src": "internal: internal [11518,11526]",
      "dest": "internal: internal [9817,9825]"
    },
    {
      "src": "member_expression [38437,38455]",
      "dest": "member_expression [25372,25390]"
    },
    {
      "src": ".: . [15802,15803]",
      "dest": ".: . [13155,13156]"
    },
    {
      "src": "comment: /*          * We call doTransferIn for the caller and the addAmount          *  Note: The cToken must handle variations between ERC-20 and ETH underlying.          *  On success, the cToken holds an additional addAmount of cash.          *  doTransferIn reverts if anything goes wrong, since we can't be sure if side effects occurred.          *  it returns the amount actually transferred, in case of a fee.          */ [56936,57356]",
      "dest": "comment: /*          * We call doTransferIn for the caller and the addAmount          *  Note: The cToken must handle variations between ERC-20 and ETH underlying.          *  On success, the cToken holds an additional addAmount of cash.          *  doTransferIn reverts if anything goes wrong, since we can't be sure if side effects occurred.          *  it returns the amount actually transferred, in case of a fee.          */ [40699,41119]"
    },
    {
      "src": "block_statement [51639,51741]",
      "dest": "block_statement [35402,35504]"
    },
    {
      "src": "): ) [1655,1656]",
      "dest": "): ) [1655,1656]"
    },
    {
      "src": "parameter [43243,43247]",
      "dest": "parameter [29733,29737]"
    },
    {
      "src": "variable_declaration [52648,52683]",
      "dest": "variable_declaration [36411,36446]"
    },
    {
      "src": "): ) [43710,43711]",
      "dest": "): ) [30200,30201]"
    },
    {
      "src": ".: . [40018,40019]",
      "dest": ".: . [26719,26720]"
    },
    {
      "src": "user_defined_type [891,911]",
      "dest": "user_defined_type [891,911]"
    },
    {
      "src": "identifier: redeemFresh [24771,24782]",
      "dest": "identifier: redeemFresh [17082,17093]"
    },
    {
      "src": "type_name [50868,50875]",
      "dest": "type_name [34631,34638]"
    },
    {
      "src": ",: , [9838,9839]",
      "dest": ",: , [6803,6804]"
    },
    {
      "src": "visibility [10558,10566]",
      "dest": "visibility [9021,9029]"
    },
    {
      "src": "!=: != [56671,56673]",
      "dest": "!=: != [40434,40436]"
    },
    {
      "src": "user_defined_type [52414,52434]",
      "dest": "user_defined_type [36177,36197]"
    },
    {
      "src": "expression_statement [12927,13003]",
      "dest": "expression_statement [10825,10901]"
    },
    {
      "src": "=: = [11804,11805]",
      "dest": "=: = [9942,9943]"
    },
    {
      "src": "member_expression [24783,24793]",
      "dest": "member_expression [17094,17104]"
    },
    {
      "src": "parameter [63906,63917]",
      "dest": "parameter [47377,47388]"
    },
    {
      "src": "variable_declaration [38315,38347]",
      "dest": "variable_declaration [25250,25282]"
    },
    {
      "src": ".: . [45583,45584]",
      "dest": ".: . [32073,32074]"
    },
    {
      "src": "identifier: Error [44004,44009]",
      "dest": "identifier: Error [30494,30499]"
    },
    {
      "src": "{: { [37008,37009]",
      "dest": "{: { [23643,23644]"
    },
    {
      "src": ",: , [35048,35049]",
      "dest": ",: , [21653,21654]"
    },
    {
      "src": "function_body [15498,19224]",
      "dest": "function_body [12851,15338]"
    },
    {
      "src": "if_statement [56648,56809]",
      "dest": "if_statement [40411,40572]"
    },
    {
      "src": "identifier: NO_ERROR [53091,53099]",
      "dest": "identifier: NO_ERROR [36854,36862]"
    },
    {
      "src": "=: = [34908,34909]",
      "dest": "=: = [21513,21514]"
    },
    {
      "src": ",: , [55803,55804]",
      "dest": ",: , [39566,39567]"
    },
    {
      "src": "identifier: spender [6553,6560]",
      "dest": "identifier: spender [3944,3951]"
    },
    {
      "src": "uint: uint [63906,63910]",
      "dest": "uint: uint [47377,47381]"
    },
    {
      "src": "}: } [18152,18153]",
      "dest": "}: } [14642,14643]"
    },
    {
      "src": "primitive_type [59076,59080]",
      "dest": "primitive_type [42722,42726]"
    },
    {
      "src": "primitive_type [41727,41731]",
      "dest": "primitive_type [28217,28221]"
    },
    {
      "src": "==: == [12055,12057]",
      "dest": "==: == [10193,10195]"
    },
    {
      "src": ".: . [37978,37979]",
      "dest": ".: . [24613,24614]"
    },
    {
      "src": "identifier: pendingAdmin [51863,51875]",
      "dest": "identifier: pendingAdmin [35626,35638]"
    },
    {
      "src": "identifier: totalReservesNew [17160,17176]",
      "dest": "identifier: totalReservesNew [14561,14577]"
    },
    {
      "src": "): ) [26699,26700]",
      "dest": "): ) [48831,48832]"
    },
    {
      "src": "identifier: Error [62385,62390]",
      "dest": "identifier: Error [45856,45861]"
    },
    {
      "src": "modifier_invocation [36468,36480]",
      "dest": "modifier_invocation [23103,23115]"
    },
    {
      "src": "=: = [55982,55983]",
      "dest": "=: = [39745,39746]"
    },
    {
      "src": "comment: /* Fail if repayBorrow not allowed */ [37776,37813]",
      "dest": "comment: /* Fail if repayBorrow not allowed */ [24411,24448]"
    },
    {
      "src": "return_statement [54654,54734]",
      "dest": "return_statement [38417,38497]"
    },
    {
      "src": ",: , [37716,37717]",
      "dest": ",: , [24351,24352]"
    },
    {
      "src": ",: , [46185,46186]",
      "dest": ",: , [32675,32676]"
    },
    {
      "src": "identifier: getCashPrior [9495,9507]",
      "dest": "identifier: getCashPrior [6460,6472]"
    },
    {
      "src": "emit_statement [40673,40777]",
      "dest": "emit_statement [27133,27237]"
    },
    {
      "src": "identifier: symbol_ [2189,2196]",
      "dest": "identifier: symbol_ [2189,2196]"
    },
    {
      "src": "return: return [59273,59279]",
      "dest": "return: return [42919,42925]"
    },
    {
      "src": "return_statement [59948,60017]",
      "dest": "return_statement [43594,43663]"
    },
    {
      "src": "type_name [37760,37764]",
      "dest": "type_name [24395,24399]"
    },
    {
      "src": "identifier: vars [40245,40249]",
      "dest": "identifier: vars [26811,26815]"
    },
    {
      "src": "identifier: FailureInfo [43519,43530]",
      "dest": "identifier: FailureInfo [30009,30020]"
    },
    {
      "src": "parameter [48100,48116]",
      "dest": "parameter [49224,49240]"
    },
    {
      "src": "(: ( [52466,52467]",
      "dest": "(: ( [36229,36230]"
    },
    {
      "src": "identifier: oldAdmin [52049,52057]",
      "dest": "identifier: oldAdmin [35812,35820]"
    },
    {
      "src": ",: , [42449,42450]",
      "dest": ",: , [28939,28940]"
    },
    {
      "src": "member_expression [37973,38000]",
      "dest": "member_expression [24608,24635]"
    },
    {
      "src": "comment: /**      * @notice The liquidator liquidates the borrowers collateral.      *  The collateral seized is transferred to the liquidator.      * @param borrower The borrower of this cToken to be liquidated      * @param liquidator The address repaying the borrow and seizing collateral      * @param cTokenCollateral The market in which to seize collateral from the borrower      * @param repayAmount The amount of the underlying borrowed asset to repay      * @return (uint, uint) An error code (0=success, otherwise a failure, see ErrorReporter.sol), and the actual repayment amount.      */ [42504,43094]",
      "dest": "comment: /**      * @notice The liquidator liquidates the borrowers collateral.      *  The collateral seized is transferred to the liquidator.      * @param borrower The borrower of this cToken to be liquidated      * @param liquidator The address repaying the borrow and seizing collateral      * @param cTokenCollateral The market in which to seize collateral from the borrower      * @param repayAmount The amount of the underlying borrowed asset to repay      * @return (uint, uint) An error code (0=success, otherwise a failure, see ErrorReporter.sol), and the actual repayment amount.      */ [28994,29584]"
    },
    {
      "src": "): ) [25361,25362]",
      "dest": "): ) [17672,17673]"
    },
    {
      "src": "import: import [26,32]",
      "dest": "import: import [26,32]"
    },
    {
      "src": "call_argument [58757,58769]",
      "dest": "call_argument [42403,42415]"
    },
    {
      "src": "assignment_expression [1848,1885]",
      "dest": "assignment_expression [1848,1885]"
    },
    {
      "src": "identifier: REDUCE_RESERVES_CASH_NOT_AVAILABLE [59784,59818]",
      "dest": "identifier: REDUCE_RESERVES_CASH_NOT_AVAILABLE [43430,43464]"
    },
    {
      "src": "return: return [59511,59517]",
      "dest": "return: return [43157,43163]"
    },
    {
      "src": "if: if [35638,35640]",
      "dest": "if: if [22273,22275]"
    },
    {
      "src": "\": \" [70,71]",
      "dest": "\": \" [70,71]"
    },
    {
      "src": "variable_declaration [15928,15945]",
      "dest": "variable_declaration [13281,13298]"
    },
    {
      "src": "call_expression [18091,18191]",
      "dest": "call_expression [14580,14681]"
    },
    {
      "src": "internal: internal [43219,43227]",
      "dest": "internal: internal [29709,29717]"
    },
    {
      "src": "call_expression [12338,12384]",
      "dest": "call_expression [10448,10491]"
    },
    {
      "src": "binary_expression [19749,19778]",
      "dest": "binary_expression [15863,15892]"
    },
    {
      "src": "type_name [61142,61159]",
      "dest": "type_name [44613,44630]"
    },
    {
      "src": "): ) [51172,51173]",
      "dest": "): ) [34935,34936]"
    },
    {
      "src": "unary_expression [38960,38962]",
      "dest": "unary_expression [25680,25682]"
    },
    {
      "src": "(: ( [63306,63307]",
      "dest": "(: ( [46777,46778]"
    },
    {
      "src": "primitive_type [10100,10104]",
      "dest": "primitive_type [8563,8567]"
    },
    {
      "src": "identifier: accrualBlockNumber [1848,1866]",
      "dest": "identifier: accrualBlockNumber [1848,1866]"
    },
    {
      "src": "!=: != [51594,51596]",
      "dest": "!=: != [35357,35359]"
    },
    {
      "src": "return_statement [59273,59346]",
      "dest": "return_statement [42919,42992]"
    },
    {
      "src": "returns: returns [13331,13338]",
      "dest": "returns: returns [11229,11236]"
    },
    {
      "src": "primitive_type [6399,6406]",
      "dest": "primitive_type [3790,3797]"
    },
    {
      "src": "type_name [2919,2923]",
      "dest": "type_name [48123,48127]"
    },
    {
      "src": "): ) [45361,45362]",
      "dest": "): ) [31851,31852]"
    },
    {
      "src": "=: = [16036,16037]",
      "dest": "=: = [13389,13390]"
    },
    {
      "src": "{: { [51639,51640]",
      "dest": "{: { [35402,35403]"
    },
    {
      "src": "call_argument [45839,45843]",
      "dest": "call_argument [32329,32333]"
    },
    {
      "src": "identifier: COMPTROLLER_REJECTION [37979,38000]",
      "dest": "identifier: COMPTROLLER_REJECTION [24614,24635]"
    },
    {
      "src": "return_statement [5823,5899]",
      "dest": "return_statement [3214,3290]"
    },
    {
      "src": "identifier: msg [47302,47305]",
      "dest": "identifier: msg [33822,33825]"
    },
    {
      "src": ",: , [38247,38248]",
      "dest": ",: , [25182,25183]"
    },
    {
      "src": "call_argument [59523,59545]",
      "dest": "call_argument [43169,43191]"
    },
    {
      "src": ".: . [32838,32839]",
      "dest": ".: . [20068,20069]"
    },
    {
      "src": "identifier: interestAccumulated [18156,18175]",
      "dest": "identifier: interestAccumulated [14646,14665]"
    },
    {
      "src": "call_argument [42461,42472]",
      "dest": "call_argument [28951,28962]"
    },
    {
      "src": "type_name [44739,44743]",
      "dest": "type_name [31229,31233]"
    },
    {
      "src": "identifier: sender [51617,51623]",
      "dest": "identifier: sender [35380,35386]"
    },
    {
      "src": "visibility [61182,61188]",
      "dest": "visibility [44653,44659]"
    },
    {
      "src": "parameter [5760,5774]",
      "dest": "parameter [3151,3165]"
    },
    {
      "src": "comment: /*          * We calculate the new borrower and total borrow balances, failing on underflow:          *  accountBorrowsNew = accountBorrows - actualRepayAmount          *  totalBorrowsNew = totalBorrows - actualRepayAmount          */ [39722,39956]",
      "dest": "comment: /*          * We calculate the new borrower and total borrow balances, failing on underflow:          *  accountBorrowsNew = accountBorrows - actualRepayAmount          *  totalBorrowsNew = totalBorrows - actualRepayAmount          */ [26442,26676]"
    },
    {
      "src": "user_defined_type [52648,52668]",
      "dest": "user_defined_type [36411,36431]"
    },
    {
      "src": "payable: payable [26617,26624]",
      "dest": "payable: payable [48749,48756]"
    },
    {
      "src": "call_expression [43479,43572]",
      "dest": "call_expression [29969,30062]"
    },
    {
      "src": "binary_expression [38940,38963]",
      "dest": "binary_expression [25660,25683]"
    },
    {
      "src": "identifier: owner [7638,7643]",
      "dest": "identifier: owner [5029,5034]"
    },
    {
      "src": "call_argument [5862,5865]",
      "dest": "call_argument [3253,3256]"
    },
    {
      "src": "assignment_expression [51999,52024]",
      "dest": "assignment_expression [35762,35787]"
    },
    {
      "src": "): ) [52064,52065]",
      "dest": "): ) [35827,35828]"
    },
    {
      "src": "call_expression [7720,7741]",
      "dest": "call_expression [5111,5132]"
    },
    {
      "src": "identifier: newInterestRateModel [62922,62942]",
      "dest": "identifier: newInterestRateModel [46393,46413]"
    },
    {
      "src": "identifier: account [8324,8331]",
      "dest": "identifier: account [5586,5593]"
    },
    {
      "src": "import_directive [96,125]",
      "dest": "import_directive [96,125]"
    },
    {
      "src": "identifier: _setReserveFactorFresh [53947,53969]",
      "dest": "identifier: _setReserveFactorFresh [37710,37732]"
    },
    {
      "src": "identifier: sender [51587,51593]",
      "dest": "identifier: sender [35350,35356]"
    },
    {
      "src": "type_cast_expression [40950,40970]",
      "dest": "type_cast_expression [27440,27460]"
    },
    {
      "src": "identifier: Error [42226,42231]",
      "dest": "identifier: Error [28716,28721]"
    },
    {
      "src": "function_definition [35499,36063]",
      "dest": "function_definition [22134,22698]"
    },
    {
      "src": "variable_declaration_statement [56530,56551]",
      "dest": "variable_declaration_statement [40293,40314]"
    },
    {
      "src": "}: } [14958,14959]",
      "dest": "}: } [12311,12312]"
    },
    {
      "src": "identifier: require [62914,62921]",
      "dest": "identifier: require [46385,46392]"
    },
    {
      "src": "if: if [32512,32514]",
      "dest": "if: if [19450,19452]"
    },
    {
      "src": "): ) [63321,63322]",
      "dest": "): ) [46792,46793]"
    },
    {
      "src": "modifier_invocation [12889,12901]",
      "dest": "modifier_invocation [10787,10799]"
    },
    {
      "src": "comment: /**       * @notice Sets a new reserve factor for the protocol (*requires fresh interest accrual)       * @dev Admin function to set a new reserve factor       * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)       */ [54008,54258]",
      "dest": "comment: /**       * @notice Sets a new reserve factor for the protocol (*requires fresh interest accrual)       * @dev Admin function to set a new reserve factor       * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)       */ [37771,38021]"
    },
    {
      "src": "}: } [54517,54518]",
      "dest": "}: } [38280,38281]"
    },
    {
      "src": "identifier: failOpaque [37962,37972]",
      "dest": "identifier: failOpaque [24597,24607]"
    },
    {
      "src": "identifier: FailureInfo [55805,55816]",
      "dest": "identifier: FailureInfo [39568,39579]"
    },
    {
      "src": "call_argument [9854,9867]",
      "dest": "call_argument [6819,6832]"
    },
    {
      "src": "comment: // redeemFresh emits redeem-specific logs on errors, so we don't need to [24683,24755]",
      "dest": "comment: // redeemFresh emits redeem-specific logs on errors, so we don't need to [16994,17066]"
    },
    {
      "src": "identifier: require [46143,46150]",
      "dest": "identifier: require [32633,32640]"
    },
    {
      "src": "identifier: Error [10638,10643]",
      "dest": "identifier: Error [9101,9106]"
    },
    {
      "src": "): ) [20145,20146]",
      "dest": "): ) [16259,16260]"
    },
    {
      "src": ".: . [52795,52796]",
      "dest": ".: . [36558,36559]"
    },
    {
      "src": ",: , [46013,46014]",
      "dest": ",: , [32503,32504]"
    },
    {
      "src": "): ) [57853,57854]",
      "dest": "): ) [41499,41500]"
    },
    {
      "src": ".: . [19207,19208]",
      "dest": ".: . [15321,15322]"
    },
    {
      "src": "type_name [16117,16121]",
      "dest": "type_name [13470,13474]"
    },
    {
      "src": "): ) [43455,43456]",
      "dest": "): ) [29945,29946]"
    },
    {
      "src": "function: function [25190,25198]",
      "dest": "function: function [17501,17509]"
    },
    {
      "src": "(: ( [53756,53757]",
      "dest": "(: ( [37519,37520]"
    },
    {
      "src": "primitive_type [31996,32000]",
      "dest": "primitive_type [18934,18938]"
    },
    {
      "src": "identifier: subUInt [16434,16441]",
      "dest": "identifier: sub_ [13766,13770]"
    },
    {
      "src": "]: ] [11828,11829]",
      "dest": "]: ] [9966,9967]"
    },
    {
      "src": "primitive_type [56530,56534]",
      "dest": "primitive_type [40293,40297]"
    },
    {
      "src": "identifier: sender [36036,36042]",
      "dest": "identifier: sender [22671,22677]"
    },
    {
      "src": "=: = [62803,62804]",
      "dest": "=: = [46274,46275]"
    },
    {
      "src": ",: , [38290,38291]",
      "dest": ",: , [25225,25226]"
    },
    {
      "src": "type_name [15608,15612]",
      "dest": "type_name [12961,12965]"
    },
    {
      "src": "call_argument [43407,43415]",
      "dest": "call_argument [29897,29905]"
    },
    {
      "src": "comment: // Ensure invoke newInterestRateModel.isInterestRateModel() returns true [62833,62905]",
      "dest": "comment: // Ensure invoke newInterestRateModel.isInterestRateModel() returns true [46304,46376]"
    },
    {
      "src": "): ) [7275,7276]",
      "dest": "): ) [4666,4667]"
    },
    {
      "src": "(: ( [32736,32737]",
      "dest": "(: ( [19966,19967]"
    },
    {
      "src": "{: { [59497,59498]",
      "dest": "{: { [43143,43144]"
    },
    {
      "src": "identifier: liquidateCalculateSeizeTokens [45272,45301]",
      "dest": "identifier: liquidateCalculateSeizeTokens [31762,31791]"
    },
    {
      "src": "identifier: account [10971,10978]",
      "dest": "identifier: account [9434,9441]"
    },
    {
      "src": "{: { [32372,32373]",
      "dest": "{: { [19310,19311]"
    },
    {
      "src": "returns: returns [10091,10098]",
      "dest": "returns: returns [8554,8561]"
    },
    {
      "src": "assignment_expression [33653,33736]",
      "dest": "assignment_expression [20678,20742]"
    },
    {
      "src": "struct: struct [36980,36986]",
      "dest": "struct: struct [23615,23621]"
    },
    {
      "src": ".: . [40203,40204]",
      "dest": ".: . [26773,26774]"
    },
    {
      "src": "primitive_type [48062,48069]",
      "dest": "primitive_type [49186,49193]"
    },
    {
      "src": "variable_declaration [45240,45256]",
      "dest": "variable_declaration [31730,31746]"
    },
    {
      "src": "identifier: borrowAmount [35036,35048]",
      "dest": "identifier: borrowAmount [21641,21653]"
    },
    {
      "src": "identifier: InterestRateModel [62094,62111]",
      "dest": "identifier: InterestRateModel [45565,45582]"
    },
    {
      "src": "expression_statement [2158,2171]",
      "dest": "expression_statement [2158,2171]"
    },
    {
      "src": "call_expression [7705,7743]",
      "dest": "call_expression [5096,5134]"
    },
    {
      "src": "return: return [31649,31655]",
      "dest": "return: return [18587,18593]"
    },
    {
      "src": "{: { [24463,24464]",
      "dest": "{: { [16774,16775]"
    },
    {
      "src": "): ) [24662,24663]",
      "dest": "): ) [16973,16974]"
    },
    {
      "src": "}: } [54961,54962]",
      "dest": "}: } [38724,38725]"
    },
    {
      "src": "identifier: NewPendingAdmin [52080,52095]",
      "dest": "identifier: NewPendingAdmin [35843,35858]"
    },
    {
      "src": "identifier: totalBorrowsNew [37184,37199]",
      "dest": "identifier: totalBorrowsNew [23819,23834]"
    },
    {
      "src": "primitive_type [63906,63910]",
      "dest": "primitive_type [47377,47381]"
    },
    {
      "src": "type_name [5734,5741]",
      "dest": "type_name [3125,3132]"
    },
    {
      "src": "call_argument [5376,5382]",
      "dest": "call_argument [2767,2773]"
    },
    {
      "src": "member_expression [59960,59975]",
      "dest": "member_expression [43606,43621]"
    },
    {
      "src": "member_expression [59741,59770]",
      "dest": "member_expression [43387,43416]"
    },
    {
      "src": "type_cast_expression [46566,46586]",
      "dest": "type_cast_expression [33086,33106]"
    },
    {
      "src": "identifier: sender [36937,36943]",
      "dest": "identifier: sender [23572,23578]"
    },
    {
      "src": "call_expression [59955,60016]",
      "dest": "call_expression [43601,43662]"
    },
    {
      "src": "identifier: allowed [32516,32523]",
      "dest": "identifier: allowed [19454,19461]"
    },
    {
      "src": "comment: /**      * @notice Sender redeems cTokens in exchange for a specified amount of underlying asset      * @dev Accrues interest whether or not the operation succeeds, unless reverted      * @param redeemAmount The amount of underlying to receive from redeeming cTokens      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)      */ [24824,25185]",
      "dest": "comment: /**      * @notice Sender redeems cTokens in exchange for a specified amount of underlying asset      * @dev Accrues interest whether or not the operation succeeds, unless reverted      * @param redeemAmount The amount of underlying to receive from redeeming cTokens      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)      */ [17135,17496]"
    },
    {
      "src": "(: ( [32302,32303]",
      "dest": "(: ( [19240,19241]"
    },
    {
      "src": "call_argument [42232,42237]",
      "dest": "call_argument [28722,28727]"
    },
    {
      "src": "function_definition [31353,31869]",
      "dest": "function_definition [18291,18807]"
    },
    {
      "src": "}: } [12115,12116]",
      "dest": "}: } [10231,10232]"
    },
    {
      "src": "call_expression [52781,52811]",
      "dest": "call_expression [36544,36574]"
    },
    {
      "src": "variable_declaration [13891,13908]",
      "dest": "variable_declaration [11616,11633]"
    },
    {
      "src": "type_name [1163,1168]",
      "dest": "type_name [1163,1168]"
    },
    {
      "src": "external: external [53461,53469]",
      "dest": "external: external [37224,37232]"
    },
    {
      "src": "primitive_type [44873,44877]",
      "dest": "primitive_type [31363,31367]"
    },
    {
      "src": "return: return [5823,5829]",
      "dest": "return: return [3214,3220]"
    },
    {
      "src": "function_body [13346,13546]",
      "dest": "function_body [11244,11296]"
    },
    {
      "src": "comment: // accrueInterest emits logs on errors, but we still want to log the fact that an attempted liquidation failed [42090,42200]",
      "dest": "comment: // accrueInterest emits logs on errors, but we still want to log the fact that an attempted liquidation failed [28580,28690]"
    },
    {
      "src": "call_argument [1205,1224]",
      "dest": "call_argument [1205,1224]"
    },
    {
      "src": "return_type_definition [41644,41664]",
      "dest": "return_type_definition [28134,28154]"
    },
    {
      "src": "block_statement [59934,60027]",
      "dest": "block_statement [43580,43673]"
    },
    {
      "src": "): ) [36583,36584]",
      "dest": "): ) [23218,23219]"
    },
    {
      "src": "return_type_definition [19675,19695]",
      "dest": "return_type_definition [15789,15809]"
    },
    {
      "src": "(: ( [61707,61708]",
      "dest": "(: ( [45178,45179]"
    },
    {
      "src": "parameter [891,924]",
      "dest": "parameter [891,924]"
    },
    {
      "src": "primitive_type [24373,24377]",
      "dest": "primitive_type [16684,16688]"
    },
    {
      "src": "struct_member [37147,37170]",
      "dest": "struct_member [23782,23805]"
    },
    {
      "src": "): ) [9538,9539]",
      "dest": "): ) [6503,6504]"
    },
    {
      "src": "if: if [50674,50676]",
      "dest": "if: if [34437,34439]"
    },
    {
      "src": "identifier: borrower [43407,43415]",
      "dest": "identifier: borrower [29897,29905]"
    },
    {
      "src": "comment: // Set market's comptroller to newComptroller [52855,52900]",
      "dest": "comment: // Set market's comptroller to newComptroller [36618,36663]"
    },
    {
      "src": "identifier: Error [53565,53570]",
      "dest": "identifier: Error [37328,37333]"
    },
    {
      "src": "=: = [2187,2188]",
      "dest": "=: = [2187,2188]"
    },
    {
      "src": "binary_expression [51583,51637]",
      "dest": "binary_expression [35346,35400]"
    },
    {
      "src": "primitive_type [11501,11508]",
      "dest": "primitive_type [9800,9807]"
    },
    {
      "src": "{: { [64547,64548]",
      "dest": "{: { [49421,49422]"
    },
    {
      "src": "primitive_type [45317,45324]",
      "dest": "primitive_type [31807,31814]"
    },
    {
      "src": "primitive_type [8362,8366]",
      "dest": "primitive_type [5624,5628]"
    },
    {
      "src": ",: , [398,399]",
      "dest": ",: , [398,399]"
    },
    {
      "src": "call_argument [5359,5369]",
      "dest": "call_argument [2750,2760]"
    },
    {
      "src": "primitive_type [53492,53496]",
      "dest": "primitive_type [37255,37259]"
    },
    {
      "src": "identifier: sender [54401,54407]",
      "dest": "identifier: sender [38164,38170]"
    },
    {
      "src": "identifier: getAccountSnapshot [8297,8315]",
      "dest": "identifier: getAccountSnapshot [5559,5577]"
    },
    {
      "src": "identifier: fail [44196,44200]",
      "dest": "identifier: fail [30686,30690]"
    },
    {
      "src": "{: { [37766,37767]",
      "dest": "{: { [24401,24402]"
    },
    {
      "src": "return_statement [62373,62454]",
      "dest": "return_statement [45844,45925]"
    },
    {
      "src": "identifier: repayAmount [42461,42472]",
      "dest": "identifier: repayAmount [28951,28962]"
    },
    {
      "src": "=: = [18979,18980]",
      "dest": "=: = [15093,15094]"
    },
    {
      "src": "comment: // (No safe failures beyond this point) [18761,18800]",
      "dest": "comment: // (No safe failures beyond this point) [14875,14914]"
    },
    {
      "src": "(: ( [35527,35528]",
      "dest": "(: ( [22162,22163]"
    },
    {
      "src": "uint: uint [8893,8897]",
      "dest": "uint: uint [5858,5862]"
    },
    {
      "src": "(: ( [45593,45594]",
      "dest": "(: ( [32083,32084]"
    },
    {
      "src": "primitive_type [10633,10637]",
      "dest": "primitive_type [9096,9100]"
    },
    {
      "src": "call_argument [59547,59586]",
      "dest": "call_argument [43193,43232]"
    },
    {
      "src": "member_expression [40731,40753]",
      "dest": "member_expression [27191,27213]"
    },
    {
      "src": "identifier: initialExchangeRateMantissa_ [1017,1045]",
      "dest": "identifier: initialExchangeRateMantissa_ [1017,1045]"
    },
    {
      "src": "primitive_type [62152,62156]",
      "dest": "primitive_type [45623,45627]"
    },
    {
      "src": "type_name [37037,37046]",
      "dest": "type_name [23672,23681]"
    },
    {
      "src": "member_expression [5359,5369]",
      "dest": "member_expression [2750,2760]"
    },
    {
      "src": "number_literal: 0 [44276,44277]",
      "dest": "number_literal: 0 [30766,30767]"
    },
    {
      "src": "): ) [5873,5874]",
      "dest": "): ) [3264,3265]"
    },
    {
      "src": "identifier: borrowsPrior [15933,15945]",
      "dest": "identifier: borrowsPrior [13286,13298]"
    },
    {
      "src": "identifier: borrowRateMantissa [16122,16140]",
      "dest": "identifier: borrowRateMantissa [13475,13493]"
    },
    {
      "src": "identifier: NO_ERROR [19208,19216]",
      "dest": "identifier: NO_ERROR [15322,15330]"
    },
    {
      "src": "parameter [50626,50630]",
      "dest": "parameter [34389,34393]"
    },
    {
      "src": "comment: // (No safe failures beyond this point) [34281,34320]",
      "dest": "comment: // (No safe failures beyond this point) [20886,20925]"
    },
    {
      "src": "call_argument [20135,20145]",
      "dest": "call_argument [16249,16259]"
    },
    {
      "src": "external: external [15142,15150]",
      "dest": "external: external [12495,12503]"
    },
    {
      "src": "(: ( [10138,10139]",
      "dest": "(: ( [8601,8602]"
    },
    {
      "src": "contract_declaration [364,64702]",
      "dest": "contract_declaration [364,49576]"
    },
    {
      "src": "): ) [52471,52472]",
      "dest": "): ) [36234,36235]"
    },
    {
      "src": "comment: // Emit NewMarketInterestRateModel(oldInterestRateModel, newInterestRateModel) [63122,63200]",
      "dest": "comment: // Emit NewMarketInterestRateModel(oldInterestRateModel, newInterestRateModel) [46593,46671]"
    },
    {
      "src": "member_expression [39649,39671]",
      "dest": "member_expression [26369,26391]"
    },
    {
      "src": "(: ( [41893,41894]",
      "dest": "(: ( [28383,28384]"
    },
    {
      "src": "return_statement [8885,8967]",
      "dest": "return_statement [5850,5932]"
    },
    {
      "src": "type_cast_expression [19197,19217]",
      "dest": "type_cast_expression [15311,15331]"
    },
    {
      "src": "function_definition [7601,7950]",
      "dest": "function_definition [4992,5212]"
    },
    {
      "src": ",: , [36953,36954]",
      "dest": ",: , [23588,23589]"
    },
    {
      "src": "return_statement [19912,19984]",
      "dest": "return_statement [16026,16098]"
    },
    {
      "src": "identifier: borrowIndexNew [17191,17205]",
      "dest": "identifier: borrowIndexNew [14696,14710]"
    },
    {
      "src": ",: , [44995,44996]",
      "dest": ",: , [31485,31486]"
    },
    {
      "src": "identifier: interestRateModel [62805,62822]",
      "dest": "identifier: interestRateModel [46276,46293]"
    },
    {
      "src": "identifier: accrualBlockNumber [15639,15657]",
      "dest": "identifier: accrualBlockNumber [12992,13010]"
    },
    {
      "src": "function_definition [10038,10227]",
      "dest": "function_definition [8501,8690]"
    },
    {
      "src": "return_statement [59511,59588]",
      "dest": "return_statement [43157,43234]"
    },
    {
      "src": "call_argument [5845,5855]",
      "dest": "call_argument [3236,3246]"
    },
    {
      "src": "primitive_type [59113,59117]",
      "dest": "primitive_type [42759,42763]"
    },
    {
      "src": "call_expression [54439,54507]",
      "dest": "call_expression [38202,38270]"
    },
    {
      "src": "function: function [55461,55469]",
      "dest": "function: function [39224,39232]"
    },
    {
      "src": "identifier: newComptroller [52435,52449]",
      "dest": "identifier: newComptroller [36198,36212]"
    },
    {
      "src": "function: function [9716,9724]",
      "dest": "function: function [6681,6689]"
    },
    {
      "src": "visibility [37736,37744]",
      "dest": "visibility [24371,24379]"
    },
    {
      "src": "member_expression [58556,58606]",
      "dest": "member_expression [42202,42252]"
    },
    {
      "src": "comment: /**      * @notice User redeems cTokens in exchange for the underlying asset      * @dev Assumes interest has already been accrued up to the current block      * @param redeemer The address of the account which is redeeming the tokens      * @param redeemTokensIn The number of cTokens to redeem into underlying (only one of redeemTokensIn or redeemAmountIn may be non-zero)      * @param redeemAmountIn The number of underlying tokens to receive from redeeming cTokens (only one of redeemTokensIn or redeemAmountIn may be non-zero)      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)      */ [25956,26583]",
      "dest": "comment: /**      * @notice Transfer `tokens` tokens from `src` to `dst` by `spender`      * @dev Called by both `transfer` and `transferFrom` internally      */ [47868,48020]"
    },
    {
      "src": "primitive_type [59169,59173]",
      "dest": "primitive_type [42815,42819]"
    },
    {
      "src": "{: { [25280,25281]",
      "dest": "{: { [17591,17592]"
    },
    {
      "src": "if_statement [53547,53830]",
      "dest": "if_statement [37310,37593]"
    },
    {
      "src": "if_statement [50674,50798]",
      "dest": "if_statement [34437,34561]"
    },
    {
      "src": "function_definition [12851,13046]",
      "dest": "function_definition [10749,10944]"
    },
    {
      "src": "type_cast_expression [32464,32477]",
      "dest": "type_cast_expression [19402,19415]"
    },
    {
      "src": "call_argument [46187,46209]",
      "dest": "call_argument [32677,32699]"
    },
    {
      "src": "): ) [38709,38710]",
      "dest": "): ) [24883,24884]"
    },
    {
      "src": "type_name [28537,28541]",
      "dest": "type_name [14556,14560]"
    },
    {
      "src": "import_directive [126,153]",
      "dest": "import_directive [126,153]"
    },
    {
      "src": "identifier: newComptroller [52923,52937]",
      "dest": "identifier: newComptroller [36686,36700]"
    },
    {
      "src": "(: ( [51472,51473]",
      "dest": "(: ( [35235,35236]"
    },
    {
      "src": "assignment_expression [51933,51953]",
      "dest": "assignment_expression [35696,35716]"
    },
    {
      "src": "call_argument [43564,43571]",
      "dest": "call_argument [30054,30061]"
    },
    {
      "src": "view: view [9426,9430]",
      "dest": "view: view [6391,6395]"
    },
    {
      "src": "call_expression [59280,59345]",
      "dest": "call_expression [42926,42991]"
    },
    {
      "src": "uint: uint [35577,35581]",
      "dest": "uint: uint [22212,22216]"
    },
    {
      "src": "): ) [60634,60635]",
      "dest": "): ) [44105,44106]"
    },
    {
      "src": ",: , [8372,8373]",
      "dest": ",: , [5634,5635]"
    },
    {
      "src": "comment: // (No safe failures beyond this point) [56887,56926]",
      "dest": "comment: // (No safe failures beyond this point) [40650,40689]"
    },
    {
      "src": "identifier: vars [33132,33136]",
      "dest": "identifier: vars [20362,20366]"
    },
    {
      "src": "parameter [41659,41663]",
      "dest": "parameter [28149,28153]"
    },
    {
      "src": "function: function [58214,58222]",
      "dest": "function: function [41860,41868]"
    },
    {
      "src": "primitive_type [48100,48104]",
      "dest": "primitive_type [49224,49228]"
    },
    {
      "src": "identifier: repayBorrowFresh [36003,36019]",
      "dest": "identifier: repayBorrowFresh [22638,22654]"
    },
    {
      "src": "number_literal: 0 [43574,43575]",
      "dest": "number_literal: 0 [30064,30065]"
    },
    {
      "src": "): ) [4970,4971]",
      "dest": "): ) [19870,19871]"
    },
    {
      "src": "): ) [15201,15202]",
      "dest": "): ) [12554,12555]"
    },
    {
      "src": "identifier: amount [6518,6524]",
      "dest": "identifier: amount [3909,3915]"
    },
    {
      "src": "variable_declaration [53508,53518]",
      "dest": "variable_declaration [37271,37281]"
    },
    {
      "src": "): ) [43974,43975]",
      "dest": "): ) [30464,30465]"
    },
    {
      "src": "call_argument [36737,36742]",
      "dest": "call_argument [23372,23377]"
    },
    {
      "src": "primitive_type [20914,20918]",
      "dest": "primitive_type [48535,48539]"
    },
    {
      "src": "call_expression [1197,1265]",
      "dest": "call_expression [1197,1265]"
    },
    {
      "src": "call_expression [38180,38196]",
      "dest": "call_expression [25115,25131]"
    },
    {
      "src": "return_type_definition [62143,62157]",
      "dest": "return_type_definition [45614,45628]"
    },
    {
      "src": "user_defined_type [7679,7682]",
      "dest": "user_defined_type [5070,5073]"
    },
    {
      "src": "variable_declaration [17050,17081]",
      "dest": "variable_declaration [14296,14327]"
    },
    {
      "src": "): ) [42073,42074]",
      "dest": "): ) [28563,28564]"
    },
    {
      "src": "identifier: accrueInterest [35612,35626]",
      "dest": "identifier: accrueInterest [22247,22261]"
    },
    {
      "src": "variable_declaration_statement [19706,19736]",
      "dest": "variable_declaration_statement [15820,15850]"
    },
    {
      "src": "(: ( [5733,5734]",
      "dest": "(: ( [3124,3125]"
    },
    {
      "src": "): ) [37734,37735]",
      "dest": "): ) [24369,24370]"
    },
    {
      "src": "(: ( [47301,47302]",
      "dest": "(: ( [33821,33822]"
    },
    {
      "src": "returns: returns [47256,47263]",
      "dest": "returns: returns [33776,33783]"
    },
    {
      "src": "parameter [10963,10978]",
      "dest": "parameter [9426,9441]"
    },
    {
      "src": "(: ( [52095,52096]",
      "dest": "(: ( [35858,35859]"
    },
    {
      "src": "variable_declaration [11662,11686]",
      "dest": "variable_declaration [10421,10445]"
    },
    {
      "src": "\": \" [224,225]",
      "dest": "\": \" [224,225]"
    },
    {
      "src": "identifier: src [6457,6460]",
      "dest": "identifier: src [3848,3851]"
    },
    {
      "src": "call_expression [42221,42296]",
      "dest": "call_expression [28711,28786]"
    },
    {
      "src": "call_expression [29873,29887]",
      "dest": "call_expression [8145,8159]"
    },
    {
      "src": "function_body [62158,63329]",
      "dest": "function_body [45629,46800]"
    },
    {
      "src": "variable_declaration [1616,1624]",
      "dest": "variable_declaration [1616,1624]"
    },
    {
      "src": "identifier: FailureInfo [31675,31686]",
      "dest": "identifier: FailureInfo [18613,18624]"
    },
    {
      "src": ",: , [9852,9853]",
      "dest": ",: , [6817,6818]"
    },
    {
      "src": "(: ( [9174,9175]",
      "dest": "(: ( [6139,6140]"
    },
    {
      "src": "address: address [7630,7637]",
      "dest": "address: address [5021,5028]"
    },
    {
      "src": "identifier: liquidateBorrowFresh [42418,42438]",
      "dest": "identifier: liquidateBorrowFresh [28908,28928]"
    },
    {
      "src": ",: , [62653,62654]",
      "dest": ",: , [46124,46125]"
    },
    {
      "src": "): ) [41746,41747]",
      "dest": "): ) [28236,28237]"
    },
    {
      "src": "{: { [56446,56447]",
      "dest": "{: { [40209,40210]"
    },
    {
      "src": "identifier: Error [38225,38230]",
      "dest": "identifier: Error [25160,25165]"
    },
    {
      "src": "primitive_type [6449,6456]",
      "dest": "primitive_type [3840,3847]"
    },
    {
      "src": "): ) [61242,61243]",
      "dest": "): ) [44713,44714]"
    },
    {
      "src": "primitive_type [5309,5313]",
      "dest": "primitive_type [2700,2704]"
    },
    {
      "src": "): ) [58769,58770]",
      "dest": "): ) [42415,42416]"
    },
    {
      "src": ",: , [32589,32590]",
      "dest": ",: , [19527,19528]"
    },
    {
      "src": "!=: != [24438,24440]",
      "dest": "!=: != [16749,16751]"
    },
    {
      "src": "expression_statement [40184,40269]",
      "dest": "expression_statement [26769,26835]"
    },
    {
      "src": "call_expression [40006,40058]",
      "dest": "call_expression [26710,26759]"
    },
    {
      "src": ".: . [24632,24633]",
      "dest": ".: . [16943,16944]"
    },
    {
      "src": "identifier: fail [51660,51664]",
      "dest": "identifier: fail [35423,35427]"
    },
    {
      "src": "boolean_literal [2358,2362]",
      "dest": "boolean_literal [2358,2362]"
    },
    {
      "src": "identifier: borrower [44150,44158]",
      "dest": "identifier: borrower [30640,30648]"
    },
    {
      "src": "primitive_type [35599,35603]",
      "dest": "primitive_type [22234,22238]"
    },
    {
      "src": "view: view [8342,8346]",
      "dest": "view: view [5604,5608]"
    },
    {
      "src": "(: ( [19930,19931]",
      "dest": "(: ( [16044,16045]"
    },
    {
      "src": "identifier: borrower [45594,45602]",
      "dest": "identifier: borrower [32084,32092]"
    },
    {
      "src": "): ) [25318,25319]",
      "dest": "): ) [17629,17630]"
    },
    {
      "src": ",: , [59770,59771]",
      "dest": ",: , [43416,43417]"
    },
    {
      "src": "expression_statement [34931,34967]",
      "dest": "expression_statement [21536,21572]"
    },
    {
      "src": "uint: uint [63302,63306]",
      "dest": "uint: uint [46773,46777]"
    },
    {
      "src": "identifier: error [19931,19936]",
      "dest": "identifier: error [16045,16050]"
    },
    {
      "src": "return_type_definition [55529,55543]",
      "dest": "return_type_definition [39292,39306]"
    },
    {
      "src": "address: address [5249,5256]",
      "dest": "address: address [2640,2647]"
    },
    {
      "src": "identifier: InterestRateModel [950,967]",
      "dest": "identifier: InterestRateModel [950,967]"
    },
    {
      "src": ",: , [1090,1091]",
      "dest": ",: , [1090,1091]"
    },
    {
      "src": "expression_statement [1482,1575]",
      "dest": "expression_statement [1482,1575]"
    },
    {
      "src": "): ) [32774,32775]",
      "dest": "): ) [20004,20005]"
    },
    {
      "src": "(: ( [31666,31667]",
      "dest": "(: ( [18604,18605]"
    },
    {
      "src": "expression_statement [1197,1266]",
      "dest": "expression_statement [1197,1266]"
    },
    {
      "src": "assignment_expression [2206,2226]",
      "dest": "assignment_expression [2206,2226]"
    },
    {
      "src": "): ) [54862,54863]",
      "dest": "): ) [38625,38626]"
    },
    {
      "src": "call_expression [33694,33736]",
      "dest": "call_expression [20703,20742]"
    },
    {
      "src": "member_expression [31500,31514]",
      "dest": "member_expression [18438,18452]"
    },
    {
      "src": "comment: // redeemFresh emits redeem-specific logs on errors, so we don't need to [25584,25656]",
      "dest": "comment: // redeemFresh emits redeem-specific logs on errors, so we don't need to [17895,17967]"
    },
    {
      "src": "assignment_expression [50974,51004]",
      "dest": "assignment_expression [34737,34767]"
    },
    {
      "src": "=: = [15989,15990]",
      "dest": "=: = [13342,13343]"
    },
    {
      "src": "comment: /*** Admin Functions ***/ [50118,50143]",
      "dest": "comment: /*** Admin Functions ***/ [33881,33906]"
    },
    {
      "src": "): ) [8912,8913]",
      "dest": "): ) [5877,5878]"
    },
    {
      "src": "identifier: BORROW_ACCRUE_INTEREST_FAILED [31687,31716]",
      "dest": "identifier: BORROW_ACCRUE_INTEREST_FAILED [18625,18654]"
    },
    {
      "src": "identifier: cTokenCollateral [41604,41620]",
      "dest": "identifier: cTokenCollateral [28094,28110]"
    },
    {
      "src": "): ) [23948,23949]",
      "dest": "): ) [24996,24997]"
    },
    {
      "src": "(: ( [43917,43918]",
      "dest": "(: ( [30407,30408]"
    },
    {
      "src": "function_body [19696,20153]",
      "dest": "function_body [15810,16267]"
    },
    {
      "src": "(: ( [51664,51665]",
      "dest": "(: ( [35427,35428]"
    },
    {
      "src": "]: ] [6514,6515]",
      "dest": "]: ] [3905,3906]"
    },
    {
      "src": "(: ( [18440,18441]",
      "dest": "(: ( [14738,14739]"
    },
    {
      "src": "): ) [53762,53763]",
      "dest": "): ) [37525,37526]"
    },
    {
      "src": "}: } [14163,14164]",
      "dest": "}: } [11866,11867]"
    },
    {
      "src": "solidity_pragma_token [7,23]",
      "dest": "solidity_pragma_token [7,23]"
    },
    {
      "src": "uint: uint [15792,15796]",
      "dest": "uint: uint [13145,13149]"
    },
    {
      "src": ",: , [19161,19162]",
      "dest": ",: , [15275,15276]"
    },
    {
      "src": "address: address [6938,6945]",
      "dest": "address: address [4329,4336]"
    },
    {
      "src": "identifier: repayBorrowInternal [35508,35527]",
      "dest": "identifier: repayBorrowInternal [22143,22162]"
    },
    {
      "src": "(: ( [9768,9769]",
      "dest": "(: ( [6733,6734]"
    },
    {
      "src": "type_cast_expression [45887,45900]",
      "dest": "type_cast_expression [32377,32390]"
    },
    {
      "src": "uint: uint [2088,2092]",
      "dest": "uint: uint [2088,2092]"
    },
    {
      "src": "number_literal: 0 [44079,44080]",
      "dest": "number_literal: 0 [30569,30570]"
    },
    {
      "src": "uint: uint [11696,11700]",
      "dest": "uint: uint [10501,10505]"
    },
    {
      "src": ".: . [59965,59966]",
      "dest": ".: . [43611,43612]"
    },
    {
      "src": "variable_declaration [31443,31453]",
      "dest": "variable_declaration [18381,18391]"
    },
    {
      "src": "if_statement [31482,31728]",
      "dest": "if_statement [18420,18666]"
    },
    {
      "src": "identifier: actualRepayAmount [45344,45361]",
      "dest": "identifier: actualRepayAmount [31834,31851]"
    },
    {
      "src": "primitive_type [56400,56404]",
      "dest": "primitive_type [40163,40167]"
    },
    {
      "src": "binary_expression [44535,44558]",
      "dest": "binary_expression [31025,31048]"
    },
    {
      "src": "identifier: Error [59960,59965]",
      "dest": "identifier: Error [43606,43611]"
    },
    {
      "src": "member_expression [54464,54506]",
      "dest": "member_expression [38227,38269]"
    },
    {
      "src": "!=: != [53557,53559]",
      "dest": "!=: != [37320,37322]"
    },
    {
      "src": "identifier: liquidator [47186,47196]",
      "dest": "identifier: liquidator [33706,33716]"
    },
    {
      "src": "): ) [44998,44999]",
      "dest": "): ) [31488,31489]"
    },
    {
      "src": "function_body [31433,31869]",
      "dest": "function_body [18371,18807]"
    },
    {
      "src": "function_definition [5231,5414]",
      "dest": "function_definition [2622,2805]"
    },
    {
      "src": "boolean_literal [64655,64659]",
      "dest": "boolean_literal [49529,49533]"
    },
    {
      "src": "call_expression [57384,57419]",
      "dest": "call_expression [41147,41182]"
    },
    {
      "src": "identifier: Exp [18116,18119]",
      "dest": "identifier: Exp [14606,14609]"
    },
    {
      "src": "identifier: require [45559,45566]",
      "dest": "identifier: require [32049,32056]"
    },
    {
      "src": "type_name [9440,9444]",
      "dest": "type_name [6405,6409]"
    },
    {
      "src": "uint: uint [35583,35587]",
      "dest": "uint: uint [22218,22222]"
    },
    {
      "src": "identifier: FailureInfo [59547,59558]",
      "dest": "identifier: FailureInfo [43193,43204]"
    },
    {
      "src": "call_argument [45325,45341]",
      "dest": "call_argument [31815,31831]"
    },
    {
      "src": "}: } [2368,2369]",
      "dest": "}: } [2368,2369]"
    },
    {
      "src": "uint: uint [53080,53084]",
      "dest": "uint: uint [36843,36847]"
    },
    {
      "src": "function_body [51499,52171]",
      "dest": "function_body [35262,35934]"
    },
    {
      "src": "block_statement [45953,46048]",
      "dest": "block_statement [32443,32538]"
    },
    {
      "src": "identifier: INVALID_ACCOUNT_PAIR [44207,44227]",
      "dest": "identifier: INVALID_ACCOUNT_PAIR [30697,30717]"
    },
    {
      "src": "if: if [36551,36553]",
      "dest": "if: if [23186,23188]"
    },
    {
      "src": ".: . [43934,43935]",
      "dest": ".: . [30424,30425]"
    },
    {
      "src": "call_expression [25508,25520]",
      "dest": "call_expression [17819,17831]"
    },
    {
      "src": "identifier: UNAUTHORIZED [51671,51683]",
      "dest": "identifier: UNAUTHORIZED [35434,35446]"
    },
    {
      "src": "uint: uint [59076,59080]",
      "dest": "uint: uint [42722,42726]"
    },
    {
      "src": "call_expression [17823,17865]",
      "dest": "call_expression [14507,14546]"
    },
    {
      "src": "type_cast_expression [52144,52164]",
      "dest": "type_cast_expression [35907,35927]"
    },
    {
      "src": "member_expression [33394,33413]",
      "dest": "member_expression [20609,20628]"
    },
    {
      "src": "parameter [55538,55542]",
      "dest": "parameter [39301,39305]"
    },
    {
      "src": ",: , [43761,43762]",
      "dest": ",: , [30251,30252]"
    },
    {
      "src": "call_argument [63263,63283]",
      "dest": "call_argument [46734,46754]"
    },
    {
      "src": "identifier: admin [59252,59257]",
      "dest": "identifier: admin [42898,42903]"
    },
    {
      "src": "variable_declaration_statement [15608,15658]",
      "dest": "variable_declaration_statement [12961,13011]"
    },
    {
      "src": "comment: /**      * @notice Transfers collateral tokens (this market) to the liquidator.      * @dev Will fail unless called by another cToken during the process of liquidation.      *  Its absolutely critical to use msg.sender as the borrowed cToken and not a parameter.      * @param liquidator The account receiving seized collateral      * @param borrower The account having collateral seized      * @param seizeTokens The number of cTokens to seize      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)      */ [46619,47158]",
      "dest": "comment: /**      * @notice Transfers collateral tokens (this market) to the liquidator.      * @dev Will fail unless called by another cToken during the process of liquidation.      *  Its absolutely critical to use msg.sender as the borrowed cToken and not a parameter.      * @param liquidator The account receiving seized collateral      * @param borrower The account having collateral seized      * @param seizeTokens The number of cTokens to seize      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)      */ [33139,33678]"
    },
    {
      "src": ",: , [42459,42460]",
      "dest": ",: , [28949,28950]"
    },
    {
      "src": "}: } [61547,61548]",
      "dest": "}: } [45018,45019]"
    },
    {
      "src": "return_statement [53739,53820]",
      "dest": "return_statement [37502,37583]"
    },
    {
      "src": "expression_statement [64630,64632]",
      "dest": "expression_statement [49504,49506]"
    },
    {
      "src": "\": \" [1730,1731]",
      "dest": "\": \" [1730,1731]"
    },
    {
      "src": "identifier: UNAUTHORIZED [62391,62403]",
      "dest": "identifier: UNAUTHORIZED [45862,45874]"
    },
    {
      "src": "): ) [55802,55803]",
      "dest": "): ) [39565,39566]"
    },
    {
      "src": "=: = [13909,13910]",
      "dest": "=: = [11634,11635]"
    },
    {
      "src": "-: - [38960,38961]",
      "dest": "-: - [25680,25681]"
    },
    {
      "src": ",: , [36042,36043]",
      "dest": ",: , [22677,22678]"
    },
    {
      "src": "type_name [53508,53512]",
      "dest": "type_name [37271,37275]"
    },
    {
      "src": "type_name [51803,51810]",
      "dest": "type_name [35566,35573]"
    },
    {
      "src": "=: = [32436,32437]",
      "dest": "=: = [19374,19375]"
    },
    {
      "src": "(: ( [56718,56719]",
      "dest": "(: ( [40481,40482]"
    },
    {
      "src": "(: ( [44738,44739]",
      "dest": "(: ( [31228,31229]"
    },
    {
      "src": "returns: returns [11532,11539]",
      "dest": "returns: returns [9831,9838]"
    },
    {
      "src": "identifier: account [10717,10724]",
      "dest": "identifier: account [9180,9187]"
    },
    {
      "src": "identifier: redeemAmount [25699,25711]",
      "dest": "identifier: redeemAmount [18010,18022]"
    },
    {
      "src": "identifier: reduceAmount [58757,58769]",
      "dest": "identifier: reduceAmount [42403,42415]"
    },
    {
      "src": "variable_declaration [45217,45238]",
      "dest": "variable_declaration [31707,31728]"
    },
    {
      "src": "identifier: _reduceReservesFresh [59055,59075]",
      "dest": "identifier: _reduceReservesFresh [42701,42721]"
    },
    {
      "src": "identifier: owner [7270,7275]",
      "dest": "identifier: owner [4661,4666]"
    },
    {
      "src": "tuple_expression [8892,8966]",
      "dest": "tuple_expression [5857,5931]"
    },
    {
      "src": "identifier: admin [62352,62357]",
      "dest": "identifier: admin [45823,45828]"
    },
    {
      "src": "identifier: INVALID_CLOSE_AMOUNT_REQUESTED [44392,44422]",
      "dest": "identifier: INVALID_CLOSE_AMOUNT_REQUESTED [30882,30912]"
    },
    {
      "src": "call_expression [55567,55583]",
      "dest": "call_expression [39330,39346]"
    },
    {
      "src": "[: [ [6506,6507]",
      "dest": "[: [ [3897,3898]"
    },
    {
      "src": "comment: /**      * @notice Applies accrued interest to total borrows and reserves      * @dev This calculates interest accrued from the last checkpointed block      *   up to the current block and writes new checkpoint to storage.      */ [15215,15445]",
      "dest": "comment: /**      * @notice Applies accrued interest to total borrows and reserves      * @dev This calculates interest accrued from the last checkpointed block      *   up to the current block and writes new checkpoint to storage.      */ [12568,12798]"
    },
    {
      "src": "call_argument [12511,12530]",
      "dest": "call_argument [10520,10539]"
    },
    {
      "src": "assignment_expression [33379,33454]",
      "dest": "assignment_expression [25521,25580]"
    },
    {
      "src": "): ) [41964,41965]",
      "dest": "): ) [28454,28455]"
    },
    {
      "src": "parameter [56434,56438]",
      "dest": "parameter [40197,40201]"
    },
    {
      "src": "call_expression [19925,19937]",
      "dest": "call_expression [16039,16051]"
    },
    {
      "src": "uint: uint [44550,44554]",
      "dest": "uint: uint [31040,31044]"
    },
    {
      "src": "identifier: msg [59238,59241]",
      "dest": "identifier: msg [42884,42887]"
    },
    {
      "src": "\": \" [182,183]",
      "dest": "\": \" [182,183]"
    },
    {
      "src": "identifier: initialize [880,890]",
      "dest": "identifier: initialize [880,890]"
    },
    {
      "src": "binary_expression [37926,37938]",
      "dest": "binary_expression [24561,24573]"
    },
    {
      "src": "identifier: account [11821,11828]",
      "dest": "identifier: account [9959,9966]"
    },
    {
      "src": "if_statement [61253,61548]",
      "dest": "if_statement [44724,45019]"
    },
    {
      "src": "(: ( [44852,44853]",
      "dest": "(: ( [31342,31343]"
    },
    {
      "src": "identifier: BAD_INPUT [54896,54905]",
      "dest": "identifier: BAD_INPUT [38659,38668]"
    },
    {
      "src": "): ) [41747,41748]",
      "dest": "): ) [28237,28238]"
    },
    {
      "src": "type_name [37718,37722]",
      "dest": "type_name [24353,24357]"
    },
    {
      "src": "(: ( [13413,13414]",
      "dest": "(: ( [5837,5838]"
    },
    {
      "src": "{: { [43249,43250]",
      "dest": "{: { [29739,29740]"
    },
    {
      "src": "(: ( [46570,46571]",
      "dest": "(: ( [33090,33091]"
    },
    {
      "src": "return_statement [5325,5408]",
      "dest": "return_statement [2716,2799]"
    },
    {
      "src": "call_argument [44004,44026]",
      "dest": "call_argument [30494,30516]"
    },
    {
      "src": "identifier: error [61470,61475]",
      "dest": "identifier: error [44941,44946]"
    },
    {
      "src": "call_argument [5867,5873]",
      "dest": "call_argument [3258,3264]"
    },
    {
      "src": "identifier: seizeTokens [47336,47347]",
      "dest": "identifier: seizeTokens [33856,33867]"
    },
    {
      "src": "return_statement [6579,6591]",
      "dest": "return_statement [3970,3982]"
    },
    {
      "src": "type_name [6938,6945]",
      "dest": "type_name [4329,4336]"
    },
    {
      "src": "uint: uint [42054,42058]",
      "dest": "uint: uint [28544,28548]"
    },
    {
      "src": "(: ( [25223,25224]",
      "dest": "(: ( [17534,17535]"
    },
    {
      "src": "emit_statement [53011,53063]",
      "dest": "emit_statement [36774,36826]"
    },
    {
      "src": "call_argument [5347,5357]",
      "dest": "call_argument [2738,2748]"
    },
    {
      "src": "call_argument [24607,24619]",
      "dest": "call_argument [16918,16930]"
    },
    {
      "src": "returns: returns [62143,62150]",
      "dest": "returns: returns [45614,45621]"
    },
    {
      "src": "if_statement [32958,33099]",
      "dest": "if_statement [20188,20329]"
    },
    {
      "src": "identifier: totalBorrows [18966,18978]",
      "dest": "identifier: totalBorrows [15080,15092]"
    },
    {
      "src": ".: . [57811,57812]",
      "dest": ".: . [41457,41458]"
    },
    {
      "src": "(: ( [1642,1643]",
      "dest": "(: ( [1642,1643]"
    },
    {
      "src": ",: , [37758,37759]",
      "dest": ",: , [24393,24394]"
    },
    {
      "src": "internal: internal [19653,19661]",
      "dest": "internal: internal [15767,15775]"
    },
    {
      "src": "parameter [48082,48098]",
      "dest": "parameter [49206,49222]"
    },
    {
      "src": "function_body [56446,57967]",
      "dest": "function_body [40209,41613]"
    },
    {
      "src": "identifier: Error [44386,44391]",
      "dest": "identifier: Error [30876,30881]"
    },
    {
      "src": "call_expression [9495,9509]",
      "dest": "call_expression [6460,6474]"
    },
    {
      "src": ",: , [24807,24808]",
      "dest": ",: , [17118,17119]"
    },
    {
      "src": "uint: uint [10100,10104]",
      "dest": "uint: uint [8563,8567]"
    },
    {
      "src": "): ) [35879,35880]",
      "dest": "): ) [22514,22515]"
    },
    {
      "src": "variable_declaration_statement [51803,51828]",
      "dest": "variable_declaration_statement [35566,35591]"
    },
    {
      "src": "uint: uint [43237,43241]",
      "dest": "uint: uint [29727,29731]"
    },
    {
      "src": "identifier: repayBorrowFresh [36916,36932]",
      "dest": "identifier: repayBorrowFresh [23551,23567]"
    },
    {
      "src": "primitive_type [1681,1685]",
      "dest": "primitive_type [1681,1685]"
    },
    {
      "src": "identifier: seizeError [45778,45788]",
      "dest": "identifier: seizeError [32268,32278]"
    },
    {
      "src": "(: ( [54810,54811]",
      "dest": "(: ( [38573,38574]"
    },
    {
      "src": "call_expression [58537,58607]",
      "dest": "call_expression [42183,42253]"
    },
    {
      "src": "): ) [17307,17308]",
      "dest": "): ) [14382,14383]"
    },
    {
      "src": "visibility [9417,9425]",
      "dest": "visibility [6382,6390]"
    },
    {
      "src": ",: , [41657,41658]",
      "dest": ",: , [28147,28148]"
    },
    {
      "src": "primitive_type [52144,52148]",
      "dest": "primitive_type [35907,35911]"
    },
    {
      "src": "{: { [7709,7710]",
      "dest": "{: { [5100,5101]"
    },
    {
      "src": "type_name [52467,52471]",
      "dest": "type_name [36230,36234]"
    },
    {
      "src": "parameter [2919,2923]",
      "dest": "parameter [48123,48127]"
    },
    {
      "src": "(: ( [44921,44922]",
      "dest": "(: ( [31411,31412]"
    },
    {
      "src": "call_expression [15188,15202]",
      "dest": "call_expression [12541,12555]"
    },
    {
      "src": "identifier: exchangeRateStored [13298,13316]",
      "dest": "identifier: exchangeRateStored [11196,11214]"
    },
    {
      "src": "expression_statement [41990,42032]",
      "dest": "expression_statement [28480,28522]"
    },
    {
      "src": "member_expression [33702,33721]",
      "dest": "member_expression [20708,20727]"
    },
    {
      "src": "(: ( [37867,37868]",
      "dest": "(: ( [24502,24503]"
    },
    {
      "src": "primitive_type [41675,41679]",
      "dest": "primitive_type [28165,28169]"
    },
    {
      "src": ",: , [40970,40971]",
      "dest": ",: , [27460,27461]"
    },
    {
      "src": "identifier: oldPendingAdmin [51845,51860]",
      "dest": "identifier: oldPendingAdmin [35608,35623]"
    },
    {
      "src": "comment: /* Fail if repayAmount = -1 */ [44492,44522]",
      "dest": "comment: /* Fail if repayAmount = -1 */ [30982,31012]"
    },
    {
      "src": "identifier: actualRepayAmount [40712,40729]",
      "dest": "identifier: actualRepayAmount [27172,27189]"
    },
    {
      "src": "parameter [41588,41620]",
      "dest": "parameter [28078,28110]"
    },
    {
      "src": "(: ( [46287,46288]",
      "dest": "(: ( [32777,32778]"
    },
    {
      "src": ",: , [1137,1138]",
      "dest": ",: , [1137,1138]"
    },
    {
      "src": "(: ( [7803,7804]",
      "dest": "(: ( [5169,5170]"
    },
    {
      "src": "identifier: repayAmount [38984,38995]",
      "dest": "identifier: repayAmount [25704,25715]"
    },
    {
      "src": "(: ( [1204,1205]",
      "dest": "(: ( [1204,1205]"
    },
    {
      "src": "modifier_invocation [47243,47255]",
      "dest": "modifier_invocation [33763,33775]"
    },
    {
      "src": "call_argument [36731,36743]",
      "dest": "call_argument [23366,23378]"
    },
    {
      "src": "identifier: tokens [2893,2899]",
      "dest": "identifier: tokens [48097,48103]"
    },
    {
      "src": "uint256: uint256 [5262,5269]",
      "dest": "uint256: uint256 [2653,2660]"
    },
    {
      "src": "): ) [35883,35884]",
      "dest": "): ) [22518,22519]"
    },
    {
      "src": "call_argument [53031,53045]",
      "dest": "call_argument [36794,36808]"
    },
    {
      "src": "(: ( [44149,44150]",
      "dest": "(: ( [30639,30640]"
    },
    {
      "src": "): ) [56444,56445]",
      "dest": "): ) [40207,40208]"
    },
    {
      "src": "parameter [41552,41568]",
      "dest": "parameter [28042,28058]"
    },
    {
      "src": "address: address [2862,2869]",
      "dest": "address: address [48066,48073]"
    },
    {
      "src": "expression_statement [45559,45648]",
      "dest": "expression_statement [32049,32138]"
    },
    {
      "src": "expression_statement [39965,40059]",
      "dest": "expression_statement [26685,26760]"
    },
    {
      "src": "modifier_invocation [10078,10090]",
      "dest": "modifier_invocation [8541,8553]"
    },
    {
      "src": "call_expression [14346,14360]",
      "dest": "call_expression [12049,12063]"
    },
    {
      "src": "\": \" [1523,1524]",
      "dest": "\": \" [1523,1524]"
    },
    {
      "src": "identifier: REDUCE_RESERVES_ADMIN_CHECK [59317,59344]",
      "dest": "identifier: REDUCE_RESERVES_ADMIN_CHECK [42963,42990]"
    },
    {
      "src": "call_expression [24771,24811]",
      "dest": "call_expression [17082,17122]"
    },
    {
      "src": "call_argument [63307,63321]",
      "dest": "call_argument [46778,46792]"
    },
    {
      "src": "identifier: repayBorrowFresh [44788,44804]",
      "dest": "identifier: repayBorrowFresh [31278,31294]"
    },
    {
      "src": "if: if [55593,55595]",
      "dest": "if: if [39356,39358]"
    },
    {
      "src": "{: { [62359,62360]",
      "dest": "{: { [45830,45831]"
    },
    {
      "src": "function_definition [63870,63943]",
      "dest": "function_definition [47341,47414]"
    },
    {
      "src": "variable_declaration [44739,44760]",
      "dest": "variable_declaration [31229,31250]"
    },
    {
      "src": "uint: uint [36564,36568]",
      "dest": "uint: uint [23199,23203]"
    },
    {
      "src": "call_argument [41732,41746]",
      "dest": "call_argument [28222,28236]"
    },
    {
      "src": "{: { [31898,31899]",
      "dest": "{: { [18836,18837]"
    },
    {
      "src": "comment: /* We write the previously calculated values into storage */ [34731,34791]",
      "dest": "comment: /* We write the previously calculated values into storage */ [21336,21396]"
    },
    {
      "src": "(: ( [35817,35818]",
      "dest": "(: ( [22452,22453]"
    },
    {
      "src": "identifier: FailureInfo [41913,41924]",
      "dest": "identifier: FailureInfo [28403,28414]"
    },
    {
      "src": "variable_declaration [58305,58315]",
      "dest": "variable_declaration [41951,41961]"
    },
    {
      "src": "identifier: allowed [43564,43571]",
      "dest": "identifier: allowed [30054,30061]"
    },
    {
      "src": "call_expression [12935,12951]",
      "dest": "call_expression [10833,10849]"
    },
    {
      "src": "identifier: accrueInterest [61227,61241]",
      "dest": "identifier: accrueInterest [44698,44712]"
    },
    {
      "src": "member_expression [9463,9494]",
      "dest": "member_expression [6428,6459]"
    },
    {
      "src": "identifier: LIQUIDATE_CLOSE_AMOUNT_IS_UINT_MAX [44637,44671]",
      "dest": "identifier: LIQUIDATE_CLOSE_AMOUNT_IS_UINT_MAX [31127,31161]"
    },
    {
      "src": "tuple_expression [40949,40995]",
      "dest": "tuple_expression [27439,27485]"
    },
    {
      "src": "return_statement [60716,60744]",
      "dest": "return_statement [44187,44215]"
    },
    {
      "src": "uint: uint [55538,55542]",
      "dest": "uint: uint [39301,39305]"
    },
    {
      "src": "call_argument [47314,47324]",
      "dest": "call_argument [33834,33844]"
    },
    {
      "src": "): ) [63283,63284]",
      "dest": "): ) [46754,46755]"
    },
    {
      "src": "(: ( [40949,40950]",
      "dest": "(: ( [27439,27440]"
    },
    {
      "src": "identifier: newInterestRateModel [63091,63111]",
      "dest": "identifier: newInterestRateModel [46562,46582]"
    },
    {
      "src": "function_definition [37659,41002]",
      "dest": "function_definition [24294,27492]"
    },
    {
      "src": "primitive_type [19690,19694]",
      "dest": "primitive_type [15804,15808]"
    },
    {
      "src": "(: ( [33701,33702]",
      "dest": "(: ( [20707,20708]"
    },
    {
      "src": "): ) [31716,31717]",
      "dest": "): ) [18654,18655]"
    },
    {
      "src": "binary_expression [59684,59713]",
      "dest": "binary_expression [43330,43359]"
    },
    {
      "src": "function_body [58295,58777]",
      "dest": "function_body [41941,42423]"
    },
    {
      "src": "}: } [32872,32873]",
      "dest": "}: } [20102,20103]"
    },
    {
      "src": "): ) [59586,59587]",
      "dest": "): ) [43232,43233]"
    },
    {
      "src": "\": \" [10189,10190]",
      "dest": "\": \" [8652,8653]"
    },
    {
      "src": "call_argument [35824,35829]",
      "dest": "call_argument [22459,22464]"
    },
    {
      "src": "uint: uint [58239,58243]",
      "dest": "uint: uint [41885,41889]"
    },
    {
      "src": "): ) [45602,45603]",
      "dest": "): ) [32092,32093]"
    },
    {
      "src": "<: < [59699,59700]",
      "dest": "<: < [43345,43346]"
    },
    {
      "src": "call_argument [52059,52064]",
      "dest": "call_argument [35822,35827]"
    },
    {
      "src": "}: } [9216,9217]",
      "dest": "}: } [6181,6182]"
    },
    {
      "src": "expression_statement [19006,19039]",
      "dest": "expression_statement [15120,15153]"
    },
    {
      "src": "struct_member [37209,37232]",
      "dest": "struct_member [23844,23867]"
    },
    {
      "src": "=: = [61225,61226]",
      "dest": "=: = [44696,44697]"
    },
    {
      "src": "=: = [15902,15903]",
      "dest": "=: = [13255,13256]"
    },
    {
      "src": "call_argument [10124,10164]",
      "dest": "call_argument [8587,8627]"
    },
    {
      "src": "}: } [61735,61736]",
      "dest": "}: } [45206,45207]"
    },
    {
      "src": "(: ( [12949,12950]",
      "dest": "(: ( [10847,10848]"
    },
    {
      "src": "call_expression [41688,41704]",
      "dest": "call_expression [28178,28194]"
    },
    {
      "src": "type_name [6449,6456]",
      "dest": "type_name [3840,3847]"
    },
    {
      "src": "address: address [47178,47185]",
      "dest": "address: address [33698,33705]"
    },
    {
      "src": "==: == [45828,45830]",
      "dest": "==: == [32318,32320]"
    },
    {
      "src": ".: . [43530,43531]",
      "dest": ".: . [30020,30021]"
    },
    {
      "src": ",: , [41568,41569]",
      "dest": ",: , [28058,28059]"
    },
    {
      "src": "(: ( [52566,52567]",
      "dest": "(: ( [36329,36330]"
    },
    {
      "src": "identifier: Error [54666,54671]",
      "dest": "identifier: Error [38429,38434]"
    },
    {
      "src": "{: { [32993,32994]",
      "dest": "{: { [20223,20224]"
    },
    {
      "src": "): ) [7000,7001]",
      "dest": "): ) [4391,4392]"
    },
    {
      "src": "identifier: MARKET_NOT_FRESH [44010,44026]",
      "dest": "identifier: MARKET_NOT_FRESH [30500,30516]"
    },
    {
      "src": "call_expression [59736,59819]",
      "dest": "call_expression [43382,43465]"
    },
    {
      "src": "call_argument [12960,12974]",
      "dest": "call_argument [10858,10872]"
    },
    {
      "src": "identifier: repayAmount [44341,44352]",
      "dest": "identifier: repayAmount [30831,30842]"
    },
    {
      "src": "identifier: redeemAmount [25229,25241]",
      "dest": "identifier: redeemAmount [17540,17552]"
    },
    {
      "src": "parameter [6938,6951]",
      "dest": "parameter [4329,4342]"
    },
    {
      "src": "): ) [10679,10680]",
      "dest": "): ) [9142,9143]"
    },
    {
      "src": ".: . [35236,35237]",
      "dest": ".: . [21871,21872]"
    },
    {
      "src": "identifier: NO_ERROR [35662,35670]",
      "dest": "identifier: NO_ERROR [22297,22305]"
    },
    {
      "src": "call_argument [12935,12975]",
      "dest": "call_argument [10833,10873]"
    },
    {
      "src": "): ) [56797,56798]",
      "dest": "): ) [40560,40561]"
    },
    {
      "src": "expression_statement [39649,39712]",
      "dest": "expression_statement [26369,26432]"
    },
    {
      "src": "call_argument [12977,13001]",
      "dest": "call_argument [10875,10899]"
    },
    {
      "src": "return: return [36718,36724]",
      "dest": "return: return [23353,23359]"
    },
    {
      "src": "(: ( [58288,58289]",
      "dest": "(: ( [41934,41935]"
    },
    {
      "src": "): ) [43800,43801]",
      "dest": "): ) [30290,30291]"
    },
    {
      "src": "uint: uint [26695,26699]",
      "dest": "uint: uint [48827,48831]"
    },
    {
      "src": "identifier: error [55559,55564]",
      "dest": "identifier: error [39322,39327]"
    },
    {
      "src": "): ) [55852,55853]",
      "dest": "): ) [39615,39616]"
    },
    {
      "src": "): ) [38293,38294]",
      "dest": "): ) [25228,25229]"
    },
    {
      "src": ".: . [59783,59784]",
      "dest": ".: . [43429,43430]"
    },
    {
      "src": "(: ( [15164,15165]",
      "dest": "(: ( [12517,12518]"
    },
    {
      "src": "): ) [61536,61537]",
      "dest": "): ) [45007,45008]"
    },
    {
      "src": "return: return [13012,13018]",
      "dest": "return: return [10910,10916]"
    },
    {
      "src": "return_type_definition [54335,54349]",
      "dest": "return_type_definition [38098,38112]"
    },
    {
      "src": "block_statement [62359,62464]",
      "dest": "block_statement [45830,45935]"
    },
    {
      "src": "call_expression [32962,32976]",
      "dest": "call_expression [20192,20206]"
    },
    {
      "src": "uint: uint [37090,37094]",
      "dest": "uint: uint [23725,23729]"
    },
    {
      "src": "member_expression [54397,54407]",
      "dest": "member_expression [38160,38170]"
    },
    {
      "src": "identifier: oldInterestRateModel [62782,62802]",
      "dest": "identifier: oldInterestRateModel [46253,46273]"
    },
    {
      "src": "identifier: currentBlockNumber [15751,15769]",
      "dest": "identifier: currentBlockNumber [13104,13122]"
    },
    {
      "src": "}: } [13545,13546]",
      "dest": "}: } [11295,11296]"
    },
    {
      "src": "=: = [36523,36524]",
      "dest": "=: = [23158,23159]"
    },
    {
      "src": "variable_declaration_statement [15928,15961]",
      "dest": "variable_declaration_statement [13281,13314]"
    },
    {
      "src": "(: ( [7261,7262]",
      "dest": "(: ( [4652,4653]"
    },
    {
      "src": "type_name [63892,63899]",
      "dest": "type_name [47363,47370]"
    },
    {
      "src": ",: , [19979,19980]",
      "dest": ",: , [16093,16094]"
    },
    {
      "src": "parameter [47198,47214]",
      "dest": "parameter [33718,33734]"
    },
    {
      "src": "): ) [13953,13954]",
      "dest": "): ) [11678,11679]"
    },
    {
      "src": "import_directive [26,62]",
      "dest": "import_directive [26,62]"
    },
    {
      "src": "identifier: pendingAdmin [50894,50906]",
      "dest": "identifier: pendingAdmin [34657,34669]"
    },
    {
      "src": "identifier: account [11076,11083]",
      "dest": "identifier: account [5765,5772]"
    },
    {
      "src": "(: ( [5844,5845]",
      "dest": "(: ( [3235,3236]"
    },
    {
      "src": "type_name [2978,2982]",
      "dest": "type_name [12177,12181]"
    },
    {
      "src": "binary_expression [32737,32775]",
      "dest": "binary_expression [19967,20005]"
    },
    {
      "src": "primitive_type [50626,50630]",
      "dest": "primitive_type [34389,34393]"
    },
    {
      "src": ".: . [32449,32450]",
      "dest": ".: . [19387,19388]"
    },
    {
      "src": "identifier: cTokenCollateral [46337,46353]",
      "dest": "identifier: cTokenCollateral [32827,32843]"
    },
    {
      "src": ".: . [40759,40760]",
      "dest": ".: . [27219,27220]"
    },
    {
      "src": "call_argument [36044,36055]",
      "dest": "call_argument [22679,22690]"
    },
    {
      "src": "visibility [32348,32356]",
      "dest": "visibility [19286,19294]"
    },
    {
      "src": "address: address [45802,45809]",
      "dest": "address: address [32292,32299]"
    },
    {
      "src": "comment: /* We call the defense hook */ [46379,46409]",
      "dest": "comment: /* We call the defense hook */ [32869,32899]"
    },
    {
      "src": ",: , [411,412]",
      "dest": ",: , [411,412]"
    },
    {
      "src": "comment: // Store reserves[n+1] = reserves[n] - reduceAmount [60392,60443]",
      "dest": "comment: // Store reserves[n+1] = reserves[n] - reduceAmount [43863,43914]"
    },
    {
      "src": ".: . [51586,51587]",
      "dest": ".: . [35349,35350]"
    },
    {
      "src": ".: . [44435,44436]",
      "dest": ".: . [30925,30926]"
    },
    {
      "src": "(: ( [32802,32803]",
      "dest": "(: ( [20032,20033]"
    },
    {
      "src": "): ) [31672,31673]",
      "dest": "): ) [18610,18611]"
    },
    {
      "src": "identifier: fail [38220,38224]",
      "dest": "identifier: fail [25155,25159]"
    },
    {
      "src": "identifier: BorrowLocalVars [31882,31897]",
      "dest": "identifier: BorrowLocalVars [18820,18835]"
    },
    {
      "src": "call_argument [45317,45342]",
      "dest": "call_argument [31807,31832]"
    },
    {
      "src": "{: { [54640,54641]",
      "dest": "{: { [38403,38404]"
    },
    {
      "src": "comment: /* Fail if repayAmount = 0 */ [44299,44328]",
      "dest": "comment: /* Fail if repayAmount = 0 */ [30789,30818]"
    },
    {
      "src": "identifier: accrualBlockNumberPrior [15724,15747]",
      "dest": "identifier: accrualBlockNumberPrior [13077,13100]"
    },
    {
      "src": "comment: // Check reduceAmount ≤ reserves[n] (totalReserves) [59840,59893]",
      "dest": "comment: // Check reduceAmount ≤ reserves[n] (totalReserves) [43486,43539]"
    },
    {
      "src": "(: ( [50677,50678]",
      "dest": "(: ( [34440,34441]"
    },
    {
      "src": "return: return [5325,5331]",
      "dest": "return: return [2716,2722]"
    },
    {
      "src": "call_expression [44196,44274]",
      "dest": "call_expression [30686,30764]"
    },
    {
      "src": "variable_declaration [51803,51819]",
      "dest": "variable_declaration [35566,35582]"
    },
    {
      "src": "identifier: MINT_ACCRUE_INTEREST_FAILED [19951,19978]",
      "dest": "identifier: MINT_ACCRUE_INTEREST_FAILED [16065,16092]"
    },
    {
      "src": "{: { [7309,7310]",
      "dest": "{: { [4700,4701]"
    },
    {
      "src": "=: = [2215,2216]",
      "dest": "=: = [2215,2216]"
    },
    {
      "src": "}: } [19993,19994]",
      "dest": "}: } [16107,16108]"
    },
    {
      "src": "{: { [35673,35674]",
      "dest": "{: { [22308,22309]"
    },
    {
      "src": "): ) [1365,1366]",
      "dest": "): ) [1365,1366]"
    },
    {
      "src": "array_access [34800,34824]",
      "dest": "array_access [21405,21429]"
    },
    {
      "src": "(: ( [13339,13340]",
      "dest": "(: ( [11237,11238]"
    },
    {
      "src": "uint: uint [43167,43171]",
      "dest": "uint: uint [29657,29661]"
    },
    {
      "src": "expression_statement [1666,1733]",
      "dest": "expression_statement [1666,1733]"
    },
    {
      "src": "{: { [54350,54351]",
      "dest": "{: { [38113,38114]"
    },
    {
      "src": "{: { [45953,45954]",
      "dest": "{: { [32443,32444]"
    },
    {
      "src": "member_expression [6463,6473]",
      "dest": "member_expression [3854,3864]"
    },
    {
      "src": "): ) [42237,42238]",
      "dest": "): ) [28727,28728]"
    },
    {
      "src": "identifier: repayAmount [37069,37080]",
      "dest": "identifier: repayAmount [23704,23715]"
    },
    {
      "src": "type_name [54972,54976]",
      "dest": "type_name [38735,38739]"
    },
    {
      "src": "=: = [41996,41997]",
      "dest": "=: = [28486,28487]"
    },
    {
      "src": "(: ( [55596,55597]",
      "dest": "(: ( [39359,39360]"
    },
    {
      "src": "): ) [51729,51730]",
      "dest": "): ) [35492,35493]"
    },
    {
      "src": "identifier: sender [50682,50688]",
      "dest": "identifier: sender [34445,34451]"
    },
    {
      "src": "call_expression [13387,13415]",
      "dest": "call_expression [5811,5839]"
    },
    {
      "src": "comment: /* Calculate the number of blocks elapsed since the last accrual */ [16319,16386]",
      "dest": "comment: /* Calculate the number of blocks elapsed since the last accrual */ [13672,13739]"
    },
    {
      "src": "): ) [9773,9774]",
      "dest": "): ) [6738,6739]"
    },
    {
      "src": "assignment_expression [18966,18996]",
      "dest": "assignment_expression [15080,15110]"
    },
    {
      "src": "member_expression [50678,50688]",
      "dest": "member_expression [34441,34451]"
    },
    {
      "src": "(: ( [10962,10963]",
      "dest": "(: ( [9425,9426]"
    },
    {
      "src": "uint: uint [41675,41679]",
      "dest": "uint: uint [28165,28169]"
    },
    {
      "src": "type_name [20914,20918]",
      "dest": "type_name [48535,48539]"
    },
    {
      "src": "identifier: totalReserves [15991,16004]",
      "dest": "identifier: totalReserves [13344,13357]"
    },
    {
      "src": "type_name [41552,41559]",
      "dest": "type_name [28042,28049]"
    },
    {
      "src": "identifier: borrower [40469,40477]",
      "dest": "identifier: borrower [26929,26937]"
    },
    {
      "src": "(: ( [16174,16175]",
      "dest": "(: ( [13527,13528]"
    },
    {
      "src": "identifier: fail [58537,58541]",
      "dest": "identifier: fail [42183,42187]"
    },
    {
      "src": "function: function [63870,63878]",
      "dest": "function: function [47341,47349]"
    },
    {
      "src": "binary_expression [5332,5407]",
      "dest": "binary_expression [2723,2798]"
    },
    {
      "src": "identifier: allowed [2983,2990]",
      "dest": "identifier: exchangeRate [12182,12194]"
    },
    {
      "src": "call_expression [36731,36743]",
      "dest": "call_expression [23366,23378]"
    },
    {
      "src": "call_argument [42451,42459]",
      "dest": "call_argument [28941,28949]"
    },
    {
      "src": "else: else [39029,39033]",
      "dest": "else: else [25749,25753]"
    },
    {
      "src": "identifier: totalBorrows [40585,40597]",
      "dest": "identifier: totalBorrows [27045,27057]"
    },
    {
      "src": ",: , [44760,44761]",
      "dest": ",: , [31250,31251]"
    },
    {
      "src": "): ) [37911,37912]",
      "dest": "): ) [24546,24547]"
    },
    {
      "src": "call_expression [44917,44995]",
      "dest": "call_expression [31407,31485]"
    },
    {
      "src": "binary_expression [54600,54638]",
      "dest": "binary_expression [38363,38401]"
    },
    {
      "src": "=: = [53519,53520]",
      "dest": "=: = [37282,37283]"
    },
    {
      "src": ".: . [61489,61490]",
      "dest": ".: . [44960,44961]"
    },
    {
      "src": "string [45422,45475]",
      "dest": "string [31912,31965]"
    },
    {
      "src": "): ) [58377,58378]",
      "dest": "): ) [42023,42024]"
    },
    {
      "src": "identifier: LIQUIDATE_CLOSE_AMOUNT_IS_ZERO [44436,44466]",
      "dest": "identifier: LIQUIDATE_CLOSE_AMOUNT_IS_ZERO [30926,30956]"
    },
    {
      "src": "identifier: fail [54439,54443]",
      "dest": "identifier: fail [38202,38206]"
    },
    {
      "src": "function_definition [871,2369]",
      "dest": "function_definition [871,2369]"
    },
    {
      "src": "block_statement [41749,41980]",
      "dest": "block_statement [28239,28470]"
    },
    {
      "src": "identifier: mulScalar [17250,17259]",
      "dest": "identifier: mul_ [14330,14334]"
    },
    {
      "src": "primitive_type [47216,47220]",
      "dest": "primitive_type [33736,33740]"
    },
    {
      "src": "visibility [24342,24350]",
      "dest": "visibility [16653,16661]"
    },
    {
      "src": "returns: returns [24364,24371]",
      "dest": "returns: returns [16675,16682]"
    },
    {
      "src": "parameter [31427,31431]",
      "dest": "parameter [18365,18369]"
    },
    {
      "src": "primitive_type [47178,47185]",
      "dest": "primitive_type [33698,33705]"
    },
    {
      "src": ".: . [62341,62342]",
      "dest": ".: . [45812,45813]"
    },
    {
      "src": "): ) [35670,35671]",
      "dest": "): ) [22305,22306]"
    },
    {
      "src": "type_name [48062,48069]",
      "dest": "type_name [49186,49193]"
    },
    {
      "src": "primitive_type [5878,5882]",
      "dest": "primitive_type [3269,3273]"
    },
    {
      "src": "): ) [7307,7308]",
      "dest": "): ) [4698,4699]"
    },
    {
      "src": "type_name [1616,1620]",
      "dest": "type_name [1616,1620]"
    },
    {
      "src": "memory: memory [38336,38342]",
      "dest": "memory: memory [25271,25277]"
    },
    {
      "src": "parameter [43129,43147]",
      "dest": "parameter [29619,29637]"
    },
    {
      "src": "call_argument [35656,35670]",
      "dest": "call_argument [22291,22305]"
    },
    {
      "src": "internal: internal [41622,41630]",
      "dest": "internal: internal [28112,28120]"
    },
    {
      "src": "!=: != [50689,50691]",
      "dest": "!=: != [34452,34454]"
    },
    {
      "src": "identifier: NO_ERROR [23916,23924]",
      "dest": "identifier: NO_ERROR [24984,24992]"
    },
    {
      "src": "return_type_definition [26686,26700]",
      "dest": "return_type_definition [48818,48832]"
    },
    {
      "src": ".: . [52523,52524]",
      "dest": ".: . [36286,36287]"
    },
    {
      "src": ".: . [44592,44593]",
      "dest": ".: . [31082,31083]"
    },
    {
      "src": "parameter [11552,11556]",
      "dest": "parameter [9840,9844]"
    },
    {
      "src": "call_argument [38960,38962]",
      "dest": "call_argument [25680,25682]"
    },
    {
      "src": "parameter [8356,8360]",
      "dest": "parameter [5618,5622]"
    },
    {
      "src": "identifier: nonReentrant [58267,58279]",
      "dest": "identifier: nonReentrant [41913,41925]"
    },
    {
      "src": "): ) [11083,11084]",
      "dest": "): ) [5772,5773]"
    },
    {
      "src": "binary_expression [44853,44893]",
      "dest": "binary_expression [31343,31383]"
    },
    {
      "src": "(: ( [41731,41732]",
      "dest": "(: ( [28221,28222]"
    },
    {
      "src": "string_literal [10655,10679]",
      "dest": "string_literal [9118,9142]"
    },
    {
      "src": "member_expression [44028,44076]",
      "dest": "member_expression [30518,30566]"
    },
    {
      "src": "): ) [45475,45476]",
      "dest": "): ) [31965,31966]"
    },
    {
      "src": "call_expression [31456,31472]",
      "dest": "call_expression [18394,18410]"
    },
    {
      "src": "identifier: borrowAmount [32334,32346]",
      "dest": "identifier: borrowAmount [19272,19284]"
    },
    {
      "src": "uint: uint [58305,58309]",
      "dest": "uint: uint [41951,41955]"
    },
    {
      "src": "return_type_definition [12902,12916]",
      "dest": "return_type_definition [10800,10814]"
    },
    {
      "src": "identifier: simpleInterestFactor [17560,17580]",
      "dest": "identifier: simpleInterestFactor [14439,14459]"
    },
    {
      "src": "type_name [12911,12915]",
      "dest": "type_name [10809,10813]"
    },
    {
      "src": ".: . [9203,9204]",
      "dest": ".: . [6168,6169]"
    },
    {
      "src": "type_name [7300,7307]",
      "dest": "type_name [4691,4698]"
    },
    {
      "src": ".: . [33061,33062]",
      "dest": ".: . [20291,20292]"
    },
    {
      "src": "string [1703,1731]",
      "dest": "string [1703,1731]"
    },
    {
      "src": "{: { [31517,31518]",
      "dest": "{: { [18455,18456]"
    },
    {
      "src": "comment: // Used to store old model for use in the event that is emitted on success [62169,62243]",
      "dest": "comment: // Used to store old model for use in the event that is emitted on success [45640,45714]"
    },
    {
      "src": "(: ( [59903,59904]",
      "dest": "(: ( [43549,43550]"
    },
    {
      "src": "call_expression [41998,42031]",
      "dest": "call_expression [28488,28521]"
    },
    {
      "src": "function_body [11007,11217]",
      "dest": "function_body [9470,9530]"
    },
    {
      "src": ".: . [24786,24787]",
      "dest": ".: . [17097,17098]"
    },
    {
      "src": "struct_declaration [31875,32023]",
      "dest": "struct_declaration [18813,18961]"
    },
    {
      "src": "number_literal: 0 [44997,44998]",
      "dest": "number_literal: 0 [31487,31488]"
    },
    {
      "src": "if_statement [59900,60027]",
      "dest": "if_statement [43546,43673]"
    },
    {
      "src": "{: { [24379,24380]",
      "dest": "{: { [16690,16691]"
    },
    {
      "src": "member_expression [5883,5897]",
      "dest": "member_expression [3274,3288]"
    },
    {
      "src": "call_expression [24402,24418]",
      "dest": "call_expression [16713,16729]"
    },
    {
      "src": ",: , [43366,43367]",
      "dest": ",: , [29856,29857]"
    },
    {
      "src": "return_type_definition [43228,43248]",
      "dest": "return_type_definition [29718,29738]"
    },
    {
      "src": "parameter [37760,37764]",
      "dest": "parameter [24395,24399]"
    },
    {
      "src": "modifier_invocation [19662,19674]",
      "dest": "modifier_invocation [15776,15788]"
    },
    {
      "src": "member_expression [55190,55204]",
      "dest": "member_expression [38953,38967]"
    },
    {
      "src": "): ) [52810,52811]",
      "dest": "): ) [36573,36574]"
    },
    {
      "src": "primitive_type [42054,42058]",
      "dest": "primitive_type [28544,28548]"
    },
    {
      "src": "member_expression [5347,5357]",
      "dest": "member_expression [2738,2748]"
    },
    {
      "src": "identifier: borrowIndexPrior [16019,16035]",
      "dest": "identifier: borrowIndexPrior [13372,13388]"
    },
    {
      "src": "uint: uint [55491,55495]",
      "dest": "uint: uint [39254,39258]"
    },
    {
      "src": "call_expression [58318,58334]",
      "dest": "call_expression [41964,41980]"
    },
    {
      "src": "identifier: totalBorrowsNew [32001,32016]",
      "dest": "identifier: totalBorrowsNew [18939,18954]"
    },
    {
      "src": "): ) [51637,51638]",
      "dest": "): ) [35400,35401]"
    },
    {
      "src": "member_expression [38249,38289]",
      "dest": "member_expression [25184,25224]"
    },
    {
      "src": "member_expression [33957,33977]",
      "dest": "member_expression [20752,20772]"
    },
    {
      "src": ".: . [5848,5849]",
      "dest": ".: . [3239,3240]"
    },
    {
      "src": "(: ( [41652,41653]",
      "dest": "(: ( [28142,28143]"
    },
    {
      "src": "block_statement [54864,54962]",
      "dest": "block_statement [38627,38725]"
    },
    {
      "src": "string_literal [2110,2146]",
      "dest": "string_literal [2110,2146]"
    },
    {
      "src": "primitive_type [15608,15612]",
      "dest": "primitive_type [12961,12965]"
    },
    {
      "src": "if_statement [38671,38861]",
      "dest": "if_statement [24863,25008]"
    },
    {
      "src": "uint: uint [48100,48104]",
      "dest": "uint: uint [49224,49228]"
    },
    {
      "src": "identifier: mintFresh [20113,20122]",
      "dest": "identifier: mintFresh [16227,16236]"
    },
    {
      "src": "identifier: require [1666,1673]",
      "dest": "identifier: require [1666,1673]"
    },
    {
      "src": "identifier: sender [59242,59248]",
      "dest": "identifier: sender [42888,42894]"
    },
    {
      "src": "block_statement [58379,58618]",
      "dest": "block_statement [42025,42264]"
    },
    {
      "src": "identifier: reduceAmount [60622,60634]",
      "dest": "identifier: reduceAmount [44093,44105]"
    },
    {
      "src": "{: { [51499,51500]",
      "dest": "{: { [35262,35263]"
    },
    {
      "src": "(: ( [44554,44555]",
      "dest": "(: ( [31044,31045]"
    },
    {
      "src": "identifier: LIQUIDATE_COLLATERAL_FRESHNESS_CHECK [44040,44076]",
      "dest": "identifier: LIQUIDATE_COLLATERAL_FRESHNESS_CHECK [30530,30566]"
    },
    {
      "src": "): ) [32861,32862]",
      "dest": "): ) [20091,20092]"
    },
    {
      "src": ".: . [40039,40040]",
      "dest": ".: . [26740,26741]"
    },
    {
      "src": ".: . [54701,54702]",
      "dest": ".: . [38464,38465]"
    },
    {
      "src": "{: { [19780,19781]",
      "dest": "{: { [15894,15895]"
    },
    {
      "src": "identifier: Error [45405,45410]",
      "dest": "identifier: Error [31895,31900]"
    },
    {
      "src": "type_cast_expression [61266,61286]",
      "dest": "type_cast_expression [44737,44757]"
    },
    {
      "src": "identifier: payer [39687,39692]",
      "dest": "identifier: payer [26407,26412]"
    },
    {
      "src": "call_argument [45924,45935]",
      "dest": "call_argument [32414,32425]"
    },
    {
      "src": "identifier: payer [37693,37698]",
      "dest": "identifier: payer [24328,24333]"
    },
    {
      "src": "identifier: msg [5347,5350]",
      "dest": "identifier: msg [2738,2741]"
    },
    {
      "src": "(: ( [31470,31471]",
      "dest": "(: ( [18408,18409]"
    },
    {
      "src": ".: . [54400,54401]",
      "dest": ".: . [38163,38164]"
    },
    {
      "src": "identifier: require [1275,1282]",
      "dest": "identifier: require [1275,1282]"
    },
    {
      "src": "identifier: admin [51822,51827]",
      "dest": "identifier: admin [35585,35590]"
    },
    {
      "src": "modifier_invocation [58267,58279]",
      "dest": "modifier_invocation [41913,41925]"
    },
    {
      "src": "identifier: account [11509,11516]",
      "dest": "identifier: account [9808,9815]"
    },
    {
      "src": "identifier: sender [52524,52530]",
      "dest": "identifier: sender [36287,36293]"
    },
    {
      "src": "(: ( [54294,54295]",
      "dest": "(: ( [38057,38058]"
    },
    {
      "src": "call_expression [7786,7839]",
      "dest": "call_expression [5151,5205]"
    },
    {
      "src": "member_expression [8898,8912]",
      "dest": "member_expression [5863,5877]"
    },
    {
      "src": "call_expression [11048,11084]",
      "dest": "call_expression [5737,5773]"
    },
    {
      "src": "!=: != [42051,42053]",
      "dest": "!=: != [28541,28543]"
    },
    {
      "src": "identifier: admin [1219,1224]",
      "dest": "identifier: admin [1219,1224]"
    },
    {
      "src": "return: return [42411,42417]",
      "dest": "return: return [28901,28907]"
    },
    {
      "src": "): ) [6437,6438]",
      "dest": "): ) [3828,3829]"
    },
    {
      "src": "member_expression [40955,40969]",
      "dest": "member_expression [27445,27459]"
    },
    {
      "src": "identifier: newInterestRateModel [63263,63283]",
      "dest": "identifier: newInterestRateModel [46734,46754]"
    },
    {
      "src": "parameter [19684,19688]",
      "dest": "parameter [15798,15802]"
    },
    {
      "src": "identifier: symbol [2180,2186]",
      "dest": "identifier: symbol [2180,2186]"
    },
    {
      "src": "comment: // We fail gracefully unless market's block number equals current block number [62474,62552]",
      "dest": "comment: // We fail gracefully unless market's block number equals current block number [45945,46023]"
    },
    {
      "src": ".: . [52572,52573]",
      "dest": ".: . [36335,36336]"
    },
    {
      "src": "call_expression [16434,16486]",
      "dest": "call_expression [13766,13815]"
    },
    {
      "src": "call_argument [42226,42238]",
      "dest": "call_argument [28716,28728]"
    },
    {
      "src": "identifier: ADD_RESERVES_ACCRUE_INTEREST_FAILED [55817,55852]",
      "dest": "identifier: ADD_RESERVES_ACCRUE_INTEREST_FAILED [39580,39615]"
    },
    {
      "src": "binary_expression [59904,59932]",
      "dest": "binary_expression [43550,43578]"
    },
    {
      "src": "): ) [13879,13880]",
      "dest": "): ) [11604,11605]"
    },
    {
      "src": ",: , [44467,44468]",
      "dest": ",: , [30957,30958]"
    },
    {
      "src": "{: { [43712,43713]",
      "dest": "{: { [30202,30203]"
    },
    {
      "src": "identifier: NO_ERROR [12966,12974]",
      "dest": "identifier: NO_ERROR [10864,10872]"
    },
    {
      "src": "binary_expression [51583,51616]",
      "dest": "binary_expression [35346,35379]"
    },
    {
      "src": "variable_declaration_statement [50868,50907]",
      "dest": "variable_declaration_statement [34631,34670]"
    },
    {
      "src": "string [234,259]",
      "dest": "string [234,259]"
    },
    {
      "src": ",: , [44623,44624]",
      "dest": ",: , [31113,31114]"
    },
    {
      "src": "expression_statement [18966,18997]",
      "dest": "expression_statement [15080,15111]"
    },
    {
      "src": "identifier: mantissaOne [1909,1920]",
      "dest": "identifier: mantissaOne [1909,1920]"
    },
    {
      "src": "call_expression [37837,37912]",
      "dest": "call_expression [24472,24547]"
    },
    {
      "src": "function: function [64326,64334]",
      "dest": "function: function [47797,47805]"
    },
    {
      "src": "bool: bool [6433,6437]",
      "dest": "bool: bool [3824,3828]"
    },
    {
      "src": "call_argument [19939,19978]",
      "dest": "call_argument [16053,16092]"
    },
    {
      "src": "call_expression [35818,35830]",
      "dest": "call_expression [22453,22465]"
    },
    {
      "src": "block_statement [24463,24674]",
      "dest": "block_statement [16774,16985]"
    },
    {
      "src": "type_name [7663,7667]",
      "dest": "type_name [5054,5058]"
    },
    {
      "src": "identifier: interestAccumulated [17096,17115]",
      "dest": "identifier: interestAccumulated [14398,14417]"
    },
    {
      "src": "identifier: borrower [43157,43165]",
      "dest": "identifier: borrower [29647,29655]"
    },
    {
      "src": "identifier: fail [43999,44003]",
      "dest": "identifier: fail [30489,30493]"
    },
    {
      "src": "): ) [36540,36541]",
      "dest": "): ) [23175,23176]"
    },
    {
      "src": "\": \" [1226,1227]",
      "dest": "\": \" [1226,1227]"
    },
    {
      "src": ",: , [55140,55141]",
      "dest": ",: , [38903,38904]"
    },
    {
      "src": "uint: uint [54295,54299]",
      "dest": "uint: uint [38058,38062]"
    },
    {
      "src": "bool: bool [5309,5313]",
      "dest": "bool: bool [2700,2704]"
    },
    {
      "src": "call_argument [16232,16275]",
      "dest": "call_argument [13585,13628]"
    },
    {
      "src": "type_cast_expression [44550,44558]",
      "dest": "type_cast_expression [31040,31048]"
    },
    {
      "src": "identifier: UNAUTHORIZED [52573,52585]",
      "dest": "identifier: UNAUTHORIZED [36336,36348]"
    },
    {
      "src": "identifier: borrower [34815,34823]",
      "dest": "identifier: borrower [21420,21428]"
    },
    {
      "src": "struct_member [31964,31987]",
      "dest": "struct_member [18902,18925]"
    },
    {
      "src": "(: ( [45324,45325]",
      "dest": "(: ( [31814,31815]"
    },
    {
      "src": "identifier: MARKET_NOT_FRESH [62637,62653]",
      "dest": "identifier: MARKET_NOT_FRESH [46108,46124]"
    },
    {
      "src": "call_argument [57927,57941]",
      "dest": "call_argument [41573,41587]"
    },
    {
      "src": "): ) [60015,60016]",
      "dest": "): ) [43661,43662]"
    },
    {
      "src": ".: . [40478,40479]",
      "dest": ".: . [26938,26939]"
    },
    {
      "src": "return_statement [56706,56799]",
      "dest": "return_statement [40469,40562]"
    },
    {
      "src": "modifier_invocation [5287,5299]",
      "dest": "modifier_invocation [2678,2690]"
    },
    {
      "src": "variable_declaration_statement [8471,8497]",
      "dest": "variable_declaration_statement [5783,5840]"
    },
    {
      "src": "public: public [61182,61188]",
      "dest": "public: public [44653,44659]"
    },
    {
      "src": "): ) [9837,9838]",
      "dest": "): ) [6802,6803]"
    },
    {
      "src": "{: { [54864,54865]",
      "dest": "{: { [38627,38628]"
    },
    {
      "src": "type_name [48100,48104]",
      "dest": "type_name [49224,49228]"
    },
    {
      "src": "identifier: borrowInternal [31362,31376]",
      "dest": "identifier: borrowInternal [18300,18314]"
    },
    {
      "src": "identifier: NO_ERROR [36575,36583]",
      "dest": "identifier: NO_ERROR [23210,23218]"
    },
    {
      "src": "): ) [63917,63918]",
      "dest": "): ) [47388,47389]"
    },
    {
      "src": "struct: struct [31875,31881]",
      "dest": "struct: struct [18813,18819]"
    },
    {
      "src": "identifier: nonReentrant [5785,5797]",
      "dest": "identifier: nonReentrant [3176,3188]"
    },
    {
      "src": "type_name [6433,6437]",
      "dest": "type_name [3824,3828]"
    },
    {
      "src": "identifier: actualAddAmount [57366,57381]",
      "dest": "identifier: actualAddAmount [41129,41144]"
    },
    {
      "src": "(: ( [45566,45567]",
      "dest": "(: ( [32056,32057]"
    },
    {
      "src": "parameter [10541,10556]",
      "dest": "parameter [9004,9019]"
    },
    {
      "src": "parameter [43149,43165]",
      "dest": "parameter [29639,29655]"
    },
    {
      "src": "(: ( [17559,17560]",
      "dest": "(: ( [14438,14439]"
    },
    {
      "src": "identifier: totalSupply [13911,13922]",
      "dest": "identifier: totalSupply [11636,11647]"
    },
    {
      "src": "call_argument [2081,2108]",
      "dest": "call_argument [2081,2108]"
    },
    {
      "src": "identifier: currentBlockNumber [18900,18918]",
      "dest": "identifier: currentBlockNumber [15014,15032]"
    },
    {
      "src": "number_literal: 0 [32527,32528]",
      "dest": "number_literal: 0 [19465,19466]"
    },
    {
      "src": "}: } [46612,46613]",
      "dest": "}: } [33132,33133]"
    },
    {
      "src": "primitive_type [45302,45309]",
      "dest": "primitive_type [31792,31799]"
    },
    {
      "src": "binary_expression [1310,1326]",
      "dest": "binary_expression [1310,1326]"
    },
    {
      "src": "): ) [17594,17595]",
      "dest": "): ) [14473,14474]"
    },
    {
      "src": "return: return [41886,41892]",
      "dest": "return: return [28376,28382]"
    },
    {
      "src": "array_access [40523,40547]",
      "dest": "array_access [26983,27007]"
    },
    {
      "src": "identifier: sender [57401,57407]",
      "dest": "identifier: sender [41164,41170]"
    },
    {
      "src": "address: address [50868,50875]",
      "dest": "address: address [34631,34638]"
    },
    {
      "src": "return_statement [32544,32642]",
      "dest": "return_statement [19482,19580]"
    },
    {
      "src": "return_statement [15785,15813]",
      "dest": "return_statement [13138,13166]"
    },
    {
      "src": "function_definition [63581,63634]",
      "dest": "function_definition [47052,47105]"
    },
    {
      "src": "function_body [9181,9217]",
      "dest": "function_body [6146,6182]"
    },
    {
      "src": "identifier: ComptrollerInterface [52414,52434]",
      "dest": "identifier: ComptrollerInterface [36177,36197]"
    },
    {
      "src": "return_statement [44373,44472]",
      "dest": "return_statement [30863,30962]"
    },
    {
      "src": "(: ( [15916,15917]",
      "dest": "(: ( [13269,13270]"
    },
    {
      "src": "call_argument [60728,60742]",
      "dest": "call_argument [44199,44213]"
    },
    {
      "src": "variable_declaration_statement [38315,38348]",
      "dest": "variable_declaration_statement [25250,25283]"
    },
    {
      "src": "function_definition [43099,46613]",
      "dest": "function_definition [29589,33133]"
    },
    {
      "src": "expression_statement [55972,56013]",
      "dest": "expression_statement [39735,39776]"
    },
    {
      "src": "(: ( [52021,52022]",
      "dest": "(: ( [35784,35785]"
    },
    {
      "src": "type_name [43185,43200]",
      "dest": "type_name [29675,29690]"
    },
    {
      "src": "\": \" [16306,16307]",
      "dest": "\": \" [13659,13660]"
    },
    {
      "src": "=: = [52012,52013]",
      "dest": "=: = [35775,35776]"
    },
    {
      "src": "identifier: Error [32562,32567]",
      "dest": "identifier: Error [19500,19505]"
    },
    {
      "src": "type_name [48136,48140]",
      "dest": "type_name [49260,49264]"
    },
    {
      "src": "identifier: accountBorrowsNew [34842,34859]",
      "dest": "identifier: accountBorrowsNew [21447,21464]"
    },
    {
      "src": "identifier: cTokenCollateral [43201,43217]",
      "dest": "identifier: cTokenCollateral [29691,29707]"
    },
    {
      "src": "uint: uint [41727,41731]",
      "dest": "uint: uint [28217,28221]"
    },
    {
      "src": "identifier: vars [34946,34950]",
      "dest": "identifier: vars [21551,21555]"
    },
    {
      "src": "return_statement [9785,9892]",
      "dest": "return_statement [6750,6857]"
    },
    {
      "src": "return_statement [24595,24664]",
      "dest": "return_statement [16906,16975]"
    },
    {
      "src": ".: . [59558,59559]",
      "dest": ".: . [43204,43205]"
    },
    {
      "src": "call_argument [53565,53579]",
      "dest": "call_argument [37328,37342]"
    },
    {
      "src": ".: . [37848,37849]",
      "dest": ".: . [24483,24484]"
    },
    {
      "src": "{: { [15498,15499]",
      "dest": "{: { [12851,12852]"
    },
    {
      "src": "(: ( [2043,2044]",
      "dest": "(: ( [2043,2044]"
    },
    {
      "src": "returns: returns [61189,61196]",
      "dest": "returns: returns [44660,44667]"
    },
    {
      "src": "identifier: Error [32803,32808]",
      "dest": "identifier: Error [20033,20038]"
    },
    {
      "src": "call_argument [9840,9852]",
      "dest": "call_argument [6805,6817]"
    },
    {
      "src": "view: view [13850,13854]",
      "dest": "view: view [11586,11590]"
    },
    {
      "src": "return_type_definition [6984,7001]",
      "dest": "return_type_definition [4375,4392]"
    },
    {
      "src": "{: { [19696,19697]",
      "dest": "{: { [15810,15811]"
    },
    {
      "src": "assignment_expression [57676,57708]",
      "dest": "assignment_expression [41322,41354]"
    },
    {
      "src": "binary_expression [42045,42074]",
      "dest": "binary_expression [28535,28564]"
    },
    {
      "src": ".: . [58567,58568]",
      "dest": ".: . [42213,42214]"
    },
    {
      "src": "function_body [50632,51180]",
      "dest": "function_body [34395,34943]"
    },
    {
      "src": "}: } [9897,9898]",
      "dest": "}: } [6862,6863]"
    },
    {
      "src": "primitive_type [24389,24393]",
      "dest": "primitive_type [16700,16704]"
    },
    {
      "src": "\": \" [1364,1365]",
      "dest": "\": \" [1364,1365]"
    },
    {
      "src": "parameter [7630,7643]",
      "dest": "parameter [5021,5034]"
    },
    {
      "src": "identifier: SET_INTEREST_RATE_MODEL_FRESH_CHECK [62667,62702]",
      "dest": "identifier: SET_INTEREST_RATE_MODEL_FRESH_CHECK [46138,46173]"
    },
    {
      "src": "identifier: borrowIndex [34910,34921]",
      "dest": "identifier: borrowIndex [21515,21526]"
    },
    {
      "src": "string [10166,10190]",
      "dest": "string [8629,8653]"
    },
    {
      "src": "call_argument [8898,8912]",
      "dest": "call_argument [5863,5877]"
    },
    {
      "src": "call_argument [41905,41910]",
      "dest": "call_argument [28395,28400]"
    },
    {
      "src": "(: ( [6432,6433]",
      "dest": "(: ( [3823,3824]"
    },
    {
      "src": "identifier: mathErr [31918,31925]",
      "dest": "identifier: mathErr [18856,18863]"
    },
    {
      "src": "(: ( [8766,8767]",
      "dest": "(: ( [11287,11288]"
    },
    {
      "src": ",: , [33048,33049]",
      "dest": ",: , [20278,20279]"
    },
    {
      "src": "identifier: mulScalarTruncate [17542,17559]",
      "dest": "identifier: mul_ScalarTruncate [14420,14438]"
    },
    {
      "src": "identifier: err [1674,1677]",
      "dest": "identifier: err [1674,1677]"
    },
    {
      "src": "assignment_expression [40454,40513]",
      "dest": "assignment_expression [26914,26973]"
    },
    {
      "src": "return_type_definition [51484,51498]",
      "dest": "return_type_definition [35247,35261]"
    },
    {
      "src": "(: ( [62921,62922]",
      "dest": "(: ( [46392,46393]"
    },
    {
      "src": "(: ( [7629,7630]",
      "dest": "(: ( [5020,5021]"
    },
    {
      "src": "member_expression [38998,39017]",
      "dest": "member_expression [25718,25737]"
    },
    {
      "src": "primitive_type [53560,53564]",
      "dest": "primitive_type [37323,37327]"
    },
    {
      "src": "call_argument [62385,62403]",
      "dest": "call_argument [45856,45874]"
    },
    {
      "src": "type_name [36490,36494]",
      "dest": "type_name [23125,23129]"
    },
    {
      "src": "comment: /* Fail if repayBorrow fails */ [44698,44729]",
      "dest": "comment: /* Fail if repayBorrow fails */ [31188,31219]"
    },
    {
      "src": "if_statement [55593,55864]",
      "dest": "if_statement [39356,39627]"
    },
    {
      "src": "type_name [63937,63941]",
      "dest": "type_name [47408,47412]"
    },
    {
      "src": "comment: /**      * @notice Transfer `amount` tokens from `msg.sender` to `dst`      * @param dst The address of the destination account      * @param amount The number of tokens to transfer      * @return Whether or not the transfer succeeded      */ [4984,5226]",
      "dest": "comment: /**      * @notice Transfer `amount` tokens from `msg.sender` to `dst`      * @param dst The address of the destination account      * @param amount The number of tokens to transfer      * @return Whether or not the transfer succeeded      */ [2375,2617]"
    },
    {
      "src": ".: . [43329,43330]",
      "dest": ".: . [29819,29820]"
    },
    {
      "src": ".: . [43744,43745]",
      "dest": ".: . [30234,30235]"
    },
    {
      "src": "identifier: totalBorrows [34931,34943]",
      "dest": "identifier: totalBorrows [21536,21548]"
    },
    {
      "src": "pragma: pragma [0,6]",
      "dest": "pragma: pragma [0,6]"
    },
    {
      "src": "function: function [7601,7609]",
      "dest": "function: function [4992,5000]"
    },
    {
      "src": "{: { [55544,55545]",
      "dest": "{: { [39307,39308]"
    },
    {
      "src": "variable_declaration_statement [16014,16050]",
      "dest": "variable_declaration_statement [13367,13403]"
    },
    {
      "src": "comment: // Store admin with value pendingAdmin [51886,51924]",
      "dest": "comment: // Store admin with value pendingAdmin [35649,35687]"
    },
    {
      "src": "): ) [52023,52024]",
      "dest": "): ) [35786,35787]"
    },
    {
      "src": ".: . [62416,62417]",
      "dest": ".: . [45887,45888]"
    },
    {
      "src": "internal: internal [31396,31404]",
      "dest": "internal: internal [18334,18342]"
    },
    {
      "src": "internal: internal [54326,54334]",
      "dest": "internal: internal [38089,38097]"
    },
    {
      "src": "identifier: borrowAmount [33723,33735]",
      "dest": "identifier: borrowAmount [20729,20741]"
    },
    {
      "src": "call_argument [40231,40243]",
      "dest": "call_argument [26797,26809]"
    },
    {
      "src": "primitive_type [37868,37875]",
      "dest": "primitive_type [24503,24510]"
    },
    {
      "src": "comment: // Check caller = admin [50642,50665]",
      "dest": "comment: // Check caller = admin [34405,34428]"
    },
    {
      "src": "call_expression [10124,10140]",
      "dest": "call_expression [8587,8603]"
    },
    {
      "src": "identifier: NewReserveFactor [55099,55115]",
      "dest": "identifier: NewReserveFactor [38862,38878]"
    },
    {
      "src": "identifier: borrowBalanceStoredInternal [11473,11500]",
      "dest": "identifier: borrowBalanceStoredInternal [9772,9799]"
    },
    {
      "src": "if_statement [32512,32652]",
      "dest": "if_statement [19450,19590]"
    },
    {
      "src": "uint: uint [35599,35603]",
      "dest": "uint: uint [22234,22238]"
    },
    {
      "src": "parameter [52467,52471]",
      "dest": "parameter [36230,36234]"
    },
    {
      "src": "call_expression [45980,46037]",
      "dest": "call_expression [32470,32527]"
    },
    {
      "src": "member_expression [32438,32463]",
      "dest": "member_expression [19376,19401]"
    },
    {
      "src": "type_name [8316,8323]",
      "dest": "type_name [5578,5585]"
    },
    {
      "src": "): ) [62603,62604]",
      "dest": "): ) [46074,46075]"
    },
    {
      "src": "identifier: cTokenCollateral [45567,45583]",
      "dest": "identifier: cTokenCollateral [32057,32073]"
    },
    {
      "src": "(: ( [12510,12511]",
      "dest": "(: ( [10519,10520]"
    },
    {
      "src": ".: . [25687,25688]",
      "dest": ".: . [17998,17999]"
    },
    {
      "src": "\": \" [45422,45423]",
      "dest": "\": \" [31912,31913]"
    },
    {
      "src": "state_mutability [9426,9430]",
      "dest": "state_mutability [6391,6395]"
    },
    {
      "src": "type_cast_expression [45317,45342]",
      "dest": "type_cast_expression [31807,31832]"
    },
    {
      "src": "comment: // Save current value, if any, for inclusion in log [50808,50859]",
      "dest": "comment: // Save current value, if any, for inclusion in log [34571,34622]"
    },
    {
      "src": "call_expression [10697,10725]",
      "dest": "call_expression [9160,9188]"
    },
    {
      "src": "function_definition [61111,61736]",
      "dest": "function_definition [44582,45207]"
    },
    {
      "src": "call_expression [61227,61243]",
      "dest": "call_expression [44698,44714]"
    },
    {
      "src": ".: . [35054,35055]",
      "dest": ".: . [21659,21660]"
    },
    {
      "src": "call_argument [46571,46585]",
      "dest": "call_argument [33091,33105]"
    },
    {
      "src": "call_argument [16186,16198]",
      "dest": "call_argument [13539,13551]"
    },
    {
      "src": "return: return [24764,24770]",
      "dest": "return: return [17075,17081]"
    },
    {
      "src": "identifier: totalReservesNew [57837,57853]",
      "dest": "identifier: totalReservesNew [41483,41499]"
    },
    {
      "src": "identifier: dst [2883,2886]",
      "dest": "identifier: dst [48087,48090]"
    },
    {
      "src": "): ) [34719,34720]",
      "dest": "): ) [21324,21325]"
    },
    {
      "src": "uint: uint [20914,20918]",
      "dest": "uint: uint [48535,48539]"
    },
    {
      "src": "string_literal [12977,13001]",
      "dest": "string_literal [10875,10899]"
    },
    {
      "src": "call_expression [55791,55803]",
      "dest": "call_expression [39554,39566]"
    },
    {
      "src": "primitive_type [1616,1620]",
      "dest": "primitive_type [1616,1620]"
    },
    {
      "src": "binary_expression [15724,15769]",
      "dest": "binary_expression [13077,13122]"
    },
    {
      "src": "call_expression [43694,43710]",
      "dest": "call_expression [30184,30200]"
    },
    {
      "src": "(: ( [41717,41718]",
      "dest": "(: ( [28207,28208]"
    },
    {
      "src": ",: , [47196,47197]",
      "dest": ",: , [33716,33717]"
    },
    {
      "src": "memory: memory [7683,7689]",
      "dest": "memory: memory [5074,5080]"
    },
    {
      "src": "internal: internal [2901,2909]",
      "dest": "internal: internal [48105,48113]"
    },
    {
      "src": "primitive_type [56434,56438]",
      "dest": "primitive_type [40197,40201]"
    },
    {
      "src": "parameter [61198,61202]",
      "dest": "parameter [44669,44673]"
    },
    {
      "src": "identifier: repayAmount [39067,39078]",
      "dest": "identifier: repayAmount [25787,25798]"
    },
    {
      "src": "identifier: borrowBalanceStored [10943,10962]",
      "dest": "identifier: borrowBalanceStored [9406,9425]"
    },
    {
      "src": "return_statement [37954,38063]",
      "dest": "return_statement [24589,24698]"
    },
    {
      "src": "identifier: totalBorrows [15948,15960]",
      "dest": "identifier: totalBorrows [13301,13313]"
    },
    {
      "src": "primitive_type [41653,41657]",
      "dest": "primitive_type [28143,28147]"
    },
    {
      "src": "type_cast_expression [53080,53100]",
      "dest": "type_cast_expression [36843,36863]"
    },
    {
      "src": "call_expression [17250,17308]",
      "dest": "call_expression [14330,14383]"
    },
    {
      "src": "return_statement [35805,35885]",
      "dest": "return_statement [22440,22520]"
    },
    {
      "src": "identifier: Approval [6539,6547]",
      "dest": "identifier: Approval [3930,3938]"
    },
    {
      "src": "number_literal: 0 [44469,44470]",
      "dest": "number_literal: 0 [30959,30960]"
    },
    {
      "src": "type_name [17050,17053]",
      "dest": "type_name [14296,14299]"
    },
    {
      "src": "comment: /*** Reentrancy Guard ***/ [64398,64424]",
      "dest": "comment: /*** Reentrancy Guard ***/ [49272,49298]"
    },
    {
      "src": "expression_statement [18928,18957]",
      "dest": "expression_statement [15042,15071]"
    },
    {
      "src": "identifier: fail [25503,25507]",
      "dest": "identifier: fail [17814,17818]"
    },
    {
      "src": "variable_declaration_statement [11696,11708]",
      "dest": "variable_declaration_statement [10501,10571]"
    },
    {
      "src": "call_argument [36745,36792]",
      "dest": "call_argument [23380,23427]"
    },
    {
      "src": "primitive_type [45887,45894]",
      "dest": "primitive_type [32377,32384]"
    },
    {
      "src": "variable_declaration_tuple [44738,44785]",
      "dest": "variable_declaration_tuple [31228,31275]"
    },
    {
      "src": "call_argument [11076,11083]",
      "dest": "call_argument [5765,5772]"
    },
    {
      "src": "}: } [20152,20153]",
      "dest": "}: } [16266,16267]"
    },
    {
      "src": "comment: // accrueInterest emits logs on errors, but on top of that we want to log the fact that an attempted reserve factor change failed. [53596,53726]",
      "dest": "comment: // accrueInterest emits logs on errors, but on top of that we want to log the fact that an attempted reserve factor change failed. [37359,37489]"
    },
    {
      "src": "expression_statement [62782,62823]",
      "dest": "expression_statement [46253,46294]"
    },
    {
      "src": "identifier: CToken [373,379]",
      "dest": "identifier: CToken [373,379]"
    },
    {
      "src": "return_statement [55178,55206]",
      "dest": "return_statement [38941,38969]"
    },
    {
      "src": ",: , [46586,46587]",
      "dest": ",: , [33106,33107]"
    },
    {
      "src": "call_argument [45344,45361]",
      "dest": "call_argument [31834,31851]"
    },
    {
      "src": "): ) [36584,36585]",
      "dest": "): ) [23219,23220]"
    },
    {
      "src": "(: ( [8315,8316]",
      "dest": "(: ( [5577,5578]"
    },
    {
      "src": "uint: uint [15165,15169]",
      "dest": "uint: uint [12518,12522]"
    },
    {
      "src": "type_cast_expression [43353,43366]",
      "dest": "type_cast_expression [29843,29856]"
    },
    {
      "src": "identifier: seizeInternal [45873,45886]",
      "dest": "identifier: seizeInternal [32363,32376]"
    },
    {
      "src": ",: , [16275,16276]",
      "dest": ",: , [13628,13629]"
    },
    {
      "src": "(: ( [61463,61464]",
      "dest": "(: ( [44934,44935]"
    },
    {
      "src": ",: , [43405,43406]",
      "dest": ",: , [29895,29896]"
    },
    {
      "src": "binary_expression [1283,1306]",
      "dest": "binary_expression [1283,1306]"
    },
    {
      "src": "member_expression [44625,44671]",
      "dest": "member_expression [31115,31161]"
    },
    {
      "src": "identifier: result [11701,11707]",
      "dest": "identifier: result [10506,10512]"
    },
    {
      "src": "return_type_definition [8347,8379]",
      "dest": "return_type_definition [5609,5641]"
    },
    {
      "src": "state_mutability [10987,10991]",
      "dest": "state_mutability [9450,9454]"
    },
    {
      "src": "primitive_type [19684,19688]",
      "dest": "primitive_type [15798,15802]"
    },
    {
      "src": "visibility [47234,47242]",
      "dest": "visibility [33754,33762]"
    },
    {
      "src": "comment: /**      * @notice Sender redeems cTokens in exchange for the underlying asset      * @dev Accrues interest whether or not the operation succeeds, unless reverted      * @param redeemTokens The number of cTokens to redeem into underlying      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)      */ [23962,24294]",
      "dest": "comment: /**      * @notice Sender redeems cTokens in exchange for the underlying asset      * @dev Accrues interest whether or not the operation succeeds, unless reverted      * @param redeemTokens The number of cTokens to redeem into underlying      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)      */ [16273,16605]"
    },
    {
      "src": "if: if [59680,59682]",
      "dest": "if: if [43326,43328]"
    },
    {
      "src": "{: { [432,433]",
      "dest": "{: { [432,433]"
    },
    {
      "src": "call_argument [57397,57407]",
      "dest": "call_argument [41160,41170]"
    },
    {
      "src": "comment: /**      * @notice User supplies assets into the market and receives cTokens in exchange      * @dev Assumes interest has already been accrued up to the current block      * @param minter The address of the account which is supplying the assets      * @param mintAmount The amount of the underlying asset to supply      * @return (uint, uint) An error code (0=success, otherwise a failure, see ErrorReporter.sol), and the actual mint amount.      */ [20390,20839]",
      "dest": "comment: /**      * @notice Calculates the exchange rate from the underlying to the CToken      * @dev This function does not accrue interest before calculating the exchange rate      * @return calculated exchange rate scaled by 1e18      */ [11302,11534]"
    },
    {
      "src": "return: return [12075,12081]",
      "dest": "return: return [10213,10219]"
    },
    {
      "src": "primitive_type [48082,48089]",
      "dest": "primitive_type [49206,49213]"
    },
    {
      "src": "member_expression [52520,52530]",
      "dest": "member_expression [36283,36293]"
    },
    {
      "src": "): ) [44557,44558]",
      "dest": "): ) [31047,31048]"
    },
    {
      "src": "type_name [26656,26660]",
      "dest": "type_name [48788,48792]"
    },
    {
      "src": "identifier: mulScalarTruncateAddUInt [18091,18115]",
      "dest": "identifier: mul_ScalarTruncateAddUInt [14580,14605]"
    },
    {
      "src": "storage: storage [11781,11788]",
      "dest": "storage: storage [9919,9926]"
    },
    {
      "src": ",: , [36743,36744]",
      "dest": ",: , [23378,23379]"
    },
    {
      "src": "return: return [46558,46564]",
      "dest": "return: return [33078,33084]"
    },
    {
      "src": "type_name [56434,56438]",
      "dest": "type_name [40197,40201]"
    },
    {
      "src": "identifier: fail [55786,55790]",
      "dest": "identifier: fail [39549,39553]"
    },
    {
      "src": "return_statement [43726,43806]",
      "dest": "return_statement [30216,30296]"
    },
    {
      "src": "identifier: this [43361,43365]",
      "dest": "identifier: this [29851,29855]"
    },
    {
      "src": ",: , [19688,19689]",
      "dest": ",: , [15802,15803]"
    },
    {
      "src": "): ) [5897,5898]",
      "dest": "): ) [3288,3289]"
    },
    {
      "src": "=: = [1442,1443]",
      "dest": "=: = [1442,1443]"
    },
    {
      "src": "uint: uint [44762,44766]",
      "dest": "uint: uint [31252,31256]"
    },
    {
      "src": "(: ( [10099,10100]",
      "dest": "(: ( [8562,8563]"
    },
    {
      "src": "(: ( [46336,46337]",
      "dest": "(: ( [32826,32827]"
    },
    {
      "src": "type_name [31377,31381]",
      "dest": "type_name [18315,18319]"
    },
    {
      "src": "view: view [9755,9759]",
      "dest": "view: view [6720,6724]"
    },
    {
      "src": "identifier: NO_ERROR [61277,61285]",
      "dest": "identifier: NO_ERROR [44748,44756]"
    },
    {
      "src": "identifier: err [2081,2084]",
      "dest": "identifier: err [2081,2084]"
    },
    {
      "src": "parameter [55491,55505]",
      "dest": "parameter [39254,39268]"
    },
    {
      "src": ",: , [47324,47325]",
      "dest": ",: , [33844,33845]"
    },
    {
      "src": "emit_statement [57789,57855]",
      "dest": "emit_statement [41435,41501]"
    },
    {
      "src": "identifier: Error [41899,41904]",
      "dest": "identifier: Error [28389,28394]"
    },
    {
      "src": "(: ( [59112,59113]",
      "dest": "(: ( [42758,42759]"
    },
    {
      "src": "returns: returns [10992,10999]",
      "dest": "returns: returns [9455,9462]"
    },
    {
      "src": "function_definition [15450,19224]",
      "dest": "function_definition [12803,15338]"
    },
    {
      "src": "}: } [32022,32023]",
      "dest": "}: } [18960,18961]"
    },
    {
      "src": "primitive_type [64369,64373]",
      "dest": "primitive_type [47840,47844]"
    },
    {
      "src": "assignment_expression [39965,40058]",
      "dest": "assignment_expression [26685,26759]"
    },
    {
      "src": "identifier: failOpaque [43479,43489]",
      "dest": "identifier: failOpaque [29969,29979]"
    },
    {
      "src": "returns: returns [37745,37752]",
      "dest": "returns: returns [24380,24387]"
    },
    {
      "src": "identifier: Error [56719,56724]",
      "dest": "identifier: Error [40482,40487]"
    },
    {
      "src": "{: { [35589,35590]",
      "dest": "{: { [22224,22225]"
    },
    {
      "src": "call_expression [56714,56780]",
      "dest": "call_expression [40477,40543]"
    },
    {
      "src": "visibility [7277,7285]",
      "dest": "visibility [4668,4676]"
    },
    {
      "src": "call_argument [57409,57418]",
      "dest": "call_argument [41172,41181]"
    },
    {
      "src": "\": \" [2110,2111]",
      "dest": "\": \" [2110,2111]"
    },
    {
      "src": "!=: != [62349,62351]",
      "dest": "!=: != [45820,45822]"
    },
    {
      "src": "call_expression [32798,32862]",
      "dest": "call_expression [20028,20092]"
    },
    {
      "src": "member_expression [10638,10652]",
      "dest": "member_expression [9101,9115]"
    },
    {
      "src": "type_cast_expression [36564,36584]",
      "dest": "type_cast_expression [23199,23219]"
    },
    {
      "src": "}: } [36973,36974]",
      "dest": "}: } [23608,23609]"
    },
    {
      "src": "function_definition [5712,5905]",
      "dest": "function_definition [3103,3296]"
    },
    {
      "src": "state_mutability [8342,8346]",
      "dest": "state_mutability [5604,5608]"
    },
    {
      "src": "(: ( [29885,29886]",
      "dest": "(: ( [8157,8158]"
    },
    {
      "src": "): ) [13414,13415]",
      "dest": "): ) [5838,5839]"
    },
    {
      "src": "{: { [52473,52474]",
      "dest": "{: { [36236,36237]"
    },
    {
      "src": "true: true [64655,64659]",
      "dest": "true: true [49529,49533]"
    },
    {
      "src": "identifier: msg [52520,52523]",
      "dest": "identifier: msg [36283,36286]"
    },
    {
      "src": "identifier: accrualBlockNumber [43672,43690]",
      "dest": "identifier: accrualBlockNumber [30162,30180]"
    },
    {
      "src": "internal: internal [56416,56424]",
      "dest": "internal: internal [40179,40187]"
    },
    {
      "src": "\": \" [133,134]",
      "dest": "\": \" [133,134]"
    },
    {
      "src": "return_type_definition [11532,11557]",
      "dest": "return_type_definition [9831,9845]"
    },
    {
      "src": "block_statement [37940,38073]",
      "dest": "block_statement [24575,24708]"
    },
    {
      "src": "==: == [1302,1304]",
      "dest": "==: == [1302,1304]"
    },
    {
      "src": "return: return [54654,54660]",
      "dest": "return: return [38417,38423]"
    },
    {
      "src": "identifier: error [35642,35647]",
      "dest": "identifier: error [22277,22282]"
    },
    {
      "src": "type_cast_expression [42054,42074]",
      "dest": "type_cast_expression [28544,28564]"
    },
    {
      "src": "identifier: Error [61464,61469]",
      "dest": "identifier: Error [44935,44940]"
    },
    {
      "src": "identifier: ComptrollerInterface [891,911]",
      "dest": "identifier: ComptrollerInterface [891,911]"
    },
    {
      "src": "identifier: require [10116,10123]",
      "dest": "identifier: require [8579,8586]"
    },
    {
      "src": "=: = [58316,58317]",
      "dest": "=: = [41962,41963]"
    },
    {
      "src": "): ) [11556,11557]",
      "dest": "): ) [9844,9845]"
    },
    {
      "src": ",: , [38048,38049]",
      "dest": ",: , [24683,24684]"
    },
    {
      "src": "user_defined_type [37018,37023]",
      "dest": "user_defined_type [23653,23658]"
    },
    {
      "src": ",: , [44227,44228]",
      "dest": ",: , [30717,30718]"
    },
    {
      "src": "identifier: NO_ERROR [2099,2107]",
      "dest": "identifier: NO_ERROR [2099,2107]"
    },
    {
      "src": "assignment_expression [18928,18956]",
      "dest": "assignment_expression [15042,15070]"
    },
    {
      "src": ",: , [43147,43148]",
      "dest": ",: , [29637,29638]"
    },
    {
      "src": "identifier: seizeTokens [45245,45256]",
      "dest": "identifier: seizeTokens [31735,31746]"
    },
    {
      "src": "call_argument [19147,19161]",
      "dest": "call_argument [15261,15275]"
    },
    {
      "src": "primitive_type [26695,26699]",
      "dest": "primitive_type [48827,48831]"
    },
    {
      "src": "function_definition [52389,53107]",
      "dest": "function_definition [36152,36870]"
    },
    {
      "src": "call_argument [9511,9523]",
      "dest": "call_argument [6476,6488]"
    },
    {
      "src": "identifier: interestRateModel [63071,63088]",
      "dest": "identifier: interestRateModel [46542,46559]"
    },
    {
      "src": "=: = [1907,1908]",
      "dest": "=: = [1907,1908]"
    },
    {
      "src": ".: . [38605,38606]",
      "dest": ".: . [25525,25526]"
    },
    {
      "src": "(: ( [62384,62385]",
      "dest": "(: ( [45855,45856]"
    },
    {
      "src": "(: ( [5806,5807]",
      "dest": "(: ( [3197,3198]"
    },
    {
      "src": "type_name [56499,56503]",
      "dest": "type_name [40262,40266]"
    },
    {
      "src": "call_argument [10613,10653]",
      "dest": "call_argument [9076,9116]"
    },
    {
      "src": "identifier: doTransferIn [57384,57396]",
      "dest": "identifier: doTransferIn [41147,41159]"
    },
    {
      "src": ".: . [47305,47306]",
      "dest": ".: . [33825,33826]"
    },
    {
      "src": "call_expression [15582,15598]",
      "dest": "call_expression [12935,12951]"
    },
    {
      "src": "primitive_type [8368,8372]",
      "dest": "primitive_type [5630,5634]"
    },
    {
      "src": ".: . [35078,35079]",
      "dest": ".: . [21683,21684]"
    },
    {
      "src": "identifier: totalBorrowsNew [40204,40219]",
      "dest": "identifier: totalBorrowsNew [26774,26789]"
    },
    {
      "src": "(: ( [54665,54666]",
      "dest": "(: ( [38428,38429]"
    },
    {
      "src": "identifier: src [5742,5745]",
      "dest": "identifier: src [3133,3136]"
    },
    {
      "src": "}: } [47354,47355]",
      "dest": "}: } [33874,33875]"
    },
    {
      "src": "comment: /**      * @notice Get the underlying balance of the `owner`      * @dev This also accrues interest in a transaction      * @param owner The address of the account to query      * @return The amount of underlying owned by `owner`      */ [7359,7596]",
      "dest": "comment: /**      * @notice Get the underlying balance of the `owner`      * @dev This also accrues interest in a transaction      * @param owner The address of the account to query      * @return The amount of underlying owned by `owner`      */ [4750,4987]"
    },
    {
      "src": "identifier: Error [52567,52572]",
      "dest": "identifier: Error [36330,36335]"
    },
    {
      "src": "primitive_type [43303,43307]",
      "dest": "primitive_type [29793,29797]"
    },
    {
      "src": "call_argument [16442,16460]",
      "dest": "call_argument [13771,13789]"
    },
    {
      "src": "type_name [64349,64364]",
      "dest": "type_name [47820,47835]"
    },
    {
      "src": "array_access [6483,6506]",
      "dest": "array_access [3874,3897]"
    },
    {
      "src": "return_statement [7012,7054]",
      "dest": "return_statement [4403,4445]"
    },
    {
      "src": "primitive_type [14374,14378]",
      "dest": "primitive_type [12077,12081]"
    },
    {
      "src": ",: , [43183,43184]",
      "dest": ",: , [29673,29674]"
    },
    {
      "src": "expression_statement [51999,52025]",
      "dest": "expression_statement [35762,35788]"
    },
    {
      "src": "comment: // accrueInterest emits logs on errors, but we still want to log the fact that an attempted borrow failed [35687,35792]",
      "dest": "comment: // accrueInterest emits logs on errors, but we still want to log the fact that an attempted borrow failed [22322,22427]"
    },
    {
      "src": "function_body [41665,42498]",
      "dest": "function_body [28155,28988]"
    },
    {
      "src": "return_statement [32791,32863]",
      "dest": "return_statement [20021,20093]"
    },
    {
      "src": "primitive_type [17186,17190]",
      "dest": "primitive_type [14691,14695]"
    },
    {
      "src": "identifier: nonReentrant [31405,31417]",
      "dest": "identifier: nonReentrant [18343,18355]"
    },
    {
      "src": "identifier: transferTokens [5332,5346]",
      "dest": "identifier: transferTokens [2723,2737]"
    },
    {
      "src": ",: , [46023,46024]",
      "dest": ",: , [32513,32514]"
    },
    {
      "src": "): ) [44558,44559]",
      "dest": "): ) [31048,31049]"
    },
    {
      "src": "function_definition [10934,11217]",
      "dest": "function_definition [9397,9530]"
    },
    {
      "src": "identifier: error [25295,25300]",
      "dest": "identifier: error [17606,17611]"
    },
    {
      "src": ",: , [5865,5866]",
      "dest": ",: , [3256,3257]"
    },
    {
      "src": "comment: /* We emit a LiquidateBorrow event */ [46221,46258]",
      "dest": "comment: /* We emit a LiquidateBorrow event */ [32711,32748]"
    },
    {
      "src": "}: } [5413,5414]",
      "dest": "}: } [2804,2805]"
    },
    {
      "src": "identifier: borrowsPrior [17852,17864]",
      "dest": "identifier: borrowsPrior [14533,14545]"
    },
    {
      "src": "comment: /**       * @notice accrues interest and sets a new reserve factor for the protocol using _setReserveFactorFresh       * @dev Admin function to accrue interest and set a new reserve factor       * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)       */ [53113,53398]",
      "dest": "comment: /**       * @notice accrues interest and sets a new reserve factor for the protocol using _setReserveFactorFresh       * @dev Admin function to accrue interest and set a new reserve factor       * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)       */ [36876,37161]"
    },
    {
      "src": "expression_statement [6483,6525]",
      "dest": "expression_statement [3874,3916]"
    },
    {
      "src": "identifier: borrower [34884,34892]",
      "dest": "identifier: borrower [21489,21497]"
    },
    {
      "src": "internal: internal [55507,55515]",
      "dest": "internal: internal [39270,39278]"
    },
    {
      "src": "type_name [17091,17095]",
      "dest": "type_name [14393,14397]"
    },
    {
      "src": "(: ( [55189,55190]",
      "dest": "(: ( [38952,38953]"
    },
    {
      "src": "call_argument [14558,14570]",
      "dest": "call_argument [12134,12146]"
    },
    {
      "src": "type_cast_expression [45831,45844]",
      "dest": "type_cast_expression [32321,32334]"
    },
    {
      "src": "member_expression [12346,12370]",
      "dest": "member_expression [10453,10477]"
    },
    {
      "src": "{: { [8380,8381]",
      "dest": "{: { [5642,5643]"
    },
    {
      "src": "(: ( [41904,41905]",
      "dest": "(: ( [28394,28395]"
    },
    {
      "src": ",: , [12370,12371]",
      "dest": ",: , [10477,10478]"
    },
    {
      "src": "identifier: NO_ERROR [58368,58376]",
      "dest": "identifier: NO_ERROR [42014,42022]"
    },
    {
      "src": "return_type_definition [61189,61203]",
      "dest": "return_type_definition [44660,44674]"
    },
    {
      "src": "identifier: NO_ERROR [55196,55204]",
      "dest": "identifier: NO_ERROR [38959,38967]"
    },
    {
      "src": "call_expression [9463,9539]",
      "dest": "call_expression [6428,6504]"
    },
    {
      "src": "identifier: sender [25688,25694]",
      "dest": "identifier: sender [17999,18005]"
    },
    {
      "src": "identifier: seizeError [45967,45977]",
      "dest": "identifier: seizeError [32457,32467]"
    },
    {
      "src": "call_expression [17542,17595]",
      "dest": "call_expression [14420,14474]"
    },
    {
      "src": "return: return [44373,44379]",
      "dest": "return: return [30863,30869]"
    },
    {
      "src": "identifier: mantissa [18121,18129]",
      "dest": "identifier: mantissa [14611,14619]"
    },
    {
      "src": "type_name [54344,54348]",
      "dest": "type_name [38107,38111]"
    },
    {
      "src": "(: ( [46002,46003]",
      "dest": "(: ( [32492,32493]"
    },
    {
      "src": "(: ( [53535,53536]",
      "dest": "(: ( [37298,37299]"
    },
    {
      "src": "(: ( [46150,46151]",
      "dest": "(: ( [32640,32641]"
    },
    {
      "src": "): ) [24461,24462]",
      "dest": "): ) [16772,16773]"
    },
    {
      "src": "call_argument [18120,18153]",
      "dest": "call_argument [14610,14643]"
    },
    {
      "src": "return_statement [10201,10221]",
      "dest": "return_statement [8664,8684]"
    },
    {
      "src": "return_statement [56022,56035]",
      "dest": "return_statement [39785,39798]"
    },
    {
      "src": "return: return [35805,35811]",
      "dest": "return: return [22440,22446]"
    },
    {
      "src": "expression_statement [1275,1367]",
      "dest": "expression_statement [1275,1367]"
    },
    {
      "src": "): ) [6968,6969]",
      "dest": "): ) [4359,4360]"
    },
    {
      "src": "identifier: src [5857,5860]",
      "dest": "identifier: src [3248,3251]"
    },
    {
      "src": "call_argument [2093,2107]",
      "dest": "call_argument [2093,2107]"
    },
    {
      "src": "identifier: actualRepayAmount [44767,44784]",
      "dest": "identifier: actualRepayAmount [31257,31274]"
    },
    {
      "src": "primitive_type [10963,10970]",
      "dest": "primitive_type [9426,9433]"
    },
    {
      "src": "): ) [55980,55981]",
      "dest": "): ) [39743,39744]"
    },
    {
      "src": "identifier: err [1621,1624]",
      "dest": "identifier: err [1621,1624]"
    },
    {
      "src": "emit: emit [53011,53015]",
      "dest": "emit: emit [36774,36778]"
    },
    {
      "src": "comment: /**       * @notice Sets a new comptroller for the market       * @dev Admin function to set a new comptroller       * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)       */ [52177,52384]",
      "dest": "comment: /**       * @notice Sets a new comptroller for the market       * @dev Admin function to set a new comptroller       * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)       */ [35940,36147]"
    },
    {
      "src": ",: , [1521,1522]",
      "dest": ",: , [1521,1522]"
    },
    {
      "src": "identifier: MARKET_NOT_FRESH [43745,43761]",
      "dest": "identifier: MARKET_NOT_FRESH [30235,30251]"
    },
    {
      "src": "block_statement [50699,50798]",
      "dest": "block_statement [34462,34561]"
    },
    {
      "src": "identifier: Error [15797,15802]",
      "dest": "identifier: Error [13150,13155]"
    },
    {
      "src": "return_type_definition [37745,37765]",
      "dest": "return_type_definition [24380,24400]"
    },
    {
      "src": "call_argument [64578,64590]",
      "dest": "call_argument [49452,49464]"
    },
    {
      "src": "uint: uint [31495,31499]",
      "dest": "uint: uint [18433,18437]"
    },
    {
      "src": "identifier: vars [39649,39653]",
      "dest": "identifier: vars [26369,26373]"
    },
    {
      "src": "(: ( [15596,15597]",
      "dest": "(: ( [12949,12950]"
    },
    {
      "src": "(: ( [64544,64545]",
      "dest": "(: ( [49418,49419]"
    },
    {
      "src": "primitive_type [19197,19201]",
      "dest": "primitive_type [15311,15315]"
    },
    {
      "src": "identifier: newReserveFactorMantissa [53435,53459]",
      "dest": "identifier: newReserveFactorMantissa [37198,37222]"
    },
    {
      "src": "variable_declaration [25290,25300]",
      "dest": "variable_declaration [17601,17611]"
    },
    {
      "src": "call_argument [53757,53762]",
      "dest": "call_argument [37520,37525]"
    },
    {
      "src": "identifier: name_ [2165,2170]",
      "dest": "identifier: name_ [2165,2170]"
    },
    {
      "src": ",: , [42472,42473]",
      "dest": ",: , [28962,28963]"
    },
    {
      "src": "identifier: vars [40199,40203]",
      "dest": "identifier: vars [26769,26773]"
    },
    {
      "src": "(: ( [42220,42221]",
      "dest": "(: ( [28710,28711]"
    },
    {
      "src": "(: ( [25513,25514]",
      "dest": "(: ( [17824,17825]"
    },
    {
      "src": "function_definition [58214,58777]",
      "dest": "function_definition [41860,42423]"
    },
    {
      "src": "primitive_type [24323,24327]",
      "dest": "primitive_type [16634,16638]"
    },
    {
      "src": "address: address [51837,51844]",
      "dest": "address: address [35600,35607]"
    },
    {
      "src": "member_expression [38002,38048]",
      "dest": "member_expression [24637,24683]"
    },
    {
      "src": "member_expression [40972,40994]",
      "dest": "member_expression [27462,27484]"
    },
    {
      "src": "primitive_type [44739,44743]",
      "dest": "primitive_type [31229,31233]"
    },
    {
      "src": "primitive_type [19706,19710]",
      "dest": "primitive_type [15820,15824]"
    },
    {
      "src": "(: ( [10123,10124]",
      "dest": "(: ( [8586,8587]"
    },
    {
      "src": "parameter [1071,1090]",
      "dest": "parameter [1071,1090]"
    },
    {
      "src": "emit: emit [52035,52039]",
      "dest": "emit: emit [35798,35802]"
    },
    {
      "src": "(: ( [19201,19202]",
      "dest": "(: ( [15315,15316]"
    },
    {
      "src": "(: ( [54889,54890]",
      "dest": "(: ( [38652,38653]"
    },
    {
      "src": "call_expression [56674,56690]",
      "dest": "call_expression [40437,40453]"
    },
    {
      "src": "return: return [11197,11203]",
      "dest": "return: return [9480,9486]"
    },
    {
      "src": "visibility [62134,62142]",
      "dest": "visibility [45605,45613]"
    },
    {
      "src": "uint: uint [14374,14378]",
      "dest": "uint: uint [12077,12081]"
    },
    {
      "src": "identifier: borrower [45914,45922]",
      "dest": "identifier: borrower [32404,32412]"
    },
    {
      "src": "comment: // Emit NewPendingAdmin(oldPendingAdmin, newPendingAdmin) [51015,51072]",
      "dest": "comment: // Emit NewPendingAdmin(oldPendingAdmin, newPendingAdmin) [34778,34835]"
    },
    {
      "src": "function_definition [64326,64391]",
      "dest": "function_definition [47797,47862]"
    },
    {
      "src": "address: address [51803,51810]",
      "dest": "address: address [35566,35573]"
    },
    {
      "src": "(: ( [43953,43954]",
      "dest": "(: ( [30443,30444]"
    },
    {
      "src": "identifier: ADD_RESERVES_FRESH_CHECK [56755,56779]",
      "dest": "identifier: ADD_RESERVES_FRESH_CHECK [40518,40542]"
    },
    {
      "src": "call_argument [57837,57853]",
      "dest": "call_argument [41483,41499]"
    },
    {
      "src": "modifier_invocation [10567,10579]",
      "dest": "modifier_invocation [9030,9042]"
    },
    {
      "src": "variable_declaration [62252,62290]",
      "dest": "variable_declaration [45723,45761]"
    },
    {
      "src": "(: ( [36730,36731]",
      "dest": "(: ( [23365,23366]"
    },
    {
      "src": "type_name [47198,47205]",
      "dest": "type_name [33718,33725]"
    },
    {
      "src": "identifier: UNAUTHORIZED [59291,59303]",
      "dest": "identifier: UNAUTHORIZED [42937,42949]"
    },
    {
      "src": "identifier: this [32472,32476]",
      "dest": "identifier: this [19410,19414]"
    },
    {
      "src": "member_expression [5845,5855]",
      "dest": "member_expression [3236,3246]"
    },
    {
      "src": "primitive_type [11696,11700]",
      "dest": "primitive_type [10501,10505]"
    },
    {
      "src": ".: . [45996,45997]",
      "dest": ".: . [32486,32487]"
    },
    {
      "src": "external: external [9417,9425]",
      "dest": "external: external [6382,6390]"
    },
    {
      "src": "primitive_type [15887,15891]",
      "dest": "primitive_type [13240,13244]"
    },
    {
      "src": "call_argument [61271,61285]",
      "dest": "call_argument [44742,44756]"
    },
    {
      "src": "identifier: liquidateBorrowAllowed [43330,43352]",
      "dest": "identifier: liquidateBorrowAllowed [29820,29842]"
    },
    {
      "src": "identifier: vars [40755,40759]",
      "dest": "identifier: vars [27215,27219]"
    },
    {
      "src": "call_expression [18416,18498]",
      "dest": "call_expression [14713,14796]"
    },
    {
      "src": "identifier: accrueInterest [19719,19733]",
      "dest": "identifier: accrueInterest [15833,15847]"
    },
    {
      "src": "identifier: borrower [32319,32327]",
      "dest": "identifier: borrower [19257,19265]"
    },
    {
      "src": "identifier: Error [43490,43495]",
      "dest": "identifier: Error [29980,29985]"
    },
    {
      "src": "variable_declaration_statement [59169,59191]",
      "dest": "variable_declaration_statement [42815,42837]"
    },
    {
      "src": "call_argument [25514,25519]",
      "dest": "call_argument [17825,17830]"
    },
    {
      "src": "call_argument [61708,61728]",
      "dest": "call_argument [45179,45199]"
    },
    {
      "src": "if_statement [52516,52638]",
      "dest": "if_statement [36279,36401]"
    },
    {
      "src": "identifier: borrowBalanceCurrent [10520,10540]",
      "dest": "identifier: borrowBalanceCurrent [8983,9003]"
    },
    {
      "src": "): ) [39710,39711]",
      "dest": "): ) [26430,26431]"
    },
    {
      "src": "emit_statement [60646,60706]",
      "dest": "emit_statement [44117,44177]"
    },
    {
      "src": ",: , [18479,18480]",
      "dest": ",: , [14777,14778]"
    },
    {
      "src": "uint: uint [55606,55610]",
      "dest": "uint: uint [39369,39373]"
    },
    {
      "src": "(: ( [56399,56400]",
      "dest": "(: ( [40162,40163]"
    },
    {
      "src": "identifier: newInterestRateModel [61160,61180]",
      "dest": "identifier: newInterestRateModel [44631,44651]"
    },
    {
      "src": "block_statement [52541,52638]",
      "dest": "block_statement [36304,36401]"
    },
    {
      "src": "call_argument [38225,38247]",
      "dest": "call_argument [25160,25182]"
    },
    {
      "src": "parameter [54295,54324]",
      "dest": "parameter [38058,38087]"
    },
    {
      "src": "identifier: FailureInfo [44424,44435]",
      "dest": "identifier: FailureInfo [30914,30925]"
    },
    {
      "src": "call_argument [56719,56741]",
      "dest": "call_argument [40482,40504]"
    },
    {
      "src": "member_expression [43490,43517]",
      "dest": "member_expression [29980,30007]"
    },
    {
      "src": "expression_statement [45967,46038]",
      "dest": "expression_statement [32457,32528]"
    },
    {
      "src": "identifier: accountBorrows [39003,39017]",
      "dest": "identifier: accountBorrows [25723,25737]"
    },
    {
      "src": "call_argument [46300,46308]",
      "dest": "call_argument [32790,32798]"
    },
    {
      "src": "type_name [9769,9773]",
      "dest": "type_name [6734,6738]"
    },
    {
      "src": "comment: /* Fail if borrow not allowed */ [32382,32414]",
      "dest": "comment: /* Fail if borrow not allowed */ [19320,19352]"
    },
    {
      "src": "identifier: REPAY_BORROW_ACCRUE_INTEREST_FAILED [35844,35879]",
      "dest": "identifier: REPAY_BORROW_ACCRUE_INTEREST_FAILED [22479,22514]"
    },
    {
      "src": "): ) [52843,52844]",
      "dest": "): ) [36606,36607]"
    },
    {
      "src": "call_argument [39694,39710]",
      "dest": "call_argument [26414,26430]"
    },
    {
      "src": "return: return [9191,9197]",
      "dest": "return: return [6156,6162]"
    },
    {
      "src": "member_expression [24446,24460]",
      "dest": "member_expression [16757,16771]"
    },
    {
      "src": "call_expression [8740,8768]",
      "dest": "call_expression [11261,11289]"
    },
    {
      "src": "user_defined_type [400,411]",
      "dest": "user_defined_type [400,411]"
    },
    {
      "src": "\": \" [161,162]",
      "dest": "\": \" [161,162]"
    },
    {
      "src": "call_argument [44805,44815]",
      "dest": "call_argument [31295,31305]"
    },
    {
      "src": "identifier: borrowsPrior [16186,16198]",
      "dest": "identifier: borrowsPrior [13539,13551]"
    },
    {
      "src": "identifier: Error [52149,52154]",
      "dest": "identifier: Error [35912,35917]"
    },
    {
      "src": "function: function [43099,43107]",
      "dest": "function: function [29589,29597]"
    },
    {
      "src": "function_definition [32282,35253]",
      "dest": "function_definition [19220,21888]"
    },
    {
      "src": "identifier: mantissa [7710,7718]",
      "dest": "identifier: mantissa [5101,5109]"
    },
    {
      "src": "call_expression [61681,61729]",
      "dest": "call_expression [45152,45200]"
    },
    {
      "src": "identifier: msg [51613,51616]",
      "dest": "identifier: msg [35376,35379]"
    },
    {
      "src": "identifier: accrualBlockNumber [59457,59475]",
      "dest": "identifier: accrualBlockNumber [43103,43121]"
    },
    {
      "src": "(: ( [10148,10149]",
      "dest": "(: ( [8611,8612]"
    },
    {
      "src": "identifier: borrower [40697,40705]",
      "dest": "identifier: borrower [27157,27165]"
    },
    {
      "src": "uint: uint [25274,25278]",
      "dest": "uint: uint [17585,17589]"
    },
    {
      "src": "function: function [15450,15458]",
      "dest": "function: function [12803,12811]"
    },
    {
      "src": "(: ( [44804,44805]",
      "dest": "(: ( [31294,31295]"
    },
    {
      "src": "string [10655,10679]",
      "dest": "string [9118,9142]"
    },
    {
      "src": "call_expression [31825,31862]",
      "dest": "call_expression [18763,18800]"
    },
    {
      "src": "return: return [63295,63301]",
      "dest": "return: return [46766,46772]"
    },
    {
      "src": "block_statement [44174,44289]",
      "dest": "block_statement [30664,30779]"
    },
    {
      "src": "comment: /**      * @notice Sender repays a borrow belonging to borrower      * @param borrower the account with the debt being payed off      * @param repayAmount The amount to repay      * @return (uint, uint) An error code (0=success, otherwise a failure, see ErrorReporter.sol), and the actual repayment amount.      */ [36069,36383]",
      "dest": "comment: /**      * @notice Sender repays a borrow belonging to borrower      * @param borrower the account with the debt being payed off      * @param repayAmount The amount to repay      * @return (uint, uint) An error code (0=success, otherwise a failure, see ErrorReporter.sol), and the actual repayment amount.      */ [22704,23018]"
    },
    {
      "src": ">: > [59917,59918]",
      "dest": ">: > [43563,43564]"
    },
    {
      "src": "!=: != [61263,61265]",
      "dest": "!=: != [44734,44736]"
    },
    {
      "src": "address: address [48062,48069]",
      "dest": "address: address [49186,49193]"
    },
    {
      "src": "identifier: totalBorrowsNew [33962,33977]",
      "dest": "identifier: totalBorrowsNew [20757,20772]"
    },
    {
      "src": "tuple_expression [42220,42300]",
      "dest": "tuple_expression [28710,28790]"
    },
    {
      "src": "returns: returns [26686,26693]",
      "dest": "returns: returns [48818,48825]"
    },
    {
      "src": "identifier: accountTokens [7326,7339]",
      "dest": "identifier: accountTokens [4717,4730]"
    },
    {
      "src": "comment: /* We call the defense hook */ [35106,35136]",
      "dest": "comment: /* We call the defense hook */ [21711,21741]"
    },
    {
      "src": ".: . [53570,53571]",
      "dest": ".: . [37333,37334]"
    },
    {
      "src": "}: } [54001,54002]",
      "dest": "}: } [37764,37765]"
    },
    {
      "src": "returns: returns [43228,43235]",
      "dest": "returns: returns [29718,29725]"
    },
    {
      "src": "=: = [52921,52922]",
      "dest": "=: = [36684,36685]"
    },
    {
      "src": "): ) [45935,45936]",
      "dest": "): ) [32425,32426]"
    },
    {
      "src": "): ) [25362,25363]",
      "dest": "): ) [17673,17674]"
    },
    {
      "src": "): ) [64545,64546]",
      "dest": "): ) [49419,49420]"
    },
    {
      "src": "): ) [43247,43248]",
      "dest": "): ) [29737,29738]"
    },
    {
      "src": "}: } [41979,41980]",
      "dest": "}: } [28469,28470]"
    },
    {
      "src": "type_name [41570,41574]",
      "dest": "type_name [28060,28064]"
    },
    {
      "src": "identifier: oldComptroller [53031,53045]",
      "dest": "identifier: oldComptroller [36794,36808]"
    },
    {
      "src": "primitive_type [58357,58361]",
      "dest": "primitive_type [42003,42007]"
    },
    {
      "src": "address: address [10541,10548]",
      "dest": "address: address [9004,9011]"
    },
    {
      "src": "function: function [6365,6373]",
      "dest": "function: function [3756,3764]"
    },
    {
      "src": "): ) [15597,15598]",
      "dest": "): ) [12950,12951]"
    },
    {
      "src": "(: ( [15473,15474]",
      "dest": "(: ( [12826,12827]"
    },
    {
      "src": ",: , [40033,40034]",
      "dest": ",: , [26734,26735]"
    },
    {
      "src": "(: ( [32463,32464]",
      "dest": "(: ( [19401,19402]"
    },
    {
      "src": "comment: /* Revert if seize tokens fails (since we cannot be sure of side effects) */ [46058,46134]",
      "dest": "comment: /* Revert if seize tokens fails (since we cannot be sure of side effects) */ [32548,32624]"
    },
    {
      "src": "): ) [32346,32347]",
      "dest": "): ) [19284,19285]"
    },
    {
      "src": "member_expression [36020,36030]",
      "dest": "member_expression [22655,22665]"
    },
    {
      "src": ",: , [45900,45901]",
      "dest": ",: , [32390,32391]"
    },
    {
      "src": "call_expression [43318,43429]",
      "dest": "call_expression [29808,29919]"
    },
    {
      "src": "comment: // Track the market's current interest rate model [62724,62773]",
      "dest": "comment: // Track the market's current interest rate model [46195,46244]"
    },
    {
      "src": "comment: /* If borrowBalance = 0 then borrowIndex is likely also 0.          * Rather than failing the calculation with a division by 0, we immediately return 0 in this case.          */ [11840,12017]",
      "dest": "comment: /* If borrowBalance = 0 then borrowIndex is likely also 0.          * Rather than failing the calculation with a division by 0, we immediately return 0 in this case.          */ [9978,10155]"
    },
    {
      "src": "{: { [44895,44896]",
      "dest": "{: { [31385,31386]"
    },
    {
      "src": "(: ( [6992,6993]",
      "dest": "(: ( [4383,4384]"
    },
    {
      "src": "type_name [35599,35603]",
      "dest": "type_name [22234,22238]"
    },
    {
      "src": "identifier: borrowBalanceStored [10697,10716]",
      "dest": "identifier: borrowBalanceStored [9160,9179]"
    },
    {
      "src": "): ) [61728,61729]",
      "dest": "): ) [45199,45200]"
    },
    {
      "src": "(: ( [31376,31377]",
      "dest": "(: ( [18314,18315]"
    },
    {
      "src": "!=: != [43691,43693]",
      "dest": "!=: != [30181,30183]"
    },
    {
      "src": ",: , [36494,36495]",
      "dest": ",: , [23129,23130]"
    },
    {
      "src": "primitive_type [20863,20870]",
      "dest": "primitive_type [48484,48491]"
    },
    {
      "src": ",: , [18154,18155]",
      "dest": ",: , [14644,14645]"
    },
    {
      "src": "call_argument [43353,43366]",
      "dest": "call_argument [29843,29856]"
    },
    {
      "src": "comment: /* Get borrowBalance and borrowIndex */ [11718,11757]",
      "dest": "comment: /* Get borrowBalance and borrowIndex */ [9856,9895]"
    },
    {
      "src": "): ) [10190,10191]",
      "dest": "): ) [8653,8654]"
    },
    {
      "src": "return_statement [25496,25565]",
      "dest": "return_statement [17807,17876]"
    },
    {
      "src": "call_argument [41913,41964]",
      "dest": "call_argument [28403,28454]"
    },
    {
      "src": "identifier: exchangeRateMantissa [8476,8496]",
      "dest": "identifier: exchangeRateMantissa [5788,5808]"
    },
    {
      "src": "): ) [15496,15497]",
      "dest": "): ) [12849,12850]"
    },
    {
      "src": "member_expression [45260,45301]",
      "dest": "member_expression [31750,31791]"
    },
    {
      "src": ".: . [6466,6467]",
      "dest": ".: . [3857,3858]"
    },
    {
      "src": "call_argument [37876,37880]",
      "dest": "call_argument [24511,24515]"
    },
    {
      "src": "primitive_type [32329,32333]",
      "dest": "primitive_type [19267,19271]"
    },
    {
      "src": "): ) [40057,40058]",
      "dest": "): ) [26758,26759]"
    },
    {
      "src": "public: public [13319,13325]",
      "dest": "public: public [11217,11223]"
    },
    {
      "src": "identifier: fail [59955,59959]",
      "dest": "identifier: fail [43601,43605]"
    },
    {
      "src": "array_access [7019,7044]",
      "dest": "array_access [4410,4435]"
    },
    {
      "src": "binary_expression [41718,41747]",
      "dest": "binary_expression [28208,28237]"
    },
    {
      "src": "(: ( [56651,56652]",
      "dest": "(: ( [40414,40415]"
    },
    {
      "src": "uint: uint [9769,9773]",
      "dest": "uint: uint [6734,6738]"
    },
    {
      "src": "type_name [20863,20870]",
      "dest": "type_name [48484,48491]"
    },
    {
      "src": "parameter [1116,1137]",
      "dest": "parameter [1116,1137]"
    },
    {
      "src": "number_literal: 0 [25696,25697]",
      "dest": "number_literal: 0 [18007,18008]"
    },
    {
      "src": "comment: // accrueInterest emits logs on errors, but we still want to log the fact that an attempted borrow failed [19794,19899]",
      "dest": "comment: // accrueInterest emits logs on errors, but we still want to log the fact that an attempted borrow failed [15908,16013]"
    },
    {
      "src": ".: . [54449,54450]",
      "dest": ".: . [38212,38213]"
    },
    {
      "src": "call_argument [1703,1731]",
      "dest": "call_argument [1703,1731]"
    },
    {
      "src": "!=: != [44870,44872]",
      "dest": "!=: != [31360,31362]"
    },
    {
      "src": ",: , [45342,45343]",
      "dest": ",: , [31832,31833]"
    },
    {
      "src": ",: , [33721,33722]",
      "dest": ",: , [20727,20728]"
    },
    {
      "src": "parameter [1163,1178]",
      "dest": "parameter [1163,1178]"
    },
    {
      "src": "identifier: borrower [46015,46023]",
      "dest": "identifier: borrower [32505,32513]"
    },
    {
      "src": ".: . [52598,52599]",
      "dest": ".: . [36361,36362]"
    },
    {
      "src": "if_statement [45798,46048]",
      "dest": "if_statement [32288,32538]"
    },
    {
      "src": ".: . [23915,23916]",
      "dest": ".: . [24983,24984]"
    },
    {
      "src": "parameter [37754,37758]",
      "dest": "parameter [24389,24393]"
    },
    {
      "src": "call_argument [55805,55852]",
      "dest": "call_argument [39568,39615]"
    },
    {
      "src": "function: function [10511,10519]",
      "dest": "function: function [8974,8982]"
    },
    {
      "src": "call_expression [25303,25319]",
      "dest": "call_expression [17614,17630]"
    },
    {
      "src": "identifier: borrowRateMaxMantissa [16254,16275]",
      "dest": "identifier: borrowRateMaxMantissa [13607,13628]"
    },
    {
      "src": "primitive_type [55606,55610]",
      "dest": "primitive_type [39369,39373]"
    },
    {
      "src": "(: ( [38157,38158]",
      "dest": "(: ( [25092,25093]"
    },
    {
      "src": "(: ( [43708,43709]",
      "dest": "(: ( [30198,30199]"
    },
    {
      "src": "address: address [64349,64356]",
      "dest": "address: address [47820,47827]"
    },
    {
      "src": "uint: uint [36512,36516]",
      "dest": "uint: uint [23147,23151]"
    },
    {
      "src": "): ) [62963,62964]",
      "dest": "): ) [46434,46435]"
    },
    {
      "src": "uint: uint [17125,17129]",
      "dest": "uint: uint [14484,14488]"
    },
    {
      "src": "expression_statement [45372,45477]",
      "dest": "expression_statement [31862,31967]"
    },
    {
      "src": "call_argument [51665,51683]",
      "dest": "call_argument [35428,35446]"
    },
    {
      "src": ".: . [9809,9810]",
      "dest": ".: . [6774,6775]"
    },
    {
      "src": "address: address [46329,46336]",
      "dest": "address: address [32819,32826]"
    },
    {
      "src": "function_definition [7243,7353]",
      "dest": "function_definition [4634,4744]"
    },
    {
      "src": "identifier: totalBorrowsNew [40760,40775]",
      "dest": "identifier: totalBorrowsNew [27220,27235]"
    },
    {
      "src": "visibility [36459,36467]",
      "dest": "visibility [23094,23102]"
    },
    {
      "src": "(: ( [37684,37685]",
      "dest": "(: ( [24319,24320]"
    },
    {
      "src": "\": \" [1572,1573]",
      "dest": "\": \" [1572,1573]"
    },
    {
      "src": "import_directive [63,95]",
      "dest": "import_directive [63,95]"
    },
    {
      "src": "identifier: vars [38998,39002]",
      "dest": "identifier: vars [25718,25722]"
    },
    {
      "src": "primitive_type [37118,37122]",
      "dest": "primitive_type [23753,23757]"
    },
    {
      "src": "identifier: CTokenInterface [383,398]",
      "dest": "identifier: CTokenInterface [383,398]"
    },
    {
      "src": "identifier: CTokenInterface [41588,41603]",
      "dest": "identifier: CTokenInterface [28078,28093]"
    },
    {
      "src": "identifier: fail [56714,56718]",
      "dest": "identifier: fail [40477,40481]"
    },
    {
      "src": "): ) [56011,56012]",
      "dest": "): ) [39774,39775]"
    },
    {
      "src": "member_expression [10149,10163]",
      "dest": "member_expression [8612,8626]"
    },
    {
      "src": "): ) [41910,41911]",
      "dest": "): ) [28400,28401]"
    },
    {
      "src": "uint: uint [19197,19201]",
      "dest": "uint: uint [15311,15315]"
    },
    {
      "src": "=: = [38622,38623]",
      "dest": "=: = [20629,20630]"
    },
    {
      "src": "): ) [5313,5314]",
      "dest": "): ) [2704,2705]"
    },
    {
      "src": "return_statement [59729,59820]",
      "dest": "return_statement [43375,43466]"
    },
    {
      "src": "): ) [5774,5775]",
      "dest": "): ) [3165,3166]"
    },
    {
      "src": "if: if [38936,38938]",
      "dest": "if: if [25656,25658]"
    },
    {
      "src": "identifier: borrowIndex [1895,1906]",
      "dest": "identifier: borrowIndex [1895,1906]"
    },
    {
      "src": "identifier: _totalSupply [13936,13948]",
      "dest": "identifier: _totalSupply [11661,11673]"
    },
    {
      "src": "(: ( [24372,24373]",
      "dest": "(: ( [16683,16684]"
    },
    {
      "src": "call_argument [37973,38000]",
      "dest": "call_argument [24608,24635]"
    },
    {
      "src": "member_expression [4956,4970]",
      "dest": "member_expression [19856,19870]"
    },
    {
      "src": "identifier: NO_ERROR [4962,4970]",
      "dest": "identifier: NO_ERROR [19862,19870]"
    },
    {
      "src": "): ) [8591,8592]",
      "dest": "): ) [9522,9523]"
    },
    {
      "src": "expression_statement [35145,35209]",
      "dest": "expression_statement [20609,20669]"
    },
    {
      "src": "return_type_definition [56425,56445]",
      "dest": "return_type_definition [40188,40208]"
    },
    {
      "src": "identifier: pendingAdmin [51999,52011]",
      "dest": "identifier: pendingAdmin [35762,35774]"
    },
    {
      "src": "member_expression [31675,31716]",
      "dest": "member_expression [18613,18654]"
    },
    {
      "src": "primitive_type [45802,45809]",
      "dest": "primitive_type [32292,32299]"
    },
    {
      "src": "function_body [11558,12702]",
      "dest": "function_body [9846,10600]"
    },
    {
      "src": "(: ( [44916,44917]",
      "dest": "(: ( [31406,31407]"
    },
    {
      "src": ".: . [54475,54476]",
      "dest": ".: . [38238,38239]"
    },
    {
      "src": "tuple_expression [43733,43805]",
      "dest": "tuple_expression [30223,30295]"
    },
    {
      "src": "call_expression [10116,10191]",
      "dest": "call_expression [8579,8654]"
    },
    {
      "src": ",: , [52585,52586]",
      "dest": ",: , [36348,36349]"
    },
    {
      "src": ",: , [60672,60673]",
      "dest": ",: , [44143,44144]"
    },
    {
      "src": "): ) [2146,2147]",
      "dest": "): ) [2146,2147]"
    },
    {
      "src": "assignment_expression [34869,34921]",
      "dest": "assignment_expression [21474,21526]"
    },
    {
      "src": "variable_declaration_statement [45216,45363]",
      "dest": "variable_declaration_statement [31706,31853]"
    },
    {
      "src": "identifier: addAmount [56405,56414]",
      "dest": "identifier: addAmount [40168,40177]"
    },
    {
      "src": "primitive_type [57922,57926]",
      "dest": "primitive_type [41568,41572]"
    },
    {
      "src": "): ) [48140,48141]",
      "dest": "): ) [49264,49265]"
    },
    {
      "src": "member_expression [19939,19978]",
      "dest": "member_expression [16053,16092]"
    },
    {
      "src": "\": \" [10655,10656]",
      "dest": "\": \" [9118,9119]"
    },
    {
      "src": "identifier: borrowAmount [31382,31394]",
      "dest": "identifier: borrowAmount [18320,18332]"
    },
    {
      "src": "type_name [52414,52434]",
      "dest": "type_name [36177,36197]"
    },
    {
      "src": "identifier: pendingAdmin [50974,50986]",
      "dest": "identifier: pendingAdmin [34737,34749]"
    },
    {
      "src": "): ) [7643,7644]",
      "dest": "): ) [5034,5035]"
    },
    {
      "src": "identifier: cTokenCollateral [43376,43392]",
      "dest": "identifier: cTokenCollateral [29866,29882]"
    },
    {
      "src": "type_name [37118,37122]",
      "dest": "type_name [23753,23757]"
    },
    {
      "src": "tuple_expression [44195,44278]",
      "dest": "tuple_expression [30685,30768]"
    },
    {
      "src": "(: ( [25317,25318]",
      "dest": "(: ( [17628,17629]"
    },
    {
      "src": "identifier: getBlockNumber [15582,15596]",
      "dest": "identifier: getBlockNumber [12935,12949]"
    },
    {
      "src": "call_argument [59741,59770]",
      "dest": "call_argument [43387,43416]"
    },
    {
      "src": "identifier: require [45372,45379]",
      "dest": "identifier: require [31862,31869]"
    },
    {
      "src": "variable_declaration [17155,17176]",
      "dest": "variable_declaration [14556,14577]"
    },
    {
      "src": "identifier: borrowSnapshot [12030,12044]",
      "dest": "identifier: borrowSnapshot [10168,10182]"
    },
    {
      "src": "==: == [12952,12954]",
      "dest": "==: == [10850,10852]"
    },
    {
      "src": "if_statement [59234,59356]",
      "dest": "if_statement [42880,43002]"
    },
    {
      "src": "identifier: reserveFactorMaxMantissa [54838,54862]",
      "dest": "identifier: reserveFactorMaxMantissa [38601,38625]"
    },
    {
      "src": "identifier: repayBorrowError [44744,44760]",
      "dest": "identifier: repayBorrowError [31234,31250]"
    },
    {
      "src": "identifier: error [41990,41995]",
      "dest": "identifier: error [28480,28485]"
    },
    {
      "src": "number_literal: 0 [35882,35883]",
      "dest": "number_literal: 0 [22517,22518]"
    },
    {
      "src": "uint: uint [15887,15891]",
      "dest": "uint: uint [13240,13244]"
    },
    {
      "src": "identifier: repayAmount [41575,41586]",
      "dest": "identifier: repayAmount [28065,28076]"
    },
    {
      "src": "call_expression [51660,51730]",
      "dest": "call_expression [35423,35493]"
    },
    {
      "src": "member_expression [42439,42449]",
      "dest": "member_expression [28929,28939]"
    },
    {
      "src": "(: ( [54396,54397]",
      "dest": "(: ( [38159,38160]"
    },
    {
      "src": "member_expression [40707,40729]",
      "dest": "member_expression [27167,27189]"
    },
    {
      "src": "(: ( [5248,5249]",
      "dest": "(: ( [2639,2640]"
    },
    {
      "src": "identifier: _setInterestRateModelFresh [61681,61707]",
      "dest": "identifier: _setInterestRateModelFresh [45152,45178]"
    },
    {
      "src": "memory: memory [1078,1084]",
      "dest": "memory: memory [1078,1084]"
    },
    {
      "src": "identifier: newPendingAdmin [50989,51004]",
      "dest": "identifier: newPendingAdmin [34752,34767]"
    },
    {
      "src": "return: return [15785,15791]",
      "dest": "return: return [13138,13144]"
    },
    {
      "src": "identifier: cTokenCollateral [43918,43934]",
      "dest": "identifier: cTokenCollateral [30408,30424]"
    },
    {
      "src": "call_argument [9824,9838]",
      "dest": "call_argument [6789,6803]"
    },
    {
      "src": "call_argument [17297,17307]",
      "dest": "call_argument [14372,14382]"
    },
    {
      "src": "if_statement [42041,42311]",
      "dest": "if_statement [28531,28801]"
    },
    {
      "src": "(: ( [35025,35026]",
      "dest": "(: ( [21630,21631]"
    },
    {
      "src": "(: ( [20122,20123]",
      "dest": "(: ( [16236,16237]"
    },
    {
      "src": "): ) [61286,61287]",
      "dest": "): ) [44757,44758]"
    },
    {
      "src": "identifier: nonReentrant [55516,55528]",
      "dest": "identifier: nonReentrant [39279,39291]"
    },
    {
      "src": "if_statement [44146,44289]",
      "dest": "if_statement [30636,30779]"
    },
    {
      "src": "<: < [32977,32978]",
      "dest": "<: < [20207,20208]"
    },
    {
      "src": "identifier: block [9198,9203]",
      "dest": "identifier: block [6163,6168]"
    },
    {
      "src": "visibility [11518,11526]",
      "dest": "visibility [9817,9825]"
    },
    {
      "src": "comment: /**      * @notice Returns the current total borrows plus accrued interest      * @return The total borrows with interest      */ [9904,10033]",
      "dest": "comment: /**      * @notice Returns the current total borrows plus accrued interest      * @return The total borrows with interest      */ [8367,8496]"
    },
    {
      "src": "parameter [8368,8372]",
      "dest": "parameter [5630,5634]"
    },
    {
      "src": "uint: uint [20920,20924]",
      "dest": "uint: uint [48541,48545]"
    },
    {
      "src": ".: . [36756,36757]",
      "dest": ".: . [23391,23392]"
    },
    {
      "src": "}: } [53106,53107]",
      "dest": "}: } [36869,36870]"
    },
    {
      "src": ",: , [38058,38059]",
      "dest": ",: , [24693,24694]"
    },
    {
      "src": "return_type_definition [6424,6438]",
      "dest": "return_type_definition [3815,3829]"
    },
    {
      "src": "primitive_type [45240,45244]",
      "dest": "primitive_type [31730,31734]"
    },
    {
      "src": "call_argument [51119,51134]",
      "dest": "call_argument [34882,34897]"
    },
    {
      "src": "type_cast_expression [35651,35671]",
      "dest": "type_cast_expression [22286,22306]"
    },
    {
      "src": "identifier: comptroller_ [912,924]",
      "dest": "identifier: comptroller_ [912,924]"
    },
    {
      "src": "identifier: newReserveFactorMantissa [54811,54835]",
      "dest": "identifier: newReserveFactorMantissa [38574,38598]"
    },
    {
      "src": "primitive_type [15492,15496]",
      "dest": "primitive_type [12845,12849]"
    },
    {
      "src": "return_statement [53073,53101]",
      "dest": "return_statement [36836,36864]"
    },
    {
      "src": "call_expression [52773,52844]",
      "dest": "call_expression [36536,36607]"
    },
    {
      "src": "parameter [11001,11005]",
      "dest": "parameter [9464,9468]"
    },
    {
      "src": ",: , [54688,54689]",
      "dest": ",: , [38451,38452]"
    },
    {
      "src": "&&: && [1307,1309]",
      "dest": "&&: && [1307,1309]"
    },
    {
      "src": "identifier: msg [54397,54400]",
      "dest": "identifier: msg [38160,38163]"
    },
    {
      "src": "): ) [20924,20925]",
      "dest": "): ) [48545,48546]"
    },
    {
      "src": "type_name [11552,11556]",
      "dest": "type_name [9840,9844]"
    },
    {
      "src": "{: { [61204,61205]",
      "dest": "{: { [44675,44676]"
    },
    {
      "src": "uint: uint [54972,54976]",
      "dest": "uint: uint [38735,38739]"
    },
    {
      "src": "(: ( [45894,45895]",
      "dest": "(: ( [32384,32385]"
    },
    {
      "src": "external: external [10558,10566]",
      "dest": "external: external [9021,9029]"
    },
    {
      "src": "{: { [50632,50633]",
      "dest": "{: { [34395,34396]"
    },
    {
      "src": "string [133,152]",
      "dest": "string [133,152]"
    },
    {
      "src": ",: , [45912,45913]",
      "dest": ",: , [32402,32403]"
    },
    {
      "src": "(: ( [55796,55797]",
      "dest": "(: ( [39559,39560]"
    },
    {
      "src": "uint: uint [1616,1620]",
      "dest": "uint: uint [1616,1620]"
    },
    {
      "src": "(: ( [47177,47178]",
      "dest": "(: ( [33697,33698]"
    },
    {
      "src": "primitive_type [47198,47205]",
      "dest": "primitive_type [33718,33725]"
    },
    {
      "src": "identifier: totalBorrows [9511,9523]",
      "dest": "identifier: totalBorrows [6476,6488]"
    },
    {
      "src": ",: , [14556,14557]",
      "dest": ",: , [12147,12148]"
    },
    {
      "src": "comment: /* Short-circuit accumulating 0 interest */ [15668,15711]",
      "dest": "comment: /* Short-circuit accumulating 0 interest */ [13021,13064]"
    },
    {
      "src": "identifier: Error [46571,46576]",
      "dest": "identifier: Error [33091,33096]"
    },
    {
      "src": "true [64655,64659]",
      "dest": "true [49529,49533]"
    },
    {
      "src": ",: , [24619,24620]",
      "dest": ",: , [16930,16931]"
    },
    {
      "src": "{: { [32530,32531]",
      "dest": "{: { [19468,19469]"
    },
    {
      "src": "call_argument [36032,36042]",
      "dest": "call_argument [22667,22677]"
    },
    {
      "src": "returns: returns [15156,15163]",
      "dest": "returns: returns [12509,12516]"
    },
    {
      "src": "type_name [2888,2892]",
      "dest": "type_name [48092,48096]"
    },
    {
      "src": "identifier: accrueInterest [53521,53535]",
      "dest": "identifier: accrueInterest [37284,37298]"
    },
    {
      "src": "identifier: NO_ERROR [15803,15811]",
      "dest": "identifier: NO_ERROR [13156,13164]"
    },
    {
      "src": "(: ( [43733,43734]",
      "dest": "(: ( [30223,30224]"
    },
    {
      "src": "comment: /**      * @notice Get cash balance of this cToken in the underlying asset      * @return The quantity of underlying asset owned by this contract      */ [14965,15118]",
      "dest": "comment: /**      * @notice Get cash balance of this cToken in the underlying asset      * @return The quantity of underlying asset owned by this contract      */ [12318,12471]"
    },
    {
      "src": "call_expression [53751,53763]",
      "dest": "call_expression [37514,37526]"
    },
    {
      "src": "member_expression [50745,50786]",
      "dest": "member_expression [34508,34549]"
    },
    {
      "src": "uint: uint [41570,41574]",
      "dest": "uint: uint [28060,28064]"
    },
    {
      "src": "identifier: repayAmount [37900,37911]",
      "dest": "identifier: repayAmount [24535,24546]"
    },
    {
      "src": "internal: internal [63605,63613]",
      "dest": "internal: internal [47076,47084]"
    },
    {
      "src": "identifier: NO_ERROR [44884,44892]",
      "dest": "identifier: NO_ERROR [31374,31382]"
    },
    {
      "src": "member_expression [43918,43953]",
      "dest": "member_expression [30408,30443]"
    },
    {
      "src": "(: ( [43360,43361]",
      "dest": "(: ( [29850,29851]"
    },
    {
      "src": "type_name [43243,43247]",
      "dest": "type_name [29733,29737]"
    },
    {
      "src": "): ) [17864,17865]",
      "dest": "): ) [14545,14546]"
    },
    {
      "src": "): ) [42299,42300]",
      "dest": "): ) [28789,28790]"
    },
    {
      "src": "identifier: comptroller [52686,52697]",
      "dest": "identifier: comptroller [36449,36460]"
    },
    {
      "src": "(: ( [56001,56002]",
      "dest": "(: ( [39764,39765]"
    },
    {
      "src": "==: == [38952,38954]",
      "dest": "==: == [25672,25674]"
    },
    {
      "src": "type_name [47178,47185]",
      "dest": "type_name [33698,33705]"
    },
    {
      "src": "primitive_type [51627,51634]",
      "dest": "primitive_type [35390,35397]"
    },
    {
      "src": "tuple_expression [43478,43576]",
      "dest": "tuple_expression [29968,30066]"
    },
    {
      "src": "identifier: borrower [41560,41568]",
      "dest": "identifier: borrower [28050,28058]"
    },
    {
      "src": "comment: // accrueInterest emits logs on errors, but on top of that we want to log the fact that an attempted reduce reserves failed. [58393,58517]",
      "dest": "comment: // accrueInterest emits logs on errors, but on top of that we want to log the fact that an attempted reduce reserves failed. [42039,42163]"
    },
    {
      "src": "function_definition [55461,56041]",
      "dest": "function_definition [39224,39804]"
    },
    {
      "src": "comment: // _reduceReservesFresh emits reserve-reduction-specific logs on errors, so we don't need to. [58627,58720]",
      "dest": "comment: // _reduceReservesFresh emits reserve-reduction-specific logs on errors, so we don't need to. [42273,42366]"
    },
    {
      "src": "identifier: Error [36731,36736]",
      "dest": "identifier: Error [23366,23371]"
    },
    {
      "src": "internal: internal [36459,36467]",
      "dest": "internal: internal [23094,23102]"
    },
    {
      "src": "type_cast_expression [46329,46354]",
      "dest": "type_cast_expression [32819,32844]"
    },
    {
      "src": ".: . [53090,53091]",
      "dest": ".: . [36853,36854]"
    },
    {
      "src": "if_statement [41714,41980]",
      "dest": "if_statement [28204,28470]"
    },
    {
      "src": "identifier: getBlockNumber [43959,43973]",
      "dest": "identifier: getBlockNumber [30449,30463]"
    },
    {
      "src": "identifier: sender [47306,47312]",
      "dest": "identifier: sender [33826,33832]"
    },
    {
      "src": "identifier: Exp [17260,17263]",
      "dest": "identifier: Exp [14335,14338]"
    },
    {
      "src": "identifier: liquidator [45902,45912]",
      "dest": "identifier: liquidator [32392,32402]"
    },
    {
      "src": "identifier: balanceOfUnderlying [7610,7629]",
      "dest": "identifier: balanceOfUnderlying [5001,5020]"
    },
    {
      "src": "identifier: borrowIndexPrior [18481,18497]",
      "dest": "identifier: borrowIndexPrior [14779,14795]"
    },
    {
      "src": "identifier: Error [41732,41737]",
      "dest": "identifier: Error [28222,28227]"
    },
    {
      "src": "primitive_type [55185,55189]",
      "dest": "primitive_type [38948,38952]"
    },
    {
      "src": "call_argument [59960,59975]",
      "dest": "call_argument [43606,43621]"
    },
    {
      "src": "call_expression [61459,61537]",
      "dest": "call_expression [44930,45008]"
    },
    {
      "src": "call_expression [47288,47348]",
      "dest": "call_expression [33808,33868]"
    },
    {
      "src": "{: { [13881,13882]",
      "dest": "{: { [11606,11607]"
    },
    {
      "src": ",: , [36793,36794]",
      "dest": ",: , [23428,23429]"
    },
    {
      "src": "returns: returns [55529,55536]",
      "dest": "returns: returns [39292,39299]"
    },
    {
      "src": "block_statement [62605,62714]",
      "dest": "block_statement [46076,46185]"
    },
    {
      "src": "return_statement [40942,40996]",
      "dest": "return_statement [27432,27486]"
    },
    {
      "src": "identifier: Error [44201,44206]",
      "dest": "identifier: Error [30691,30696]"
    },
    {
      "src": "]: ] [7837,7838]",
      "dest": "]: ] [5203,5204]"
    },
    {
      "src": ".: . [54918,54919]",
      "dest": ".: . [38681,38682]"
    },
    {
      "src": "member_expression [38979,38995]",
      "dest": "member_expression [25699,25715]"
    },
    {
      "src": "): ) [12915,12916]",
      "dest": "): ) [10813,10814]"
    },
    {
      "src": "identifier: NO_ERROR [45411,45419]",
      "dest": "identifier: NO_ERROR [31901,31909]"
    },
    {
      "src": "primitive_type [38955,38959]",
      "dest": "primitive_type [25675,25679]"
    },
    {
      "src": "}: } [14952,14953]",
      "dest": "}: } [12305,12306]"
    },
    {
      "src": "identifier: Error [61271,61276]",
      "dest": "identifier: Error [44742,44747]"
    },
    {
      "src": "struct_member [37064,37081]",
      "dest": "struct_member [23699,23716]"
    },
    {
      "src": "expression_statement [45860,45937]",
      "dest": "expression_statement [32350,32427]"
    },
    {
      "src": "visibility [13319,13325]",
      "dest": "visibility [11217,11223]"
    },
    {
      "src": ",: , [50743,50744]",
      "dest": ",: , [34506,34507]"
    },
    {
      "src": "expression_statement [2180,2197]",
      "dest": "expression_statement [2180,2197]"
    },
    {
      "src": "identifier: fail [19920,19924]",
      "dest": "identifier: fail [16034,16038]"
    },
    {
      "src": "identifier: msg [36933,36936]",
      "dest": "identifier: msg [23568,23571]"
    },
    {
      "src": "call_argument [33019,33048]",
      "dest": "call_argument [20249,20278]"
    },
    {
      "src": "identifier: accrueInterest [41688,41702]",
      "dest": "identifier: accrueInterest [28178,28192]"
    },
    {
      "src": "(: ( [53491,53492]",
      "dest": "(: ( [37254,37255]"
    },
    {
      "src": "emit_statement [52035,52066]",
      "dest": "emit_statement [35798,35829]"
    },
    {
      "src": "call_argument [53970,53994]",
      "dest": "call_argument [37733,37757]"
    },
    {
      "src": "member_expression [44386,44422]",
      "dest": "member_expression [30876,30912]"
    },
    {
      "src": "return: return [7929,7935]",
      "dest": "return: return [5144,5150]"
    },
    {
      "src": "type_cast_expression [23905,23925]",
      "dest": "type_cast_expression [24973,24993]"
    },
    {
      "src": "type_name [48041,48048]",
      "dest": "type_name [49165,49172]"
    },
    {
      "src": "}: } [11216,11217]",
      "dest": "}: } [9529,9530]"
    },
    {
      "src": "call_expression [64557,64591]",
      "dest": "call_expression [49431,49465]"
    },
    {
      "src": "{: { [45846,45847]",
      "dest": "{: { [32336,32337]"
    },
    {
      "src": "(: ( [62601,62602]",
      "dest": "(: ( [46072,46073]"
    },
    {
      "src": "comment: ///////////////////////// [56819,56844]",
      "dest": "comment: ///////////////////////// [40582,40607]"
    },
    {
      "src": "return_type_definition [9760,9774]",
      "dest": "return_type_definition [6725,6739]"
    },
    {
      "src": "visibility [55507,55515]",
      "dest": "visibility [39270,39278]"
    },
    {
      "src": "): ) [61285,61286]",
      "dest": "): ) [44756,44757]"
    },
    {
      "src": "type_name [20920,20924]",
      "dest": "type_name [48541,48545]"
    },
    {
      "src": "call_argument [44928,44944]",
      "dest": "call_argument [31418,31434]"
    },
    {
      "src": "identifier: Exponential [400,411]",
      "dest": "identifier: Exponential [400,411]"
    },
    {
      "src": "identifier: getCash [15132,15139]",
      "dest": "identifier: getCash [12485,12492]"
    },
    {
      "src": "identifier: Error [42059,42064]",
      "dest": "identifier: Error [28549,28554]"
    },
    {
      "src": "}: } [7741,7742]",
      "dest": "}: } [5132,5133]"
    },
    {
      "src": "identifier: liquidator [46288,46298]",
      "dest": "identifier: liquidator [32778,32788]"
    },
    {
      "src": "}: } [42310,42311]",
      "dest": "}: } [28800,28801]"
    },
    {
      "src": "primitive_type [51493,51497]",
      "dest": "primitive_type [35256,35260]"
    },
    {
      "src": "number_literal: 0 [38292,38293]",
      "dest": "number_literal: 0 [25227,25228]"
    },
    {
      "src": "variable_declaration_statement [14329,14361]",
      "dest": "variable_declaration_statement [12032,12064]"
    },
    {
      "src": "(: ( [2918,2919]",
      "dest": "(: ( [48122,48123]"
    },
    {
      "src": "): ) [35544,35545]",
      "dest": "): ) [22179,22180]"
    },
    {
      "src": "call_expression [15904,15918]",
      "dest": "call_expression [13257,13271]"
    },
    {
      "src": "function_body [5813,5905]",
      "dest": "function_body [3204,3296]"
    },
    {
      "src": "identifier: Error [59285,59290]",
      "dest": "identifier: Error [42931,42936]"
    },
    {
      "src": "comment: // If this is also the collateral, run seizeInternal to avoid re-entrancy, otherwise make an external call [45658,45764]",
      "dest": "comment: // If this is also the collateral, run seizeInternal to avoid re-entrancy, otherwise make an external call [32148,32254]"
    },
    {
      "src": "return_type_definition [24364,24378]",
      "dest": "return_type_definition [16675,16689]"
    },
    {
      "src": "): ) [31431,31432]",
      "dest": "): ) [18369,18370]"
    },
    {
      "src": "): ) [32501,32502]",
      "dest": "): ) [19439,19440]"
    },
    {
      "src": "call_argument [62405,62452]",
      "dest": "call_argument [45876,45923]"
    },
    {
      "src": "struct_member [37118,37138]",
      "dest": "struct_member [23753,23773]"
    },
    {
      "src": "variable_declaration_statement [58305,58335]",
      "dest": "variable_declaration_statement [41951,41981]"
    },
    {
      "src": "uint: uint [24373,24377]",
      "dest": "uint: uint [16684,16688]"
    },
    {
      "src": "call_argument [62631,62653]",
      "dest": "call_argument [46102,46124]"
    },
    {
      "src": "(: ( [8897,8898]",
      "dest": "(: ( [5862,5863]"
    },
    {
      "src": "primitive_type [7300,7307]",
      "dest": "primitive_type [4691,4698]"
    },
    {
      "src": "identifier: FailureInfo [43763,43774]",
      "dest": "identifier: FailureInfo [30253,30264]"
    },
    {
      "src": "): ) [52163,52164]",
      "dest": "): ) [35926,35927]"
    },
    {
      "src": "comment: /*          * We invoke doTransferOut for the borrower and the borrowAmount.          *  Note: The cToken must handle variations between ERC-20 and ETH underlying.          *  On success, the cToken borrowAmount less of cash.          *  doTransferOut reverts if anything goes wrong, since we can't be sure if side effects occurred.          */ [34330,34674]",
      "dest": "comment: /*          * We invoke doTransferOut for the borrower and the borrowAmount.          *  Note: The cToken must handle variations between ERC-20 and ETH underlying.          *  On success, the cToken borrowAmount less of cash.          *  doTransferOut reverts if anything goes wrong, since we can't be sure if side effects occurred.          */ [20935,21279]"
    },
    {
      "src": "uint: uint [46165,46169]",
      "dest": "uint: uint [32655,32659]"
    },
    {
      "src": "identifier: allowed [37827,37834]",
      "dest": "identifier: allowed [24462,24469]"
    },
    {
      "src": "identifier: reduceAmount [59904,59916]",
      "dest": "identifier: reduceAmount [43550,43562]"
    },
    {
      "src": "call_argument [51685,51729]",
      "dest": "call_argument [35448,35492]"
    },
    {
      "src": "identifier: totalBorrowsNew [17130,17145]",
      "dest": "identifier: totalBorrowsNew [14489,14504]"
    },
    {
      "src": "array_access [11806,11829]",
      "dest": "array_access [9944,9967]"
    },
    {
      "src": "primitive_type [2845,2852]",
      "dest": "primitive_type [48049,48056]"
    },
    {
      "src": "parameter [48136,48140]",
      "dest": "parameter [49260,49264]"
    },
    {
      "src": "identifier: redeemTokens [24795,24807]",
      "dest": "identifier: redeemTokens [17106,17118]"
    },
    {
      "src": "parameter [59113,59117]",
      "dest": "parameter [42759,42763]"
    },
    {
      "src": "(: ( [10540,10541]",
      "dest": "(: ( [9003,9004]"
    },
    {
      "src": "solidity: solidity [7,15]",
      "dest": "solidity: solidity [7,15]"
    },
    {
      "src": "type_name [15928,15932]",
      "dest": "type_name [13281,13285]"
    },
    {
      "src": "call_argument [44625,44671]",
      "dest": "call_argument [31115,31161]"
    },
    {
      "src": "variable_declaration_statement [32423,32503]",
      "dest": "variable_declaration_statement [19361,19441]"
    },
    {
      "src": "identifier: FailureInfo [44625,44636]",
      "dest": "identifier: FailureInfo [31115,31126]"
    },
    {
      "src": "identifier: amount [64374,64380]",
      "dest": "identifier: amount [47845,47851]"
    },
    {
      "src": "identifier: comptroller_ [1643,1655]",
      "dest": "identifier: comptroller_ [1643,1655]"
    },
    {
      "src": "number_literal: 0 [37937,37938]",
      "dest": "number_literal: 0 [24572,24573]"
    },
    {
      "src": "primitive_type [6938,6945]",
      "dest": "primitive_type [4329,4336]"
    },
    {
      "src": "user_defined_type [383,398]",
      "dest": "user_defined_type [383,398]"
    },
    {
      "src": "tuple_expression [56713,56798]",
      "dest": "tuple_expression [40476,40561]"
    },
    {
      "src": "comment: /**      * @dev Performs a transfer in, reverting upon failure. Returns the amount actually transferred to the protocol, in case of a fee.      *  This may revert due to insufficient balance or insufficient allowance.      */ [63640,63865]",
      "dest": "comment: /**      * @dev Performs a transfer in, reverting upon failure. Returns the amount actually transferred to the protocol, in case of a fee.      *  This may revert due to insufficient balance or insufficient allowance.      */ [47111,47336]"
    },
    {
      "src": "call_expression [20113,20146]",
      "dest": "call_expression [16227,16260]"
    },
    {
      "src": "primitive_type [15928,15932]",
      "dest": "primitive_type [13281,13285]"
    },
    {
      "src": "if_statement [35638,35895]",
      "dest": "if_statement [22273,22530]"
    },
    {
      "src": ".: . [12965,12966]",
      "dest": ".: . [10863,10864]"
    },
    {
      "src": "identifier: account [8584,8591]",
      "dest": "identifier: account [9515,9522]"
    },
    {
      "src": "member_expression [1205,1215]",
      "dest": "member_expression [1205,1215]"
    },
    {
      "src": "parameter [41570,41586]",
      "dest": "parameter [28060,28076]"
    },
    {
      "src": "{: { [58295,58296]",
      "dest": "{: { [41941,41942]"
    },
    {
      "src": "comment: /*          * We call doTransferIn for the payer and the repayAmount          *  Note: The cToken must handle variations between ERC-20 and ETH underlying.          *  On success, the cToken holds an additional repayAmount of cash.          *  doTransferIn reverts if anything goes wrong, since we can't be sure if side effects occurred.          *   it returns the amount actually transferred, in case of a fee.          */ [39216,39640]",
      "dest": "comment: /*          * We call doTransferIn for the payer and the repayAmount          *  Note: The cToken must handle variations between ERC-20 and ETH underlying.          *  On success, the cToken holds an additional repayAmount of cash.          *  doTransferIn reverts if anything goes wrong, since we can't be sure if side effects occurred.          *   it returns the amount actually transferred, in case of a fee.          */ [25936,26360]"
    },
    {
      "src": "identifier: borrower [38473,38481]",
      "dest": "identifier: borrower [25408,25416]"
    },
    {
      "src": "==: == [10141,10143]",
      "dest": "==: == [8604,8606]"
    },
    {
      "src": "parameter [2875,2886]",
      "dest": "parameter [48079,48090]"
    },
    {
      "src": "address: address [6382,6389]",
      "dest": "address: address [3773,3780]"
    },
    {
      "src": "comment: // accrueInterest emits logs on errors, but we still want to log the fact that an attempted redeem failed [24477,24582]",
      "dest": "comment: // accrueInterest emits logs on errors, but we still want to log the fact that an attempted redeem failed [16788,16893]"
    },
    {
      "src": "primitive_type [5249,5256]",
      "dest": "primitive_type [2640,2647]"
    },
    {
      "src": "identifier: REDEEM_ACCRUE_INTEREST_FAILED [25534,25563]",
      "dest": "identifier: REDEEM_ACCRUE_INTEREST_FAILED [17845,17874]"
    },
    {
      "src": "parameter [25274,25278]",
      "dest": "parameter [17585,17589]"
    },
    {
      "src": ",: , [36030,36031]",
      "dest": ",: , [22665,22666]"
    },
    {
      "src": "}: } [43815,43816]",
      "dest": "}: } [30305,30306]"
    },
    {
      "src": "): ) [59713,59714]",
      "dest": "): ) [43359,43360]"
    },
    {
      "src": "primitive_type [13875,13879]",
      "dest": "primitive_type [11600,11604]"
    },
    {
      "src": "(: ( [19733,19734]",
      "dest": "(: ( [15847,15848]"
    },
    {
      "src": "return: return [54432,54438]",
      "dest": "return: return [38195,38201]"
    },
    {
      "src": "identifier: Error [2093,2098]",
      "dest": "identifier: Error [2093,2098]"
    },
    {
      "src": "member_expression [25347,25361]",
      "dest": "member_expression [17658,17672]"
    },
    {
      "src": "): ) [15140,15141]",
      "dest": "): ) [12493,12494]"
    },
    {
      "src": "type_cast_expression [5387,5407]",
      "dest": "type_cast_expression [2778,2798]"
    },
    {
      "src": "identifier: allowed [38050,38057]",
      "dest": "identifier: allowed [24685,24692]"
    },
    {
      "src": "{: { [13955,13956]",
      "dest": "{: { [11680,11681]"
    },
    {
      "src": "(: ( [19748,19749]",
      "dest": "(: ( [15862,15863]"
    },
    {
      "src": "call_argument [19931,19936]",
      "dest": "call_argument [16045,16050]"
    },
    {
      "src": "uint: uint [43303,43307]",
      "dest": "uint: uint [29793,29797]"
    },
    {
      "src": ",: , [43241,43242]",
      "dest": ",: , [29731,29732]"
    },
    {
      "src": "identifier: NO_ERROR [41738,41746]",
      "dest": "identifier: NO_ERROR [28228,28236]"
    },
    {
      "src": ".: . [58367,58368]",
      "dest": ".: . [42013,42014]"
    },
    {
      "src": "\": \" [1703,1704]",
      "dest": "\": \" [1703,1704]"
    },
    {
      "src": ".: . [40547,40548]",
      "dest": ".: . [27007,27008]"
    },
    {
      "src": "identifier: sender [24787,24793]",
      "dest": "identifier: sender [17098,17104]"
    },
    {
      "src": "(: ( [31426,31427]",
      "dest": "(: ( [18364,18365]"
    },
    {
      "src": ",: , [36439,36440]",
      "dest": ",: , [23074,23075]"
    },
    {
      "src": "identifier: Error [54890,54895]",
      "dest": "identifier: Error [38653,38658]"
    },
    {
      "src": ".: . [38260,38261]",
      "dest": ".: . [25195,25196]"
    },
    {
      "src": "}: } [56808,56809]",
      "dest": "}: } [40571,40572]"
    },
    {
      "src": "}: } [59355,59356]",
      "dest": "}: } [43001,43002]"
    },
    {
      "src": ".: . [33706,33707]",
      "dest": ".: . [20712,20713]"
    },
    {
      "src": "identifier: initialExchangeRateMantissa_ [1444,1472]",
      "dest": "identifier: initialExchangeRateMantissa_ [1444,1472]"
    },
    {
      "src": "primitive_type [37685,37692]",
      "dest": "primitive_type [24320,24327]"
    },
    {
      "src": "||: || [51610,51612]",
      "dest": "||: || [35373,35375]"
    },
    {
      "src": "): ) [62996,62997]",
      "dest": "): ) [46467,46468]"
    },
    {
      "src": "identifier: Error [19925,19930]",
      "dest": "identifier: Error [16039,16044]"
    },
    {
      "src": "comment: // accrueInterest emits logs on errors, but we still want to log the fact that an attempted borrow failed [36600,36705]",
      "dest": "comment: // accrueInterest emits logs on errors, but we still want to log the fact that an attempted borrow failed [23235,23340]"
    },
    {
      "src": "): ) [47269,47270]",
      "dest": "): ) [33789,33790]"
    },
    {
      "src": "else: else [45948,45952]",
      "dest": "else: else [32438,32442]"
    },
    {
      "src": "identifier: SET_RESERVE_FACTOR_BOUNDS_CHECK [54919,54950]",
      "dest": "identifier: SET_RESERVE_FACTOR_BOUNDS_CHECK [38682,38713]"
    },
    {
      "src": "identifier: admin [54411,54416]",
      "dest": "identifier: admin [38174,38179]"
    },
    {
      "src": "identifier: newInterestRateModel [62112,62132]",
      "dest": "identifier: newInterestRateModel [45583,45603]"
    },
    {
      "src": "}: } [57966,57967]",
      "dest": "}: } [41612,41613]"
    },
    {
      "src": "if: if [43439,43441]",
      "dest": "if: if [29929,29931]"
    },
    {
      "src": "call_argument [40731,40753]",
      "dest": "call_argument [27191,27213]"
    },
    {
      "src": "): ) [38660,38661]",
      "dest": "): ) [20667,20668]"
    },
    {
      "src": ",: , [1326,1327]",
      "dest": ",: , [1326,1327]"
    },
    {
      "src": "identifier: redeemInternal [24308,24322]",
      "dest": "identifier: redeemInternal [16619,16633]"
    },
    {
      "src": "comment: ///////////////////////// [18693,18718]",
      "dest": "comment: ///////////////////////// [14807,14832]"
    },
    {
      "src": "parameter [5249,5260]",
      "dest": "parameter [2640,2651]"
    },
    {
      "src": "(: ( [63936,63937]",
      "dest": "(: ( [47407,47408]"
    },
    {
      "src": "address: address [43368,43375]",
      "dest": "address: address [29858,29865]"
    },
    {
      "src": "returns: returns [2910,2917]",
      "dest": "returns: returns [48114,48121]"
    },
    {
      "src": "visibility [53461,53469]",
      "dest": "visibility [37224,37232]"
    },
    {
      "src": "identifier: repayAmount [43172,43183]",
      "dest": "identifier: repayAmount [29662,29673]"
    },
    {
      "src": "call_expression [34683,34720]",
      "dest": "call_expression [21288,21325]"
    },
    {
      "src": "): ) [62452,62453]",
      "dest": "): ) [45923,45924]"
    },
    {
      "src": "=: = [40221,40222]",
      "dest": "=: = [26790,26791]"
    },
    {
      "src": "): ) [44076,44077]",
      "dest": "): ) [30566,30567]"
    },
    {
      "src": "type_name [9175,9179]",
      "dest": "type_name [6140,6144]"
    },
    {
      "src": "return: return [43726,43732]",
      "dest": "return: return [30216,30222]"
    },
    {
      "src": "identifier: Error [58542,58547]",
      "dest": "identifier: Error [42188,42193]"
    },
    {
      "src": "identifier: NO_ERROR [24452,24460]",
      "dest": "identifier: NO_ERROR [16763,16771]"
    },
    {
      "src": "\": \" [52842,52843]",
      "dest": "\": \" [36605,36606]"
    },
    {
      "src": "member_expression [59305,59344]",
      "dest": "member_expression [42951,42990]"
    },
    {
      "src": "identifier: allowed [32428,32435]",
      "dest": "identifier: allowed [19366,19373]"
    },
    {
      "src": "identifier: totalBorrowsCurrent [10047,10066]",
      "dest": "identifier: totalBorrowsCurrent [8510,8529]"
    },
    {
      "src": "primitive_type [12955,12959]",
      "dest": "primitive_type [10853,10857]"
    },
    {
      "src": "): ) [53459,53460]",
      "dest": "): ) [37222,37223]"
    },
    {
      "src": "call_argument [24446,24460]",
      "dest": "call_argument [16757,16771]"
    },
    {
      "src": "identifier: _setPendingAdmin [50558,50574]",
      "dest": "identifier: _setPendingAdmin [34321,34337]"
    },
    {
      "src": "uint: uint [5878,5882]",
      "dest": "uint: uint [3269,3273]"
    },
    {
      "src": ",: , [43801,43802]",
      "dest": ",: , [30291,30292]"
    },
    {
      "src": "type_cast_expression [63302,63322]",
      "dest": "type_cast_expression [46773,46793]"
    },
    {
      "src": "identifier: Error [58362,58367]",
      "dest": "identifier: Error [42008,42013]"
    },
    {
      "src": "(: ( [43352,43353]",
      "dest": "(: ( [29842,29843]"
    },
    {
      "src": "function: function [36388,36396]",
      "dest": "function: function [23023,23031]"
    },
    {
      "src": "uint: uint [56434,56438]",
      "dest": "uint: uint [40197,40201]"
    },
    {
      "src": "comment: // EFFECTS & INTERACTIONS [18727,18752]",
      "dest": "comment: // EFFECTS & INTERACTIONS [14841,14866]"
    },
    {
      "src": "identifier: totalBorrowsNew [19163,19178]",
      "dest": "identifier: totalBorrowsNew [15277,15292]"
    },
    {
      "src": "identifier: cTokenCollateral [45980,45996]",
      "dest": "identifier: cTokenCollateral [32470,32486]"
    },
    {
      "src": "identifier: FailureInfo [51685,51696]",
      "dest": "identifier: FailureInfo [35448,35459]"
    },
    {
      "src": "identifier: borrowRatePerBlock [9396,9414]",
      "dest": "identifier: borrowRatePerBlock [6361,6379]"
    },
    {
      "src": "type_cast_expression [10633,10653]",
      "dest": "type_cast_expression [9096,9116]"
    },
    {
      "src": "(: ( [42044,42045]",
      "dest": "(: ( [28534,28535]"
    },
    {
      "src": "): ) [54324,54325]",
      "dest": "): ) [38087,38088]"
    },
    {
      "src": "member_expression [52781,52809]",
      "dest": "member_expression [36544,36572]"
    },
    {
      "src": "function: function [63581,63589]",
      "dest": "function: function [47052,47060]"
    },
    {
      "src": "call_argument [43376,43392]",
      "dest": "call_argument [29866,29882]"
    },
    {
      "src": "identifier: seizeTokens [46025,46036]",
      "dest": "identifier: seizeTokens [32515,32526]"
    },
    {
      "src": "comment: // Initialize block number and borrow index (block number mocks depend on comptroller being set) [1743,1839]",
      "dest": "comment: // Initialize block number and borrow index (block number mocks depend on comptroller being set) [1743,1839]"
    },
    {
      "src": "call_struct_argument [18121,18152]",
      "dest": "call_struct_argument [14611,14642]"
    },
    {
      "src": "return_statement [36718,36798]",
      "dest": "return_statement [23353,23433]"
    },
    {
      "src": "parameter [58289,58293]",
      "dest": "parameter [41935,41939]"
    },
    {
      "src": "return: return [61674,61680]",
      "dest": "return: return [45145,45151]"
    },
    {
      "src": "identifier: Exp [7705,7708]",
      "dest": "identifier: Exp [5096,5099]"
    },
    {
      "src": "identifier: exchangeRateCurrent [7720,7739]",
      "dest": "identifier: exchangeRateCurrent [5111,5130]"
    },
    {
      "src": ",: , [40705,40706]",
      "dest": ",: , [27165,27166]"
    },
    {
      "src": "identifier: repayAmount [39699,39710]",
      "dest": "identifier: repayAmount [26419,26430]"
    },
    {
      "src": "): ) [55166,55167]",
      "dest": "): ) [38929,38930]"
    },
    {
      "src": "comment: /*              * Otherwise:              *  exchangeRate = (totalCash + totalBorrows - totalReserves) / totalSupply              */ [14184,14316]",
      "dest": "comment: /*              * Otherwise:              *  exchangeRate = (totalCash + totalBorrows - totalReserves) / totalSupply              */ [11887,12019]"
    },
    {
      "src": "returns: returns [51484,51491]",
      "dest": "returns: returns [35247,35254]"
    },
    {
      "src": "call_expression [36916,36967]",
      "dest": "call_expression [23551,23602]"
    },
    {
      "src": "call_argument [43763,43800]",
      "dest": "call_argument [30253,30290]"
    },
    {
      "src": "): ) [10978,10979]",
      "dest": "): ) [9441,9442]"
    },
    {
      "src": "): ) [38057,38058]",
      "dest": "): ) [24692,24693]"
    },
    {
      "src": "(: ( [6937,6938]",
      "dest": "(: ( [4328,4329]"
    },
    {
      "src": "function_body [7002,7060]",
      "dest": "function_body [4393,4451]"
    },
    {
      "src": "identifier: borrowBalanceStoredInternal [38624,38651]",
      "dest": "identifier: borrowBalanceStoredInternal [20631,20658]"
    },
    {
      "src": "identifier: currentBlockNumber [15561,15579]",
      "dest": "identifier: currentBlockNumber [12914,12932]"
    },
    {
      "src": "solidity_version: 0.5.16 [17,23]",
      "dest": "solidity_version: 0.5.16 [17,23]"
    },
    {
      "src": ",: , [24793,24794]",
      "dest": ",: , [17104,17105]"
    },
    {
      "src": "primitive_type [43368,43375]",
      "dest": "primitive_type [29858,29865]"
    },
    {
      "src": "call_expression [59684,59698]",
      "dest": "call_expression [43330,43344]"
    },
    {
      "src": "primitive_type [45217,45221]",
      "dest": "primitive_type [31707,31711]"
    },
    {
      "src": "type_name [11662,11666]",
      "dest": "type_name [10421,10425]"
    },
    {
      "src": "comment: /* Calculate the current borrow interest rate */ [16060,16108]",
      "dest": "comment: /* Calculate the current borrow interest rate */ [13413,13461]"
    },
    {
      "src": "return_type_definition [58280,58294]",
      "dest": "return_type_definition [41926,41940]"
    },
    {
      "src": "identifier: liquidator [46003,46013]",
      "dest": "identifier: liquidator [32493,32503]"
    },
    {
      "src": "function_body [32372,35253]",
      "dest": "function_body [19310,21888]"
    },
    {
      "src": "type_name [891,911]",
      "dest": "type_name [891,911]"
    },
    {
      "src": "identifier: cTokenCollateral [41998,42014]",
      "dest": "identifier: cTokenCollateral [28488,28504]"
    },
    {
      "src": "uint: uint [15928,15932]",
      "dest": "uint: uint [13281,13285]"
    },
    {
      "src": "): ) [32370,32371]",
      "dest": "): ) [19308,19309]"
    },
    {
      "src": "call_argument [56743,56779]",
      "dest": "call_argument [40506,40542]"
    },
    {
      "src": "identifier: amountSeizeError [45222,45238]",
      "dest": "identifier: amountSeizeError [31712,31728]"
    },
    {
      "src": ".: . [16160,16161]",
      "dest": ".: . [13513,13514]"
    },
    {
      "src": "assignment_expression [18879,18918]",
      "dest": "assignment_expression [14993,15032]"
    },
    {
      "src": "): ) [53818,53819]",
      "dest": "): ) [37581,37582]"
    },
    {
      "src": "identifier: subUInt [40006,40013]",
      "dest": "identifier: sub_ [26710,26714]"
    },
    {
      "src": "(: ( [59683,59684]",
      "dest": "(: ( [43329,43330]"
    },
    {
      "src": "member_expression [33019,33048]",
      "dest": "member_expression [20249,20278]"
    },
    {
      "src": "call_argument [8584,8591]",
      "dest": "call_argument [9515,9522]"
    },
    {
      "src": "primitive_type [53080,53084]",
      "dest": "primitive_type [36843,36847]"
    },
    {
      "src": "number_literal: 0 [43803,43804]",
      "dest": "number_literal: 0 [30293,30294]"
    },
    {
      "src": "call_argument [62966,62996]",
      "dest": "call_argument [46437,46467]"
    },
    {
      "src": "!=: != [32756,32758]",
      "dest": "!=: != [19986,19988]"
    },
    {
      "src": "call_argument [41899,41911]",
      "dest": "call_argument [28389,28401]"
    },
    {
      "src": "identifier: _notEntered [2344,2355]",
      "dest": "identifier: _notEntered [2344,2355]"
    },
    {
      "src": "=: = [40562,40563]",
      "dest": "=: = [27022,27023]"
    },
    {
      "src": "{: { [59715,59716]",
      "dest": "{: { [43361,43362]"
    },
    {
      "src": "): ) [56690,56691]",
      "dest": "): ) [40453,40454]"
    },
    {
      "src": "identifier: fail [44917,44921]",
      "dest": "identifier: fail [31407,31411]"
    },
    {
      "src": "comment: /**      * @notice Sender supplies assets into the market and receives cTokens in exchange      * @dev Accrues interest whether or not the operation succeeds, unless reverted      * @param mintAmount The amount of the underlying asset to supply      * @return (uint, uint) An error code (0=success, otherwise a failure, see ErrorReporter.sol), and the actual mint amount.      */ [19230,19609]",
      "dest": "comment: /**      * @notice Sender supplies assets into the market and receives cTokens in exchange      * @dev Accrues interest whether or not the operation succeeds, unless reverted      * @param mintAmount The amount of the underlying asset to supply      * @return (uint, uint) An error code (0=success, otherwise a failure, see ErrorReporter.sol), and the actual mint amount.      */ [15344,15723]"
    },
    {
      "src": "): ) [31514,31515]",
      "dest": "): ) [18452,18453]"
    },
    {
      "src": "(: ( [24431,24432]",
      "dest": "(: ( [16742,16743]"
    },
    {
      "src": "call_expression [35813,35880]",
      "dest": "call_expression [22448,22515]"
    },
    {
      "src": "primitive_type [35583,35587]",
      "dest": "primitive_type [22218,22222]"
    },
    {
      "src": "member_expression [46571,46585]",
      "dest": "member_expression [33091,33105]"
    },
    {
      "src": "assignment_expression [1414,1472]",
      "dest": "assignment_expression [1414,1472]"
    },
    {
      "src": "if: if [44146,44148]",
      "dest": "if: if [30636,30638]"
    },
    {
      "src": "(: ( [43738,43739]",
      "dest": "(: ( [30228,30229]"
    },
    {
      "src": "type_name [56440,56444]",
      "dest": "type_name [40203,40207]"
    },
    {
      "src": "call_argument [45594,45602]",
      "dest": "call_argument [32084,32092]"
    },
    {
      "src": "primitive_type [43129,43136]",
      "dest": "primitive_type [29619,29626]"
    },
    {
      "src": "function_definition [10511,10732]",
      "dest": "function_definition [8974,9195]"
    },
    {
      "src": "type_name [36441,36445]",
      "dest": "type_name [23076,23080]"
    },
    {
      "src": "identifier: accountBorrows [33399,33413]",
      "dest": "identifier: accountBorrows [20614,20628]"
    },
    {
      "src": "type_name [37064,37068]",
      "dest": "type_name [23699,23703]"
    },
    {
      "src": "(: ( [62337,62338]",
      "dest": "(: ( [45808,45809]"
    },
    {
      "src": ".: . [36936,36937]",
      "dest": ".: . [23571,23572]"
    },
    {
      "src": "member_expression [62405,62452]",
      "dest": "member_expression [45876,45923]"
    },
    {
      "src": "): ) [42030,42031]",
      "dest": "): ) [28520,28521]"
    },
    {
      "src": "emit_statement [51081,51136]",
      "dest": "emit_statement [34844,34899]"
    },
    {
      "src": "\": \" [192,193]",
      "dest": "\": \" [192,193]"
    },
    {
      "src": "identifier: FailureInfo [62405,62416]",
      "dest": "identifier: FailureInfo [45876,45887]"
    },
    {
      "src": "call_argument [45310,45314]",
      "dest": "call_argument [31800,31804]"
    },
    {
      "src": "): ) [32775,32776]",
      "dest": "): ) [20005,20006]"
    },
    {
      "src": "uint: uint [17186,17190]",
      "dest": "uint: uint [14691,14695]"
    },
    {
      "src": ".: . [33398,33399]",
      "dest": ".: . [20613,20614]"
    },
    {
      "src": "primitive_type [44550,44554]",
      "dest": "primitive_type [31040,31044]"
    },
    {
      "src": "return: return [9785,9791]",
      "dest": "return: return [6750,6756]"
    },
    {
      "src": "if: if [59900,59902]",
      "dest": "if: if [43546,43548]"
    },
    {
      "src": "call_argument [55611,55625]",
      "dest": "call_argument [39374,39388]"
    },
    {
      "src": "): ) [17294,17295]",
      "dest": "): ) [14369,14370]"
    },
    {
      "src": "(: ( [17830,17831]",
      "dest": "(: ( [14511,14512]"
    },
    {
      "src": ",: , [25520,25521]",
      "dest": ",: , [17831,17832]"
    },
    {
      "src": "string [103,124]",
      "dest": "string [103,124]"
    },
    {
      "src": "call_argument [10149,10163]",
      "dest": "call_argument [8612,8626]"
    },
    {
      "src": "variable_declaration [15887,15901]",
      "dest": "variable_declaration [13240,13254]"
    },
    {
      "src": "call_argument [17264,17294]",
      "dest": "call_argument [14339,14369]"
    },
    {
      "src": "): ) [16485,16486]",
      "dest": "): ) [13814,13815]"
    },
    {
      "src": "parameter [26695,26699]",
      "dest": "parameter [48827,48831]"
    },
    {
      "src": "comment: /* Calculate new borrow balance using the interest index:          *  recentBorrowBalance = borrower.borrowBalance * market.borrowIndex / borrower.borrowIndex          */ [12126,12296]",
      "dest": "comment: /* Calculate new borrow balance using the interest index:          *  recentBorrowBalance = borrower.borrowBalance * market.borrowIndex / borrower.borrowIndex          */ [10242,10412]"
    },
    {
      "src": "type_name [36512,36516]",
      "dest": "type_name [23147,23151]"
    },
    {
      "src": "block_statement [61288,61548]",
      "dest": "block_statement [44759,45019]"
    },
    {
      "src": "type_name [62252,62269]",
      "dest": "type_name [45723,45740]"
    },
    {
      "src": "variable_declaration [16014,16035]",
      "dest": "variable_declaration [13367,13388]"
    },
    {
      "src": "): ) [14585,14586]",
      "dest": "): ) [12162,12163]"
    },
    {
      "src": "identifier: borrower [33445,33453]",
      "dest": "identifier: borrower [25571,25579]"
    },
    {
      "src": "string_literal [45620,45646]",
      "dest": "string_literal [32110,32136]"
    },
    {
      "src": "identifier: borrower [36945,36953]",
      "dest": "identifier: borrower [23580,23588]"
    },
    {
      "src": "): ) [54637,54638]",
      "dest": "): ) [38400,38401]"
    },
    {
      "src": "identifier: REPAY_BEHALF_ACCRUE_INTEREST_FAILED [36757,36792]",
      "dest": "identifier: REPAY_BEHALF_ACCRUE_INTEREST_FAILED [23392,23427]"
    },
    {
      "src": "): ) [44944,44945]",
      "dest": "): ) [31434,31435]"
    },
    {
      "src": "}: } [8972,8973]",
      "dest": "}: } [5937,5938]"
    },
    {
      "src": "uint: uint [56400,56404]",
      "dest": "uint: uint [40163,40167]"
    },
    {
      "src": "identifier: doTransferOut [64335,64348]",
      "dest": "identifier: doTransferOut [47806,47819]"
    },
    {
      "src": ",: , [53045,53046]",
      "dest": ",: , [36808,36809]"
    },
    {
      "src": "address: address [20863,20870]",
      "dest": "address: address [48484,48491]"
    },
    {
      "src": "primitive_type [37718,37722]",
      "dest": "primitive_type [24353,24357]"
    },
    {
      "src": "(: ( [6381,6382]",
      "dest": "(: ( [3772,3773]"
    },
    {
      "src": "return_type_definition [50617,50631]",
      "dest": "return_type_definition [34380,34394]"
    },
    {
      "src": "(: ( [42029,42030]",
      "dest": "(: ( [28519,28520]"
    },
    {
      "src": "parameter [47216,47232]",
      "dest": "parameter [33736,33752]"
    },
    {
      "src": "identifier: FailureInfo [62655,62666]",
      "dest": "identifier: FailureInfo [46126,46137]"
    },
    {
      "src": "uint: uint [15492,15496]",
      "dest": "uint: uint [12845,12849]"
    },
    {
      "src": "type_name [13875,13879]",
      "dest": "type_name [11600,11604]"
    },
    {
      "src": "call_argument [58542,58554]",
      "dest": "call_argument [42188,42200]"
    },
    {
      "src": "return: return [56022,56028]",
      "dest": "return: return [39785,39791]"
    },
    {
      "src": "member_expression [54907,54950]",
      "dest": "member_expression [38670,38713]"
    },
    {
      "src": "identifier: admin [52059,52064]",
      "dest": "identifier: admin [35822,35827]"
    },
    {
      "src": "identifier: totalCash [14334,14343]",
      "dest": "identifier: totalCash [12037,12046]"
    },
    {
      "src": "internal: internal [24342,24350]",
      "dest": "internal: internal [16653,16661]"
    },
    {
      "src": "{: { [15771,15772]",
      "dest": "{: { [13124,13125]"
    },
    {
      "src": "return_statement [54432,54508]",
      "dest": "return_statement [38195,38271]"
    },
    {
      "src": "member_expression [54690,54732]",
      "dest": "member_expression [38453,38495]"
    },
    {
      "src": "identifier: pendingAdmin [51597,51609]",
      "dest": "identifier: pendingAdmin [35360,35372]"
    },
    {
      "src": "member_expression [44424,44466]",
      "dest": "member_expression [30914,30956]"
    },
    {
      "src": "uint: uint [32366,32370]",
      "dest": "uint: uint [19304,19308]"
    },
    {
      "src": "external: external [8333,8341]",
      "dest": "external: external [5595,5603]"
    },
    {
      "src": "identifier: getBlockNumber [54622,54636]",
      "dest": "identifier: getBlockNumber [38385,38399]"
    },
    {
      "src": "if: if [43914,43916]",
      "dest": "if: if [30404,30406]"
    },
    {
      "src": "external: external [7277,7285]",
      "dest": "external: external [4668,4676]"
    },
    {
      "src": "function: function [12851,12859]",
      "dest": "function: function [10749,10757]"
    },
    {
      "src": "return_statement [52555,52628]",
      "dest": "return_statement [36318,36391]"
    },
    {
      "src": "return_type_definition [13331,13345]",
      "dest": "return_type_definition [11229,11243]"
    },
    {
      "src": "call_expression [14532,14586]",
      "dest": "call_expression [12113,12163]"
    },
    {
      "src": "): ) [9415,9416]",
      "dest": "): ) [6380,6381]"
    },
    {
      "src": "\": \" [46208,46209]",
      "dest": "\": \" [32698,32699]"
    },
    {
      "src": "function_body [5315,5414]",
      "dest": "function_body [2706,2805]"
    },
    {
      "src": "(: ( [36422,36423]",
      "dest": "(: ( [23057,23058]"
    },
    {
      "src": "identifier: error [36737,36742]",
      "dest": "identifier: error [23372,23377]"
    },
    {
      "src": "identifier: NO_ERROR [1692,1700]",
      "dest": "identifier: NO_ERROR [1692,1700]"
    },
    {
      "src": "!=: != [43451,43453]",
      "dest": "!=: != [29941,29943]"
    },
    {
      "src": "member_expression [59285,59303]",
      "dest": "member_expression [42931,42949]"
    },
    {
      "src": "primitive_type [31935,31939]",
      "dest": "primitive_type [18873,18877]"
    },
    {
      "src": "primitive_type [31443,31447]",
      "dest": "primitive_type [18381,18385]"
    },
    {
      "src": "identifier: accrueInterest [31456,31470]",
      "dest": "identifier: accrueInterest [18394,18408]"
    },
    {
      "src": "(: ( [24322,24323]",
      "dest": "(: ( [16633,16634]"
    },
    {
      "src": "type_name [11501,11508]",
      "dest": "type_name [9800,9807]"
    },
    {
      "src": "comment: // Set initial exchange rate [1377,1405]",
      "dest": "comment: // Set initial exchange rate [1377,1405]"
    },
    {
      "src": "identifier: fail [33014,33018]",
      "dest": "identifier: fail [20244,20248]"
    },
    {
      "src": "comment: // accrueInterest emits logs on errors, but on top of that we want to log the fact that an attempted change of interest rate model failed [61302,61439]",
      "dest": "comment: // accrueInterest emits logs on errors, but on top of that we want to log the fact that an attempted change of interest rate model failed [44773,44910]"
    },
    {
      "src": "uint: uint [52144,52148]",
      "dest": "uint: uint [35907,35911]"
    },
    {
      "src": "identifier: reservesPrior [16200,16213]",
      "dest": "identifier: reservesPrior [13553,13566]"
    },
    {
      "src": "parameter [8362,8366]",
      "dest": "parameter [5624,5628]"
    },
    {
      "src": "comment: /* We call the defense hook */ [40787,40817]",
      "dest": "comment: /* We call the defense hook */ [27247,27277]"
    },
    {
      "src": "identifier: MARKET_NOT_FRESH [59529,59545]",
      "dest": "identifier: MARKET_NOT_FRESH [43175,43191]"
    },
    {
      "src": "(: ( [53969,53970]",
      "dest": "(: ( [37732,37733]"
    },
    {
      "src": "if_statement [54807,54962]",
      "dest": "if_statement [38570,38725]"
    },
    {
      "src": "type_cast_expression [55185,55205]",
      "dest": "type_cast_expression [38948,38968]"
    },
    {
      "src": "member_expression [33050,33087]",
      "dest": "member_expression [20280,20317]"
    },
    {
      "src": "identifier: accrualBlockNumber [54600,54618]",
      "dest": "identifier: accrualBlockNumber [38363,38381]"
    },
    {
      "src": "return_statement [52137,52165]",
      "dest": "return_statement [35900,35928]"
    },
    {
      "src": "call_argument [51158,51172]",
      "dest": "call_argument [34921,34935]"
    },
    {
      "src": "variable_declaration_statement [33109,33137]",
      "dest": "variable_declaration_statement [20339,20367]"
    },
    {
      "src": "comment: /**      * @dev Performs a transfer out, ideally returning an explanatory error code upon failure tather than reverting.      *  If caller has not called checked protocol's balance, may revert due to insufficient cash held in the contract.      *  If caller has checked protocol's balance, and verified it is >= amount, this should not revert in normal conditions.      */ [63949,64321]",
      "dest": "comment: /**      * @dev Performs a transfer out, ideally returning an explanatory error code upon failure tather than reverting.      *  If caller has not called checked protocol's balance, may revert due to insufficient cash held in the contract.      *  If caller has checked protocol's balance, and verified it is >= amount, this should not revert in normal conditions.      */ [47420,47792]"
    },
    {
      "src": ",: , [17295,17296]",
      "dest": ",: , [14370,14371]"
    },
    {
      "src": ".: . [62636,62637]",
      "dest": ".: . [46107,46108]"
    },
    {
      "src": "expression_statement [52909,52938]",
      "dest": "expression_statement [36672,36701]"
    },
    {
      "src": "call_argument [62922,62964]",
      "dest": "call_argument [46393,46435]"
    },
    {
      "src": "(: ( [36019,36020]",
      "dest": "(: ( [22654,22655]"
    },
    {
      "src": "{: { [56692,56693]",
      "dest": "{: { [40455,40456]"
    },
    {
      "src": "{: { [41665,41666]",
      "dest": "{: { [28155,28156]"
    },
    {
      "src": "=: = [57382,57383]",
      "dest": "=: = [41145,41146]"
    },
    {
      "src": "function: function [62058,62066]",
      "dest": "function: function [45529,45537]"
    },
    {
      "src": "type_name [51493,51497]",
      "dest": "type_name [35256,35260]"
    },
    {
      "src": "): ) [25241,25242]",
      "dest": "): ) [17552,17553]"
    },
    {
      "src": "): ) [5406,5407]",
      "dest": "): ) [2797,2798]"
    },
    {
      "src": "call_argument [16462,16485]",
      "dest": "call_argument [13791,13814]"
    },
    {
      "src": "function_definition [9387,9546]",
      "dest": "function_definition [6352,6511]"
    },
    {
      "src": "identifier: nonReentrant [53470,53482]",
      "dest": "identifier: nonReentrant [37233,37245]"
    },
    {
      "src": "identifier: Error [25508,25513]",
      "dest": "identifier: Error [17819,17824]"
    },
    {
      "src": "\": \" [45620,45621]",
      "dest": "\": \" [32110,32111]"
    },
    {
      "src": ",: , [2108,2109]",
      "dest": ",: , [2108,2109]"
    },
    {
      "src": "if: if [58344,58346]",
      "dest": "if: if [41990,41992]"
    },
    {
      "src": "comment: /* We write the previously calculated values into storage */ [40385,40445]",
      "dest": "comment: /* We write the previously calculated values into storage */ [26845,26905]"
    },
    {
      "src": "(: ( [55581,55582]",
      "dest": "(: ( [39344,39345]"
    },
    {
      "src": "identifier: vars [35074,35078]",
      "dest": "identifier: vars [21679,21683]"
    },
    {
      "src": "variable_declaration [44762,44784]",
      "dest": "variable_declaration [31252,31274]"
    },
    {
      "src": ">: > [54836,54837]",
      "dest": ">: > [38599,38600]"
    },
    {
      "src": "return_statement [54878,54952]",
      "dest": "return_statement [38641,38715]"
    },
    {
      "src": "identifier: getBlockNumber [32759,32773]",
      "dest": "identifier: getBlockNumber [19989,20003]"
    },
    {
      "src": ".: . [45271,45272]",
      "dest": ".: . [31761,31762]"
    },
    {
      "src": "member_expression [36032,36042]",
      "dest": "member_expression [22667,22677]"
    },
    {
      "src": "return: return [38212,38218]",
      "dest": "return: return [25147,25153]"
    },
    {
      "src": "type_name [1116,1122]",
      "dest": "type_name [1116,1122]"
    },
    {
      "src": "user_defined_type [17050,17053]",
      "dest": "user_defined_type [14296,14299]"
    },
    {
      "src": "parameter [36490,36494]",
      "dest": "parameter [23125,23129]"
    },
    {
      "src": "return_type_definition [10091,10105]",
      "dest": "return_type_definition [8554,8568]"
    },
    {
      "src": "identifier: sender [57812,57818]",
      "dest": "identifier: sender [41458,41464]"
    },
    {
      "src": "identifier: addThenSubUInt [14532,14546]",
      "dest": "identifier: sub_ [12113,12117]"
    },
    {
      "src": "return_statement [25665,25713]",
      "dest": "return_statement [17976,18024]"
    },
    {
      "src": "): ) [35829,35830]",
      "dest": "): ) [22464,22465]"
    },
    {
      "src": "identifier: getCashPrior [32962,32974]",
      "dest": "identifier: getCashPrior [20192,20204]"
    },
    {
      "src": "address: address [32303,32310]",
      "dest": "address: address [19241,19248]"
    },
    {
      "src": "uint: uint [37064,37068]",
      "dest": "uint: uint [23699,23703]"
    },
    {
      "src": "{: { [14170,14171]",
      "dest": "{: { [11873,11874]"
    },
    {
      "src": "): ) [58333,58334]",
      "dest": "): ) [41979,41980]"
    },
    {
      "src": "address: address [6449,6456]",
      "dest": "address: address [3840,3847]"
    },
    {
      "src": "identifier: NO_ERROR [55617,55625]",
      "dest": "identifier: NO_ERROR [39380,39388]"
    },
    {
      "src": "parameter [43185,43217]",
      "dest": "parameter [29675,29707]"
    },
    {
      "src": "\": \" [60,61]",
      "dest": "\": \" [60,61]"
    },
    {
      "src": "identifier: sender [1209,1215]",
      "dest": "identifier: sender [1209,1215]"
    },
    {
      "src": "identifier: interestRateModel [9463,9480]",
      "dest": "identifier: interestRateModel [6428,6445]"
    },
    {
      "src": "uint: uint [13340,13344]",
      "dest": "uint: uint [11238,11242]"
    },
    {
      "src": "uint: uint [56440,56444]",
      "dest": "uint: uint [40203,40207]"
    },
    {
      "src": "(: ( [44534,44535]",
      "dest": "(: ( [31024,31025]"
    },
    {
      "src": "call_argument [33702,33721]",
      "dest": "call_argument [20708,20727]"
    },
    {
      "src": ".: . [1208,1209]",
      "dest": ".: . [1208,1209]"
    },
    {
      "src": "identifier: NO_ERROR [5889,5897]",
      "dest": "identifier: NO_ERROR [3280,3288]"
    },
    {
      "src": "(: ( [9743,9744]",
      "dest": "(: ( [6708,6709]"
    },
    {
      "src": "call_expression [32438,32502]",
      "dest": "call_expression [19376,19440]"
    },
    {
      "src": "parameter [64369,64380]",
      "dest": "parameter [47840,47851]"
    },
    {
      "src": "block_statement [59259,59356]",
      "dest": "block_statement [42905,43002]"
    },
    {
      "src": "primitive_type [60723,60727]",
      "dest": "primitive_type [44194,44198]"
    },
    {
      "src": "block_statement [43977,44092]",
      "dest": "block_statement [30467,30582]"
    },
    {
      "src": ",: , [6560,6561]",
      "dest": ",: , [3951,3952]"
    },
    {
      "src": "visibility [10069,10077]",
      "dest": "visibility [8532,8540]"
    },
    {
      "src": ",: , [9509,9510]",
      "dest": ",: , [6474,6475]"
    },
    {
      "src": "parameter [41653,41657]",
      "dest": "parameter [28143,28147]"
    },
    {
      "src": "block_statement [25364,25575]",
      "dest": "block_statement [17675,17886]"
    },
    {
      "src": "call_expression [12927,13002]",
      "dest": "call_expression [10825,10900]"
    },
    {
      "src": "uint: uint [41659,41663]",
      "dest": "uint: uint [28149,28153]"
    },
    {
      "src": "identifier: failOpaque [32551,32561]",
      "dest": "identifier: failOpaque [19489,19499]"
    },
    {
      "src": ",: , [47214,47215]",
      "dest": ",: , [33734,33735]"
    },
    {
      "src": "type_name [45217,45221]",
      "dest": "type_name [31707,31711]"
    },
    {
      "src": "identifier: MARKET_NOT_FRESH [54672,54688]",
      "dest": "identifier: MARKET_NOT_FRESH [38435,38451]"
    },
    {
      "src": "(: ( [55537,55538]",
      "dest": "(: ( [39300,39301]"
    },
    {
      "src": "=: = [39672,39673]",
      "dest": "=: = [26392,26393]"
    },
    {
      "src": "[: [ [40468,40469]",
      "dest": "[: [ [26928,26929]"
    },
    {
      "src": "identifier: totalBorrows [33989,34001]",
      "dest": "identifier: totalBorrows [20780,20792]"
    },
    {
      "src": "call_argument [15797,15811]",
      "dest": "call_argument [13150,13164]"
    },
    {
      "src": ",: , [44825,44826]",
      "dest": ",: , [31315,31316]"
    },
    {
      "src": "function_body [47271,47355]",
      "dest": "function_body [33791,33875]"
    },
    {
      "src": "): ) [54348,54349]",
      "dest": "): ) [38111,38112]"
    },
    {
      "src": "call_argument [17831,17850]",
      "dest": "call_argument [14512,14531]"
    },
    {
      "src": "return: return [32791,32797]",
      "dest": "return: return [20021,20027]"
    },
    {
      "src": "}: } [59829,59830]",
      "dest": "}: } [43475,43476]"
    },
    {
      "src": "): ) [38962,38963]",
      "dest": "): ) [25682,25683]"
    },
    {
      "src": "): ) [44675,44676]",
      "dest": "): ) [31165,31166]"
    },
    {
      "src": "type_name [44762,44766]",
      "dest": "type_name [31252,31256]"
    },
    {
      "src": "identifier: newComptroller [53047,53061]",
      "dest": "identifier: newComptroller [36810,36824]"
    },
    {
      "src": "call_expression [44381,44467]",
      "dest": "call_expression [30871,30957]"
    },
    {
      "src": ".: . [42064,42065]",
      "dest": ".: . [28554,28555]"
    },
    {
      "src": "identifier: fail [59736,59740]",
      "dest": "identifier: fail [43382,43386]"
    },
    {
      "src": "call_expression [5332,5383]",
      "dest": "call_expression [2723,2774]"
    },
    {
      "src": "identifier: fail [59518,59522]",
      "dest": "identifier: fail [43164,43168]"
    },
    {
      "src": "function_definition [9126,9217]",
      "dest": "function_definition [6091,6182]"
    },
    {
      "src": "call_argument [36955,36966]",
      "dest": "call_argument [23590,23601]"
    },
    {
      "src": "call_argument [52096,52111]",
      "dest": "call_argument [35859,35874]"
    },
    {
      "src": "): ) [31394,31395]",
      "dest": "): ) [18332,18333]"
    },
    {
      "src": "variable_declaration [32423,32435]",
      "dest": "variable_declaration [19361,19373]"
    },
    {
      "src": "view: view [13326,13330]",
      "dest": "view: view [11224,11228]"
    },
    {
      "src": "(: ( [53564,53565]",
      "dest": "(: ( [37327,37328]"
    },
    {
      "src": ".: . [52154,52155]",
      "dest": ".: . [35917,35918]"
    },
    {
      "src": "): ) [14359,14360]",
      "dest": "): ) [12062,12063]"
    },
    {
      "src": "identifier: minter [20871,20877]",
      "dest": "identifier: minter [48492,48498]"
    },
    {
      "src": "}: } [36807,36808]",
      "dest": "}: } [23442,23443]"
    },
    {
      "src": "identifier: repayAmount [36446,36457]",
      "dest": "identifier: repayAmount [23081,23092]"
    },
    {
      "src": "binary_expression [1490,1521]",
      "dest": "binary_expression [1490,1521]"
    },
    {
      "src": "binary_expression [2081,2108]",
      "dest": "binary_expression [2081,2108]"
    },
    {
      "src": "identifier: borrower [44817,44825]",
      "dest": "identifier: borrower [31307,31315]"
    },
    {
      "src": "identifier: seizeTokens [47221,47232]",
      "dest": "identifier: seizeTokens [33741,33752]"
    },
    {
      "src": "primitive_type [2978,2982]",
      "dest": "primitive_type [12177,12181]"
    },
    {
      "src": "string [1226,1264]",
      "dest": "string [1226,1264]"
    },
    {
      "src": "type_name [5249,5256]",
      "dest": "type_name [2640,2647]"
    },
    {
      "src": ",: , [44026,44027]",
      "dest": ",: , [30516,30517]"
    },
    {
      "src": "assignment_expression [41990,42031]",
      "dest": "assignment_expression [28480,28521]"
    },
    {
      "src": "variable_declaration_statement [52648,52698]",
      "dest": "variable_declaration_statement [36411,36461]"
    },
    {
      "src": "{: { [59259,59260]",
      "dest": "{: { [42905,42906]"
    },
    {
      "src": "(: ( [7708,7709]",
      "dest": "(: ( [5099,5100]"
    },
    {
      "src": "returns: returns [36481,36488]",
      "dest": "returns: returns [23116,23123]"
    },
    {
      "src": "visibility [9746,9754]",
      "dest": "visibility [6711,6719]"
    },
    {
      "src": "variable_declaration_statement [51837,51876]",
      "dest": "variable_declaration_statement [35600,35639]"
    },
    {
      "src": "return: return [32544,32550]",
      "dest": "return: return [19482,19488]"
    },
    {
      "src": "uint: uint [36441,36445]",
      "dest": "uint: uint [23076,23080]"
    },
    {
      "src": "comment: /**      * @notice The sender liquidates the borrowers collateral.      *  The collateral seized is transferred to the liquidator.      * @param borrower The borrower of this cToken to be liquidated      * @param cTokenCollateral The market in which to seize collateral from the borrower      * @param repayAmount The amount of the underlying borrowed asset to repay      * @return (uint, uint) An error code (0=success, otherwise a failure, see ErrorReporter.sol), and the actual repayment amount.      */ [41008,41514]",
      "dest": "comment: /**      * @notice The sender liquidates the borrowers collateral.      *  The collateral seized is transferred to the liquidator.      * @param borrower The borrower of this cToken to be liquidated      * @param cTokenCollateral The market in which to seize collateral from the borrower      * @param repayAmount The amount of the underlying borrowed asset to repay      * @return (uint, uint) An error code (0=success, otherwise a failure, see ErrorReporter.sol), and the actual repayment amount.      */ [27498,28004]"
    },
    {
      "src": "identifier: nonReentrant [35555,35567]",
      "dest": "identifier: nonReentrant [22190,22202]"
    },
    {
      "src": "comment: // totalReserves + actualAddAmount [56456,56490]",
      "dest": "comment: // totalReserves + actualAddAmount [40219,40253]"
    },
    {
      "src": "(: ( [45801,45802]",
      "dest": "(: ( [32291,32292]"
    },
    {
      "src": "if_statement [44531,44687]",
      "dest": "if_statement [31021,31177]"
    },
    {
      "src": "): ) [5276,5277]",
      "dest": "): ) [2667,2668]"
    },
    {
      "src": "(: ( [53750,53751]",
      "dest": "(: ( [37513,37514]"
    },
    {
      "src": "identifier: Error [37973,37978]",
      "dest": "identifier: Error [24608,24613]"
    },
    {
      "src": "call_argument [35231,35245]",
      "dest": "call_argument [21866,21880]"
    },
    {
      "src": "identifier: totalBorrows [9840,9852]",
      "dest": "identifier: totalBorrows [6805,6817]"
    },
    {
      "src": "primitive_type [31964,31968]",
      "dest": "primitive_type [18902,18906]"
    },
    {
      "src": "): ) [1884,1885]",
      "dest": "): ) [1884,1885]"
    },
    {
      "src": "uint: uint [9440,9444]",
      "dest": "uint: uint [6405,6409]"
    },
    {
      "src": "): ) [51473,51474]",
      "dest": "): ) [35236,35237]"
    },
    {
      "src": "block_statement [32993,33099]",
      "dest": "block_statement [20223,20329]"
    },
    {
      "src": "-: - [44555,44556]",
      "dest": "-: - [31045,31046]"
    },
    {
      "src": "variable_declaration_statement [8390,8434]",
      "dest": "variable_declaration_statement [5652,5707]"
    },
    {
      "src": "identifier: interestRateModel_ [2044,2062]",
      "dest": "identifier: interestRateModel_ [2044,2062]"
    },
    {
      "src": "primitive_type [5760,5767]",
      "dest": "primitive_type [3151,3158]"
    },
    {
      "src": "binary_expression [56652,56690]",
      "dest": "binary_expression [40415,40453]"
    },
    {
      "src": "comment: /*              * If there are no tokens minted:              *  exchangeRate = initialExchangeRate              */ [13969,14084]",
      "dest": "comment: /*              * If there are no tokens minted:              *  exchangeRate = initialExchangeRate              */ [11694,11809]"
    },
    {
      "src": "(: ( [61469,61470]",
      "dest": "(: ( [44940,44941]"
    },
    {
      "src": "call_argument [52813,52843]",
      "dest": "call_argument [36576,36606]"
    },
    {
      "src": "(: ( [51582,51583]",
      "dest": "(: ( [35345,35346]"
    },
    {
      "src": "type_name [19690,19694]",
      "dest": "type_name [15804,15808]"
    },
    {
      "src": "assignment_expression [45967,46037]",
      "dest": "assignment_expression [32457,32527]"
    },
    {
      "src": "type_name [54295,54299]",
      "dest": "type_name [38058,38062]"
    },
    {
      "src": "if_statement [54596,54744]",
      "dest": "if_statement [38359,38507]"
    },
    {
      "src": ",: , [5369,5370]",
      "dest": ",: , [2760,2761]"
    },
    {
      "src": "if_statement [59453,59598]",
      "dest": "if_statement [43099,43244]"
    },
    {
      "src": "tuple_expression [43998,44081]",
      "dest": "tuple_expression [30488,30571]"
    },
    {
      "src": "identifier: Error [35656,35661]",
      "dest": "identifier: Error [22291,22296]"
    },
    {
      "src": "primitive_type [9769,9773]",
      "dest": "primitive_type [6734,6738]"
    },
    {
      "src": "parameter [950,986]",
      "dest": "parameter [950,986]"
    },
    {
      "src": "primitive_type [4951,4955]",
      "dest": "primitive_type [19851,19855]"
    },
    {
      "src": "array_access [7019,7053]",
      "dest": "array_access [4410,4444]"
    },
    {
      "src": "identifier: exchangeRateMantissa [8945,8965]",
      "dest": "identifier: exchangeRateMantissa [5910,5930]"
    },
    {
      "src": "variable_declaration_statement [13891,13923]",
      "dest": "variable_declaration_statement [11616,11648]"
    },
    {
      "src": "binary_expression [59457,59495]",
      "dest": "binary_expression [43103,43141]"
    },
    {
      "src": "): ) [19651,19652]",
      "dest": "): ) [15765,15766]"
    },
    {
      "src": "number_literal: 0 [19981,19982]",
      "dest": "number_literal: 0 [16095,16096]"
    },
    {
      "src": "identifier: FailureInfo [61478,61489]",
      "dest": "identifier: FailureInfo [44949,44960]"
    },
    {
      "src": "visibility [1180,1186]",
      "dest": "visibility [1180,1186]"
    },
    {
      "src": "function_body [12917,13046]",
      "dest": "function_body [10815,10944]"
    },
    {
      "src": "return_type_definition [7291,7308]",
      "dest": "return_type_definition [4682,4699]"
    },
    {
      "src": "expression_statement [51933,51954]",
      "dest": "expression_statement [35696,35717]"
    },
    {
      "src": "comment: /* Fail if liquidate not allowed */ [43259,43294]",
      "dest": "comment: /* Fail if liquidate not allowed */ [29749,29784]"
    },
    {
      "src": "primitive_type [53508,53512]",
      "dest": "primitive_type [37271,37275]"
    },
    {
      "src": "binary_expression [45802,45844]",
      "dest": "binary_expression [32292,32334]"
    },
    {
      "src": "variable_declaration [15608,15636]",
      "dest": "variable_declaration [12961,12989]"
    },
    {
      "src": ",: , [43562,43563]",
      "dest": ",: , [30052,30053]"
    },
    {
      "src": "identifier: _acceptAdmin [51460,51472]",
      "dest": "identifier: _acceptAdmin [35223,35235]"
    },
    {
      "src": "call_expression [59518,59587]",
      "dest": "call_expression [43164,43233]"
    },
    {
      "src": "primitive_type [63892,63899]",
      "dest": "primitive_type [47363,47370]"
    },
    {
      "src": "member_expression [35050,35072]",
      "dest": "member_expression [21655,21677]"
    },
    {
      "src": "}: } [52637,52638]",
      "dest": "}: } [36400,36401]"
    },
    {
      "src": "call_expression [43999,44077]",
      "dest": "call_expression [30489,30567]"
    },
    {
      "src": "(: ( [63602,63603]",
      "dest": "(: ( [47073,47074]"
    },
    {
      "src": ".: . [39052,39053]",
      "dest": ".: . [25772,25773]"
    },
    {
      "src": "call_argument [60615,60620]",
      "dest": "call_argument [44086,44091]"
    },
    {
      "src": "identifier: exchangeRateCurrent [12860,12879]",
      "dest": "identifier: exchangeRateCurrent [10758,10777]"
    },
    {
      "src": "internal: internal [59095,59103]",
      "dest": "internal: internal [42741,42749]"
    },
    {
      "src": "call_argument [52567,52585]",
      "dest": "call_argument [36330,36348]"
    },
    {
      "src": "identifier: REPAY_BORROW_COMPTROLLER_REJECTION [38014,38048]",
      "dest": "identifier: REPAY_BORROW_COMPTROLLER_REJECTION [24649,24683]"
    },
    {
      "src": "identifier: REDUCE_RESERVES_VALIDATION [59989,60015]",
      "dest": "identifier: REDUCE_RESERVES_VALIDATION [43635,43661]"
    },
    {
      "src": "}: } [25574,25575]",
      "dest": "}: } [17885,17886]"
    },
    {
      "src": "call_argument [44424,44466]",
      "dest": "call_argument [30914,30956]"
    },
    {
      "src": "type_name [58305,58309]",
      "dest": "type_name [41951,41955]"
    },
    {
      "src": "return_statement [41886,41970]",
      "dest": "return_statement [28376,28460]"
    },
    {
      "src": "primitive_type [61266,61270]",
      "dest": "primitive_type [44737,44741]"
    },
    {
      "src": "expression_statement [16224,16309]",
      "dest": "expression_statement [13577,13662]"
    },
    {
      "src": "call_argument [58556,58606]",
      "dest": "call_argument [42202,42252]"
    },
    {
      "src": "(: ( [35626,35627]",
      "dest": "(: ( [22261,22262]"
    },
    {
      "src": "block_statement [31517,31728]",
      "dest": "block_statement [18455,18666]"
    },
    {
      "src": "function_body [7309,7353]",
      "dest": "function_body [4700,4744]"
    },
    {
      "src": "type_name [24323,24327]",
      "dest": "type_name [16634,16638]"
    },
    {
      "src": "identifier: actualRepayAmount [39654,39671]",
      "dest": "identifier: actualRepayAmount [26374,26391]"
    },
    {
      "src": "call_expression [25503,25564]",
      "dest": "call_expression [17814,17875]"
    },
    {
      "src": "state_mutability [15151,15155]",
      "dest": "state_mutability [12504,12508]"
    },
    {
      "src": "primitive_type [26609,26624]",
      "dest": "primitive_type [48741,48756]"
    },
    {
      "src": "type_name [37822,37826]",
      "dest": "type_name [24457,24461]"
    },
    {
      "src": "call_expression [9824,9838]",
      "dest": "call_expression [6789,6803]"
    },
    {
      "src": "assignment_expression [38586,38661]",
      "dest": "assignment_expression [20609,20668]"
    },
    {
      "src": "assignment_expression [1895,1920]",
      "dest": "assignment_expression [1895,1920]"
    },
    {
      "src": "block_statement [44359,44482]",
      "dest": "block_statement [30849,30972]"
    },
    {
      "src": "identifier: reserveFactorMantissa [55004,55025]",
      "dest": "identifier: reserveFactorMantissa [38767,38788]"
    },
    {
      "src": "uint: uint [59113,59117]",
      "dest": "uint: uint [42759,42763]"
    },
    {
      "src": "emit: emit [19095,19099]",
      "dest": "emit: emit [15209,15213]"
    },
    {
      "src": "): ) [18190,18191]",
      "dest": "): ) [14680,14681]"
    },
    {
      "src": "{: { [6439,6440]",
      "dest": "{: { [3830,3831]"
    },
    {
      "src": "parameter [63937,63941]",
      "dest": "parameter [47408,47412]"
    },
    {
      "src": "variable_declaration_statement [17155,17177]",
      "dest": "variable_declaration_statement [14556,14682]"
    },
    {
      "src": "member_expression [9792,9823]",
      "dest": "member_expression [6757,6788]"
    },
    {
      "src": "function_definition [6365,6597]",
      "dest": "function_definition [3756,3988]"
    },
    {
      "src": "identifier: error [58348,58353]",
      "dest": "identifier: error [41994,41999]"
    },
    {
      "src": "call_argument [5883,5897]",
      "dest": "call_argument [3274,3288]"
    },
    {
      "src": "function: function [7243,7251]",
      "dest": "function: function [4634,4642]"
    },
    {
      "src": "parameter [15165,15169]",
      "dest": "parameter [12518,12522]"
    },
    {
      "src": "call_argument [24621,24662]",
      "dest": "call_argument [16932,16973]"
    },
    {
      "src": "comment: // EFFECTS & INTERACTIONS [45054,45079]",
      "dest": "comment: // EFFECTS & INTERACTIONS [31544,31569]"
    },
    {
      "src": "uint: uint [12911,12915]",
      "dest": "uint: uint [10809,10813]"
    },
    {
      "src": "(: ( [9439,9440]",
      "dest": "(: ( [6404,6405]"
    },
    {
      "src": "identifier: MARKET_NOT_FRESH [32809,32825]",
      "dest": "identifier: MARKET_NOT_FRESH [20039,20055]"
    },
    {
      "src": "(: ( [58361,58362]",
      "dest": "(: ( [42007,42008]"
    },
    {
      "src": "(: ( [24445,24446]",
      "dest": "(: ( [16756,16757]"
    },
    {
      "src": "number_literal: 0 [51635,51636]",
      "dest": "number_literal: 0 [35398,35399]"
    },
    {
      "src": "call_argument [10638,10652]",
      "dest": "call_argument [9101,9115]"
    },
    {
      "src": "identifier: isComptroller [52796,52809]",
      "dest": "identifier: isComptroller [36559,36572]"
    },
    {
      "src": "identifier: vars [38437,38441]",
      "dest": "identifier: vars [25372,25376]"
    },
    {
      "src": "==: == [5875,5877]",
      "dest": "==: == [3266,3268]"
    },
    {
      "src": "expression_statement [33653,33737]",
      "dest": "expression_statement [20678,20743]"
    },
    {
      "src": "identifier: admin [60615,60620]",
      "dest": "identifier: admin [44086,44091]"
    },
    {
      "src": "call_expression [50720,50787]",
      "dest": "call_expression [34483,34550]"
    },
    {
      "src": ",: , [17580,17581]",
      "dest": ",: , [14459,14460]"
    },
    {
      "src": "return: return [53739,53745]",
      "dest": "return: return [37502,37508]"
    },
    {
      "src": "return: return [36909,36915]",
      "dest": "return: return [23544,23550]"
    },
    {
      "src": "user_defined_type [61142,61159]",
      "dest": "user_defined_type [44613,44630]"
    },
    {
      "src": "identifier: Error [31500,31505]",
      "dest": "identifier: Error [18438,18443]"
    },
    {
      "src": "identifier: cTokenBalance [8395,8408]",
      "dest": "identifier: cTokenBalance [5657,5670]"
    },
    {
      "src": "{: { [10595,10596]",
      "dest": "{: { [9058,9059]"
    },
    {
      "src": "): ) [7838,7839]",
      "dest": "): ) [5204,5205]"
    },
    {
      "src": "parameter [62152,62156]",
      "dest": "parameter [45623,45627]"
    },
    {
      "src": "\": \" [258,259]",
      "dest": "\": \" [258,259]"
    },
    {
      "src": "primitive_type [10144,10148]",
      "dest": "primitive_type [8607,8611]"
    },
    {
      "src": "): ) [37880,37881]",
      "dest": "): ) [24515,24516]"
    },
    {
      "src": "(: ( [59456,59457]",
      "dest": "(: ( [43102,43103]"
    },
    {
      "src": "call_expression [33014,33088]",
      "dest": "call_expression [20244,20318]"
    },
    {
      "src": "emit: emit [40673,40677]",
      "dest": "emit: emit [27133,27137]"
    },
    {
      "src": "identifier: nonReentrant [10078,10090]",
      "dest": "identifier: nonReentrant [8541,8553]"
    },
    {
      "src": "binary_expression [61257,61286]",
      "dest": "binary_expression [44728,44757]"
    },
    {
      "src": "}: } [35252,35253]",
      "dest": "}: } [21887,21888]"
    },
    {
      "src": "call_argument [31837,31847]",
      "dest": "call_argument [18775,18785]"
    },
    {
      "src": "visibility [58258,58266]",
      "dest": "visibility [41904,41912]"
    },
    {
      "src": "variable_declaration_statement [17125,17146]",
      "dest": "variable_declaration_statement [14484,14547]"
    },
    {
      "src": "member_expression [52587,52626]",
      "dest": "member_expression [36350,36389]"
    },
    {
      "src": "}: } [44686,44687]",
      "dest": "}: } [31176,31177]"
    },
    {
      "src": "if: if [61253,61255]",
      "dest": "if: if [44724,44726]"
    },
    {
      "src": "identifier: reduceAmount [58244,58256]",
      "dest": "identifier: reduceAmount [41890,41902]"
    },
    {
      "src": "(: ( [1673,1674]",
      "dest": "(: ( [1673,1674]"
    },
    {
      "src": "member_expression [57397,57407]",
      "dest": "member_expression [41160,41170]"
    },
    {
      "src": "returns: returns [32357,32364]",
      "dest": "returns: returns [19295,19302]"
    },
    {
      "src": "type_name [24389,24393]",
      "dest": "type_name [16700,16704]"
    },
    {
      "src": "binary_expression [38158,38196]",
      "dest": "binary_expression [25093,25131]"
    },
    {
      "src": "returns: returns [13855,13862]",
      "dest": "returns: returns [11591,11598]"
    },
    {
      "src": "variable_declaration_statement [15556,15599]",
      "dest": "variable_declaration_statement [12909,12952]"
    },
    {
      "src": "uint: uint [41653,41657]",
      "dest": "uint: uint [28143,28147]"
    },
    {
      "src": "\": \" [62966,62967]",
      "dest": "\": \" [46437,46438]"
    },
    {
      "src": "address: address [51627,51634]",
      "dest": "address: address [35390,35397]"
    },
    {
      "src": "identifier: amount [5376,5382]",
      "dest": "identifier: amount [2767,2773]"
    },
    {
      "src": "primitive_type [46566,46570]",
      "dest": "primitive_type [33086,33090]"
    },
    {
      "src": "}: } [41001,41002]",
      "dest": "}: } [27491,27492]"
    },
    {
      "src": "call_argument [54890,54905]",
      "dest": "call_argument [38653,38668]"
    },
    {
      "src": "type_cast_expression [53560,53580]",
      "dest": "type_cast_expression [37323,37343]"
    },
    {
      "src": "identifier: Error [43739,43744]",
      "dest": "identifier: Error [30229,30234]"
    },
    {
      "src": "internal: internal [20896,20904]",
      "dest": "internal: internal [48517,48525]"
    },
    {
      "src": "assignment_expression [52909,52937]",
      "dest": "assignment_expression [36672,36700]"
    },
    {
      "src": "return: return [56706,56712]",
      "dest": "return: return [40469,40475]"
    },
    {
      "src": "struct_member [31908,31926]",
      "dest": "struct_member [18846,18864]"
    },
    {
      "src": "call_argument [44922,44945]",
      "dest": "call_argument [31412,31435]"
    },
    {
      "src": ",: , [36943,36944]",
      "dest": ",: , [23578,23579]"
    },
    {
      "src": "call_argument [43519,43562]",
      "dest": "call_argument [30009,30052]"
    },
    {
      "src": ",: , [25694,25695]",
      "dest": ",: , [18005,18006]"
    },
    {
      "src": "identifier: accrualBlockNumberPrior [15613,15636]",
      "dest": "identifier: accrualBlockNumberPrior [12966,12989]"
    },
    {
      "src": "comment: // EFFECTS & INTERACTIONS [39133,39158]",
      "dest": "comment: // EFFECTS & INTERACTIONS [25853,25878]"
    },
    {
      "src": "identifier: liquidateBorrowFresh [43108,43128]",
      "dest": "identifier: liquidateBorrowFresh [29598,29618]"
    },
    {
      "src": ",: , [34001,34002]",
      "dest": ",: , [20792,20793]"
    },
    {
      "src": "(: ( [51634,51635]",
      "dest": "(: ( [35397,35398]"
    },
    {
      "src": "string_literal [45422,45475]",
      "dest": "string_literal [31912,31965]"
    },
    {
      "src": "identifier: Error [44587,44592]",
      "dest": "identifier: Error [31077,31082]"
    },
    {
      "src": "(: ( [45838,45839]",
      "dest": "(: ( [32328,32329]"
    },
    {
      "src": "uint: uint [16117,16121]",
      "dest": "uint: uint [13470,13474]"
    },
    {
      "src": "solidity_version_comparison_operator [15,17]",
      "dest": "solidity_version_comparison_operator [15,17]"
    },
    {
      "src": "): ) [52626,52627]",
      "dest": "): ) [36389,36390]"
    },
    {
      "src": "type_name [41653,41657]",
      "dest": "type_name [28143,28147]"
    },
    {
      "src": "uint: uint [53430,53434]",
      "dest": "uint: uint [37193,37197]"
    },
    {
      "src": "!=: != [43956,43958]",
      "dest": "!=: != [30446,30448]"
    },
    {
      "src": "return: return [51653,51659]",
      "dest": "return: return [35416,35422]"
    },
    {
      "src": "type_name [45240,45244]",
      "dest": "type_name [31730,31734]"
    },
    {
      "src": "call_argument [52149,52163]",
      "dest": "call_argument [35912,35926]"
    },
    {
      "src": "address: address [48041,48048]",
      "dest": "address: address [49165,49172]"
    },
    {
      "src": "return: return [52137,52143]",
      "dest": "return: return [35900,35906]"
    },
    {
      "src": "(: ( [43128,43129]",
      "dest": "(: ( [29618,29619]"
    },
    {
      "src": "variable_declaration_statement [1616,1657]",
      "dest": "variable_declaration_statement [1616,1657]"
    },
    {
      "src": "return: return [31818,31824]",
      "dest": "return: return [18756,18762]"
    },
    {
      "src": ",: , [51683,51684]",
      "dest": ",: , [35446,35447]"
    },
    {
      "src": "=: = [64613,64614]",
      "dest": "=: = [49487,49488]"
    },
    {
      "src": ",: , [35830,35831]",
      "dest": ",: , [22465,22466]"
    },
    {
      "src": "if_statement [43914,44092]",
      "dest": "if_statement [30404,30582]"
    },
    {
      "src": "call_argument [53047,53061]",
      "dest": "call_argument [36810,36824]"
    },
    {
      "src": "uint: uint [19684,19688]",
      "dest": "uint: uint [15798,15802]"
    },
    {
      "src": "call_argument [45895,45899]",
      "dest": "call_argument [32385,32389]"
    },
    {
      "src": ".: . [51616,51617]",
      "dest": ".: . [35379,35380]"
    },
    {
      "src": "): ) [6568,6569]",
      "dest": "): ) [3959,3960]"
    },
    {
      "src": "=: = [33979,33980]",
      "dest": "=: = [20773,20774]"
    },
    {
      "src": "string [1328,1365]",
      "dest": "string [1328,1365]"
    },
    {
      "src": ",: , [64576,64577]",
      "dest": ",: , [49450,49451]"
    },
    {
      "src": "call_argument [6562,6568]",
      "dest": "call_argument [3953,3959]"
    },
    {
      "src": "(: ( [7299,7300]",
      "dest": "(: ( [4690,4691]"
    },
    {
      "src": "call_expression [16143,16214]",
      "dest": "call_expression [13496,13567]"
    },
    {
      "src": "): ) [1178,1179]",
      "dest": "): ) [1178,1179]"
    },
    {
      "src": "(: ( [45886,45887]",
      "dest": "(: ( [32376,32377]"
    },
    {
      "src": "expression_statement [57366,57420]",
      "dest": "expression_statement [41129,41183]"
    },
    {
      "src": "import: import [96,102]",
      "dest": "import: import [96,102]"
    },
    {
      "src": "member_expression [53565,53579]",
      "dest": "member_expression [37328,37342]"
    },
    {
      "src": "uint: uint [60723,60727]",
      "dest": "uint: uint [44194,44198]"
    },
    {
      "src": "!=: != [62584,62586]",
      "dest": "!=: != [46055,46057]"
    },
    {
      "src": "(: ( [38939,38940]",
      "dest": "(: ( [25659,25660]"
    },
    {
      "src": "primitive_type [35577,35581]",
      "dest": "primitive_type [22212,22216]"
    },
    {
      "src": "function: function [47163,47171]",
      "dest": "function: function [33683,33691]"
    },
    {
      "src": "=: = [18940,18941]",
      "dest": "=: = [15054,15055]"
    },
    {
      "src": "identifier: vars [38601,38605]",
      "dest": "identifier: vars [25521,25525]"
    },
    {
      "src": "identifier: _addReservesFresh [55984,56001]",
      "dest": "identifier: _addReservesFresh [39747,39764]"
    },
    {
      "src": "member_expression [53765,53818]",
      "dest": "member_expression [37528,37581]"
    },
    {
      "src": "identifier: interestIndex [34894,34907]",
      "dest": "identifier: interestIndex [21499,21512]"
    },
    {
      "src": "type_cast_expression [25342,25362]",
      "dest": "type_cast_expression [17653,17673]"
    },
    {
      "src": "member_expression [58362,58376]",
      "dest": "member_expression [42008,42022]"
    },
    {
      "src": "): ) [55204,55205]",
      "dest": "): ) [38967,38968]"
    },
    {
      "src": "): ) [62132,62133]",
      "dest": "): ) [45603,45604]"
    },
    {
      "src": "returns: returns [9431,9438]",
      "dest": "returns: returns [6396,6403]"
    },
    {
      "src": "member_expression [40199,40219]",
      "dest": "member_expression [26769,26789]"
    },
    {
      "src": "function_body [15171,15209]",
      "dest": "function_body [12524,12562]"
    },
    {
      "src": "call_argument [19126,19145]",
      "dest": "call_argument [15240,15259]"
    },
    {
      "src": "parameter [6382,6397]",
      "dest": "parameter [3773,3788]"
    },
    {
      "src": "identifier: divUInt [12503,12510]",
      "dest": "identifier: div_ [10515,10519]"
    },
    {
      "src": "identifier: error [25333,25338]",
      "dest": "identifier: error [17644,17649]"
    },
    {
      "src": "call_argument [44878,44892]",
      "dest": "call_argument [31368,31382]"
    },
    {
      "src": "{: { [36502,36503]",
      "dest": "{: { [23137,23138]"
    },
    {
      "src": "identifier: _reduceReservesFresh [58736,58756]",
      "dest": "identifier: _reduceReservesFresh [42382,42402]"
    },
    {
      "src": "member_expression [2093,2107]",
      "dest": "member_expression [2093,2107]"
    },
    {
      "src": "visibility [5776,5784]",
      "dest": "visibility [3167,3175]"
    },
    {
      "src": "primitive_type [31427,31431]",
      "dest": "primitive_type [18365,18369]"
    },
    {
      "src": "type_name [24373,24377]",
      "dest": "type_name [16684,16688]"
    },
    {
      "src": "string [192,225]",
      "dest": "string [192,225]"
    },
    {
      "src": "function_definition [53403,54002]",
      "dest": "function_definition [37166,37765]"
    },
    {
      "src": ".: . [40976,40977]",
      "dest": ".: . [27466,27467]"
    },
    {
      "src": "function: function [13803,13811]",
      "dest": "function: function [11539,11547]"
    },
    {
      "src": "=: = [35610,35611]",
      "dest": "=: = [22245,22246]"
    },
    {
      "src": "call_expression [2017,2063]",
      "dest": "call_expression [2017,2063]"
    },
    {
      "src": "identifier: amount [5867,5873]",
      "dest": "identifier: amount [3258,3264]"
    },
    {
      "src": "call_argument [60674,60686]",
      "dest": "call_argument [44145,44157]"
    },
    {
      "src": "): ) [56414,56415]",
      "dest": "): ) [40177,40178]"
    },
    {
      "src": ",: , [42296,42297]",
      "dest": ",: , [28786,28787]"
    },
    {
      "src": "returns: returns [56425,56432]",
      "dest": "returns: returns [40188,40195]"
    },
    {
      "src": "type_name [10589,10593]",
      "dest": "type_name [9052,9056]"
    },
    {
      "src": "member_expression [44004,44026]",
      "dest": "member_expression [30494,30516]"
    },
    {
      "src": "uint: uint [19636,19640]",
      "dest": "uint: uint [15750,15754]"
    },
    {
      "src": "identifier: repayAmount [44827,44838]",
      "dest": "identifier: repayAmount [31317,31328]"
    },
    {
      "src": "): ) [25519,25520]",
      "dest": "): ) [17830,17831]"
    },
    {
      "src": "primitive_type [64349,64364]",
      "dest": "primitive_type [47820,47835]"
    },
    {
      "src": "call_argument [24809,24810]",
      "dest": "call_argument [17120,17121]"
    },
    {
      "src": "identifier: fail [54661,54665]",
      "dest": "identifier: fail [38424,38428]"
    },
    {
      "src": "comment: /**       * @notice Users borrow assets from the protocol to their own address       * @param borrowAmount The amount of the underlying asset to borrow       * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)       */ [32029,32277]",
      "dest": "comment: /**       * @notice Users borrow assets from the protocol to their own address       * @param borrowAmount The amount of the underlying asset to borrow       * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)       */ [18967,19215]"
    },
    {
      "src": "identifier: exchangeRate [7690,7702]",
      "dest": "identifier: exchangeRate [5081,5093]"
    },
    {
      "src": "): ) [51134,51135]",
      "dest": "): ) [34897,34898]"
    },
    {
      "src": ",: , [19124,19125]",
      "dest": ",: , [15238,15239]"
    },
    {
      "src": "call_expression [59479,59495]",
      "dest": "call_expression [43125,43141]"
    },
    {
      "src": "<=: <= [16251,16253]",
      "dest": "<=: <= [13604,13606]"
    },
    {
      "src": "member_expression [44201,44227]",
      "dest": "member_expression [30691,30717]"
    },
    {
      "src": "function_definition [15123,15209]",
      "dest": "function_definition [12476,12562]"
    },
    {
      "src": "primitive_type [23905,23909]",
      "dest": "primitive_type [24973,24977]"
    },
    {
      "src": "is: is [380,382]",
      "dest": "is: is [380,382]"
    },
    {
      "src": "primitive_type [48041,48048]",
      "dest": "primitive_type [49165,49172]"
    },
    {
      "src": "identifier: transferAllowances [7019,7037]",
      "dest": "identifier: transferAllowances [4410,4428]"
    },
    {
      "src": "uint: uint [23905,23909]",
      "dest": "uint: uint [24973,24977]"
    },
    {
      "src": "identifier: fail [53746,53750]",
      "dest": "identifier: fail [37509,37513]"
    },
    {
      "src": ".: . [46175,46176]",
      "dest": ".: . [32665,32666]"
    },
    {
      "src": "type_name [26695,26699]",
      "dest": "type_name [48827,48831]"
    },
    {
      "src": ".: . [50681,50682]",
      "dest": ".: . [34444,34445]"
    },
    {
      "src": "function_body [54350,55212]",
      "dest": "function_body [38113,38975]"
    },
    {
      "src": "function_body [61204,61736]",
      "dest": "function_body [44675,45207]"
    },
    {
      "src": "call_argument [12372,12383]",
      "dest": "call_argument [10479,10490]"
    },
    {
      "src": "(: ( [53084,53085]",
      "dest": "(: ( [36847,36848]"
    },
    {
      "src": "identifier: borrowRateMantissa [17275,17293]",
      "dest": "identifier: borrowRateMantissa [14350,14368]"
    },
    {
      "src": "call_argument [43395,43405]",
      "dest": "call_argument [29885,29895]"
    },
    {
      "src": "uint: uint [10589,10593]",
      "dest": "uint: uint [9052,9056]"
    },
    {
      "src": "member_expression [31837,31847]",
      "dest": "member_expression [18775,18785]"
    },
    {
      "src": ",: , [44815,44816]",
      "dest": ",: , [31305,31306]"
    },
    {
      "src": "=: = [39065,39066]",
      "dest": "=: = [25785,25786]"
    },
    {
      "src": "call_argument [19925,19937]",
      "dest": "call_argument [16039,16051]"
    },
    {
      "src": "call_expression [43734,43801]",
      "dest": "call_expression [30224,30291]"
    },
    {
      "src": "call_argument [9869,9890]",
      "dest": "call_argument [6834,6855]"
    },
    {
      "src": "identifier: amount [63911,63917]",
      "dest": "identifier: amount [47382,47388]"
    },
    {
      "src": "identifier: reservesPrior [15975,15988]",
      "dest": "identifier: reservesPrior [13328,13341]"
    },
    {
      "src": "call_argument [46151,46185]",
      "dest": "call_argument [32641,32675]"
    },
    {
      "src": "call_expression [37962,38058]",
      "dest": "call_expression [24597,24693]"
    },
    {
      "src": "}: } [58617,58618]",
      "dest": "}: } [42263,42264]"
    },
    {
      "src": "primitive_type [25342,25346]",
      "dest": "primitive_type [17653,17657]"
    },
    {
      "src": "address: address [45317,45324]",
      "dest": "address: address [31807,31814]"
    },
    {
      "src": "[: [ [7044,7045]",
      "dest": "[: [ [4435,4436]"
    },
    {
      "src": "identifier: NO_ERROR [52155,52163]",
      "dest": "identifier: NO_ERROR [35918,35926]"
    },
    {
      "src": "primitive_type [6953,6960]",
      "dest": "primitive_type [4344,4351]"
    },
    {
      "src": "identifier: initialExchangeRateMantissa [1490,1517]",
      "dest": "identifier: initialExchangeRateMantissa [1490,1517]"
    },
    {
      "src": "identifier: to [64365,64367]",
      "dest": "identifier: to [47836,47838]"
    },
    {
      "src": "variable_declaration [36512,36522]",
      "dest": "variable_declaration [23147,23157]"
    },
    {
      "src": "identifier: dst [5755,5758]",
      "dest": "identifier: dst [3146,3149]"
    },
    {
      "src": "comment: // Store reserves[n+1] = reserves[n] + actualAddAmount [57613,57667]",
      "dest": "comment: // Store reserves[n+1] = reserves[n] + actualAddAmount [41259,41313]"
    },
    {
      "src": "(: ( [43998,43999]",
      "dest": "(: ( [30488,30489]"
    },
    {
      "src": "tuple_expression [44916,44999]",
      "dest": "tuple_expression [31406,31489]"
    },
    {
      "src": "member_expression [45405,45419]",
      "dest": "member_expression [31895,31909]"
    },
    {
      "src": "identifier: amountSeizeError [45380,45396]",
      "dest": "identifier: amountSeizeError [31870,31886]"
    },
    {
      "src": "call_expression [38624,38661]",
      "dest": "call_expression [20631,20668]"
    },
    {
      "src": "comment: /**      * @notice Transfer `amount` tokens from `src` to `dst`      * @param src The address of the source account      * @param dst The address of the destination account      * @param amount The number of tokens to transfer      * @return Whether or not the transfer succeeded      */ [5420,5707]",
      "dest": "comment: /**      * @notice Transfer `amount` tokens from `src` to `dst`      * @param src The address of the source account      * @param dst The address of the destination account      * @param amount The number of tokens to transfer      * @return Whether or not the transfer succeeded      */ [2811,3098]"
    },
    {
      "src": "identifier: transfer [5240,5248]",
      "dest": "identifier: transfer [2631,2639]"
    },
    {
      "src": "type_name [43167,43171]",
      "dest": "type_name [29657,29661]"
    },
    {
      "src": "call_argument [25699,25711]",
      "dest": "call_argument [18010,18022]"
    },
    {
      "src": "(: ( [59522,59523]",
      "dest": "(: ( [43168,43169]"
    },
    {
      "src": ".: . [33024,33025]",
      "dest": ".: . [20254,20255]"
    },
    {
      "src": ",: , [5260,5261]",
      "dest": ",: , [2651,2652]"
    },
    {
      "src": "member_expression [45567,45593]",
      "dest": "member_expression [32057,32083]"
    },
    {
      "src": "identifier: repayAmount [43417,43428]",
      "dest": "identifier: repayAmount [29907,29918]"
    },
    {
      "src": "call_argument [44827,44838]",
      "dest": "call_argument [31317,31328]"
    },
    {
      "src": "number_literal: 1 [44556,44557]",
      "dest": "number_literal: 1 [31046,31047]"
    },
    {
      "src": "tuple_expression [44581,44676]",
      "dest": "tuple_expression [31071,31166]"
    },
    {
      "src": ",: , [16198,16199]",
      "dest": ",: , [13551,13552]"
    },
    {
      "src": "}: } [13045,13046]",
      "dest": "}: } [10943,10944]"
    },
    {
      "src": "primitive_type [25290,25294]",
      "dest": "primitive_type [17601,17605]"
    },
    {
      "src": "identifier: repayBorrowFresh [37668,37684]",
      "dest": "identifier: repayBorrowFresh [24303,24319]"
    },
    {
      "src": "(: ( [19762,19763]",
      "dest": "(: ( [15876,15877]"
    },
    {
      "src": "call_argument [1226,1264]",
      "dest": "call_argument [1226,1264]"
    },
    {
      "src": "member_expression [51583,51593]",
      "dest": "member_expression [35346,35356]"
    },
    {
      "src": "identifier: this [45310,45314]",
      "dest": "identifier: this [31800,31804]"
    },
    {
      "src": "member_expression [25522,25563]",
      "dest": "member_expression [17833,17874]"
    },
    {
      "src": ".: . [10154,10155]",
      "dest": ".: . [8617,8618]"
    },
    {
      "src": "identifier: Error [55791,55796]",
      "dest": "identifier: Error [39554,39559]"
    },
    {
      "src": "identifier: SET_PENDING_ADMIN_OWNER_CHECK [50757,50786]",
      "dest": "identifier: SET_PENDING_ADMIN_OWNER_CHECK [34520,34549]"
    },
    {
      "src": "identifier: admin [50692,50697]",
      "dest": "identifier: admin [34455,34460]"
    },
    {
      "src": "type_name [8356,8360]",
      "dest": "type_name [5618,5622]"
    },
    {
      "src": "parameter [32303,32327]",
      "dest": "parameter [19241,19265]"
    },
    {
      "src": "expression_statement [40585,40621]",
      "dest": "expression_statement [27045,27081]"
    },
    {
      "src": "struct_declaration [36980,37238]",
      "dest": "struct_declaration [23615,23873]"
    },
    {
      "src": "type_name [37179,37183]",
      "dest": "type_name [23814,23818]"
    },
    {
      "src": "external: external [6415,6423]",
      "dest": "external: external [3806,3814]"
    },
    {
      "src": "identifier: _addReservesInternal [55470,55490]",
      "dest": "identifier: _addReservesInternal [39233,39253]"
    },
    {
      "src": "identifier: newReserveFactorMantissa [55059,55083]",
      "dest": "identifier: newReserveFactorMantissa [38822,38846]"
    },
    {
      "src": "identifier: msg [57397,57400]",
      "dest": "identifier: msg [41160,41163]"
    },
    {
      "src": "call_argument [37900,37911]",
      "dest": "call_argument [24535,24546]"
    },
    {
      "src": "): ) [42074,42075]",
      "dest": "): ) [28564,28565]"
    },
    {
      "src": "call_argument [64565,64576]",
      "dest": "call_argument [49439,49450]"
    },
    {
      "src": "identifier: reservesPrior [18177,18190]",
      "dest": "identifier: reservesPrior [14667,14680]"
    },
    {
      "src": "return_type_definition [2910,2924]",
      "dest": "return_type_definition [48114,48128]"
    },
    {
      "src": "identifier: getBlockNumber [1869,1883]",
      "dest": "identifier: getBlockNumber [1869,1883]"
    },
    {
      "src": "return: return [20106,20112]",
      "dest": "return: return [16220,16226]"
    },
    {
      "src": "identifier: require [64557,64564]",
      "dest": "identifier: require [49431,49438]"
    },
    {
      "src": "(: ( [60727,60728]",
      "dest": "(: ( [44198,44199]"
    },
    {
      "src": "if: if [52516,52518]",
      "dest": "if: if [36279,36281]"
    },
    {
      "src": "(: ( [36736,36737]",
      "dest": "(: ( [23371,23372]"
    },
    {
      "src": "(: ( [31660,31661]",
      "dest": "(: ( [18598,18599]"
    },
    {
      "src": "assignment_expression [39649,39711]",
      "dest": "assignment_expression [26369,26431]"
    },
    {
      "src": ",: , [44672,44673]",
      "dest": ",: , [31162,31163]"
    },
    {
      "src": "expression_statement [18879,18919]",
      "dest": "expression_statement [14993,15033]"
    },
    {
      "src": "): ) [37764,37765]",
      "dest": "): ) [24399,24400]"
    },
    {
      "src": "user_defined_type [41588,41603]",
      "dest": "user_defined_type [28078,28093]"
    },
    {
      "src": "if: if [41714,41716]",
      "dest": "if: if [28204,28206]"
    },
    {
      "src": "type_name [55491,55495]",
      "dest": "type_name [39254,39258]"
    },
    {
      "src": "assignment_expression [34800,34859]",
      "dest": "assignment_expression [21405,21464]"
    },
    {
      "src": "uint: uint [61198,61202]",
      "dest": "uint: uint [44669,44673]"
    },
    {
      "src": "type_cast_expression [4951,4971]",
      "dest": "type_cast_expression [19851,19871]"
    },
    {
      "src": "): ) [13317,13318]",
      "dest": "): ) [11215,11216]"
    },
    {
      "src": "parameter [36496,36500]",
      "dest": "parameter [23131,23135]"
    },
    {
      "src": "): ) [45826,45827]",
      "dest": "): ) [32316,32317]"
    },
    {
      "src": "identifier: borrowFresh [31825,31836]",
      "dest": "identifier: borrowFresh [18763,18774]"
    },
    {
      "src": ",: , [44274,44275]",
      "dest": ",: , [30764,30765]"
    },
    {
      "src": "identifier: msg [6463,6466]",
      "dest": "identifier: msg [3854,3857]"
    },
    {
      "src": "tuple_expression [44380,44471]",
      "dest": "tuple_expression [30870,30961]"
    },
    {
      "src": "uint256: uint256 [5760,5767]",
      "dest": "uint256: uint256 [3151,3158]"
    },
    {
      "src": "return: return [44574,44580]",
      "dest": "return: return [31064,31070]"
    },
    {
      "src": "call_argument [40035,40057]",
      "dest": "call_argument [26736,26758]"
    },
    {
      "src": "): ) [23924,23925]",
      "dest": "): ) [24992,24993]"
    },
    {
      "src": "type_cast_expression [8893,8913]",
      "dest": "type_cast_expression [5858,5878]"
    },
    {
      "src": "identifier: Exp [17050,17053]",
      "dest": "identifier: Exp [14296,14299]"
    },
    {
      "src": "(: ( [41551,41552]",
      "dest": "(: ( [28041,28042]"
    },
    {
      "src": "uint: uint [55554,55558]",
      "dest": "uint: uint [39317,39321]"
    },
    {
      "src": "): ) [59344,59345]",
      "dest": "): ) [42990,42991]"
    },
    {
      "src": "(: ( [37753,37754]",
      "dest": "(: ( [24388,24389]"
    },
    {
      "src": "identifier: fail [41894,41898]",
      "dest": "identifier: fail [28384,28388]"
    },
    {
      "src": "return_statement [12075,12106]",
      "dest": "return_statement [10213,10222]"
    },
    {
      "src": "identifier: MathError [31908,31917]",
      "dest": "identifier: MathError [18846,18855]"
    },
    {
      "src": "call_argument [60622,60634]",
      "dest": "call_argument [44093,44105]"
    },
    {
      "src": "function_body [9446,9546]",
      "dest": "function_body [6411,6511]"
    },
    {
      "src": "if: if [54596,54598]",
      "dest": "if: if [38359,38361]"
    },
    {
      "src": "parameter [48062,48080]",
      "dest": "parameter [49186,49204]"
    },
    {
      "src": "identifier: borrowAmount [34003,34015]",
      "dest": "identifier: borrowAmount [20794,20806]"
    },
    {
      "src": "identifier: repayAmount [35533,35544]",
      "dest": "identifier: repayAmount [22168,22179]"
    },
    {
      "src": "call_argument [54444,54462]",
      "dest": "call_argument [38207,38225]"
    },
    {
      "src": "identifier: fail [31656,31660]",
      "dest": "identifier: fail [18594,18598]"
    },
    {
      "src": "identifier: payer [37883,37888]",
      "dest": "identifier: payer [24518,24523]"
    },
    {
      "src": "parameter [7663,7667]",
      "dest": "parameter [5054,5058]"
    },
    {
      "src": "variable_declaration_statement [17091,17116]",
      "dest": "variable_declaration_statement [14393,14475]"
    },
    {
      "src": "}: } [38304,38305]",
      "dest": "}: } [25239,25240]"
    },
    {
      "src": "comment: /* Verify market's block number equals current block number */ [43597,43659]",
      "dest": "comment: /* Verify market's block number equals current block number */ [30087,30149]"
    },
    {
      "src": "primitive_type [24441,24445]",
      "dest": "primitive_type [16752,16756]"
    },
    {
      "src": "): ) [43954,43955]",
      "dest": "): ) [30444,30445]"
    },
    {
      "src": "block_statement [54418,54518]",
      "dest": "block_statement [38181,38281]"
    },
    {
      "src": "parameter [5747,5758]",
      "dest": "parameter [3138,3149]"
    },
    {
      "src": "identifier: REDEEM_ACCRUE_INTEREST_FAILED [24633,24662]",
      "dest": "identifier: REDEEM_ACCRUE_INTEREST_FAILED [16944,16973]"
    },
    {
      "src": "primitive_type [10541,10548]",
      "dest": "primitive_type [9004,9011]"
    },
    {
      "src": "==: == [1322,1324]",
      "dest": "==: == [1322,1324]"
    },
    {
      "src": "assignment_expression [57366,57419]",
      "dest": "assignment_expression [41129,41182]"
    },
    {
      "src": "return_statement [35996,36057]",
      "dest": "return_statement [22631,22692]"
    },
    {
      "src": "return: return [40942,40948]",
      "dest": "return: return [27432,27438]"
    },
    {
      "src": "\": \" [13000,13001]",
      "dest": "\": \" [10898,10899]"
    },
    {
      "src": "identifier: accrueInterest [25303,25317]",
      "dest": "identifier: accrueInterest [17614,17628]"
    },
    {
      "src": "}: } [64699,64700]",
      "dest": "}: } [49573,49574]"
    },
    {
      "src": "comment: // EFFECTS & INTERACTIONS [60071,60096]",
      "dest": "comment: // EFFECTS & INTERACTIONS [43717,43742]"
    },
    {
      "src": "primitive_type [54295,54299]",
      "dest": "primitive_type [38058,38062]"
    },
    {
      "src": "identifier: redeemFresh [25672,25683]",
      "dest": "identifier: redeemFresh [17983,17994]"
    },
    {
      "src": "import: import [154,160]",
      "dest": "import: import [154,160]"
    },
    {
      "src": "visibility [63919,63927]",
      "dest": "visibility [47390,47398]"
    },
    {
      "src": "type_name [59113,59117]",
      "dest": "type_name [42759,42763]"
    },
    {
      "src": "identifier: accountBorrows [34869,34883]",
      "dest": "identifier: accountBorrows [21474,21488]"
    },
    {
      "src": "type_name [55538,55542]",
      "dest": "type_name [39301,39305]"
    },
    {
      "src": "type_name [51837,51844]",
      "dest": "type_name [35600,35607]"
    },
    {
      "src": "}: } [63328,63329]",
      "dest": "}: } [46799,46800]"
    },
    {
      "src": "identifier: oldPendingAdmin [50876,50891]",
      "dest": "identifier: oldPendingAdmin [34639,34654]"
    },
    {
      "src": "(: ( [53030,53031]",
      "dest": "(: ( [36793,36794]"
    },
    {
      "src": "identifier: redeemTokensIn [26640,26654]",
      "dest": "identifier: redeemTokensIn [48772,48786]"
    },
    {
      "src": "parameter [31377,31394]",
      "dest": "parameter [18315,18332]"
    },
    {
      "src": "identifier: Error [19763,19768]",
      "dest": "identifier: Error [15877,15882]"
    },
    {
      "src": "): ) [1573,1574]",
      "dest": "): ) [1573,1574]"
    },
    {
      "src": "call_expression [53947,53995]",
      "dest": "call_expression [37710,37758]"
    },
    {
      "src": "variable_declaration [19706,19716]",
      "dest": "variable_declaration [15820,15830]"
    },
    {
      "src": "): ) [42295,42296]",
      "dest": "): ) [28785,28786]"
    },
    {
      "src": "return_type_definition [15156,15170]",
      "dest": "return_type_definition [12509,12523]"
    },
    {
      "src": "=: = [44786,44787]",
      "dest": "=: = [31276,31277]"
    },
    {
      "src": ",: , [37898,37899]",
      "dest": ",: , [24533,24534]"
    },
    {
      "src": "(: ( [36725,36726]",
      "dest": "(: ( [23360,23361]"
    },
    {
      "src": "): ) [44671,44672]",
      "dest": "): ) [31161,31162]"
    },
    {
      "src": "view: view [15151,15155]",
      "dest": "view: view [12504,12508]"
    },
    {
      "src": "identifier: spender [6961,6968]",
      "dest": "identifier: spender [4352,4359]"
    },
    {
      "src": "(: ( [45809,45810]",
      "dest": "(: ( [32299,32300]"
    },
    {
      "src": "identifier: msg [62338,62341]",
      "dest": "identifier: msg [45809,45812]"
    },
    {
      "src": "modifier_invocation [24351,24363]",
      "dest": "modifier_invocation [16662,16674]"
    },
    {
      "src": "identifier: nonReentrant [25252,25264]",
      "dest": "identifier: nonReentrant [17563,17575]"
    },
    {
      "src": "(: ( [51101,51102]",
      "dest": "(: ( [34864,34865]"
    },
    {
      "src": "visibility [20896,20904]",
      "dest": "visibility [48517,48525]"
    },
    {
      "src": "identifier: oldReserveFactorMantissa [55116,55140]",
      "dest": "identifier: oldReserveFactorMantissa [38879,38903]"
    },
    {
      "src": "true: true [6586,6590]",
      "dest": "true: true [3977,3981]"
    },
    {
      "src": ",: , [5860,5861]",
      "dest": ",: , [3251,3252]"
    },
    {
      "src": "): ) [50630,50631]",
      "dest": "): ) [34393,34394]"
    },
    {
      "src": "return: return [15181,15187]",
      "dest": "return: return [12534,12540]"
    },
    {
      "src": "(: ( [61141,61142]",
      "dest": "(: ( [44612,44613]"
    },
    {
      "src": ".: . [39698,39699]",
      "dest": ".: . [26418,26419]"
    },
    {
      "src": "expression_statement [34800,34860]",
      "dest": "expression_statement [21405,21465]"
    },
    {
      "src": "expression_statement [2073,2148]",
      "dest": "expression_statement [2073,2148]"
    },
    {
      "src": "(: ( [63891,63892]",
      "dest": "(: ( [47362,47363]"
    },
    {
      "src": "call_argument [33445,33453]",
      "dest": "call_argument [25571,25579]"
    },
    {
      "src": "identifier: FailureInfo [32591,32602]",
      "dest": "identifier: FailureInfo [19529,19540]"
    },
    {
      "src": "=: = [14344,14345]",
      "dest": "=: = [12047,12048]"
    },
    {
      "src": "uint: uint [37718,37722]",
      "dest": "uint: uint [24353,24357]"
    },
    {
      "src": "comment: // _addReservesFresh emits reserve-addition-specific logs on errors, so we don't need to. [55874,55963]",
      "dest": "comment: // _addReservesFresh emits reserve-addition-specific logs on errors, so we don't need to. [39637,39726]"
    },
    {
      "src": ",: , [63904,63905]",
      "dest": ",: , [47375,47376]"
    },
    {
      "src": ",: , [40243,40244]",
      "dest": ",: , [26809,26810]"
    },
    {
      "src": "uint: uint [35226,35230]",
      "dest": "uint: uint [21861,21865]"
    },
    {
      "src": "(: ( [54343,54344]",
      "dest": "(: ( [38106,38107]"
    },
    {
      "src": "): ) [38061,38062]",
      "dest": "): ) [24696,24697]"
    },
    {
      "src": "comment: /**      * @notice Calculates the exchange rate from the underlying to the CToken      * @dev This function does not accrue interest before calculating the exchange rate      * @return Calculated exchange rate scaled by 1e18      */ [13052,13284]",
      "dest": "comment: /**      * @notice Calculates the exchange rate from the underlying to the CToken      * @dev This function does not accrue interest before calculating the exchange rate      * @return Calculated exchange rate scaled by 1e18      */ [10950,11182]"
    },
    {
      "src": "function_body [64547,64700]",
      "dest": "function_body [49421,49574]"
    },
    {
      "src": "member_expression [32803,32825]",
      "dest": "member_expression [20033,20055]"
    },
    {
      "src": "(: ( [59959,59960]",
      "dest": "(: ( [43605,43606]"
    },
    {
      "src": "call_argument [25696,25697]",
      "dest": "call_argument [18007,18008]"
    },
    {
      "src": "identifier: actualRepayAmount [46310,46327]",
      "dest": "identifier: actualRepayAmount [32800,32817]"
    },
    {
      "src": ".: . [53776,53777]",
      "dest": ".: . [37539,37540]"
    },
    {
      "src": "call_expression [42418,42491]",
      "dest": "call_expression [28908,28981]"
    },
    {
      "src": "comment: // Check caller is admin [52483,52507]",
      "dest": "comment: // Check caller is admin [36246,36270]"
    },
    {
      "src": "identifier: doTransferOut [60601,60614]",
      "dest": "identifier: doTransferOut [44072,44085]"
    },
    {
      "src": "): ) [43365,43366]",
      "dest": "): ) [29855,29856]"
    },
    {
      "src": "identifier: RepayBorrowLocalVars [38315,38335]",
      "dest": "identifier: RepayBorrowLocalVars [25250,25270]"
    },
    {
      "src": ",: , [54905,54906]",
      "dest": ",: , [38668,38669]"
    },
    {
      "src": "call_argument [12532,12560]",
      "dest": "call_argument [10541,10569]"
    },
    {
      "src": "identifier: _totalSupply [13896,13908]",
      "dest": "identifier: _totalSupply [11621,11633]"
    },
    {
      "src": "(: ( [35230,35231]",
      "dest": "(: ( [21865,21866]"
    },
    {
      "src": "function_body [6439,6597]",
      "dest": "function_body [3830,3988]"
    },
    {
      "src": ".: . [51670,51671]",
      "dest": ".: . [35433,35434]"
    },
    {
      "src": "{: { [36586,36587]",
      "dest": "{: { [23221,23222]"
    },
    {
      "src": "comment: /* Verify cTokenCollateral market's block number equals current block number */ [43826,43905]",
      "dest": "comment: /* Verify cTokenCollateral market's block number equals current block number */ [30316,30395]"
    },
    {
      "src": "function: function [9387,9395]",
      "dest": "function: function [6352,6360]"
    },
    {
      "src": "identifier: vars [40972,40976]",
      "dest": "identifier: vars [27462,27466]"
    },
    {
      "src": "user_defined_type [38315,38335]",
      "dest": "user_defined_type [25250,25270]"
    },
    {
      "src": "identifier: SET_INTEREST_RATE_MODEL_ACCRUE_INTEREST_FAILED [61490,61536]",
      "dest": "identifier: SET_INTEREST_RATE_MODEL_ACCRUE_INTEREST_FAILED [44961,45007]"
    },
    {
      "src": "): ) [59932,59933]",
      "dest": "): ) [43578,43579]"
    },
    {
      "src": "expression_statement [64641,64660]",
      "dest": "expression_statement [49515,49534]"
    },
    {
      "src": "primitive_type [8471,8475]",
      "dest": "primitive_type [5783,5787]"
    },
    {
      "src": "expression_statement [33379,33455]",
      "dest": "expression_statement [25521,25581]"
    },
    {
      "src": "external: external [10069,10077]",
      "dest": "external: external [8532,8540]"
    },
    {
      "src": ",: , [60686,60687]",
      "dest": ",: , [44157,44158]"
    },
    {
      "src": "internal: internal [35546,35554]",
      "dest": "internal: internal [22181,22189]"
    },
    {
      "src": "type_cast_expression [5878,5898]",
      "dest": "type_cast_expression [3269,3289]"
    },
    {
      "src": "parameter [64349,64367]",
      "dest": "parameter [47820,47838]"
    },
    {
      "src": "identifier: newReserveFactorMantissa [54300,54324]",
      "dest": "identifier: newReserveFactorMantissa [38063,38087]"
    },
    {
      "src": "identifier: LIQUIDATE_ACCRUE_COLLATERAL_INTEREST_FAILED [42252,42295]",
      "dest": "identifier: LIQUIDATE_ACCRUE_COLLATERAL_INTEREST_FAILED [28742,28785]"
    },
    {
      "src": "(: ( [34696,34697]",
      "dest": "(: ( [21301,21302]"
    },
    {
      "src": "identifier: accrualBlockNumber [62565,62583]",
      "dest": "identifier: accrualBlockNumber [46036,46054]"
    },
    {
      "src": "identifier: borrowIndexNew [19147,19161]",
      "dest": "identifier: borrowIndexNew [15261,15275]"
    },
    {
      "src": "(: ( [12879,12880]",
      "dest": "(: ( [10777,10778]"
    },
    {
      "src": "variable_declaration_statement [31443,31473]",
      "dest": "variable_declaration_statement [18381,18411]"
    },
    {
      "src": "uint: uint [52467,52471]",
      "dest": "uint: uint [36230,36234]"
    },
    {
      "src": "number_literal: 0 [44674,44675]",
      "dest": "number_literal: 0 [31164,31165]"
    },
    {
      "src": ".: . [44883,44884]",
      "dest": ".: . [31373,31374]"
    },
    {
      "src": ",: , [56741,56742]",
      "dest": ",: , [40504,40505]"
    },
    {
      "src": "): ) [55626,55627]",
      "dest": "): ) [39389,39390]"
    },
    {
      "src": "function: function [31353,31361]",
      "dest": "function: function [18291,18299]"
    },
    {
      "src": "source_file [0,64703]",
      "dest": "source_file [0,49577]"
    },
    {
      "src": "parameter [25224,25241]",
      "dest": "parameter [17535,17552]"
    },
    {
      "src": "string [46187,46209]",
      "dest": "string [32677,32699]"
    },
    {
      "src": "comment: /*          * Calculate the interest accumulated into borrows and reserves and the new index:          *  simpleInterestFactor = borrowRate * blockDelta          *  interestAccumulated = simpleInterestFactor * totalBorrows          *  totalBorrowsNew = interestAccumulated + totalBorrows          *  totalReservesNew = interestAccumulated * reserveFactor + totalReserves          *  borrowIndexNew = simpleInterestFactor * borrowIndex + borrowIndex          */ [16580,17040]",
      "dest": "comment: /*          * Calculate the interest accumulated into borrows and reserves and the new index:          *  simpleInterestFactor = borrowRate * blockDelta          *  interestAccumulated = simpleInterestFactor * totalBorrows          *  totalBorrowsNew = interestAccumulated + totalBorrows          *  totalReservesNew = interestAccumulated * reserveFactor + totalReserves          *  borrowIndexNew = simpleInterestFactor * borrowIndex + borrowIndex          */ [13826,14286]"
    },
    {
      "src": "comment: // EFFECTS & INTERACTIONS [34247,34272]",
      "dest": "comment: // EFFECTS & INTERACTIONS [20852,20877]"
    },
    {
      "src": "): ) [38289,38290]",
      "dest": "): ) [25224,25225]"
    },
    {
      "src": "call_argument [34697,34705]",
      "dest": "call_argument [21302,21310]"
    },
    {
      "src": "}: } [60026,60027]",
      "dest": "}: } [43672,43673]"
    },
    {
      "src": ",: , [32487,32488]",
      "dest": ",: , [19425,19426]"
    },
    {
      "src": "comment: // We fail gracefully unless market's block number equals current block number [59366,59444]",
      "dest": "comment: // We fail gracefully unless market's block number equals current block number [43012,43090]"
    },
    {
      "src": "number_literal: 0 [44356,44357]",
      "dest": "number_literal: 0 [30846,30847]"
    },
    {
      "src": "identifier: nonReentrant [10567,10579]",
      "dest": "identifier: nonReentrant [9030,9042]"
    },
    {
      "src": "identifier: vars [33394,33398]",
      "dest": "identifier: vars [20609,20613]"
    },
    {
      "src": "(: ( [2080,2081]",
      "dest": "(: ( [2080,2081]"
    },
    {
      "src": "identifier: mintAmount [20135,20145]",
      "dest": "identifier: mintAmount [16249,16259]"
    },
    {
      "src": "}: } [17293,17294]",
      "dest": "}: } [14368,14369]"
    },
    {
      "src": "comment: /* Fail gracefully if protocol has insufficient underlying cash */ [32883,32949]",
      "dest": "comment: /* Fail gracefully if protocol has insufficient underlying cash */ [20113,20179]"
    },
    {
      "src": "!=: != [31492,31494]",
      "dest": "!=: != [18430,18432]"
    },
    {
      "src": "number_literal: 0 [1305,1306]",
      "dest": "number_literal: 0 [1305,1306]"
    },
    {
      "src": "): ) [8767,8768]",
      "dest": "): ) [11288,11289]"
    },
    {
      "src": "binary_expression [13936,13953]",
      "dest": "binary_expression [11661,11678]"
    },
    {
      "src": "identifier: vars [40035,40039]",
      "dest": "identifier: vars [26736,26740]"
    },
    {
      "src": "): ) [60742,60743]",
      "dest": "): ) [44213,44214]"
    },
    {
      "src": "(: ( [44385,44386]",
      "dest": "(: ( [30875,30876]"
    },
    {
      "src": "returns: returns [19675,19682]",
      "dest": "returns: returns [15789,15796]"
    },
    {
      "src": "member_expression [51685,51729]",
      "dest": "member_expression [35448,35492]"
    },
    {
      "src": "binary_expression [31486,31515]",
      "dest": "binary_expression [18424,18453]"
    },
    {
      "src": "call_argument [31667,31672]",
      "dest": "call_argument [18605,18610]"
    },
    {
      "src": "identifier: dst [5862,5865]",
      "dest": "identifier: dst [3253,3256]"
    },
    {
      "src": "call_argument [59285,59303]",
      "dest": "call_argument [42931,42949]"
    },
    {
      "src": "uint: uint [8374,8378]",
      "dest": "uint: uint [5636,5640]"
    },
    {
      "src": "identifier: blockDelta [16420,16430]",
      "dest": "identifier: blockDelta [13753,13763]"
    },
    {
      "src": "identifier: accountBorrows [37123,37137]",
      "dest": "identifier: accountBorrows [23758,23772]"
    },
    {
      "src": "address: address [37685,37692]",
      "dest": "address: address [24320,24327]"
    },
    {
      "src": "call_argument [43368,43393]",
      "dest": "call_argument [29858,29883]"
    },
    {
      "src": "): ) [52125,52126]",
      "dest": "): ) [35888,35889]"
    },
    {
      "src": ".: . [39984,39985]",
      "dest": ".: . [26689,26690]"
    },
    {
      "src": "variable_declaration_statement [41675,41705]",
      "dest": "variable_declaration_statement [28165,28195]"
    },
    {
      "src": "call_argument [34707,34719]",
      "dest": "call_argument [21312,21324]"
    },
    {
      "src": "{: { [59119,59120]",
      "dest": "{: { [42765,42766]"
    },
    {
      "src": "identifier: spender [6390,6397]",
      "dest": "identifier: spender [3781,3788]"
    },
    {
      "src": "(: ( [7662,7663]",
      "dest": "(: ( [5053,5054]"
    },
    {
      "src": "identifier: Error [24607,24612]",
      "dest": "identifier: Error [16918,16923]"
    },
    {
      "src": ".: . [2098,2099]",
      "dest": ".: . [2098,2099]"
    },
    {
      "src": "(: ( [50574,50575]",
      "dest": "(: ( [34337,34338]"
    },
    {
      "src": "{: { [5315,5316]",
      "dest": "{: { [2706,2707]"
    },
    {
      "src": "binary_expression [54397,54416]",
      "dest": "binary_expression [38160,38179]"
    },
    {
      "src": "variable_declaration_statement [56499,56521]",
      "dest": "variable_declaration_statement [40262,40284]"
    },
    {
      "src": "call_expression [41894,41965]",
      "dest": "call_expression [28384,28455]"
    },
    {
      "src": "identifier: FailureInfo [52587,52598]",
      "dest": "identifier: FailureInfo [36350,36361]"
    },
    {
      "src": "identifier: accountBorrowsNew [33673,33690]",
      "dest": "identifier: accountBorrowsNew [20683,20700]"
    },
    {
      "src": "tuple_expression [41893,41969]",
      "dest": "tuple_expression [28383,28459]"
    },
    {
      "src": "identifier: InterestRateModel [61142,61159]",
      "dest": "identifier: InterestRateModel [44613,44630]"
    },
    {
      "src": "call_expression [19719,19735]",
      "dest": "call_expression [15833,15849]"
    },
    {
      "src": "{: { [50699,50700]",
      "dest": "{: { [34462,34463]"
    },
    {
      "src": "type_name [63906,63910]",
      "dest": "type_name [47377,47381]"
    },
    {
      "src": "variable_declaration [11766,11803]",
      "dest": "variable_declaration [9904,9941]"
    },
    {
      "src": "number_literal: 0 [13952,13953]",
      "dest": "number_literal: 0 [11677,11678]"
    },
    {
      "src": "): ) [40994,40995]",
      "dest": "): ) [27484,27485]"
    },
    {
      "src": ".: . [38441,38442]",
      "dest": ".: . [25376,25377]"
    },
    {
      "src": "uint: uint [13875,13879]",
      "dest": "uint: uint [11600,11604]"
    },
    {
      "src": "(: ( [60614,60615]",
      "dest": "(: ( [44085,44086]"
    },
    {
      "src": "}: } [7949,7950]",
      "dest": "}: } [5211,5212]"
    },
    {
      "src": "member_expression [20123,20133]",
      "dest": "member_expression [16237,16247]"
    },
    {
      "src": ",: , [8943,8944]",
      "dest": ",: , [5908,5909]"
    },
    {
      "src": "identifier: totalCash [14547,14556]",
      "dest": "identifier: totalCash [12123,12132]"
    },
    {
      "src": "comment: // Check caller is admin [54360,54384]",
      "dest": "comment: // Check caller is admin [38123,38147]"
    },
    {
      "src": "(: ( [59075,59076]",
      "dest": "(: ( [42721,42722]"
    },
    {
      "src": ".: . [44009,44010]",
      "dest": ".: . [30499,30500]"
    },
    {
      "src": "comment: /**      * @notice Add reserves by transferring from caller      * @dev Requires fresh interest accrual      * @param addAmount Amount of addition to reserves      * @return (uint, uint) An error code (0=success, otherwise a failure (see ErrorReporter.sol for details)) and the actual amount added, net token fees      */ [56047,56368]",
      "dest": "comment: /**      * @notice Add reserves by transferring from caller      * @dev Requires fresh interest accrual      * @param addAmount Amount of addition to reserves      * @return (uint, uint) An error code (0=success, otherwise a failure (see ErrorReporter.sol for details)) and the actual amount added, net token fees      */ [39810,40131]"
    },
    {
      "src": ",: , [6397,6398]",
      "dest": ",: , [3788,3789]"
    },
    {
      "src": "uint: uint [26656,26660]",
      "dest": "uint: uint [48788,48792]"
    },
    {
      "src": "identifier: accrualBlockNumber [56652,56670]",
      "dest": "identifier: accrualBlockNumber [40415,40433]"
    },
    {
      "src": "returns: returns [52458,52465]",
      "dest": "returns: returns [36221,36228]"
    },
    {
      "src": "=: = [15946,15947]",
      "dest": "=: = [13299,13300]"
    },
    {
      "src": "): ) [45419,45420]",
      "dest": "): ) [31909,31910]"
    },
    {
      "src": "uint: uint [36496,36500]",
      "dest": "uint: uint [23131,23135]"
    },
    {
      "src": "if: if [38154,38156]",
      "dest": "if: if [25089,25091]"
    },
    {
      "src": "(: ( [9836,9837]",
      "dest": "(: ( [6801,6802]"
    },
    {
      "src": "identifier: LIQUIDATE_ACCRUE_BORROW_INTEREST_FAILED [41925,41964]",
      "dest": "identifier: LIQUIDATE_ACCRUE_BORROW_INTEREST_FAILED [28415,28454]"
    },
    {
      "src": "block_statement [45846,45947]",
      "dest": "block_statement [32336,32437]"
    },
    {
      "src": "return_statement [24764,24812]",
      "dest": "return_statement [17075,17123]"
    },
    {
      "src": "internal: internal [9152,9160]",
      "dest": "internal: internal [6117,6125]"
    },
    {
      "src": "function_definition [41519,42498]",
      "dest": "function_definition [28009,28988]"
    },
    {
      "src": "member_expression [36933,36943]",
      "dest": "member_expression [23568,23578]"
    },
    {
      "src": "identifier: cashPlusBorrowsMinusReserves [14379,14407]",
      "dest": "identifier: cashPlusBorrowsMinusReserves [12082,12110]"
    },
    {
      "src": ",: , [6551,6552]",
      "dest": ",: , [3942,3943]"
    },
    {
      "src": "member_expression [40245,40267]",
      "dest": "member_expression [26811,26833]"
    },
    {
      "src": ".: . [32808,32809]",
      "dest": ".: . [20038,20039]"
    },
    {
      "src": ",: , [9867,9868]",
      "dest": ",: , [6832,6833]"
    },
    {
      "src": "call_argument [24795,24807]",
      "dest": "call_argument [17106,17118]"
    },
    {
      "src": ".: . [31840,31841]",
      "dest": ".: . [18778,18779]"
    },
    {
      "src": "call_argument [40690,40695]",
      "dest": "call_argument [27150,27155]"
    },
    {
      "src": "): ) [50606,50607]",
      "dest": "): ) [34369,34370]"
    },
    {
      "src": "): ) [43217,43218]",
      "dest": "): ) [29707,29708]"
    },
    {
      "src": "): ) [24618,24619]",
      "dest": "): ) [16929,16930]"
    },
    {
      "src": "type_name [31908,31917]",
      "dest": "type_name [18846,18855]"
    },
    {
      "src": "(: ( [9823,9824]",
      "dest": "(: ( [6788,6789]"
    },
    {
      "src": "identifier: error [41680,41685]",
      "dest": "identifier: error [28170,28175]"
    },
    {
      "src": "call_argument [18156,18175]",
      "dest": "call_argument [14646,14665]"
    },
    {
      "src": "call_expression [35612,35628]",
      "dest": "call_expression [22247,22263]"
    },
    {
      "src": "identifier: payer [40690,40695]",
      "dest": "identifier: payer [27150,27155]"
    },
    {
      "src": "returns: returns [9166,9173]",
      "dest": "returns: returns [6131,6138]"
    },
    {
      "src": "comment: /* We emit an AccrueInterest event */ [19049,19086]",
      "dest": "comment: /* We emit an AccrueInterest event */ [15163,15200]"
    },
    {
      "src": "variable_declaration_statement [61214,61244]",
      "dest": "variable_declaration_statement [44685,44715]"
    },
    {
      "src": "): ) [13344,13345]",
      "dest": "): ) [11242,11243]"
    },
    {
      "src": "call_argument [53085,53099]",
      "dest": "call_argument [36848,36862]"
    },
    {
      "src": "{: { [62605,62606]",
      "dest": "{: { [46076,46077]"
    },
    {
      "src": "identifier: comptroller [52909,52920]",
      "dest": "identifier: comptroller [36672,36683]"
    },
    {
      "src": "identifier: interestRateModel [9792,9809]",
      "dest": "identifier: interestRateModel [6757,6774]"
    },
    {
      "src": "(: ( [32471,32472]",
      "dest": "(: ( [19409,19410]"
    },
    {
      "src": "primitive_type [36564,36568]",
      "dest": "primitive_type [23199,23203]"
    },
    {
      "src": ",: , [37881,37882]",
      "dest": ",: , [24516,24517]"
    },
    {
      "src": "expression_statement [40523,40576]",
      "dest": "expression_statement [26983,27036]"
    },
    {
      "src": "(: ( [10627,10628]",
      "dest": "(: ( [9090,9091]"
    },
    {
      "src": "type_cast_expression [10144,10164]",
      "dest": "type_cast_expression [8607,8627]"
    },
    {
      "src": "==: == [1216,1218]",
      "dest": "==: == [1216,1218]"
    },
    {
      "src": "type_name [31427,31431]",
      "dest": "type_name [18365,18369]"
    },
    {
      "src": ".: . [56754,56755]",
      "dest": ".: . [40517,40518]"
    },
    {
      "src": "boolean_literal [64615,64620]",
      "dest": "boolean_literal [49489,49494]"
    },
    {
      "src": ".: . [40604,40605]",
      "dest": ".: . [27064,27065]"
    },
    {
      "src": "uint: uint [25342,25346]",
      "dest": "uint: uint [17653,17657]"
    },
    {
      "src": "identifier: approve [6374,6381]",
      "dest": "identifier: approve [3765,3772]"
    },
    {
      "src": "member_expression [12532,12560]",
      "dest": "member_expression [10541,10569]"
    },
    {
      "src": "): ) [35671,35672]",
      "dest": "): ) [22306,22307]"
    },
    {
      "src": "primitive_type [58305,58309]",
      "dest": "primitive_type [41951,41955]"
    },
    {
      "src": "primitive_type [5734,5741]",
      "dest": "primitive_type [3125,3132]"
    },
    {
      "src": "member_expression [44229,44273]",
      "dest": "member_expression [30719,30763]"
    },
    {
      "src": ".: . [32567,32568]",
      "dest": ".: . [19505,19506]"
    },
    {
      "src": "identifier: vars [40491,40495]",
      "dest": "identifier: vars [26951,26955]"
    },
    {
      "src": "(: ( [32773,32774]",
      "dest": "(: ( [20003,20004]"
    },
    {
      "src": "identifier: getBlockNumber [59479,59493]",
      "dest": "identifier: getBlockNumber [43125,43139]"
    },
    {
      "src": "view: view [6979,6983]",
      "dest": "view: view [4370,4374]"
    },
    {
      "src": "identifier: borrowIndex [1310,1321]",
      "dest": "identifier: borrowIndex [1310,1321]"
    },
    {
      "src": "identifier: Error [55611,55616]",
      "dest": "identifier: Error [39374,39379]"
    },
    {
      "src": "identifier: Error [53085,53090]",
      "dest": "identifier: Error [36848,36853]"
    },
    {
      "src": "call_argument [44555,44557]",
      "dest": "call_argument [31045,31047]"
    },
    {
      "src": "): ) [9744,9745]",
      "dest": "): ) [6709,6710]"
    },
    {
      "src": "identifier: borrowAmount [32979,32991]",
      "dest": "identifier: borrowAmount [20209,20221]"
    },
    {
      "src": "member_expression [39980,40002]",
      "dest": "member_expression [26685,26707]"
    },
    {
      "src": "function_definition [56373,57967]",
      "dest": "function_definition [40136,41613]"
    },
    {
      "src": "primitive_type [13891,13895]",
      "dest": "primitive_type [11616,11620]"
    },
    {
      "src": "return_type_definition [9431,9445]",
      "dest": "return_type_definition [6396,6410]"
    },
    {
      "src": "}: } [42497,42498]",
      "dest": "}: } [28987,28988]"
    },
    {
      "src": "tuple_expression [37961,38062]",
      "dest": "tuple_expression [24596,24697]"
    },
    {
      "src": "identifier: totalBorrowsNew [18981,18996]",
      "dest": "identifier: totalBorrowsNew [15095,15110]"
    },
    {
      "src": "): ) [53536,53537]",
      "dest": "): ) [37299,37300]"
    },
    {
      "src": "function_definition [9716,9898]",
      "dest": "function_definition [6681,6863]"
    },
    {
      "src": "type_name [35528,35532]",
      "dest": "type_name [22163,22167]"
    },
    {
      "src": "call_argument [45422,45475]",
      "dest": "call_argument [31912,31965]"
    },
    {
      "src": "member_expression [52149,52163]",
      "dest": "member_expression [35912,35926]"
    },
    {
      "src": ",: , [10653,10654]",
      "dest": ",: , [9116,9117]"
    },
    {
      "src": "variable_declaration [33109,33136]",
      "dest": "variable_declaration [20339,20366]"
    },
    {
      "src": "parameter [56400,56414]",
      "dest": "parameter [40163,40177]"
    },
    {
      "src": ".: . [35843,35844]",
      "dest": ".: . [22478,22479]"
    },
    {
      "src": "identifier: cashPrior [15892,15901]",
      "dest": "identifier: cashPrior [13245,13254]"
    },
    {
      "src": "identifier: src [6502,6505]",
      "dest": "identifier: src [3893,3896]"
    },
    {
      "src": "call_argument [45887,45900]",
      "dest": "call_argument [32377,32390]"
    },
    {
      "src": "variable_declaration [56499,56520]",
      "dest": "variable_declaration [40262,40283]"
    },
    {
      "src": "comment: /**      * @notice Get a snapshot of the account's balances, and the cached exchange rate      * @dev This is used by comptroller to more efficiently perform liquidity checks.      * @param account Address of the account to snapshot      * @return (possible error, token balance, borrow balance, exchange rate mantissa)      */ [7956,8283]",
      "dest": "comment: /**      * @notice Get a snapshot of the account's balances, and the cached exchange rate      * @dev This is used by comptroller to more efficiently perform liquidity checks.      * @param account Address of the account to snapshot      * @return (possible error, token balance, borrow balance, exchange rate mantissa)      */ [5218,5545]"
    },
    {
      "src": "(: ( [1883,1884]",
      "dest": "(: ( [1883,1884]"
    },
    {
      "src": "(: ( [63240,63241]",
      "dest": "(: ( [46711,46712]"
    },
    {
      "src": "return_statement [47281,47349]",
      "dest": "return_statement [33801,33869]"
    },
    {
      "src": "comment: // repayBorrowFresh emits repay-borrow-specific logs on errors, so we don't need to [36817,36900]",
      "dest": "comment: // repayBorrowFresh emits repay-borrow-specific logs on errors, so we don't need to [23452,23535]"
    },
    {
      "src": "call_argument [1490,1521]",
      "dest": "call_argument [1490,1521]"
    },
    {
      "src": ".: . [40495,40496]",
      "dest": ".: . [26955,26956]"
    },
    {
      "src": "primitive_type [32366,32370]",
      "dest": "primitive_type [19304,19308]"
    },
    {
      "src": ".: . [41924,41925]",
      "dest": ".: . [28414,28415]"
    },
    {
      "src": ".: . [5397,5398]",
      "dest": ".: . [2788,2789]"
    },
    {
      "src": "binary_expression [32962,32991]",
      "dest": "binary_expression [20192,20221]"
    },
    {
      "src": "type_cast_expression [38955,38963]",
      "dest": "type_cast_expression [25675,25683]"
    },
    {
      "src": "(: ( [11000,11001]",
      "dest": "(: ( [9463,9464]"
    },
    {
      "src": "): ) [10104,10105]",
      "dest": "): ) [8567,8568]"
    },
    {
      "src": "(: ( [61197,61198]",
      "dest": "(: ( [44668,44669]"
    },
    {
      "src": ".: . [5350,5351]",
      "dest": ".: . [2741,2742]"
    },
    {
      "src": "): ) [51497,51498]",
      "dest": "): ) [35260,35261]"
    },
    {
      "src": "identifier: LIQUIDATE_LIQUIDATOR_IS_BORROWER [44241,44273]",
      "dest": "identifier: LIQUIDATE_LIQUIDATOR_IS_BORROWER [30731,30763]"
    },
    {
      "src": "): ) [34015,34016]",
      "dest": "): ) [20806,20807]"
    },
    {
      "src": "type_cast_expression [55606,55626]",
      "dest": "type_cast_expression [39369,39389]"
    },
    {
      "src": ",: , [35581,35582]",
      "dest": ",: , [22216,22217]"
    },
    {
      "src": "identifier: actualAddAmount [57944,57959]",
      "dest": "identifier: actualAddAmount [41590,41605]"
    },
    {
      "src": "function_definition [50549,51180]",
      "dest": "function_definition [34312,34943]"
    },
    {
      "src": ".: . [43774,43775]",
      "dest": ".: . [30264,30265]"
    },
    {
      "src": "visibility [8333,8341]",
      "dest": "visibility [5595,5603]"
    },
    {
      "src": "variable_declaration [15556,15579]",
      "dest": "variable_declaration [12909,12932]"
    },
    {
      "src": "identifier: Error [8898,8903]",
      "dest": "identifier: Error [5863,5868]"
    },
    {
      "src": ",: , [18175,18176]",
      "dest": ",: , [14665,14666]"
    },
    {
      "src": "visibility [25243,25251]",
      "dest": "visibility [17554,17562]"
    },
    {
      "src": "identifier: Error [46170,46175]",
      "dest": "identifier: Error [32660,32665]"
    },
    {
      "src": "member_expression [54666,54688]",
      "dest": "member_expression [38429,38451]"
    },
    {
      "src": "primitive_type [43243,43247]",
      "dest": "primitive_type [29733,29737]"
    },
    {
      "src": "primitive_type [51837,51844]",
      "dest": "primitive_type [35600,35607]"
    },
    {
      "src": "struct_member [37037,37055]",
      "dest": "struct_member [23672,23690]"
    },
    {
      "src": "primitive_type [8893,8897]",
      "dest": "primitive_type [5858,5862]"
    },
    {
      "src": "returns: returns [10580,10587]",
      "dest": "returns: returns [9043,9050]"
    },
    {
      "src": ",: , [63261,63262]",
      "dest": ",: , [46732,46733]"
    },
    {
      "src": "identifier: getCashPrior [59684,59696]",
      "dest": "identifier: getCashPrior [43330,43342]"
    },
    {
      "src": ".: . [39002,39003]",
      "dest": ".: . [25722,25723]"
    },
    {
      "src": "variable_declaration [54972,55001]",
      "dest": "variable_declaration [38735,38764]"
    },
    {
      "src": "uint: uint [16014,16018]",
      "dest": "uint: uint [13367,13371]"
    },
    {
      "src": "identifier: liquidator [44805,44815]",
      "dest": "identifier: liquidator [31295,31305]"
    },
    {
      "src": "identifier: NO_ERROR [10155,10163]",
      "dest": "identifier: NO_ERROR [8618,8626]"
    },
    {
      "src": ".: . [59528,59529]",
      "dest": ".: . [43174,43175]"
    },
    {
      "src": "): ) [53061,53062]",
      "dest": "): ) [36824,36825]"
    },
    {
      "src": "identifier: FailureInfo [44947,44958]",
      "dest": "identifier: FailureInfo [31437,31448]"
    },
    {
      "src": "identifier: borrower [47206,47214]",
      "dest": "identifier: borrower [33726,33734]"
    },
    {
      "src": "identifier: Error [4956,4961]",
      "dest": "identifier: Error [19856,19861]"
    },
    {
      "src": "block_statement [55628,55864]",
      "dest": "block_statement [39391,39627]"
    },
    {
      "src": "): ) [31471,31472]",
      "dest": "): ) [18409,18410]"
    },
    {
      "src": "returns: returns [6424,6431]",
      "dest": "returns: returns [3815,3822]"
    },
    {
      "src": "struct_member [37018,37028]",
      "dest": "struct_member [23653,23663]"
    },
    {
      "src": "type_name [41588,41603]",
      "dest": "type_name [28078,28093]"
    },
    {
      "src": "(: ( [45379,45380]",
      "dest": "(: ( [31869,31870]"
    },
    {
      "src": "function_body [24379,24818]",
      "dest": "function_body [16690,17129]"
    },
    {
      "src": "if_statement [62334,62464]",
      "dest": "if_statement [45805,45935]"
    },
    {
      "src": "}: } [37237,37238]",
      "dest": "}: } [23872,23873]"
    },
    {
      "src": "uint: uint [17091,17095]",
      "dest": "uint: uint [14393,14397]"
    },
    {
      "src": "identifier: accountBorrows [38606,38620]",
      "dest": "identifier: accountBorrows [25526,25540]"
    },
    {
      "src": "(: ( [9494,9495]",
      "dest": "(: ( [6459,6460]"
    },
    {
      "src": "return_type_definition [63928,63942]",
      "dest": "return_type_definition [47399,47413]"
    },
    {
      "src": "return: return [13526,13532]",
      "dest": "return: return [10580,10586]"
    },
    {
      "src": "identifier: fail [43734,43738]",
      "dest": "identifier: fail [30224,30228]"
    },
    {
      "src": "primitive_type [41570,41574]",
      "dest": "primitive_type [28060,28064]"
    },
    {
      "src": "call_expression [1627,1656]",
      "dest": "call_expression [1627,1656]"
    },
    {
      "src": ".: . [59241,59242]",
      "dest": ".: . [42887,42888]"
    },
    {
      "src": "type_name [20879,20883]",
      "dest": "type_name [48500,48504]"
    },
    {
      "src": "expression_statement [57676,57709]",
      "dest": "expression_statement [41322,41355]"
    },
    {
      "src": "identifier: borrower [37890,37898]",
      "dest": "identifier: borrower [24525,24533]"
    },
    {
      "src": "[: [ [7831,7832]",
      "dest": "[: [ [5197,5198]"
    },
    {
      "src": "expression_statement [10116,10192]",
      "dest": "expression_statement [8579,8655]"
    },
    {
      "src": "uint: uint [2919,2923]",
      "dest": "uint: uint [48123,48127]"
    },
    {
      "src": "}: } [54743,54744]",
      "dest": "}: } [38506,38507]"
    },
    {
      "src": "=: = [52684,52685]",
      "dest": "=: = [36447,36448]"
    },
    {
      "src": "number_literal: 0 [52022,52023]",
      "dest": "number_literal: 0 [35785,35786]"
    },
    {
      "src": "return_statement [61674,61730]",
      "dest": "return_statement [45145,45201]"
    },
    {
      "src": "comment: // Check caller is admin [62301,62325]",
      "dest": "comment: // Check caller is admin [45772,45796]"
    },
    {
      "src": "uint: uint [53492,53496]",
      "dest": "uint: uint [37255,37259]"
    },
    {
      "src": "if: if [32733,32735]",
      "dest": "if: if [19963,19965]"
    },
    {
      "src": "call_expression [44922,44945]",
      "dest": "call_expression [31412,31435]"
    },
    {
      "src": "function_body [13881,14959]",
      "dest": "function_body [11606,12312]"
    },
    {
      "src": "external: external [50608,50616]",
      "dest": "external: external [34371,34379]"
    },
    {
      "src": "function: function [35499,35507]",
      "dest": "function: function [22134,22142]"
    },
    {
      "src": "identifier: balanceOf [45584,45593]",
      "dest": "identifier: balanceOf [32074,32083]"
    },
    {
      "src": "==: == [2085,2087]",
      "dest": "==: == [2085,2087]"
    },
    {
      "src": "}: } [38860,38861]",
      "dest": "}: } [25007,25008]"
    },
    {
      "src": "uint: uint [45400,45404]",
      "dest": "uint: uint [31890,31894]"
    },
    {
      "src": "returns: returns [6984,6991]",
      "dest": "returns: returns [4375,4382]"
    },
    {
      "src": "): ) [10556,10557]",
      "dest": "): ) [9019,9020]"
    },
    {
      "src": "visibility [12882,12888]",
      "dest": "visibility [10780,10786]"
    },
    {
      "src": "identifier: TOKEN_INSUFFICIENT_CASH [33025,33048]",
      "dest": "identifier: TOKEN_INSUFFICIENT_CASH [20255,20278]"
    },
    {
      "src": "inheritance_specifier [383,398]",
      "dest": "inheritance_specifier [383,398]"
    },
    {
      "src": "(: ( [13838,13839]",
      "dest": "(: ( [11574,11575]"
    },
    {
      "src": "identifier: FailureInfo [35832,35843]",
      "dest": "identifier: FailureInfo [22467,22478]"
    },
    {
      "src": "user_defined_type [413,431]",
      "dest": "user_defined_type [413,431]"
    },
    {
      "src": "identifier: interestIndex [38483,38496]",
      "dest": "identifier: interestIndex [25418,25431]"
    },
    {
      "src": "identifier: sender [6467,6473]",
      "dest": "identifier: sender [3858,3864]"
    },
    {
      "src": "[: [ [40537,40538]",
      "dest": "[: [ [26997,26998]"
    },
    {
      "src": "identifier: liquidateBorrowInternal [41528,41551]",
      "dest": "identifier: liquidateBorrowInternal [28018,28041]"
    },
    {
      "src": "primitive_type [55554,55558]",
      "dest": "primitive_type [39317,39321]"
    },
    {
      "src": "uint: uint [1681,1685]",
      "dest": "uint: uint [1681,1685]"
    },
    {
      "src": "identifier: FailureInfo [42240,42251]",
      "dest": "identifier: FailureInfo [28730,28741]"
    },
    {
      "src": ".: . [40711,40712]",
      "dest": ".: . [27171,27172]"
    },
    {
      "src": "identifier: decimals_ [1169,1178]",
      "dest": "identifier: decimals_ [1169,1178]"
    },
    {
      "src": "identifier: borrower [42451,42459]",
      "dest": "identifier: borrower [28941,28949]"
    },
    {
      "src": "{: { [10106,10107]",
      "dest": "{: { [8569,8570]"
    },
    {
      "src": "identifier: spender [7045,7052]",
      "dest": "identifier: spender [4436,4443]"
    },
    {
      "src": "call_argument [19202,19216]",
      "dest": "call_argument [15316,15330]"
    },
    {
      "src": "emit_statement [46267,46369]",
      "dest": "emit_statement [32757,32859]"
    },
    {
      "src": "call_argument [25684,25694]",
      "dest": "call_argument [17995,18005]"
    },
    {
      "src": "\": \" [16277,16278]",
      "dest": "\": \" [13630,13631]"
    },
    {
      "src": "\": \" [12977,12978]",
      "dest": "\": \" [10875,10876]"
    },
    {
      "src": "type_name [61214,61218]",
      "dest": "type_name [44685,44689]"
    },
    {
      "src": "identifier: Error [35818,35823]",
      "dest": "identifier: Error [22453,22458]"
    },
    {
      "src": "emit: emit [6534,6538]",
      "dest": "emit: emit [3925,3929]"
    },
    {
      "src": "identifier: Error [12960,12965]",
      "dest": "identifier: Error [10858,10863]"
    },
    {
      "src": "primitive_type [37822,37826]",
      "dest": "primitive_type [24457,24461]"
    },
    {
      "src": "primitive_type [53430,53434]",
      "dest": "primitive_type [37193,37197]"
    },
    {
      "src": "identifier: oldReserveFactorMantissa [54977,55001]",
      "dest": "identifier: oldReserveFactorMantissa [38740,38764]"
    },
    {
      "src": "==: == [44353,44355]",
      "dest": "==: == [30843,30845]"
    },
    {
      "src": "call_argument [32633,32640]",
      "dest": "call_argument [19571,19578]"
    },
    {
      "src": "comment: /**      * @notice Approve `spender` to transfer up to `amount` from `src`      * @dev This will overwrite the approval amount for `spender`      *  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)      * @param spender The address of the account which may transfer tokens      * @param amount The number of tokens that are approved (-1 means infinite)      * @return Whether or not the approval succeeded      */ [5911,6360]",
      "dest": "comment: /**      * @notice Approve `spender` to transfer up to `amount` from `src`      * @dev This will overwrite the approval amount for `spender`      *  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)      * @param spender The address of the account which may transfer tokens      * @param amount The number of tokens that are approved (-1 means infinite)      * @return Whether or not the approval succeeded      */ [3302,3751]"
    },
    {
      "src": "returns: returns [25265,25272]",
      "dest": "returns: returns [17576,17583]"
    },
    {
      "src": "parameter [5734,5745]",
      "dest": "parameter [3125,3136]"
    },
    {
      "src": "type_name [19706,19710]",
      "dest": "type_name [15820,15824]"
    },
    {
      "src": "function_body [1187,2369]",
      "dest": "function_body [1187,2369]"
    },
    {
      "src": "bool: bool [5807,5811]",
      "dest": "bool: bool [3198,3202]"
    },
    {
      "src": "return: return [7319,7325]",
      "dest": "return: return [4710,4716]"
    },
    {
      "src": "return_statement [38212,38295]",
      "dest": "return_statement [25147,25230]"
    },
    {
      "src": "call_expression [55984,56012]",
      "dest": "call_expression [39747,39775]"
    },
    {
      "src": "primitive_type [6993,7000]",
      "dest": "primitive_type [4384,4391]"
    },
    {
      "src": "emit_statement [35014,35096]",
      "dest": "emit_statement [21619,21701]"
    },
    {
      "src": "}: } [44288,44289]",
      "dest": "}: } [30778,30779]"
    },
    {
      "src": "identifier: accrualBlockNumber [1283,1301]",
      "dest": "identifier: accrualBlockNumber [1283,1301]"
    },
    {
      "src": "uint: uint [31996,32000]",
      "dest": "uint: uint [18934,18938]"
    },
    {
      "src": "): ) [12974,12975]",
      "dest": "): ) [10872,10873]"
    },
    {
      "src": "type_cast_expression [24441,24461]",
      "dest": "type_cast_expression [16752,16772]"
    },
    {
      "src": ",: , [5374,5375]",
      "dest": ",: , [2765,2766]"
    },
    {
      "src": "): ) [32640,32641]",
      "dest": "): ) [19578,19579]"
    },
    {
      "src": "): ) [18153,18154]",
      "dest": "): ) [14643,14644]"
    },
    {
      "src": "identifier: COMPTROLLER_REJECTION [43496,43517]",
      "dest": "identifier: COMPTROLLER_REJECTION [29986,30007]"
    },
    {
      "src": ",: , [56438,56439]",
      "dest": ",: , [40201,40202]"
    },
    {
      "src": "): ) [46605,46606]",
      "dest": "): ) [33125,33126]"
    },
    {
      "src": "call_expression [1275,1366]",
      "dest": "call_expression [1275,1366]"
    },
    {
      "src": "identifier: borrowsPrior [17582,17594]",
      "dest": "identifier: borrowsPrior [14461,14473]"
    },
    {
      "src": "^:  ^ [15,17]",
      "dest": "^:  ^ [15,17]"
    },
    {
      "src": "(: ( [12345,12346]",
      "dest": "(: ( [10452,10453]"
    },
    {
      "src": "identifier: accrueInterest [10124,10138]",
      "dest": "identifier: accrueInterest [8587,8601]"
    },
    {
      "src": "identifier: nonReentrant [36468,36480]",
      "dest": "identifier: nonReentrant [23103,23115]"
    },
    {
      "src": "type_cast_expression [45400,45420]",
      "dest": "type_cast_expression [31890,31910]"
    },
    {
      "src": "{: { [11558,11559]",
      "dest": "{: { [9846,9847]"
    },
    {
      "src": "identifier: principalTimesIndex [11667,11686]",
      "dest": "identifier: principalTimesIndex [10426,10445]"
    },
    {
      "src": "call_argument [55791,55803]",
      "dest": "call_argument [39554,39566]"
    },
    {
      "src": "return_type_definition [59104,59118]",
      "dest": "return_type_definition [42750,42764]"
    },
    {
      "src": "=: = [50892,50893]",
      "dest": "=: = [34655,34656]"
    },
    {
      "src": "(: ( [57807,57808]",
      "dest": "(: ( [41453,41454]"
    },
    {
      "src": "variable_declaration_statement [53508,53538]",
      "dest": "variable_declaration_statement [37271,37301]"
    },
    {
      "src": "uint: uint [16415,16419]",
      "dest": "uint: uint [13748,13752]"
    },
    {
      "src": "): ) [35245,35246]",
      "dest": "): ) [21880,21881]"
    },
    {
      "src": "identifier: _notEntered [64641,64652]",
      "dest": "identifier: _notEntered [49515,49526]"
    },
    {
      "src": "}: } [43586,43587]",
      "dest": "}: } [30076,30077]"
    },
    {
      "src": "identifier: NO_ERROR [53571,53579]",
      "dest": "identifier: NO_ERROR [37334,37342]"
    },
    {
      "src": "assignment_expression [63071,63111]",
      "dest": "assignment_expression [46542,46582]"
    },
    {
      "src": "!=: != [54619,54621]",
      "dest": "!=: != [38382,38384]"
    },
    {
      "src": "(: ( [55972,55973]",
      "dest": "(: ( [39735,39736]"
    },
    {
      "src": "call_expression [10613,10629]",
      "dest": "call_expression [9076,9092]"
    },
    {
      "src": "member_expression [34869,34907]",
      "dest": "member_expression [21474,21512]"
    },
    {
      "src": "expression_statement [2344,2363]",
      "dest": "expression_statement [2344,2363]"
    },
    {
      "src": "call_argument [6553,6560]",
      "dest": "call_argument [3944,3951]"
    },
    {
      "src": "comment: /**      * @notice Transfers collateral tokens (this market) to the liquidator.      * @dev Called only during an in-kind liquidation, or by liquidateBorrow during the liquidation of another CToken.      *  Its absolutely critical to use msg.sender as the seizer cToken and not a parameter.      * @param seizerToken The contract seizing the collateral (i.e. borrowed cToken)      * @param liquidator The account receiving seized collateral      * @param borrower The account having collateral seized      * @param seizeTokens The number of cTokens to seize      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)      */ [47361,48013]",
      "dest": "comment: /**      * @notice Get the account's cToken balances      */ [48135,48195]"
    },
    {
      "src": "identifier: error [55973,55978]",
      "dest": "identifier: error [39736,39741]"
    },
    {
      "src": "): ) [25711,25712]",
      "dest": "): ) [18022,18023]"
    },
    {
      "src": "return_type_definition [20905,20925]",
      "dest": "return_type_definition [48526,48546]"
    },
    {
      "src": "binary_expression [43918,43975]",
      "dest": "binary_expression [30408,30465]"
    },
    {
      "src": "assignment_expression [34931,34966]",
      "dest": "assignment_expression [21536,21571]"
    },
    {
      "src": "identifier: fail [42221,42225]",
      "dest": "identifier: fail [28711,28715]"
    },
    {
      "src": "): ) [19694,19695]",
      "dest": "): ) [15808,15809]"
    },
    {
      "src": ",: , [35880,35881]",
      "dest": ",: , [22515,22516]"
    },
    {
      "src": "identifier: admin [51933,51938]",
      "dest": "identifier: admin [35696,35701]"
    },
    {
      "src": "returns: returns [41644,41651]",
      "dest": "returns: returns [28134,28141]"
    },
    {
      "src": "function_definition [24299,24818]",
      "dest": "function_definition [16610,17129]"
    },
    {
      "src": "parameter [20879,20894]",
      "dest": "parameter [48500,48515]"
    },
    {
      "src": "function_body [25280,25719]",
      "dest": "function_body [17591,18030]"
    },
    {
      "src": "(: ( [64564,64565]",
      "dest": "(: ( [49438,49439]"
    },
    {
      "src": "(: ( [17263,17264]",
      "dest": "(: ( [14338,14339]"
    },
    {
      "src": "if_statement [62561,62714]",
      "dest": "if_statement [46032,46185]"
    },
    {
      "src": "(: ( [62962,62963]",
      "dest": "(: ( [46433,46434]"
    },
    {
      "src": "): ) [43975,43976]",
      "dest": "): ) [30465,30466]"
    },
    {
      "src": "(: ( [50724,50725]",
      "dest": "(: ( [34487,34488]"
    },
    {
      "src": "{: { [9775,9776]",
      "dest": "{: { [6740,6741]"
    },
    {
      "src": ",: , [20133,20134]",
      "dest": ",: , [16247,16248]"
    },
    {
      "src": "type_name [58239,58243]",
      "dest": "type_name [41885,41889]"
    },
    {
      "src": ",: , [8913,8914]",
      "dest": ",: , [5878,5879]"
    },
    {
      "src": "identifier: BORROW_COMPTROLLER_REJECTION [32603,32631]",
      "dest": "identifier: BORROW_COMPTROLLER_REJECTION [19541,19569]"
    },
    {
      "src": "external: external [7645,7653]",
      "dest": "external: external [5036,5044]"
    },
    {
      "src": "call_argument [40955,40969]",
      "dest": "call_argument [27445,27459]"
    },
    {
      "src": "address: address [11501,11508]",
      "dest": "address: address [9800,9807]"
    },
    {
      "src": "primitive_type [28537,28541]",
      "dest": "primitive_type [14556,14560]"
    },
    {
      "src": "variable_declaration_statement [35599,35629]",
      "dest": "variable_declaration_statement [22234,22264]"
    },
    {
      "src": "identifier: sender [31841,31847]",
      "dest": "identifier: sender [18779,18785]"
    },
    {
      "src": "return: return [59948,59954]",
      "dest": "return: return [43594,43600]"
    },
    {
      "src": "): ) [63632,63633]",
      "dest": "): ) [47103,47104]"
    },
    {
      "src": "return: return [60716,60722]",
      "dest": "return: return [44187,44193]"
    },
    {
      "src": "variable_declaration [50868,50891]",
      "dest": "variable_declaration [34631,34654]"
    },
    {
      "src": "visibility [51475,51483]",
      "dest": "visibility [35238,35246]"
    },
    {
      "src": "type_name [36496,36500]",
      "dest": "type_name [23131,23135]"
    },
    {
      "src": "expression_statement [10605,10681]",
      "dest": "expression_statement [9068,9144]"
    },
    {
      "src": "return_statement [44909,45000]",
      "dest": "return_statement [31399,31490]"
    },
    {
      "src": "identifier: addAmount [55496,55505]",
      "dest": "identifier: addAmount [39259,39268]"
    },
    {
      "src": "call_argument [47302,47312]",
      "dest": "call_argument [33822,33832]"
    },
    {
      "src": "function: function [59046,59054]",
      "dest": "function: function [42692,42700]"
    },
    {
      "src": "number_literal: 0 [36795,36796]",
      "dest": "number_literal: 0 [23430,23431]"
    },
    {
      "src": "call_argument [44587,44623]",
      "dest": "call_argument [31077,31113]"
    },
    {
      "src": "call_argument [56002,56011]",
      "dest": "call_argument [39765,39774]"
    },
    {
      "src": "internal: internal [25243,25251]",
      "dest": "internal: internal [17554,17562]"
    },
    {
      "src": "call_argument [52113,52125]",
      "dest": "call_argument [35876,35888]"
    },
    {
      "src": "address: address [43353,43360]",
      "dest": "address: address [29843,29850]"
    },
    {
      "src": "identifier: borrowBalance [8448,8461]",
      "dest": "identifier: borrowBalance [5721,5734]"
    },
    {
      "src": "contract: contract [364,372]",
      "dest": "contract: contract [364,372]"
    },
    {
      "src": ",: , [34705,34706]",
      "dest": ",: , [21310,21311]"
    },
    {
      "src": "external: external [51475,51483]",
      "dest": "external: external [35238,35246]"
    },
    {
      "src": "primitive_type [63302,63306]",
      "dest": "primitive_type [46773,46777]"
    },
    {
      "src": "identifier: accountBorrows [40019,40033]",
      "dest": "identifier: accountBorrows [26720,26734]"
    },
    {
      "src": "identifier: FailureInfo [50745,50756]",
      "dest": "identifier: FailureInfo [34508,34519]"
    },
    {
      "src": "identifier: vars [40707,40711]",
      "dest": "identifier: vars [27167,27171]"
    },
    {
      "src": "call_expression [54885,54951]",
      "dest": "call_expression [38648,38714]"
    },
    {
      "src": "return: return [61452,61458]",
      "dest": "return: return [44923,44929]"
    },
    {
      "src": "address: address [5747,5754]",
      "dest": "address: address [3138,3145]"
    },
    {
      "src": "=: = [6516,6517]",
      "dest": "=: = [3907,3908]"
    },
    {
      "src": "return: return [53940,53946]",
      "dest": "return: return [37703,37709]"
    },
    {
      "src": "string_literal [46187,46209]",
      "dest": "string_literal [32677,32699]"
    },
    {
      "src": "member_expression [36569,36583]",
      "dest": "member_expression [23204,23218]"
    },
    {
      "src": "binary_expression [59238,59257]",
      "dest": "binary_expression [42884,42903]"
    },
    {
      "src": ".: . [41737,41738]",
      "dest": ".: . [28227,28228]"
    },
    {
      "src": "identifier: FailureInfo [19939,19950]",
      "dest": "identifier: FailureInfo [16053,16064]"
    },
    {
      "src": "type_name [37685,37692]",
      "dest": "type_name [24320,24327]"
    },
    {
      "src": "visibility [7645,7653]",
      "dest": "visibility [5036,5044]"
    },
    {
      "src": "function_definition [11464,12702]",
      "dest": "function_definition [9763,10600]"
    },
    {
      "src": ".: . [38013,38014]",
      "dest": ".: . [24648,24649]"
    },
    {
      "src": "address: address [45887,45894]",
      "dest": "address: address [32377,32384]"
    },
    {
      "src": "): ) [56779,56780]",
      "dest": "): ) [40542,40543]"
    },
    {
      "src": "(: ( [10637,10638]",
      "dest": "(: ( [9100,9101]"
    },
    {
      "src": "primitive_type [51803,51810]",
      "dest": "primitive_type [35566,35573]"
    },
    {
      "src": "call_expression [52562,52627]",
      "dest": "call_expression [36325,36390]"
    },
    {
      "src": ",: , [32631,32632]",
      "dest": ",: , [19569,19570]"
    },
    {
      "src": "public: public [15476,15482]",
      "dest": "public: public [12829,12835]"
    },
    {
      "src": "=: = [34835,34836]",
      "dest": "=: = [21440,21441]"
    },
    {
      "src": ",: , [61476,61477]",
      "dest": ",: , [44947,44948]"
    },
    {
      "src": "identifier: supplyRatePerBlock [9725,9743]",
      "dest": "identifier: supplyRatePerBlock [6690,6708]"
    },
    {
      "src": "call_argument [58362,58376]",
      "dest": "call_argument [42008,42022]"
    },
    {
      "src": "if: if [43668,43670]",
      "dest": "if: if [30158,30160]"
    },
    {
      "src": "identifier: owner [6946,6951]",
      "dest": "identifier: owner [4337,4342]"
    },
    {
      "src": "uint: uint [45217,45221]",
      "dest": "uint: uint [31707,31711]"
    },
    {
      "src": "identifier: fail [36726,36730]",
      "dest": "identifier: fail [23361,23365]"
    },
    {
      "src": "uint: uint [31935,31939]",
      "dest": "uint: uint [18873,18877]"
    },
    {
      "src": "identifier: error [31667,31672]",
      "dest": "identifier: error [18605,18610]"
    },
    {
      "src": "uint256: uint256 [6399,6406]",
      "dest": "uint256: uint256 [3790,3797]"
    },
    {
      "src": "call_argument [36020,36030]",
      "dest": "call_argument [22655,22665]"
    },
    {
      "src": "): ) [5811,5812]",
      "dest": "): ) [3202,3203]"
    },
    {
      "src": ".: . [61276,61277]",
      "dest": ".: . [44747,44748]"
    },
    {
      "src": "returns: returns [53483,53490]",
      "dest": "returns: returns [37246,37253]"
    },
    {
      "src": "): ) [58606,58607]",
      "dest": "): ) [42252,42253]"
    },
    {
      "src": "uint: uint [24389,24393]",
      "dest": "uint: uint [16700,16704]"
    }
  ],
  "actions": [
    {
      "action": "move-tree",
      "tree": "comment: /**      * @notice Transfer `tokens` tokens from `src` to `dst` by `spender`      * @dev Called by both `transfer` and `transferFrom` internally      * @param spender The address of the account performing the transfer      * @param src The address of the source account      * @param dst The address of the destination account      * @param tokens The number of tokens to transfer      * @return Whether or not the transfer succeeded      */ [2375,2816]",
      "parent": "contract_body [432,49576]",
      "at": 24
    },
    {
      "action": "move-tree",
      "tree": "comment: /**      * @notice Return the borrow balance of account based on stored data      * @param account The address whose balance should be calculated      * @return (error code, the calculated balance or 0 if error code is non-zero)      */ [11223,11459]",
      "parent": "contract_body [432,49576]",
      "at": 25
    },
    {
      "action": "move-tree",
      "tree": "comment: /**      * @notice Calculates the exchange rate from the underlying to the CToken      * @dev This function does not accrue interest before calculating the exchange rate      * @return (error code, calculated exchange rate scaled by 1e18)      */ [13552,13798]",
      "parent": "contract_body [432,49576]",
      "at": 32
    },
    {
      "action": "move-tree",
      "tree": "comment: /**      * @notice User supplies assets into the market and receives cTokens in exchange      * @dev Assumes interest has already been accrued up to the current block      * @param minter The address of the account which is supplying the assets      * @param mintAmount The amount of the underlying asset to supply      * @return (uint, uint) An error code (0=success, otherwise a failure, see ErrorReporter.sol), and the actual mint amount.      */ [20390,20839]",
      "parent": "contract_body [432,49576]",
      "at": 38
    },
    {
      "action": "move-tree",
      "tree": "comment: /**      * @notice User redeems cTokens in exchange for the underlying asset      * @dev Assumes interest has already been accrued up to the current block      * @param redeemer The address of the account which is redeeming the tokens      * @param redeemTokensIn The number of cTokens to redeem into underlying (only one of redeemTokensIn or redeemAmountIn may be non-zero)      * @param redeemAmountIn The number of underlying tokens to receive from redeeming cTokens (only one of redeemTokensIn or redeemAmountIn may be non-zero)      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)      */ [25956,26583]",
      "parent": "contract_body [432,49576]",
      "at": 104
    },
    {
      "action": "move-tree",
      "tree": "comment: /**      * @notice Transfers collateral tokens (this market) to the liquidator.      * @dev Called only during an in-kind liquidation, or by liquidateBorrow during the liquidation of another CToken.      *  Its absolutely critical to use msg.sender as the seizer cToken and not a parameter.      * @param seizerToken The contract seizing the collateral (i.e. borrowed cToken)      * @param liquidator The account receiving seized collateral      * @param borrower The account having collateral seized      * @param seizeTokens The number of cTokens to seize      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)      */ [47361,48013]",
      "parent": "contract_body [432,49576]",
      "at": 104
    },
    {
      "action": "update-node",
      "tree": "comment: /**      * @notice Transfer `tokens` tokens from `src` to `dst` by `spender`      * @dev Called by both `transfer` and `transferFrom` internally      * @param spender The address of the account performing the transfer      * @param src The address of the source account      * @param dst The address of the destination account      * @param tokens The number of tokens to transfer      * @return Whether or not the transfer succeeded      */ [2375,2816]",
      "label": "/**      * @notice Returns the estimated per-block borrow interest rate for this cToken after some change      * @return The borrow interest rate per block, scaled by 1e18      */"
    },
    {
      "action": "insert-tree",
      "tree": "function_definition [7053,7600]",
      "parent": "contract_body [432,49576]",
      "at": 24
    },
    {
      "action": "update-node",
      "tree": "comment: /**      * @notice Return the borrow balance of account based on stored data      * @param account The address whose balance should be calculated      * @return (error code, the calculated balance or 0 if error code is non-zero)      */ [11223,11459]",
      "label": "/**      * @notice Returns the estimated per-block supply interest rate for this cToken after some change      * @return The supply interest rate per block, scaled by 1e18      */"
    },
    {
      "action": "insert-node",
      "tree": "function_definition [7790,8361]",
      "parent": "contract_body [432,49576]",
      "at": 26
    },
    {
      "action": "update-node",
      "tree": "comment: /**      * @notice Calculates the exchange rate from the underlying to the CToken      * @dev This function does not accrue interest before calculating the exchange rate      * @return (error code, calculated exchange rate scaled by 1e18)      */ [13552,13798]",
      "label": "/**      * @notice Return the borrow balance of account based on stored data      * @param account The address whose balance should be calculated      * @return the calculated balance or 0 if error code is non-zero      */"
    },
    {
      "action": "update-node",
      "tree": "comment: /**      * @notice User supplies assets into the market and receives cTokens in exchange      * @dev Assumes interest has already been accrued up to the current block      * @param minter The address of the account which is supplying the assets      * @param mintAmount The amount of the underlying asset to supply      * @return (uint, uint) An error code (0=success, otherwise a failure, see ErrorReporter.sol), and the actual mint amount.      */ [20390,20839]",
      "label": "/**      * @notice Calculates the exchange rate from the underlying to the CToken      * @dev This function does not accrue interest before calculating the exchange rate      * @return calculated exchange rate scaled by 1e18      */"
    },
    {
      "action": "update-node",
      "tree": "comment: /**      * @notice User redeems cTokens in exchange for the underlying asset      * @dev Assumes interest has already been accrued up to the current block      * @param redeemer The address of the account which is redeeming the tokens      * @param redeemTokensIn The number of cTokens to redeem into underlying (only one of redeemTokensIn or redeemAmountIn may be non-zero)      * @param redeemAmountIn The number of underlying tokens to receive from redeeming cTokens (only one of redeemTokensIn or redeemAmountIn may be non-zero)      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)      */ [25956,26583]",
      "label": "/**      * @notice Transfer `tokens` tokens from `src` to `dst` by `spender`      * @dev Called by both `transfer` and `transferFrom` internally      */"
    },
    {
      "action": "insert-node",
      "tree": "function_definition [48025,48129]",
      "parent": "contract_body [432,49576]",
      "at": 100
    },
    {
      "action": "update-node",
      "tree": "comment: /**      * @notice Transfers collateral tokens (this market) to the liquidator.      * @dev Called only during an in-kind liquidation, or by liquidateBorrow during the liquidation of another CToken.      *  Its absolutely critical to use msg.sender as the seizer cToken and not a parameter.      * @param seizerToken The contract seizing the collateral (i.e. borrowed cToken)      * @param liquidator The account receiving seized collateral      * @param borrower The account having collateral seized      * @param seizeTokens The number of cTokens to seize      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)      */ [47361,48013]",
      "label": "/**      * @notice Get the account's cToken balances      */"
    },
    {
      "action": "insert-tree",
      "tree": "function_definition [48200,48280]",
      "parent": "contract_body [432,49576]",
      "at": 102
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @notice User supplies assets into the market and receives cTokens in exchange      * @dev Assumes interest has already been accrued up to the current block      */ [48286,48460]",
      "parent": "contract_body [432,49576]",
      "at": 103
    },
    {
      "action": "insert-node",
      "tree": "function_definition [48465,48547]",
      "parent": "contract_body [432,49576]",
      "at": 104
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @notice User redeems cTokens in exchange for the underlying asset      * @dev Assumes interest has already been accrued up to the current block      */ [48553,48715]",
      "parent": "contract_body [432,49576]",
      "at": 105
    },
    {
      "action": "insert-node",
      "tree": "function_definition [48720,48833]",
      "parent": "contract_body [432,49576]",
      "at": 106
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @notice Transfers collateral tokens (this market) to the liquidator.      * @dev Called only during an in-kind liquidation, or by liquidateBorrow during the liquidation of another CToken.      *  Its absolutely critical to use msg.sender as the seizer cToken and not a parameter.      */ [48839,49137]",
      "parent": "contract_body [432,49576]",
      "at": 107
    },
    {
      "action": "insert-node",
      "tree": "function_definition [49142,49266]",
      "parent": "contract_body [432,49576]",
      "at": 108
    },
    {
      "action": "insert-node",
      "tree": "function: function [7790,7798]",
      "parent": "function_definition [7790,8361]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: estimateSupplyRatePerBlockAfterChange [7799,7836]",
      "parent": "function_definition [7790,8361]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [7836,7837]",
      "parent": "function_definition [7790,8361]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "parameter [7837,7851]",
      "parent": "function_definition [7790,8361]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [7851,7852]",
      "parent": "function_definition [7790,8361]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "parameter [7853,7863]",
      "parent": "function_definition [7790,8361]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "): ) [7863,7864]",
      "parent": "function_definition [7790,8361]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "visibility [7865,7873]",
      "parent": "function_definition [7790,8361]",
      "at": 7
    },
    {
      "action": "insert-tree",
      "tree": "state_mutability [7874,7878]",
      "parent": "function_definition [7790,8361]",
      "at": 8
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [7879,7893]",
      "parent": "function_definition [7790,8361]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "function_body [7894,8361]",
      "parent": "function_definition [7790,8361]",
      "at": 10
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration_statement [11662,11687]",
      "parent": "function_body [9846,10600]",
      "at": 9
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration_statement [11696,11708]",
      "parent": "function_body [9846,10600]",
      "at": 9
    },
    {
      "action": "move-tree",
      "tree": "expression_statement [35145,35209]",
      "parent": "function_body [19310,21888]",
      "at": 10
    },
    {
      "action": "move-tree",
      "tree": "if_statement [38671,38861]",
      "parent": "function_body [24401,27492]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "function: function [48025,48033]",
      "parent": "function_definition [48025,48129]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: transferTokens [48034,48048]",
      "parent": "function_definition [48025,48129]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [48048,48049]",
      "parent": "function_definition [48025,48129]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "parameter [2845,2860]",
      "parent": "function_definition [48025,48129]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [48064,48065]",
      "parent": "function_definition [48025,48129]",
      "at": 4
    },
    {
      "action": "move-tree",
      "tree": "parameter [2862,2873]",
      "parent": "function_definition [48025,48129]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": ",: , [48077,48078]",
      "parent": "function_definition [48025,48129]",
      "at": 6
    },
    {
      "action": "move-tree",
      "tree": "parameter [2875,2886]",
      "parent": "function_definition [48025,48129]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": ",: , [48090,48091]",
      "parent": "function_definition [48025,48129]",
      "at": 8
    },
    {
      "action": "move-tree",
      "tree": "parameter [2888,2899]",
      "parent": "function_definition [48025,48129]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "): ) [48103,48104]",
      "parent": "function_definition [48025,48129]",
      "at": 10
    },
    {
      "action": "move-tree",
      "tree": "visibility [2901,2909]",
      "parent": "function_definition [48025,48129]",
      "at": 11
    },
    {
      "action": "move-tree",
      "tree": "return_type_definition [2910,2924]",
      "parent": "function_definition [48025,48129]",
      "at": 12
    },
    {
      "action": "insert-node",
      "tree": "function: function [48465,48473]",
      "parent": "function_definition [48465,48547]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: mintFresh [48474,48483]",
      "parent": "function_definition [48465,48547]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [48483,48484]",
      "parent": "function_definition [48465,48547]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "parameter [20863,20877]",
      "parent": "function_definition [48465,48547]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [48498,48499]",
      "parent": "function_definition [48465,48547]",
      "at": 4
    },
    {
      "action": "move-tree",
      "tree": "parameter [20879,20894]",
      "parent": "function_definition [48465,48547]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "): ) [48515,48516]",
      "parent": "function_definition [48465,48547]",
      "at": 6
    },
    {
      "action": "move-tree",
      "tree": "visibility [20896,20904]",
      "parent": "function_definition [48465,48547]",
      "at": 7
    },
    {
      "action": "move-tree",
      "tree": "return_type_definition [20905,20925]",
      "parent": "function_definition [48465,48547]",
      "at": 8
    },
    {
      "action": "insert-node",
      "tree": "function: function [48720,48728]",
      "parent": "function_definition [48720,48833]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: redeemFresh [48729,48740]",
      "parent": "function_definition [48720,48833]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [48740,48741]",
      "parent": "function_definition [48720,48833]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "parameter [26609,26633]",
      "parent": "function_definition [48720,48833]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [48765,48766]",
      "parent": "function_definition [48720,48833]",
      "at": 4
    },
    {
      "action": "move-tree",
      "tree": "parameter [26635,26654]",
      "parent": "function_definition [48720,48833]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": ",: , [48786,48787]",
      "parent": "function_definition [48720,48833]",
      "at": 6
    },
    {
      "action": "move-tree",
      "tree": "parameter [26656,26675]",
      "parent": "function_definition [48720,48833]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "): ) [48807,48808]",
      "parent": "function_definition [48720,48833]",
      "at": 8
    },
    {
      "action": "move-tree",
      "tree": "visibility [26677,26685]",
      "parent": "function_definition [48720,48833]",
      "at": 9
    },
    {
      "action": "move-tree",
      "tree": "return_type_definition [26686,26700]",
      "parent": "function_definition [48720,48833]",
      "at": 10
    },
    {
      "action": "insert-node",
      "tree": "function: function [49142,49150]",
      "parent": "function_definition [49142,49266]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: seizeInternal [49151,49164]",
      "parent": "function_definition [49142,49266]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [49164,49165]",
      "parent": "function_definition [49142,49266]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "parameter [48041,48060]",
      "parent": "function_definition [49142,49266]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [49184,49185]",
      "parent": "function_definition [49142,49266]",
      "at": 4
    },
    {
      "action": "move-tree",
      "tree": "parameter [48062,48080]",
      "parent": "function_definition [49142,49266]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": ",: , [49204,49205]",
      "parent": "function_definition [49142,49266]",
      "at": 6
    },
    {
      "action": "move-tree",
      "tree": "parameter [48082,48098]",
      "parent": "function_definition [49142,49266]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": ",: , [49222,49223]",
      "parent": "function_definition [49142,49266]",
      "at": 8
    },
    {
      "action": "move-tree",
      "tree": "parameter [48100,48116]",
      "parent": "function_definition [49142,49266]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "): ) [49240,49241]",
      "parent": "function_definition [49142,49266]",
      "at": 10
    },
    {
      "action": "move-tree",
      "tree": "visibility [48118,48126]",
      "parent": "function_definition [49142,49266]",
      "at": 11
    },
    {
      "action": "move-tree",
      "tree": "return_type_definition [48127,48141]",
      "parent": "function_definition [49142,49266]",
      "at": 12
    },
    {
      "action": "insert-node",
      "tree": "{: { [7894,7895]",
      "parent": "function_body [7894,8361]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration_statement [7904,7925]",
      "parent": "function_body [7894,8361]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration_statement [7934,7958]",
      "parent": "function_body [7894,8361]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "if_statement [7968,8237]",
      "parent": "function_body [7894,8361]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "return_statement [8247,8355]",
      "parent": "function_body [7894,8361]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "}: } [8360,8361]",
      "parent": "function_body [7894,8361]",
      "at": 5
    },
    {
      "action": "move-tree",
      "tree": "return_statement [13526,13540]",
      "parent": "function_body [9846,10600]",
      "at": 10
    },
    {
      "action": "insert-node",
      "tree": "return_statement [11254,11290]",
      "parent": "function_body [11244,11296]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "comment: /*          * Return if borrowAmount is zero.          * Put behind `borrowAllowed` for accuring potential COMP rewards.          */ [19600,19732]",
      "parent": "function_body [19310,21888]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "if_statement [19741,19882]",
      "parent": "function_body [19310,21888]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "comment: // unused function [21750,21768]",
      "parent": "function_body [19310,21888]",
      "at": 27
    },
    {
      "action": "insert-node",
      "tree": "comment: // comptroller.borrowVerify(address(this), borrower, borrowAmount); [21777,21844]",
      "parent": "function_body [19310,21888]",
      "at": 28
    },
    {
      "action": "insert-node",
      "tree": "comment: /*          * Return if repayAmount is zero.          * Put behind `repayBorrowAllowed` for accuring potential COMP rewards.          */ [24718,24854]",
      "parent": "function_body [24401,27492]",
      "at": 4
    },
    {
      "action": "move-tree",
      "tree": "expression_statement [33379,33455]",
      "parent": "function_body [24401,27492]",
      "at": 12
    },
    {
      "action": "insert-node",
      "tree": "comment: // unused function [27286,27304]",
      "parent": "function_body [24401,27492]",
      "at": 30
    },
    {
      "action": "insert-node",
      "tree": "comment: // comptroller.repayBorrowVerify(address(this), payer, borrower, vars.actualRepayAmount, vars.borrowerIndex); [27313,27422]",
      "parent": "function_body [24401,27492]",
      "at": 31
    },
    {
      "action": "insert-node",
      "tree": "comment: // unused function [32908,32926]",
      "parent": "function_body [29739,33133]",
      "at": 33
    },
    {
      "action": "insert-node",
      "tree": "comment: // comptroller.liquidateBorrowVerify(address(this), address(cTokenCollateral), liquidator, borrower, actualRepayAmount, seizeTokens); [32935,33068]",
      "parent": "function_body [29739,33133]",
      "at": 34
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [41193,41249]",
      "parent": "function_body [40209,41613]",
      "at": 11
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [43800,43853]",
      "parent": "function_body [42765,44221]",
      "at": 14
    },
    {
      "action": "move-tree",
      "tree": "call_expression [7786,7839]",
      "parent": "return_statement [5144,5206]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "call_expression [5673,5706]",
      "parent": "variable_declaration_statement [5652,5707]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "=: = [5735,5736]",
      "parent": "variable_declaration_statement [5716,5774]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "call_expression [11048,11084]",
      "parent": "variable_declaration_statement [5716,5774]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "=: = [5809,5810]",
      "parent": "variable_declaration_statement [5783,5840]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "call_expression [13387,13415]",
      "parent": "variable_declaration_statement [5783,5840]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "if: if [7968,7970]",
      "parent": "if_statement [7968,8237]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [7971,7972]",
      "parent": "if_statement [7968,8237]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "identifier: repay [7972,7977]",
      "parent": "if_statement [7968,8237]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [7977,7978]",
      "parent": "if_statement [7968,8237]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "block_statement [7979,8105]",
      "parent": "if_statement [7968,8237]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "else: else [8106,8110]",
      "parent": "if_statement [7968,8237]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "block_statement [8111,8237]",
      "parent": "if_statement [7968,8237]",
      "at": 6
    },
    {
      "action": "move-tree",
      "tree": "call_expression [8556,8592]",
      "parent": "return_statement [9480,9524]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "=: = [10446,10447]",
      "parent": "variable_declaration_statement [10421,10492]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "call_expression [12338,12384]",
      "parent": "variable_declaration_statement [10421,10492]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "=: = [10513,10514]",
      "parent": "variable_declaration_statement [10501,10571]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "call_expression [12503,12561]",
      "parent": "variable_declaration_statement [10501,10571]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "return: return [11254,11260]",
      "parent": "return_statement [11254,11290]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "call_expression [8740,8768]",
      "parent": "return_statement [11254,11290]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration [16415,16430]",
      "parent": "variable_declaration_statement [13748,13816]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "=: = [14328,14329]",
      "parent": "variable_declaration_statement [14296,14384]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "call_expression [17250,17308]",
      "parent": "variable_declaration_statement [14296,14384]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "=: = [14418,14419]",
      "parent": "variable_declaration_statement [14393,14475]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "call_expression [17542,17595]",
      "parent": "variable_declaration_statement [14393,14475]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "=: = [14505,14506]",
      "parent": "variable_declaration_statement [14484,14547]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "call_expression [17823,17865]",
      "parent": "variable_declaration_statement [14484,14547]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "=: = [14578,14579]",
      "parent": "variable_declaration_statement [14556,14682]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "call_expression [18091,18191]",
      "parent": "variable_declaration_statement [14556,14682]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "=: = [14711,14712]",
      "parent": "variable_declaration_statement [14691,14797]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "call_expression [18416,18498]",
      "parent": "variable_declaration_statement [14691,14797]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "if: if [19741,19743]",
      "parent": "if_statement [19741,19882]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [19744,19745]",
      "parent": "if_statement [19741,19882]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "binary_expression [19745,19762]",
      "parent": "if_statement [19741,19882]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [19762,19763]",
      "parent": "if_statement [19741,19882]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "block_statement [19764,19882]",
      "parent": "if_statement [19741,19882]",
      "at": 4
    },
    {
      "action": "move-tree",
      "tree": "assignment_expression [38586,38661]",
      "parent": "expression_statement [20609,20669]",
      "at": 0
    },
    {
      "action": "update-node",
      "tree": "identifier: mulScalarTruncate [7786,7803]",
      "label": "mul_ScalarTruncate"
    },
    {
      "action": "insert-node",
      "tree": "{: { [8111,8112]",
      "parent": "block_statement [8111,8237]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "expression_statement [8125,8169]",
      "parent": "block_statement [8111,8237]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [8182,8227]",
      "parent": "block_statement [8111,8237]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "}: } [8236,8237]",
      "parent": "block_statement [8111,8237]",
      "at": 3
    },
    {
      "action": "update-node",
      "tree": "identifier: mulUInt [12338,12345]",
      "label": "mul_"
    },
    {
      "action": "update-node",
      "tree": "identifier: divUInt [12503,12510]",
      "label": "div_"
    },
    {
      "action": "insert-node",
      "tree": "variable_declaration_statement [12077,12164]",
      "parent": "block_statement [11873,12306]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "variable_declaration_statement [12177,12263]",
      "parent": "block_statement [11873,12306]",
      "at": 4
    },
    {
      "action": "update-node",
      "tree": "identifier: subUInt [16434,16441]",
      "label": "sub_"
    },
    {
      "action": "update-node",
      "tree": "identifier: mulScalar [17250,17259]",
      "label": "mul_"
    },
    {
      "action": "update-node",
      "tree": "identifier: mulScalarTruncate [17542,17559]",
      "label": "mul_ScalarTruncate"
    },
    {
      "action": "update-node",
      "tree": "identifier: addUInt [17823,17830]",
      "label": "add_"
    },
    {
      "action": "move-tree",
      "tree": "type_name [28537,28541]",
      "parent": "variable_declaration [14556,14577]",
      "at": 0
    },
    {
      "action": "update-node",
      "tree": "identifier: mulScalarTruncateAddUInt [18091,18115]",
      "label": "mul_ScalarTruncateAddUInt"
    },
    {
      "action": "update-node",
      "tree": "identifier: mulScalarTruncateAddUInt [18416,18440]",
      "label": "mul_ScalarTruncateAddUInt"
    },
    {
      "action": "insert-node",
      "tree": "{: { [19764,19765]",
      "parent": "block_statement [19764,19882]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [19778,19831]",
      "parent": "block_statement [19764,19882]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "return_statement [4944,4972]",
      "parent": "block_statement [19764,19882]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "}: } [19881,19882]",
      "parent": "block_statement [19764,19882]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "member_expression [33394,33413]",
      "parent": "assignment_expression [20609,20668]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "member_expression [33668,33690]",
      "parent": "assignment_expression [20678,20742]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "member_expression [33957,33977]",
      "parent": "assignment_expression [20752,20807]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: repayAmount [24867,24878]",
      "parent": "binary_expression [24867,24883]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "==: == [24879,24881]",
      "parent": "binary_expression [24867,24883]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "number_literal: 0 [24882,24883]",
      "parent": "binary_expression [24867,24883]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [24899,24952]",
      "parent": "block_statement [24885,25008]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "return_statement [23897,23950]",
      "parent": "block_statement [24885,25008]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "member_expression [38601,38620]",
      "parent": "assignment_expression [25521,25580]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "member_expression [39980,40002]",
      "parent": "assignment_expression [26685,26759]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "member_expression [40199,40219]",
      "parent": "assignment_expression [26769,26834]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "assignment_expression [8125,8168]",
      "parent": "expression_statement [8125,8169]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "number_literal: 0 [10220,10221]",
      "parent": "return_statement [10213,10222]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "identifier: initialExchangeRateMantissa [11829,11856]",
      "parent": "return_statement [11822,11857]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration [14374,14407]",
      "parent": "variable_declaration_statement [12077,12164]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "=: = [12111,12112]",
      "parent": "variable_declaration_statement [12077,12164]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "call_expression [14532,14586]",
      "parent": "variable_declaration_statement [12077,12164]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration [2978,2990]",
      "parent": "variable_declaration_statement [12177,12263]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "=: = [12195,12196]",
      "parent": "variable_declaration_statement [12177,12263]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "call_expression [12197,12262]",
      "parent": "variable_declaration_statement [12177,12263]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "identifier: exchangeRate [12283,12295]",
      "parent": "return_statement [12276,12296]",
      "at": 1
    },
    {
      "action": "update-node",
      "tree": "identifier: addUInt [33694,33701]",
      "label": "add_"
    },
    {
      "action": "update-node",
      "tree": "identifier: addUInt [33981,33988]",
      "label": "add_"
    },
    {
      "action": "update-node",
      "tree": "identifier: subUInt [40006,40013]",
      "label": "sub_"
    },
    {
      "action": "update-node",
      "tree": "identifier: subUInt [40223,40230]",
      "label": "sub_"
    },
    {
      "action": "insert-node",
      "tree": "identifier: cashPriorNew [8125,8137]",
      "parent": "assignment_expression [8125,8168]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "=: = [8138,8139]",
      "parent": "assignment_expression [8125,8168]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "call_expression [8140,8168]",
      "parent": "assignment_expression [8125,8168]",
      "at": 2
    },
    {
      "action": "update-node",
      "tree": "identifier: addThenSubUInt [14532,14546]",
      "label": "sub_"
    },
    {
      "action": "insert-node",
      "tree": "call_argument [12118,12147]",
      "parent": "call_expression [12113,12163]",
      "at": 2
    },
    {
      "action": "update-node",
      "tree": "identifier: allowed [2983,2990]",
      "label": "exchangeRate"
    },
    {
      "action": "insert-node",
      "tree": "identifier: div_ [12197,12201]",
      "parent": "call_expression [12197,12262]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [12201,12202]",
      "parent": "call_expression [12197,12262]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "call_argument [14734,14762]",
      "parent": "call_expression [12197,12262]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": ",: , [12230,12231]",
      "parent": "call_expression [12197,12262]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [12232,12261]",
      "parent": "call_expression [12197,12262]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "): ) [12261,12262]",
      "parent": "call_expression [12197,12262]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "number_literal: 0 [24995,24996]",
      "parent": "tuple_expression [24972,24997]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "identifier: sub_ [8140,8144]",
      "parent": "call_expression [8140,8168]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [8144,8145]",
      "parent": "call_expression [8140,8168]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "call_argument [8145,8159]",
      "parent": "call_expression [8140,8168]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": ",: , [8159,8160]",
      "parent": "call_expression [8140,8168]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [8161,8167]",
      "parent": "call_expression [8140,8168]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "): ) [8167,8168]",
      "parent": "call_expression [8140,8168]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "call_expression [12118,12147]",
      "parent": "call_argument [12118,12147]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "call_expression [29873,29887]",
      "parent": "call_argument [8145,8159]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: add_ [12118,12122]",
      "parent": "call_expression [12118,12147]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [12122,12123]",
      "parent": "call_expression [12118,12147]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "call_argument [14547,14556]",
      "parent": "call_expression [12118,12147]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": ",: , [12132,12133]",
      "parent": "call_expression [12118,12147]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "call_argument [14558,14570]",
      "parent": "call_expression [12118,12147]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "): ) [12146,12147]",
      "parent": "call_expression [12118,12147]",
      "at": 5
    },
    {
      "action": "delete-node",
      "tree": "function: function [2821,2829]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: transferTokens [2830,2844]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [2844,2845]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [2860,2861]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [2873,2874]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [2886,2887]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [2899,2900]"
    },
    {
      "action": "delete-node",
      "tree": "{: { [2925,2926]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /* Fail if transfer not allowed */ [2935,2969]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [2991,2992]"
    },
    {
      "action": "delete-tree",
      "tree": "call_expression [2993,3053]"
    },
    {
      "action": "delete-node",
      "tree": "variable_declaration_statement [2978,3054]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [3063,3205]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /* Do not allow self-transfers */ [3215,3248]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [3257,3360]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /* Get the allowance, infinite for the account owner */ [3370,3425]"
    },
    {
      "action": "delete-tree",
      "tree": "variable_declaration_statement [3434,3461]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [3470,3626]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /* Do the calculations, checking for {under,over}flow */ [3636,3692]"
    },
    {
      "action": "delete-tree",
      "tree": "variable_declaration_statement [3701,3719]"
    },
    {
      "action": "delete-tree",
      "tree": "variable_declaration_statement [3728,3746]"
    },
    {
      "action": "delete-tree",
      "tree": "variable_declaration_statement [3755,3773]"
    },
    {
      "action": "delete-tree",
      "tree": "variable_declaration_statement [3782,3800]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [3810,3871]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [3880,4003]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [4013,4075]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [4084,4206]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [4216,4278]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [4287,4407]"
    },
    {
      "action": "delete-node",
      "tree": "comment: ///////////////////////// [4417,4442]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // EFFECTS & INTERACTIONS [4451,4476]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // (No safe failures beyond this point) [4485,4524]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [4534,4568]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [4577,4611]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /* Eat some of the allowance (if necessary) */ [4621,4667]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [4676,4783]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /* We emit a Transfer event */ [4793,4823]"
    },
    {
      "action": "delete-tree",
      "tree": "emit_statement [4832,4864]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [4874,4934]"
    },
    {
      "action": "delete-node",
      "tree": "}: } [4977,4978]"
    },
    {
      "action": "delete-node",
      "tree": "function_body [2925,4978]"
    },
    {
      "action": "delete-node",
      "tree": "function_definition [2821,4978]"
    },
    {
      "action": "delete-tree",
      "tree": "variable_declaration_tuple [7753,7783]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [7784,7785]"
    },
    {
      "action": "delete-node",
      "tree": "variable_declaration_statement [7753,7840]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [7849,7920]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: balance [7936,7943]"
    },
    {
      "action": "delete-tree",
      "tree": "array_access [8411,8433]"
    },
    {
      "action": "delete-tree",
      "tree": "variable_declaration_statement [8507,8522]"
    },
    {
      "action": "delete-tree",
      "tree": "tuple_expression [8532,8553]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [8554,8555]"
    },
    {
      "action": "delete-node",
      "tree": "assignment_expression [8532,8592]"
    },
    {
      "action": "delete-node",
      "tree": "expression_statement [8532,8593]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [8602,8699]"
    },
    {
      "action": "delete-tree",
      "tree": "tuple_expression [8709,8737]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [8738,8739]"
    },
    {
      "action": "delete-node",
      "tree": "assignment_expression [8709,8768]"
    },
    {
      "action": "delete-node",
      "tree": "expression_statement [8709,8769]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [8778,8875]"
    },
    {
      "action": "delete-tree",
      "tree": "variable_declaration_tuple [11017,11045]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [11046,11047]"
    },
    {
      "action": "delete-node",
      "tree": "variable_declaration_statement [11017,11085]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [11094,11188]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: result [11204,11210]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [11541,11550]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [11550,11551]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /* Note: we do not assert that the market is up to date */ [11568,11626]"
    },
    {
      "action": "delete-tree",
      "tree": "variable_declaration_statement [11635,11653]"
    },
    {
      "action": "delete-tree",
      "tree": "tuple_expression [12082,12105]"
    },
    {
      "action": "delete-tree",
      "tree": "tuple_expression [12305,12335]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [12336,12337]"
    },
    {
      "action": "delete-node",
      "tree": "assignment_expression [12305,12384]"
    },
    {
      "action": "delete-node",
      "tree": "expression_statement [12305,12385]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [12394,12473]"
    },
    {
      "action": "delete-tree",
      "tree": "tuple_expression [12483,12500]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [12501,12502]"
    },
    {
      "action": "delete-node",
      "tree": "assignment_expression [12483,12561]"
    },
    {
      "action": "delete-node",
      "tree": "expression_statement [12483,12562]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [12571,12650]"
    },
    {
      "action": "delete-tree",
      "tree": "return_statement [12660,12696]"
    },
    {
      "action": "delete-tree",
      "tree": "variable_declaration_tuple [13356,13384]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [13385,13386]"
    },
    {
      "action": "delete-node",
      "tree": "variable_declaration_statement [13356,13416]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [13425,13517]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [13864,13873]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [13873,13874]"
    },
    {
      "action": "delete-tree",
      "tree": "tuple_expression [14104,14153]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [14570,14571]"
    },
    {
      "action": "delete-node",
      "tree": "variable_declaration_statement [14374,14408]"
    },
    {
      "action": "delete-tree",
      "tree": "variable_declaration_statement [14421,14445]"
    },
    {
      "action": "delete-tree",
      "tree": "variable_declaration_statement [14458,14476]"
    },
    {
      "action": "delete-tree",
      "tree": "tuple_expression [14490,14529]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [14530,14531]"
    },
    {
      "action": "delete-node",
      "tree": "assignment_expression [14490,14586]"
    },
    {
      "action": "delete-node",
      "tree": "expression_statement [14490,14587]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [14600,14687]"
    },
    {
      "action": "delete-tree",
      "tree": "tuple_expression [14701,14724]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [14725,14726]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: getExp [14727,14733]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [14733,14734]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [14762,14763]"
    },
    {
      "action": "delete-tree",
      "tree": "call_argument [14764,14776]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [14776,14777]"
    },
    {
      "action": "delete-node",
      "tree": "call_expression [14727,14777]"
    },
    {
      "action": "delete-node",
      "tree": "assignment_expression [14701,14777]"
    },
    {
      "action": "delete-node",
      "tree": "expression_statement [14701,14778]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [14791,14878]"
    },
    {
      "action": "delete-tree",
      "tree": "tuple_expression [14899,14942]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [16395,16396]"
    },
    {
      "action": "delete-tree",
      "tree": "variable_declaration [16396,16413]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [16413,16414]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [16430,16431]"
    },
    {
      "action": "delete-node",
      "tree": "variable_declaration_tuple [16395,16431]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [16496,16570]"
    },
    {
      "action": "delete-tree",
      "tree": "type_name [17155,17159]"
    },
    {
      "action": "delete-tree",
      "tree": "tuple_expression [17216,17247]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [17248,17249]"
    },
    {
      "action": "delete-node",
      "tree": "assignment_expression [17216,17308]"
    },
    {
      "action": "delete-node",
      "tree": "expression_statement [17216,17309]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [17318,17499]"
    },
    {
      "action": "delete-tree",
      "tree": "tuple_expression [17509,17539]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [17540,17541]"
    },
    {
      "action": "delete-node",
      "tree": "assignment_expression [17509,17595]"
    },
    {
      "action": "delete-node",
      "tree": "expression_statement [17509,17596]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [17605,17784]"
    },
    {
      "action": "delete-tree",
      "tree": "tuple_expression [17794,17820]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [17821,17822]"
    },
    {
      "action": "delete-node",
      "tree": "assignment_expression [17794,17865]"
    },
    {
      "action": "delete-node",
      "tree": "expression_statement [17794,17866]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [17875,18051]"
    },
    {
      "action": "delete-tree",
      "tree": "tuple_expression [18061,18088]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [18089,18090]"
    },
    {
      "action": "delete-node",
      "tree": "assignment_expression [18061,18191]"
    },
    {
      "action": "delete-node",
      "tree": "expression_statement [18061,18192]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [18201,18378]"
    },
    {
      "action": "delete-tree",
      "tree": "tuple_expression [18388,18413]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [18414,18415]"
    },
    {
      "action": "delete-node",
      "tree": "assignment_expression [18388,18498]"
    },
    {
      "action": "delete-node",
      "tree": "expression_statement [18388,18499]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [18508,18683]"
    },
    {
      "action": "delete-tree",
      "tree": "struct_declaration [20159,20384]"
    },
    {
      "action": "delete-node",
      "tree": "function: function [20844,20852]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: mintFresh [20853,20862]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [20862,20863]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [20877,20878]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [20894,20895]"
    },
    {
      "action": "delete-node",
      "tree": "{: { [20926,20927]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /* Fail if mint not allowed */ [20936,20966]"
    },
    {
      "action": "delete-tree",
      "tree": "variable_declaration_statement [20975,21049]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [21058,21201]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /* Verify market's block number equals current block number */ [21211,21273]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [21282,21425]"
    },
    {
      "action": "delete-tree",
      "tree": "variable_declaration_statement [21435,21461]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [21471,21544]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [21553,21722]"
    },
    {
      "action": "delete-node",
      "tree": "comment: ///////////////////////// [21732,21757]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // EFFECTS & INTERACTIONS [21766,21791]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // (No safe failures beyond this point) [21800,21839]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /*          *  We call `doTransferIn` for the minter and the mintAmount.          *  Note: The cToken must handle variations between ERC-20 and ETH underlying.          *  `doTransferIn` reverts if anything goes wrong, since we can't be sure if          *  side-effects occurred. The function returns the amount actually transferred,          *  in case of a fee. On success, the cToken holds an additional `actualMintAmount`          *  of cash.          */ [21849,22307]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [22316,22373]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /*          * We get the current exchange rate and calculate the number of cTokens to be minted:          *  mintTokens = actualMintAmount / exchangeRate          */ [22383,22548]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [22558,22682]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [22691,22771]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /*          * We calculate the new total supply of cTokens and minter token balance, checking for overflow:          *  totalSupplyNew = totalSupply + mintTokens          *  accountTokensNew = accountTokens[minter] + mintTokens          */ [22781,23020]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [23029,23105]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [23114,23202]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [23212,23300]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [23309,23400]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /* We write previously calculated values into storage */ [23410,23466]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [23475,23509]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [23518,23564]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /* We emit a Mint event, and a Transfer event */ [23574,23622]"
    },
    {
      "action": "delete-tree",
      "tree": "emit_statement [23631,23689]"
    },
    {
      "action": "delete-tree",
      "tree": "emit_statement [23698,23752]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /* We call the defense hook */ [23762,23792]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [23801,23887]"
    },
    {
      "action": "delete-node",
      "tree": "}: } [23955,23956]"
    },
    {
      "action": "delete-node",
      "tree": "function_body [20926,23956]"
    },
    {
      "action": "delete-node",
      "tree": "function_definition [20844,23956]"
    },
    {
      "action": "delete-tree",
      "tree": "struct_declaration [25725,25950]"
    },
    {
      "action": "delete-node",
      "tree": "function: function [26588,26596]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: redeemFresh [26597,26608]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [26608,26609]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [26633,26634]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [26654,26655]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [26675,26676]"
    },
    {
      "action": "delete-node",
      "tree": "{: { [26701,26702]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [26711,26819]"
    },
    {
      "action": "delete-tree",
      "tree": "variable_declaration_statement [26829,26857]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /* exchangeRate = invoke Exchange Rate Stored() */ [26867,26917]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [26926,26999]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [27008,27174]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /* If redeemTokensIn > 0: */ [27184,27212]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [27221,28486]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /* Fail if redeem not allowed */ [28496,28528]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: allowed [28542,28549]"
    },
    {
      "action": "delete-node",
      "tree": "variable_declaration [28537,28549]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [28550,28551]"
    },
    {
      "action": "delete-tree",
      "tree": "call_expression [28552,28621]"
    },
    {
      "action": "delete-node",
      "tree": "variable_declaration_statement [28537,28622]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [28631,28771]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /* Verify market's block number equals current block number */ [28781,28843]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [28852,28992]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /*          * We calculate the new total supply and redeemer balance, checking for underflow:          *  totalSupplyNew = totalSupply - redeemTokens          *  accountTokensNew = accountTokens[redeemer] - redeemTokens          */ [29002,29233]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [29242,29320]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [29329,29505]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [29515,29607]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [29616,29795]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /* Fail gracefully if protocol has insufficient cash */ [29805,29860]"
    },
    {
      "action": "delete-node",
      "tree": "if: if [29869,29871]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [29872,29873]"
    },
    {
      "action": "delete-node",
      "tree": "<: < [29888,29889]"
    },
    {
      "action": "delete-tree",
      "tree": "member_expression [29890,29907]"
    },
    {
      "action": "delete-node",
      "tree": "binary_expression [29873,29907]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [29907,29908]"
    },
    {
      "action": "delete-tree",
      "tree": "block_statement [29909,30022]"
    },
    {
      "action": "delete-node",
      "tree": "if_statement [29869,30022]"
    },
    {
      "action": "delete-node",
      "tree": "comment: ///////////////////////// [30032,30057]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // EFFECTS & INTERACTIONS [30066,30091]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // (No safe failures beyond this point) [30100,30139]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /*          * We invoke doTransferOut for the redeemer and the redeemAmount.          *  Note: The cToken must handle variations between ERC-20 and ETH underlying.          *  On success, the cToken has redeemAmount less of cash.          *  doTransferOut reverts if anything goes wrong, since we can't be sure if side effects occurred.          */ [30149,30497]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [30506,30549]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /* We write previously calculated values into storage */ [30559,30615]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [30624,30658]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [30667,30715]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /* We emit a Transfer event, and a Redeem event */ [30725,30775]"
    },
    {
      "action": "delete-tree",
      "tree": "emit_statement [30784,30842]"
    },
    {
      "action": "delete-tree",
      "tree": "emit_statement [30851,30911]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /* We call the defense hook */ [30921,30951]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [30960,31048]"
    },
    {
      "action": "delete-tree",
      "tree": "return_statement [31058,31086]"
    },
    {
      "action": "delete-node",
      "tree": "}: } [31091,31092]"
    },
    {
      "action": "delete-node",
      "tree": "function_body [26701,31092]"
    },
    {
      "action": "delete-node",
      "tree": "function_definition [26588,31092]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [38586,38587]"
    },
    {
      "action": "delete-tree",
      "tree": "member_expression [38587,38599]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [38599,38600]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [38620,38621]"
    },
    {
      "action": "delete-node",
      "tree": "tuple_expression [38586,38621]"
    },
    {
      "action": "delete-tree",
      "tree": "call_expression [35145,35208]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [33464,33643]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [33653,33654]"
    },
    {
      "action": "delete-tree",
      "tree": "member_expression [33654,33666]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [33666,33667]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [33690,33691]"
    },
    {
      "action": "delete-node",
      "tree": "tuple_expression [33653,33691]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [33746,33932]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [33942,33943]"
    },
    {
      "action": "delete-tree",
      "tree": "member_expression [33943,33955]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [33955,33956]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [33977,33978]"
    },
    {
      "action": "delete-node",
      "tree": "tuple_expression [33942,33978]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [34026,34203]"
    },
    {
      "action": "delete-tree",
      "tree": "member_expression [38675,38687]"
    },
    {
      "action": "delete-node",
      "tree": "!=: != [38688,38690]"
    },
    {
      "action": "delete-tree",
      "tree": "member_expression [38691,38709]"
    },
    {
      "action": "delete-tree",
      "tree": "member_expression [23927,23948]"
    },
    {
      "action": "delete-tree",
      "tree": "return_statement [38725,38851]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [33379,33380]"
    },
    {
      "action": "delete-tree",
      "tree": "member_expression [33380,33392]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [33392,33393]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [33413,33414]"
    },
    {
      "action": "delete-node",
      "tree": "tuple_expression [33379,33414]"
    },
    {
      "action": "delete-node",
      "tree": "expression_statement [38586,38662]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [39965,39966]"
    },
    {
      "action": "delete-tree",
      "tree": "member_expression [39966,39978]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [39978,39979]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [40002,40003]"
    },
    {
      "action": "delete-node",
      "tree": "tuple_expression [39965,40003]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [40068,40174]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [40184,40185]"
    },
    {
      "action": "delete-tree",
      "tree": "member_expression [40185,40197]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [40197,40198]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [40219,40220]"
    },
    {
      "action": "delete-node",
      "tree": "tuple_expression [40184,40220]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [40278,40375]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [40826,40932]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [46418,46548]"
    },
    {
      "action": "delete-node",
      "tree": "function: function [48018,48026]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: seizeInternal [48027,48040]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [48040,48041]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [48060,48061]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [48080,48081]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [48098,48099]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [48116,48117]"
    },
    {
      "action": "delete-tree",
      "tree": "function_body [48142,50111]"
    },
    {
      "action": "delete-node",
      "tree": "function_definition [48018,50111]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [57430,57481]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /* Revert on overflow */ [57491,57515]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [57524,57603]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [60154,60202]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // We checked reduceAmount <= totalReserves above, so this should never revert. [60211,60290]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [60299,60382]"
    }
  ]
}