{
  "matches": [
    {
      "src": "function_definition [2732,3300]",
      "dest": "function_definition [2732,3300]"
    },
    {
      "src": "identifier: initializationSentinel [2741,2763]",
      "dest": "identifier: initializationSentinel [2741,2763]"
    },
    {
      "src": "{: { [2353,2354]",
      "dest": "{: { [2353,2354]"
    },
    {
      "src": "=: = [770,771]",
      "dest": "=: = [770,771]"
    },
    {
      "src": "identifier: id [2367,2369]",
      "dest": "identifier: id [2367,2369]"
    },
    {
      "src": "string_literal [772,779]",
      "dest": "string_literal [772,779]"
    },
    {
      "src": "==: == [3276,3278]",
      "dest": "==: == [3276,3278]"
    },
    {
      "src": "number_literal: 0 [3131,3132]",
      "dest": "number_literal: 0 [3131,3132]"
    },
    {
      "src": "): ) [2051,2052]",
      "dest": "): ) [2051,2052]"
    },
    {
      "src": "number_literal: 4 [2433,2434]",
      "dest": "number_literal: 4 [2433,2434]"
    },
    {
      "src": "}: } [2725,2726]",
      "dest": "}: } [2725,2726]"
    },
    {
      "src": "=: = [2824,2825]",
      "dest": "=: = [2824,2825]"
    },
    {
      "src": "binary_expression [2254,2264]",
      "dest": "binary_expression [2254,2264]"
    },
    {
      "src": "uint256: uint256 [2092,2099]",
      "dest": "uint256: uint256 [2092,2099]"
    },
    {
      "src": "identifier: section [1959,1966]",
      "dest": "identifier: section [1959,1966]"
    },
    {
      "src": "assignment_expression [2197,2233]",
      "dest": "assignment_expression [2197,2233]"
    },
    {
      "src": "number_literal: 0x2010501100000010050000002511000000220005410030200200200000552010 [1027,1093]",
      "dest": "number_literal: 0x2010501100000010050000002511000000220005410030200200200000552010 [1027,1093]"
    },
    {
      "src": "): ) [1530,1531]",
      "dest": "): ) [1530,1531]"
    },
    {
      "src": "primitive_type [2799,2805]",
      "dest": "primitive_type [2799,2805]"
    },
    {
      "src": "identifier: MainDispatcher [718,732]",
      "dest": "identifier: MainDispatcher [718,732]"
    },
    {
      "src": "(: ( [1740,1741]",
      "dest": "(: ( [1740,1741]"
    },
    {
      "src": "==: == [1902,1904]",
      "dest": "==: == [1902,1904]"
    },
    {
      "src": "identifier: rollupVaultRoot [3112,3127]",
      "dest": "identifier: rollupVaultRoot [3112,3127]"
    },
    {
      "src": "call_argument [3231,3241]",
      "dest": "call_argument [3231,3241]"
    },
    {
      "src": "uint256: uint256 [1200,1207]",
      "dest": "uint256: uint256 [1200,1207]"
    },
    {
      "src": "(: ( [3004,3005]",
      "dest": "(: ( [3004,3005]"
    },
    {
      "src": "identifier: id [2618,2620]",
      "dest": "identifier: id [2618,2620]"
    },
    {
      "src": "solidity_version_comparison_operator [651,653]",
      "dest": "solidity_version_comparison_operator [651,653]"
    },
    {
      "src": "}: } [2330,2331]",
      "dest": "}: } [2330,2331]"
    },
    {
      "src": "): ) [1748,1749]",
      "dest": "): ) [1748,1749]"
    },
    {
      "src": "\": \" [2623,2624]",
      "dest": "\": \" [2623,2624]"
    },
    {
      "src": "string [669,689]",
      "dest": "string [669,689]"
    },
    {
      "src": "=: = [2370,2371]",
      "dest": "=: = [2370,2371]"
    },
    {
      "src": "if_statement [2588,2720]",
      "dest": "if_statement [2588,2720]"
    },
    {
      "src": "==: == [3128,3130]",
      "dest": "==: == [3128,3130]"
    },
    {
      "src": "is: is [715,717]",
      "dest": "is: is [715,717]"
    },
    {
      "src": "function_body [1750,2059]",
      "dest": "function_body [1750,2059]"
    },
    {
      "src": "{: { [1973,1974]",
      "dest": "{: { [1973,1974]"
    },
    {
      "src": "primitive_type [1523,1530]",
      "dest": "primitive_type [1523,1530]"
    },
    {
      "src": "==: == [3225,3227]",
      "dest": "==: == [3225,3227]"
    },
    {
      "src": "binary_expression [1764,1776]",
      "dest": "binary_expression [1764,1776]"
    },
    {
      "src": "block_statement [1843,1884]",
      "dest": "block_statement [1843,1884]"
    },
    {
      "src": "string: string [2799,2805]",
      "dest": "string: string [2799,2805]"
    },
    {
      "src": "string_literal [2623,2652]",
      "dest": "string_literal [2623,2652]"
    },
    {
      "src": "\": \" [2402,2403]",
      "dest": "\": \" [2402,2403]"
    },
    {
      "src": "string: string [739,745]",
      "dest": "string: string [739,745]"
    },
    {
      "src": "==: == [2598,2600]",
      "dest": "==: == [2598,2600]"
    },
    {
      "src": "contract_declaration [692,3302]",
      "dest": "contract_declaration [692,3302]"
    },
    {
      "src": "if: if [1955,1957]",
      "dest": "if: if [1955,1957]"
    },
    {
      "src": "primitive_type [1692,1699]",
      "dest": "primitive_type [1692,1699]"
    },
    {
      "src": "(: ( [3111,3112]",
      "dest": "(: ( [3111,3112]"
    },
    {
      "src": "): ) [2708,2709]",
      "dest": "): ) [2708,2709]"
    },
    {
      "src": "else: else [2583,2587]",
      "dest": "else: else [2583,2587]"
    },
    {
      "src": "call_expression [3155,3197]",
      "dest": "call_expression [3155,3197]"
    },
    {
      "src": "identifier: id [2280,2282]",
      "dest": "identifier: id [2280,2282]"
    },
    {
      "src": "comment: // I.e. it can run only when the state is still empty. [2934,2988]",
      "dest": "comment: // I.e. it can run only when the state is still empty. [2934,2988]"
    },
    {
      "src": "block_statement [1973,2014]",
      "dest": "block_statement [1973,2014]"
    },
    {
      "src": "\": \" [2826,2827]",
      "dest": "\": \" [2826,2827]"
    },
    {
      "src": ",: , [3027,3028]",
      "dest": ",: , [3027,3028]"
    },
    {
      "src": "parameter [2092,2105]",
      "dest": "parameter [2092,2105]"
    },
    {
      "src": "expression_statement [2280,2321]",
      "dest": "expression_statement [2280,2321]"
    },
    {
      "src": "state_variable_declaration [1301,1397]",
      "dest": "state_variable_declaration [1301,1397]"
    },
    {
      "src": "override_specifier [2780,2788]",
      "dest": "override_specifier [2780,2788]"
    },
    {
      "src": "expression_statement [3207,3243]",
      "dest": "expression_statement [3207,3243]"
    },
    {
      "src": "=: = [2283,2284]",
      "dest": "=: = [2283,2284]"
    },
    {
      "src": "identifier: orderRoot [3215,3224]",
      "dest": "identifier: orderRoot [3215,3224]"
    },
    {
      "src": "expression_statement [2197,2234]",
      "dest": "expression_statement [2197,2234]"
    },
    {
      "src": "(: ( [1488,1489]",
      "dest": "(: ( [1488,1489]"
    },
    {
      "src": "comment: // Salt for a 8 bit unique spread of all relevant selectors. Pre-caclulated. [786,862]",
      "dest": "comment: // Salt for a 8 bit unique spread of all relevant selectors. Pre-caclulated. [786,862]"
    },
    {
      "src": "): ) [1623,1624]",
      "dest": "): ) [1623,1624]"
    },
    {
      "src": "function: function [1665,1673]",
      "dest": "function: function [1665,1673]"
    },
    {
      "src": "expression_statement [3050,3095]",
      "dest": "expression_statement [3050,3095]"
    },
    {
      "src": "=: = [2200,2201]",
      "dest": "=: = [2200,2201]"
    },
    {
      "src": "return_statement [1635,1653]",
      "dest": "return_statement [1635,1653]"
    },
    {
      "src": "visibility [1709,1717]",
      "dest": "visibility [1709,1717]"
    },
    {
      "src": "(: ( [1522,1523]",
      "dest": "(: ( [1522,1523]"
    },
    {
      "src": "return_type_definition [1732,1749]",
      "dest": "return_type_definition [1732,1749]"
    },
    {
      "src": "else: else [2332,2336]",
      "dest": "else: else [2332,2336]"
    },
    {
      "src": "number_literal: 3 [1970,1971]",
      "dest": "number_literal: 3 [1970,1971]"
    },
    {
      "src": "memory: memory [2806,2812]",
      "dest": "memory: memory [2806,2812]"
    },
    {
      "src": "binary_expression [3112,3132]",
      "dest": "binary_expression [3112,3132]"
    },
    {
      "src": "uint256: uint256 [1523,1530]",
      "dest": "uint256: uint256 [1523,1530]"
    },
    {
      "src": "function_definition [1665,2059]",
      "dest": "function_definition [1665,2059]"
    },
    {
      "src": "string [2202,2233]",
      "dest": "string [2202,2233]"
    },
    {
      "src": "else: else [1820,1824]",
      "dest": "else: else [1820,1824]"
    },
    {
      "src": "call_expression [3104,3145]",
      "dest": "call_expression [3104,3145]"
    },
    {
      "src": "): ) [1906,1907]",
      "dest": "): ) [1906,1907]"
    },
    {
      "src": "number_literal: 6 [1549,1550]",
      "dest": "number_literal: 6 [1549,1550]"
    },
    {
      "src": "constant: constant [1309,1317]",
      "dest": "constant: constant [1309,1317]"
    },
    {
      "src": "\": \" [2486,2487]",
      "dest": "\": \" [2486,2487]"
    },
    {
      "src": "\": \" [772,773]",
      "dest": "\": \" [772,773]"
    },
    {
      "src": "number_literal: 0 [3026,3027]",
      "dest": "number_literal: 0 [3026,3027]"
    },
    {
      "src": ",: , [3184,3185]",
      "dest": ",: , [3184,3185]"
    },
    {
      "src": "if_statement [1890,2014]",
      "dest": "if_statement [1890,2014]"
    },
    {
      "src": "\": \" [778,779]",
      "dest": "\": \" [778,779]"
    },
    {
      "src": "==: == [2347,2349]",
      "dest": "==: == [2347,2349]"
    },
    {
      "src": "state_variable_declaration [1099,1195]",
      "dest": "state_variable_declaration [1099,1195]"
    },
    {
      "src": "string [2539,2571]",
      "dest": "string [2539,2571]"
    },
    {
      "src": "primitive_type [1099,1106]",
      "dest": "primitive_type [1099,1106]"
    },
    {
      "src": "==: == [1837,1839]",
      "dest": "==: == [1837,1839]"
    },
    {
      "src": "binary_expression [2508,2518]",
      "dest": "binary_expression [2508,2518]"
    },
    {
      "src": "{: { [2266,2267]",
      "dest": "{: { [2266,2267]"
    },
    {
      "src": "type_name [1616,1623]",
      "dest": "type_name [1616,1623]"
    },
    {
      "src": "identifier: index [2508,2513]",
      "dest": "identifier: index [2508,2513]"
    },
    {
      "src": "\": \" [669,670]",
      "dest": "\": \" [669,670]"
    },
    {
      "src": "function_definition [1461,1557]",
      "dest": "function_definition [1461,1557]"
    },
    {
      "src": "override_specifier [2121,2129]",
      "dest": "override_specifier [2121,2129]"
    },
    {
      "src": "call_argument [3282,3292]",
      "dest": "call_argument [3282,3292]"
    },
    {
      "src": "uint256: uint256 [1616,1623]",
      "dest": "uint256: uint256 [1616,1623]"
    },
    {
      "src": "identifier: index [2341,2346]",
      "dest": "identifier: index [2341,2346]"
    },
    {
      "src": "expression_statement [3252,3294]",
      "dest": "expression_statement [3252,3294]"
    },
    {
      "src": "visibility [746,752]",
      "dest": "visibility [746,752]"
    },
    {
      "src": "\": \" [2372,2373]",
      "dest": "\": \" [2372,2373]"
    },
    {
      "src": "block_statement [2604,2663]",
      "dest": "block_statement [2604,2663]"
    },
    {
      "src": "identifier: IDX_MAP_0 [1015,1024]",
      "dest": "identifier: IDX_MAP_0 [1015,1024]"
    },
    {
      "src": "(: ( [2507,2508]",
      "dest": "(: ( [2507,2508]"
    },
    {
      "src": "string: string [2139,2145]",
      "dest": "string: string [2139,2145]"
    },
    {
      "src": "\": \" [2651,2652]",
      "dest": "\": \" [2651,2652]"
    },
    {
      "src": "): ) [2764,2765]",
      "dest": "): ) [2764,2765]"
    },
    {
      "src": "(: ( [1615,1616]",
      "dest": "(: ( [1615,1616]"
    },
    {
      "src": "function_body [1532,1557]",
      "dest": "function_body [1532,1557]"
    },
    {
      "src": "(: ( [1581,1582]",
      "dest": "(: ( [1581,1582]"
    },
    {
      "src": "override: override [1598,1606]",
      "dest": "override: override [1598,1606]"
    },
    {
      "src": "string_literal [2539,2571]",
      "dest": "string_literal [2539,2571]"
    },
    {
      "src": "parameter [1692,1707]",
      "dest": "parameter [1692,1707]"
    },
    {
      "src": "override: override [1723,1731]",
      "dest": "override: override [1723,1731]"
    },
    {
      "src": "(: ( [2689,2690]",
      "dest": "(: ( [2689,2690]"
    },
    {
      "src": "number_literal: 2 [1905,1906]",
      "dest": "number_literal: 2 [1905,1906]"
    },
    {
      "src": "number_literal: 5 [2517,2518]",
      "dest": "number_literal: 5 [2517,2518]"
    },
    {
      "src": "import: import [662,668]",
      "dest": "import: import [662,668]"
    },
    {
      "src": "parameter [1616,1623]",
      "dest": "parameter [1616,1623]"
    },
    {
      "src": "state_mutability [1718,1722]",
      "dest": "state_mutability [1718,1722]"
    },
    {
      "src": "identifier: section [1829,1836]",
      "dest": "identifier: section [1829,1836]"
    },
    {
      "src": "): ) [2181,2182]",
      "dest": "): ) [2181,2182]"
    },
    {
      "src": "): ) [3093,3094]",
      "dest": "): ) [3093,3094]"
    },
    {
      "src": "constant: constant [1107,1115]",
      "dest": "constant: constant [1107,1115]"
    },
    {
      "src": "\": \" [2285,2286]",
      "dest": "\": \" [2285,2286]"
    },
    {
      "src": "identifier: REVERT_MSG [2813,2823]",
      "dest": "identifier: REVERT_MSG [2813,2823]"
    },
    {
      "src": "block_statement [2183,2244]",
      "dest": "block_statement [2183,2244]"
    },
    {
      "src": "revert: revert [2683,2689]",
      "dest": "revert: revert [2683,2689]"
    },
    {
      "src": "type_name [1301,1308]",
      "dest": "type_name [1301,1308]"
    },
    {
      "src": "(: ( [3214,3215]",
      "dest": "(: ( [3214,3215]"
    },
    {
      "src": "}: } [1658,1659]",
      "dest": "}: } [1658,1659]"
    },
    {
      "src": "==: == [3077,3079]",
      "dest": "==: == [3077,3079]"
    },
    {
      "src": "number_literal: 0x2000000050000012000013100002002002032050020002020002050000201003 [1330,1396]",
      "dest": "number_literal: 0x2000000050000012000013100002002002032050020002020002050000201003 [1330,1396]"
    },
    {
      "src": "=: = [1227,1228]",
      "dest": "=: = [1227,1228]"
    },
    {
      "src": "==: == [1772,1774]",
      "dest": "==: == [1772,1774]"
    },
    {
      "src": "binary_expression [3215,3229]",
      "dest": "binary_expression [3215,3229]"
    },
    {
      "src": "call_argument [3058,3081]",
      "dest": "call_argument [3058,3081]"
    },
    {
      "src": "expression_statement [2618,2653]",
      "dest": "expression_statement [2618,2653]"
    },
    {
      "src": "}: } [2058,2059]",
      "dest": "}: } [2058,2059]"
    },
    {
      "src": "expression_statement [2997,3041]",
      "dest": "expression_statement [2997,3041]"
    },
    {
      "src": "(: ( [1893,1894]",
      "dest": "(: ( [1893,1894]"
    },
    {
      "src": "string_literal [2372,2403]",
      "dest": "string_literal [2372,2403]"
    },
    {
      "src": "block_statement [1908,1949]",
      "dest": "block_statement [1908,1949]"
    },
    {
      "src": "identifier: require [3207,3214]",
      "dest": "identifier: require [3207,3214]"
    },
    {
      "src": "else: else [1950,1954]",
      "dest": "else: else [1950,1954]"
    },
    {
      "src": "identifier: index [2100,2105]",
      "dest": "identifier: index [2100,2105]"
    },
    {
      "src": "identifier: REVERT_MSG [3282,3292]",
      "dest": "identifier: REVERT_MSG [3282,3292]"
    },
    {
      "src": "parameter [1523,1530]",
      "dest": "parameter [1523,1530]"
    },
    {
      "src": "function: function [2065,2073]",
      "dest": "function: function [2065,2073]"
    },
    {
      "src": "identifier: getNumSubcontracts [1470,1488]",
      "dest": "identifier: getNumSubcontracts [1470,1488]"
    },
    {
      "src": "call_argument [3260,3280]",
      "dest": "call_argument [3260,3280]"
    },
    {
      "src": "parameter [2139,2155]",
      "dest": "parameter [2139,2155]"
    },
    {
      "src": "override: override [1505,1513]",
      "dest": "override: override [1505,1513]"
    },
    {
      "src": "call_expression [3050,3094]",
      "dest": "call_expression [3050,3094]"
    },
    {
      "src": "string_literal [2455,2487]",
      "dest": "string_literal [2455,2487]"
    },
    {
      "src": "==: == [3180,3182]",
      "dest": "==: == [3180,3182]"
    },
    {
      "src": "pure: pure [1593,1597]",
      "dest": "pure: pure [1593,1597]"
    },
    {
      "src": "}: } [1883,1884]",
      "dest": "}: } [1883,1884]"
    },
    {
      "src": "visibility [2766,2774]",
      "dest": "visibility [2766,2774]"
    },
    {
      "src": "constant: constant [1006,1014]",
      "dest": "constant: constant [1006,1014]"
    },
    {
      "src": "\": \" [2319,2320]",
      "dest": "\": \" [2319,2320]"
    },
    {
      "src": "call_argument [3029,3039]",
      "dest": "call_argument [3029,3039]"
    },
    {
      "src": "parenthesized_expression [2029,2052]",
      "dest": "parenthesized_expression [2029,2052]"
    },
    {
      "src": "(: ( [2423,2424]",
      "dest": "(: ( [2423,2424]"
    },
    {
      "src": "override: override [2780,2788]",
      "dest": "override: override [2780,2788]"
    },
    {
      "src": "primitive_type [1616,1623]",
      "dest": "primitive_type [1616,1623]"
    },
    {
      "src": "expression_statement [2367,2404]",
      "dest": "expression_statement [2367,2404]"
    },
    {
      "src": "\": \" [2232,2233]",
      "dest": "\": \" [2232,2233]"
    },
    {
      "src": "if: if [2337,2339]",
      "dest": "if: if [2337,2339]"
    },
    {
      "src": "(: ( [2091,2092]",
      "dest": "(: ( [2091,2092]"
    },
    {
      "src": "type_name [1692,1699]",
      "dest": "type_name [1692,1699]"
    },
    {
      "src": "call_argument [3186,3196]",
      "dest": "call_argument [3186,3196]"
    },
    {
      "src": "): ) [3241,3242]",
      "dest": "): ) [3241,3242]"
    },
    {
      "src": "return: return [1792,1798]",
      "dest": "return: return [1792,1798]"
    },
    {
      "src": "state_variable_declaration [955,993]",
      "dest": "state_variable_declaration [955,993]"
    },
    {
      "src": "string [2285,2320]",
      "dest": "string [2285,2320]"
    },
    {
      "src": "{: { [733,734]",
      "dest": "{: { [733,734]"
    },
    {
      "src": "pure: pure [1500,1504]",
      "dest": "pure: pure [1500,1504]"
    },
    {
      "src": "block_statement [2520,2582]",
      "dest": "block_statement [2520,2582]"
    },
    {
      "src": "identifier: require [3252,3259]",
      "dest": "identifier: require [3252,3259]"
    },
    {
      "src": "identifier: MAGIC_SALT [1642,1652]",
      "dest": "identifier: MAGIC_SALT [1642,1652]"
    },
    {
      "src": "{: { [2520,2521]",
      "dest": "{: { [2520,2521]"
    },
    {
      "src": "primitive_type [2139,2145]",
      "dest": "primitive_type [2139,2145]"
    },
    {
      "src": "block_statement [1778,1819]",
      "dest": "block_statement [1778,1819]"
    },
    {
      "src": "revert: revert [2023,2029]",
      "dest": "revert: revert [2023,2029]"
    },
    {
      "src": "(: ( [1691,1692]",
      "dest": "(: ( [1691,1692]"
    },
    {
      "src": "expression_statement [2534,2572]",
      "dest": "expression_statement [2534,2572]"
    },
    {
      "src": "solidity_pragma_token [643,659]",
      "dest": "solidity_pragma_token [643,659]"
    },
    {
      "src": "function_body [2157,2726]",
      "dest": "function_body [2157,2726]"
    },
    {
      "src": "block_statement [2266,2331]",
      "dest": "block_statement [2266,2331]"
    },
    {
      "src": "if: if [1825,1827]",
      "dest": "if: if [1825,1827]"
    },
    {
      "src": "assignment_expression [2450,2487]",
      "dest": "assignment_expression [2450,2487]"
    },
    {
      "src": "function: function [1563,1571]",
      "dest": "function: function [1563,1571]"
    },
    {
      "src": "): ) [2155,2156]",
      "dest": "): ) [2155,2156]"
    },
    {
      "src": "call_argument [3215,3229]",
      "dest": "call_argument [3215,3229]"
    },
    {
      "src": "constant: constant [753,761]",
      "dest": "constant: constant [753,761]"
    },
    {
      "src": "override_specifier [1723,1731]",
      "dest": "override_specifier [1723,1731]"
    },
    {
      "src": "internal: internal [1709,1717]",
      "dest": "internal: internal [1709,1717]"
    },
    {
      "src": "call_argument [3005,3027]",
      "dest": "call_argument [3005,3027]"
    },
    {
      "src": "returns: returns [1732,1739]",
      "dest": "returns: returns [1732,1739]"
    },
    {
      "src": "}: } [2013,2014]",
      "dest": "}: } [2013,2014]"
    },
    {
      "src": "{: { [1908,1909]",
      "dest": "{: { [1908,1909]"
    },
    {
      "src": "}: } [3301,3302]",
      "dest": "}: } [3301,3302]"
    },
    {
      "src": "\": \" [2050,2051]",
      "dest": "\": \" [2050,2051]"
    },
    {
      "src": "type_name [739,745]",
      "dest": "type_name [739,745]"
    },
    {
      "src": "return: return [1987,1993]",
      "dest": "return: return [1987,1993]"
    },
    {
      "src": "view: view [2775,2779]",
      "dest": "view: view [2775,2779]"
    },
    {
      "src": "): ) [3039,3040]",
      "dest": "): ) [3039,3040]"
    },
    {
      "src": "if_statement [2167,2720]",
      "dest": "if_statement [2167,2720]"
    },
    {
      "src": "return_statement [1857,1874]",
      "dest": "return_statement [1857,1874]"
    },
    {
      "src": "string [772,779]",
      "dest": "string [772,779]"
    },
    {
      "src": "return: return [1542,1548]",
      "dest": "return: return [1542,1548]"
    },
    {
      "src": "string_literal [2202,2233]",
      "dest": "string_literal [2202,2233]"
    },
    {
      "src": "if_statement [2250,2720]",
      "dest": "if_statement [2250,2720]"
    },
    {
      "src": "}: } [1818,1819]",
      "dest": "}: } [1818,1819]"
    },
    {
      "src": "{: { [1778,1779]",
      "dest": "{: { [1778,1779]"
    },
    {
      "src": "function_body [1625,1659]",
      "dest": "function_body [1625,1659]"
    },
    {
      "src": "\": \" [2202,2203]",
      "dest": "\": \" [2202,2203]"
    },
    {
      "src": "): ) [1776,1777]",
      "dest": "): ) [1776,1777]"
    },
    {
      "src": "type_name [1099,1106]",
      "dest": "type_name [1099,1106]"
    },
    {
      "src": "if: if [2250,2252]",
      "dest": "if: if [2250,2252]"
    },
    {
      "src": "}: } [2581,2582]",
      "dest": "}: } [2581,2582]"
    },
    {
      "src": "override_specifier [1505,1513]",
      "dest": "override_specifier [1505,1513]"
    },
    {
      "src": "identifier: IDX_MAP_0 [1799,1808]",
      "dest": "identifier: IDX_MAP_0 [1799,1808]"
    },
    {
      "src": "string [2030,2051]",
      "dest": "string [2030,2051]"
    },
    {
      "src": "): ) [2105,2106]",
      "dest": "): ) [2105,2106]"
    },
    {
      "src": "binary_expression [2341,2351]",
      "dest": "binary_expression [2341,2351]"
    },
    {
      "src": "): ) [1707,1708]",
      "dest": "): ) [1707,1708]"
    },
    {
      "src": "function: function [1461,1469]",
      "dest": "function: function [1461,1469]"
    },
    {
      "src": "(: ( [2170,2171]",
      "dest": "(: ( [2170,2171]"
    },
    {
      "src": "solidity_version: 0.6.12 [653,659]",
      "dest": "solidity_version: 0.6.12 [653,659]"
    },
    {
      "src": "): ) [2264,2265]",
      "dest": "): ) [2264,2265]"
    },
    {
      "src": "state_mutability [1593,1597]",
      "dest": "state_mutability [1593,1597]"
    },
    {
      "src": "}: } [2719,2720]",
      "dest": "}: } [2719,2720]"
    },
    {
      "src": "return_statement [1922,1939]",
      "dest": "return_statement [1922,1939]"
    },
    {
      "src": ",: , [3280,3281]",
      "dest": ",: , [3280,3281]"
    },
    {
      "src": "(: ( [2029,2030]",
      "dest": "(: ( [2029,2030]"
    },
    {
      "src": "primitive_type [2092,2099]",
      "dest": "primitive_type [2092,2099]"
    },
    {
      "src": "(: ( [3057,3058]",
      "dest": "(: ( [3057,3058]"
    },
    {
      "src": "=: = [983,984]",
      "dest": "=: = [983,984]"
    },
    {
      "src": "type_name [1200,1207]",
      "dest": "type_name [1200,1207]"
    },
    {
      "src": "comment: /*   Copyright 2019-2022 StarkWare Industries Ltd.    Licensed under the Apache License, Version 2.0 (the \"License\").   You may not use this file except in compliance with the License.   You may obtain a copy of the License at    https://www.starkware.co/open-source-license/    Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an \"AS IS\" BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions   and limitations under the License. */ [0,595]",
      "dest": "comment: /*   Copyright 2019-2022 StarkWare Industries Ltd.    Licensed under the Apache License, Version 2.0 (the \"License\").   You may not use this file except in compliance with the License.   You may obtain a copy of the License at    https://www.starkware.co/open-source-license/    Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an \"AS IS\" BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions   and limitations under the License. */ [0,595]"
    },
    {
      "src": "pragma: pragma [636,642]",
      "dest": "pragma: pragma [636,642]"
    },
    {
      "src": "==: == [2514,2516]",
      "dest": "==: == [2514,2516]"
    },
    {
      "src": "if: if [1760,1762]",
      "dest": "if: if [1760,1762]"
    },
    {
      "src": "string_literal [2285,2320]",
      "dest": "string_literal [2285,2320]"
    },
    {
      "src": "type_name [2092,2099]",
      "dest": "type_name [2092,2099]"
    },
    {
      "src": "call_expression [2997,3040]",
      "dest": "call_expression [2997,3040]"
    },
    {
      "src": "identifier: IDX_MAP_3 [1994,2003]",
      "dest": "identifier: IDX_MAP_3 [1994,2003]"
    },
    {
      "src": "(: ( [3162,3163]",
      "dest": "(: ( [3162,3163]"
    },
    {
      "src": "else: else [2664,2668]",
      "dest": "else: else [2664,2668]"
    },
    {
      "src": "binary_expression [2171,2181]",
      "dest": "binary_expression [2171,2181]"
    },
    {
      "src": "}: } [1948,1949]",
      "dest": "}: } [1948,1949]"
    },
    {
      "src": "identifier: index [2424,2429]",
      "dest": "identifier: index [2424,2429]"
    },
    {
      "src": "number_literal: 6 [2601,2602]",
      "dest": "number_literal: 6 [2601,2602]"
    },
    {
      "src": "else: else [2415,2419]",
      "dest": "else: else [2415,2419]"
    },
    {
      "src": "if: if [2420,2422]",
      "dest": "if: if [2420,2422]"
    },
    {
      "src": "else: else [1885,1889]",
      "dest": "else: else [1885,1889]"
    },
    {
      "src": "else: else [2499,2503]",
      "dest": "else: else [2499,2503]"
    },
    {
      "src": ",: , [3081,3082]",
      "dest": ",: , [3081,3082]"
    },
    {
      "src": "): ) [3292,3293]",
      "dest": "): ) [3292,3293]"
    },
    {
      "src": "identifier: StarkExchange [701,714]",
      "dest": "identifier: StarkExchange [701,714]"
    },
    {
      "src": "primitive_type [998,1005]",
      "dest": "primitive_type [998,1005]"
    },
    {
      "src": "{: { [2157,2158]",
      "dest": "{: { [2157,2158]"
    },
    {
      "src": "return_type_definition [1514,1531]",
      "dest": "return_type_definition [1514,1531]"
    },
    {
      "src": "identifier: section [1764,1771]",
      "dest": "identifier: section [1764,1771]"
    },
    {
      "src": "number_literal: 1 [2180,2181]",
      "dest": "number_literal: 1 [2180,2181]"
    },
    {
      "src": "state_mutability [1500,1504]",
      "dest": "state_mutability [1500,1504]"
    },
    {
      "src": "identifier: REVERT_MSG [3134,3144]",
      "dest": "identifier: REVERT_MSG [3134,3144]"
    },
    {
      "src": "{: { [2183,2184]",
      "dest": "{: { [2183,2184]"
    },
    {
      "src": "internal: internal [2107,2115]",
      "dest": "internal: internal [2107,2115]"
    },
    {
      "src": "number_literal: 0x1003112030002130000200100020000320202001020001001000040200200020 [1229,1295]",
      "dest": "number_literal: 0x1003112030002130000200100020000320202001020001001000040200200020 [1229,1295]"
    },
    {
      "src": "identifier: orderTreeHeight [3260,3275]",
      "dest": "identifier: orderTreeHeight [3260,3275]"
    },
    {
      "src": "}: } [2413,2414]",
      "dest": "}: } [2413,2414]"
    },
    {
      "src": "}: } [2662,2663]",
      "dest": "}: } [2662,2663]"
    },
    {
      "src": "): ) [1841,1842]",
      "dest": "): ) [1841,1842]"
    },
    {
      "src": "\": \" [2707,2708]",
      "dest": "\": \" [2707,2708]"
    },
    {
      "src": "if: if [2167,2169]",
      "dest": "if: if [2167,2169]"
    },
    {
      "src": "identifier: index [2171,2176]",
      "dest": "identifier: index [2171,2176]"
    },
    {
      "src": "type_name [998,1005]",
      "dest": "type_name [998,1005]"
    },
    {
      "src": "block_statement [2436,2498]",
      "dest": "block_statement [2436,2498]"
    },
    {
      "src": "number_literal: 0 [3080,3081]",
      "dest": "number_literal: 0 [3080,3081]"
    },
    {
      "src": "returns: returns [1514,1521]",
      "dest": "returns: returns [1514,1521]"
    },
    {
      "src": "binary_expression [1959,1971]",
      "dest": "binary_expression [1959,1971]"
    },
    {
      "src": "): ) [1971,1972]",
      "dest": "): ) [1971,1972]"
    },
    {
      "src": "==: == [3023,3025]",
      "dest": "==: == [3023,3025]"
    },
    {
      "src": "==: == [1967,1969]",
      "dest": "==: == [1967,1969]"
    },
    {
      "src": "string [2372,2403]",
      "dest": "string [2372,2403]"
    },
    {
      "src": "{: { [2436,2437]",
      "dest": "{: { [2436,2437]"
    },
    {
      "src": "visibility [1584,1592]",
      "dest": "visibility [1584,1592]"
    },
    {
      "src": "identifier: validiumTreeHeight [3058,3076]",
      "dest": "identifier: validiumTreeHeight [3058,3076]"
    },
    {
      "src": "binary_expression [3163,3184]",
      "dest": "binary_expression [3163,3184]"
    },
    {
      "src": "identifier: IDX_MAP_1 [1116,1125]",
      "dest": "identifier: IDX_MAP_1 [1116,1125]"
    },
    {
      "src": "primitive_type [1200,1207]",
      "dest": "primitive_type [1200,1207]"
    },
    {
      "src": "import_directive [662,690]",
      "dest": "import_directive [662,690]"
    },
    {
      "src": "assignment_expression [2618,2652]",
      "dest": "assignment_expression [2618,2652]"
    },
    {
      "src": "identifier: VERSION [762,769]",
      "dest": "identifier: VERSION [762,769]"
    },
    {
      "src": "constant: constant [1208,1216]",
      "dest": "constant: constant [1208,1216]"
    },
    {
      "src": "binary_expression [1829,1841]",
      "dest": "binary_expression [1829,1841]"
    },
    {
      "src": "number_literal: 0 [3228,3229]",
      "dest": "number_literal: 0 [3228,3229]"
    },
    {
      "src": "state_mutability [2775,2779]",
      "dest": "state_mutability [2775,2779]"
    },
    {
      "src": "{: { [2669,2670]",
      "dest": "{: { [2669,2670]"
    },
    {
      "src": "identifier: require [3104,3111]",
      "dest": "identifier: require [3104,3111]"
    },
    {
      "src": "if_statement [2337,2720]",
      "dest": "if_statement [2337,2720]"
    },
    {
      "src": "string_literal [2690,2708]",
      "dest": "string_literal [2690,2708]"
    },
    {
      "src": "comment: // This initializer sets roots etc. It must not be applied twice. [2860,2925]",
      "dest": "comment: // This initializer sets roots etc. It must not be applied twice. [2860,2925]"
    },
    {
      "src": "source_file [0,3303]",
      "dest": "source_file [0,3303]"
    },
    {
      "src": "if: if [2588,2590]",
      "dest": "if: if [2588,2590]"
    },
    {
      "src": "return_statement [1542,1551]",
      "dest": "return_statement [1542,1551]"
    },
    {
      "src": "=: = [1328,1329]",
      "dest": "=: = [1328,1329]"
    },
    {
      "src": "{: { [2789,2790]",
      "dest": "{: { [2789,2790]"
    },
    {
      "src": "number_literal: 3 [2350,2351]",
      "dest": "number_literal: 3 [2350,2351]"
    },
    {
      "src": "^:  ^ [651,653]",
      "dest": "^:  ^ [651,653]"
    },
    {
      "src": "revert_statement [2023,2053]",
      "dest": "revert_statement [2023,2053]"
    },
    {
      "src": "return_type_definition [2130,2156]",
      "dest": "return_type_definition [2130,2156]"
    },
    {
      "src": "(: ( [3259,3260]",
      "dest": "(: ( [3259,3260]"
    },
    {
      "src": "binary_expression [2592,2602]",
      "dest": "binary_expression [2592,2602]"
    },
    {
      "src": "(: ( [2763,2764]",
      "dest": "(: ( [2763,2764]"
    },
    {
      "src": "uint256: uint256 [1099,1106]",
      "dest": "uint256: uint256 [1099,1106]"
    },
    {
      "src": "}: } [2243,2244]",
      "dest": "}: } [2243,2244]"
    },
    {
      "src": "identifier: id [2450,2452]",
      "dest": "identifier: id [2450,2452]"
    },
    {
      "src": "identifier: id [2534,2536]",
      "dest": "identifier: id [2534,2536]"
    },
    {
      "src": "number_literal: 0x3000030005000050020012003000010604300000002420501003000010000300 [1128,1194]",
      "dest": "number_literal: 0x3000030005000050020012003000010604300000002420501003000010000300 [1128,1194]"
    },
    {
      "src": "number_literal: 1 [1840,1841]",
      "dest": "number_literal: 1 [1840,1841]"
    },
    {
      "src": "binary_expression [3005,3027]",
      "dest": "binary_expression [3005,3027]"
    },
    {
      "src": "expression_statement [3155,3198]",
      "dest": "expression_statement [3155,3198]"
    },
    {
      "src": "type_name [955,962]",
      "dest": "type_name [955,962]"
    },
    {
      "src": "return_type_definition [1607,1624]",
      "dest": "return_type_definition [1607,1624]"
    },
    {
      "src": "==: == [2260,2262]",
      "dest": "==: == [2260,2262]"
    },
    {
      "src": "\": \" [2570,2571]",
      "dest": "\": \" [2570,2571]"
    },
    {
      "src": "primitive_type [1741,1748]",
      "dest": "primitive_type [1741,1748]"
    },
    {
      "src": "identifier: id [2153,2155]",
      "dest": "identifier: id [2153,2155]"
    },
    {
      "src": "): ) [3196,3197]",
      "dest": "): ) [3196,3197]"
    },
    {
      "src": "override_specifier [1598,1606]",
      "dest": "override_specifier [1598,1606]"
    },
    {
      "src": "call_argument [3083,3093]",
      "dest": "call_argument [3083,3093]"
    },
    {
      "src": "identifier: section [1700,1707]",
      "dest": "identifier: section [1700,1707]"
    },
    {
      "src": "memory: memory [2146,2152]",
      "dest": "memory: memory [2146,2152]"
    },
    {
      "src": "(: ( [2340,2341]",
      "dest": "(: ( [2340,2341]"
    },
    {
      "src": "{: { [1750,1751]",
      "dest": "{: { [1750,1751]"
    },
    {
      "src": "else: else [2245,2249]",
      "dest": "else: else [2245,2249]"
    },
    {
      "src": "primitive_type [739,745]",
      "dest": "primitive_type [739,745]"
    },
    {
      "src": "call_argument [3112,3132]",
      "dest": "call_argument [3112,3132]"
    },
    {
      "src": "override: override [2121,2129]",
      "dest": "override: override [2121,2129]"
    },
    {
      "src": "inheritance_specifier [718,732]",
      "dest": "inheritance_specifier [718,732]"
    },
    {
      "src": "parenthesized_expression [2689,2709]",
      "dest": "parenthesized_expression [2689,2709]"
    },
    {
      "src": "{: { [1532,1533]",
      "dest": "{: { [1532,1533]"
    },
    {
      "src": "return: return [1857,1863]",
      "dest": "return: return [1857,1863]"
    },
    {
      "src": "if_statement [1825,2014]",
      "dest": "if_statement [1825,2014]"
    },
    {
      "src": "\": \" [2030,2031]",
      "dest": "\": \" [2030,2031]"
    },
    {
      "src": "public: public [746,752]",
      "dest": "public: public [746,752]"
    },
    {
      "src": "visibility [2107,2115]",
      "dest": "visibility [2107,2115]"
    },
    {
      "src": "(: ( [1828,1829]",
      "dest": "(: ( [1828,1829]"
    },
    {
      "src": "function_body [2789,3300]",
      "dest": "function_body [2789,3300]"
    },
    {
      "src": "=: = [2453,2454]",
      "dest": "=: = [2453,2454]"
    },
    {
      "src": "binary_expression [3058,3081]",
      "dest": "binary_expression [3058,3081]"
    },
    {
      "src": "return_statement [1987,2004]",
      "dest": "return_statement [1987,2004]"
    },
    {
      "src": "revert_statement [2683,2710]",
      "dest": "revert_statement [2683,2710]"
    },
    {
      "src": "block_statement [2669,2720]",
      "dest": "block_statement [2669,2720]"
    },
    {
      "src": "comment: // ---------- The following code was auto-generated. PLEASE DO NOT EDIT. ---------- [867,950]",
      "dest": "comment: // ---------- The following code was auto-generated. PLEASE DO NOT EDIT. ---------- [867,950]"
    },
    {
      "src": "type_name [2139,2145]",
      "dest": "type_name [2139,2145]"
    },
    {
      "src": "if_statement [2504,2720]",
      "dest": "if_statement [2504,2720]"
    },
    {
      "src": "if_statement [1955,2014]",
      "dest": "if_statement [1955,2014]"
    },
    {
      "src": "assignment_expression [2534,2571]",
      "dest": "assignment_expression [2534,2571]"
    },
    {
      "src": "assignment_expression [2367,2403]",
      "dest": "assignment_expression [2367,2403]"
    },
    {
      "src": "primitive_type [955,962]",
      "dest": "primitive_type [955,962]"
    },
    {
      "src": "=: = [2621,2622]",
      "dest": "=: = [2621,2622]"
    },
    {
      "src": "uint256: uint256 [1301,1308]",
      "dest": "uint256: uint256 [1301,1308]"
    },
    {
      "src": "identifier: REVERT_MSG [3083,3093]",
      "dest": "identifier: REVERT_MSG [3083,3093]"
    },
    {
      "src": "identifier: validiumVaultRoot [3005,3022]",
      "dest": "identifier: validiumVaultRoot [3005,3022]"
    },
    {
      "src": "==: == [2430,2432]",
      "dest": "==: == [2430,2432]"
    },
    {
      "src": "identifier: require [3050,3057]",
      "dest": "identifier: require [3050,3057]"
    },
    {
      "src": "number_literal: 0 [3183,3184]",
      "dest": "number_literal: 0 [3183,3184]"
    },
    {
      "src": "binary_expression [1894,1906]",
      "dest": "binary_expression [1894,1906]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: Apache-2.0. [596,635]",
      "dest": "comment: // SPDX-License-Identifier: Apache-2.0. [596,635]"
    },
    {
      "src": "function: function [2732,2740]",
      "dest": "function: function [2732,2740]"
    },
    {
      "src": "user_defined_type [718,732]",
      "dest": "user_defined_type [718,732]"
    },
    {
      "src": "function_definition [1563,1659]",
      "dest": "function_definition [1563,1659]"
    },
    {
      "src": "\": \" [2539,2540]",
      "dest": "\": \" [2539,2540]"
    },
    {
      "src": "call_expression [3207,3242]",
      "dest": "call_expression [3207,3242]"
    },
    {
      "src": "expression_statement [2450,2488]",
      "dest": "expression_statement [2450,2488]"
    },
    {
      "src": "}: } [2497,2498]",
      "dest": "}: } [2497,2498]"
    },
    {
      "src": "{: { [1843,1844]",
      "dest": "{: { [1843,1844]"
    },
    {
      "src": "\": \" [2455,2456]",
      "dest": "\": \" [2455,2456]"
    },
    {
      "src": "{: { [2604,2605]",
      "dest": "{: { [2604,2605]"
    },
    {
      "src": "number_literal: 0 [3279,3280]",
      "dest": "number_literal: 0 [3279,3280]"
    },
    {
      "src": "state_variable_declaration [998,1094]",
      "dest": "state_variable_declaration [998,1094]"
    },
    {
      "src": "): ) [2602,2603]",
      "dest": "): ) [2602,2603]"
    },
    {
      "src": "uint256: uint256 [998,1005]",
      "dest": "uint256: uint256 [998,1005]"
    },
    {
      "src": "type_name [1741,1748]",
      "dest": "type_name [1741,1748]"
    },
    {
      "src": "\": \" [688,689]",
      "dest": "\": \" [688,689]"
    },
    {
      "src": "block_statement [2353,2414]",
      "dest": "block_statement [2353,2414]"
    },
    {
      "src": "identifier: MAGIC_SALT [972,982]",
      "dest": "identifier: MAGIC_SALT [972,982]"
    },
    {
      "src": "identifier: id [2197,2199]",
      "dest": "identifier: id [2197,2199]"
    },
    {
      "src": ",: , [3132,3133]",
      "dest": ",: , [3132,3133]"
    },
    {
      "src": "visibility [1491,1499]",
      "dest": "visibility [1491,1499]"
    },
    {
      "src": "solidity: solidity [643,651]",
      "dest": "solidity: solidity [643,651]"
    },
    {
      "src": "{: { [1625,1626]",
      "dest": "{: { [1625,1626]"
    },
    {
      "src": "identifier: IDX_MAP_2 [1929,1938]",
      "dest": "identifier: IDX_MAP_2 [1929,1938]"
    },
    {
      "src": "number_literal: 1527414 [985,992]",
      "dest": "number_literal: 1527414 [985,992]"
    },
    {
      "src": "uint256: uint256 [1692,1699]",
      "dest": "uint256: uint256 [1692,1699]"
    },
    {
      "src": "identifier: IDX_MAP_3 [1318,1327]",
      "dest": "identifier: IDX_MAP_3 [1318,1327]"
    },
    {
      "src": "=: = [2537,2538]",
      "dest": "=: = [2537,2538]"
    },
    {
      "src": "constant: constant [963,971]",
      "dest": "constant: constant [963,971]"
    },
    {
      "src": "returns: returns [2130,2137]",
      "dest": "returns: returns [2130,2137]"
    },
    {
      "src": "call_expression [3252,3293]",
      "dest": "call_expression [3252,3293]"
    },
    {
      "src": "identifier: REVERT_MSG [3029,3039]",
      "dest": "identifier: REVERT_MSG [3029,3039]"
    },
    {
      "src": "pure: pure [2116,2120]",
      "dest": "pure: pure [2116,2120]"
    },
    {
      "src": "\": \" [2690,2691]",
      "dest": "\": \" [2690,2691]"
    },
    {
      "src": "): ) [3144,3145]",
      "dest": "): ) [3144,3145]"
    },
    {
      "src": "identifier: IDX_MAP_2 [1217,1226]",
      "dest": "identifier: IDX_MAP_2 [1217,1226]"
    },
    {
      "src": "uint256: uint256 [1741,1748]",
      "dest": "uint256: uint256 [1741,1748]"
    },
    {
      "src": "string [2455,2487]",
      "dest": "string [2455,2487]"
    },
    {
      "src": "string [2623,2652]",
      "dest": "string [2623,2652]"
    },
    {
      "src": "expression_statement [3104,3146]",
      "dest": "expression_statement [3104,3146]"
    },
    {
      "src": "return: return [1635,1641]",
      "dest": "return: return [1635,1641]"
    },
    {
      "src": "string_literal [2826,2850]",
      "dest": "string_literal [2826,2850]"
    },
    {
      "src": "primitive_type [1301,1308]",
      "dest": "primitive_type [1301,1308]"
    },
    {
      "src": "): ) [1582,1583]",
      "dest": "): ) [1582,1583]"
    },
    {
      "src": "identifier: section [1894,1901]",
      "dest": "identifier: section [1894,1901]"
    },
    {
      "src": "pure: pure [1718,1722]",
      "dest": "pure: pure [1718,1722]"
    },
    {
      "src": "identifier: magicSalt [1572,1581]",
      "dest": "identifier: magicSalt [1572,1581]"
    },
    {
      "src": "if: if [1890,1892]",
      "dest": "if: if [1890,1892]"
    },
    {
      "src": "type_name [2799,2805]",
      "dest": "type_name [2799,2805]"
    },
    {
      "src": "=: = [1025,1026]",
      "dest": "=: = [1025,1026]"
    },
    {
      "src": "number_literal: 2 [2263,2264]",
      "dest": "number_literal: 2 [2263,2264]"
    },
    {
      "src": "identifier: REVERT_MSG [3231,3241]",
      "dest": "identifier: REVERT_MSG [3231,3241]"
    },
    {
      "src": "==: == [2177,2179]",
      "dest": "==: == [2177,2179]"
    },
    {
      "src": "string [2690,2708]",
      "dest": "string [2690,2708]"
    },
    {
      "src": "return: return [1922,1928]",
      "dest": "return: return [1922,1928]"
    },
    {
      "src": "if: if [2504,2506]",
      "dest": "if: if [2504,2506]"
    },
    {
      "src": "if_statement [1760,2014]",
      "dest": "if_statement [1760,2014]"
    },
    {
      "src": "}: } [1556,1557]",
      "dest": "}: } [1556,1557]"
    },
    {
      "src": "number_literal: 0 [1775,1776]",
      "dest": "number_literal: 0 [1775,1776]"
    },
    {
      "src": "assignment_expression [2280,2320]",
      "dest": "assignment_expression [2280,2320]"
    },
    {
      "src": "internal: internal [1491,1499]",
      "dest": "internal: internal [1491,1499]"
    },
    {
      "src": "contract_body [733,3302]",
      "dest": "contract_body [733,3302]"
    },
    {
      "src": "variable_declaration [2799,2823]",
      "dest": "variable_declaration [2799,2823]"
    },
    {
      "src": "function_definition [2065,2726]",
      "dest": "function_definition [2065,2726]"
    },
    {
      "src": "(: ( [2591,2592]",
      "dest": "(: ( [2591,2592]"
    },
    {
      "src": "return_statement [1792,1809]",
      "dest": "return_statement [1792,1809]"
    },
    {
      "src": "): ) [2351,2352]",
      "dest": "): ) [2351,2352]"
    },
    {
      "src": "): ) [1489,1490]",
      "dest": "): ) [1489,1490]"
    },
    {
      "src": "contract: contract [692,700]",
      "dest": "contract: contract [692,700]"
    },
    {
      "src": "type_name [1523,1530]",
      "dest": "type_name [1523,1530]"
    },
    {
      "src": "call_argument [3134,3144]",
      "dest": "call_argument [3134,3144]"
    },
    {
      "src": "identifier: expectedIdByIndex [2074,2091]",
      "dest": "identifier: expectedIdByIndex [2074,2091]"
    },
    {
      "src": "binary_expression [2424,2434]",
      "dest": "binary_expression [2424,2434]"
    },
    {
      "src": "call_argument [3163,3184]",
      "dest": "call_argument [3163,3184]"
    },
    {
      "src": "}: } [3299,3300]",
      "dest": "}: } [3299,3300]"
    },
    {
      "src": "(: ( [2138,2139]",
      "dest": "(: ( [2138,2139]"
    },
    {
      "src": ",: , [3229,3230]",
      "dest": ",: , [3229,3230]"
    },
    {
      "src": "returns: returns [1607,1614]",
      "dest": "returns: returns [1607,1614]"
    },
    {
      "src": "(: ( [1958,1959]",
      "dest": "(: ( [1958,1959]"
    },
    {
      "src": "uint256: uint256 [955,962]",
      "dest": "uint256: uint256 [955,962]"
    },
    {
      "src": "string [2826,2850]",
      "dest": "string [2826,2850]"
    },
    {
      "src": "identifier: REVERT_MSG [3186,3196]",
      "dest": "identifier: REVERT_MSG [3186,3196]"
    },
    {
      "src": "internal: internal [1584,1592]",
      "dest": "internal: internal [1584,1592]"
    },
    {
      "src": "parameter [1741,1748]",
      "dest": "parameter [1741,1748]"
    },
    {
      "src": "identifier: index [2592,2597]",
      "dest": "identifier: index [2592,2597]"
    },
    {
      "src": "): ) [2518,2519]",
      "dest": "): ) [2518,2519]"
    },
    {
      "src": "identifier: require [2997,3004]",
      "dest": "identifier: require [2997,3004]"
    },
    {
      "src": "string_literal [2030,2051]",
      "dest": "string_literal [2030,2051]"
    },
    {
      "src": "(: ( [2253,2254]",
      "dest": "(: ( [2253,2254]"
    },
    {
      "src": "identifier: handlerMapSection [1674,1691]",
      "dest": "identifier: handlerMapSection [1674,1691]"
    },
    {
      "src": "if_statement [2420,2720]",
      "dest": "if_statement [2420,2720]"
    },
    {
      "src": "state_mutability [2116,2120]",
      "dest": "state_mutability [2116,2120]"
    },
    {
      "src": "state_variable_declaration [1200,1296]",
      "dest": "state_variable_declaration [1200,1296]"
    },
    {
      "src": "internal: internal [2766,2774]",
      "dest": "internal: internal [2766,2774]"
    },
    {
      "src": "variable_declaration_statement [2799,2851]",
      "dest": "variable_declaration_statement [2799,2851]"
    },
    {
      "src": "\": \" [2849,2850]",
      "dest": "\": \" [2849,2850]"
    },
    {
      "src": "identifier: IDX_MAP_1 [1864,1873]",
      "dest": "identifier: IDX_MAP_1 [1864,1873]"
    },
    {
      "src": "binary_expression [3260,3280]",
      "dest": "binary_expression [3260,3280]"
    },
    {
      "src": "identifier: rollupTreeHeight [3163,3179]",
      "dest": "identifier: rollupTreeHeight [3163,3179]"
    },
    {
      "src": "): ) [2434,2435]",
      "dest": "): ) [2434,2435]"
    },
    {
      "src": "identifier: require [3155,3162]",
      "dest": "identifier: require [3155,3162]"
    },
    {
      "src": "comment: // ---------- End of auto-generated code. ---------- [1403,1455]",
      "dest": "comment: // ---------- End of auto-generated code. ---------- [1403,1455]"
    },
    {
      "src": "=: = [1126,1127]",
      "dest": "=: = [1126,1127]"
    },
    {
      "src": "identifier: index [2254,2259]",
      "dest": "identifier: index [2254,2259]"
    },
    {
      "src": "pragma_directive [636,660]",
      "dest": "pragma_directive [636,660]"
    },
    {
      "src": "state_variable_declaration [739,780]",
      "dest": "state_variable_declaration [739,780]"
    },
    {
      "src": "(: ( [1763,1764]",
      "dest": "(: ( [1763,1764]"
    }
  ],
  "actions": []
}