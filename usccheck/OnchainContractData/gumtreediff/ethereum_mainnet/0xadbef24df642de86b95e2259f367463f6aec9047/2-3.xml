<?xml version="1.0" ?>
<matches>
  <match src="{: { [100800,100801]" dest="{: { [36805,36806]"/>
  <match src="function_definition [38507,38834]" dest="function_definition [54985,55312]"/>
  <match src="parameter [38589,38593]" dest="parameter [55067,55071]"/>
  <match src="parameter [1902,1911]" dest="parameter [1902,1911]"/>
  <match src="(: ( [38651,38652]" dest="(: ( [55129,55130]"/>
  <match src="array_access [99356,99376]" dest="array_access [35361,35381]"/>
  <match src="(: ( [37924,37925]" dest="(: ( [54402,54403]"/>
  <match src=",: , [3350,3351]" dest=",: , [3350,3351]"/>
  <match src="): ) [74590,74591]" dest="): ) [59352,59353]"/>
  <match src="type_name [93191,93198]" dest="type_name [76544,76551]"/>
  <match src="primitive_type [43628,43635]" dest="primitive_type [12209,12216]"/>
  <match src="primitive_type [17897,17904]" dest="primitive_type [59853,59860]"/>
  <match src="=: = [108173,108174]" dest="=: = [44178,44179]"/>
  <match src="number_literal: 0 [89235,89236]" dest="number_literal: 0 [74902,74903]"/>
  <match src="array_access [105938,105960]" dest="array_access [41943,41965]"/>
  <match src="(: ( [104892,104893]" dest="(: ( [40897,40898]"/>
  <match src="internal: internal [48299,48307]" dest="internal: internal [16880,16888]"/>
  <match src="address: address [100326,100333]" dest="address: address [36331,36338]"/>
  <match src="function: function [56358,56366]" dest="function: function [22450,22458]"/>
  <match src="call_argument [93380,93394]" dest="call_argument [76733,76747]"/>
  <match src=".: . [104562,104563]" dest=".: . [40567,40568]"/>
  <match src="): ) [98881,98882]" dest="): ) [34886,34887]"/>
  <match src="type_name [31722,31729]" dest="type_name [48200,48207]"/>
  <match src="identifier: add [86999,87002]" dest="identifier: add [59390,59393]"/>
  <match src="identifier: blockTimestamp [98535,98549]" dest="identifier: blockTimestamp [34540,34554]"/>
  <match src="address: address [82862,82869]" dest="address: address [70798,70805]"/>
  <match src="): ) [8672,8673]" dest="): ) [8672,8673]"/>
  <match src="return: return [4802,4808]" dest="return: return [4802,4808]"/>
  <match src="{: { [8532,8533]" dest="{: { [8532,8533]"/>
  <match src="parameter [46963,46982]" dest="parameter [15544,15563]"/>
  <match src="private: private [66547,66554]" dest="private: private [66545,66552]"/>
  <match src="&quot;: &quot; [51048,51049]" dest="&quot;: &quot; [56886,56887]"/>
  <match src="): ) [84007,84008]" dest="): ) [72579,72580]"/>
  <match src="user_defined_type [46963,46975]" dest="user_defined_type [15544,15556]"/>
  <match src="constant: constant [66508,66516]" dest="constant: constant [60990,60998]"/>
  <match src="returns: returns [98865,98872]" dest="returns: returns [34870,34877]"/>
  <match src="identifier: Frozen [97587,97593]" dest="identifier: Frozen [33592,33598]"/>
  <match src="state_mutability [99457,99461]" dest="state_mutability [35462,35466]"/>
  <match src="pure: pure [6869,6873]" dest="pure: pure [6869,6873]"/>
  <match src="visibility [43636,43643]" dest="visibility [12217,12224]"/>
  <match src=",: , [29409,29410]" dest=",: , [45887,45888]"/>
  <match src="): ) [29793,29794]" dest="): ) [46271,46272]"/>
  <match src="type_name [107511,107518]" dest="type_name [43516,43523]"/>
  <match src="private: private [44398,44405]" dest="private: private [12979,12986]"/>
  <match src="call_argument [109511,109515]" dest="call_argument [69287,69291]"/>
  <match src="yul_path [89201,89208]" dest="yul_path [74868,74875]"/>
  <match src="): ) [56570,56571]" dest="): ) [22662,22663]"/>
  <match src="(: ( [54729,54730]" dest="(: ( [20821,20822]"/>
  <match src="emit: emit [21087,21091]" dest="emit: emit [64947,64951]"/>
  <match src="{: { [12714,12715]" dest="{: { [23241,23242]"/>
  <match src="expression_statement [85740,85857]" dest="expression_statement [81196,81306]"/>
  <match src="identifier: msg [86503,86506]" dest="identifier: msg [63872,63875]"/>
  <match src=",: , [24229,24230]" dest=",: , [56727,56728]"/>
  <match src="{: { [83577,83578]" dest="{: { [71594,71595]"/>
  <match src=".: . [103854,103855]" dest=".: . [39859,39860]"/>
  <match src="emit_statement [84048,84078]" dest="emit_statement [81873,81908]"/>
  <match src="assignment_expression [104151,104228]" dest="assignment_expression [40156,40233]"/>
  <match src="type_name [8647,8654]" dest="type_name [8647,8654]"/>
  <match src="type_name [75535,75542]" dest="type_name [71908,71915]"/>
  <match src="address: address [100613,100620]" dest="address: address [36618,36625]"/>
  <match src="event_paramater [53854,53858]" dest="event_paramater [61441,61462]"/>
  <match src="call_expression [10499,10517]" dest="call_expression [10499,10517]"/>
  <match src="return_type_definition [102283,102297]" dest="return_type_definition [38288,38302]"/>
  <match src="type_name [101905,101912]" dest="type_name [37910,37917]"/>
  <match src=".: . [103629,103630]" dest=".: . [39634,39635]"/>
  <match src="call_argument [7284,7288]" dest="call_argument [7284,7288]"/>
  <match src="parameter [19244,19262]" dest="parameter [18597,18614]"/>
  <match src="member_expression [103303,103317]" dest="member_expression [39308,39322]"/>
  <match src="{: { [100237,100238]" dest="{: { [36242,36243]"/>
  <match src="type_name [44742,44749]" dest="type_name [13323,13330]"/>
  <match src="expression_statement [53445,53618]" dest="expression_statement [64830,64924]"/>
  <match src="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [70592,71250]" dest="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [37102,37760]"/>
  <match src="type_name [55472,55476]" dest="type_name [21564,21568]"/>
  <match src="uint256: uint256 [32486,32493]" dest="uint256: uint256 [48964,48971]"/>
  <match src="public: public [52126,52132]" dest="public: public [26761,26767]"/>
  <match src="emit_statement [23137,23175]" dest="emit_statement [64216,64265]"/>
  <match src="[: [ [105913,105914]" dest="[: [ [41918,41919]"/>
  <match src="type_name [9850,9854]" dest="type_name [9850,9854]"/>
  <match src="{: { [93227,93228]" dest="{: { [76580,76581]"/>
  <match src="function_body [22919,23182]" dest="function_body [64052,64272]"/>
  <match src="variable_declaration_statement [86319,86408]" dest="variable_declaration_statement [72945,73007]"/>
  <match src="identifier: reason [105999,106005]" dest="identifier: reason [42004,42010]"/>
  <match src="memory: memory [107934,107940]" dest="memory: memory [43939,43945]"/>
  <match src="member_expression [107969,107986]" dest="member_expression [43974,43991]"/>
  <match src="(: ( [99802,99803]" dest="(: ( [35807,35808]"/>
  <match src="view: view [88663,88667]" dest="view: view [74330,74334]"/>
  <match src="number_literal: 0 [36154,36155]" dest="number_literal: 0 [52632,52633]"/>
  <match src="identifier: amount [77493,77499]" dest="identifier: amount [56737,56743]"/>
  <match src="private: private [43481,43488]" dest="private: private [12062,12069]"/>
  <match src="constant: constant [29152,29160]" dest="constant: constant [45630,45638]"/>
  <match src="primitive_type [99435,99442]" dest="primitive_type [35440,35447]"/>
  <match src="view: view [96311,96315]" dest="view: view [32316,32320]"/>
  <match src="uint256: uint256 [47456,47463]" dest="uint256: uint256 [16037,16044]"/>
  <match src="primitive_type [98838,98845]" dest="primitive_type [34843,34850]"/>
  <match src="type_name [90374,90381]" dest="type_name [28801,28808]"/>
  <match src="}: } [5538,5539]" dest="}: } [5538,5539]"/>
  <match src="call_argument [32869,32888]" dest="call_argument [49347,49366]"/>
  <match src="pure: pure [47442,47446]" dest="pure: pure [16023,16027]"/>
  <match src="=: = [104453,104454]" dest="=: = [40458,40459]"/>
  <match src="identifier: value [83365,83370]" dest="identifier: value [71401,71406]"/>
  <match src="public: public [96194,96200]" dest="public: public [32199,32205]"/>
  <match src="identifier: value [48522,48527]" dest="identifier: value [17103,17108]"/>
  <match src="call_argument [18717,18759]" dest="call_argument [72620,72656]"/>
  <match src="(: ( [97331,97332]" dest="(: ( [33336,33337]"/>
  <match src="function: function [10649,10657]" dest="function: function [10649,10657]"/>
  <match src="member_expression [50829,50841]" dest="member_expression [63089,63101]"/>
  <match src=",: , [53570,53571]" dest=",: , [64862,64863]"/>
  <match src="member_expression [102744,102758]" dest="member_expression [38749,38763]"/>
  <match src="primitive_type [109286,109293]" dest="primitive_type [69062,69069]"/>
  <match src="struct: struct [90064,90070]" dest="struct: struct [28491,28497]"/>
  <match src="): ) [85207,85208]" dest="): ) [72524,72525]"/>
  <match src="(: ( [34012,34013]" dest="(: ( [50490,50491]"/>
  <match src="using: using [73569,73574]" dest="using: using [56074,56079]"/>
  <match src="identifier: value [8938,8943]" dest="identifier: value [8938,8943]"/>
  <match src="address: address [97652,97659]" dest="address: address [33657,33664]"/>
  <match src="(: ( [100539,100540]" dest="(: ( [36544,36545]"/>
  <match src="[: [ [98033,98034]" dest="[: [ [34038,34039]"/>
  <match src="state_mutability [29956,29960]" dest="state_mutability [46434,46438]"/>
  <match src="yul_identifier [101029,101033]" dest="yul_identifier [37034,37038]"/>
  <match src="variable_declaration_statement [106577,106640]" dest="variable_declaration_statement [42582,42645]"/>
  <match src="function_definition [107113,107268]" dest="function_definition [43118,43273]"/>
  <match src="assignment_expression [37398,37442]" dest="assignment_expression [53876,53920]"/>
  <match src="comment: // 18 epochs [44439,44451]" dest="comment: // 18 epochs [13020,13032]"/>
  <match src="address: address [97938,97945]" dest="address: address [33943,33950]"/>
  <match src="(: ( [102155,102156]" dest="(: ( [38160,38161]"/>
  <match src="state_variable_declaration [92674,92788]" dest="state_variable_declaration [76027,76141]"/>
  <match src="parameter [30429,30438]" dest="parameter [46907,46916]"/>
  <match src="primitive_type [83350,83357]" dest="primitive_type [71386,71393]"/>
  <match src="identifier: lockedUntil [97426,97437]" dest="identifier: lockedUntil [33431,33442]"/>
  <match src="uint256: uint256 [35808,35815]" dest="uint256: uint256 [52286,52293]"/>
  <match src="&quot;: &quot; [4844,4845]" dest="&quot;: &quot; [4844,4845]"/>
  <match src="parameter [32411,32423]" dest="parameter [48889,48901]"/>
  <match src="comment: // 20% [45408,45414]" dest="comment: // 20% [13989,13995]"/>
  <match src="primitive_type [91462,91469]" dest="primitive_type [29889,29896]"/>
  <match src="inheritance_specifier [110861,110872]" dest="inheritance_specifier [78099,78110]"/>
  <match src="primitive_type [99329,99336]" dest="primitive_type [35334,35341]"/>
  <match src="type_name [102223,102230]" dest="type_name [38228,38235]"/>
  <match src="{: { [33944,33945]" dest="{: { [50422,50423]"/>
  <match src="function_body [106361,106497]" dest="function_body [42366,42502]"/>
  <match src="): ) [2354,2355]" dest="): ) [2354,2355]"/>
  <match src="call_argument [1500,1532]" dest="call_argument [1500,1532]"/>
  <match src="identifier: liquidity [56595,56604]" dest="identifier: liquidity [22687,22696]"/>
  <match src="member_expression [60763,60778]" dest="member_expression [83552,83567]"/>
  <match src="view: view [70331,70335]" dest="view: view [62748,62752]"/>
  <match src="comment: /* Epoch */ [44073,44084]" dest="comment: /* Epoch */ [12654,12665]"/>
  <match src="state_mutability [48814,48818]" dest="state_mutability [17395,17399]"/>
  <match src="block_statement [97449,97504]" dest="block_statement [33454,33509]"/>
  <match src="}: } [74620,74621]" dest="}: } [59487,59488]"/>
  <match src="primitive_type [37792,37797]" dest="primitive_type [54270,54275]"/>
  <match src="return_type_definition [7659,7680]" dest="return_type_definition [7659,7680]"/>
  <match src="): ) [83294,83295]" dest="): ) [78622,78623]"/>
  <match src="return_type_definition [99154,99171]" dest="return_type_definition [35159,35176]"/>
  <match src="identifier: Upgradeable [110861,110872]" dest="identifier: Upgradeable [78099,78110]"/>
  <match src="event_definition [55767,55949]" dest="event_definition [21859,22041]"/>
  <match src="function_body [104140,104304]" dest="function_body [40145,40309]"/>
  <match src="=: = [44721,44722]" dest="=: = [13302,13303]"/>
  <match src="primitive_type [101990,101997]" dest="primitive_type [37995,38002]"/>
  <match src="memory: memory [9855,9861]" dest="memory: memory [9855,9861]"/>
  <match src="uint256: uint256 [83188,83195]" dest="uint256: uint256 [83204,83211]"/>
  <match src="identifier: unfreeze [105429,105437]" dest="identifier: unfreeze [41434,41442]"/>
  <match src="primitive_type [90515,90522]" dest="primitive_type [28942,28949]"/>
  <match src="internal: internal [5436,5444]" dest="internal: internal [5436,5444]"/>
  <match src="primitive_type [68700,68707]" dest="primitive_type [79285,79292]"/>
  <match src=".: . [109482,109483]" dest=".: . [69258,69259]"/>
  <match src="type_name [4782,4789]" dest="type_name [4782,4789]"/>
  <match src=".: . [95936,95937]" dest=".: . [31941,31942]"/>
  <match src="{: { [2632,2633]" dest="{: { [2632,2633]"/>
  <match src=",: , [9584,9585]" dest=",: , [9584,9585]"/>
  <match src="identifier: candidate [107819,107828]" dest="identifier: candidate [43824,43833]"/>
  <match src="memory: memory [54762,54768]" dest="memory: memory [20854,20860]"/>
  <match src="view: view [95299,95303]" dest="view: view [31304,31308]"/>
  <match src=".: . [100145,100146]" dest=".: . [36150,36151]"/>
  <match src="identifier: self [9789,9793]" dest="identifier: self [9789,9793]"/>
  <match src="call_argument [102649,102655]" dest="call_argument [38654,38660]"/>
  <match src="{: { [100099,100100]" dest="{: { [36104,36105]"/>
  <match src=",: , [55151,55152]" dest=",: , [21243,21244]"/>
  <match src="array_access [100393,100421]" dest="array_access [36398,36426]"/>
  <match src="parameter [52050,52064]" dest="parameter [26685,26699]"/>
  <match src="state_mutability [993,997]" dest="state_mutability [993,997]"/>
  <match src="visibility [52066,52072]" dest="visibility [26701,26707]"/>
  <match src="identifier: RPAREN [30315,30321]" dest="identifier: RPAREN [46793,46799]"/>
  <match src="identifier: candidates [107406,107416]" dest="identifier: candidates [43411,43421]"/>
  <match src="): ) [48803,48804]" dest="): ) [17384,17385]"/>
  <match src="primitive_type [37919,37924]" dest="primitive_type [54397,54402]"/>
  <match src=",: , [14380,14381]" dest=",: , [24907,24908]"/>
  <match src="function_body [1472,1541]" dest="function_body [1472,1541]"/>
  <match src="parameter [65639,65655]" dest="parameter [78544,78561]"/>
  <match src="identifier: _state [102438,102444]" dest="identifier: _state [38443,38449]"/>
  <match src="member_expression [106729,106743]" dest="member_expression [42734,42748]"/>
  <match src="): ) [80709,80710]" dest="): ) [57666,57667]"/>
  <match src="&quot;: &quot; [85502,85503]" dest="&quot;: &quot; [80864,80865]"/>
  <match src="internal: internal [48027,48035]" dest="internal: internal [16608,16616]"/>
  <match src="identifier: Require [50829,50836]" dest="identifier: Require [63089,63096]"/>
  <match src="call_expression [99635,99669]" dest="call_expression [35640,35674]"/>
  <match src="variable_declaration_statement [2024,2042]" dest="variable_declaration_statement [2024,2042]"/>
  <match src="identifier: CHAIN_ID [43498,43506]" dest="identifier: CHAIN_ID [12079,12087]"/>
  <match src="function_body [105863,106014]" dest="function_body [41868,42019]"/>
  <match src="call_argument [97044,97055]" dest="call_argument [33049,33060]"/>
  <match src="primitive_type [3273,3280]" dest="primitive_type [3273,3280]"/>
  <match src="(: ( [96607,96608]" dest="(: ( [32612,32613]"/>
  <match src="(: ( [97150,97151]" dest="(: ( [33155,33156]"/>
  <match src="): ) [7546,7547]" dest="): ) [7546,7547]"/>
  <match src="bool: bool [102292,102296]" dest="bool: bool [38297,38301]"/>
  <match src="type_name [13670,13677]" dest="type_name [24197,24204]"/>
  <match src="identifier: FILE [87244,87248]" dest="identifier: FILE [78702,78706]"/>
  <match src="function_body [50095,50229]" dest="function_body [56467,56679]"/>
  <match src="): ) [86465,86466]" dest="): ) [63371,63372]"/>
  <match src="(: ( [2333,2334]" dest="(: ( [2333,2334]"/>
  <match src="identifier: getGovernanceSuperMajority [47239,47265]" dest="identifier: getGovernanceSuperMajority [15820,15846]"/>
  <match src="member_expression [100677,100694]" dest="member_expression [36682,36699]"/>
  <match src="identifier: b [8524,8525]" dest="identifier: b [8524,8525]"/>
  <match src="}: } [90298,90299]" dest="}: } [28725,28726]"/>
  <match src="identifier: staged [104532,104538]" dest="identifier: staged [40537,40543]"/>
  <match src="call_struct_argument [7083,7101]" dest="call_struct_argument [7083,7101]"/>
  <match src="): ) [95020,95021]" dest="): ) [31025,31026]"/>
  <match src="{: { [103292,103293]" dest="{: { [39297,39298]"/>
  <match src="uint256: uint256 [973,980]" dest="uint256: uint256 [973,980]"/>
  <match src=".: . [84379,84380]" dest=".: . [71965,71966]"/>
  <match src="identifier: amount0 [56661,56668]" dest="identifier: amount0 [22753,22760]"/>
  <match src="(: ( [16927,16928]" dest="(: ( [18415,18416]"/>
  <match src="identifier: amount0Out [55876,55886]" dest="identifier: amount0Out [21968,21978]"/>
  <match src="return_statement [8138,8180]" dest="return_statement [8138,8180]"/>
  <match src="member_expression [95459,95480]" dest="member_expression [31464,31485]"/>
  <match src="constant: constant [44546,44554]" dest="constant: constant [13127,13135]"/>
  <match src="identifier: a [970,971]" dest="identifier: a [970,971]"/>
  <match src="call_expression [84591,84671]" dest="call_expression [72164,72247]"/>
  <match src="visibility [98999,99005]" dest="visibility [35004,35010]"/>
  <match src="): ) [7744,7745]" dest="): ) [7744,7745]"/>
  <match src="call_expression [84287,84300]" dest="call_expression [71926,71939]"/>
  <match src="{: { [45802,45803]" dest="{: { [14383,14384]"/>
  <match src="identifier: abi [31941,31944]" dest="identifier: abi [48419,48422]"/>
  <match src="variable_declaration_statement [35234,35257]" dest="variable_declaration_statement [51712,51735]"/>
  <match src="parameter [107527,107547]" dest="parameter [43532,43552]"/>
  <match src="+: + [36398,36399]" dest="+: + [52876,52877]"/>
  <match src="primitive_type [16790,16797]" dest="primitive_type [83094,83101]"/>
  <match src="uint256: uint256 [83206,83213]" dest="uint256: uint256 [83117,83124]"/>
  <match src="visibility [5436,5444]" dest="visibility [5436,5444]"/>
  <match src="variable_declaration [75650,75682]" dest="variable_declaration [67642,67662]"/>
  <match src="]: ] [98920,98921]" dest="]: ] [34925,34926]"/>
  <match src="identifier: amount [108047,108053]" dest="identifier: amount [44052,44058]"/>
  <match src="): ) [34186,34187]" dest="): ) [50664,50665]"/>
  <match src="(: ( [7260,7261]" dest="(: ( [7260,7261]"/>
  <match src="): ) [55163,55164]" dest="): ) [21255,21256]"/>
  <match src="expression_statement [36105,36115]" dest="expression_statement [52583,52593]"/>
  <match src="external: external [54796,54804]" dest="external: external [20888,20896]"/>
  <match src="type_name [1902,1909]" dest="type_name [1902,1909]"/>
  <match src="primitive_type [3957,3963]" dest="primitive_type [3957,3963]"/>
  <match src="parameter [29400,29409]" dest="parameter [45878,45887]"/>
  <match src="type_name [66492,66499]" dest="type_name [60974,60981]"/>
  <match src="identifier: incrementBalanceOfPhantom [86477,86502]" dest="identifier: redeemToAccount [63856,63871]"/>
  <match src="address: address [90866,90873]" dest="address: address [29293,29300]"/>
  <match src="identifier: period [90790,90796]" dest="identifier: period [29217,29223]"/>
  <match src="assignment_expression [108338,108384]" dest="assignment_expression [44343,44389]"/>
  <match src="call_argument [93726,93783]" dest="call_argument [77079,77136]"/>
  <match src="memory: memory [9245,9251]" dest="memory: memory [9245,9251]"/>
  <match src="parameter [29888,29902]" dest="parameter [46366,46380]"/>
  <match src="function_definition [48107,48264]" dest="function_definition [16688,16845]"/>
  <match src="identifier: b [1437,1438]" dest="identifier: b [1437,1438]"/>
  <match src="variable_declaration [69583,69608]" dest="variable_declaration [68025,68050]"/>
  <match src="call_argument [107841,107847]" dest="call_argument [43846,43852]"/>
  <match src=",: , [31397,31398]" dest=",: , [47875,47876]"/>
  <match src="type_name [38531,38538]" dest="type_name [55009,55016]"/>
  <match src="}: } [107671,107672]" dest="}: } [43676,43677]"/>
  <match src="identifier: amount [24073,24079]" dest="identifier: amount [18379,18385]"/>
  <match src=",: , [85487,85488]" dest=",: , [80023,80024]"/>
  <match src="return_type_definition [3999,4016]" dest="return_type_definition [3999,4016]"/>
  <match src="(: ( [10967,10968]" dest="(: ( [10967,10968]"/>
  <match src="{: { [35876,35877]" dest="{: { [52354,52355]"/>
  <match src="identifier: D256 [9764,9768]" dest="identifier: D256 [9764,9768]"/>
  <match src="type_name [95570,95577]" dest="type_name [31575,31582]"/>
  <match src="visibility [47433,47441]" dest="visibility [16014,16022]"/>
  <match src="{: { [107958,107959]" dest="{: { [43963,43964]"/>
  <match src="member_expression [107569,107586]" dest="member_expression [43574,43591]"/>
  <match src=",: , [33628,33629]" dest=",: , [50106,50107]"/>
  <match src="member_expression [104701,104733]" dest="member_expression [40706,40738]"/>
  <match src="library: library [28872,28879]" dest="library: library [45350,45357]"/>
  <match src="primitive_type [83091,83098]" dest="primitive_type [70895,70902]"/>
  <match src="block_statement [35215,35497]" dest="block_statement [51693,51975]"/>
  <match src="call_argument [53349,53358]" dest="call_argument [64696,64705]"/>
  <match src="): ) [97446,97447]" dest="): ) [33451,33452]"/>
  <match src="identifier: token0 [53808,53814]" dest="identifier: from [61415,61419]"/>
  <match src="function_definition [97314,97624]" dest="function_definition [33319,33629]"/>
  <match src="call_argument [9369,9376]" dest="call_argument [9369,9376]"/>
  <match src="visibility [44538,44545]" dest="visibility [13119,13126]"/>
  <match src="comment: // 1.10 USDC [43682,43694]" dest="comment: // 1.10 USDC [12263,12275]"/>
  <match src="identifier: sender [53341,53347]" dest="identifier: sender [64598,64604]"/>
  <match src="type_name [90515,90524]" dest="type_name [28942,28951]"/>
  <match src="identifier: D256 [9427,9431]" dest="identifier: D256 [9427,9431]"/>
  <match src="return_statement [47959,47984]" dest="return_statement [16540,16565]"/>
  <match src="{: { [94725,94726]" dest="{: { [30730,30731]"/>
  <match src="comment: /* Regulator */ [45203,45218]" dest="comment: /* Regulator */ [13784,13799]"/>
  <match src="{: { [107199,107200]" dest="{: { [43204,43205]"/>
  <match src="identifier: totalSupply [95397,95408]" dest="identifier: totalSupply [31402,31413]"/>
  <match src="call_argument [104029,104039]" dest="call_argument [40034,40044]"/>
  <match src="identifier: sub [1414,1417]" dest="identifier: sub [1414,1417]"/>
  <match src="}: } [10098,10099]" dest="}: } [10098,10099]"/>
  <match src="assignment_expression [105111,105212]" dest="assignment_expression [41116,41217]"/>
  <match src="**: ** [6547,6549]" dest="**: ** [6547,6549]"/>
  <match src="identifier: b [10221,10222]" dest="identifier: b [10221,10222]"/>
  <match src="function_body [47465,47517]" dest="function_body [16046,16098]"/>
  <match src="function_body [37626,38499]" dest="function_body [54104,54977]"/>
  <match src=",: , [30899,30900]" dest=",: , [47377,47378]"/>
  <match src="identifier: _ [110083,110084]" dest="identifier: _ [69859,69860]"/>
  <match src="memory: memory [9733,9739]" dest="memory: memory [9733,9739]"/>
  <match src="}: } [84762,84763]" dest="}: } [72320,72321]"/>
  <match src="parameter [1429,1438]" dest="parameter [1429,1438]"/>
  <match src="primitive_type [97332,97339]" dest="primitive_type [33337,33344]"/>
  <match src="(: ( [29601,29602]" dest="(: ( [46079,46080]"/>
  <match src="): ) [100798,100799]" dest="): ) [36803,36804]"/>
  <match src="identifier: epoch [104734,104739]" dest="identifier: epoch [40739,40744]"/>
  <match src="call_expression [85296,85349]" dest="call_expression [63383,63441]"/>
  <match src="identifier: sender [85097,85103]" dest="identifier: sender [79316,79322]"/>
  <match src="call_argument [84749,84754]" dest="call_argument [73281,73286]"/>
  <match src="pure: pure [56048,56052]" dest="pure: pure [22140,22144]"/>
  <match src="(: ( [35672,35673]" dest="(: ( [52150,52151]"/>
  <match src="uint256: uint256 [2679,2686]" dest="uint256: uint256 [2679,2686]"/>
  <match src="type_name [100653,100657]" dest="type_name [36658,36662]"/>
  <match src="identifier: getReserves [56252,56263]" dest="identifier: getReserves [22344,22355]"/>
  <match src="identifier: b [8253,8254]" dest="identifier: b [8253,8254]"/>
  <match src="{: { [48521,48522]" dest="{: { [17102,17103]"/>
  <match src="(: ( [8558,8559]" dest="(: ( [8558,8559]"/>
  <match src="type_name [72477,72484]" dest="type_name [65990,65997]"/>
  <match src="private: private [16798,16805]" dest="private: private [19910,19917]"/>
  <match src="returns: returns [9063,9070]" dest="returns: returns [9063,9070]"/>
  <match src="call_argument [31392,31396]" dest="call_argument [47870,47874]"/>
  <match src="identifier: value [54639,54644]" dest="identifier: value [20731,20736]"/>
  <match src="): ) [50220,50221]" dest="): ) [56530,56531]"/>
  <match src="parameter [7412,7421]" dest="parameter [7412,7421]"/>
  <match src="returns: returns [100357,100364]" dest="returns: returns [36362,36369]"/>
  <match src="call_argument [50207,50220]" dest="call_argument [56509,56522]"/>
  <match src="type_name [83106,83113]" dest="type_name [83132,83139]"/>
  <match src="parameter [97151,97158]" dest="parameter [33156,33163]"/>
  <match src="call_expression [30794,30820]" dest="call_expression [47272,47298]"/>
  <match src="identifier: sub [8972,8975]" dest="identifier: sub [8972,8975]"/>
  <match src="address: address [56800,56807]" dest="address: address [22892,22899]"/>
  <match src="block_statement [30599,31079]" dest="block_statement [47077,47557]"/>
  <match src="member_expression [102462,102483]" dest="member_expression [38467,38488]"/>
  <match src="primitive_type [31161,31168]" dest="primitive_type [47639,47646]"/>
  <match src="comment: // 4 hrs [44352,44360]" dest="comment: // 4 hrs [12933,12941]"/>
  <match src="}: } [35932,35933]" dest="}: } [52410,52411]"/>
  <match src=",: , [83960,83961]" dest=",: , [72571,72572]"/>
  <match src="if: if [2620,2622]" dest="if: if [2620,2622]"/>
  <match src="return_statement [48070,48092]" dest="return_statement [16651,16673]"/>
  <match src="(: ( [111271,111272]" dest="(: ( [68072,68073]"/>
  <match src="address: address [104029,104036]" dest="address: address [40034,40041]"/>
  <match src="identifier: push [106478,106482]" dest="identifier: push [42483,42487]"/>
  <match src="visibility [52002,52008]" dest="visibility [26637,26643]"/>
  <match src="identifier: price1Cumulative [69290,69306]" dest="identifier: lessDebt [67089,67097]"/>
  <match src="call_argument [86967,86980]" dest="call_argument [59595,59608]"/>
  <match src="return_statement [35734,35745]" dest="return_statement [52212,52223]"/>
  <match src="&quot;: &quot; [23589,23590]" dest="&quot;: &quot; [63193,63194]"/>
  <match src="returns: returns [9295,9302]" dest="returns: returns [9295,9302]"/>
  <match src="identifier: updatePrice [69192,69203]" dest="identifier: growSupply [66859,66869]"/>
  <match src="(: ( [34334,34335]" dest="(: ( [50812,50813]"/>
  <match src="): ) [54882,54883]" dest="): ) [20974,20975]"/>
  <match src="(: ( [83892,83893]" dest="(: ( [71622,71623]"/>
  <match src="visibility [47100,47108]" dest="visibility [15681,15689]"/>
  <match src="identifier: amount [77591,77597]" dest="identifier: amount [56835,56841]"/>
  <match src="visibility [97970,97976]" dest="visibility [33975,33981]"/>
  <match src="=: = [96902,96903]" dest="=: = [32907,32908]"/>
  <match src="): ) [33702,33703]" dest="): ) [50180,50181]"/>
  <match src="identifier: candidate [100695,100704]" dest="identifier: candidate [36700,36709]"/>
  <match src="(: ( [99434,99435]" dest="(: ( [35439,35440]"/>
  <match src="return_statement [10198,10229]" dest="return_statement [10198,10229]"/>
  <match src="identifier: Account [97370,97377]" dest="identifier: Account [33375,33382]"/>
  <match src="visibility [29470,29478]" dest="visibility [45948,45956]"/>
  <match src="member_expression [96752,96783]" dest="member_expression [32757,32788]"/>
  <match src="variable_declaration [37637,37646]" dest="variable_declaration [54115,54124]"/>
  <match src="address: address [104346,104353]" dest="address: address [40351,40358]"/>
  <match src="type_name [31138,31145]" dest="type_name [47616,47623]"/>
  <match src=".: . [107597,107598]" dest=".: . [43602,43603]"/>
  <match src="modifier_invocation [83554,83576]" dest="modifier_invocation [72369,72398]"/>
  <match src=".: . [9793,9794]" dest=".: . [9793,9794]"/>
  <match src="identifier: i [99394,99395]" dest="identifier: i [35399,35400]"/>
  <match src="parameter [8812,8825]" dest="parameter [8812,8825]"/>
  <match src="function_body [45931,46086]" dest="function_body [14512,14667]"/>
  <match src="member_expression [83317,83337]" dest="member_expression [71352,71373]"/>
  <match src="type_name [56116,56123]" dest="type_name [22208,22215]"/>
  <match src="{: { [86911,86912]" dest="{: { [59539,59540]"/>
  <match src="return_statement [46865,46894]" dest="return_statement [15446,15475]"/>
  <match src="memory: memory [7841,7847]" dest="memory: memory [7841,7847]"/>
  <match src="}: } [7986,7987]" dest="}: } [7986,7987]"/>
  <match src="call_argument [103691,103692]" dest="call_argument [39696,39697]"/>
  <match src="identifier: getBootstrappingPeriod [99645,99667]" dest="identifier: getBootstrappingPeriod [35650,35672]"/>
  <match src="parameter [107708,107725]" dest="parameter [43713,43730]"/>
  <match src="parameter [29845,29854]" dest="parameter [46323,46332]"/>
  <match src="address: address [103683,103690]" dest="address: address [39688,39695]"/>
  <match src="identifier: b [7173,7174]" dest="identifier: b [7173,7174]"/>
  <match src="identifier: DEBT_RATIO_CAP [45165,45179]" dest="identifier: DEBT_RATIO_CAP [13746,13760]"/>
  <match src="state_variable_declaration [44742,44799]" dest="state_variable_declaration [13323,13380]"/>
  <match src="identifier: Setters [101780,101787]" dest="identifier: Setters [37785,37792]"/>
  <match src="contract: contract [94699,94707]" dest="contract: contract [30704,30712]"/>
  <match src="visibility [54670,54678]" dest="visibility [20762,20770]"/>
  <match src="identifier: b [8444,8445]" dest="identifier: b [8444,8445]"/>
  <match src="string [18717,18759]" dest="string [72620,72656]"/>
  <match src="&quot;: &quot; [22155,22156]" dest="&quot;: &quot; [63693,63694]"/>
  <match src="variable_declaration [108153,108172]" dest="variable_declaration [44158,44177]"/>
  <match src="visibility [67030,67036]" dest="visibility [83262,83268]"/>
  <match src="type_name [56889,56896]" dest="type_name [22981,22988]"/>
  <match src="identifier: Require [85869,85876]" dest="identifier: Require [80214,80221]"/>
  <match src=",: , [9203,9204]" dest=",: , [9203,9204]"/>
  <match src="}: } [106013,106014]" dest="}: } [42018,42019]"/>
  <match src="function_definition [74485,74621]" dest="function_definition [59250,59488]"/>
  <match src="{: { [8609,8610]" dest="{: { [8609,8610]"/>
  <match src="identifier: COUPON_SUPPLY_CHANGE_LIMIT [45313,45339]" dest="identifier: COUPON_SUPPLY_CHANGE_LIMIT [13894,13920]"/>
  <match src="function_body [99338,99404]" dest="function_body [35343,35409]"/>
  <match src="(: ( [9553,9554]" dest="(: ( [9553,9554]"/>
  <match src="public: public [98133,98139]" dest="public: public [34138,34144]"/>
  <match src="bytes32: bytes32 [31745,31752]" dest="bytes32: bytes32 [48223,48230]"/>
  <match src="{: { [97449,97450]" dest="{: { [33454,33455]"/>
  <match src="type_name [91371,91384]" dest="type_name [29798,29811]"/>
  <match src="struct_declaration [90325,90422]" dest="struct_declaration [28752,28849]"/>
  <match src="struct_declaration [6606,6650]" dest="struct_declaration [6606,6650]"/>
  <match src="call_expression [106251,106264]" dest="call_expression [42256,42269]"/>
  <match src="type_name [31161,31168]" dest="type_name [47639,47646]"/>
  <match src="view: view [95418,95422]" dest="view: view [31423,31427]"/>
  <match src="state_variable_declaration [44390,44438]" dest="state_variable_declaration [12971,13019]"/>
  <match src="(: ( [32002,32003]" dest="(: ( [48480,48481]"/>
  <match src="comment: // than to check the size of the code at that address. [88812,88866]" dest="comment: // than to check the size of the code at that address. [74479,74533]"/>
  <match src="member_expression [104185,104200]" dest="member_expression [40190,40205]"/>
  <match src="function: function [10392,10400]" dest="function: function [10392,10400]"/>
  <match src="identifier: candidate [107071,107080]" dest="identifier: candidate [43076,43085]"/>
  <match src="function_body [48059,48099]" dest="function_body [16640,16680]"/>
  <match src="member_expression [107210,107227]" dest="member_expression [43215,43232]"/>
  <match src="external: external [56572,56580]" dest="external: external [22664,22672]"/>
  <match src="uint256: uint256 [37649,37656]" dest="uint256: uint256 [54127,54134]"/>
  <match src="}: } [109860,109861]" dest="}: } [69636,69637]"/>
  <match src="if: if [96928,96930]" dest="if: if [32933,32935]"/>
  <match src="primitive_type [14382,14389]" dest="primitive_type [24909,24916]"/>
  <match src="identifier: a [3943,3944]" dest="identifier: a [3943,3944]"/>
  <match src="identifier: D256 [48330,48334]" dest="identifier: D256 [16911,16915]"/>
  <match src="): ) [10156,10157]" dest="): ) [10156,10157]"/>
  <match src="user_defined_type [68610,68622]" dest="user_defined_type [20141,20153]"/>
  <match src="identifier: accounts [104428,104436]" dest="identifier: accounts [40433,40441]"/>
  <match src="): ) [8943,8944]" dest="): ) [8943,8944]"/>
  <match src="(: ( [29729,29730]" dest="(: ( [46207,46208]"/>
  <match src="function_body [1016,1130]" dest="function_body [1016,1130]"/>
  <match src="identifier: epoch [98992,98997]" dest="identifier: epoch [34997,35002]"/>
  <match src="primitive_type [54559,54563]" dest="primitive_type [20651,20655]"/>
  <match src="return_type_definition [99794,99818]" dest="return_type_definition [35799,35823]"/>
  <match src="public: public [100345,100351]" dest="public: public [36350,36356]"/>
  <match src="visibility [9480,9488]" dest="visibility [9480,9488]"/>
  <match src="address: address [55502,55509]" dest="address: address [21594,21601]"/>
  <match src="}: } [48766,48767]" dest="}: } [17347,17348]"/>
  <match src="library_declaration [88211,89247]" dest="library_declaration [73878,74914]"/>
  <match src="bool: bool [33769,33773]" dest="bool: bool [50247,50251]"/>
  <match src="pure: pure [47682,47686]" dest="pure: pure [16263,16267]"/>
  <match src="function_body [34708,35578]" dest="function_body [51186,52056]"/>
  <match src="type_name [15266,15273]" dest="type_name [25793,25800]"/>
  <match src="call_expression [86262,86308]" dest="call_expression [80356,80408]"/>
  <match src="type_name [5386,5393]" dest="type_name [5386,5393]"/>
  <match src="type_name [46152,46159]" dest="type_name [14733,14740]"/>
  <match src="parameter [24231,24245]" dest="parameter [18625,18639]"/>
  <match src="primitive_type [102156,102160]" dest="primitive_type [38161,38165]"/>
  <match src="type_name [45501,45508]" dest="type_name [14082,14089]"/>
  <match src="primitive_type [95530,95537]" dest="primitive_type [31535,31542]"/>
  <match src="identifier: amount [103780,103786]" dest="identifier: amount [39785,39791]"/>
  <match src="identifier: from [15045,15049]" dest="identifier: from [25572,25576]"/>
  <match src="parameter [54693,54706]" dest="parameter [20785,20798]"/>
  <match src="{: { [96224,96225]" dest="{: { [32229,32230]"/>
  <match src="}: } [38728,38729]" dest="}: } [55206,55207]"/>
  <match src="{: { [99480,99481]" dest="{: { [35485,35486]"/>
  <match src="memory: memory [98303,98309]" dest="memory: memory [34308,34314]"/>
  <match src="return: return [46865,46871]" dest="return: return [15446,15452]"/>
  <match src="uint: uint [56721,56725]" dest="uint: uint [22813,22817]"/>
  <match src="type_name [102156,102160]" dest="type_name [38161,38165]"/>
  <match src="number_literal: 10 [36478,36480]" dest="number_literal: 10 [52956,52958]"/>
  <match src="pragma_directive [54,78]" dest="pragma_directive [54,78]"/>
  <match src="(: ( [95687,95688]" dest="(: ( [31692,31693]"/>
  <match src="&quot;: &quot; [83969,83970]" dest="&quot;: &quot; [81445,81446]"/>
  <match src="call_argument [18622,18628]" dest="call_argument [60132,60138]"/>
  <match src="function: function [103060,103068]" dest="function: function [39065,39073]"/>
  <match src="visibility [107190,107198]" dest="visibility [43195,43203]"/>
  <match src="struct: struct [90954,90960]" dest="struct: struct [29381,29387]"/>
  <match src="): ) [9910,9911]" dest="): ) [9910,9911]"/>
  <match src="member_expression [104239,104260]" dest="member_expression [40244,40265]"/>
  <match src="identifier: createCandidate [106927,106942]" dest="identifier: createCandidate [42932,42947]"/>
  <match src="call_argument [87051,87081]" dest="call_argument [59446,59469]"/>
  <match src="identifier: allowance [95505,95514]" dest="identifier: allowance [31510,31519]"/>
  <match src="uint256: uint256 [83249,83256]" dest="uint256: uint256 [71286,71293]"/>
  <match src="parameter [102009,102023]" dest="parameter [38014,38028]"/>
  <match src="primitive_type [55581,55588]" dest="primitive_type [21673,21680]"/>
  <match src="uint256: uint256 [29049,29056]" dest="uint256: uint256 [45527,45534]"/>
  <match src="bool: bool [55111,55115]" dest="bool: bool [21203,21207]"/>
  <match src="function: function [99412,99420]" dest="function: function [35417,35425]"/>
  <match src="call_expression [2707,2763]" dest="call_expression [2707,2763]"/>
  <match src="parameter [56750,56769]" dest="parameter [22842,22861]"/>
  <match src=",: , [21107,21108]" dest=",: , [64973,64974]"/>
  <match src="primitive_type [100188,100195]" dest="primitive_type [36193,36200]"/>
  <match src="parameter [77733,77747]" dest="parameter [56955,56969]"/>
  <match src="uint256: uint256 [106962,106969]" dest="uint256: uint256 [42967,42974]"/>
  <match src="user_defined_type [9013,9017]" dest="user_defined_type [9013,9017]"/>
  <match src="identifier: add [104783,104786]" dest="identifier: add [40788,40791]"/>
  <match src="call_expression [86262,86277]" dest="call_expression [80356,80375]"/>
  <match src="parameter [81340,81354]" dest="parameter [81157,81174]"/>
  <match src="call_argument [22248,22254]" dest="call_argument [59965,59971]"/>
  <match src="!=: != [5489,5491]" dest="!=: != [5489,5491]"/>
  <match src="function_body [47828,47877]" dest="function_body [16409,16458]"/>
  <match src="(: ( [23016,23017]" dest="(: ( [64070,64071]"/>
  <match src="call_expression [74558,74591]" dest="call_expression [59320,59353]"/>
  <match src="primitive_type [104650,104657]" dest="primitive_type [40655,40662]"/>
  <match src="}: } [47040,47041]" dest="}: } [15621,15622]"/>
  <match src="comment: // ============ Private Functions ============ [34539,34585]" dest="comment: // ============ Private Functions ============ [51017,51063]"/>
  <match src="identifier: D256 [7787,7791]" dest="identifier: D256 [7787,7791]"/>
  <match src="): ) [97447,97448]" dest="): ) [33452,33453]"/>
  <match src="call_expression [84450,84463]" dest="call_expression [72051,72064]"/>
  <match src="{: { [89980,89981]" dest="{: { [28407,28408]"/>
  <match src="return_type_definition [95304,95321]" dest="return_type_definition [31309,31326]"/>
  <match src="array_access [104743,104767]" dest="array_access [40748,40772]"/>
  <match src="): ) [46159,46160]" dest="): ) [14740,14741]"/>
  <match src="string_literal [22155,22190]" dest="string_literal [63693,63722]"/>
  <match src="!: ! [29509,29510]" dest="!: ! [45987,45988]"/>
  <match src="(: ( [107439,107440]" dest="(: ( [43444,43445]"/>
  <match src="{: { [46614,46615]" dest="{: { [15195,15196]"/>
  <match src="call_expression [85451,85539]" dest="call_expression [80002,80041]"/>
  <match src="byte: byte [29236,29240]" dest="byte: byte [45714,45718]"/>
  <match src="identifier: OpenZeppelinUpgradesAddress [93726,93753]" dest="identifier: OpenZeppelinUpgradesAddress [77079,77106]"/>
  <match src=",: , [86612,86613]" dest=",: , [81104,81105]"/>
  <match src="uint256: uint256 [82945,82952]" dest="uint256: uint256 [61554,61561]"/>
  <match src="address: address [20699,20706]" dest="address: address [64321,64328]"/>
  <match src="{: { [99819,99820]" dest="{: { [35824,35825]"/>
  <match src="type_alias [16628,16636]" dest="type_alias [60945,60953]"/>
  <match src="identifier: oracle [111265,111271]" dest="identifier: oracle [68066,68072]"/>
  <match src="number_literal: 20 [45404,45406]" dest="number_literal: 20 [13985,13987]"/>
  <match src="identifier: amount [21594,21600]" dest="identifier: amount [59610,59616]"/>
  <match src="uint256: uint256 [24231,24238]" dest="uint256: uint256 [18625,18632]"/>
  <match src="internal: internal [47556,47564]" dest="internal: internal [16137,16145]"/>
  <match src="identifier: stringifyTruncated [30183,30201]" dest="identifier: stringifyTruncated [46661,46679]"/>
  <match src="function_body [46736,46779]" dest="function_body [15317,15360]"/>
  <match src="(: ( [20842,20843]" dest="(: ( [64487,64488]"/>
  <match src="type_name [8871,8875]" dest="type_name [8871,8875]"/>
  <match src="state_mutability [55019,55023]" dest="state_mutability [21111,21115]"/>
  <match src="visibility [94986,94992]" dest="visibility [30991,30997]"/>
  <match src="): ) [21126,21127]" dest="): ) [64999,65000]"/>
  <match src="&quot;: &quot; [85537,85538]" dest="&quot;: &quot; [80881,80882]"/>
  <match src="call_expression [75770,75838]" dest="call_expression [82102,82150]"/>
  <match src="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [64042,64700]" dest="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [26831,27489]"/>
  <match src=",: , [33496,33497]" dest=",: , [49974,49975]"/>
  <match src="function: function [100444,100452]" dest="function: function [36449,36457]"/>
  <match src="): ) [81182,81183]" dest="): ) [83343,83344]"/>
  <match src="identifier: value [47016,47021]" dest="identifier: value [15597,15602]"/>
  <match src="user_defined_type [9988,9992]" dest="user_defined_type [9988,9992]"/>
  <match src="return_type_definition [7031,7052]" dest="return_type_definition [7031,7052]"/>
  <match src="(: ( [9849,9850]" dest="(: ( [9849,9850]"/>
  <match src="identifier: size [89181,89185]" dest="identifier: size [74848,74852]"/>
  <match src="(: ( [90192,90193]" dest="(: ( [28619,28620]"/>
  <match src="memory: memory [8414,8420]" dest="memory: memory [8414,8420]"/>
  <match src="{: { [64729,64730]" dest="{: { [27518,27519]"/>
  <match src="primitive_type [83002,83009]" dest="primitive_type [70979,70986]"/>
  <match src="call_struct_argument [48221,48254]" dest="call_struct_argument [16802,16835]"/>
  <match src="address: address [45501,45508]" dest="address: address [14082,14089]"/>
  <match src="identifier: shift [37268,37273]" dest="identifier: shift [53746,53751]"/>
  <match src="): ) [95190,95191]" dest="): ) [31195,31196]"/>
  <match src="identifier: epochs [98908,98914]" dest="identifier: epochs [34913,34919]"/>
  <match src="[: [ [105691,105692]" dest="[: [ [41696,41697]"/>
  <match src=",: , [85395,85396]" dest=",: , [80072,80073]"/>
  <match src="primitive_type [105623,105630]" dest="primitive_type [41628,41635]"/>
  <match src="private: private [94812,94819]" dest="private: private [30817,30824]"/>
  <match src=",: , [7803,7804]" dest=",: , [7803,7804]"/>
  <match src="identifier: input [37657,37662]" dest="identifier: input [54135,54140]"/>
  <match src="primitive_type [72555,72562]" dest="primitive_type [65903,65910]"/>
  <match src="identifier: payloadA [34257,34265]" dest="identifier: payloadA [50735,50743]"/>
  <match src="{: { [89999,90000]" dest="{: { [28426,28427]"/>
  <match src="): ) [35569,35570]" dest="): ) [52047,52048]"/>
  <match src="state_mutability [55324,55328]" dest="state_mutability [21416,21420]"/>
  <match src="uint256: uint256 [84266,84273]" dest="uint256: uint256 [63218,63225]"/>
  <match src="identifier: account [105446,105453]" dest="identifier: account [41451,41458]"/>
  <match src="type_cast_expression [74577,74590]" dest="type_cast_expression [59339,59352]"/>
  <match src="identifier: file [29647,29651]" dest="identifier: file [46125,46129]"/>
  <match src="external: external [83832,83840]" dest="external: external [81176,81184]"/>
  <match src="call_expression [7718,7745]" dest="call_expression [7718,7745]"/>
  <match src="}: } [90725,90726]" dest="}: } [29152,29153]"/>
  <match src="primitive_type [56721,56725]" dest="primitive_type [22813,22817]"/>
  <match src=":: : [97594,97595]" dest=":: : [33599,33600]"/>
  <match src="uint256: uint256 [66802,66809]" dest="uint256: uint256 [78329,78336]"/>
  <match src=".: . [105682,105683]" dest=".: . [41687,41688]"/>
  <match src="identifier: encodePacked [33401,33413]" dest="identifier: encodePacked [49879,49891]"/>
  <match src="event_paramater [54592,54612]" dest="event_paramater [20684,20704]"/>
  <match src="&quot;: &quot; [109806,109807]" dest="&quot;: &quot; [69582,69583]"/>
  <match src="member_expression [85093,85103]" dest="member_expression [79312,79322]"/>
  <match src="return: return [6794,6800]" dest="return: return [6794,6800]"/>
  <match src="identifier: D256 [9642,9646]" dest="identifier: D256 [9642,9646]"/>
  <match src="[: [ [107377,107378]" dest="[: [ [43382,43383]"/>
  <match src="&quot;: &quot; [85844,85845]" dest="&quot;: &quot; [81293,81294]"/>
  <match src="number_literal: 0 [104037,104038]" dest="number_literal: 0 [40042,40043]"/>
  <match src="primitive_type [105832,105838]" dest="primitive_type [41837,41843]"/>
  <match src="identifier: newImplementation [93944,93961]" dest="identifier: newImplementation [77297,77314]"/>
  <match src="return: return [98174,98180]" dest="return: return [34179,34185]"/>
  <match src="(: ( [7940,7941]" dest="(: ( [7940,7941]"/>
  <match src="expression_statement [50106,50222]" dest="expression_statement [56478,56532]"/>
  <match src="pure: pure [46548,46552]" dest="pure: pure [15129,15133]"/>
  <match src="number_literal: 2 [10090,10091]" dest="number_literal: 2 [10090,10091]"/>
  <match src="contract_body [90947,91511]" dest="contract_body [29374,29938]"/>
  <match src="{: { [102888,102889]" dest="{: { [38893,38894]"/>
  <match src="}: } [4266,4267]" dest="}: } [4266,4267]"/>
  <match src=",: , [50893,50894]" dest=",: , [63162,63163]"/>
  <match src="&lt;=: &lt;= [1994,1996]" dest="&lt;=: &lt;= [1994,1996]"/>
  <match src="function_definition [64834,64882]" dest="function_definition [27623,27671]"/>
  <match src=",: , [109515,109516]" dest=",: , [69291,69292]"/>
  <match src="parameter [17095,17102]" dest="parameter [57200,57207]"/>
  <match src="type_name [105053,105060]" dest="type_name [41058,41065]"/>
  <match src="number_literal: 0 [23036,23037]" dest="number_literal: 0 [64090,64091]"/>
  <match src="identifier: encodePacked [30061,30073]" dest="identifier: encodePacked [46539,46551]"/>
  <match src=",: , [20967,20968]" dest=",: , [57054,57055]"/>
  <match src="identifier: compareTo [11063,11072]" dest="identifier: compareTo [11063,11072]"/>
  <match src="primitive_type [103245,103252]" dest="primitive_type [39250,39257]"/>
  <match src="type_name [9988,9992]" dest="type_name [9988,9992]"/>
  <match src="=: = [8694,8695]" dest="=: = [8694,8695]"/>
  <match src="identifier: candidate [99855,99864]" dest="identifier: candidate [35860,35869]"/>
  <match src="identifier: BASE [9801,9805]" dest="identifier: BASE [9801,9805]"/>
  <match src="(: ( [27385,27386]" dest="(: ( [72686,72687]"/>
  <match src="}: } [30396,30397]" dest="}: } [46874,46875]"/>
  <match src="member_expression [105938,105953]" dest="member_expression [41943,41958]"/>
  <match src="return: return [48639,48645]" dest="return: return [17220,17226]"/>
  <match src="member_expression [107399,107439]" dest="member_expression [43404,43444]"/>
  <match src="for: for [73584,73587]" dest="for: for [56089,56092]"/>
  <match src="parameter [7586,7602]" dest="parameter [7586,7602]"/>
  <match src="comment: // File: contracts/dao/Upgradeable.sol [91565,91603]" dest="comment: // File: contracts/dao/Upgradeable.sol [74918,74956]"/>
  <match src="return_statement [10061,10092]" dest="return_statement [10061,10092]"/>
  <match src="&quot;: &quot; [109550,109551]" dest="&quot;: &quot; [69326,69327]"/>
  <match src="member_expression [100117,100134]" dest="member_expression [36122,36139]"/>
  <match src="): ) [105211,105212]" dest="): ) [41216,41217]"/>
  <match src=",: , [1998,1999]" dest=",: , [1998,1999]"/>
  <match src="state_mutability [35654,35658]" dest="state_mutability [52132,52136]"/>
  <match src="call_argument [33576,33582]" dest="call_argument [50054,50060]"/>
  <match src="call_argument [7508,7546]" dest="call_argument [7508,7546]"/>
  <match src="): ) [8630,8631]" dest="): ) [8630,8631]"/>
  <match src="): ) [104793,104794]" dest="): ) [40798,40799]"/>
  <match src=".: . [106241,106242]" dest=".: . [42246,42247]"/>
  <match src="primitive_type [82920,82927]" dest="primitive_type [83179,83186]"/>
  <match src="function: function [56492,56500]" dest="function: function [22584,22592]"/>
  <match src="function_definition [101972,102080]" dest="function_definition [37977,38085]"/>
  <match src="primitive_type [56880,56887]" dest="primitive_type [22972,22979]"/>
  <match src=".: . [83324,83325]" dest=".: . [71360,71361]"/>
  <match src="member_expression [47002,47014]" dest="member_expression [15583,15595]"/>
  <match src="address: address [82977,82984]" dest="address: address [70954,70961]"/>
  <match src="address: address [83148,83155]" dest="address: address [78470,78477]"/>
  <match src="identifier: _state [96752,96758]" dest="identifier: _state [32757,32763]"/>
  <match src="member_expression [106754,106768]" dest="member_expression [42759,42773]"/>
  <match src="parameter [108114,108131]" dest="parameter [44119,44136]"/>
  <match src="function_body [36637,37512]" dest="function_body [53115,53990]"/>
  <match src="&quot;: &quot; [87274,87275]" dest="&quot;: &quot; [78737,78738]"/>
  <match src="identifier: input [35707,35712]" dest="identifier: input [52185,52190]"/>
  <match src="member_expression [105111,105143]" dest="member_expression [41116,41148]"/>
  <match src="type_name [90981,90988]" dest="type_name [29408,29415]"/>
  <match src="{: { [106361,106362]" dest="{: { [42366,42367]"/>
  <match src="function_body [24254,24299]" dest="function_body [56754,56923]"/>
  <match src="): ) [17102,17103]" dest="): ) [57207,57208]"/>
  <match src="uint256: uint256 [33864,33871]" dest="uint256: uint256 [50342,50349]"/>
  <match src="string_literal [4819,4845]" dest="string_literal [4819,4845]"/>
  <match src="state_mutability [95987,95991]" dest="state_mutability [31992,31996]"/>
  <match src="primitive_type [22877,22884]" dest="primitive_type [64010,64017]"/>
  <match src="bytes: bytes [93302,93307]" dest="bytes: bytes [76655,76660]"/>
  <match src="uint256: uint256 [99471,99478]" dest="uint256: uint256 [35476,35483]"/>
  <match src="expression_statement [37856,37892]" dest="expression_statement [54334,54370]"/>
  <match src="parameter [10181,10185]" dest="parameter [10181,10185]"/>
  <match src="number_literal: 3e16 [45271,45275]" dest="number_literal: 3e16 [13852,13856]"/>
  <match src="contract_body [51965,52151]" dest="contract_body [26600,26786]"/>
  <match src="identifier: i [38066,38067]" dest="identifier: i [54544,54545]"/>
  <match src="]: ] [105895,105896]" dest="]: ] [41900,41901]"/>
  <match src="type_name [102541,102548]" dest="type_name [38546,38553]"/>
  <match src="return: return [98772,98778]" dest="return: return [34777,34783]"/>
  <match src="identifier: amount [24239,24245]" dest="identifier: amount [18633,18639]"/>
  <match src="type_name [104650,104657]" dest="type_name [40655,40662]"/>
  <match src="primitive_type [66539,66546]" dest="primitive_type [78254,78261]"/>
  <match src="call_argument [37873,37890]" dest="call_argument [54351,54368]"/>
  <match src="uint256: uint256 [6521,6528]" dest="uint256: uint256 [6521,6528]"/>
  <match src="view: view [99149,99153]" dest="view: view [35154,35158]"/>
  <match src="identifier: file [30457,30461]" dest="identifier: file [46935,46939]"/>
  <match src="string: string [31301,31307]" dest="string: string [47779,47785]"/>
  <match src="identifier: result [35475,35481]" dest="identifier: result [51953,51959]"/>
  <match src="]: ] [104208,104209]" dest="]: ] [40213,40214]"/>
  <match src="member_expression [48207,48219]" dest="member_expression [16788,16800]"/>
  <match src="): ) [38662,38663]" dest="): ) [55140,55141]"/>
  <match src="identifier: div [9628,9631]" dest="identifier: div [9628,9631]"/>
  <match src=",: , [9805,9806]" dest=",: , [9805,9806]"/>
  <match src="view: view [100076,100080]" dest="view: view [36081,36085]"/>
  <match src="function_definition [52015,52073]" dest="function_definition [26650,26708]"/>
  <match src="function: function [102372,102380]" dest="function: function [38377,38385]"/>
  <match src="primitive_type [52142,52146]" dest="primitive_type [26777,26781]"/>
  <match src="contract: contract [90303,90311]" dest="contract: contract [28730,28738]"/>
  <match src="{: { [31850,31851]" dest="{: { [48328,48329]"/>
  <match src="identifier: getUsdcAddress [45648,45662]" dest="identifier: getUsdcAddress [14229,14243]"/>
  <match src="type_name [13615,13622]" dest="type_name [24142,24149]"/>
  <match src="]: ] [100008,100009]" dest="]: ] [36013,36014]"/>
  <match src="identifier: errorMessage [3971,3983]" dest="identifier: errorMessage [3971,3983]"/>
  <match src="number_literal: 66e16 [44723,44728]" dest="number_literal: 66e16 [13304,13309]"/>
  <match src="visibility [4759,4767]" dest="visibility [4759,4767]"/>
  <match src="call_expression [104185,104228]" dest="call_expression [40190,40233]"/>
  <match src="primitive_type [44530,44537]" dest="primitive_type [13111,13118]"/>
  <match src="{: { [35362,35363]" dest="{: { [51840,51841]"/>
  <match src="type_name [38058,38065]" dest="type_name [54536,54543]"/>
  <match src="identifier: outstanding [98930,98941]" dest="identifier: outstanding [34935,34946]"/>
  <match src="indexed: indexed [54622,54629]" dest="indexed: indexed [20714,20721]"/>
  <match src="(: ( [23035,23036]" dest="(: ( [64089,64090]"/>
  <match src="call_expression [32231,32250]" dest="call_expression [48709,48728]"/>
  <match src="identifier: value [9588,9593]" dest="identifier: value [9588,9593]"/>
  <match src="): ) [97037,97038]" dest="): ) [33042,33043]"/>
  <match src="state_mutability [7021,7025]" dest="state_mutability [7021,7025]"/>
  <match src=".: . [48175,48176]" dest=".: . [16756,16757]"/>
  <match src="uint256: uint256 [1902,1909]" dest="uint256: uint256 [1902,1909]"/>
  <match src="view: view [98245,98249]" dest="view: view [34250,34254]"/>
  <match src=":: : [47349,47350]" dest=":: : [15930,15931]"/>
  <match src="parameter [56172,56179]" dest="parameter [22264,22271]"/>
  <match src=",: , [33217,33218]" dest=",: , [49695,49696]"/>
  <match src=",: , [70471,70472]" dest=",: , [80631,80632]"/>
  <match src="identifier: outstanding [106848,106859]" dest="identifier: outstanding [42853,42864]"/>
  <match src="member_expression [97401,97437]" dest="member_expression [33406,33442]"/>
  <match src="return: return [70365,70371]" dest="return: return [62782,62788]"/>
  <match src="(: ( [103360,103361]" dest="(: ( [39365,39366]"/>
  <match src="return_statement [1114,1123]" dest="return_statement [1114,1123]"/>
  <match src="parameter [31770,31786]" dest="parameter [48248,48264]"/>
  <match src="variable_declaration_statement [75650,75721]" dest="variable_declaration_statement [67642,67680]"/>
  <match src="uint256: uint256 [90240,90247]" dest="uint256: uint256 [28667,28674]"/>
  <match src="return_type_definition [48159,48188]" dest="return_type_definition [16740,16769]"/>
  <match src="identifier: j [35816,35817]" dest="identifier: j [52294,52295]"/>
  <match src="internal: internal [48145,48153]" dest="internal: internal [16726,16734]"/>
  <match src="event: event [82908,82913]" dest="event: event [83157,83162]"/>
  <match src="type_name [36779,36784]" dest="type_name [53257,53262]"/>
  <match src="identifier: mul [86375,86378]" dest="identifier: mul [72969,72972]"/>
  <match src=".: . [69230,69231]" dest=".: . [67999,68000]"/>
  <match src="identifier: start [107027,107032]" dest="identifier: start [43032,43037]"/>
  <match src="return: return [8547,8553]" dest="return: return [8547,8553]"/>
  <match src="array_access [36869,36878]" dest="array_access [53347,53356]"/>
  <match src="type_name [34767,34772]" dest="type_name [51245,51250]"/>
  <match src="identifier: length [99228,99234]" dest="identifier: length [35233,35239]"/>
  <match src=",: , [9799,9800]" dest=",: , [9799,9800]"/>
  <match src="primitive_type [105784,105791]" dest="primitive_type [41789,41796]"/>
  <match src="identifier: mul [84380,84383]" dest="identifier: mul [71966,71969]"/>
  <match src="identifier: candidates [107976,107986]" dest="identifier: candidates [43981,43991]"/>
  <match src="identifier: msg [83950,83953]" dest="identifier: msg [72561,72564]"/>
  <match src="): ) [10222,10223]" dest="): ) [10222,10223]"/>
  <match src="primitive_type [102292,102296]" dest="primitive_type [38297,38301]"/>
  <match src="call_argument [3355,3383]" dest="call_argument [3355,3383]"/>
  <match src="{: { [105100,105101]" dest="{: { [41105,41106]"/>
  <match src="=: = [37459,37460]" dest="=: = [53937,53938]"/>
  <match src="parameter [96001,96008]" dest="parameter [32006,32013]"/>
  <match src="}: } [7111,7112]" dest="}: } [7111,7112]"/>
  <match src="{: { [10050,10051]" dest="{: { [10050,10051]"/>
  <match src=",: , [53178,53179]" dest=",: , [56260,56261]"/>
  <match src="(: ( [54908,54909]" dest="(: ( [21000,21001]"/>
  <match src="expression_statement [84822,84843]" dest="expression_statement [72912,72933]"/>
  <match src="identifier: Constants [79715,79724]" dest="identifier: Constants [61889,61898]"/>
  <match src="uint256: uint256 [29913,29920]" dest="uint256: uint256 [46391,46398]"/>
  <match src="variable_declaration_statement [93287,93397]" dest="variable_declaration_statement [76640,76750]"/>
  <match src="identifier: IOracle [64721,64728]" dest="identifier: IOracle [27510,27517]"/>
  <match src="call_argument [10751,10755]" dest="call_argument [10751,10755]"/>
  <match src=".: . [96358,96359]" dest=".: . [32363,32364]"/>
  <match src="call_expression [84220,84235]" dest="call_expression [66659,66680]"/>
  <match src="state_mutability [99940,99944]" dest="state_mutability [35945,35949]"/>
  <match src="function: function [96277,96285]" dest="function: function [32282,32290]"/>
  <match src="=: = [1037,1038]" dest="=: = [1037,1038]"/>
  <match src="identifier: require [93407,93414]" dest="identifier: require [76760,76767]"/>
  <match src="function_definition [104312,104590]" dest="function_definition [40317,40595]"/>
  <match src="indexed: indexed [54542,54549]" dest="indexed: indexed [20634,20641]"/>
  <match src="contract: contract [91515,91523]" dest="contract: contract [29942,29950]"/>
  <match src="type_name [102239,102246]" dest="type_name [38244,38251]"/>
  <match src="type_name [104346,104353]" dest="type_name [40351,40358]"/>
  <match src="(: ( [48142,48143]" dest="(: ( [16723,16724]"/>
  <match src="primitive_type [69872,69879]" dest="primitive_type [72443,72450]"/>
  <match src="): ) [55590,55591]" dest="): ) [21682,21683]"/>
  <match src="struct_declaration [44090,44193]" dest="struct_declaration [12671,12774]"/>
  <match src="visibility [64753,64759]" dest="visibility [27542,27548]"/>
  <match src="type_name [55644,55648]" dest="type_name [21736,21740]"/>
  <match src="): ) [86057,86058]" dest="): ) [78682,78683]"/>
  <match src="primitive_type [47819,47826]" dest="primitive_type [16400,16407]"/>
  <match src="): ) [20905,20906]" dest="): ) [64558,64559]"/>
  <match src="identifier: _state [103599,103605]" dest="identifier: _state [39604,39610]"/>
  <match src="identifier: amount [18709,18715]" dest="identifier: amount [18496,18502]"/>
  <match src="type_name [43700,43707]" dest="type_name [12281,12288]"/>
  <match src="identifier: current [106115,106122]" dest="identifier: current [42120,42127]"/>
  <match src="(: ( [37423,37424]" dest="(: ( [53901,53902]"/>
  <match src="}: } [10763,10764]" dest="}: } [10763,10764]"/>
  <match src="type_name [7814,7821]" dest="type_name [7814,7821]"/>
  <match src="(: ( [56090,56091]" dest="(: ( [22182,22183]"/>
  <match src="call_argument [51016,51020]" dest="call_argument [63015,63019]"/>
  <match src=",: , [105997,105998]" dest=",: , [42002,42003]"/>
  <match src="primitive_type [83051,83058]" dest="primitive_type [70855,70862]"/>
  <match src="call_argument [109996,110017]" dest="call_argument [69772,69793]"/>
  <match src="struct: struct [90430,90436]" dest="struct: struct [28857,28863]"/>
  <match src=".: . [106839,106840]" dest=".: . [42844,42845]"/>
  <match src="identifier: RPAREN [31588,31594]" dest="identifier: RPAREN [48066,48072]"/>
  <match src="): ) [96839,96840]" dest="): ) [32844,32845]"/>
  <match src="identifier: value [82953,82958]" dest="identifier: value [61562,61567]"/>
  <match src="uint256: uint256 [90088,90095]" dest="uint256: uint256 [28515,28522]"/>
  <match src="identifier: coupons [105287,105294]" dest="identifier: coupons [41292,41299]"/>
  <match src="primitive_type [100502,100509]" dest="primitive_type [36507,36514]"/>
  <match src=",: , [54612,54613]" dest=",: , [20704,20705]"/>
  <match src="bytes32: bytes32 [31161,31168]" dest="bytes32: bytes32 [47639,47646]"/>
  <match src=".: . [100824,100825]" dest=".: . [36829,36830]"/>
  <match src="type_name [55713,55717]" dest="type_name [21805,21809]"/>
  <match src=",: , [102256,102257]" dest=",: , [38261,38262]"/>
  <match src="memory: memory [8876,8882]" dest="memory: memory [8876,8882]"/>
  <match src="identifier: amount [105648,105654]" dest="identifier: amount [41653,41659]"/>
  <match src="call_argument [10084,10085]" dest="call_argument [10084,10085]"/>
  <match src="type_name [4748,4755]" dest="type_name [4748,4755]"/>
  <match src="]: ] [100282,100283]" dest="]: ] [36287,36288]"/>
  <match src="event: event [101848,101853]" dest="event: event [37853,37858]"/>
  <match src="call_argument [85626,85638]" dest="call_argument [72798,72804]"/>
  <match src="variable_declaration_statement [86156,86215]" dest="variable_declaration_statement [62128,62202]"/>
  <match src="external: external [56457,56465]" dest="external: external [22549,22557]"/>
  <match src="{: { [1016,1017]" dest="{: { [1016,1017]"/>
  <match src="]: ] [99395,99396]" dest="]: ] [35400,35401]"/>
  <match src="identifier: sub [104487,104490]" dest="identifier: sub [40492,40495]"/>
  <match src="byte: byte [38589,38593]" dest="byte: byte [55067,55071]"/>
  <match src="return_type_definition [1454,1471]" dest="return_type_definition [1454,1471]"/>
  <match src=",: , [56748,56749]" dest=",: , [22840,22841]"/>
  <match src="number_literal: 0 [5492,5493]" dest="number_literal: 0 [5492,5493]"/>
  <match src="identifier: permit [55495,55501]" dest="identifier: permit [21587,21593]"/>
  <match src="type_name [90139,90166]" dest="type_name [28566,28593]"/>
  <match src="type_name [3284,3291]" dest="type_name [3284,3291]"/>
  <match src="identifier: value [83419,83424]" dest="identifier: value [71455,71460]"/>
  <match src="expression_statement [5479,5509]" dest="expression_statement [5479,5509]"/>
  <match src="type_name [54559,54563]" dest="type_name [20651,20655]"/>
  <match src=",: , [86067,86068]" dest=",: , [80467,80468]"/>
  <match src="): ) [46852,46853]" dest="): ) [15433,15434]"/>
  <match src="visibility [95873,95879]" dest="visibility [31878,31884]"/>
  <match src="call_expression [8159,8176]" dest="call_expression [8159,8176]"/>
  <match src=",: , [30931,30932]" dest=",: , [47409,47410]"/>
  <match src="type_name [7220,7224]" dest="type_name [7220,7224]"/>
  <match src="{: { [108323,108324]" dest="{: { [44328,44329]"/>
  <match src="parameter [47579,47586]" dest="parameter [16160,16167]"/>
  <match src="): ) [982,983]" dest="): ) [982,983]"/>
  <match src="): ) [55008,55009]" dest="): ) [21100,21101]"/>
  <match src="function: function [96799,96807]" dest="function: function [32804,32812]"/>
  <match src="function_body [47588,47631]" dest="function_body [16169,16212]"/>
  <match src="identifier: approve [14357,14364]" dest="identifier: approve [24884,24891]"/>
  <match src="assignment_expression [38385,38429]" dest="assignment_expression [54863,54907]"/>
  <match src="call_expression [34035,34478]" dest="call_expression [50513,50956]"/>
  <match src="identifier: burnFrom [52024,52032]" dest="identifier: burnFrom [26659,26667]"/>
  <match src="{: { [109416,109417]" dest="{: { [69192,69193]"/>
  <match src="returns: returns [46718,46725]" dest="returns: returns [15299,15306]"/>
  <match src="): ) [26933,26934]" dest="): ) [79757,79758]"/>
  <match src="]: ] [100144,100145]" dest="]: ] [36149,36150]"/>
  <match src="call_argument [31475,31481]" dest="call_argument [47953,47959]"/>
  <match src="public: public [100207,100213]" dest="public: public [36212,36218]"/>
  <match src="type_name [54614,54621]" dest="type_name [20706,20713]"/>
  <match src="member_expression [31330,31346]" dest="member_expression [47808,47824]"/>
  <match src="visibility [31826,31834]" dest="visibility [48304,48312]"/>
  <match src="type_name [99435,99442]" dest="type_name [35440,35447]"/>
  <match src="identifier: msg [85591,85594]" dest="identifier: msg [72763,72766]"/>
  <match src="(: ( [52092,52093]" dest="(: ( [26727,26728]"/>
  <match src="bool: bool [100794,100798]" dest="bool: bool [36799,36803]"/>
  <match src=",: , [7282,7283]" dest=",: , [7282,7283]"/>
  <match src="primitive_type [52093,52100]" dest="primitive_type [26728,26735]"/>
  <match src="identifier: FOUR_BIT_MASK [37286,37299]" dest="identifier: FOUR_BIT_MASK [53764,53777]"/>
  <match src=",: , [55711,55712]" dest=",: , [21803,21804]"/>
  <match src="string_literal [109530,109551]" dest="string_literal [69306,69327]"/>
  <match src="(: ( [96437,96438]" dest="(: ( [32442,32443]"/>
  <match src="parameter [55064,55079]" dest="parameter [21156,21171]"/>
  <match src="parameter [8871,8882]" dest="parameter [8871,8882]"/>
  <match src="array_access [97259,97283]" dest="array_access [33264,33288]"/>
  <match src="): ) [109890,109891]" dest="): ) [69666,69667]"/>
  <match src="identifier: Vote [90659,90663]" dest="identifier: Vote [29086,29090]"/>
  <match src="primitive_type [55243,55247]" dest="primitive_type [21335,21339]"/>
  <match src="): ) [36579,36580]" dest="): ) [53057,53058]"/>
  <match src="return: return [102309,102315]" dest="return: return [38314,38320]"/>
  <match src="call_argument [21594,21600]" dest="call_argument [59610,59616]"/>
  <match src="function_definition [12795,12850]" dest="function_definition [23322,23377]"/>
  <match src="function: function [54890,54898]" dest="function: function [20982,20990]"/>
  <match src="uint112: uint112 [56307,56314]" dest="uint112: uint112 [22399,22406]"/>
  <match src="(: ( [83248,83249]" dest="(: ( [71285,71286]"/>
  <match src="user_defined_type [9728,9732]" dest="user_defined_type [9728,9732]"/>
  <match src="(: ( [31346,31347]" dest="(: ( [47824,47825]"/>
  <match src="identifier: approve [102097,102104]" dest="identifier: approve [38102,38109]"/>
  <match src="identifier: D256 [10125,10129]" dest="identifier: D256 [10125,10129]"/>
  <match src="parenthesized_expression [29537,29794]" dest="parenthesized_expression [46015,46272]"/>
  <match src="if: if [97171,97173]" dest="if: if [33176,33178]"/>
  <match src="parameter [9728,9739]" dest="parameter [9728,9739]"/>
  <match src="identifier: period [44179,44185]" dest="identifier: period [12760,12766]"/>
  <match src="): ) [55378,55379]" dest="): ) [21470,21471]"/>
  <match src="identifier: balance [104270,104277]" dest="identifier: balance [40275,40282]"/>
  <match src="identifier: D256 [9988,9992]" dest="identifier: D256 [9988,9992]"/>
  <match src="string [20868,20905]" dest="string [64513,64558]"/>
  <match src="identifier: z [38306,38307]" dest="identifier: z [54784,54785]"/>
  <match src="call_expression [10205,10223]" dest="call_expression [10205,10223]"/>
  <match src="pure: pure [1449,1453]" dest="pure: pure [1449,1453]"/>
  <match src="): ) [7984,7985]" dest="): ) [7984,7985]"/>
  <match src="expression_statement [104701,104795]" dest="expression_statement [40706,40800]"/>
  <match src="call_struct_argument [47176,47212]" dest="call_struct_argument [15757,15793]"/>
  <match src="(: ( [99126,99127]" dest="(: ( [35131,35132]"/>
  <match src="): ) [54569,54570]" dest="): ) [20661,20662]"/>
  <match src="member_expression [104455,104490]" dest="member_expression [40460,40495]"/>
  <match src="primitive_type [53840,53847]" dest="primitive_type [61529,61536]"/>
  <match src="visibility [68593,68600]" dest="visibility [20210,20217]"/>
  <match src="identifier: reason [102657,102663]" dest="identifier: reason [38662,38668]"/>
  <match src=".: . [105351,105352]" dest=".: . [41356,41357]"/>
  <match src="primitive_type [56307,56314]" dest="primitive_type [22399,22406]"/>
  <match src="uint: uint [56670,56674]" dest="uint: uint [22762,22766]"/>
  <match src="call_argument [109740,109747]" dest="call_argument [69516,69523]"/>
  <match src="return_type_definition [88668,88682]" dest="return_type_definition [74335,74349]"/>
  <match src="): ) [83323,83324]" dest="): ) [71359,71360]"/>
  <match src="member_expression [105337,105359]" dest="member_expression [41342,41364]"/>
  <match src="memory: memory [36785,36791]" dest="memory: memory [53263,53269]"/>
  <match src="parameter [102402,102416]" dest="parameter [38407,38421]"/>
  <match src="identifier: D256 [8491,8495]" dest="identifier: D256 [8491,8495]"/>
  <match src="identifier: a [1997,1998]" dest="identifier: a [1997,1998]"/>
  <match src="parameter [69223,69242]" dest="parameter [67992,68011]"/>
  <match src="call_argument [106633,106638]" dest="call_argument [42638,42643]"/>
  <match src="function_body [98163,98209]" dest="function_body [34168,34214]"/>
  <match src="identifier: sub [102941,102944]" dest="identifier: sub [38946,38949]"/>
  <match src="?: ? [84342,84343]" dest="?: ? [71945,71946]"/>
  <match src="identifier: account [104354,104361]" dest="identifier: account [40359,40366]"/>
  <match src=",: , [31127,31128]" dest=",: , [47605,47606]"/>
  <match src="&quot;: &quot; [87263,87264]" dest="&quot;: &quot; [78721,78722]"/>
  <match src="parameter [8785,8801]" dest="parameter [8785,8801]"/>
  <match src="identifier: allowance [54968,54977]" dest="identifier: allowance [21060,21069]"/>
  <match src="identifier: msg [83852,83855]" dest="identifier: msg [72889,72892]"/>
  <match src="member_expression [97002,97019]" dest="member_expression [33007,33024]"/>
  <match src=",: , [90702,90703]" dest=",: , [29129,29130]"/>
  <match src="parameter [31702,31711]" dest="parameter [48180,48189]"/>
  <match src=".: . [96248,96249]" dest=".: . [32253,32254]"/>
  <match src="state_variable_declaration [29277,29314]" dest="state_variable_declaration [45755,45792]"/>
  <match src="function_definition [46094,46209]" dest="function_definition [14675,14790]"/>
  <match src="function_body [33306,33737]" dest="function_body [49784,50215]"/>
  <match src="type_name [96687,96694]" dest="type_name [32692,32699]"/>
  <match src="function: function [9967,9975]" dest="function: function [9967,9975]"/>
  <match src="): ) [7180,7181]" dest="): ) [7180,7181]"/>
  <match src="state_mutability [34670,34674]" dest="state_mutability [51148,51152]"/>
  <match src="view: view [96848,96852]" dest="view: view [32853,32857]"/>
  <match src="identifier: couponAllowances [105897,105913]" dest="identifier: couponAllowances [41902,41918]"/>
  <match src="identifier: D256 [9868,9872]" dest="identifier: D256 [9868,9872]"/>
  <match src="(: ( [65679,65680]" dest="(: ( [81981,81982]"/>
  <match src="identifier: add [7371,7374]" dest="identifier: add [7371,7374]"/>
  <match src="primitive_type [85052,85059]" dest="primitive_type [63252,63259]"/>
  <match src="number_literal: 10 [6545,6547]" dest="number_literal: 10 [6545,6547]"/>
  <match src="primitive_type [44742,44749]" dest="primitive_type [13323,13330]"/>
  <match src="bool: bool [29400,29404]" dest="bool: bool [45878,45882]"/>
  <match src="return_type_definition [13297,13311]" dest="return_type_definition [23824,23838]"/>
  <match src="): ) [99478,99479]" dest="): ) [35483,35484]"/>
  <match src="identifier: a [11194,11195]" dest="identifier: a [11194,11195]"/>
  <match src="call_argument [5487,5493]" dest="call_argument [5487,5493]"/>
  <match src="function: function [48107,48115]" dest="function: function [16688,16696]"/>
  <match src="address: address [56116,56123]" dest="address: address [22208,22215]"/>
  <match src="type_name [70345,70352]" dest="type_name [62762,62769]"/>
  <match src="state_variable_declaration [29145,29176]" dest="state_variable_declaration [45623,45654]"/>
  <match src="return_statement [8329,8371]" dest="return_statement [8329,8371]"/>
  <match src="): ) [30597,30598]" dest="): ) [47075,47076]"/>
  <match src="identifier: account [75829,75836]" dest="identifier: account [82126,82133]"/>
  <match src="uint256: uint256 [44992,44999]" dest="uint256: uint256 [13573,13580]"/>
  <match src="pure: pure [30567,30571]" dest="pure: pure [47045,47049]"/>
  <match src="type_cast_expression [93424,93438]" dest="type_cast_expression [76777,76791]"/>
  <match src="primitive_type [36886,36891]" dest="primitive_type [53364,53369]"/>
  <match src="]: ] [97424,97425]" dest="]: ] [33429,33430]"/>
  <match src="identifier: lockedUntil [97779,97790]" dest="identifier: lockedUntil [33784,33795]"/>
  <match src="identifier: reserve1 [56315,56323]" dest="identifier: reserve1 [22407,22415]"/>
  <match src="(: ( [83881,83882]" dest="(: ( [71611,71612]"/>
  <match src="member_expression [86445,86455]" dest="member_expression [63347,63357]"/>
  <match src="visibility [83545,83553]" dest="visibility [71554,71562]"/>
  <match src="[: [ [104716,104717]" dest="[: [ [40721,40722]"/>
  <match src="primitive_type [37607,37612]" dest="primitive_type [54085,54090]"/>
  <match src="}: } [10383,10384]" dest="}: } [10383,10384]"/>
  <match src="uint256: uint256 [105038,105045]" dest="uint256: uint256 [41043,41050]"/>
  <match src="identifier: account [97030,97037]" dest="identifier: account [33035,33042]"/>
  <match src="expression_statement [104421,104507]" dest="expression_statement [40426,40512]"/>
  <match src="primitive_type [80693,80700]" dest="primitive_type [57641,57648]"/>
  <match src="(: ( [55272,55273]" dest="(: ( [21364,21365]"/>
  <match src=",: , [33582,33583]" dest=",: , [50060,50061]"/>
  <match src="identifier: stringifyTruncated [29628,29646]" dest="identifier: stringifyTruncated [46106,46124]"/>
  <match src="(: ( [36006,36007]" dest="(: ( [52484,52485]"/>
  <match src="member_expression [104185,104220]" dest="member_expression [40190,40225]"/>
  <match src="): ) [47826,47827]" dest="): ) [16407,16408]"/>
  <match src="): ) [86276,86277]" dest="): ) [80374,80375]"/>
  <match src="using_directive [94732,94759]" dest="using_directive [30737,30764]"/>
  <match src="identifier: SUPPLY_CHANGE_LIMIT [48529,48548]" dest="identifier: SUPPLY_CHANGE_LIMIT [17110,17129]"/>
  <match src="identifier: value [7711,7716]" dest="identifier: value [7711,7716]"/>
  <match src=".: . [11006,11007]" dest=".: . [11006,11007]"/>
  <match src="identifier: accounts [105945,105953]" dest="identifier: accounts [41950,41958]"/>
  <match src="): ) [97836,97837]" dest="): ) [33841,33842]"/>
  <match src="(: ( [33374,33375]" dest="(: ( [49852,49853]"/>
  <match src="}: } [96164,96165]" dest="}: } [32169,32170]"/>
  <match src="expression_statement [83922,84009]" dest="expression_statement [72536,72581]"/>
  <match src="string_literal [2727,2762]" dest="string_literal [2727,2762]"/>
  <match src="identifier: value [83538,83543]" dest="identifier: value [71547,71552]"/>
  <match src="event_definition [15251,15329]" dest="event_definition [25778,25856]"/>
  <match src="identifier: approve [107428,107435]" dest="identifier: approve [43433,43440]"/>
  <match src="identifier: redeemable [103318,103328]" dest="identifier: redeemable [39323,39333]"/>
  <match src="type_name [56325,56331]" dest="type_name [22417,22423]"/>
  <match src="parameter [10668,10684]" dest="parameter [10668,10684]"/>
  <match src="variable_declaration [96882,96901]" dest="variable_declaration [32887,32906]"/>
  <match src="): ) [37441,37442]" dest="): ) [53919,53920]"/>
  <match src="identifier: mod [4809,4812]" dest="identifier: mod [4809,4812]"/>
  <match src="type_name [10851,10858]" dest="type_name [10851,10858]"/>
  <match src="function: function [6711,6719]" dest="function: function [6711,6719]"/>
  <match src="uint256: uint256 [38531,38538]" dest="uint256: uint256 [55009,55016]"/>
  <match src="public: public [95292,95298]" dest="public: public [31297,31303]"/>
  <match src="): ) [32324,32325]" dest="): ) [48802,48803]"/>
  <match src="parameter [962,971]" dest="parameter [962,971]"/>
  <match src="primitive_type [56889,56896]" dest="primitive_type [22981,22988]"/>
  <match src="identifier: balance [102906,102913]" dest="identifier: balance [38911,38918]"/>
  <match src="(: ( [7080,7081]" dest="(: ( [7080,7081]"/>
  <match src="parameter [74782,74797]" dest="parameter [81943,81958]"/>
  <match src="mapping: mapping [90185,90192]" dest="mapping: mapping [28612,28619]"/>
  <match src=".: . [105944,105945]" dest=".: . [41949,41950]"/>
  <match src="]: ] [106838,106839]" dest="]: ] [42843,42844]"/>
  <match src="binary_expression [23017,23038]" dest="binary_expression [64071,64092]"/>
  <match src="(: ( [86275,86276]" dest="(: ( [80364,80365]"/>
  <match src="): ) [37662,37663]" dest="): ) [54140,54141]"/>
  <match src="call_expression [87156,87286]" dest="call_expression [78635,78749]"/>
  <match src="identifier: _state [105111,105117]" dest="identifier: _state [41116,41122]"/>
  <match src="comment: /* Bootstrapping */ [43531,43550]" dest="comment: /* Bootstrapping */ [12112,12131]"/>
  <match src="}: } [110091,110092]" dest="}: } [69867,69868]"/>
  <match src="call_expression [83875,83911]" dest="call_expression [71605,71641]"/>
  <match src="state_mutability [56275,56279]" dest="state_mutability [22367,22371]"/>
  <match src="call_argument [26897,26933]" dest="call_argument [79727,79757]"/>
  <match src="member_expression [106754,106776]" dest="member_expression [42759,42781]"/>
  <match src="identifier: spender [102113,102120]" dest="identifier: spender [38118,38125]"/>
  <match src="(: ( [93379,93380]" dest="(: ( [76732,76733]"/>
  <match src="parameter [55033,55037]" dest="parameter [21125,21129]"/>
  <match src="]: ] [99375,99376]" dest="]: ] [35380,35381]"/>
  <match src="): ) [8260,8261]" dest="): ) [8260,8261]"/>
  <match src="(: ( [64800,64801]" dest="(: ( [27589,27590]"/>
  <match src="parameter [14797,14811]" dest="parameter [25324,25338]"/>
  <match src="uint256: uint256 [44742,44749]" dest="uint256: uint256 [13323,13330]"/>
  <match src="string_literal [50908,50927]" dest="string_literal [64621,64658]"/>
  <match src="): ) [6848,6849]" dest="): ) [6848,6849]"/>
  <match src=",: , [83417,83418]" dest=",: , [71453,71454]"/>
  <match src="assignment_expression [102438,102495]" dest="assignment_expression [38443,38500]"/>
  <match src="primitive_type [100613,100620]" dest="primitive_type [36618,36625]"/>
  <match src="(: ( [48373,48374]" dest="(: ( [16954,16955]"/>
  <match src="(: ( [56625,56626]" dest="(: ( [22717,22718]"/>
  <match src="primitive_type [22088,22095]" dest="primitive_type [59707,59714]"/>
  <match src="emit: emit [104006,104010]" dest="emit: emit [40011,40015]"/>
  <match src="parameter [102223,102237]" dest="parameter [38228,38242]"/>
  <match src="call_expression [79715,79750]" dest="call_expression [61889,61920]"/>
  <match src="identifier: incrementBalanceOfBonded [86420,86444]" dest="identifier: burnFromAccount [63331,63346]"/>
  <match src="type_name [95530,95537]" dest="type_name [31535,31542]"/>
  <match src="identifier: zero [6720,6724]" dest="identifier: zero [6720,6724]"/>
  <match src="]: ] [99066,99067]" dest="]: ] [35071,35072]"/>
  <match src=",: , [55515,55516]" dest=",: , [21607,21608]"/>
  <match src="type_name [14831,14835]" dest="type_name [25358,25362]"/>
  <match src="return: return [99491,99497]" dest="return: return [35496,35502]"/>
  <match src=",: , [32204,32205]" dest=",: , [48682,48683]"/>
  <match src="(: ( [75812,75813]" dest="(: ( [82115,82116]"/>
  <match src="revert: revert [30003,30009]" dest="revert: revert [46481,46487]"/>
  <match src="parameter [95530,95545]" dest="parameter [31535,31550]"/>
  <match src="): ) [98131,98132]" dest="): ) [34136,34137]"/>
  <match src="parameter [56289,56305]" dest="parameter [22381,22397]"/>
  <match src="identifier: _state [96028,96034]" dest="identifier: _state [32033,32039]"/>
  <match src="primitive_type [4134,4141]" dest="primitive_type [4134,4141]"/>
  <match src="comment: // populate the most-significant character [38329,38371]" dest="comment: // populate the most-significant character [54807,54849]"/>
  <match src="number_literal: 12 [44796,44798]" dest="number_literal: 12 [13377,13379]"/>
  <match src="expression_statement [36869,36905]" dest="expression_statement [53347,53383]"/>
  <match src="type_name [93672,93679]" dest="type_name [77025,77032]"/>
  <match src="member_expression [96242,96256]" dest="member_expression [32247,32261]"/>
  <match src="address: address [74782,74789]" dest="address: address [81943,81950]"/>
  <match src="user_defined_type [48469,48481]" dest="user_defined_type [17050,17062]"/>
  <match src="member_expression [105266,105294]" dest="member_expression [41271,41299]"/>
  <match src="primitive_type [36381,36386]" dest="primitive_type [52859,52864]"/>
  <match src="type_name [37071,37078]" dest="type_name [53549,53556]"/>
  <match src=",: , [81164,81165]" dest=",: , [83334,83335]"/>
  <match src="event: event [55609,55614]" dest="event: event [21701,21706]"/>
  <match src="comment: // all bytes are zero [35520,35541]" dest="comment: // all bytes are zero [51998,52019]"/>
  <match src="parameter [32459,32475]" dest="parameter [48937,48953]"/>
  <match src="identifier: result [37398,37404]" dest="identifier: result [53876,53882]"/>
  <match src="&quot;: &quot; [84006,84007]" dest="&quot;: &quot; [81458,81459]"/>
  <match src="}: } [53628,53629]" dest="}: } [64934,64935]"/>
  <match src="identifier: period [107091,107097]" dest="identifier: period [43096,43102]"/>
  <match src="call_expression [93718,93847]" dest="call_expression [77071,77200]"/>
  <match src="primitive_type [7814,7821]" dest="primitive_type [7814,7821]"/>
  <match src="identifier: must [33322,33326]" dest="identifier: must [49800,49804]"/>
  <match src="expression_statement [84152,84173]" dest="expression_statement [71875,71896]"/>
  <match src="function: function [64834,64842]" dest="function: function [27623,27631]"/>
  <match src="call_argument [34180,34186]" dest="call_argument [50658,50664]"/>
  <match src="call_argument [102657,102663]" dest="call_argument [38662,38668]"/>
  <match src="internal: internal [33282,33290]" dest="internal: internal [49760,49768]"/>
  <match src="parameter [24065,24079]" dest="parameter [18371,18385]"/>
  <match src="&gt;&gt;: &gt;&gt; [37463,37465]" dest="&gt;&gt;: &gt;&gt; [53941,53943]"/>
  <match src="(: ( [7732,7733]" dest="(: ( [7732,7733]"/>
  <match src="primitive_type [54819,54824]" dest="primitive_type [20911,20916]"/>
  <match src="(: ( [10667,10668]" dest="(: ( [10667,10668]"/>
  <match src="&quot;: &quot; [26599,26600]" dest="&quot;: &quot; [79577,79578]"/>
  <match src="address: address [56560,56567]" dest="address: address [22652,22659]"/>
  <match src="identifier: value [11278,11283]" dest="identifier: value [11278,11283]"/>
  <match src="visibility [100069,100075]" dest="visibility [36074,36080]"/>
  <match src="return_statement [95141,95157]" dest="return_statement [31146,31162]"/>
  <match src="return_type_definition [99011,99028]" dest="return_type_definition [35016,35033]"/>
  <match src="array_access [104455,104479]" dest="array_access [40460,40484]"/>
  <match src="string: string [30028,30034]" dest="string: string [46506,46512]"/>
  <match src="-: - [38395,38396]" dest="-: - [54873,54874]"/>
  <match src="parameter [31118,31127]" dest="parameter [47596,47605]"/>
  <match src="identifier: msg [84897,84900]" dest="identifier: msg [72486,72489]"/>
  <match src="function_body [98000,98074]" dest="function_body [34005,34079]"/>
  <match src="): ) [31066,31067]" dest="): ) [47544,47545]"/>
  <match src="primitive_type [53417,53424]" dest="primitive_type [64802,64809]"/>
  <match src="call_expression [83317,83324]" dest="call_expression [71352,71360]"/>
  <match src="identifier: msg [84161,84164]" dest="identifier: msg [71884,71887]"/>
  <match src="type_name [77274,77281]" dest="type_name [83064,83071]"/>
  <match src="comment: // for more details about how this works. [88941,88982]" dest="comment: // for more details about how this works. [74608,74649]"/>
  <match src="(: ( [86294,86295]" dest="(: ( [80389,80390]"/>
  <match src="uint256: uint256 [98259,98266]" dest="uint256: uint256 [34264,34271]"/>
  <match src="identifier: ASCII_ZERO [28960,28970]" dest="identifier: ASCII_ZERO [45438,45448]"/>
  <match src="(: ( [95431,95432]" dest="(: ( [31436,31437]"/>
  <match src="type_name [66802,66809]" dest="type_name [78329,78336]"/>
  <match src="member_expression [106125,106137]" dest="member_expression [42130,42142]"/>
  <match src="uint256: uint256 [45288,45295]" dest="uint256: uint256 [13869,13876]"/>
  <match src="): ) [20732,20733]" dest="): ) [64369,64370]"/>
  <match src="(: ( [83529,83530]" dest="(: ( [71538,71539]"/>
  <match src="): ) [86901,86902]" dest="): ) [59529,59530]"/>
  <match src="identifier: stringifyTruncated [30711,30729]" dest="identifier: stringifyTruncated [47189,47207]"/>
  <match src="ternary_expression [97523,97610]" dest="ternary_expression [33528,33615]"/>
  <match src="primitive_type [105038,105045]" dest="primitive_type [41043,41050]"/>
  <match src="member_expression [96352,96366]" dest="member_expression [32357,32371]"/>
  <match src="uint256: uint256 [4748,4755]" dest="uint256: uint256 [4748,4755]"/>
  <match src="assignment_expression [37856,37891]" dest="assignment_expression [54334,54369]"/>
  <match src=".: . [95825,95826]" dest=".: . [31830,31831]"/>
  <match src="array_access [107763,107791]" dest="array_access [43768,43796]"/>
  <match src="comment: // 100 SPAD -&gt; 100M SPAD-S [44039,44065]" dest="comment: // 100 SPAD -&gt; 100M SPAD-S [12620,12646]"/>
  <match src="call_expression [98535,98551]" dest="call_expression [34540,34556]"/>
  <match src=":=: := [101020,101022]" dest=":=: := [37025,37027]"/>
  <match src="state_mutability [10316,10320]" dest="state_mutability [10316,10320]"/>
  <match src="string_literal [22256,22292]" dest="string_literal [63034,63065]"/>
  <match src="comment: // 0.5% [44657,44664]" dest="comment: // 0.5% [13238,13245]"/>
  <match src="comment: // Solidity only automatically asserts when dividing by 0 [4028,4085]" dest="comment: // Solidity only automatically asserts when dividing by 0 [4028,4085]"/>
  <match src="): ) [54794,54795]" dest="): ) [20886,20887]"/>
  <match src="}: } [104589,104590]" dest="}: } [40594,40595]"/>
  <match src="comment: // File: @openzeppelin/contracts/token/ERC20/IERC20.sol [12479,12534]" dest="comment: // File: @openzeppelin/contracts/token/ERC20/IERC20.sol [23006,23061]"/>
  <match src="return_type_definition [36609,36631]" dest="return_type_definition [53087,53109]"/>
  <match src="identifier: candidate [107313,107322]" dest="identifier: candidate [43318,43327]"/>
  <match src="view: view [95199,95203]" dest="view: view [31204,31208]"/>
  <match src="memory: memory [104386,104392]" dest="memory: memory [40391,40397]"/>
  <match src="primitive_type [36932,36937]" dest="primitive_type [53410,53415]"/>
  <match src="{: { [88683,88684]" dest="{: { [74350,74351]"/>
  <match src="uint256: uint256 [84855,84862]" dest="uint256: uint256 [62066,62073]"/>
  <match src="): ) [110027,110028]" dest="): ) [69803,69804]"/>
  <match src="uint256: uint256 [2334,2341]" dest="uint256: uint256 [2334,2341]"/>
  <match src="(: ( [54793,54794]" dest="(: ( [20885,20886]"/>
  <match src="}: } [9958,9959]" dest="}: } [9958,9959]"/>
  <match src="return_type_definition [55174,55188]" dest="return_type_definition [21266,21280]"/>
  <match src="call_argument [104567,104573]" dest="call_argument [40572,40578]"/>
  <match src="emit_statement [86589,86641]" dest="emit_statement [81082,81117]"/>
  <match src="identifier: Fluid [97611,97616]" dest="identifier: Fluid [33616,33621]"/>
  <match src="type_name [52142,52146]" dest="type_name [26777,26781]"/>
  <match src="call_expression [81128,81183]" dest="call_expression [83310,83344]"/>
  <match src="primitive_type [1027,1034]" dest="primitive_type [1027,1034]"/>
  <match src="primitive_type [2379,2386]" dest="primitive_type [2379,2386]"/>
  <match src="call_argument [87373,87401]" dest="call_argument [79165,79220]"/>
  <match src="{: { [95697,95698]" dest="{: { [31702,31703]"/>
  <match src="(: ( [7039,7040]" dest="(: ( [7039,7040]"/>
  <match src="identifier: div [97040,97043]" dest="identifier: div [33045,33048]"/>
  <match src="identifier: b [7290,7291]" dest="identifier: b [7290,7291]"/>
  <match src="type_name [83173,83180]" dest="type_name [61464,61471]"/>
  <match src="member_expression [9789,9799]" dest="member_expression [9789,9799]"/>
  <match src="uint256: uint256 [101905,101912]" dest="uint256: uint256 [37910,37917]"/>
  <match src="): ) [24290,24291]" dest="): ) [56798,56799]"/>
  <match src="identifier: sender [21101,21107]" dest="identifier: sender [64967,64973]"/>
  <match src="): ) [7860,7861]" dest="): ) [7860,7861]"/>
  <match src="primitive_type [29145,29151]" dest="primitive_type [45623,45629]"/>
  <match src="parameter [30497,30513]" dest="parameter [46975,46991]"/>
  <match src="return_statement [48639,48664]" dest="return_statement [17220,17245]"/>
  <match src="identifier: stringify [35595,35604]" dest="identifier: stringify [52073,52082]"/>
  <match src=".: . [107614,107615]" dest=".: . [43619,43620]"/>
  <match src="expression_statement [24265,24292]" dest="expression_statement [56765,56800]"/>
  <match src="variable_declaration_statement [108153,108212]" dest="variable_declaration_statement [44158,44217]"/>
  <match src="(: ( [98751,98752]" dest="(: ( [34756,34757]"/>
  <match src="parameter [22894,22908]" dest="parameter [64027,64041]"/>
  <match src=",: , [67358,67359]" dest=",: , [81787,81788]"/>
  <match src=":: : [11288,11289]" dest=":: : [11288,11289]"/>
  <match src="uint256: uint256 [90833,90840]" dest="uint256: uint256 [29260,29267]"/>
  <match src="primitive_type [35615,35622]" dest="primitive_type [52093,52100]"/>
  <match src="type_name [99954,99961]" dest="type_name [35959,35966]"/>
  <match src="primitive_type [55561,55566]" dest="primitive_type [21653,21658]"/>
  <match src="user_defined_type [7668,7672]" dest="user_defined_type [7668,7672]"/>
  <match src="string [59322,59347]" dest="string [73187,73218]"/>
  <match src="}: } [31669,31670]" dest="}: } [48147,48148]"/>
  <match src="identifier: amount1 [56675,56682]" dest="identifier: amount1 [22767,22774]"/>
  <match src="(: ( [30967,30968]" dest="(: ( [47445,47446]"/>
  <match src="identifier: votes [107239,107244]" dest="identifier: votes [43244,43249]"/>
  <match src="identifier: b [1992,1993]" dest="identifier: b [1992,1993]"/>
  <match src="primitive_type [56656,56660]" dest="primitive_type [22748,22752]"/>
  <match src="(: ( [32634,32635]" dest="(: ( [49112,49113]"/>
  <match src="(: ( [46844,46845]" dest="(: ( [15425,15426]"/>
  <match src="identifier: mod [4733,4736]" dest="identifier: mod [4733,4736]"/>
  <match src="expression_statement [83317,83372]" dest="expression_statement [71352,71408]"/>
  <match src="primitive_type [7165,7172]" dest="primitive_type [7165,7172]"/>
  <match src="comment: // 30 epochs [44956,44968]" dest="comment: // 30 epochs [13537,13549]"/>
  <match src="expression_statement [83727,83742]" dest="expression_statement [57327,57342]"/>
  <match src="uint256: uint256 [96725,96732]" dest="uint256: uint256 [32730,32737]"/>
  <match src="call_argument [36886,36903]" dest="call_argument [53364,53381]"/>
  <match src="pure: pure [45674,45678]" dest="pure: pure [14255,14259]"/>
  <match src="return: return [95708,95714]" dest="return: return [31713,31719]"/>
  <match src="identifier: require [20754,20761]" dest="identifier: require [64391,64398]"/>
  <match src="function_body [103498,103719]" dest="function_body [39503,39724]"/>
  <match src="identifier: add [104285,104288]" dest="identifier: add [40290,40293]"/>
  <match src="address: address [100921,100928]" dest="address: address [36926,36933]"/>
  <match src="state_variable_declaration [28989,29031]" dest="state_variable_declaration [45467,45509]"/>
  <match src="type_name [56307,56314]" dest="type_name [22399,22406]"/>
  <match src="string: string [54693,54699]" dest="string: string [20785,20791]"/>
  <match src="type_name [66471,66483]" dest="type_name [65823,65835]"/>
  <match src="): ) [86979,86980]" dest="): ) [59607,59608]"/>
  <match src="identifier: epochs [106379,106385]" dest="identifier: epochs [42384,42390]"/>
  <match src="type_name [4737,4744]" dest="type_name [4737,4744]"/>
  <match src="identifier: Constants [43439,43448]" dest="identifier: Constants [12020,12029]"/>
  <match src="uint256: uint256 [24065,24072]" dest="uint256: uint256 [18371,18378]"/>
  <match src="uint256: uint256 [73588,73595]" dest="uint256: uint256 [56093,56100]"/>
  <match src="assignment_expression [104239,104296]" dest="assignment_expression [40244,40301]"/>
  <match src="event_definition [92937,92984]" dest="event_definition [76290,76337]"/>
  <match src="return: return [99183,99189]" dest="return: return [35188,35194]"/>
  <match src="identifier: TREASURY_ADDRESS [48855,48871]" dest="identifier: TREASURY_ADDRESS [17436,17452]"/>
  <match src="&quot;: &quot; [109530,109531]" dest="&quot;: &quot; [69306,69307]"/>
  <match src="parameter [95792,95799]" dest="parameter [31797,31804]"/>
  <match src="(: ( [33541,33542]" dest="(: ( [50019,50020]"/>
  <match src="identifier: msg [85477,85480]" dest="identifier: msg [80013,80016]"/>
  <match src="identifier: candidates [107060,107070]" dest="identifier: candidates [43065,43075]"/>
  <match src="private: private [44538,44545]" dest="private: private [13119,13126]"/>
  <match src="unary_expression [53425,53427]" dest="unary_expression [64810,64812]"/>
  <match src=".: . [96256,96257]" dest=".: . [32261,32262]"/>
  <match src="internal: internal [98729,98737]" dest="internal: internal [34734,34742]"/>
  <match src="): ) [9032,9033]" dest="): ) [9032,9033]"/>
  <match src="memory: memory [10424,10430]" dest="memory: memory [10424,10430]"/>
  <match src=",: , [10865,10866]" dest=",: , [10865,10866]"/>
  <match src="uint256: uint256 [82887,82894]" dest="uint256: uint256 [70823,70830]"/>
  <match src="+: + [35253,35254]" dest="+: + [51731,51732]"/>
  <match src="identifier: reason [105397,105403]" dest="identifier: reason [41402,41408]"/>
  <match src="member_expression [105266,105306]" dest="member_expression [41271,41311]"/>
  <match src="ternary_expression [84321,84394]" dest="ternary_expression [71926,72046]"/>
  <match src="[: [ [105143,105144]" dest="[: [ [41148,41149]"/>
  <match src="comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [2539,2610]" dest="comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [2539,2610]"/>
  <match src="call_argument [86515,86546]" dest="call_argument [63884,63896]"/>
  <match src="(: ( [109889,109890]" dest="(: ( [69665,69666]"/>
  <match src="external: external [55449,55457]" dest="external: external [21541,21549]"/>
  <match src=",: , [55241,55242]" dest=",: , [21333,21334]"/>
  <match src="primitive_type [99163,99170]" dest="primitive_type [35168,35175]"/>
  <match src="(: ( [34925,34926]" dest="(: ( [51403,51404]"/>
  <match src="parameter [97652,97667]" dest="parameter [33657,33672]"/>
  <match src="visibility [102724,102732]" dest="visibility [38729,38737]"/>
  <match src="type_name [44147,44154]" dest="type_name [12728,12735]"/>
  <match src="}: } [8629,8630]" dest="}: } [8629,8630]"/>
  <match src="parameter [99435,99448]" dest="parameter [35440,35453]"/>
  <match src="address: address [56738,56745]" dest="address: address [22830,22837]"/>
  <match src="identifier: _state [106372,106378]" dest="identifier: _state [42377,42383]"/>
  <match src="function_body [48490,48558]" dest="function_body [17071,17139]"/>
  <match src="call_argument [9769,9817]" dest="call_argument [9769,9817]"/>
  <match src="type_name [88694,88701]" dest="type_name [74361,74368]"/>
  <match src="parameter [83530,83543]" dest="parameter [71539,71552]"/>
  <match src="memory: memory [37772,37778]" dest="memory: memory [54250,54256]"/>
  <match src="state_variable_declaration [28943,28976]" dest="state_variable_declaration [45421,45454]"/>
  <match src="identifier: amount [77861,77867]" dest="identifier: amount [18959,18965]"/>
  <match src="contract_declaration [109246,110095]" dest="contract_declaration [69022,69871]"/>
  <match src="}: } [106271,106272]" dest="}: } [42276,42277]"/>
  <match src="contract_body [109277,110095]" dest="contract_body [69053,69871]"/>
  <match src="identifier: coupons [104869,104876]" dest="identifier: coupons [40874,40881]"/>
  <match src="identifier: success [93415,93422]" dest="identifier: success [76768,76775]"/>
  <match src="&quot;: &quot; [58991,58992]" dest="&quot;: &quot; [73134,73135]"/>
  <match src="identifier: SafeMath [73575,73583]" dest="identifier: SafeMath [56080,56088]"/>
  <match src="function_definition [47999,48099]" dest="function_definition [16580,16680]"/>
  <match src="&lt;: &lt; [38658,38659]" dest="&lt;: &lt; [55136,55137]"/>
  <match src="): ) [96222,96223]" dest="): ) [32227,32228]"/>
  <match src="call_expression [7704,7748]" dest="call_expression [7704,7748]"/>
  <match src="identifier: amount [107841,107847]" dest="identifier: amount [43846,43852]"/>
  <match src="type_name [17398,17405]" dest="type_name [59515,59522]"/>
  <match src="identifier: accounts [103837,103845]" dest="identifier: accounts [39842,39850]"/>
  <match src="bool: bool [64822,64826]" dest="bool: bool [27611,27615]"/>
  <match src="member_expression [86949,87002]" dest="member_expression [59320,59393]"/>
  <match src="(: ( [67785,67786]" dest="(: ( [68214,68215]"/>
  <match src="type_name [35808,35815]" dest="type_name [52286,52293]"/>
  <match src="string_literal [82772,82778]" dest="string_literal [70705,70714]"/>
  <match src="return_type_definition [102147,102161]" dest="return_type_definition [38152,38166]"/>
  <match src="identifier: mul [8696,8699]" dest="identifier: mul [8696,8699]"/>
  <match src="parameter [103755,103770]" dest="parameter [39760,39775]"/>
  <match src="identifier: a [7090,7091]" dest="identifier: a [7090,7091]"/>
  <match src="address: address [64873,64880]" dest="address: address [27662,27669]"/>
  <match src="identifier: char [38264,38268]" dest="identifier: char [54742,54746]"/>
  <match src="primitive_type [105053,105060]" dest="primitive_type [41058,41065]"/>
  <match src="member_expression [98320,98346]" dest="member_expression [34325,34351]"/>
  <match src="identifier: value [85619,85624]" dest="identifier: value [72791,72796]"/>
  <match src="call_expression [27378,27461]" dest="call_expression [72668,72738]"/>
  <match src="primitive_type [72208,72215]" dest="primitive_type [66013,66020]"/>
  <match src=".: . [11277,11278]" dest=".: . [11277,11278]"/>
  <match src="): ) [56388,56389]" dest="): ) [22480,22481]"/>
  <match src="(: ( [55777,55778]" dest="(: ( [21869,21870]"/>
  <match src="user_defined_type [91267,91279]" dest="user_defined_type [29694,29706]"/>
  <match src="=: = [68720,68721]" dest="=: = [79300,79301]"/>
  <match src="identifier: require [23009,23016]" dest="identifier: require [64063,64070]"/>
  <match src="uint8: uint8 [54819,54824]" dest="uint8: uint8 [20911,20916]"/>
  <match src="primitive_type [99914,99921]" dest="primitive_type [35919,35926]"/>
  <match src="primitive_type [96325,96332]" dest="primitive_type [32330,32337]"/>
  <match src="variable_declaration_statement [34926,34941]" dest="variable_declaration_statement [51404,51419]"/>
  <match src="identifier: must [29510,29514]" dest="identifier: must [45988,45992]"/>
  <match src="return_type_definition [56163,56180]" dest="return_type_definition [22255,22272]"/>
  <match src="identifier: epoch [99061,99066]" dest="identifier: epoch [35066,35071]"/>
  <match src="user_defined_type [9304,9308]" dest="user_defined_type [9304,9308]"/>
  <match src="identifier: expiring [106469,106477]" dest="identifier: expiring [42474,42482]"/>
  <match src="type_name [96215,96222]" dest="type_name [32220,32227]"/>
  <match src="identifier: reason [33236,33242]" dest="identifier: reason [49714,49720]"/>
  <match src="]: ] [106240,106241]" dest="]: ] [42245,42246]"/>
  <match src="identifier: payloadA [30279,30287]" dest="identifier: payloadA [46757,46765]"/>
  <match src="==: == [10224,10226]" dest="==: == [10224,10226]"/>
  <match src="function: function [31094,31102]" dest="function: function [47572,47580]"/>
  <match src="identifier: Unbond [83044,83050]" dest="identifier: Bond [70850,70854]"/>
  <match src="assignment_expression [37256,37300]" dest="assignment_expression [53734,53778]"/>
  <match src=",: , [31175,31176]" dest=",: , [47653,47654]"/>
  <match src="): ) [46077,46078]" dest="): ) [14658,14659]"/>
  <match src="uint256: uint256 [7814,7821]" dest="uint256: uint256 [7814,7821]"/>
  <match src="variable_declaration_statement [37766,37802]" dest="variable_declaration_statement [54244,54280]"/>
  <match src="): ) [29651,29652]" dest="): ) [46129,46130]"/>
  <match src="identifier: current [98390,98397]" dest="identifier: current [34395,34402]"/>
  <match src="): ) [84462,84463]" dest="): ) [72063,72064]"/>
  <match src="(: ( [109462,109463]" dest="(: ( [69238,69239]"/>
  <match src="expression_statement [85451,85540]" dest="expression_statement [80002,80042]"/>
  <match src="call_argument [10370,10371]" dest="call_argument [10370,10371]"/>
  <match src="identifier: c [1063,1064]" dest="identifier: c [1063,1064]"/>
  <match src="return_statement [36504,36516]" dest="return_statement [52982,52994]"/>
  <match src="uint: uint [55534,55538]" dest="uint: uint [21626,21630]"/>
  <match src="identifier: RPAREN [31004,31010]" dest="identifier: RPAREN [47482,47488]"/>
  <match src="=: = [37317,37318]" dest="=: = [53795,53796]"/>
  <match src="identifier: totalBondedAt [99421,99434]" dest="identifier: totalBondedAt [35426,35439]"/>
  <match src="): ) [98515,98516]" dest="): ) [34520,34521]"/>
  <match src="identifier: candidate [100470,100479]" dest="identifier: candidate [36475,36484]"/>
  <match src="identifier: balance [102928,102935]" dest="identifier: balance [38933,38940]"/>
  <match src="uint256: uint256 [1429,1436]" dest="uint256: uint256 [1429,1436]"/>
  <match src="identifier: balance [103935,103942]" dest="identifier: balance [39940,39947]"/>
  <match src="true: true [108514,108518]" dest="true: true [44519,44523]"/>
  <match src=".: . [67287,67288]" dest=".: . [81704,81705]"/>
  <match src="call_argument [84502,84512]" dest="call_argument [72687,72697]"/>
  <match src="assignment_expression [103021,103044]" dest="assignment_expression [39026,39049]"/>
  <match src="member_expression [108007,108046]" dest="member_expression [44012,44051]"/>
  <match src="primitive_type [56750,56755]" dest="primitive_type [22842,22847]"/>
  <match src="uint256: uint256 [69282,69289]" dest="uint256: uint256 [67081,67088]"/>
  <match src="parameter [10968,10975]" dest="parameter [10968,10975]"/>
  <match src=".: . [100009,100010]" dest=".: . [36014,36015]"/>
  <match src="update_expression [38081,38084]" dest="update_expression [54559,54562]"/>
  <match src="returns: returns [69214,69221]" dest="returns: returns [67983,67990]"/>
  <match src="public: public [52002,52008]" dest="public: public [26637,26643]"/>
  <match src="{: { [8127,8128]" dest="{: { [8127,8128]"/>
  <match src="): ) [84697,84698]" dest="): ) [57127,57128]"/>
  <match src="returns: returns [47570,47577]" dest="returns: returns [16151,16158]"/>
  <match src="assignment_expression [105223,105326]" dest="assignment_expression [41228,41331]"/>
  <match src="(: ( [95514,95515]" dest="(: ( [31519,31520]"/>
  <match src="call_argument [34161,34187]" dest="call_argument [50639,50665]"/>
  <match src="=: = [29081,29082]" dest="=: = [45559,45560]"/>
  <match src="parameter [56721,56736]" dest="parameter [22813,22828]"/>
  <match src="state_mutability [100907,100911]" dest="state_mutability [36912,36916]"/>
  <match src="identifier: INITIAL_STAKE_MULTIPLE [46179,46201]" dest="identifier: INITIAL_STAKE_MULTIPLE [14760,14782]"/>
  <match src=".: . [46608,46609]" dest=".: . [15189,15190]"/>
  <match src="primitive_type [56413,56417]" dest="primitive_type [22505,22509]"/>
  <match src="): ) [96415,96416]" dest="): ) [32420,32421]"/>
  <match src="private: private [10936,10943]" dest="private: private [10936,10943]"/>
  <match src="array_access [106372,106392]" dest="array_access [42377,42397]"/>
  <match src="(: ( [98983,98984]" dest="(: ( [34988,34989]"/>
  <match src="array_access [108471,108499]" dest="array_access [44476,44504]"/>
  <match src="return: return [96995,97001]" dest="return: return [33000,33006]"/>
  <match src="[: [ [99060,99061]" dest="[: [ [35065,35066]"/>
  <match src=".: . [105368,105369]" dest=".: . [41373,41374]"/>
  <match src=".: . [108344,108345]" dest=".: . [44349,44350]"/>
  <match src="event_paramater [15071,15084]" dest="event_paramater [25598,25611]"/>
  <match src="type_name [56750,56755]" dest="type_name [22842,22847]"/>
  <match src="type_name [53792,53799]" dest="type_name [61399,61406]"/>
  <match src="identifier: msg [83565,83568]" dest="identifier: msg [72387,72390]"/>
  <match src="visibility [10936,10943]" dest="visibility [10936,10943]"/>
  <match src="identifier: value [84628,84633]" dest="identifier: value [72201,72206]"/>
  <match src="]: ] [37273,37274]" dest="]: ] [53751,53752]"/>
  <match src="{: { [47015,47016]" dest="{: { [15596,15597]"/>
  <match src="memory: memory [35983,35989]" dest="memory: memory [52461,52467]"/>
  <match src="identifier: amount [104893,104899]" dest="identifier: amount [40898,40904]"/>
  <match src="type_name [55434,55441]" dest="type_name [21526,21533]"/>
  <match src="(: ( [83604,83605]" dest="(: ( [72094,72095]"/>
  <match src="primitive_type [106317,106324]" dest="primitive_type [42322,42329]"/>
  <match src="(: ( [35198,35199]" dest="(: ( [51676,51677]"/>
  <match src="identifier: _state [104455,104461]" dest="identifier: _state [40460,40466]"/>
  <match src="identifier: IDollar [95688,95695]" dest="identifier: IDollar [31693,31700]"/>
  <match src="assignment_expression [8689,8711]" dest="assignment_expression [8689,8711]"/>
  <match src="identifier: dollar [80764,80770]" dest="identifier: dollar [58950,58956]"/>
  <match src="primitive_type [97991,97998]" dest="primitive_type [33996,34003]"/>
  <match src="identifier: sender [83411,83417]" dest="identifier: sender [71447,71453]"/>
  <match src="type_name [27150,27157]" dest="type_name [61302,61309]"/>
  <match src="): ) [105089,105090]" dest="): ) [41094,41095]"/>
  <match src="]: ] [107790,107791]" dest="]: ] [43795,43796]"/>
  <match src="type_name [43984,43991]" dest="type_name [12565,12572]"/>
  <match src="identifier: file [33459,33463]" dest="identifier: file [49937,49941]"/>
  <match src="identifier: candidates [107217,107227]" dest="identifier: candidates [43222,43232]"/>
  <match src="identifier: _state [98181,98187]" dest="identifier: _state [34186,34192]"/>
  <match src="[: [ [37908,37909]" dest="[: [ [54386,54387]"/>
  <match src="): ) [95545,95546]" dest="): ) [31550,31551]"/>
  <match src="member_expression [86350,86392]" dest="member_expression [72963,72991]"/>
  <match src="expression_statement [110083,110085]" dest="expression_statement [69859,69861]"/>
  <match src="visibility [106082,106090]" dest="visibility [42087,42095]"/>
  <match src="(: ( [22861,22862]" dest="(: ( [64009,64010]"/>
  <match src="}: } [108395,108396]" dest="}: } [44400,44401]"/>
  <match src="): ) [31560,31561]" dest="): ) [48038,48039]"/>
  <match src=":: : [7948,7949]" dest=":: : [7948,7949]"/>
  <match src="function: function [51972,51980]" dest="function: function [26607,26615]"/>
  <match src="{: { [67771,67772]" dest="{: { [68013,68014]"/>
  <match src="identifier: _state [104151,104157]" dest="identifier: _state [40156,40162]"/>
  <match src="(: ( [7776,7777]" dest="(: ( [7776,7777]"/>
  <match src="call_argument [24284,24290]" dest="call_argument [56792,56798]"/>
  <match src="identifier: candidate [100411,100420]" dest="identifier: candidate [36416,36425]"/>
  <match src="uint256: uint256 [83076,83083]" dest="uint256: uint256 [70880,70887]"/>
  <match src="public: public [99450,99456]" dest="public: public [35455,35461]"/>
  <match src="function_definition [95256,95380]" dest="function_definition [31261,31385]"/>
  <match src="function_definition [105420,105568]" dest="function_definition [41425,41573]"/>
  <match src="call_expression [85603,85617]" dest="call_expression [72775,72789]"/>
  <match src="identifier: DAO_EXIT_LOCKUP_EPOCHS [44927,44949]" dest="identifier: DAO_EXIT_LOCKUP_EPOCHS [13508,13530]"/>
  <match src="return_type_definition [99462,99479]" dest="return_type_definition [35467,35484]"/>
  <match src="identifier: amount [18552,18558]" dest="identifier: amount [60033,60039]"/>
  <match src="return_type_definition [8100,8121]" dest="return_type_definition [8100,8121]"/>
  <match src="function_definition [47885,47991]" dest="function_definition [16466,16572]"/>
  <match src="identifier: redeemable [96367,96377]" dest="identifier: redeemable [32372,32382]"/>
  <match src=",: , [32475,32476]" dest=",: , [48953,48954]"/>
  <match src="identifier: that [31103,31107]" dest="identifier: that [47581,47585]"/>
  <match src="(: ( [98569,98570]" dest="(: ( [34574,34575]"/>
  <match src=",: , [50165,50166]" dest=",: , [56507,56508]"/>
  <match src="identifier: getOraclePoolRatio [48575,48593]" dest="identifier: getOraclePoolRatio [17156,17174]"/>
  <match src=".: . [34038,34039]" dest=".: . [50516,50517]"/>
  <match src="uint32: uint32 [56325,56331]" dest="uint32: uint32 [22417,22423]"/>
  <match src="call_argument [85502,85538]" dest="call_argument [80864,80882]"/>
  <match src="function_body [96553,96618]" dest="function_body [32558,32623]"/>
  <match src="identifier: sender [86507,86513]" dest="identifier: sender [63876,63882]"/>
  <match src="state_mutability [95674,95678]" dest="state_mutability [31679,31683]"/>
  <match src="memory: memory [105839,105845]" dest="memory: memory [41844,41850]"/>
  <match src="constant: constant [45375,45383]" dest="constant: constant [13956,13964]"/>
  <match src=",: , [54632,54633]" dest=",: , [20724,20725]"/>
  <match src="binary_expression [11194,11212]" dest="binary_expression [11194,11212]"/>
  <match src="identifier: value [9139,9144]" dest="identifier: value [9139,9144]"/>
  <match src="yul_function_call [93931,93962]" dest="yul_function_call [77284,77315]"/>
  <match src="primitive_type [55081,55085]" dest="primitive_type [21173,21177]"/>
  <match src="member_expression [95459,95473]" dest="member_expression [31464,31478]"/>
  <match src="comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [15094,15245]" dest="comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [25621,25772]"/>
  <match src="identifier: balance [102751,102758]" dest="identifier: balance [38756,38763]"/>
  <match src="(: ( [94983,94984]" dest="(: ( [30988,30989]"/>
  <match src="): ) [46581,46582]" dest="): ) [15162,15163]"/>
  <match src="number_literal: 87 [29028,29030]" dest="number_literal: 87 [45506,45508]"/>
  <match src="(: ( [7374,7375]" dest="(: ( [7374,7375]"/>
  <match src="identifier: ORACLE_RESERVE_MINIMUM [45820,45842]" dest="identifier: ORACLE_RESERVE_MINIMUM [14401,14423]"/>
  <match src="address: address [55620,55627]" dest="address: address [21712,21719]"/>
  <match src=".: . [103172,103173]" dest=".: . [39177,39178]"/>
  <match src="call_argument [86602,86612]" dest="call_argument [81094,81104]"/>
  <match src="variable_declaration [98279,98317]" dest="variable_declaration [34284,34322]"/>
  <match src="string [70505,70514]" dest="string [80665,80674]"/>
  <match src="return_statement [98174,98202]" dest="return_statement [34179,34207]"/>
  <match src="type_name [8986,8990]" dest="type_name [8986,8990]"/>
  <match src="identifier: _state [105676,105682]" dest="identifier: _state [41681,41687]"/>
  <match src="identifier: epoch [104776,104781]" dest="identifier: epoch [40781,40786]"/>
  <match src="identifier: Vote [107179,107183]" dest="identifier: Vote [43184,43188]"/>
  <match src="private: private [44910,44917]" dest="private: private [13491,13498]"/>
  <match src="identifier: Balance [91066,91073]" dest="identifier: Balance [29493,29500]"/>
  <match src="type_name [55064,55071]" dest="type_name [21156,21163]"/>
  <match src="(: ( [55182,55183]" dest="(: ( [21274,21275]"/>
  <match src="type_name [7900,7904]" dest="type_name [7900,7904]"/>
  <match src="): ) [90165,90166]" dest="): ) [28592,28593]"/>
  <match src="indexed: indexed [101893,101900]" dest="indexed: indexed [37898,37905]"/>
  <match src="): ) [48057,48058]" dest="): ) [16638,16639]"/>
  <match src="function_body [100935,101052]" dest="function_body [36940,37057]"/>
  <match src="function_definition [54890,54953]" dest="function_definition [20982,21045]"/>
  <match src="member_expression [103331,103356]" dest="member_expression [39336,39361]"/>
  <match src="call_argument [83358,83362]" dest="call_argument [71394,71398]"/>
  <match src="}: } [48548,48549]" dest="}: } [17129,17130]"/>
  <match src="type_name [54819,54824]" dest="type_name [20911,20916]"/>
  <match src="identifier: _state [104743,104749]" dest="identifier: _state [40748,40754]"/>
  <match src="uint256: uint256 [48724,48731]" dest="uint256: uint256 [17305,17312]"/>
  <match src="parameter [47696,47703]" dest="parameter [16277,16284]"/>
  <match src="identifier: b [9369,9370]" dest="identifier: b [9369,9370]"/>
  <match src="identifier: coupons [104726,104733]" dest="identifier: coupons [40731,40738]"/>
  <match src="primitive_type [96687,96694]" dest="primitive_type [32692,32699]"/>
  <match src="array_access [99190,99210]" dest="array_access [35195,35215]"/>
  <match src="function_definition [31678,32359]" dest="function_definition [48156,48837]"/>
  <match src="uint256: uint256 [105816,105823]" dest="uint256: uint256 [41821,41828]"/>
  <match src="return_statement [100670,100716]" dest="return_statement [36675,36721]"/>
  <match src="type_name [9013,9017]" dest="type_name [9013,9017]"/>
  <match src="identifier: Constants [98445,98454]" dest="identifier: Constants [34450,34459]"/>
  <match src="identifier: owner [105616,105621]" dest="identifier: owner [41621,41626]"/>
  <match src="address: address [88637,88644]" dest="address: address [74304,74311]"/>
  <match src="string [85404,85439]" dest="string [81011,81025]"/>
  <match src="call_expression [83438,83452]" dest="call_expression [57550,57564]"/>
  <match src="(: ( [105607,105608]" dest="(: ( [41612,41613]"/>
  <match src="function_definition [99724,99888]" dest="function_definition [35729,35893]"/>
  <match src="function: function [46494,46502]" dest="function: function [15075,15083]"/>
  <match src=".: . [104269,104270]" dest=".: . [40274,40275]"/>
  <match src="parameter [104115,104129]" dest="parameter [40120,40134]"/>
  <match src="array_access [107801,107829]" dest="array_access [43806,43834]"/>
  <match src="type_name [17095,17102]" dest="type_name [57200,57207]"/>
  <match src="expression_statement [36473,36481]" dest="expression_statement [52951,52959]"/>
  <match src="identifier: amount [22336,22342]" dest="identifier: amount [59795,59801]"/>
  <match src="function: function [55418,55426]" dest="function: function [21510,21518]"/>
  <match src="identifier: b [5405,5406]" dest="identifier: b [5405,5406]"/>
  <match src="internal: internal [7867,7875]" dest="internal: internal [7867,7875]"/>
  <match src="function_body [3327,3392]" dest="function_body [3327,3392]"/>
  <match src="state_variable_declaration [43473,43511]" dest="state_variable_declaration [12054,12092]"/>
  <match src="call_expression [84021,84035]" dest="call_expression [60152,60166]"/>
  <match src="(: ( [82976,82977]" dest="(: ( [70953,70954]"/>
  <match src="bytes32: bytes32 [82740,82747]" dest="bytes32: bytes32 [70673,70680]"/>
  <match src="{: { [106686,106687]" dest="{: { [42691,42692]"/>
  <match src="event_paramater [53840,53852]" dest="event_paramater [61529,61552]"/>
  <match src="visibility [71296,71304]" dest="visibility [83405,83413]"/>
  <match src="parameter [10437,10450]" dest="parameter [10437,10450]"/>
  <match src="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [35022,35084]" dest="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [51500,51562]"/>
  <match src="identifier: Decimal [48207,48214]" dest="identifier: Decimal [16788,16795]"/>
  <match src="comment: // File: @openzeppelin/contracts/token/ERC20/ERC20.sol [15336,15390]" dest="comment: // File: contracts/dao/State.sol [27678,27710]"/>
  <match src="identifier: reason [102571,102577]" dest="identifier: reason [38576,38582]"/>
  <match src=".: . [103613,103614]" dest=".: . [39618,39619]"/>
  <match src="memory: memory [37613,37619]" dest="memory: memory [54091,54097]"/>
  <match src="primitive_type [10851,10858]" dest="primitive_type [10851,10858]"/>
  <match src="{: { [104140,104141]" dest="{: { [40145,40146]"/>
  <match src="visibility [43564,43571]" dest="visibility [12145,12152]"/>
  <match src="number_literal: 4 [37324,37325]" dest="number_literal: 4 [53802,53803]"/>
  <match src="new: new [35997,36000]" dest="new: new [52475,52478]"/>
  <match src="}: } [6649,6650]" dest="}: } [6649,6650]"/>
  <match src="uint256: uint256 [97829,97836]" dest="uint256: uint256 [33834,33841]"/>
  <match src="primitive_type [98874,98881]" dest="primitive_type [34879,34886]"/>
  <match src="identifier: that [31687,31691]" dest="identifier: that [48165,48169]"/>
  <match src=":: : [48527,48528]" dest=":: : [17108,17109]"/>
  <match src="uint256: uint256 [17095,17102]" dest="uint256: uint256 [57200,57207]"/>
  <match src="struct_member [90758,90772]" dest="struct_member [29185,29199]"/>
  <match src="primitive_type [55713,55717]" dest="primitive_type [21805,21809]"/>
  <match src=",: , [102007,102008]" dest=",: , [38012,38013]"/>
  <match src="user_defined_type [9850,9854]" dest="user_defined_type [9850,9854]"/>
  <match src="comment: /**      * Global      */ [102337,102364]" dest="comment: /**      * Global      */ [38342,38369]"/>
  <match src="primitive_type [7613,7620]" dest="primitive_type [7613,7620]"/>
  <match src="internal: internal [106352,106360]" dest="internal: internal [42357,42365]"/>
  <match src="(: ( [85614,85615]" dest="(: ( [72786,72787]"/>
  <match src="member_expression [103158,103172]" dest="member_expression [39163,39177]"/>
  <match src="type_cast_expression [45545,45596]" dest="type_cast_expression [14126,14177]"/>
  <match src="call_expression [34789,34812]" dest="call_expression [51267,51290]"/>
  <match src="return_statement [99040,99087]" dest="return_statement [35045,35092]"/>
  <match src="): ) [83882,83883]" dest="): ) [71612,71613]"/>
  <match src="identifier: value [83905,83910]" dest="identifier: value [71635,71640]"/>
  <match src=",: , [55559,55560]" dest=",: , [21651,21652]"/>
  <match src="primitive_type [53105,53112]" dest="primitive_type [56203,56210]"/>
  <match src="type_name [6888,6892]" dest="type_name [6888,6892]"/>
  <match src="function_definition [103211,103384]" dest="function_definition [39216,39389]"/>
  <match src="return_type_definition [56219,56236]" dest="return_type_definition [22311,22328]"/>
  <match src="return_type_definition [95783,95800]" dest="return_type_definition [31788,31805]"/>
  <match src="primitive_type [22894,22901]" dest="primitive_type [64027,64034]"/>
  <match src="): ) [10334,10335]" dest="): ) [10334,10335]"/>
  <match src="if: if [31861,31863]" dest="if: if [48339,48341]"/>
  <match src=".: . [47009,47010]" dest=".: . [15590,15591]"/>
  <match src="identifier: epoch [105280,105285]" dest="identifier: epoch [41285,41290]"/>
  <match src="identifier: PairCreated [53780,53791]" dest="identifier: CouponTransfer [61384,61398]"/>
  <match src="call_struct_argument [47344,47376]" dest="call_struct_argument [15925,15957]"/>
  <match src="(: ( [13252,13253]" dest="(: ( [23779,23780]"/>
  <match src="internal: internal [107340,107348]" dest="internal: internal [43345,43353]"/>
  <match src="type_name [54909,54916]" dest="type_name [21001,21008]"/>
  <match src="(: ( [84449,84450]" dest="(: ( [72050,72051]"/>
  <match src="primitive_type [14365,14372]" dest="primitive_type [24892,24899]"/>
  <match src="returns: returns [54869,54876]" dest="returns: returns [20961,20968]"/>
  <match src="=: = [36799,36800]" dest="=: = [53277,53278]"/>
  <match src="binary_expression [37282,37299]" dest="binary_expression [53760,53777]"/>
  <match src="expression_statement [106219,106265]" dest="expression_statement [42224,42270]"/>
  <match src="(: ( [31864,31865]" dest="(: ( [48342,48343]"/>
  <match src="bool: bool [93288,93292]" dest="bool: bool [76641,76645]"/>
  <match src=".: . [105376,105377]" dest=".: . [41381,41382]"/>
  <match src="constant: constant [109302,109310]" dest="constant: constant [69078,69086]"/>
  <match src="(: ( [104566,104567]" dest="(: ( [40571,40572]"/>
  <match src="(: ( [10708,10709]" dest="(: ( [10708,10709]"/>
  <match src="return_type_definition [95679,95696]" dest="return_type_definition [31684,31701]"/>
  <match src="identifier: outstandingCoupons [106614,106632]" dest="identifier: outstandingCoupons [42619,42637]"/>
  <match src="uint256: uint256 [108222,108229]" dest="uint256: uint256 [44227,44234]"/>
  <match src="parameter [27625,27640]" dest="parameter [56425,56440]"/>
  <match src=".: . [97265,97266]" dest=".: . [33270,33271]"/>
  <match src=".: . [102905,102906]" dest=".: . [38910,38911]"/>
  <match src="state_variable_declaration [44530,44581]" dest="state_variable_declaration [13111,13162]"/>
  <match src="(: ( [7537,7538]" dest="(: ( [7537,7538]"/>
  <match src="identifier: candidate [99999,100008]" dest="identifier: candidate [36004,36013]"/>
  <match src="view: view [100907,100911]" dest="view: view [36912,36916]"/>
  <match src="user_defined_type [8027,8031]" dest="user_defined_type [8027,8031]"/>
  <match src="contract_body [711,5542]" dest="contract_body [711,5542]"/>
  <match src="function_body [20743,21135]" dest="function_body [64380,65008]"/>
  <match src="member_expression [85591,85601]" dest="member_expression [72763,72773]"/>
  <match src="identifier: symbol [54723,54729]" dest="identifier: symbol [20815,20821]"/>
  <match src="call_expression [74558,74566]" dest="call_expression [59320,59328]"/>
  <match src="identifier: _state [106754,106760]" dest="identifier: _state [42759,42765]"/>
  <match src="emit_statement [93452,93485]" dest="emit_statement [76805,76838]"/>
  <match src="type_name [107305,107312]" dest="type_name [43310,43317]"/>
  <match src="): ) [56841,56842]" dest="): ) [22933,22934]"/>
  <match src=".: . [103973,103974]" dest=".: . [39978,39979]"/>
  <match src="): ) [86997,86998]" dest="): ) [59387,59388]"/>
  <match src="type_name [90240,90247]" dest="type_name [28667,28674]"/>
  <match src="function_definition [105576,105741]" dest="function_definition [41581,41746]"/>
  <match src=".: . [108477,108478]" dest=".: . [44482,44483]"/>
  <match src="identifier: approveFor [100177,100187]" dest="identifier: approveFor [36182,36192]"/>
  <match src="identifier: stringify [34247,34256]" dest="identifier: stringify [50725,50734]"/>
  <match src="function_body [88683,89244]" dest="function_body [74350,74911]"/>
  <match src="type_name [32486,32493]" dest="type_name [48964,48971]"/>
  <match src="call_expression [26866,26934]" dest="call_expression [79688,79758]"/>
  <match src="type_name [55966,55973]" dest="type_name [22058,22065]"/>
  <match src="call_argument [53392,53398]" dest="call_argument [64779,64785]"/>
  <match src="=: = [36107,36108]" dest="=: = [52585,52586]"/>
  <match src="member_expression [83768,83778]" dest="member_expression [71762,71772]"/>
  <match src=".: . [46439,46440]" dest=".: . [15020,15021]"/>
  <match src="member_expression [111265,111279]" dest="member_expression [68066,68082]"/>
  <match src="indexed: indexed [53824,53831]" dest="indexed: indexed [61429,61436]"/>
  <match src="view: view [95556,95560]" dest="view: view [31561,31565]"/>
  <match src="identifier: asUint256 [10658,10667]" dest="identifier: asUint256 [10658,10667]"/>
  <match src="identifier: msg [83338,83341]" dest="identifier: msg [71374,71377]"/>
  <match src="call_argument [23040,23076]" dest="call_argument [64094,64138]"/>
  <match src=",: , [55912,55913]" dest=",: , [22004,22005]"/>
  <match src="(: ( [46392,46393]" dest="(: ( [14973,14974]"/>
  <match src="state_mutability [55389,55393]" dest="state_mutability [21481,21485]"/>
  <match src="): ) [34949,34950]" dest="): ) [51427,51428]"/>
  <match src="bytes: bytes [36001,36006]" dest="bytes: bytes [52479,52484]"/>
  <match src="(: ( [95870,95871]" dest="(: ( [31875,31876]"/>
  <match src="): ) [36952,36953]" dest="): ) [53430,53431]"/>
  <match src="visibility [106199,106207]" dest="visibility [42204,42212]"/>
  <match src="member_expression [98181,98201]" dest="member_expression [34186,34206]"/>
  <match src="bool: bool [99602,99606]" dest="bool: bool [35607,35611]"/>
  <match src="call_argument [84616,84626]" dest="call_argument [72189,72199]"/>
  <match src="identifier: Getters [94708,94715]" dest="identifier: Getters [30713,30720]"/>
  <match src="&quot;: &quot; [93785,93786]" dest="&quot;: &quot; [77138,77139]"/>
  <match src="bool: bool [55273,55277]" dest="bool: bool [21365,21369]"/>
  <match src="uint256: uint256 [22894,22901]" dest="uint256: uint256 [64027,64034]"/>
  <match src="): ) [10450,10451]" dest="): ) [10450,10451]"/>
  <match src=".: . [108013,108014]" dest=".: . [44018,44019]"/>
  <match src="identifier: account [107245,107252]" dest="identifier: account [43250,43257]"/>
  <match src="address: address [95275,95282]" dest="address: address [31280,31287]"/>
  <match src="return: return [95333,95339]" dest="return: return [31338,31344]"/>
  <match src="identifier: i [36306,36307]" dest="identifier: i [52784,52785]"/>
  <match src="visibility [12974,12982]" dest="visibility [23501,23509]"/>
  <match src="visibility [97349,97355]" dest="visibility [33354,33360]"/>
  <match src="identifier: owner [95523,95528]" dest="identifier: owner [31528,31533]"/>
  <match src="user_defined_type [10292,10296]" dest="user_defined_type [10292,10296]"/>
  <match src="call_expression [93356,93395]" dest="call_expression [76709,76748]"/>
  <match src="primitive_type [19957,19964]" dest="primitive_type [18567,18574]"/>
  <match src="type_name [102841,102848]" dest="type_name [38846,38853]"/>
  <match src="uint256: uint256 [72261,72268]" dest="uint256: uint256 [71009,71016]"/>
  <match src="contract_body [101806,108529]" dest="contract_body [37811,44534]"/>
  <match src="}: } [79758,79759]" dest="}: } [61992,61993]"/>
  <match src=",: , [109962,109963]" dest=",: , [69738,69739]"/>
  <match src="): ) [95901,95902]" dest="): ) [31906,31907]"/>
  <match src="returns: returns [48819,48826]" dest="returns: returns [17400,17407]"/>
  <match src="type_name [30524,30531]" dest="type_name [47002,47009]"/>
  <match src="identifier: COUPON_EXPIRATION [45110,45127]" dest="identifier: COUPON_EXPIRATION [13691,13708]"/>
  <match src="primitive_type [14831,14835]" dest="primitive_type [25358,25362]"/>
  <match src="identifier: self [8159,8163]" dest="identifier: self [8159,8163]"/>
  <match src="primitive_type [66492,66499]" dest="primitive_type [60974,60981]"/>
  <match src="(: ( [100652,100653]" dest="(: ( [36657,36658]"/>
  <match src="identifier: i [37086,37087]" dest="identifier: i [53564,53565]"/>
  <match src="state_mutability [99588,99592]" dest="state_mutability [35593,35597]"/>
  <match src="uint256: uint256 [5386,5393]" dest="uint256: uint256 [5386,5393]"/>
  <match src="uint256: uint256 [102541,102548]" dest="uint256: uint256 [38546,38553]"/>
  <match src="returns: returns [99794,99801]" dest="returns: returns [35799,35806]"/>
  <match src="primitive_type [3284,3291]" dest="primitive_type [3284,3291]"/>
  <match src="(: ( [34688,34689]" dest="(: ( [51166,51167]"/>
  <match src="identifier: debt [102936,102940]" dest="identifier: debt [38941,38945]"/>
  <match src="{: { [38600,38601]" dest="{: { [55078,55079]"/>
  <match src="{: { [83306,83307]" dest="{: { [71341,71342]"/>
  <match src="string: string [3957,3963]" dest="string: string [3957,3963]"/>
  <match src="comment: // 4 + 1 epochs [44509,44524]" dest="comment: // 4 + 1 epochs [13090,13105]"/>
  <match src="visibility [83264,83272]" dest="visibility [71301,71309]"/>
  <match src="identifier: i [8669,8670]" dest="identifier: i [8669,8670]"/>
  <match src="identifier: FILE [109787,109791]" dest="identifier: FILE [69563,69567]"/>
  <match src="contract: contract [66419,66427]" dest="contract: contract [65731,65739]"/>
  <match src="using: using [94765,94770]" dest="using: using [30770,30775]"/>
  <match src="string_literal [85404,85439]" dest="string_literal [81011,81025]"/>
  <match src="identifier: result [37856,37862]" dest="identifier: result [54334,54340]"/>
  <match src="}: } [102328,102329]" dest="}: } [38333,38334]"/>
  <match src="member_expression [106819,106847]" dest="member_expression [42824,42852]"/>
  <match src="primitive_type [1902,1909]" dest="primitive_type [1902,1909]"/>
  <match src=".: . [91482,91483]" dest=".: . [29909,29910]"/>
  <match src="(: ( [37918,37919]" dest="(: ( [54396,54397]"/>
  <match src="{: { [32566,32567]" dest="{: { [49044,49045]"/>
  <match src="member_expression [105153,105185]" dest="member_expression [41158,41190]"/>
  <match src="{: { [6618,6619]" dest="{: { [6618,6619]"/>
  <match src="return_statement [98772,98795]" dest="return_statement [34777,34800]"/>
  <match src="call_argument [85896,85915]" dest="call_argument [80241,80263]"/>
  <match src="call_expression [53528,53616]" dest="call_expression [64830,64923]"/>
  <match src="function: function [97314,97322]" dest="function: function [33319,33327]"/>
  <match src="type_name [2024,2031]" dest="type_name [2024,2031]"/>
  <match src="member_expression [99981,99998]" dest="member_expression [35986,36003]"/>
  <match src="primitive_type [1913,1919]" dest="primitive_type [1913,1919]"/>
  <match src="}: } [47630,47631]" dest="}: } [16211,16212]"/>
  <match src="identifier: totalRewardedWithPhantom [84193,84217]" dest="identifier: newDebt [66649,66656]"/>
  <match src="if_statement [106650,106719]" dest="if_statement [42655,42724]"/>
  <match src="primitive_type [107727,107734]" dest="primitive_type [43732,43739]"/>
  <match src="identifier: _state [103928,103934]" dest="identifier: _state [39933,39939]"/>
  <match src="constant: constant [45517,45525]" dest="constant: constant [14098,14106]"/>
  <match src="): ) [85609,85610]" dest="): ) [72781,72782]"/>
  <match src="[: [ [106448,106449]" dest="[: [ [42453,42454]"/>
  <match src="comment: // reverse-for-loops with unsigned integer [34966,35008]" dest="comment: // reverse-for-loops with unsigned integer [51444,51486]"/>
  <match src="): ) [86307,86308]" dest="): ) [80407,80408]"/>
  <match src="(: ( [86900,86901]" dest="(: ( [59514,59515]"/>
  <match src="function: function [97632,97640]" dest="function: function [33637,33645]"/>
  <match src="call_expression [109931,109962]" dest="call_expression [69707,69738]"/>
  <match src="identifier: amount [53290,53296]" dest="identifier: amount [56450,56456]"/>
  <match src="identifier: redeemable [103173,103183]" dest="identifier: redeemable [39178,39188]"/>
  <match src="identifier: priceCumulative [69505,69520]" dest="identifier: balance [72953,72960]"/>
  <match src="parameter [55561,55568]" dest="parameter [21653,21660]"/>
  <match src="expression_statement [37902,37942]" dest="expression_statement [54380,54420]"/>
  <match src="returns: returns [14822,14829]" dest="returns: returns [25349,25356]"/>
  <match src="identifier: _approve [22853,22861]" dest="identifier: approveCoupons [63995,64009]"/>
  <match src="identifier: stringify [33025,33034]" dest="identifier: stringify [49503,49512]"/>
  <match src="primitive_type [56325,56331]" dest="primitive_type [22417,22423]"/>
  <match src="uint256: uint256 [83002,83009]" dest="uint256: uint256 [70979,70986]"/>
  <match src="identifier: MinterAdded [27138,27149]" dest="identifier: CouponRedemption [61285,61301]"/>
  <match src="uint: uint [55472,55476]" dest="uint: uint [21564,21568]"/>
  <match src="=: = [106249,106250]" dest="=: = [42254,42255]"/>
  <match src="identifier: require [21484,21491]" dest="identifier: decrementTotalDebt [57479,57497]"/>
  <match src="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [101097,101755]" dest="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [82289,82947]"/>
  <match src="identifier: value [7723,7728]" dest="identifier: value [7723,7728]"/>
  <match src="identifier: transfer [101981,101989]" dest="identifier: transfer [37986,37994]"/>
  <match src="function: function [55486,55494]" dest="function: function [21578,21586]"/>
  <match src="): ) [105519,105520]" dest="): ) [41524,41525]"/>
  <match src="identifier: value [7083,7088]" dest="identifier: value [7083,7088]"/>
  <match src="call_argument [70505,70514]" dest="call_argument [80665,80674]"/>
  <match src="address: address [36560,36567]" dest="address: address [53038,53045]"/>
  <match src="(: ( [10593,10594]" dest="(: ( [10593,10594]"/>
  <match src="returns: returns [102034,102041]" dest="returns: returns [38039,38046]"/>
  <match src="indexed: indexed [55697,55704]" dest="indexed: indexed [21789,21796]"/>
  <match src="identifier: D256 [68656,68660]" dest="identifier: D256 [66146,66150]"/>
  <match src="state_mutability [99149,99153]" dest="state_mutability [35154,35158]"/>
  <match src="{: { [7686,7687]" dest="{: { [7686,7687]"/>
  <match src="return_type_definition [34680,34702]" dest="return_type_definition [51158,51180]"/>
  <match src="bool: bool [10181,10185]" dest="bool: bool [10181,10185]"/>
  <match src="=: = [105511,105512]" dest="=: = [41516,41517]"/>
  <match src="identifier: that [51081,51085]" dest="identifier: that [71086,71090]"/>
  <match src="state_variable_declaration [66492,66533]" dest="state_variable_declaration [60974,61015]"/>
  <match src="(: ( [87014,87015]" dest="(: ( [59409,59410]"/>
  <match src="return: return [11259,11265]" dest="return: return [11259,11265]"/>
  <match src="member_expression [84161,84171]" dest="member_expression [71884,71894]"/>
  <match src="(: ( [86934,86935]" dest="(: ( [59305,59306]"/>
  <match src="uint256: uint256 [44902,44909]" dest="uint256: uint256 [13483,13490]"/>
  <match src="identifier: candidate [107781,107790]" dest="identifier: candidate [43786,43795]"/>
  <match src="call_argument [84980,84984]" dest="call_argument [81628,81632]"/>
  <match src="visibility [20734,20742]" dest="visibility [56971,56979]"/>
  <match src="member_expression [96571,96591]" dest="member_expression [32576,32596]"/>
  <match src="function_body [106987,107105]" dest="function_body [42992,43110]"/>
  <match src="identifier: sub [105307,105310]" dest="identifier: sub [41312,41315]"/>
  <match src=".: . [79710,79711]" dest=".: . [61884,61885]"/>
  <match src="{: { [97207,97208]" dest="{: { [33212,33213]"/>
  <match src=",: , [32040,32041]" dest=",: , [48518,48519]"/>
  <match src="type_name [102043,102047]" dest="type_name [38048,38052]"/>
  <match src="): ) [32965,32966]" dest="): ) [49443,49444]"/>
  <match src="primitive_type [33253,33260]" dest="primitive_type [49731,49738]"/>
  <match src="identifier: lessPhantom [85155,85166]" dest="identifier: totalCoupons [62323,62335]"/>
  <match src="member_expression [104848,104892]" dest="member_expression [40853,40897]"/>
  <match src="parameter [102557,102577]" dest="parameter [38562,38582]"/>
  <match src="(: ( [34620,34621]" dest="(: ( [51098,51099]"/>
  <match src="visibility [95980,95986]" dest="visibility [31985,31991]"/>
  <match src="state_mutability [88663,88667]" dest="state_mutability [74330,74334]"/>
  <match src="type_name [28989,28996]" dest="type_name [45467,45474]"/>
  <match src="call_argument [9801,9805]" dest="call_argument [9801,9805]"/>
  <match src="function_definition [84771,85647]" dest="function_definition [72329,72813]"/>
  <match src="number_literal: 65 [38250,38252]" dest="number_literal: 65 [54728,54730]"/>
  <match src="function_definition [53074,53217]" dest="function_definition [56163,56392]"/>
  <match src="user_defined_type [110849,110859]" dest="user_defined_type [78087,78097]"/>
  <match src="): ) [96116,96117]" dest="): ) [32121,32122]"/>
  <match src=".: . [97723,97724]" dest=".: . [33728,33729]"/>
  <match src="{: { [44111,44112]" dest="{: { [12692,12693]"/>
  <match src=",: , [105814,105815]" dest=",: , [41819,41820]"/>
  <match src="type_name [106577,106584]" dest="type_name [42582,42589]"/>
  <match src="visibility [55380,55388]" dest="visibility [21472,21480]"/>
  <match src="type_name [91189,91196]" dest="type_name [29616,29623]"/>
  <match src="user_defined_type [8986,8990]" dest="user_defined_type [8986,8990]"/>
  <match src="identifier: value [9115,9120]" dest="identifier: value [9115,9120]"/>
  <match src="call_argument [109454,109496]" dest="call_argument [69230,69272]"/>
  <match src="(: ( [9344,9345]" dest="(: ( [9344,9345]"/>
  <match src="return_statement [7069,7105]" dest="return_statement [7069,7105]"/>
  <match src="call_struct_argument [6931,6942]" dest="call_struct_argument [6931,6942]"/>
  <match src=".: . [104245,104246]" dest=".: . [40250,40251]"/>
  <match src="event_paramater [55984,56000]" dest="event_paramater [22076,22092]"/>
  <match src="type_name [107492,107499]" dest="type_name [43497,43504]"/>
  <match src="identifier: self [7950,7954]" dest="identifier: self [7950,7954]"/>
  <match src="?: ? [97570,97571]" dest="?: ? [33575,33576]"/>
  <match src="public: public [99308,99314]" dest="public: public [35313,35319]"/>
  <match src="parameter [40298,40313]" dest="parameter [64340,64353]"/>
  <match src="identifier: sender [55804,55810]" dest="identifier: sender [21896,21902]"/>
  <match src="&amp;: &amp; [38413,38414]" dest="&amp;: &amp; [54891,54892]"/>
  <match src="member_expression [104743,104758]" dest="member_expression [40748,40763]"/>
  <match src="struct_member [91296,91312]" dest="struct_member [29723,29739]"/>
  <match src=",: , [31150,31151]" dest=",: , [47628,47629]"/>
  <match src="visibility [12163,12171]" dest="visibility [18393,18401]"/>
  <match src="string_literal [95148,95156]" dest="string_literal [31153,31161]"/>
  <match src="primitive_type [91085,91092]" dest="primitive_type [29512,29519]"/>
  <match src="yul_evm_builtin [35385,35391]" dest="yul_evm_builtin [51863,51869]"/>
  <match src="external: external [56898,56906]" dest="external: external [22990,22998]"/>
  <match src="constant: constant [44686,44694]" dest="constant: constant [13267,13275]"/>
  <match src="external: external [55255,55263]" dest="external: external [21347,21355]"/>
  <match src="): ) [8366,8367]" dest="): ) [8366,8367]"/>
  <match src="uint256: uint256 [72208,72215]" dest="uint256: uint256 [66013,66020]"/>
  <match src="member_expression [105938,105990]" dest="member_expression [41943,41995]"/>
  <match src="identifier: denominator [11026,11037]" dest="identifier: denominator [11026,11037]"/>
  <match src="assignment_expression [107763,107848]" dest="assignment_expression [43768,43853]"/>
  <match src="call_argument [50908,50927]" dest="call_argument [64621,64658]"/>
  <match src="): ) [109561,109562]" dest="): ) [69337,69338]"/>
  <match src="}: } [23181,23182]" dest="}: } [64271,64272]"/>
  <match src=".: . [99218,99219]" dest=".: . [35223,35224]"/>
  <match src="unary_expression [29981,29986]" dest="unary_expression [46459,46464]"/>
  <match src="call_argument [51130,51134]" dest="call_argument [71141,71145]"/>
  <match src="parameter [32391,32400]" dest="parameter [48869,48878]"/>
  <match src="call_argument [105397,105403]" dest="call_argument [41402,41408]"/>
  <match src="[: [ [104861,104862]" dest="[: [ [40866,40867]"/>
  <match src="(: ( [104632,104633]" dest="(: ( [40637,40638]"/>
  <match src="primitive_type [54909,54916]" dest="primitive_type [21001,21008]"/>
  <match src="identifier: FOUR_BIT_MASK [38273,38286]" dest="identifier: FOUR_BIT_MASK [54751,54764]"/>
  <match src="identifier: amount1Out [56726,56736]" dest="identifier: amount1Out [22818,22828]"/>
  <match src="identifier: sub [106777,106780]" dest="identifier: sub [42782,42785]"/>
  <match src="identifier: sub [105987,105990]" dest="identifier: sub [41992,41995]"/>
  <match src="): ) [1971,1972]" dest="): ) [1971,1972]"/>
  <match src="state_mutability [37588,37592]" dest="state_mutability [54066,54070]"/>
  <match src="{: { [95322,95323]" dest="{: { [31327,31328]"/>
  <match src="}: } [90421,90422]" dest="}: } [28848,28849]"/>
  <match src="primitive_type [93302,93307]" dest="primitive_type [76655,76660]"/>
  <match src="type_name [85147,85154]" dest="type_name [62315,62322]"/>
  <match src="comment: // File: contracts/Constants.sol [42725,42757]" dest="comment: // File: contracts/Constants.sol [11306,11338]"/>
  <match src="function_definition [67701,67950]" dest="function_definition [67950,68302]"/>
  <match src="(: ( [64782,64783]" dest="(: ( [27571,27572]"/>
  <match src="bytes: bytes [35562,35567]" dest="bytes: bytes [52040,52045]"/>
  <match src=".: . [83771,83772]" dest=".: . [71765,71766]"/>
  <match src="assignment_expression [104517,104582]" dest="assignment_expression [40522,40587]"/>
  <match src="identifier: Vote [99813,99817]" dest="identifier: Vote [35818,35822]"/>
  <match src="identifier: updatePrice [68676,68687]" dest="identifier: oracleCapture [66166,66179]"/>
  <match src="identifier: msg [82614,82617]" dest="identifier: msg [63760,63763]"/>
  <match src="identifier: amount [17905,17911]" dest="identifier: amount [59861,59867]"/>
  <match src=":: : [9561,9562]" dest=":: : [9561,9562]"/>
  <match src="function_definition [48272,48406]" dest="function_definition [16853,16987]"/>
  <match src="member_expression [97259,97291]" dest="member_expression [33264,33296]"/>
  <match src="}: } [70549,70550]" dest="}: } [68304,68305]"/>
  <match src="uint8: uint8 [95213,95218]" dest="uint8: uint8 [31218,31223]"/>
  <match src="primitive_type [90807,90814]" dest="primitive_type [29234,29241]"/>
  <match src="uint256: uint256 [6459,6466]" dest="uint256: uint256 [6459,6466]"/>
  <match src="call_argument [51198,51205]" dest="call_argument [64187,64194]"/>
  <match src="(: ( [107648,107649]" dest="(: ( [43653,43654]"/>
  <match src="]: ] [37910,37911]" dest="]: ] [54388,54389]"/>
  <match src="primitive_type [101832,101839]" dest="primitive_type [37837,37844]"/>
  <match src="=: = [45460,45461]" dest="=: = [14041,14042]"/>
  <match src="): ) [10085,10086]" dest="): ) [10085,10086]"/>
  <match src="binary_expression [2624,2630]" dest="binary_expression [2624,2630]"/>
  <match src="identifier: Require [70426,70433]" dest="identifier: Require [80536,80543]"/>
  <match src="type_name [69852,69859]" dest="type_name [62937,62944]"/>
  <match src="function_body [97838,97900]" dest="function_body [33843,33905]"/>
  <match src="(: ( [47455,47456]" dest="(: ( [16036,16037]"/>
  <match src="type_cast_expression [38791,38825]" dest="type_cast_expression [55269,55303]"/>
  <match src="identifier: candidates [107367,107377]" dest="identifier: candidates [43372,43382]"/>
  <match src="): ) [32808,32809]" dest="): ) [49286,49287]"/>
  <match src="variable_declaration_statement [85147,85230]" dest="variable_declaration_statement [72443,72526]"/>
  <match src="): ) [8069,8070]" dest="): ) [8069,8070]"/>
  <match src=".: . [99362,99363]" dest=".: . [35367,35368]"/>
  <match src=".: . [104547,104548]" dest=".: . [40552,40553]"/>
  <match src="uint256: uint256 [91212,91219]" dest="uint256: uint256 [29639,29646]"/>
  <match src="function_definition [106168,106272]" dest="function_definition [42173,42277]"/>
  <match src="type_name [45420,45427]" dest="type_name [14001,14008]"/>
  <match src="identifier: start [44155,44160]" dest="identifier: start [12736,12741]"/>
  <match src="return_type_definition [64792,64827]" dest="return_type_definition [27581,27616]"/>
  <match src="{: { [70354,70355]" dest="{: { [62771,62772]"/>
  <match src=",: , [30461,30462]" dest=",: , [46939,46940]"/>
  <match src="call_argument [7965,7976]" dest="call_argument [7965,7976]"/>
  <match src="return_type_definition [8482,8503]" dest="return_type_definition [8482,8503]"/>
  <match src="external: external [55380,55388]" dest="external: external [21472,21480]"/>
  <match src="member_expression [102921,102944]" dest="member_expression [38926,38949]"/>
  <match src="primitive_type [48619,48626]" dest="primitive_type [17200,17207]"/>
  <match src="identifier: that [109435,109439]" dest="identifier: that [69211,69215]"/>
  <match src="call_argument [75813,75837]" dest="call_argument [82116,82134]"/>
  <match src="parameter [7900,7911]" dest="parameter [7900,7911]"/>
  <match src="): ) [100575,100576]" dest="): ) [36580,36581]"/>
  <match src="): ) [83370,83371]" dest="): ) [71406,71407]"/>
  <match src="identifier: DAO_EXIT_LOCKUP_EPOCHS [47723,47745]" dest="identifier: DAO_EXIT_LOCKUP_EPOCHS [16304,16326]"/>
  <match src="}: } [69801,69802]" dest="}: } [67240,67241]"/>
  <match src="=: = [108512,108513]" dest="=: = [44517,44518]"/>
  <match src="}: } [105567,105568]" dest="}: } [41572,41573]"/>
  <match src="state_mutability [48455,48459]" dest="state_mutability [17036,17040]"/>
  <match src="return_type_definition [65671,65685]" dest="return_type_definition [81973,81987]"/>
  <match src="uint256: uint256 [72236,72243]" dest="uint256: uint256 [65888,65895]"/>
  <match src="function: function [46909,46917]" dest="function: function [15490,15498]"/>
  <match src="): ) [108061,108062]" dest="): ) [44066,44067]"/>
  <match src="identifier: RPAREN [29250,29256]" dest="identifier: RPAREN [45728,45734]"/>
  <match src="function: function [10244,10252]" dest="function: function [10244,10252]"/>
  <match src="identifier: amount [23455,23461]" dest="identifier: amount [64613,64619]"/>
  <match src="(: ( [53170,53171]" dest="(: ( [56252,56253]"/>
  <match src="memory: memory [69236,69242]" dest="memory: memory [68005,68011]"/>
  <match src="(: ( [86996,86997]" dest="(: ( [59386,59387]"/>
  <match src="uint8: uint8 [55561,55566]" dest="uint8: uint8 [21653,21658]"/>
  <match src="identifier: b [5530,5531]" dest="identifier: b [5530,5531]"/>
  <match src="primitive_type [100754,100761]" dest="primitive_type [36759,36766]"/>
  <match src="=: = [44032,44033]" dest="=: = [12613,12614]"/>
  <match src="{: { [48490,48491]" dest="{: { [17071,17072]"/>
  <match src="identifier: supply [103967,103973]" dest="identifier: supply [39972,39978]"/>
  <match src="user_defined_type [7586,7590]" dest="user_defined_type [7586,7590]"/>
  <match src="identifier: i [38073,38074]" dest="identifier: i [54551,54552]"/>
  <match src="=: = [109316,109317]" dest="=: = [69092,69093]"/>
  <match src="type_name [2345,2352]" dest="type_name [2345,2352]"/>
  <match src="): ) [8946,8947]" dest="): ) [8946,8947]"/>
  <match src=".: . [48214,48215]" dest=".: . [16795,16796]"/>
  <match src="}: } [7746,7747]" dest="}: } [7746,7747]"/>
  <match src=".: . [103958,103959]" dest=".: . [39963,39964]"/>
  <match src="identifier: _state [104541,104547]" dest="identifier: _state [40546,40552]"/>
  <match src="memory: memory [93308,93314]" dest="memory: memory [76661,76667]"/>
  <match src="parameter [106332,106350]" dest="parameter [42337,42355]"/>
  <match src="private: private [45296,45303]" dest="private: private [13877,13884]"/>
  <match src=".: . [105177,105178]" dest=".: . [41182,41183]"/>
  <match src="(: ( [47097,47098]" dest="(: ( [15678,15679]"/>
  <match src=",: , [7976,7977]" dest=",: , [7976,7977]"/>
  <match src="expression_statement [109575,109577]" dest="expression_statement [69351,69353]"/>
  <match src="identifier: token1 [53832,53838]" dest="identifier: to [61437,61439]"/>
  <match src="): ) [103108,103109]" dest="): ) [39113,39114]"/>
  <match src="parameter [5386,5395]" dest="parameter [5386,5395]"/>
  <match src="(: ( [51085,51086]" dest="(: ( [56592,56593]"/>
  <match src="parameter [97938,97951]" dest="parameter [33943,33956]"/>
  <match src="(: ( [95977,95978]" dest="(: ( [31982,31983]"/>
  <match src="uint256: uint256 [99435,99442]" dest="uint256: uint256 [35440,35447]"/>
  <match src="primitive_type [97098,97105]" dest="primitive_type [33103,33110]"/>
  <match src="variable_declaration_statement [93860,93895]" dest="variable_declaration_statement [77213,77248]"/>
  <match src="address: address [108114,108121]" dest="address: address [44119,44126]"/>
  <match src="identifier: fluidUntil [90248,90258]" dest="identifier: fluidUntil [28675,28685]"/>
  <match src="function_body [7058,7112]" dest="function_body [7058,7112]"/>
  <match src="}: } [91507,91508]" dest="}: } [29934,29935]"/>
  <match src="primitive_type [98752,98759]" dest="primitive_type [34757,34764]"/>
  <match src="identifier: self [8039,8043]" dest="identifier: self [8039,8043]"/>
  <match src="uint256: uint256 [10876,10883]" dest="uint256: uint256 [10876,10883]"/>
  <match src="identifier: State [91483,91488]" dest="identifier: State [29910,29915]"/>
  <match src="returns: returns [7891,7898]" dest="returns: returns [7891,7898]"/>
  <match src="member_expression [104263,104277]" dest="member_expression [40268,40282]"/>
  <match src="type_name [52050,52057]" dest="type_name [26685,26692]"/>
  <match src="identifier: errorMessage [2000,2012]" dest="identifier: errorMessage [2000,2012]"/>
  <match src="identifier: coupons [90167,90174]" dest="identifier: coupons [28594,28601]"/>
  <match src="type_name [10904,10911]" dest="type_name [10904,10911]"/>
  <match src="return_type_definition [69843,69860]" dest="return_type_definition [62928,62945]"/>
  <match src="function: function [95172,95180]" dest="function: function [31177,31185]"/>
  <match src="identifier: dollar [95731,95737]" dest="identifier: dollar [31736,31742]"/>
  <match src="parameter [100462,100479]" dest="parameter [36467,36484]"/>
  <match src="}: } [90922,90923]" dest="}: } [29349,29350]"/>
  <match src="): ) [54668,54669]" dest="): ) [20760,20761]"/>
  <match src="=: = [6543,6544]" dest="=: = [6543,6544]"/>
  <match src="visibility [100207,100213]" dest="visibility [36212,36218]"/>
  <match src="function: function [30405,30413]" dest="function: function [46883,46891]"/>
  <match src="state_mutability [10949,10953]" dest="state_mutability [10949,10953]"/>
  <match src="call_argument [106483,106488]" dest="call_argument [42488,42493]"/>
  <match src="(: ( [21491,21492]" dest="(: ( [57497,57498]"/>
  <match src="type_name [90573,90580]" dest="type_name [29000,29007]"/>
  <match src="primitive_type [48828,48835]" dest="primitive_type [17409,17416]"/>
  <match src="identifier: z [37319,37320]" dest="identifier: z [53797,53798]"/>
  <match src="{: { [47312,47313]" dest="{: { [15893,15894]"/>
  <match src="event_paramater [82801,82824]" dest="event_paramater [70737,70760]"/>
  <match src="&quot;: &quot; [70513,70514]" dest="&quot;: &quot; [80673,80674]"/>
  <match src="uint256: uint256 [90399,90406]" dest="uint256: uint256 [28826,28833]"/>
  <match src="parameter [10553,10569]" dest="parameter [10553,10569]"/>
  <match src="): ) [47310,47311]" dest="): ) [15891,15892]"/>
  <match src="): ) [85638,85639]" dest="): ) [72804,72805]"/>
  <match src="identifier: amount [22096,22102]" dest="identifier: amount [59715,59721]"/>
  <match src="identifier: c [1121,1122]" dest="identifier: c [1121,1122]"/>
  <match src="uint256: uint256 [37637,37644]" dest="uint256: uint256 [54115,54122]"/>
  <match src="parameter [52110,52124]" dest="parameter [26745,26759]"/>
  <match src="identifier: FILE [109977,109981]" dest="identifier: FILE [69753,69757]"/>
  <match src="&quot;: &quot; [87443,87444]" dest="&quot;: &quot; [79260,79261]"/>
  <match src="member_expression [104805,104833]" dest="member_expression [40810,40838]"/>
  <match src="parameter [99329,99336]" dest="parameter [35334,35341]"/>
  <match src="parameter [100090,100097]" dest="parameter [36095,36102]"/>
  <match src="type_name [68833,68837]" dest="type_name [68052,68056]"/>
  <match src=".: . [106137,106138]" dest=".: . [42142,42143]"/>
  <match src="identifier: addedValue [19252,19262]" dest="identifier: totalDebt [18605,18614]"/>
  <match src=".: . [84445,84446]" dest=".: . [72046,72047]"/>
  <match src="identifier: sender [14770,14776]" dest="identifier: sender [25297,25303]"/>
  <match src="identifier: z [37315,37316]" dest="identifier: z [53793,53794]"/>
  <match src="call_argument [30847,30853]" dest="call_argument [47325,47331]"/>
  <match src="identifier: expiration [106414,106424]" dest="identifier: expiration [42419,42429]"/>
  <match src="constant: constant [82756,82764]" dest="constant: constant [70689,70697]"/>
  <match src="): ) [50937,50938]" dest="): ) [63204,63205]"/>
  <match src="binary_expression [36150,36155]" dest="binary_expression [52628,52633]"/>
  <match src="identifier: snapshotTotalBonded [106177,106196]" dest="identifier: snapshotTotalBonded [42182,42201]"/>
  <match src="string [58955,58992]" dest="string [73099,73135]"/>
  <match src="revert_statement [32603,33135]" dest="revert_statement [49081,49613]"/>
  <match src="primitive_type [45359,45366]" dest="primitive_type [13940,13947]"/>
  <match src="identifier: account [27217,27224]" dest="identifier: account [61197,61204]"/>
  <match src="comment: /* DAO */ [44820,44829]" dest="comment: /* DAO */ [13401,13410]"/>
  <match src="constant: constant [45101,45109]" dest="constant: constant [13682,13690]"/>
  <match src="revert: revert [33981,33987]" dest="revert: revert [50459,50465]"/>
  <match src=",: , [34220,34221]" dest=",: , [50698,50699]"/>
  <match src="return: return [9923,9929]" dest="return: return [9923,9929]"/>
  <match src="enum_value: APPROVE [90695,90702]" dest="enum_value: APPROVE [29122,29129]"/>
  <match src="parameter [107133,107148]" dest="parameter [43138,43153]"/>
  <match src="memory: memory [5415,5421]" dest="memory: memory [5415,5421]"/>
  <match src="address: address [54978,54985]" dest="address: address [21070,21077]"/>
  <match src="identifier: bonded [102477,102483]" dest="identifier: bonded [38482,38488]"/>
  <match src="primitive_type [33205,33212]" dest="primitive_type [49683,49690]"/>
  <match src="(: ( [35567,35568]" dest="(: ( [52045,52046]"/>
  <match src="type_name [100366,100373]" dest="type_name [36371,36378]"/>
  <match src="identifier: a [2624,2625]" dest="identifier: a [2624,2625]"/>
  <match src="private: private [45148,45155]" dest="private: private [13729,13736]"/>
  <match src=",: , [104361,104362]" dest=",: , [40366,40367]"/>
  <match src="external: external [56093,56101]" dest="external: external [22185,22193]"/>
  <match src="return_type_definition [13661,13678]" dest="return_type_definition [24188,24205]"/>
  <match src="assembly: assembly [89170,89178]" dest="assembly: assembly [74837,74845]"/>
  <match src="identifier: balance [90121,90128]" dest="identifier: balance [28548,28555]"/>
  <match src=":: : [46052,46053]" dest=":: : [14633,14634]"/>
  <match src="identifier: this [74585,74589]" dest="identifier: this [59347,59351]"/>
  <match src="array_access [36915,36924]" dest="array_access [53393,53402]"/>
  <match src="uint256: uint256 [3318,3325]" dest="uint256: uint256 [3318,3325]"/>
  <match src="identifier: incrementBalanceOfStaged [104073,104097]" dest="identifier: incrementBalanceOfStaged [40078,40102]"/>
  <match src="): ) [83785,83786]" dest="): ) [71779,71780]"/>
  <match src="call_argument [86082,86086]" dest="call_argument [80482,80486]"/>
  <match src="view: view [100780,100784]" dest="view: view [36785,36789]"/>
  <match src="return_type_definition [47930,47947]" dest="return_type_definition [16511,16528]"/>
  <match src="=: = [100959,100960]" dest="=: = [36964,36965]"/>
  <match src="visibility [8076,8084]" dest="visibility [8076,8084]"/>
  <match src="return_type_definition [46553,46582]" dest="return_type_definition [15134,15163]"/>
  <match src="identifier: a [2719,2720]" dest="identifier: a [2719,2720]"/>
  <match src="visibility [102418,102426]" dest="visibility [38423,38431]"/>
  <match src="return: return [99830,99836]" dest="return: return [35835,35841]"/>
  <match src="call_expression [9764,9818]" dest="call_expression [9764,9818]"/>
  <match src=".: . [83287,83288]" dest=".: . [78615,78616]"/>
  <match src="parameter [1418,1427]" dest="parameter [1418,1427]"/>
  <match src="{: { [103498,103499]" dest="{: { [39503,39504]"/>
  <match src="): ) [64880,64881]" dest="): ) [27669,27670]"/>
  <match src=",: , [101796,101797]" dest=",: , [37801,37802]"/>
  <match src="identifier: coupons [99377,99384]" dest="identifier: coupons [35382,35389]"/>
  <match src="modifier: modifier [109869,109877]" dest="modifier: modifier [69645,69653]"/>
  <match src="): ) [56769,56770]" dest="): ) [22861,22862]"/>
  <match src="}: } [70387,70388]" dest="}: } [62863,62864]"/>
  <match src="identifier: from [101879,101883]" dest="identifier: from [37884,37888]"/>
  <match src=",: , [33194,33195]" dest=",: , [49672,49673]"/>
  <match src="private: private [68593,68600]" dest="private: private [20210,20217]"/>
  <match src="): ) [29986,29987]" dest="): ) [46464,46465]"/>
  <match src="call_struct_argument [48522,48548]" dest="call_struct_argument [17103,17129]"/>
  <match src="number_literal: 1 [85615,85616]" dest="number_literal: 1 [72787,72788]"/>
  <match src="identifier: D256 [66479,66483]" dest="identifier: D256 [65831,65835]"/>
  <match src="parameter [84107,84120]" dest="parameter [71810,71823]"/>
  <match src="): ) [31259,31260]" dest="): ) [47737,47738]"/>
  <match src="uint256: uint256 [98984,98991]" dest="uint256: uint256 [34989,34996]"/>
  <match src="uint256: uint256 [80653,80660]" dest="uint256: uint256 [62897,62904]"/>
  <match src="identifier: payloadA [30505,30513]" dest="identifier: payloadA [46983,46991]"/>
  <match src="primitive_type [36130,36137]" dest="primitive_type [52608,52615]"/>
  <match src="(: ( [56036,56037]" dest="(: ( [22128,22129]"/>
  <match src="(: ( [11010,11011]" dest="(: ( [11010,11011]"/>
  <match src="identifier: j [35868,35869]" dest="identifier: j [52346,52347]"/>
  <match src="type_name [90782,90789]" dest="type_name [29209,29216]"/>
  <match src="(: ( [9416,9417]" dest="(: ( [9416,9417]"/>
  <match src="}: } [95487,95488]" dest="}: } [31492,31493]"/>
  <match src="member_expression [84831,84841]" dest="member_expression [72921,72931]"/>
  <match src="number_literal: 0 [44241,44242]" dest="number_literal: 0 [12822,12823]"/>
  <match src="function_definition [47639,47753]" dest="function_definition [16220,16334]"/>
  <match src="primitive_type [24231,24238]" dest="primitive_type [18625,18632]"/>
  <match src="): ) [8311,8312]" dest="): ) [8311,8312]"/>
  <match src="identifier: _state [95819,95825]" dest="identifier: _state [31824,31830]"/>
  <match src="public: public [99782,99788]" dest="public: public [35787,35793]"/>
  <match src="(: ( [8699,8700]" dest="(: ( [8699,8700]"/>
  <match src=",: , [29652,29653]" dest=",: , [46130,46131]"/>
  <match src="type_name [107527,107533]" dest="type_name [43532,43538]"/>
  <match src=",: , [85277,85278]" dest=",: , [73052,73053]"/>
  <match src=".: . [96042,96043]" dest=".: . [32047,32048]"/>
  <match src="call_argument [86614,86619]" dest="call_argument [81106,81115]"/>
  <match src="identifier: D256 [48215,48219]" dest="identifier: D256 [16796,16800]"/>
  <match src="type_name [102009,102016]" dest="type_name [38014,38021]"/>
  <match src="): ) [97968,97969]" dest="): ) [33973,33974]"/>
  <match src="comment: // 180 epochs [43609,43622]" dest="comment: // 180 epochs [12190,12203]"/>
  <match src="parameter [29443,29457]" dest="parameter [45921,45935]"/>
  <match src="): ) [38428,38429]" dest="): ) [54906,54907]"/>
  <match src="call_expression [31330,31617]" dest="call_expression [47808,48095]"/>
  <match src="identifier: balance [103855,103862]" dest="identifier: balance [39860,39867]"/>
  <match src="(: ( [93011,93012]" dest="(: ( [76364,76365]"/>
  <match src="]: ] [107080,107081]" dest="]: ] [43085,43086]"/>
  <match src="[: [ [108024,108025]" dest="[: [ [44029,44030]"/>
  <match src="internal: internal [47673,47681]" dest="internal: internal [16254,16262]"/>
  <match src="state_variable_declaration [43890,43944]" dest="state_variable_declaration [12471,12525]"/>
  <match src="(: ( [54818,54819]" dest="(: ( [20910,20911]"/>
  <match src="(: ( [9987,9988]" dest="(: ( [9987,9988]"/>
  <match src="call_argument [30236,30242]" dest="call_argument [46714,46720]"/>
  <match src=".: . [106225,106226]" dest=".: . [42230,42231]"/>
  <match src="(: ( [83406,83407]" dest="(: ( [71442,71443]"/>
  <match src="identifier: mul [85198,85201]" dest="identifier: div [72499,72502]"/>
  <match src="block_statement [29516,29806]" dest="block_statement [45994,46284]"/>
  <match src="identifier: file [31730,31734]" dest="identifier: file [48208,48212]"/>
  <match src="primitive_type [102239,102246]" dest="primitive_type [38244,38251]"/>
  <match src="primitive_type [83076,83083]" dest="primitive_type [70880,70887]"/>
  <match src="comment: // get the final string length [35768,35798]" dest="comment: // get the final string length [52246,52276]"/>
  <match src=".: . [91378,91379]" dest=".: . [29805,29806]"/>
  <match src="identifier: Setters [109269,109276]" dest="identifier: Setters [69045,69052]"/>
  <match src="function: function [47230,47238]" dest="function: function [15811,15819]"/>
  <match src="return_statement [8735,8747]" dest="return_statement [8735,8747]"/>
  <match src="(: ( [109944,109945]" dest="(: ( [69720,69721]"/>
  <match src="library_declaration [6417,11302]" dest="library_declaration [6417,11302]"/>
  <match src=".: . [98612,98613]" dest=".: . [34617,34618]"/>
  <match src="address: address [101990,101997]" dest="address: address [37995,38002]"/>
  <match src="): ) [102877,102878]" dest="): ) [38882,38883]"/>
  <match src="memory: memory [9459,9465]" dest="memory: memory [9459,9465]"/>
  <match src="identifier: z [38444,38445]" dest="identifier: z [54922,54923]"/>
  <match src="): ) [55277,55278]" dest="): ) [21369,21370]"/>
  <match src="member_expression [105223,105251]" dest="member_expression [41228,41256]"/>
  <match src="identifier: recipient [14786,14795]" dest="identifier: recipient [25313,25322]"/>
  <match src="internal: internal [107190,107198]" dest="internal: internal [43195,43203]"/>
  <match src="comment: // ', ' [29177,29184]" dest="comment: // ', ' [45655,45662]"/>
  <match src="identifier: payloadB [30532,30540]" dest="identifier: payloadB [47010,47018]"/>
  <match src="member_expression [83284,83294]" dest="member_expression [78612,78622]"/>
  <match src="): ) [24245,24246]" dest="): ) [56743,56744]"/>
  <match src="type_name [1418,1425]" dest="type_name [1418,1425]"/>
  <match src="string [23552,23590]" dest="string [63177,63194]"/>
  <match src="type_cast_expression [20856,20866]" dest="type_cast_expression [64501,64511]"/>
  <match src="function_body [96224,96269]" dest="function_body [32229,32274]"/>
  <match src=".: . [105251,105252]" dest=".: . [41256,41257]"/>
  <match src="): ) [70352,70353]" dest="): ) [62769,62770]"/>
  <match src="): ) [46127,46128]" dest="): ) [14708,14709]"/>
  <match src="primitive_type [31702,31706]" dest="primitive_type [48180,48184]"/>
  <match src="identifier: add [106146,106149]" dest="identifier: add [42151,42154]"/>
  <match src="primitive_type [103094,103101]" dest="primitive_type [39099,39106]"/>
  <match src=",: , [103693,103694]" dest=",: , [39698,39699]"/>
  <match src="return_statement [9542,9604]" dest="return_statement [9542,9604]"/>
  <match src="(: ( [23150,23151]" dest="(: ( [64235,64236]"/>
  <match src="function_definition [45639,45727]" dest="function_definition [14220,14308]"/>
  <match src="(: ( [4781,4782]" dest="(: ( [4781,4782]"/>
  <match src="identifier: self [9122,9126]" dest="identifier: self [9122,9126]"/>
  <match src="if_statement [2620,2667]" dest="if_statement [2620,2667]"/>
  <match src="uint256: uint256 [37071,37078]" dest="uint256: uint256 [53549,53556]"/>
  <match src="call_argument [85336,85348]" dest="call_argument [63421,63426]"/>
  <match src="member_expression [8350,8360]" dest="member_expression [8350,8360]"/>
  <match src="}: } [87630,87631]" dest="}: } [73297,73298]"/>
  <match src="state_mutability [96095,96099]" dest="state_mutability [32100,32104]"/>
  <match src="call_argument [22155,22190]" dest="call_argument [63693,63722]"/>
  <match src="primitive_type [31745,31752]" dest="primitive_type [48223,48230]"/>
  <match src="identifier: value [48375,48380]" dest="identifier: value [16956,16961]"/>
  <match src="function_body [29494,29813]" dest="function_body [45972,46291]"/>
  <match src="return_type_definition [17086,17103]" dest="return_type_definition [57191,57208]"/>
  <match src="identifier: Decimal [69223,69230]" dest="identifier: Decimal [67992,67999]"/>
  <match src="call_struct_argument [8152,8176]" dest="call_struct_argument [8152,8176]"/>
  <match src=".: . [105286,105287]" dest=".: . [41291,41292]"/>
  <match src="identifier: value [48221,48226]" dest="identifier: value [16802,16807]"/>
  <match src="function_body [4017,4267]" dest="function_body [4017,4267]"/>
  <match src="identifier: abi [29585,29588]" dest="identifier: abi [46063,46066]"/>
  <match src="{: { [33306,33307]" dest="{: { [49784,49785]"/>
  <match src="identifier: startFor [99905,99913]" dest="identifier: startFor [35910,35918]"/>
  <match src="binary_expression [53382,53428]" dest="binary_expression [64762,64813]"/>
  <match src="binary_expression [36387,36408]" dest="binary_expression [52865,52886]"/>
  <match src="parameter [31745,31759]" dest="parameter [48223,48237]"/>
  <match src="return: return [100522,100528]" dest="return: return [36527,36533]"/>
  <match src="identifier: input [37557,37562]" dest="identifier: input [54035,54040]"/>
  <match src="): ) [101033,101034]" dest="): ) [37038,37039]"/>
  <match src="&gt;=: &gt;= [97531,97533]" dest="&gt;=: &gt;= [33536,33538]"/>
  <match src="(: ( [7095,7096]" dest="(: ( [7095,7096]"/>
  <match src="primitive_type [45793,45800]" dest="primitive_type [14374,14381]"/>
  <match src="member_expression [9369,9376]" dest="member_expression [9369,9376]"/>
  <match src="identifier: abi [34789,34792]" dest="identifier: abi [51267,51270]"/>
  <match src="identifier: msg [12221,12224]" dest="identifier: msg [64738,64741]"/>
  <match src=".: . [84164,84165]" dest=".: . [71887,71888]"/>
  <match src="member_expression [7965,7970]" dest="member_expression [7965,7970]"/>
  <match src="function_definition [949,1130]" dest="function_definition [949,1130]"/>
  <match src="(: ( [84383,84384]" dest="(: ( [71969,71970]"/>
  <match src="event: event [27132,27137]" dest="event: event [61279,61284]"/>
  <match src="function_body [103119,103203]" dest="function_body [39124,39208]"/>
  <match src="): ) [95695,95696]" dest="): ) [31700,31701]"/>
  <match src="identifier: account [109463,109470]" dest="identifier: account [69239,69246]"/>
  <match src="(: ( [90146,90147]" dest="(: ( [28573,28574]"/>
  <match src="variable_declaration_statement [69255,69405]" dest="variable_declaration_statement [67057,67146]"/>
  <match src="identifier: spender [97961,97968]" dest="identifier: spender [33966,33973]"/>
  <match src="call_argument [23552,23590]" dest="call_argument [63177,63194]"/>
  <match src="(: ( [8398,8399]" dest="(: ( [8398,8399]"/>
  <match src="parameter [33769,33778]" dest="parameter [50247,50256]"/>
  <match src="uint: uint [55727,55731]" dest="uint: uint [21819,21823]"/>
  <match src="identifier: Withdraw [83759,83767]" dest="identifier: Withdraw [71753,71761]"/>
  <match src="primitive_type [106332,106339]" dest="primitive_type [42337,42344]"/>
  <match src="type_alias [77261,77269]" dest="type_alias [83051,83059]"/>
  <match src="identifier: Require [109903,109910]" dest="identifier: Require [69679,69686]"/>
  <match src="yul_path [101029,101033]" dest="yul_path [37034,37038]"/>
  <match src=".: . [98929,98930]" dest=".: . [34934,34935]"/>
  <match src="(: ( [13669,13670]" dest="(: ( [24196,24197]"/>
  <match src="): ) [103194,103195]" dest="): ) [39199,39200]"/>
  <match src="identifier: coupons [105244,105251]" dest="identifier: coupons [41249,41256]"/>
  <match src="identifier: sender [85389,85395]" dest="identifier: sender [80066,80072]"/>
  <match src="): ) [92982,92983]" dest="): ) [76335,76336]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [100961,100980]" dest="identifier: IMPLEMENTATION_SLOT [36966,36985]"/>
  <match src="call_argument [7281,7282]" dest="call_argument [7281,7282]"/>
  <match src="}: } [46208,46209]" dest="}: } [14789,14790]"/>
  <match src="function_definition [99250,99404]" dest="function_definition [35255,35409]"/>
  <match src="uint256: uint256 [29277,29284]" dest="uint256: uint256 [45755,45762]"/>
  <match src="binary_expression [109731,109766]" dest="binary_expression [69507,69542]"/>
  <match src="(: ( [85671,85672]" dest="(: ( [80174,80175]"/>
  <match src="call_expression [109454,109471]" dest="call_expression [69230,69247]"/>
  <match src="identifier: input [34639,34644]" dest="identifier: input [51117,51122]"/>
  <match src="): ) [87454,87455]" dest="): ) [79271,79272]"/>
  <match src="&quot;: &quot; [59346,59347]" dest="&quot;: &quot; [73217,73218]"/>
  <match src="string [87263,87275]" dest="string [78721,78738]"/>
  <match src="}: } [9146,9147]" dest="}: } [9146,9147]"/>
  <match src="call_argument [105991,105997]" dest="call_argument [41996,42002]"/>
  <match src="bytes: bytes [36779,36784]" dest="bytes: bytes [53257,53262]"/>
  <match src="state_mutability [36599,36603]" dest="state_mutability [53077,53081]"/>
  <match src="indexed: indexed [53800,53807]" dest="indexed: indexed [61407,61414]"/>
  <match src="block_statement [106686,106719]" dest="block_statement [42691,42724]"/>
  <match src="identifier: candidates [107770,107780]" dest="identifier: candidates [43775,43785]"/>
  <match src="identifier: epoch [84733,84738]" dest="identifier: epoch [73256,73261]"/>
  <match src="{: { [95220,95221]" dest="{: { [31225,31226]"/>
  <match src="}: } [48396,48397]" dest="}: } [16977,16978]"/>
  <match src=".: . [108035,108036]" dest=".: . [44040,44041]"/>
  <match src="user_defined_type [10125,10129]" dest="user_defined_type [10125,10129]"/>
  <match src="identifier: epoch [106386,106391]" dest="identifier: epoch [42391,42396]"/>
  <match src="primitive_type [105069,105075]" dest="primitive_type [41074,41080]"/>
  <match src=".: . [105135,105136]" dest=".: . [41140,41141]"/>
  <match src="(: ( [36891,36892]" dest="(: ( [53369,53370]"/>
  <match src="{: { [46984,46985]" dest="{: { [15565,15566]"/>
  <match src="type_name [100462,100469]" dest="type_name [36467,36474]"/>
  <match src="(: ( [103754,103755]" dest="(: ( [39759,39760]"/>
  <match src="uint256: uint256 [15314,15321]" dest="uint256: uint256 [25841,25848]"/>
  <match src="(: ( [32240,32241]" dest="(: ( [48718,48719]"/>
  <match src=".: . [98634,98635]" dest=".: . [34639,34640]"/>
  <match src="bool: bool [90899,90903]" dest="bool: bool [29326,29330]"/>
  <match src="identifier: reason [30202,30208]" dest="identifier: reason [46680,46686]"/>
  <match src="return_statement [45942,46079]" dest="return_statement [14523,14660]"/>
  <match src="function: function [8386,8394]" dest="function: function [8386,8394]"/>
  <match src="call_expression [48508,48550]" dest="call_expression [17089,17131]"/>
  <match src="pure: pure [34670,34674]" dest="pure: pure [51148,51152]"/>
  <match src="): ) [48731,48732]" dest="): ) [17312,17313]"/>
  <match src="primitive_type [54693,54699]" dest="primitive_type [20785,20791]"/>
  <match src="): ) [32723,32724]" dest="): ) [49201,49202]"/>
  <match src="(: ( [109439,109440]" dest="(: ( [69215,69216]"/>
  <match src="identifier: b [8174,8175]" dest="identifier: b [8174,8175]"/>
  <match src=",: , [105797,105798]" dest=",: , [41802,41803]"/>
  <match src="string: string [105832,105838]" dest="string: string [41837,41843]"/>
  <match src="(: ( [95274,95275]" dest="(: ( [31279,31280]"/>
  <match src="parenthesized_expression [30620,31067]" dest="parenthesized_expression [47098,47545]"/>
  <match src="identifier: sender [83856,83862]" dest="identifier: sender [72893,72899]"/>
  <match src="member_expression [47162,47174]" dest="member_expression [15743,15755]"/>
  <match src="binary_expression [108300,108321]" dest="binary_expression [44305,44326]"/>
  <match src="number_literal: 0 [37083,37084]" dest="number_literal: 0 [53561,53562]"/>
  <match src="string_literal [26339,26372]" dest="string_literal [78901,78930]"/>
  <match src="{: { [35692,35693]" dest="{: { [52170,52171]"/>
  <match src="bytes32: bytes32 [33228,33235]" dest="bytes32: bytes32 [49706,49713]"/>
  <match src="): ) [8369,8370]" dest="): ) [8369,8370]"/>
  <match src="uint256: uint256 [16928,16935]" dest="uint256: uint256 [18416,18423]"/>
  <match src="identifier: sender [86051,86057]" dest="identifier: sender [78676,78682]"/>
  <match src="identifier: account [103464,103471]" dest="identifier: account [39469,39476]"/>
  <match src=".: . [104782,104783]" dest=".: . [40787,40788]"/>
  <match src="): ) [104581,104582]" dest="): ) [40586,40587]"/>
  <match src="call_expression [107035,107042]" dest="call_expression [43040,43047]"/>
  <match src="member_expression [32657,32673]" dest="member_expression [49135,49151]"/>
  <match src="}: } [105740,105741]" dest="}: } [41745,41746]"/>
  <match src="identifier: value [9794,9799]" dest="identifier: value [9794,9799]"/>
  <match src="binary_expression [10618,10633]" dest="binary_expression [10618,10633]"/>
  <match src="parameter [3284,3293]" dest="parameter [3284,3293]"/>
  <match src="(: ( [55501,55502]" dest="(: ( [21593,21594]"/>
  <match src="(: ( [107304,107305]" dest="(: ( [43309,43310]"/>
  <match src="identifier: Upgradeable [92422,92433]" dest="identifier: Upgradeable [75775,75786]"/>
  <match src="visibility [45367,45374]" dest="visibility [13948,13955]"/>
  <match src="uint256: uint256 [22088,22095]" dest="uint256: uint256 [59707,59714]"/>
  <match src="primitive_type [96438,96445]" dest="primitive_type [32443,32450]"/>
  <match src="identifier: b [9586,9587]" dest="identifier: b [9586,9587]"/>
  <match src="!: ! [32581,32582]" dest="!: ! [49059,49060]"/>
  <match src="): ) [102296,102297]" dest="): ) [38301,38302]"/>
  <match src="call_argument [8706,8710]" dest="call_argument [8706,8710]"/>
  <match src=".: . [48515,48516]" dest=".: . [17096,17097]"/>
  <match src="expression_statement [70538,70540]" dest="expression_statement [83822,83824]"/>
  <match src="call_expression [86985,86998]" dest="call_expression [59375,59388]"/>
  <match src="uint256: uint256 [47819,47826]" dest="uint256: uint256 [16400,16407]"/>
  <match src="=: = [36140,36141]" dest="=: = [52618,52619]"/>
  <match src="identifier: a [2691,2692]" dest="identifier: a [2691,2692]"/>
  <match src="): ) [96008,96009]" dest="): ) [32013,32014]"/>
  <match src="identifier: value [9935,9940]" dest="identifier: value [9935,9940]"/>
  <match src="expression_statement [107360,107448]" dest="expression_statement [43365,43453]"/>
  <match src="): ) [74565,74566]" dest="): ) [59327,59328]"/>
  <match src=".: . [111273,111274]" dest=".: . [68074,68075]"/>
  <match src="event: event [55955,55960]" dest="event: event [22047,22052]"/>
  <match src="primitive_type [80528,80535]" dest="primitive_type [61506,61513]"/>
  <match src="): ) [36813,36814]" dest="): ) [53291,53292]"/>
  <match src="false: false [102180,102185]" dest="false: false [38185,38190]"/>
  <match src="call_argument [33542,33548]" dest="call_argument [50020,50026]"/>
  <match src="internal: internal [46539,46547]" dest="internal: internal [15120,15128]"/>
  <match src="indexed: indexed [54519,54526]" dest="indexed: indexed [20611,20618]"/>
  <match src="call_argument [104491,104497]" dest="call_argument [40496,40502]"/>
  <match src="(: ( [95893,95894]" dest="(: ( [31898,31899]"/>
  <match src="[: [ [38249,38250]" dest="[: [ [54727,54728]"/>
  <match src="identifier: amount [104567,104573]" dest="identifier: amount [40572,40578]"/>
  <match src="bytes32: bytes32 [55581,55588]" dest="bytes32: bytes32 [21673,21680]"/>
  <match src="): ) [103692,103693]" dest="): ) [39697,39698]"/>
  <match src="function: function [107864,107872]" dest="function: function [43869,43877]"/>
  <match src="private: private [16762,16769]" dest="private: private [18647,18654]"/>
  <match src="call_argument [34371,34376]" dest="call_argument [50849,50854]"/>
  <match src="identifier: add [103184,103187]" dest="identifier: add [39189,39192]"/>
  <match src="call_expression [32869,32888]" dest="call_expression [49347,49366]"/>
  <match src="): ) [100067,100068]" dest="): ) [36072,36073]"/>
  <match src="primitive_type [100366,100373]" dest="primitive_type [36371,36378]"/>
  <match src="parameter [20718,20732]" dest="parameter [64355,64369]"/>
  <match src="member_expression [96465,96479]" dest="member_expression [32470,32484]"/>
  <match src="primitive_type [43984,43991]" dest="primitive_type [12565,12572]"/>
  <match src="array_access [98018,98066]" dest="array_access [34023,34071]"/>
  <match src="member_expression [11205,11212]" dest="member_expression [11205,11212]"/>
  <match src="private: private [45428,45435]" dest="private: private [14009,14016]"/>
  <match src="identifier: spender [105914,105921]" dest="identifier: spender [41919,41926]"/>
  <match src="): ) [7231,7232]" dest="): ) [7231,7232]"/>
  <match src="): ) [97128,97129]" dest="): ) [33133,33134]"/>
  <match src="identifier: sender [84725,84731]" dest="identifier: sender [73248,73254]"/>
  <match src="identifier: length [35242,35248]" dest="identifier: length [51720,51726]"/>
  <match src="call_argument [30762,30767]" dest="call_argument [47240,47245]"/>
  <match src=",: , [83171,83172]" dest=",: , [78493,78494]"/>
  <match src="member_expression [104263,104288]" dest="member_expression [40268,40293]"/>
  <match src="): ) [93483,93484]" dest="): ) [76836,76837]"/>
  <match src="primitive_type [43473,43480]" dest="primitive_type [12054,12061]"/>
  <match src="array_access [107569,107597]" dest="array_access [43574,43602]"/>
  <match src="type_name [77733,77740]" dest="type_name [56955,56962]"/>
  <match src="for: for [77270,77273]" dest="for: for [83060,83063]"/>
  <match src="state_variable_declaration [44249,44299]" dest="state_variable_declaration [12830,12880]"/>
  <match src="variable_declaration_statement [86227,86309]" dest="variable_declaration_statement [80336,80409]"/>
  <match src="identifier: char [37277,37281]" dest="identifier: char [53755,53759]"/>
  <match src="identifier: amount [104963,104969]" dest="identifier: amount [40968,40974]"/>
  <match src=".: . [107997,107998]" dest=".: . [44002,44003]"/>
  <match src="parameter [81324,81338]" dest="parameter [80175,80192]"/>
  <match src="(: ( [30889,30890]" dest="(: ( [47367,47368]"/>
  <match src="parameter [88637,88652]" dest="parameter [74304,74319]"/>
  <match src="call_argument [85799,85803]" dest="call_argument [81260,81264]"/>
  <match src=",: , [109772,109773]" dest=",: , [69548,69549]"/>
  <match src="parameter [97332,97347]" dest="parameter [33337,33352]"/>
  <match src="}: } [7545,7546]" dest="}: } [7545,7546]"/>
  <match src="identifier: spender [55525,55532]" dest="identifier: spender [21617,21624]"/>
  <match src="comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [2399,2478]" dest="comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [2399,2478]"/>
  <match src="array_access [104701,104725]" dest="array_access [40706,40730]"/>
  <match src="type_name [55923,55930]" dest="type_name [22015,22022]"/>
  <match src="identifier: amount [21709,21715]" dest="identifier: amount [64257,64263]"/>
  <match src="public: public [67030,67036]" dest="public: public [83262,83268]"/>
  <match src="type_name [8054,8061]" dest="type_name [8054,8061]"/>
  <match src="binary_expression [109454,109489]" dest="binary_expression [69230,69265]"/>
  <match src="): ) [56123,56124]" dest="): ) [22215,22216]"/>
  <match src="primitive_type [104379,104385]" dest="primitive_type [40384,40390]"/>
  <match src="primitive_type [56172,56179]" dest="primitive_type [22264,22271]"/>
  <match src="parameter [98984,98997]" dest="parameter [34989,35002]"/>
  <match src=".: . [95465,95466]" dest=".: . [31470,31471]"/>
  <match src="identifier: spender [55072,55079]" dest="identifier: spender [21164,21171]"/>
  <match src="(: ( [17653,17654]" dest="(: ( [58888,58889]"/>
  <match src="pure: pure [7448,7452]" dest="pure: pure [7448,7452]"/>
  <match src="identifier: initializeCouponsExpiration [106289,106316]" dest="identifier: initializeCouponsExpiration [42294,42321]"/>
  <match src="call_argument [93765,93782]" dest="call_argument [77118,77135]"/>
  <match src="type_name [56626,56633]" dest="type_name [22718,22725]"/>
  <match src="identifier: Mint [55615,55619]" dest="identifier: Mint [21707,21711]"/>
  <match src="binary_expression [38652,38662]" dest="binary_expression [55130,55140]"/>
  <match src=".: . [67751,67752]" dest=".: . [19886,19887]"/>
  <match src="{: { [96118,96119]" dest="{: { [32123,32124]"/>
  <match src="array_access [99047,99067]" dest="array_access [35052,35072]"/>
  <match src="identifier: add [84236,84239]" dest="identifier: asUint256 [66681,66690]"/>
  <match src="=: = [35995,35996]" dest="=: = [52473,52474]"/>
  <match src="public: public [95094,95100]" dest="public: public [31099,31105]"/>
  <match src="expression_statement [104517,104583]" dest="expression_statement [40522,40588]"/>
  <match src="is: is [66435,66437]" dest="is: is [65750,65752]"/>
  <match src="unary_expression [30592,30597]" dest="unary_expression [47070,47075]"/>
  <match src="}: } [37511,37512]" dest="}: } [53989,53990]"/>
  <match src="primitive_type [104665,104672]" dest="primitive_type [40670,40677]"/>
  <match src="identifier: _state [104239,104245]" dest="identifier: _state [40244,40250]"/>
  <match src="state_mutability [96424,96428]" dest="state_mutability [32429,32433]"/>
  <match src="call_argument [11011,11020]" dest="call_argument [11011,11020]"/>
  <match src="(: ( [97528,97529]" dest="(: ( [33533,33534]"/>
  <match src=",: , [70490,70491]" dest=",: , [80650,80651]"/>
  <match src="visibility [46539,46547]" dest="visibility [15120,15128]"/>
  <match src="call_expression [5479,5508]" dest="call_expression [5479,5508]"/>
  <match src="call_argument [108047,108053]" dest="call_argument [44052,44058]"/>
  <match src="state_variable_declaration [29100,29131]" dest="state_variable_declaration [45578,45609]"/>
  <match src="call_argument [86445,86455]" dest="call_argument [63347,63357]"/>
  <match src="identifier: account [24275,24282]" dest="identifier: account [56783,56790]"/>
  <match src="identifier: getDAOExitLockupEpochs [105535,105557]" dest="identifier: getDAOExitLockupEpochs [41540,41562]"/>
  <match src="function: function [47885,47893]" dest="function: function [16466,16474]"/>
  <match src="parameter [99746,99761]" dest="parameter [35751,35766]"/>
  <match src=".: . [103942,103943]" dest=".: . [39947,39948]"/>
  <match src="primitive_type [14797,14804]" dest="primitive_type [25324,25331]"/>
  <match src="==: == [2626,2628]" dest="==: == [2626,2628]"/>
  <match src="update_expression [36306,36309]" dest="update_expression [52784,52787]"/>
  <match src="type_name [15314,15321]" dest="type_name [25841,25848]"/>
  <match src="(: ( [67921,67922]" dest="(: ( [68256,68257]"/>
  <match src="type_name [21448,21455]" dest="type_name [57443,57450]"/>
  <match src="}: } [104303,104304]" dest="}: } [40308,40309]"/>
  <match src="parameter [83249,83262]" dest="parameter [71286,71299]"/>
  <match src="array_access [103509,103533]" dest="array_access [39514,39538]"/>
  <match src="byte: byte [37914,37918]" dest="byte: byte [54392,54396]"/>
  <match src="call_argument [98570,98584]" dest="call_argument [34575,34589]"/>
  <match src="): ) [98727,98728]" dest="): ) [34732,34733]"/>
  <match src="call_struct_argument [46013,46031]" dest="call_struct_argument [14594,14612]"/>
  <match src=",: , [55739,55740]" dest=",: , [21831,21832]"/>
  <match src="revert_statement [30003,30379]" dest="revert_statement [46481,46857]"/>
  <match src="member_expression [98570,98584]" dest="member_expression [34575,34589]"/>
  <match src="call_expression [33609,33628]" dest="call_expression [50087,50106]"/>
  <match src="parameter [8109,8120]" dest="parameter [8109,8120]"/>
  <match src="type_name [108153,108160]" dest="type_name [44158,44165]"/>
  <match src="struct_member [44147,44161]" dest="struct_member [12728,12742]"/>
  <match src="member_expression [98535,98638]" dest="member_expression [34540,34643]"/>
  <match src="primitive_type [15071,15078]" dest="primitive_type [25598,25605]"/>
  <match src="identifier: amount [107332,107338]" dest="identifier: amount [43337,43343]"/>
  <match src="(: ( [8935,8936]" dest="(: ( [8935,8936]"/>
  <match src="call_argument [20762,20782]" dest="call_argument [64399,64419]"/>
  <match src="string [22959,22997]" dest="string [63799,63836]"/>
  <match src="function_body [7485,7555]" dest="function_body [7485,7555]"/>
  <match src="returns: returns [52133,52140]" dest="returns: returns [26768,26775]"/>
  <match src="identifier: z [38269,38270]" dest="identifier: z [54747,54748]"/>
  <match src="call_expression [9354,9385]" dest="call_expression [9354,9385]"/>
  <match src="identifier: EpochStrategy [45949,45962]" dest="identifier: EpochStrategy [14530,14543]"/>
  <match src="(: ( [36885,36886]" dest="(: ( [53363,53364]"/>
  <match src="identifier: epochTime [98226,98235]" dest="identifier: epochTime [34231,34240]"/>
  <match src="identifier: RPAREN [32277,32283]" dest="identifier: RPAREN [48755,48761]"/>
  <match src="uint256: uint256 [96862,96869]" dest="uint256: uint256 [32867,32874]"/>
  <match src="number_literal: 0 [10227,10228]" dest="number_literal: 0 [10227,10228]"/>
  <match src="{: { [8341,8342]" dest="{: { [8341,8342]"/>
  <match src="return_type_definition [46954,46983]" dest="return_type_definition [15535,15564]"/>
  <match src=",: , [10004,10005]" dest=",: , [10004,10005]"/>
  <match src="identifier: burn [56621,56625]" dest="identifier: burn [22713,22717]"/>
  <match src="=: = [98318,98319]" dest="=: = [34323,34324]"/>
  <match src="returns: returns [97681,97688]" dest="returns: returns [33686,33693]"/>
  <match src="member_expression [98018,98057]" dest="member_expression [34023,34062]"/>
  <match src="): ) [107338,107339]" dest="): ) [43343,43344]"/>
  <match src="parameter [95432,95439]" dest="parameter [31437,31444]"/>
  <match src="boolean_literal [102067,102072]" dest="boolean_literal [38072,38077]"/>
  <match src="call_expression [38264,38287]" dest="call_expression [54742,54765]"/>
  <match src="identifier: totalBonded [95966,95977]" dest="identifier: totalBonded [31971,31982]"/>
  <match src="identifier: spender [23017,23024]" dest="identifier: spender [64071,64078]"/>
  <match src="identifier: value [83671,83676]" dest="identifier: value [71689,71694]"/>
  <match src="): ) [84076,84077]" dest="): ) [81906,81907]"/>
  <match src="call_expression [105266,105326]" dest="call_expression [41271,41331]"/>
  <match src="primitive_type [56228,56235]" dest="primitive_type [22320,22327]"/>
  <match src="identifier: reserve0 [56297,56305]" dest="identifier: reserve0 [22389,22397]"/>
  <match src="member_expression [9574,9584]" dest="member_expression [9574,9584]"/>
  <match src="): ) [20823,20824]" dest="): ) [64468,64469]"/>
  <match src="identifier: reason [104393,104399]" dest="identifier: reason [40398,40404]"/>
  <match src="identifier: must [32396,32400]" dest="identifier: must [48874,48878]"/>
  <match src="parameter [8218,8234]" dest="parameter [8218,8234]"/>
  <match src="identifier: incrementBalanceOfCoupons [104607,104632]" dest="identifier: incrementBalanceOfCoupons [40612,40637]"/>
  <match src="identifier: candidate [100334,100343]" dest="identifier: candidate [36339,36348]"/>
  <match src="identifier: payloadA [31194,31202]" dest="identifier: payloadA [47672,47680]"/>
  <match src="identifier: coupons [106769,106776]" dest="identifier: coupons [42774,42781]"/>
  <match src="identifier: oracle [91014,91020]" dest="identifier: oracle [29441,29447]"/>
  <match src="(: ( [69624,69625]" dest="(: ( [68082,68083]"/>
  <match src="variable_declaration [37161,37174]" dest="variable_declaration [53639,53652]"/>
  <match src="member_expression [105362,105384]" dest="member_expression [41367,41389]"/>
  <match src="expression_statement [105475,105561]" dest="expression_statement [41480,41566]"/>
  <match src="yul_evm_builtin [89189,89200]" dest="yul_evm_builtin [74856,74867]"/>
  <match src="identifier: updateReserve [68722,68735]" dest="identifier: balanceOf [79302,79311]"/>
  <match src="pure: pure [31840,31844]" dest="pure: pure [48318,48322]"/>
  <match src="user_defined_type [66438,66445]" dest="user_defined_type [65753,65764]"/>
  <match src="{: { [7918,7919]" dest="{: { [7918,7919]"/>
  <match src="uint256: uint256 [33891,33898]" dest="uint256: uint256 [50369,50376]"/>
  <match src="type_name [56413,56417]" dest="type_name [22505,22509]"/>
  <match src="call_argument [32067,32093]" dest="call_argument [48545,48571]"/>
  <match src="type_name [97115,97122]" dest="type_name [33120,33127]"/>
  <match src="=: = [102460,102461]" dest="=: = [38465,38466]"/>
  <match src="]: ] [97740,97741]" dest="]: ] [33745,33746]"/>
  <match src="primitive_type [29049,29056]" dest="primitive_type [45527,45534]"/>
  <match src="}: } [47212,47213]" dest="}: } [15793,15794]"/>
  <match src="function_definition [8762,8955]" dest="function_definition [8762,8955]"/>
  <match src="uint256: uint256 [30497,30504]" dest="uint256: uint256 [46975,46982]"/>
  <match src="type_name [18544,18551]" dest="type_name [60025,60032]"/>
  <match src="call_argument [67354,67358]" dest="call_argument [81783,81787]"/>
  <match src="member_expression [98604,98619]" dest="member_expression [34609,34624]"/>
  <match src="identifier: b [7420,7421]" dest="identifier: b [7420,7421]"/>
  <match src="internal: internal [107743,107751]" dest="internal: internal [43748,43756]"/>
  <match src="memory: memory [8114,8120]" dest="memory: memory [8114,8120]"/>
  <match src="internal: internal [45665,45673]" dest="internal: internal [14246,14254]"/>
  <match src="string: string [107927,107933]" dest="string: string [43932,43938]"/>
  <match src="): ) [1532,1533]" dest="): ) [1532,1533]"/>
  <match src="unary_expression [29509,29514]" dest="unary_expression [45987,45992]"/>
  <match src="address: address [53792,53799]" dest="address: address [61399,61406]"/>
  <match src="revert_statement [31887,32341]" dest="revert_statement [48365,48819]"/>
  <match src="string [87051,87081]" dest="string [59446,59469]"/>
  <match src="call_argument [7261,7294]" dest="call_argument [7261,7294]"/>
  <match src="call_expression [97002,97039]" dest="call_expression [33007,33044]"/>
  <match src="primitive_type [100090,100097]" dest="primitive_type [36095,36102]"/>
  <match src="number_literal: 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 [43840,43882]" dest="number_literal: 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 [12421,12463]"/>
  <match src="function_definition [47761,47877]" dest="function_definition [16342,16458]"/>
  <match src="identifier: fluidUntil [97559,97569]" dest="identifier: fluidUntil [33564,33574]"/>
  <match src="contract: contract [92413,92421]" dest="contract: contract [75766,75774]"/>
  <match src=".: . [104461,104462]" dest=".: . [40466,40467]"/>
  <match src="identifier: reason [104499,104505]" dest="identifier: reason [40504,40510]"/>
  <match src="visibility [7187,7195]" dest="visibility [7187,7195]"/>
  <match src="call_argument [83605,83615]" dest="call_argument [72095,72105]"/>
  <match src="type_name [90858,90882]" dest="type_name [29285,29309]"/>
  <match src="type_name [91322,91330]" dest="type_name [29749,29757]"/>
  <match src="primitive_type [46845,46852]" dest="primitive_type [15426,15433]"/>
  <match src="contract_declaration [66419,70550]" dest="contract_declaration [65731,68305]"/>
  <match src="identifier: statusOf [109731,109739]" dest="identifier: statusOf [69507,69515]"/>
  <match src="(: ( [102840,102841]" dest="(: ( [38845,38846]"/>
  <match src="call_argument [20843,20866]" dest="call_argument [64488,64511]"/>
  <match src="modifier_invocation [84131,84140]" dest="modifier_invocation [71834,71863]"/>
  <match src="member_expression [99047,99060]" dest="member_expression [35052,35065]"/>
  <match src="return_statement [46594,46658]" dest="return_statement [15175,15239]"/>
  <match src="memory: memory [46575,46581]" dest="memory: memory [15156,15162]"/>
  <match src="identifier: temp [8700,8704]" dest="identifier: temp [8700,8704]"/>
  <match src="identifier: GOVERNANCE_EMERGENCY_DELAY [47483,47509]" dest="identifier: GOVERNANCE_EMERGENCY_DELAY [16064,16090]"/>
  <match src="function_body [104690,104978]" dest="function_body [40695,40983]"/>
  <match src="type_name [65680,65684]" dest="type_name [81982,81986]"/>
  <match src="call_expression [46432,46474]" dest="call_expression [15013,15055]"/>
  <match src="identifier: reason [103802,103808]" dest="identifier: reason [39807,39813]"/>
  <match src="member_expression [105337,105351]" dest="member_expression [41342,41356]"/>
  <match src="external: external [55315,55323]" dest="external: external [21407,21415]"/>
  <match src="call_argument [84635,84670]" dest="call_argument [72208,72246]"/>
  <match src="): ) [53428,53429]" dest="): ) [64813,64814]"/>
  <match src="identifier: _state [105938,105944]" dest="identifier: _state [41943,41949]"/>
  <match src="]: ] [106391,106392]" dest="]: ] [42396,42397]"/>
  <match src="variable_declaration [93288,93300]" dest="variable_declaration [76641,76653]"/>
  <match src="): ) [85196,85197]" dest="): ) [72523,72524]"/>
  <match src="identifier: COMMA [34371,34376]" dest="identifier: COMMA [50849,50854]"/>
  <match src="identifier: sub [104563,104566]" dest="identifier: sub [40568,40571]"/>
  <match src="type_name [9868,9872]" dest="type_name [9868,9872]"/>
  <match src="parameter [8027,8043]" dest="parameter [8027,8043]"/>
  <match src="call_expression [93726,93783]" dest="call_expression [77079,77136]"/>
  <match src="identifier: temp [8742,8746]" dest="identifier: temp [8742,8746]"/>
  <match src="(: ( [106652,106653]" dest="(: ( [42657,42658]"/>
  <match src="primitive_type [95570,95577]" dest="primitive_type [31575,31582]"/>
  <match src="return_type_definition [4773,4790]" dest="return_type_definition [4773,4790]"/>
  <match src="parenthesized_expression [31893,32340]" dest="parenthesized_expression [48371,48818]"/>
  <match src="uint256: uint256 [3284,3291]" dest="uint256: uint256 [3284,3291]"/>
  <match src="visibility [100345,100351]" dest="visibility [36350,36356]"/>
  <match src="struct_member [91352,91395]" dest="struct_member [29779,29822]"/>
  <match src="identifier: incrementBalanceOfStaged [83382,83406]" dest="identifier: incrementBalanceOfStaged [71418,71442]"/>
  <match src="type_name [64822,64826]" dest="type_name [27611,27615]"/>
  <match src="function_definition [92992,93021]" dest="function_definition [76345,76374]"/>
  <match src="type_name [83051,83058]" dest="type_name [70855,70862]"/>
  <match src="primitive_type [102857,102863]" dest="primitive_type [38862,38868]"/>
  <match src="contract_body [66446,70550]" dest="contract_body [65765,68305]"/>
  <match src="pure: pure [57175,57179]" dest="pure: pure [18402,18406]"/>
  <match src="call_argument [85202,85207]" dest="call_argument [72503,72524]"/>
  <match src="type_name [47579,47586]" dest="type_name [16160,16167]"/>
  <match src="identifier: timestamp [98785,98794]" dest="identifier: timestamp [34790,34799]"/>
  <match src="function_definition [98116,98209]" dest="function_definition [34121,34214]"/>
  <match src="return: return [38478,38484]" dest="return: return [54956,54962]"/>
  <match src="(: ( [91461,91462]" dest="(: ( [29888,29889]"/>
  <match src="identifier: char [38406,38410]" dest="identifier: char [54884,54888]"/>
  <match src="uint256: uint256 [83017,83024]" dest="uint256: uint256 [70994,71001]"/>
  <match src="identifier: votesFor [100453,100461]" dest="identifier: votesFor [36458,36466]"/>
  <match src="state_mutability [10695,10699]" dest="state_mutability [10695,10699]"/>
  <match src="address: address [27150,27157]" dest="address: address [61302,61309]"/>
  <match src="uint256: uint256 [99329,99336]" dest="uint256: uint256 [35334,35341]"/>
  <match src="state_mutability [97676,97680]" dest="state_mutability [33681,33685]"/>
  <match src="call_expression [30057,30344]" dest="call_expression [46535,46822]"/>
  <match src="type_name [37549,37556]" dest="type_name [54027,54034]"/>
  <match src="type_name [10437,10441]" dest="type_name [10437,10441]"/>
  <match src="identifier: ratio [69619,69624]" dest="identifier: ratio [82110,82115]"/>
  <match src="pure: pure [48814,48818]" dest="pure: pure [17395,17399]"/>
  <match src="event_paramater [101863,101883]" dest="event_paramater [37868,37888]"/>
  <match src="identifier: result [37498,37504]" dest="identifier: result [53976,53982]"/>
  <match src="]: ] [38402,38403]" dest="]: ] [54880,54881]"/>
  <match src="): ) [104505,104506]" dest="): ) [40510,40511]"/>
  <match src="type_name [56656,56660]" dest="type_name [22748,22752]"/>
  <match src="{: { [48059,48060]" dest="{: { [16640,16641]"/>
  <match src="(: ( [29834,29835]" dest="(: ( [46312,46313]"/>
  <match src="type_name [7145,7152]" dest="type_name [7145,7152]"/>
  <match src="view: view [55324,55328]" dest="view: view [21416,21420]"/>
  <match src="primitive_type [83017,83024]" dest="primitive_type [70994,71001]"/>
  <match src="(: ( [26578,26579]" dest="(: ( [79557,79558]"/>
  <match src=",: , [102855,102856]" dest=",: , [38860,38861]"/>
  <match src="struct_declaration [90064,90296]" dest="struct_declaration [28491,28723]"/>
  <match src="identifier: shift [37169,37174]" dest="identifier: shift [53647,53652]"/>
  <match src="identifier: amount [78471,78477]" dest="identifier: amount [64714,64720]"/>
  <match src="call_expression [105153,105212]" dest="call_expression [41158,41217]"/>
  <match src="string [109530,109551]" dest="string [69306,69327]"/>
  <match src=",: , [32998,32999]" dest=",: , [49476,49477]"/>
  <match src="identifier: div [3345,3348]" dest="identifier: div [3345,3348]"/>
  <match src="identifier: _state [104805,104811]" dest="identifier: _state [40810,40816]"/>
  <match src="address: address [100188,100195]" dest="address: address [36193,36200]"/>
  <match src="identifier: b [9681,9682]" dest="identifier: b [9681,9682]"/>
  <match src="return_statement [47476,47510]" dest="return_statement [16057,16091]"/>
  <match src="array_access [103865,103889]" dest="array_access [39870,39894]"/>
  <match src="identifier: require [93718,93725]" dest="identifier: require [77071,77078]"/>
  <match src="return_statement [95033,95061]" dest="return_statement [31038,31066]"/>
  <match src="uint256: uint256 [1964,1971]" dest="uint256: uint256 [1964,1971]"/>
  <match src="call_argument [103188,103194]" dest="call_argument [39193,39199]"/>
  <match src="{: { [90339,90340]" dest="{: { [28766,28767]"/>
  <match src="identifier: candidate [108440,108449]" dest="identifier: candidate [44445,44454]"/>
  <match src="primitive_type [30524,30531]" dest="primitive_type [47002,47009]"/>
  <match src="--: -- [35099,35101]" dest="--: -- [51577,51579]"/>
  <match src="address: address [105623,105630]" dest="address: address [41628,41635]"/>
  <match src="visibility [96704,96710]" dest="visibility [32709,32715]"/>
  <match src="type_name [44992,44999]" dest="type_name [13573,13580]"/>
  <match src="type_name [6459,6466]" dest="type_name [6459,6466]"/>
  <match src="internal: internal [46129,46137]" dest="internal: internal [14710,14718]"/>
  <match src="comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [14430,14734]" dest="comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [24957,25261]"/>
  <match src="call_argument [8341,8369]" dest="call_argument [8341,8369]"/>
  <match src="identifier: epochs [91437,91443]" dest="identifier: epochs [29864,29870]"/>
  <match src="return_statement [48354,48399]" dest="return_statement [16935,16980]"/>
  <match src="user_defined_type [69223,69235]" dest="user_defined_type [67992,68004]"/>
  <match src="identifier: accounts [105118,105126]" dest="identifier: accounts [41123,41131]"/>
  <match src="state_mutability [95199,95203]" dest="state_mutability [31204,31208]"/>
  <match src="member_expression [105676,105715]" dest="member_expression [41681,41720]"/>
  <match src="uint256: uint256 [2024,2031]" dest="uint256: uint256 [2024,2031]"/>
  <match src="address: address [20772,20779]" dest="address: address [64409,64416]"/>
  <match src="number_literal: 2 [38168,38169]" dest="number_literal: 2 [54646,54647]"/>
  <match src="user_defined_type [7385,7389]" dest="user_defined_type [7385,7389]"/>
  <match src="identifier: self [10680,10684]" dest="identifier: self [10680,10684]"/>
  <match src="identifier: msg [85186,85189]" dest="identifier: msg [72513,72516]"/>
  <match src="identifier: sender [53472,53478]" dest="identifier: sender [64856,64862]"/>
  <match src="primitive_type [56738,56745]" dest="primitive_type [22830,22837]"/>
  <match src="function: function [94970,94978]" dest="function: function [30975,30983]"/>
  <match src="call_argument [67373,67392]" dest="call_argument [81802,81816]"/>
  <match src="user_defined_type [7787,7791]" dest="user_defined_type [7787,7791]"/>
  <match src="comment: /**      * Getters      */ [45605,45633]" dest="comment: /**      * Getters      */ [14186,14214]"/>
  <match src="identifier: EpochStrategy [98289,98302]" dest="identifier: EpochStrategy [34294,34307]"/>
  <match src="user_defined_type [92437,92442]" dest="user_defined_type [75790,75795]"/>
  <match src="call_argument [10221,10222]" dest="call_argument [10221,10222]"/>
  <match src="returns: returns [13661,13668]" dest="returns: returns [24188,24195]"/>
  <match src="(: ( [2623,2624]" dest="(: ( [2623,2624]"/>
  <match src="primitive_type [55897,55901]" dest="primitive_type [21989,21993]"/>
  <match src="identifier: target [11000,11006]" dest="identifier: target [11000,11006]"/>
  <match src="call_expression [1490,1533]" dest="call_expression [1490,1533]"/>
  <match src="}: } [95744,95745]" dest="}: } [31749,31750]"/>
  <match src="view: view [95987,95991]" dest="view: view [31992,31996]"/>
  <match src="primitive_type [6985,6992]" dest="primitive_type [6985,6992]"/>
  <match src="string [35741,35744]" dest="string [52219,52222]"/>
  <match src="{: { [10718,10719]" dest="{: { [10718,10719]"/>
  <match src="(: ( [97937,97938]" dest="(: ( [33942,33943]"/>
  <match src="return_type_definition [6756,6777]" dest="return_type_definition [6756,6777]"/>
  <match src="identifier: getOracleReserveMinimum [45744,45767]" dest="identifier: getOracleReserveMinimum [14325,14348]"/>
  <match src="(: ( [81228,81229]" dest="(: ( [60066,60067]"/>
  <match src="memory: memory [46976,46982]" dest="memory: memory [15557,15563]"/>
  <match src="identifier: stringify [30958,30967]" dest="identifier: stringify [47436,47445]"/>
  <match src="primitive_type [86967,86974]" dest="primitive_type [59595,59602]"/>
  <match src="binary_expression [38392,38402]" dest="binary_expression [54870,54880]"/>
  <match src="identifier: D256 [10437,10441]" dest="identifier: D256 [10437,10441]"/>
  <match src="parameter [55434,55447]" dest="parameter [21526,21539]"/>
  <match src="(: ( [11025,11026]" dest="(: ( [11025,11026]"/>
  <match src="}: } [97305,97306]" dest="}: } [33310,33311]"/>
  <match src="primitive_type [20683,20690]" dest="primitive_type [64305,64312]"/>
  <match src="primitive_type [97953,97960]" dest="primitive_type [33958,33965]"/>
  <match src="function_definition [34593,35578]" dest="function_definition [51071,52056]"/>
  <match src="false [102067,102072]" dest="false [38072,38077]"/>
  <match src="}: } [10235,10236]" dest="}: } [10235,10236]"/>
  <match src="]: ] [107596,107597]" dest="]: ] [43601,43602]"/>
  <match src="): ) [47671,47672]" dest="): ) [16252,16253]"/>
  <match src="parameter [6985,6994]" dest="parameter [6985,6994]"/>
  <match src="parameter [7385,7401]" dest="parameter [7385,7401]"/>
  <match src="): ) [105559,105560]" dest="): ) [41564,41565]"/>
  <match src="user_defined_type [98445,98468]" dest="user_defined_type [34450,34473]"/>
  <match src="(: ( [47122,47123]" dest="(: ( [15703,15704]"/>
  <match src="visibility [55165,55173]" dest="visibility [21257,21265]"/>
  <match src="function_definition [94970,95068]" dest="function_definition [30975,31073]"/>
  <match src="view: view [97676,97680]" dest="view: view [33681,33685]"/>
  <match src="): ) [96445,96446]" dest="): ) [32450,32451]"/>
  <match src="identifier: account [53171,53178]" dest="identifier: account [56253,56260]"/>
  <match src="return_statement [46425,46475]" dest="return_statement [15006,15056]"/>
  <match src="(: ( [70438,70439]" dest="(: ( [80548,80549]"/>
  <match src="returns: returns [95304,95311]" dest="returns: returns [31309,31316]"/>
  <match src="type_name [14762,14769]" dest="type_name [25289,25296]"/>
  <match src="pure: pure [48036,48040]" dest="pure: pure [16617,16621]"/>
  <match src="pragma_directive [80,113]" dest="pragma_directive [80,113]"/>
  <match src="assignment_expression [36915,36954]" dest="assignment_expression [53393,53432]"/>
  <match src=".: . [96034,96035]" dest=".: . [32039,32040]"/>
  <match src="type_name [3318,3325]" dest="type_name [3318,3325]"/>
  <match src="(: ( [81153,81154]" dest="(: ( [83323,83324]"/>
  <match src="&quot;: &quot; [35743,35744]" dest="&quot;: &quot; [52221,52222]"/>
  <match src="call_argument [23017,23038]" dest="call_argument [64071,64092]"/>
  <match src="call_argument [100555,100575]" dest="call_argument [36560,36580]"/>
  <match src="variable_declaration_statement [2679,2697]" dest="variable_declaration_statement [2679,2697]"/>
  <match src="call_argument [1071,1100]" dest="call_argument [1071,1100]"/>
  <match src="): ) [46473,46474]" dest="): ) [15054,15055]"/>
  <match src="number_literal: 1 [11236,11237]" dest="number_literal: 1 [11236,11237]"/>
  <match src=",: , [105638,105639]" dest=",: , [41643,41644]"/>
  <match src="(: ( [37872,37873]" dest="(: ( [54350,54351]"/>
  <match src="uint256: uint256 [80864,80871]" dest="uint256: uint256 [66703,66710]"/>
  <match src="primitive_type [10709,10716]" dest="primitive_type [10709,10716]"/>
  <match src="event_definition [83134,83224]" dest="event_definition [78457,78522]"/>
  <match src="primitive_type [6629,6636]" dest="primitive_type [6629,6636]"/>
  <match src="identifier: b [7532,7533]" dest="identifier: b [7532,7533]"/>
  <match src="primitive_type [98508,98515]" dest="primitive_type [34513,34520]"/>
  <match src="type_name [107892,107899]" dest="type_name [43897,43904]"/>
  <match src="yul_assignment [101015,101034]" dest="yul_assignment [37020,37039]"/>
  <match src="identifier: balanceCheck [85552,85564]" dest="identifier: balanceCheck [58713,58725]"/>
  <match src="call_argument [46614,46656]" dest="call_argument [15195,15237]"/>
  <match src=",: , [85334,85335]" dest=",: , [63419,63420]"/>
  <match src="-: - [37408,37409]" dest="-: - [53886,53887]"/>
  <match src="function_body [79654,79759]" dest="function_body [61602,61993]"/>
  <match src="parameter [13670,13677]" dest="parameter [24197,24204]"/>
  <match src="string: string [32628,32634]" dest="string: string [49106,49112]"/>
  <match src="call_argument [8174,8175]" dest="call_argument [8174,8175]"/>
  <match src="string [83678,83713]" dest="string [71696,71734]"/>
  <match src="address: address [54909,54916]" dest="address: address [21001,21008]"/>
  <match src="returns: returns [36609,36616]" dest="returns: returns [53087,53094]"/>
  <match src="primitive_type [107133,107140]" dest="primitive_type [43138,43145]"/>
  <match src="call_argument [32003,32007]" dest="call_argument [48481,48485]"/>
  <match src="user_defined_type [91473,91488]" dest="user_defined_type [29900,29915]"/>
  <match src="/: / [2717,2718]" dest="/: / [2717,2718]"/>
  <match src="identifier: MINIMUM_LIQUIDITY [56019,56036]" dest="identifier: MINIMUM_LIQUIDITY [22111,22128]"/>
  <match src="call_argument [34257,34265]" dest="call_argument [50735,50743]"/>
  <match src="identifier: input [35623,35628]" dest="identifier: input [52101,52106]"/>
  <match src="): ) [84254,84255]" dest="): ) [66691,66692]"/>
  <match src="pure: pure [46379,46383]" dest="pure: pure [14960,14964]"/>
  <match src="type_name [100502,100509]" dest="type_name [36507,36514]"/>
  <match src="type_name [54534,54541]" dest="type_name [20626,20633]"/>
  <match src="user_defined_type [69583,69595]" dest="user_defined_type [68025,68037]"/>
  <match src=".: . [104749,104750]" dest=".: . [40754,40755]"/>
  <match src="visibility [88654,88662]" dest="visibility [74321,74329]"/>
  <match src="call_expression [86420,86466]" dest="call_expression [63331,63372]"/>
  <match src="contract_body [6433,11302]" dest="contract_body [6433,11302]"/>
  <match src="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [71378,72036]" dest="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [55361,56019]"/>
  <match src="return: return [7249,7255]" dest="return: return [7249,7255]"/>
  <match src="): ) [53427,53428]" dest="): ) [64812,64813]"/>
  <match src="identifier: i [37079,37080]" dest="identifier: i [53557,53558]"/>
  <match src="memory: memory [98469,98475]" dest="memory: memory [34474,34480]"/>
  <match src="variable_declaration [84855,84878]" dest="variable_declaration [62066,62089]"/>
  <match src="primitive_type [55846,55850]" dest="primitive_type [21938,21942]"/>
  <match src="]: ] [104867,104868]" dest="]: ] [40872,40873]"/>
  <match src="(: ( [84720,84721]" dest="(: ( [73243,73244]"/>
  <match src="identifier: Decimal [48168,48175]" dest="identifier: Decimal [16749,16756]"/>
  <match src="visibility [29942,29950]" dest="visibility [46420,46428]"/>
  <match src="comment: // each byte takes two characters [37114,37147]" dest="comment: // each byte takes two characters [53592,53625]"/>
  <match src="identifier: to [101901,101903]" dest="identifier: to [37906,37908]"/>
  <match src="primitive_type [45224,45231]" dest="primitive_type [13805,13812]"/>
  <match src="return_type_definition [55329,55346]" dest="return_type_definition [21421,21438]"/>
  <match src="identifier: _state [103331,103337]" dest="identifier: _state [39336,39342]"/>
  <match src="using_directive [94765,94796]" dest="using_directive [30770,30801]"/>
  <match src="assembly: assembly [35353,35361]" dest="assembly: assembly [51831,51839]"/>
  <match src="string: string [54755,54761]" dest="string: string [20847,20853]"/>
  <match src="(: ( [7575,7576]" dest="(: ( [7575,7576]"/>
  <match src="return_type_definition [96206,96223]" dest="return_type_definition [32211,32228]"/>
  <match src="string_literal [22959,22997]" dest="string_literal [63799,63836]"/>
  <match src="event_paramater [54634,54644]" dest="event_paramater [20726,20736]"/>
  <match src="}: } [106159,106160]" dest="}: } [42164,42165]"/>
  <match src="indexed: indexed [27158,27165]" dest="indexed: indexed [61310,61317]"/>
  <match src="returns: returns [102147,102154]" dest="returns: returns [38152,38159]"/>
  <match src="parameter [31722,31734]" dest="parameter [48200,48212]"/>
  <match src="(: ( [33320,33321]" dest="(: ( [49798,49799]"/>
  <match src="(: ( [31282,31283]" dest="(: ( [47760,47761]"/>
  <match src="state_mutability [46379,46383]" dest="state_mutability [14960,14964]"/>
  <match src="type_name [92952,92959]" dest="type_name [76305,76312]"/>
  <match src="): ) [53119,53120]" dest="): ) [56217,56218]"/>
  <match src="identifier: mul [7092,7095]" dest="identifier: mul [7092,7095]"/>
  <match src="(: ( [86404,86405]" dest="(: ( [73003,73004]"/>
  <match src="identifier: current [98194,98201]" dest="identifier: current [34199,34206]"/>
  <match src="type_name [84855,84862]" dest="type_name [62066,62073]"/>
  <match src="call_argument [80764,80772]" dest="call_argument [58950,58972]"/>
  <match src="): ) [93437,93438]" dest="): ) [76790,76791]"/>
  <match src="identifier: reason [33820,33826]" dest="identifier: reason [50298,50304]"/>
  <match src=".: . [98647,98648]" dest=".: . [34652,34653]"/>
  <match src="bytes: bytes [56750,56755]" dest="bytes: bytes [22842,22847]"/>
  <match src="return: return [9101,9107]" dest="return: return [9101,9107]"/>
  <match src="identifier: approve [100284,100291]" dest="identifier: approve [36289,36296]"/>
  <match src="}: } [95848,95849]" dest="}: } [31853,31854]"/>
  <match src="public: public [99933,99939]" dest="public: public [35938,35944]"/>
  <match src="identifier: blockTimestamp [69315,69329]" dest="identifier: newBonded [67107,67116]"/>
  <match src="parameter [33837,33853]" dest="parameter [50315,50331]"/>
  <match src="(: ( [45792,45793]" dest="(: ( [14373,14374]"/>
  <match src="internal: internal [104131,104139]" dest="internal: internal [40136,40144]"/>
  <match src="identifier: D256 [8585,8589]" dest="identifier: D256 [8585,8589]"/>
  <match src="visibility [9695,9703]" dest="visibility [9695,9703]"/>
  <match src="uint256: uint256 [96109,96116]" dest="uint256: uint256 [32114,32121]"/>
  <match src="identifier: balance [103569,103576]" dest="identifier: balance [39574,39581]"/>
  <match src="}: } [98662,98663]" dest="}: } [34667,34668]"/>
  <match src="identifier: totalDebt [96598,96607]" dest="identifier: totalDebt [32603,32612]"/>
  <match src="string_literal [109996,110017]" dest="string_literal [69772,69793]"/>
  <match src="member_expression [109704,109716]" dest="member_expression [69480,69492]"/>
  <match src="parameter [107492,107509]" dest="parameter [43497,43514]"/>
  <match src="=: = [2034,2035]" dest="=: = [2034,2035]"/>
  <match src="identifier: spender [23158,23165]" dest="identifier: spender [64248,64255]"/>
  <match src="parameter [3273,3282]" dest="parameter [3273,3282]"/>
  <match src="identifier: _state [104701,104707]" dest="identifier: _state [40706,40712]"/>
  <match src="identifier: sender [85711,85717]" dest="identifier: sender [71856,71862]"/>
  <match src="return_type_definition [95106,95129]" dest="return_type_definition [31111,31134]"/>
  <match src="[: [ [100410,100411]" dest="[: [ [36415,36416]"/>
  <match src="primitive_type [30028,30034]" dest="primitive_type [46506,46512]"/>
  <match src="function_body [100237,100299]" dest="function_body [36242,36304]"/>
  <match src="): ) [76216,76217]" dest="): ) [81365,81366]"/>
  <match src="address: address [95530,95537]" dest="address: address [31535,31542]"/>
  <match src="type_name [100946,100953]" dest="type_name [36951,36958]"/>
  <match src="function_body [46984,47050]" dest="function_body [15565,15631]"/>
  <match src="mapping: mapping [91454,91461]" dest="mapping: mapping [29881,29888]"/>
  <match src="identifier: that [33754,33758]" dest="identifier: that [50232,50236]"/>
  <match src="function_body [107958,108070]" dest="function_body [43963,44075]"/>
  <match src="state_mutability [46138,46142]" dest="state_mutability [14719,14723]"/>
  <match src="state_mutability [7448,7452]" dest="state_mutability [7448,7452]"/>
  <match src="parameter [8436,8445]" dest="parameter [8436,8445]"/>
  <match src="identifier: reserve [70312,70319]" dest="identifier: couponPremium [62711,62724]"/>
  <match src="visibility [9271,9279]" dest="visibility [9271,9279]"/>
  <match src="user_defined_type [91537,91550]" dest="user_defined_type [29964,29977]"/>
  <match src=".: . [83855,83856]" dest=".: . [72892,72893]"/>
  <match src="function_definition [46673,46779]" dest="function_definition [15254,15360]"/>
  <match src="primitive_type [44201,44208]" dest="primitive_type [12782,12789]"/>
  <match src="primitive_type [17654,17661]" dest="primitive_type [58889,58896]"/>
  <match src="view: view [98860,98864]" dest="view: view [34865,34869]"/>
  <match src="memory: memory [68623,68629]" dest="memory: memory [20154,20160]"/>
  <match src="}: } [102967,102968]" dest="}: } [38972,38973]"/>
  <match src="private: private [69206,69213]" dest="private: private [67975,67982]"/>
  <match src="(: ( [56412,56413]" dest="(: ( [22504,22505]"/>
  <match src="array_access [97856,97880]" dest="array_access [33861,33885]"/>
  <match src="type_name [9513,9517]" dest="type_name [9513,9517]"/>
  <match src=",: , [103367,103368]" dest=",: , [39372,39373]"/>
  <match src="interface_declaration [12697,15332]" dest="interface_declaration [23224,25859]"/>
  <match src="parameter [107511,107525]" dest="parameter [43516,43530]"/>
  <match src="identifier: Burn [55684,55688]" dest="identifier: Burn [21776,21780]"/>
  <match src="identifier: value [9347,9352]" dest="identifier: value [9347,9352]"/>
  <match src="(: ( [7466,7467]" dest="(: ( [7466,7467]"/>
  <match src="call_struct_argument [7510,7544]" dest="call_struct_argument [7510,7544]"/>
  <match src="comment: /**      * ERC20 Interface      */ [101928,101964]" dest="comment: /**      * ERC20 Interface      */ [37933,37969]"/>
  <match src="parameter [13306,13310]" dest="parameter [23833,23837]"/>
  <match src="(: ( [31893,31894]" dest="(: ( [48371,48372]"/>
  <match src=",: , [20716,20717]" dest=",: , [64338,64339]"/>
  <match src="identifier: mul [8170,8173]" dest="identifier: mul [8170,8173]"/>
  <match src="): ) [56000,56001]" dest="): ) [22092,22093]"/>
  <match src="return_type_definition [100493,100510]" dest="return_type_definition [36498,36515]"/>
  <match src="identifier: rejectFor [100316,100325]" dest="identifier: rejectFor [36321,36330]"/>
  <match src="primitive_type [80702,80709]" dest="primitive_type [57650,57657]"/>
  <match src="contract_body [16615,23603]" dest="contract_body [60932,65011]"/>
  <match src="identifier: add [85611,85614]" dest="identifier: add [72783,72786]"/>
  <match src="identifier: reserve1 [55992,56000]" dest="identifier: reserve1 [22084,22092]"/>
  <match src="identifier: totalRewardedWithPhantom [86350,86374]" dest="identifier: value [72963,72968]"/>
  <match src="[: [ [105126,105127]" dest="[: [ [41131,41132]"/>
  <match src=".: . [103027,103028]" dest=".: . [39032,39033]"/>
  <match src="primitive_type [55570,55577]" dest="primitive_type [21662,21669]"/>
  <match src="uint256: uint256 [14797,14804]" dest="uint256: uint256 [25324,25331]"/>
  <match src="member_expression [105475,105510]" dest="member_expression [41480,41515]"/>
  <match src="primitive_type [84266,84273]" dest="primitive_type [63218,63225]"/>
  <match src="uint256: uint256 [69497,69504]" dest="uint256: uint256 [72945,72952]"/>
  <match src="assignment_expression [105337,105404]" dest="assignment_expression [41342,41409]"/>
  <match src="comment: // 66% [44730,44736]" dest="comment: // 66% [13311,13317]"/>
  <match src="type_name [47819,47826]" dest="type_name [16400,16407]"/>
  <match src="state_mutability [100780,100784]" dest="state_mutability [36785,36789]"/>
  <match src="number_literal: 42 [36811,36813]" dest="number_literal: 42 [53289,53291]"/>
  <match src="): ) [9144,9145]" dest="): ) [9144,9145]"/>
  <match src="identifier: account [52101,52108]" dest="identifier: account [26736,26743]"/>
  <match src="]: ] [107025,107026]" dest="]: ] [43030,43031]"/>
  <match src="new_expression [35558,35567]" dest="new_expression [52036,52045]"/>
  <match src="identifier: Constants [84344,84353]" dest="identifier: Constants [71970,71979]"/>
  <match src="{: { [6806,6807]" dest="{: { [6806,6807]"/>
  <match src="public: public [100481,100487]" dest="public: public [36486,36492]"/>
  <match src="identifier: errorMessage [5422,5434]" dest="identifier: errorMessage [5422,5434]"/>
  <match src="assignment_expression [102599,102664]" dest="assignment_expression [38604,38669]"/>
  <match src="primitive_type [29556,29562]" dest="primitive_type [46034,46040]"/>
  <match src="): ) [4122,4123]" dest="): ) [4122,4123]"/>
  <match src="identifier: to [56568,56570]" dest="identifier: to [22660,22662]"/>
  <match src=".: . [74591,74592]" dest=".: . [59370,59371]"/>
  <match src="identifier: _state [97856,97862]" dest="identifier: _state [33861,33867]"/>
  <match src="function_body [9090,9156]" dest="function_body [9090,9156]"/>
  <match src="=: = [104261,104262]" dest="=: = [40266,40267]"/>
  <match src="(: ( [84377,84378]" dest="(: ( [72003,72004]"/>
  <match src="}: } [98801,98802]" dest="}: } [34806,34807]"/>
  <match src=".: . [8925,8926]" dest=".: . [8925,8926]"/>
  <match src="return_statement [7929,7989]" dest="return_statement [7929,7989]"/>
  <match src="identifier: _state [107801,107807]" dest="identifier: _state [43806,43812]"/>
  <match src="enum_value: Fluid [90027,90032]" dest="enum_value: Fluid [28454,28459]"/>
  <match src="uint256: uint256 [96438,96445]" dest="uint256: uint256 [32443,32450]"/>
  <match src="[: [ [104818,104819]" dest="[: [ [40823,40824]"/>
  <match src="): ) [97384,97385]" dest="): ) [33389,33390]"/>
  <match src="&quot;: &quot; [66524,66525]" dest="&quot;: &quot; [61006,61007]"/>
  <match src="{: { [16615,16616]" dest="{: { [60932,60933]"/>
  <match src="call_argument [85397,85402]" dest="call_argument [80074,80083]"/>
  <match src="returns: returns [96535,96542]" dest="returns: returns [32540,32547]"/>
  <match src="(: ( [10552,10553]" dest="(: ( [10552,10553]"/>
  <match src="=: = [37081,37082]" dest="=: = [53559,53560]"/>
  <match src="event: event [54496,54501]" dest="event: event [20588,20593]"/>
  <match src="identifier: sub [1490,1493]" dest="identifier: sub [1490,1493]"/>
  <match src="[: [ [105236,105237]" dest="[: [ [41241,41242]"/>
  <match src="): ) [51168,51169]" dest="): ) [56643,56644]"/>
  <match src=":: : [9120,9121]" dest=":: : [9120,9121]"/>
  <match src="identifier: add [86298,86301]" dest="identifier: sub [80402,80405]"/>
  <match src="(: ( [105518,105519]" dest="(: ( [41523,41524]"/>
  <match src="identifier: epochTimeWithStrategy [98423,98444]" dest="identifier: epochTimeWithStrategy [34428,34449]"/>
  <match src="primitive_type [55517,55524]" dest="primitive_type [21609,21616]"/>
  <match src="return: return [95231,95237]" dest="return: return [31236,31242]"/>
  <match src="member_expression [97856,97871]" dest="member_expression [33861,33876]"/>
  <match src="type_name [973,980]" dest="type_name [973,980]"/>
  <match src="return: return [8735,8741]" dest="return: return [8735,8741]"/>
  <match src="using: using [16622,16627]" dest="using: using [60939,60944]"/>
  <match src="type_name [84787,84794]" dest="type_name [72847,72854]"/>
  <match src="identifier: self [8706,8710]" dest="identifier: self [8706,8710]"/>
  <match src="primitive_type [80653,80660]" dest="primitive_type [62897,62904]"/>
  <match src="function_body [83306,83504]" dest="function_body [71341,71513]"/>
  <match src="public: public [98238,98244]" dest="public: public [34243,34249]"/>
  <match src="primitive_type [53792,53799]" dest="primitive_type [61399,61406]"/>
  <match src="call_argument [30279,30287]" dest="call_argument [46757,46765]"/>
  <match src="(: ( [86974,86975]" dest="(: ( [59602,59603]"/>
  <match src="identifier: candidate [100565,100574]" dest="identifier: candidate [36570,36579]"/>
  <match src="event_definition [55609,55672]" dest="event_definition [21701,21764]"/>
  <match src=".: . [106441,106442]" dest=".: . [42446,42447]"/>
  <match src="call_argument [45963,46077]" dest="call_argument [14544,14658]"/>
  <match src="identifier: i [99305,99306]" dest="identifier: i [35310,35311]"/>
  <match src="string [51035,51049]" dest="string [56843,56887]"/>
  <match src="call_argument [20868,20905]" dest="call_argument [64513,64558]"/>
  <match src="=: = [29026,29027]" dest="=: = [45504,45505]"/>
  <match src="pure: pure [3304,3308]" dest="pure: pure [3304,3308]"/>
  <match src="comment: // 6% [45348,45353]" dest="comment: // 6% [13929,13934]"/>
  <match src="identifier: bstr [36511,36515]" dest="identifier: bstr [52989,52993]"/>
  <match src="member_expression [102766,102789]" dest="member_expression [38771,38794]"/>
  <match src="parameter [95688,95695]" dest="parameter [31693,31700]"/>
  <match src="function_definition [46787,46901]" dest="function_definition [15368,15482]"/>
  <match src="contract_declaration [89963,90299]" dest="contract_declaration [28390,28726]"/>
  <match src="): ) [96302,96303]" dest="): ) [32307,32308]"/>
  <match src="primitive_type [45501,45508]" dest="primitive_type [14082,14089]"/>
  <match src="address: address [108097,108104]" dest="address: address [44102,44109]"/>
  <match src="event_definition [54496,54571]" dest="event_definition [20588,20663]"/>
  <match src="parameter [104633,104648]" dest="parameter [40638,40653]"/>
  <match src="(: ( [30034,30035]" dest="(: ( [46512,46513]"/>
  <match src="++: ++ [35897,35899]" dest="++: ++ [52375,52377]"/>
  <match src="comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [13014,13229]" dest="comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [23541,23756]"/>
  <match src="view: view [12827,12831]" dest="view: view [23354,23358]"/>
  <match src="parameter [8054,8063]" dest="parameter [8054,8063]"/>
  <match src="uint256: uint256 [98508,98515]" dest="uint256: uint256 [34513,34520]"/>
  <match src="primitive_type [6459,6466]" dest="primitive_type [6459,6466]"/>
  <match src="visibility [56898,56906]" dest="visibility [22990,22998]"/>
  <match src="identifier: self [8998,9002]" dest="identifier: self [8998,9002]"/>
  <match src="assignment_expression [38243,38287]" dest="assignment_expression [54721,54765]"/>
  <match src="primitive_type [2024,2031]" dest="primitive_type [2024,2031]"/>
  <match src="event_paramater [101885,101903]" dest="event_paramater [37890,37908]"/>
  <match src="visibility [56390,56398]" dest="visibility [22482,22490]"/>
  <match src="identifier: amount [102849,102855]" dest="identifier: amount [38854,38860]"/>
  <match src="if_statement [11190,11249]" dest="if_statement [11190,11249]"/>
  <match src="parameter [53105,53119]" dest="parameter [56203,56217]"/>
  <match src="primitive_type [12957,12964]" dest="primitive_type [23484,23491]"/>
  <match src="identifier: b [3352,3353]" dest="identifier: b [3352,3353]"/>
  <match src=",: , [103984,103985]" dest=",: , [39989,39990]"/>
  <match src="): ) [37889,37890]" dest="): ) [54367,54368]"/>
  <match src="yul_identifier [89181,89185]" dest="yul_identifier [74848,74852]"/>
  <match src="(: ( [105310,105311]" dest="(: ( [41315,41316]"/>
  <match src="identifier: Status [109483,109489]" dest="identifier: Status [69259,69265]"/>
  <match src="type_name [55727,55731]" dest="type_name [21819,21823]"/>
  <match src="identifier: account [104759,104766]" dest="identifier: account [40764,40771]"/>
  <match src="type_name [36618,36623]" dest="type_name [53096,53101]"/>
  <match src="type_name [48168,48180]" dest="type_name [16749,16761]"/>
  <match src="if: if [97397,97399]" dest="if: if [33402,33404]"/>
  <match src="identifier: Account [91371,91378]" dest="identifier: Account [29798,29805]"/>
  <match src="parameter [11083,11096]" dest="parameter [11083,11096]"/>
  <match src="public: public [100069,100075]" dest="public: public [36074,36080]"/>
  <match src="identifier: value [47176,47181]" dest="identifier: value [15757,15762]"/>
  <match src="identifier: Require [51073,51080]" dest="identifier: Require [71078,71085]"/>
  <match src="parameter [33891,33907]" dest="parameter [50369,50385]"/>
  <match src="return_statement [3338,3385]" dest="return_statement [3338,3385]"/>
  <match src="identifier: a [7281,7282]" dest="identifier: a [7281,7282]"/>
  <match src="type_cast_expression [36881,36904]" dest="type_cast_expression [53359,53382]"/>
  <match src="(: ( [97043,97044]" dest="(: ( [33048,33049]"/>
  <match src="identifier: bonded [99519,99525]" dest="identifier: bonded [35524,35530]"/>
  <match src=",: , [101903,101904]" dest=",: , [37908,37909]"/>
  <match src="primitive_type [72236,72243]" dest="primitive_type [65888,65895]"/>
  <match src=",: , [103259,103260]" dest=",: , [39264,39265]"/>
  <match src="}: } [109583,109584]" dest="}: } [69359,69360]"/>
  <match src="pure: pure [48455,48459]" dest="pure: pure [17036,17040]"/>
  <match src="array_access [107210,107253]" dest="array_access [43215,43258]"/>
  <match src="bytes32: bytes32 [94804,94811]" dest="bytes32: bytes32 [30809,30816]"/>
  <match src="call_expression [7076,7104]" dest="call_expression [7076,7104]"/>
  <match src="pure: pure [45895,45899]" dest="pure: pure [14476,14480]"/>
  <match src="member_expression [11000,11010]" dest="member_expression [11000,11010]"/>
  <match src="identifier: amount [104123,104129]" dest="identifier: amount [40128,40134]"/>
  <match src="primitive_type [97151,97158]" dest="primitive_type [33156,33163]"/>
  <match src="variable_declaration [75731,75767]" dest="variable_declaration [67588,67611]"/>
  <match src="contract_body [43449,48882]" dest="contract_body [12030,17463]"/>
  <match src="identifier: value [9771,9776]" dest="identifier: value [9771,9776]"/>
  <match src="string: string [93424,93430]" dest="string: string [76777,76783]"/>
  <match src="identifier: D256 [7704,7708]" dest="identifier: D256 [7704,7708]"/>
  <match src="member_expression [106754,106780]" dest="member_expression [42759,42785]"/>
  <match src="identifier: add [105521,105524]" dest="identifier: add [41526,41529]"/>
  <match src="identifier: D256 [8907,8911]" dest="identifier: D256 [8907,8911]"/>
  <match src="returns: returns [45784,45791]" dest="returns: returns [14365,14372]"/>
  <match src="(: ( [7667,7668]" dest="(: ( [7667,7668]"/>
  <match src="function_body [99172,99242]" dest="function_body [35177,35247]"/>
  <match src="): ) [56037,56038]" dest="): ) [22129,22130]"/>
  <match src="(: ( [7899,7900]" dest="(: ( [7899,7900]"/>
  <match src="state_variable_declaration [29190,29222]" dest="state_variable_declaration [45668,45700]"/>
  <match src="function: function [96173,96181]" dest="function: function [32178,32186]"/>
  <match src="(: ( [86954,86955]" dest="(: ( [59587,59588]"/>
  <match src="identifier: reason [105319,105325]" dest="identifier: reason [41324,41330]"/>
  <match src="): ) [48699,48700]" dest="): ) [17280,17281]"/>
  <match src="type_name [82801,82808]" dest="type_name [70737,70744]"/>
  <match src="returns: returns [97142,97149]" dest="returns: returns [33147,33154]"/>
  <match src="constant: constant [6529,6537]" dest="constant: constant [6529,6537]"/>
  <match src="(: ( [111566,111567]" dest="(: ( [56997,56998]"/>
  <match src="type_name [105784,105791]" dest="type_name [41789,41796]"/>
  <match src="internal: internal [88654,88662]" dest="internal: internal [74321,74329]"/>
  <match src="(: ( [31474,31475]" dest="(: ( [47952,47953]"/>
  <match src="if_statement [32577,33146]" dest="if_statement [49055,49624]"/>
  <match src="): ) [34101,34102]" dest="): ) [50579,50580]"/>
  <match src="identifier: totalRewardedWithPhantom [86235,86259]" dest="identifier: totalRedeemable [62269,62284]"/>
  <match src="{: { [8912,8913]" dest="{: { [8912,8913]"/>
  <match src="type_name [102402,102409]" dest="type_name [38407,38414]"/>
  <match src="=: = [93873,93874]" dest="=: = [77226,77227]"/>
  <match src="(: ( [105388,105389]" dest="(: ( [41393,41394]"/>
  <match src="): ) [70320,70321]" dest="): ) [62739,62740]"/>
  <match src="identifier: reason [31169,31175]" dest="identifier: reason [47647,47653]"/>
  <match src="(: ( [10273,10274]" dest="(: ( [10273,10274]"/>
  <match src="identifier: FILE [86082,86086]" dest="identifier: FILE [80482,80486]"/>
  <match src="call_argument [7538,7542]" dest="call_argument [7538,7542]"/>
  <match src="member_expression [105513,105524]" dest="member_expression [41518,41529]"/>
  <match src="call_argument [83671,83676]" dest="call_argument [71689,71694]"/>
  <match src="event: event [54577,54582]" dest="event: event [20669,20674]"/>
  <match src="identifier: account [104106,104113]" dest="identifier: account [40111,40118]"/>
  <match src="{: { [99963,99964]" dest="{: { [35968,35969]"/>
  <match src="member_expression [102921,102935]" dest="member_expression [38926,38940]"/>
  <match src="=: = [105725,105726]" dest="=: = [41730,41731]"/>
  <match src="identifier: D256 [8409,8413]" dest="identifier: D256 [8409,8413]"/>
  <match src="call_argument [21709,21715]" dest="call_argument [64257,64263]"/>
  <match src="binary_expression [9930,9951]" dest="binary_expression [9930,9951]"/>
  <match src="identifier: b [11205,11206]" dest="identifier: b [11205,11206]"/>
  <match src="type_name [99020,99027]" dest="type_name [35025,35032]"/>
  <match src="member_expression [100818,100835]" dest="member_expression [36823,36840]"/>
  <match src="[: [ [105889,105890]" dest="[: [ [41894,41895]"/>
  <match src="identifier: reason [29730,29736]" dest="identifier: reason [46208,46214]"/>
  <match src="}: } [7755,7756]" dest="}: } [7755,7756]"/>
  <match src="}: } [35577,35578]" dest="}: } [52055,52056]"/>
  <match src="function_definition [95649,95745]" dest="function_definition [31654,31750]"/>
  <match src="identifier: owner [54917,54922]" dest="identifier: owner [21009,21014]"/>
  <match src="identifier: amount [102130,102136]" dest="identifier: amount [38135,38141]"/>
  <match src="function_definition [54714,54770]" dest="function_definition [20806,20862]"/>
  <match src="unary_expression [32581,32586]" dest="unary_expression [49059,49064]"/>
  <match src="call_argument [77591,77597]" dest="call_argument [56835,56841]"/>
  <match src="): ) [91384,91385]" dest="): ) [29811,29812]"/>
  <match src="bytes32: bytes32 [29420,29427]" dest="bytes32: bytes32 [45898,45905]"/>
  <match src="member_expression [83852,83862]" dest="member_expression [72889,72899]"/>
  <match src="expression_statement [37256,37301]" dest="expression_statement [53734,53779]"/>
  <match src="return_statement [10492,10522]" dest="return_statement [10492,10522]"/>
  <match src="(: ( [46819,46820]" dest="(: ( [15400,15401]"/>
  <match src="type_name [9304,9308]" dest="type_name [9304,9308]"/>
  <match src="visibility [95547,95555]" dest="visibility [31552,31560]"/>
  <match src="!=: != [35870,35872]" dest="!=: != [52348,52350]"/>
  <match src="): ) [83543,83544]" dest="): ) [71552,71553]"/>
  <match src="string: string [33368,33374]" dest="string: string [49846,49852]"/>
  <match src="type_name [8491,8495]" dest="type_name [8491,8495]"/>
  <match src=",: , [93422,93423]" dest=",: , [76775,76776]"/>
  <match src="identifier: incrementBalanceOfStaged [85242,85266]" dest="identifier: incrementBalanceOfStaged [73017,73041]"/>
  <match src="returns: returns [35664,35671]" dest="returns: returns [52142,52149]"/>
  <match src="member_expression [106372,106400]" dest="member_expression [42377,42405]"/>
  <match src="): ) [81252,81253]" dest="): ) [60086,60087]"/>
  <match src="identifier: balance [102773,102780]" dest="identifier: balance [38778,38785]"/>
  <match src="primitive_type [90147,90154]" dest="primitive_type [28574,28581]"/>
  <match src="identifier: sender [85481,85487]" dest="identifier: sender [80017,80023]"/>
  <match src="call_argument [33609,33628]" dest="call_argument [50087,50106]"/>
  <match src="returns: returns [96316,96323]" dest="returns: returns [32321,32328]"/>
  <match src="function_body [10982,11046]" dest="function_body [10982,11046]"/>
  <match src="function_definition [10107,10236]" dest="function_definition [10107,10236]"/>
  <match src="identifier: _state [99356,99362]" dest="identifier: _state [35361,35367]"/>
  <match src="binary_expression [89228,89236]" dest="binary_expression [74895,74903]"/>
  <match src="call_argument [31004,31010]" dest="call_argument [47482,47488]"/>
  <match src="return: return [47323,47329]" dest="return: return [15904,15910]"/>
  <match src="identifier: COLON [29116,29121]" dest="identifier: COLON [45594,45599]"/>
  <match src="}: } [98405,98406]" dest="}: } [34410,34411]"/>
  <match src="uint256: uint256 [53417,53424]" dest="uint256: uint256 [64802,64809]"/>
  <match src="identifier: pool [91039,91043]" dest="identifier: pool [29466,29470]"/>
  <match src="): ) [86639,86640]" dest="): ) [81115,81116]"/>
  <match src="identifier: start [83084,83089]" dest="identifier: start [70888,70893]"/>
  <match src="identifier: PERMIT_TYPEHASH [55362,55377]" dest="identifier: PERMIT_TYPEHASH [21454,21469]"/>
  <match src=".: . [105294,105295]" dest=".: . [41299,41300]"/>
  <match src="user_defined_type [9427,9431]" dest="user_defined_type [9427,9431]"/>
  <match src="type_name [53840,53847]" dest="type_name [61529,61536]"/>
  <match src=",: , [55810,55811]" dest=",: , [21902,21903]"/>
  <match src="identifier: payloadB [33872,33880]" dest="identifier: payloadB [50350,50358]"/>
  <match src=".: . [105192,105193]" dest=".: . [41197,41198]"/>
  <match src="comment: // populate the string starting with the least-significant character [36027,36095]" dest="comment: // populate the string starting with the least-significant character [52505,52573]"/>
  <match src="call_argument [85603,85617]" dest="call_argument [72775,72789]"/>
  <match src="uint256: uint256 [84107,84114]" dest="uint256: uint256 [71810,71817]"/>
  <match src="&lt;: &lt; [37088,37089]" dest="&lt;: &lt; [53566,53567]"/>
  <match src="identifier: IOracle [91006,91013]" dest="identifier: IOracle [29433,29440]"/>
  <match src="identifier: temp [8597,8601]" dest="identifier: temp [8597,8601]"/>
  <match src="call_argument [84721,84731]" dest="call_argument [73244,73254]"/>
  <match src="(: ( [46726,46727]" dest="(: ( [15307,15308]"/>
  <match src="{: { [96553,96554]" dest="{: { [32558,32559]"/>
  <match src="parameter [105069,105089]" dest="parameter [41074,41094]"/>
  <match src="): ) [54853,54854]" dest="): ) [20945,20946]"/>
  <match src="returns: returns [46143,46150]" dest="returns: returns [14724,14731]"/>
  <match src="identifier: getGovernanceQuorum [46918,46937]" dest="identifier: getGovernanceQuorum [15499,15518]"/>
  <match src="comment: /**      * Account      */ [103392,103420]" dest="comment: /**      * Account      */ [39397,39425]"/>
  <match src="private: private [24515,24522]" dest="private: private [59869,59876]"/>
  <match src="private: private [45232,45239]" dest="private: private [13813,13820]"/>
  <match src="comment: /**  * @dev Extension of {ERC20} that allows token holders to destroy both their own  * tokens and those that they have an allowance for, in a way that can be  * recognized off-chain (via event analysis).  */ [23681,23893]" dest="comment: // File: contracts/external/Require.sol [44538,44577]"/>
  <match src="primitive_type [36618,36623]" dest="primitive_type [53096,53101]"/>
  <match src="string [3355,3383]" dest="string [3355,3383]"/>
  <match src="function: function [95256,95264]" dest="function: function [31261,31269]"/>
  <match src="): ) [45800,45801]" dest="): ) [14381,14382]"/>
  <match src="identifier: accounts [104462,104470]" dest="identifier: accounts [40467,40475]"/>
  <match src="): ) [29736,29737]" dest="): ) [46214,46215]"/>
  <match src="primitive_type [91212,91219]" dest="primitive_type [29639,29646]"/>
  <match src="returns: returns [64864,64871]" dest="returns: returns [27653,27660]"/>
  <match src="(: ( [107840,107841]" dest="(: ( [43845,43846]"/>
  <match src="number_literal: 5e15 [44651,44655]" dest="number_literal: 5e15 [13232,13236]"/>
  <match src="identifier: file [30119,30123]" dest="identifier: file [46597,46601]"/>
  <match src="identifier: Require [109427,109434]" dest="identifier: Require [69203,69210]"/>
  <match src="==: == [8526,8528]" dest="==: == [8526,8528]"/>
  <match src="expression_statement [70426,70526]" dest="expression_statement [80536,80686]"/>
  <match src="return_type_definition [48819,48836]" dest="return_type_definition [17400,17417]"/>
  <match src="primitive_type [105608,105615]" dest="primitive_type [41613,41620]"/>
  <match src="internal: internal [108133,108141]" dest="internal: internal [44138,44146]"/>
  <match src="function_definition [56131,56181]" dest="function_definition [22223,22273]"/>
  <match src="identifier: stringify [34403,34412]" dest="identifier: stringify [50881,50890]"/>
  <match src="function_definition [96503,96618]" dest="function_definition [32508,32623]"/>
  <match src="identifier: b [2040,2041]" dest="identifier: b [2040,2041]"/>
  <match src="}: } [37478,37479]" dest="}: } [53956,53957]"/>
  <match src="identifier: D256 [46570,46574]" dest="identifier: D256 [15151,15155]"/>
  <match src="(: ( [50158,50159]" dest="(: ( [56499,56500]"/>
  <match src="}: } [67949,67950]" dest="}: } [68301,68302]"/>
  <match src=",: , [14776,14777]" dest=",: , [25303,25304]"/>
  <match src="(: ( [91412,91413]" dest="(: ( [29839,29840]"/>
  <match src="identifier: msg [84616,84619]" dest="identifier: msg [72189,72192]"/>
  <match src=",: , [50874,50875]" dest=",: , [63143,63144]"/>
  <match src="}: } [91560,91561]" dest="}: } [29987,29988]"/>
  <match src="member_expression [70426,70438]" dest="member_expression [80536,80548]"/>
  <match src="type_name [45793,45800]" dest="type_name [14374,14381]"/>
  <match src=",: , [9227,9228]" dest=",: , [9227,9228]"/>
  <match src="identifier: c [2061,2062]" dest="identifier: c [2061,2062]"/>
  <match src="string [86101,86132]" dest="string [80501,80512]"/>
  <match src="): ) [10975,10976]" dest="): ) [10975,10976]"/>
  <match src="visibility [43481,43488]" dest="visibility [12062,12069]"/>
  <match src="[: [ [105185,105186]" dest="[: [ [41190,41191]"/>
  <match src="identifier: dollar [96571,96577]" dest="identifier: dollar [32576,32582]"/>
  <match src="string_literal [86101,86132]" dest="string_literal [80501,80512]"/>
  <match src="primitive_type [65639,65646]" dest="primitive_type [78544,78551]"/>
  <match src="identifier: price0Cumulative [69264,69280]" dest="identifier: newRedeemable [67066,67079]"/>
  <match src="member_expression [104517,104531]" dest="member_expression [40522,40536]"/>
  <match src="): ) [2386,2387]" dest="): ) [2386,2387]"/>
  <match src="visibility [45428,45435]" dest="visibility [14009,14016]"/>
  <match src="&quot;: &quot; [21547,21548]" dest="&quot;: &quot; [57535,57536]"/>
  <match src="]: ] [103888,103889]" dest="]: ] [39893,39894]"/>
  <match src="member_expression [105362,105376]" dest="member_expression [41367,41381]"/>
  <match src="identifier: payloadB [34335,34343]" dest="identifier: payloadB [50813,50821]"/>
  <match src="returns: returns [46553,46560]" dest="returns: returns [15134,15141]"/>
  <match src="identifier: account [103763,103770]" dest="identifier: account [39768,39775]"/>
  <match src="return_type_definition [9063,9084]" dest="return_type_definition [9063,9084]"/>
  <match src="identifier: pair [64843,64847]" dest="identifier: pair [27632,27636]"/>
  <match src="parameter [55243,55253]" dest="parameter [21335,21345]"/>
  <match src="event: event [83038,83043]" dest="event: event [70844,70849]"/>
  <match src="function: function [105576,105584]" dest="function: function [41581,41589]"/>
  <match src="bytes32: bytes32 [32411,32418]" dest="bytes32: bytes32 [48889,48896]"/>
  <match src="user_defined_type [46562,46574]" dest="user_defined_type [15143,15155]"/>
  <match src="(: ( [84830,84831]" dest="(: ( [72920,72921]"/>
  <match src="}: } [48878,48879]" dest="}: } [17459,17460]"/>
  <match src="contract: contract [90628,90636]" dest="contract: contract [29055,29063]"/>
  <match src="primitive_type [55534,55538]" dest="primitive_type [21626,21630]"/>
  <match src=",: , [26597,26598]" dest=",: , [79567,79568]"/>
  <match src="call_argument [83365,83370]" dest="call_argument [71401,71406]"/>
  <match src="type_name [72183,72190]" dest="type_name [65865,65872]"/>
  <match src="): ) [105852,105853]" dest="): ) [41857,41858]"/>
  <match src="view: view [56102,56106]" dest="view: view [22194,22198]"/>
  <match src="identifier: expiringCouponsAtIndex [99259,99281]" dest="identifier: expiringCouponsAtIndex [35264,35286]"/>
  <match src="identifier: implementation [109945,109959]" dest="identifier: implementation [69721,69735]"/>
  <match src="identifier: BASE [7739,7743]" dest="identifier: BASE [7739,7743]"/>
  <match src=",: , [14795,14796]" dest=",: , [25322,25323]"/>
  <match src="identifier: accounts [96759,96767]" dest="identifier: accounts [32764,32772]"/>
  <match src="primitive_type [48050,48057]" dest="primitive_type [16631,16638]"/>
  <match src="call_argument [85930,85934]" dest="call_argument [80278,80282]"/>
  <match src="identifier: IDollar [51947,51954]" dest="identifier: IDollar [26582,26589]"/>
  <match src="member_expression [95819,95834]" dest="member_expression [31824,31839]"/>
  <match src="identifier: Transfer [103674,103682]" dest="identifier: Transfer [39679,39687]"/>
  <match src="(: ( [37656,37657]" dest="(: ( [54134,54135]"/>
  <match src="call_expression [7270,7292]" dest="call_expression [7270,7292]"/>
  <match src="): ) [106807,106808]" dest="): ) [42812,42813]"/>
  <match src="comment: // ============ Core Methods ============ [10772,10813]" dest="comment: // ============ Core Methods ============ [10772,10813]"/>
  <match src="type_name [96824,96831]" dest="type_name [32829,32836]"/>
  <match src="visibility [98729,98737]" dest="visibility [34734,34742]"/>
  <match src="call_argument [85385,85395]" dest="call_argument [80062,80072]"/>
  <match src="public: public [97130,97136]" dest="public: public [33135,33141]"/>
  <match src="parameter [56307,56323]" dest="parameter [22399,22415]"/>
  <match src="external: external [83545,83553]" dest="external: external [71554,71562]"/>
  <match src="type_name [44122,44129]" dest="type_name [12703,12710]"/>
  <match src="call_argument [109977,109981]" dest="call_argument [69753,69757]"/>
  <match src="(: ( [8299,8300]" dest="(: ( [8299,8300]"/>
  <match src="member_expression [83893,83903]" dest="member_expression [71623,71633]"/>
  <match src="state_mutability [1950,1954]" dest="state_mutability [1950,1954]"/>
  <match src="comment: /**  * @title Decimal  * @author dYdX  *  * Library that defines a fixed-point number with 18 decimal places.  */ [6297,6415]" dest="comment: /**  * @title Decimal  * @author dYdX  *  * Library that defines a fixed-point number with 18 decimal places.  */ [6297,6415]"/>
  <match src="string [93785,93846]" dest="string [77138,77199]"/>
  <match src="parameter [99954,99961]" dest="parameter [35959,35966]"/>
  <match src="public: public [52066,52072]" dest="public: public [26701,26707]"/>
  <match src="identifier: this [81248,81252]" dest="identifier: this [60082,60086]"/>
  <match src="call_expression [102766,102797]" dest="call_expression [38771,38802]"/>
  <match src="): ) [10929,10930]" dest="): ) [10929,10930]"/>
  <match src="type_cast_expression [36886,36903]" dest="type_cast_expression [53364,53381]"/>
  <match src="type_name [96325,96332]" dest="type_name [32330,32337]"/>
  <match src="member_expression [86262,86281]" dest="member_expression [80356,80379]"/>
  <match src="identifier: D256 [8336,8340]" dest="identifier: D256 [8336,8340]"/>
  <match src="primitive_type [10594,10598]" dest="primitive_type [10594,10598]"/>
  <match src="}: } [48881,48882]" dest="}: } [17462,17463]"/>
  <match src="internal: internal [77342,77350]" dest="internal: internal [66118,66126]"/>
  <match src="identifier: D256 [48176,48180]" dest="identifier: D256 [16757,16761]"/>
  <match src="call_expression [98535,98655]" dest="call_expression [34540,34660]"/>
  <match src="internal: internal [30553,30561]" dest="internal: internal [47031,47039]"/>
  <match src="uint256: uint256 [7412,7419]" dest="uint256: uint256 [7412,7419]"/>
  <match src="++: ++ [37095,37097]" dest="++: ++ [53573,53575]"/>
  <match src="memory: memory [10558,10564]" dest="memory: memory [10558,10564]"/>
  <match src="user_defined_type [8218,8222]" dest="user_defined_type [8218,8222]"/>
  <match src="): ) [100771,100772]" dest="): ) [36776,36777]"/>
  <match src="identifier: epoch [98188,98193]" dest="identifier: epoch [34193,34198]"/>
  <match src="): ) [3983,3984]" dest="): ) [3983,3984]"/>
  <match src=".: . [108362,108363]" dest=".: . [44367,44368]"/>
  <match src="visibility [35641,35648]" dest="visibility [52119,52126]"/>
  <match src="(: ( [4102,4103]" dest="(: ( [4102,4103]"/>
  <match src="user_defined_type [68648,68660]" dest="user_defined_type [66138,66150]"/>
  <match src="number_literal: 450 [45462,45465]" dest="number_literal: 450 [14043,14046]"/>
  <match src="type_name [91267,91279]" dest="type_name [29694,29706]"/>
  <match src=",: , [86086,86087]" dest=",: , [80486,80487]"/>
  <match src="type_name [45140,45147]" dest="type_name [13721,13728]"/>
  <match src="uint256: uint256 [3946,3953]" dest="uint256: uint256 [3946,3953]"/>
  <match src="member_expression [10618,10628]" dest="member_expression [10618,10628]"/>
  <match src="=: = [103621,103622]" dest="=: = [39626,39627]"/>
  <match src="=: = [34936,34937]" dest="=: = [51414,51415]"/>
  <match src="external: external [56390,56398]" dest="external: external [22482,22490]"/>
  <match src="string [20969,21009]" dest="string [57056,57100]"/>
  <match src="type_name [96725,96732]" dest="type_name [32730,32737]"/>
  <match src="identifier: delegatecall [93343,93355]" dest="identifier: delegatecall [76696,76708]"/>
  <match src="member_expression [10736,10750]" dest="member_expression [10736,10750]"/>
  <match src="call_argument [21515,21548]" dest="call_argument [57506,57536]"/>
  <match src="type_name [91537,91550]" dest="type_name [29964,29977]"/>
  <match src="return_statement [10611,10634]" dest="return_statement [10611,10634]"/>
  <match src="parameter [99297,99306]" dest="parameter [35302,35311]"/>
  <match src="(: ( [99019,99020]" dest="(: ( [35024,35025]"/>
  <match src="call_argument [32163,32171]" dest="call_argument [48641,48649]"/>
  <match src="identifier: input [38797,38802]" dest="identifier: input [55275,55280]"/>
  <match src=".: . [103644,103645]" dest=".: . [39649,39650]"/>
  <match src="return_type_definition [10035,10049]" dest="return_type_definition [10035,10049]"/>
  <match src="): ) [81253,81254]" dest="): ) [60095,60096]"/>
  <match src=",: , [32756,32757]" dest=",: , [49234,49235]"/>
  <match src="identifier: account [108191,108198]" dest="identifier: account [44196,44203]"/>
  <match src="contract_body [92443,93983]" dest="contract_body [75796,77336]"/>
  <match src="pure: pure [46949,46953]" dest="pure: pure [15530,15534]"/>
  <match src="return: return [100248,100254]" dest="return: return [36253,36259]"/>
  <match src="uint256: uint256 [90350,90357]" dest="uint256: uint256 [28777,28784]"/>
  <match src="uint256: uint256 [98838,98845]" dest="uint256: uint256 [34843,34850]"/>
  <match src="): ) [21009,21010]" dest="): ) [57100,57101]"/>
  <match src="memory: memory [7792,7798]" dest="memory: memory [7792,7798]"/>
  <match src="identifier: payloadA [29921,29929]" dest="identifier: payloadA [46399,46407]"/>
  <match src="primitive_type [54511,54518]" dest="primitive_type [20603,20610]"/>
  <match src="call_argument [84161,84171]" dest="call_argument [71884,71894]"/>
  <match src=".: . [105117,105118]" dest=".: . [41122,41123]"/>
  <match src=".: . [85189,85190]" dest=".: . [72516,72517]"/>
  <match src="function: function [48272,48280]" dest="function: function [16853,16861]"/>
  <match src="call_expression [33523,33549]" dest="call_expression [50001,50027]"/>
  <match src="type_name [37637,37644]" dest="type_name [54115,54122]"/>
  <match src=".: . [96479,96480]" dest=".: . [32484,32485]"/>
  <match src="primitive_type [3935,3942]" dest="primitive_type [3935,3942]"/>
  <match src="call_argument [105311,105317]" dest="call_argument [41316,41322]"/>
  <match src="identifier: that [32376,32380]" dest="identifier: that [48854,48858]"/>
  <match src=",: , [7288,7289]" dest=",: , [7288,7289]"/>
  <match src="type_name [96544,96551]" dest="type_name [32549,32556]"/>
  <match src="primitive_type [55217,55224]" dest="primitive_type [21309,21316]"/>
  <match src="identifier: amount [102017,102023]" dest="identifier: amount [38022,38028]"/>
  <match src="function_definition [84093,84763]" dest="function_definition [71796,72321]"/>
  <match src="(: ( [84058,84059]" dest="(: ( [81884,81885]"/>
  <match src=",: , [103471,103472]" dest=",: , [39476,39477]"/>
  <match src="): ) [93846,93847]" dest="): ) [77199,77200]"/>
  <match src="call_expression [30668,31033]" dest="call_expression [47146,47511]"/>
  <match src="address: address [48828,48835]" dest="address: address [17409,17416]"/>
  <match src=".: . [104277,104278]" dest=".: . [40282,40283]"/>
  <match src="): ) [36902,36903]" dest="): ) [53380,53381]"/>
  <match src="function_definition [46217,46329]" dest="function_definition [14798,14910]"/>
  <match src="): ) [96192,96193]" dest="): ) [32197,32198]"/>
  <match src="array_access [97259,97298]" dest="array_access [33264,33303]"/>
  <match src="identifier: account [105169,105176]" dest="identifier: account [41174,41181]"/>
  <match src="identifier: length [35844,35850]" dest="identifier: length [52322,52328]"/>
  <match src="identifier: COUPON_SUPPLY_CHANGE_LIMIT [48228,48254]" dest="identifier: COUPON_SUPPLY_CHANGE_LIMIT [16809,16835]"/>
  <match src="member_expression [96571,96597]" dest="member_expression [32576,32602]"/>
  <match src="return_type_definition [99945,99962]" dest="return_type_definition [35950,35967]"/>
  <match src="uint256: uint256 [100090,100097]" dest="uint256: uint256 [36095,36102]"/>
  <match src="identifier: sub [108043,108046]" dest="identifier: sub [44048,44051]"/>
  <match src="enum_value: REJECT [90713,90719]" dest="enum_value: REJECT [29140,29146]"/>
  <match src="primitive_type [77274,77281]" dest="primitive_type [83064,83071]"/>
  <match src=".: . [84235,84236]" dest=".: . [66680,66681]"/>
  <match src="member_expression [95715,95737]" dest="member_expression [31720,31742]"/>
  <match src="parameter [32513,32529]" dest="parameter [48991,49007]"/>
  <match src="(: ( [96085,96086]" dest="(: ( [32090,32091]"/>
  <match src="block_statement [11214,11249]" dest="block_statement [11214,11249]"/>
  <match src="(: ( [93764,93765]" dest="(: ( [77117,77118]"/>
  <match src="return_statement [99349,99397]" dest="return_statement [35354,35402]"/>
  <match src="external: external [85687,85695]" dest="external: external [80194,80202]"/>
  <match src="returns: returns [48460,48467]" dest="returns: returns [17041,17048]"/>
  <match src="visibility [46704,46712]" dest="visibility [15285,15293]"/>
  <match src="variable_declaration_statement [4134,4152]" dest="variable_declaration_statement [4134,4152]"/>
  <match src="type_name [99566,99573]" dest="type_name [35571,35578]"/>
  <match src="{: { [6929,6930]" dest="{: { [6929,6930]"/>
  <match src="{: { [9322,9323]" dest="{: { [9322,9323]"/>
  <match src="call_expression [85603,85610]" dest="call_expression [72775,72782]"/>
  <match src="(: ( [85201,85202]" dest="(: ( [72502,72503]"/>
  <match src="identifier: univ2 [86949,86954]" dest="identifier: dollar [59581,59587]"/>
  <match src="identifier: dollar [95658,95664]" dest="identifier: dollar [31663,31669]"/>
  <match src="address: address [55217,55224]" dest="address: address [21309,21316]"/>
  <match src="address: address [22877,22884]" dest="address: address [64010,64017]"/>
  <match src="identifier: sender [83609,83615]" dest="identifier: sender [72099,72105]"/>
  <match src="): ) [45768,45769]" dest="): ) [14349,14350]"/>
  <match src="view: view [56275,56279]" dest="view: view [22367,22371]"/>
  <match src="function: function [14740,14748]" dest="function: function [25267,25275]"/>
  <match src="member_expression [84616,84626]" dest="member_expression [72189,72199]"/>
  <match src="type_name [22894,22901]" dest="type_name [64027,64034]"/>
  <match src="function_body [104410,104590]" dest="function_body [40415,40595]"/>
  <match src="call_argument [85818,85845]" dest="call_argument [81279,81294]"/>
  <match src="member_expression [105153,105196]" dest="member_expression [41158,41201]"/>
  <match src="identifier: value [7955,7960]" dest="identifier: value [7955,7960]"/>
  <match src="uint8: uint8 [38791,38796]" dest="uint8: uint8 [55269,55274]"/>
  <match src="parameter [55183,55187]" dest="parameter [21275,21279]"/>
  <match src=",: , [33549,33550]" dest=",: , [50027,50028]"/>
  <match src="identifier: current [106138,106145]" dest="identifier: current [42143,42150]"/>
  <match src="identifier: outstandingCouponsForEpoch [106653,106679]" dest="identifier: outstandingCouponsForEpoch [42658,42684]"/>
  <match src="]: ] [95363,95364]" dest="]: ] [31368,31369]"/>
  <match src="return_type_definition [12832,12849]" dest="return_type_definition [23359,23376]"/>
  <match src="parameter [52142,52146]" dest="parameter [26777,26781]"/>
  <match src="function: function [47394,47402]" dest="function: function [15975,15983]"/>
  <match src="}: } [46655,46656]" dest="}: } [15236,15237]"/>
  <match src="binary_expression [76210,76236]" dest="binary_expression [81345,81366]"/>
  <match src="identifier: bond [84102,84106]" dest="identifier: bond [71805,71809]"/>
  <match src="uint256: uint256 [10904,10911]" dest="uint256: uint256 [10904,10911]"/>
  <match src="(: ( [56288,56289]" dest="(: ( [22380,22381]"/>
  <match src="uint256: uint256 [82826,82833]" dest="uint256: uint256 [70762,70769]"/>
  <match src="identifier: transferFrom [102210,102222]" dest="identifier: transferFrom [38215,38227]"/>
  <match src="identifier: _state [107969,107975]" dest="identifier: _state [43974,43980]"/>
  <match src="/=: /= [35916,35918]" dest="/=: /= [52394,52396]"/>
  <match src="): ) [21462,21463]" dest="): ) [57457,57458]"/>
  <match src="identifier: D256 [8986,8990]" dest="identifier: D256 [8986,8990]"/>
  <match src="type_cast_expression [37649,37663]" dest="type_cast_expression [54127,54141]"/>
  <match src="function_definition [102088,102193]" dest="function_definition [38093,38198]"/>
  <match src="uint256: uint256 [44147,44154]" dest="uint256: uint256 [12728,12735]"/>
  <match src="primitive_type [55434,55441]" dest="primitive_type [21526,21533]"/>
  <match src="primitive_type [24065,24072]" dest="primitive_type [18371,18378]"/>
  <match src="pure: pure [45779,45783]" dest="pure: pure [14360,14364]"/>
  <match src="identifier: transferFrom [55204,55216]" dest="identifier: transferFrom [21296,21308]"/>
  <match src="function: function [36531,36539]" dest="function: function [53009,53017]"/>
  <match src="type_name [72555,72562]" dest="type_name [65903,65910]"/>
  <match src="address: address [107492,107499]" dest="address: address [43497,43504]"/>
  <match src="function_body [97160,97306]" dest="function_body [33165,33311]"/>
  <match src="): ) [82958,82959]" dest="): ) [83218,83219]"/>
  <match src="identifier: payloadC [33035,33043]" dest="identifier: payloadC [49513,49521]"/>
  <match src="returns: returns [96100,96107]" dest="returns: returns [32105,32112]"/>
  <match src="identifier: i [8655,8656]" dest="identifier: i [8655,8656]"/>
  <match src="primitive_type [72261,72268]" dest="primitive_type [71009,71016]"/>
  <match src="): ) [46281,46282]" dest="): ) [14862,14863]"/>
  <match src="call_struct_argument [48375,48396]" dest="call_struct_argument [16956,16977]"/>
  <match src="primitive_type [101905,101912]" dest="primitive_type [37910,37917]"/>
  <match src="struct: struct [90325,90331]" dest="struct: struct [28752,28758]"/>
  <match src="): ) [98161,98162]" dest="): ) [34166,34167]"/>
  <match src="function: function [98217,98225]" dest="function: function [34222,34230]"/>
  <match src="member_expression [99190,99227]" dest="member_expression [35195,35232]"/>
  <match src="identifier: abi [33397,33400]" dest="identifier: abi [49875,49878]"/>
  <match src="state_mutability [47805,47809]" dest="state_mutability [16386,16390]"/>
  <match src="{: { [35215,35216]" dest="{: { [51693,51694]"/>
  <match src="parameter [7668,7679]" dest="parameter [7668,7679]"/>
  <match src="identifier: amount [79035,79041]" dest="identifier: amount [62849,62855]"/>
  <match src="return_type_definition [95423,95440]" dest="return_type_definition [31428,31445]"/>
  <match src="): ) [91435,91436]" dest="): ) [29862,29863]"/>
  <match src="member_expression [74558,74576]" dest="member_expression [59320,59338]"/>
  <match src="): ) [99027,99028]" dest="): ) [35032,35033]"/>
  <match src="returns: returns [99462,99469]" dest="returns: returns [35467,35474]"/>
  <match src="type_name [32411,32418]" dest="type_name [48889,48896]"/>
  <match src="struct_member [91189,91202]" dest="struct_member [29616,29629]"/>
  <match src="): ) [31032,31033]" dest="): ) [47510,47511]"/>
  <match src="memory: memory [7591,7597]" dest="memory: memory [7591,7597]"/>
  <match src="call_argument [37925,37939]" dest="call_argument [54403,54417]"/>
  <match src=",: , [9658,9659]" dest=",: , [9658,9659]"/>
  <match src="]: ] [98065,98066]" dest="]: ] [34070,34071]"/>
  <match src="type_name [43556,43563]" dest="type_name [12137,12144]"/>
  <match src="type_name [9669,9673]" dest="type_name [9669,9673]"/>
  <match src="{: { [8509,8510]" dest="{: { [8509,8510]"/>
  <match src="identifier: b [10449,10450]" dest="identifier: b [10449,10450]"/>
  <match src="primitive_type [52110,52117]" dest="primitive_type [26745,26752]"/>
  <match src="identifier: coupons [99068,99075]" dest="identifier: coupons [35073,35080]"/>
  <match src="]: ] [107237,107238]" dest="]: ] [43242,43243]"/>
  <match src="function_body [100659,100723]" dest="function_body [36664,36728]"/>
  <match src="(: ( [98549,98550]" dest="(: ( [34554,34555]"/>
  <match src="return_type_definition [52133,52147]" dest="return_type_definition [26768,26782]"/>
  <match src="uint: uint [55033,55037]" dest="uint: uint [21125,21129]"/>
  <match src=".: . [105229,105230]" dest=".: . [41234,41235]"/>
  <match src="): ) [5507,5508]" dest="): ) [5507,5508]"/>
  <match src="number_literal: 0x2c20 [29169,29175]" dest="number_literal: 0x2c20 [45647,45653]"/>
  <match src="number_literal: 4 [37466,37467]" dest="number_literal: 4 [53944,53945]"/>
  <match src="identifier: stringify [30880,30889]" dest="identifier: stringify [47358,47367]"/>
  <match src="function_definition [10649,10764]" dest="function_definition [10649,10764]"/>
  <match src="==: == [2721,2723]" dest="==: == [2721,2723]"/>
  <match src=".: . [86956,86957]" dest=".: . [59589,59590]"/>
  <match src=",: , [32966,32967]" dest=",: , [49444,49445]"/>
  <match src=",: , [16606,16607]" dest=",: , [60924,60925]"/>
  <match src="primitive_type [17095,17102]" dest="primitive_type [57200,57207]"/>
  <match src="call_expression [109704,109839]" dest="call_expression [69480,69615]"/>
  <match src="internal: internal [48596,48604]" dest="internal: internal [17177,17185]"/>
  <match src="solidity: solidity [61,69]" dest="solidity: solidity [61,69]"/>
  <match src="uint256: uint256 [83530,83537]" dest="uint256: uint256 [71539,71546]"/>
  <match src="function_body [30577,31086]" dest="function_body [47055,47564]"/>
  <match src="contract_body [88247,89247]" dest="contract_body [73914,74914]"/>
  <match src="parameter [97829,97836]" dest="parameter [33834,33841]"/>
  <match src="call_expression [32153,32172]" dest="call_expression [48631,48650]"/>
  <match src="}: } [96790,96791]" dest="}: } [32795,32796]"/>
  <match src="event_paramater [15266,15287]" dest="event_paramater [25793,25814]"/>
  <match src="return_type_definition [46836,46853]" dest="return_type_definition [15417,15434]"/>
  <match src="identifier: account [103525,103532]" dest="identifier: account [39530,39537]"/>
  <match src="primitive_type [82740,82747]" dest="primitive_type [70673,70680]"/>
  <match src="identifier: candidates [107615,107625]" dest="identifier: candidates [43620,43630]"/>
  <match src="string: string [105069,105075]" dest="string: string [41074,41080]"/>
  <match src="call_expression [75813,75837]" dest="call_expression [82116,82134]"/>
  <match src="return: return [100670,100676]" dest="return: return [36675,36681]"/>
  <match src="identifier: Locked [109490,109496]" dest="identifier: Locked [69266,69272]"/>
  <match src="expression_statement [104151,104229]" dest="expression_statement [40156,40234]"/>
  <match src=".: . [106108,106109]" dest=".: . [42113,42114]"/>
  <match src="(: ( [55032,55033]" dest="(: ( [21124,21125]"/>
  <match src="member_expression [103509,103541]" dest="member_expression [39514,39546]"/>
  <match src="string [85818,85845]" dest="string [81279,81294]"/>
  <match src=",: , [85500,85501]" dest=",: , [80034,80035]"/>
  <match src="uint256: uint256 [46845,46852]" dest="uint256: uint256 [15426,15433]"/>
  <match src="return: return [1483,1489]" dest="return: return [1483,1489]"/>
  <match src="(: ( [6764,6765]" dest="(: ( [6764,6765]"/>
  <match src="private: private [37575,37582]" dest="private: private [54053,54060]"/>
  <match src="identifier: incrementTotalDebt [102689,102707]" dest="identifier: incrementTotalDebt [38694,38712]"/>
  <match src="): ) [111272,111273]" dest="): ) [68073,68074]"/>
  <match src="&quot;: &quot; [95059,95060]" dest="&quot;: &quot; [31064,31065]"/>
  <match src="bool: bool [10594,10598]" dest="bool: bool [10594,10598]"/>
  <match src="parameter [47819,47826]" dest="parameter [16400,16407]"/>
  <match src="type_name [102292,102296]" dest="type_name [38297,38301]"/>
  <match src="call_expression [31373,31397]" dest="call_expression [47851,47875]"/>
  <match src="function_definition [98217,98406]" dest="function_definition [34222,34411]"/>
  <match src="type_name [68610,68622]" dest="type_name [20141,20153]"/>
  <match src="array_access [107360,107388]" dest="array_access [43365,43393]"/>
  <match src="return_statement [106701,106708]" dest="return_statement [42706,42713]"/>
  <match src="parameter [100228,100235]" dest="parameter [36233,36240]"/>
  <match src="function: function [97072,97080]" dest="function: function [33077,33085]"/>
  <match src="visibility [55093,55101]" dest="visibility [21185,21193]"/>
  <match src="string_literal [51035,51049]" dest="string_literal [56843,56887]"/>
  <match src="(: ( [46367,46368]" dest="(: ( [14948,14949]"/>
  <match src="identifier: getDAOExitLockupEpochs [47648,47670]" dest="identifier: getDAOExitLockupEpochs [16229,16251]"/>
  <match src=",: , [30767,30768]" dest=",: , [47245,47246]"/>
  <match src="uint256: uint256 [4782,4789]" dest="uint256: uint256 [4782,4789]"/>
  <match src="address: address [107305,107312]" dest="address: address [43310,43317]"/>
  <match src="constant: constant [44758,44766]" dest="constant: constant [13339,13347]"/>
  <match src="state_mutability [48308,48312]" dest="state_mutability [16889,16893]"/>
  <match src=".: . [103183,103184]" dest=".: . [39188,39189]"/>
  <match src="[: [ [107780,107781]" dest="[: [ [43785,43786]"/>
  <match src="{: { [95441,95442]" dest="{: { [31446,31447]"/>
  <match src="primitive_type [29100,29106]" dest="primitive_type [45578,45584]"/>
  <match src="revert: revert [29531,29537]" dest="revert: revert [46009,46015]"/>
  <match src="(: ( [104962,104963]" dest="(: ( [40967,40968]"/>
  <match src="array_access [99498,99518]" dest="array_access [35503,35523]"/>
  <match src=".: . [109766,109767]" dest=".: . [69542,69543]"/>
  <match src="call_argument [84071,84076]" dest="call_argument [72307,72312]"/>
  <match src="(: ( [104036,104037]" dest="(: ( [40041,40042]"/>
  <match src="call_expression [22225,22293]" dest="call_expression [62957,63076]"/>
  <match src="function_definition [45735,45850]" dest="function_definition [14316,14431]"/>
  <match src="array_access [35199,35208]" dest="array_access [51677,51686]"/>
  <match src="(: ( [69203,69204]" dest="(: ( [66869,66870]"/>
  <match src="identifier: D256 [7900,7904]" dest="identifier: D256 [7900,7904]"/>
  <match src="inheritance_specifier [110849,110859]" dest="inheritance_specifier [78087,78097]"/>
  <match src="identifier: supply [91093,91099]" dest="identifier: supply [29520,29526]"/>
  <match src=":: : [47021,47022]" dest=":: : [15602,15603]"/>
  <match src="call_expression [100529,100550]" dest="call_expression [36534,36555]"/>
  <match src="type_name [93288,93292]" dest="type_name [76641,76645]"/>
  <match src="function_body [107199,107268]" dest="function_body [43204,43273]"/>
  <match src="identifier: couponsExpiration [98966,98983]" dest="identifier: couponsExpiration [34971,34988]"/>
  <match src="}: } [31085,31086]" dest="}: } [47563,47564]"/>
  <match src="identifier: accounts [97863,97871]" dest="identifier: accounts [33868,33876]"/>
  <match src="visibility [46370,46378]" dest="visibility [14951,14959]"/>
  <match src="revert_statement [33343,33719]" dest="revert_statement [49821,50197]"/>
  <match src="{: { [9113,9114]" dest="{: { [9113,9114]"/>
  <match src="identifier: _state [95921,95927]" dest="identifier: _state [31926,31932]"/>
  <match src="inheritance_specifier [101798,101805]" dest="inheritance_specifier [37803,37810]"/>
  <match src="(: ( [8870,8871]" dest="(: ( [8870,8871]"/>
  <match src="parameter [55581,55590]" dest="parameter [21673,21682]"/>
  <match src="}: } [47752,47753]" dest="}: } [16333,16334]"/>
  <match src="expression_statement [84021,84036]" dest="expression_statement [60152,60167]"/>
  <match src="return_statement [46172,46202]" dest="return_statement [14753,14783]"/>
  <match src="call_expression [108240,108285]" dest="call_expression [44245,44290]"/>
  <match src="type_name [10419,10423]" dest="type_name [10419,10423]"/>
  <match src="public: public [100632,100638]" dest="public: public [36637,36643]"/>
  <match src="primitive_type [69497,69504]" dest="primitive_type [72945,72952]"/>
  <match src="event_definition [82847,82902]" dest="event_definition [70783,70838]"/>
  <match src="comment: // ============ Library Functions ============ [29322,29368]" dest="comment: // ============ Library Functions ============ [45800,45846]"/>
  <match src="state_mutability [95880,95884]" dest="state_mutability [31885,31889]"/>
  <match src="{: { [35719,35720]" dest="{: { [52197,52198]"/>
  <match src=",: , [56887,56888]" dest=",: , [22979,22980]"/>
  <match src="=: = [29308,29309]" dest="=: = [45786,45787]"/>
  <match src="[: [ [106385,106386]" dest="[: [ [42390,42391]"/>
  <match src="comment: // remove the last decimal digit [36427,36459]" dest="comment: // remove the last decimal digit [52905,52937]"/>
  <match src="identifier: D256 [10553,10557]" dest="identifier: D256 [10553,10557]"/>
  <match src="address: address [100754,100761]" dest="address: address [36759,36766]"/>
  <match src="parameter [4748,4757]" dest="parameter [4748,4757]"/>
  <match src="type_name [95213,95218]" dest="type_name [31218,31223]"/>
  <match src="identifier: value [55086,55091]" dest="identifier: value [21178,21183]"/>
  <match src="identifier: D256 [48369,48373]" dest="identifier: D256 [16950,16954]"/>
  <match src="function: function [56827,56835]" dest="function: function [22919,22927]"/>
  <match src="identifier: Permission [109255,109265]" dest="identifier: Permission [69031,69041]"/>
  <match src="call_argument [2000,2012]" dest="call_argument [2000,2012]"/>
  <match src="(: ( [43839,43840]" dest="(: ( [12420,12421]"/>
  <match src="(: ( [98507,98508]" dest="(: ( [34512,34513]"/>
  <match src="parameter [99602,99606]" dest="parameter [35607,35611]"/>
  <match src="function: function [54832,54840]" dest="function: function [20924,20932]"/>
  <match src="identifier: oracle [95835,95841]" dest="identifier: oracle [31840,31846]"/>
  <match src="identifier: current [90407,90414]" dest="identifier: current [28834,28841]"/>
  <match src="identifier: isContract [93754,93764]" dest="identifier: isContract [77107,77117]"/>
  <match src="identifier: account [82817,82824]" dest="identifier: account [70753,70760]"/>
  <match src="identifier: initialized [100847,100858]" dest="identifier: initialized [36852,36863]"/>
  <match src="interface: interface [54464,54473]" dest="interface: interface [20556,20565]"/>
  <match src="identifier: State [91524,91529]" dest="identifier: State [29951,29956]"/>
  <match src="(: ( [103977,103978]" dest="(: ( [39982,39983]"/>
  <match src="&quot;: &quot; [50908,50909]" dest="&quot;: &quot; [64621,64622]"/>
  <match src="using_directive [16622,16649]" dest="using_directive [60939,60966]"/>
  <match src="state_mutability [98738,98742]" dest="state_mutability [34743,34747]"/>
  <match src="number_literal: 0 [35716,35717]" dest="number_literal: 0 [52194,52195]"/>
  <match src="identifier: candidates [107576,107586]" dest="identifier: candidates [43581,43591]"/>
  <match src="identifier: amount [103704,103710]" dest="identifier: amount [39709,39715]"/>
  <match src="identifier: value [8152,8157]" dest="identifier: value [8152,8157]"/>
  <match src="call_expression [36801,36814]" dest="call_expression [53279,53292]"/>
  <match src=":: : [7088,7089]" dest=":: : [7088,7089]"/>
  <match src=".: . [104707,104708]" dest=".: . [40712,40713]"/>
  <match src="identifier: amount [21069,21075]" dest="identifier: amount [56339,56345]"/>
  <match src="function: function [98414,98422]" dest="function: function [34419,34427]"/>
  <match src="member_expression [83659,83669]" dest="member_expression [71677,71687]"/>
  <match src="(: ( [106632,106633]" dest="(: ( [42637,42638]"/>
  <match src="public: public [95771,95777]" dest="public: public [31776,31782]"/>
  <match src="function_definition [13596,13679]" dest="function_definition [24123,24206]"/>
  <match src="): ) [67798,67799]" dest="): ) [68221,68222]"/>
  <match src=".: . [83953,83954]" dest=".: . [72564,72565]"/>
  <match src="parameter [98508,98515]" dest="parameter [34513,34520]"/>
  <match src="member_expression [105938,105977]" dest="member_expression [41943,41982]"/>
  <match src="identifier: amount [78827,78833]" dest="identifier: amount [62733,62739]"/>
  <match src="call_argument [104020,104027]" dest="call_argument [40025,40032]"/>
  <match src="member_expression [109903,109915]" dest="member_expression [69679,69691]"/>
  <match src="(: ( [104490,104491]" dest="(: ( [40495,40496]"/>
  <match src="): ) [74612,74613]" dest="): ) [59388,59389]"/>
  <match src="): ) [34421,34422]" dest="): ) [50899,50900]"/>
  <match src="string [95148,95156]" dest="string [31153,31161]"/>
  <match src="type_name [43890,43897]" dest="type_name [12471,12478]"/>
  <match src="indexed: indexed [15059,15066]" dest="indexed: indexed [25586,25593]"/>
  <match src="=&gt;: =&gt; [90874,90876]" dest="=&gt;: =&gt; [29301,29303]"/>
  <match src="function: function [106280,106288]" dest="function: function [42285,42293]"/>
  <match src="uint256: uint256 [19957,19964]" dest="uint256: uint256 [18567,18574]"/>
  <match src="return_statement [102173,102186]" dest="return_statement [38178,38191]"/>
  <match src="identifier: stringifyTruncated [32783,32801]" dest="identifier: stringifyTruncated [49261,49279]"/>
  <match src="type_name [10668,10672]" dest="type_name [10668,10672]"/>
  <match src="): ) [98654,98655]" dest="): ) [34659,34660]"/>
  <match src="public: public [95192,95198]" dest="public: public [31197,31203]"/>
  <match src=".: . [99812,99813]" dest=".: . [35817,35818]"/>
  <match src="call_argument [23455,23461]" dest="call_argument [64613,64619]"/>
  <match src="identifier: COLON [30151,30156]" dest="identifier: COLON [46629,46634]"/>
  <match src="): ) [64783,64784]" dest="): ) [27572,27573]"/>
  <match src="}: } [90620,90621]" dest="}: } [29047,29048]"/>
  <match src="): ) [111251,111252]" dest="): ) [56246,56247]"/>
  <match src="parameter [18544,18558]" dest="parameter [60025,60039]"/>
  <match src="assignment_expression [103928,103993]" dest="assignment_expression [39933,39998]"/>
  <match src="): ) [55253,55254]" dest="): ) [21345,21346]"/>
  <match src="): ) [20865,20866]" dest="): ) [64510,64511]"/>
  <match src="type_name [99329,99336]" dest="type_name [35334,35341]"/>
  <match src="identifier: balance [105344,105351]" dest="identifier: balance [41349,41356]"/>
  <match src="member_expression [83950,83960]" dest="member_expression [72561,72571]"/>
  <match src="member_expression [107763,107798]" dest="member_expression [43768,43803]"/>
  <match src="function: function [102088,102096]" dest="function: function [38093,38101]"/>
  <match src="identifier: ERC20 [16590,16595]" dest="identifier: Market [60903,60909]"/>
  <match src="type_name [20718,20725]" dest="type_name [64355,64362]"/>
  <match src="user_defined_type [110861,110872]" dest="user_defined_type [78099,78110]"/>
  <match src="[: [ [103880,103881]" dest="[: [ [39885,39886]"/>
  <match src="{: { [21473,21474]" dest="{: { [57468,57469]"/>
  <match src="): ) [48397,48398]" dest="): ) [16978,16979]"/>
  <match src="identifier: chainId [40306,40313]" dest="identifier: epoch [64348,64353]"/>
  <match src="type_name [109676,109683]" dest="type_name [69452,69459]"/>
  <match src="type_name [2334,2341]" dest="type_name [2334,2341]"/>
  <match src="uint256: uint256 [8436,8443]" dest="uint256: uint256 [8436,8443]"/>
  <match src="parameter [10876,10893]" dest="parameter [10876,10893]"/>
  <match src="return: return [7697,7703]" dest="return: return [7697,7703]"/>
  <match src="state_mutability [47442,47446]" dest="state_mutability [16023,16027]"/>
  <match src="): ) [84171,84172]" dest="): ) [71894,71895]"/>
  <match src=".: . [98784,98785]" dest=".: . [34789,34790]"/>
  <match src=":: : [46620,46621]" dest=":: : [15201,15202]"/>
  <match src="identifier: State [110842,110847]" dest="identifier: State [82996,83001]"/>
  <match src="(: ( [7134,7135]" dest="(: ( [7134,7135]"/>
  <match src="{: { [88247,88248]" dest="{: { [73914,73915]"/>
  <match src="identifier: add [84741,84744]" dest="identifier: add [73264,73267]"/>
  <match src=".: . [106145,106146]" dest=".: . [42150,42151]"/>
  <match src="type_name [51986,51993]" dest="type_name [26621,26628]"/>
  <match src=".: . [99376,99377]" dest=".: . [35381,35382]"/>
  <match src="identifier: _state [100393,100399]" dest="identifier: _state [36398,36404]"/>
  <match src="number_literal: 1e6 [44034,44037]" dest="number_literal: 1e6 [12615,12618]"/>
  <match src="function: function [52015,52023]" dest="function: function [26650,26658]"/>
  <match src="identifier: Candidate [91473,91482]" dest="identifier: Candidate [29900,29909]"/>
  <match src="number_literal: 10 [36405,36407]" dest="number_literal: 10 [52883,52885]"/>
  <match src="(: ( [108263,108264]" dest="(: ( [44268,44269]"/>
  <match src="identifier: epoch [97194,97199]" dest="identifier: epoch [33199,33204]"/>
  <match src="function_body [98761,98802]" dest="function_body [34766,34807]"/>
  <match src=",: , [99295,99296]" dest=",: , [35300,35301]"/>
  <match src="(: ( [45767,45768]" dest="(: ( [14348,14349]"/>
  <match src="state_mutability [47109,47113]" dest="state_mutability [15690,15694]"/>
  <match src="identifier: epoch [99443,99448]" dest="identifier: epoch [35448,35453]"/>
  <match src="identifier: account [27166,27173]" dest="identifier: account [61318,61325]"/>
  <match src="returns: returns [7458,7465]" dest="returns: returns [7458,7465]"/>
  <match src="=: = [43938,43939]" dest="=: = [12519,12520]"/>
  <match src="type_name [32459,32466]" dest="type_name [48937,48944]"/>
  <match src="(: ( [9788,9789]" dest="(: ( [9788,9789]"/>
  <match src="uint256: uint256 [2345,2352]" dest="uint256: uint256 [2345,2352]"/>
  <match src="call_expression [10068,10086]" dest="call_expression [10068,10086]"/>
  <match src="return_statement [98361,98399]" dest="return_statement [34366,34404]"/>
  <match src="(: ( [32609,32610]" dest="(: ( [49087,49088]"/>
  <match src="!: ! [29981,29982]" dest="!: ! [46459,46460]"/>
  <match src="identifier: candidates [100124,100134]" dest="identifier: candidates [36129,36139]"/>
  <match src="call_argument [9554,9602]" dest="call_argument [9554,9602]"/>
  <match src="identifier: lockedUntil [97881,97892]" dest="identifier: lockedUntil [33886,33897]"/>
  <match src="}: } [53216,53217]" dest="}: } [56391,56392]"/>
  <match src="identifier: i [36150,36151]" dest="identifier: i [52628,52629]"/>
  <match src="function: function [100307,100315]" dest="function: function [36312,36320]"/>
  <match src=",: , [5493,5494]" dest=",: , [5493,5494]"/>
  <match src="event_definition [54577,54646]" dest="event_definition [20669,20738]"/>
  <match src="for_statement [36125,36492]" dest="for_statement [52603,52970]"/>
  <match src="identifier: getGovernanceProposalThreshold [47067,47097]" dest="identifier: getGovernanceProposalThreshold [15648,15678]"/>
  <match src="): ) [30734,30735]" dest="): ) [47212,47213]"/>
  <match src="identifier: approve [107598,107605]" dest="identifier: approve [43603,43610]"/>
  <match src="): ) [85038,85039]" dest="): ) [81683,81684]"/>
  <match src="identifier: getTreasuryAddress [48784,48802]" dest="identifier: getTreasuryAddress [17365,17383]"/>
  <match src="identifier: COMMA [32199,32204]" dest="identifier: COMMA [48677,48682]"/>
  <match src="identifier: coupons [105178,105185]" dest="identifier: coupons [41183,41190]"/>
  <match src="parameter [31186,31202]" dest="parameter [47664,47680]"/>
  <match src="(: ( [85881,85882]" dest="(: ( [80226,80227]"/>
  <match src=".: . [102772,102773]" dest=".: . [38777,38778]"/>
  <match src="identifier: stringifyTruncated [32700,32718]" dest="identifier: stringifyTruncated [49178,49196]"/>
  <match src="identifier: balanceOfPhantom [85169,85185]" dest="identifier: balanceOf [72503,72512]"/>
  <match src="call_argument [20780,20781]" dest="call_argument [64417,64418]"/>
  <match src="emit: emit [103669,103673]" dest="emit: emit [39674,39678]"/>
  <match src="(: ( [85185,85186]" dest="(: ( [72512,72513]"/>
  <match src="call_argument [46445,46473]" dest="call_argument [15026,15054]"/>
  <match src="primitive_type [52033,52040]" dest="primitive_type [26668,26675]"/>
  <match src="assignment_expression [105676,105733]" dest="assignment_expression [41681,41738]"/>
  <match src="event_paramater [15314,15327]" dest="event_paramater [25841,25854]"/>
  <match src="{: { [47175,47176]" dest="{: { [15756,15757]"/>
  <match src="return_statement [100386,100429]" dest="return_statement [36391,36434]"/>
  <match src="[: [ [96767,96768]" dest="[: [ [32772,32773]"/>
  <match src=",: , [83074,83075]" dest=",: , [70878,70879]"/>
  <match src="internal: internal [3985,3993]" dest="internal: internal [3985,3993]"/>
  <match src="uint256: uint256 [11165,11172]" dest="uint256: uint256 [11165,11172]"/>
  <match src="identifier: approve [107389,107396]" dest="identifier: approve [43394,43401]"/>
  <match src="member_expression [105223,105236]" dest="member_expression [41228,41241]"/>
  <match src="function_definition [107463,107672]" dest="function_definition [43468,43677]"/>
  <match src="(: ( [36380,36381]" dest="(: ( [52858,52859]"/>
  <match src="=: = [93323,93324]" dest="=: = [76676,76677]"/>
  <match src="identifier: input [34806,34811]" dest="identifier: input [51284,51289]"/>
  <match src="]: ] [104174,104175]" dest="]: ] [40179,40180]"/>
  <match src="parameter [56116,56123]" dest="parameter [22208,22215]"/>
  <match src="emit_statement [83465,83497]" dest="emit_statement [71474,71506]"/>
  <match src="member_expression [86503,86513]" dest="member_expression [63872,63882]"/>
  <match src="uint256: uint256 [77485,77492]" dest="uint256: uint256 [56729,56736]"/>
  <match src="(: ( [30729,30730]" dest="(: ( [47207,47208]"/>
  <match src="type_name [88677,88681]" dest="type_name [74344,74348]"/>
  <match src="identifier: getBootstrappingSupplyChangeLimit [46503,46536]" dest="identifier: getBootstrappingSupplyChangeLimit [15084,15117]"/>
  <match src="): ) [27173,27174]" dest="): ) [61370,61371]"/>
  <match src="type_name [96438,96445]" dest="type_name [32443,32450]"/>
  <match src="member_expression [104151,104166]" dest="member_expression [40156,40171]"/>
  <match src="internal: internal [46822,46830]" dest="internal: internal [15403,15411]"/>
  <match src=".: . [84724,84725]" dest=".: . [73247,73248]"/>
  <match src="primitive_type [56626,56633]" dest="primitive_type [22718,22725]"/>
  <match src="uint: uint [56704,56708]" dest="uint: uint [22796,22800]"/>
  <match src="): ) [35685,35686]" dest="): ) [52163,52164]"/>
  <match src="call_argument [29679,29684]" dest="call_argument [46157,46162]"/>
  <match src="string_literal [18717,18759]" dest="string_literal [72620,72656]"/>
  <match src="return_statement [2647,2656]" dest="return_statement [2647,2656]"/>
  <match src="memory: memory [47304,47310]" dest="memory: memory [15885,15891]"/>
  <match src="]: ] [104766,104767]" dest="]: ] [40771,40772]"/>
  <match src="identifier: capture [64775,64782]" dest="identifier: capture [27564,27571]"/>
  <match src="function_definition [54959,55039]" dest="function_definition [21051,21131]"/>
  <match src="struct_member [90456,90476]" dest="struct_member [28883,28903]"/>
  <match src="identifier: getPartial [9778,9788]" dest="identifier: getPartial [9778,9788]"/>
  <match src="(: ( [10840,10841]" dest="(: ( [10840,10841]"/>
  <match src="}: } [101054,101055]" dest="}: } [37059,37060]"/>
  <match src="call_argument [84831,84841]" dest="call_argument [72921,72931]"/>
  <match src="call_argument [109463,109470]" dest="call_argument [69239,69246]"/>
  <match src="type_cast_expression [53417,53428]" dest="type_cast_expression [64802,64813]"/>
  <match src="member_expression [108471,108488]" dest="member_expression [44476,44493]"/>
  <match src="type_name [7787,7791]" dest="type_name [7787,7791]"/>
  <match src="identifier: Account [109475,109482]" dest="identifier: Account [69251,69258]"/>
  <match src="type_cast_expression [50207,50220]" dest="type_cast_expression [56509,56522]"/>
  <match src="uint256: uint256 [7165,7172]" dest="uint256: uint256 [7165,7172]"/>
  <match src="member_expression [103599,103620]" dest="member_expression [39604,39625]"/>
  <match src="uint256: uint256 [37161,37168]" dest="uint256: uint256 [53639,53646]"/>
  <match src="identifier: FOUR_BIT_MASK [37428,37441]" dest="identifier: FOUR_BIT_MASK [53906,53919]"/>
  <match src="internal: internal [103283,103291]" dest="internal: internal [39288,39296]"/>
  <match src="type_name [96001,96008]" dest="type_name [32006,32013]"/>
  <match src="identifier: D256 [8218,8222]" dest="identifier: D256 [8218,8222]"/>
  <match src="=: = [44950,44951]" dest="=: = [13531,13532]"/>
  <match src="[: [ [104775,104776]" dest="[: [ [40780,40781]"/>
  <match src="type_name [69282,69289]" dest="type_name [67081,67088]"/>
  <match src="): ) [7103,7104]" dest="): ) [7103,7104]"/>
  <match src="&quot;: &quot; [23040,23041]" dest="&quot;: &quot; [64094,64095]"/>
  <match src="identifier: getGovernanceExpiration [46796,46819]" dest="identifier: getGovernanceExpiration [15377,15400]"/>
  <match src="(: ( [30201,30202]" dest="(: ( [46679,46680]"/>
  <match src="identifier: spender [98058,98065]" dest="identifier: spender [34063,34070]"/>
  <match src="identifier: expiring [90525,90533]" dest="identifier: expiring [28952,28960]"/>
  <match src="function_body [38600,38834]" dest="function_body [55078,55312]"/>
  <match src="(: ( [100793,100794]" dest="(: ( [36798,36799]"/>
  <match src="enum_value: UNDECIDED [90675,90684]" dest="enum_value: UNDECIDED [29102,29111]"/>
  <match src="event_paramater [54559,54569]" dest="event_paramater [20651,20661]"/>
  <match src="primitive_type [91189,91196]" dest="primitive_type [29616,29623]"/>
  <match src="identifier: oracle [95762,95768]" dest="identifier: oracle [31767,31773]"/>
  <match src="call_expression [21484,21549]" dest="call_expression [57479,57537]"/>
  <match src="identifier: self [10565,10569]" dest="identifier: self [10565,10569]"/>
  <match src="string [53572,53615]" dest="string [64884,64922]"/>
  <match src="): ) [7747,7748]" dest="): ) [7747,7748]"/>
  <match src=",: , [55579,55580]" dest=",: , [21671,21672]"/>
  <match src=",: , [104648,104649]" dest=",: , [40653,40654]"/>
  <match src="function: function [99896,99904]" dest="function: function [35901,35909]"/>
  <match src="return_type_definition [100912,100934]" dest="return_type_definition [36917,36939]"/>
  <match src="identifier: sub [9365,9368]" dest="identifier: sub [9365,9368]"/>
  <match src="comment: // File: @openzeppelin/contracts/token/ERC20/ERC20Detailed.sol [24306,24368]" dest="comment: /*     Copyright 2019 dYdX Trading Inc.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [44581,45194]"/>
  <match src="call_argument [33459,33463]" dest="call_argument [49937,49941]"/>
  <match src="): ) [106488,106489]" dest="): ) [42493,42494]"/>
  <match src="identifier: i [37094,37095]" dest="identifier: i [53572,53573]"/>
  <match src="function_body [74540,74621]" dest="function_body [59282,59488]"/>
  <match src="number_literal: 2 [37181,37182]" dest="number_literal: 2 [53659,53660]"/>
  <match src="memory: memory [9309,9315]" dest="memory: memory [9309,9315]"/>
  <match src="]: ] [35207,35208]" dest="]: ] [51685,51686]"/>
  <match src="visibility [48027,48035]" dest="visibility [16608,16616]"/>
  <match src="function_definition [48414,48558]" dest="function_definition [16995,17139]"/>
  <match src="): ) [99780,99781]" dest="): ) [35785,35786]"/>
  <match src="member_expression [108007,108024]" dest="member_expression [44012,44029]"/>
  <match src="parameter [4008,4015]" dest="parameter [4008,4015]"/>
  <match src=".: . [107975,107976]" dest=".: . [43980,43981]"/>
  <match src="user_defined_type [8871,8875]" dest="user_defined_type [8871,8875]"/>
  <match src="identifier: _state [107053,107059]" dest="identifier: _state [43058,43064]"/>
  <match src="function_definition [14740,14837]" dest="function_definition [25267,25364]"/>
  <match src="primitive_type [102223,102230]" dest="primitive_type [38228,38235]"/>
  <match src=".: . [104868,104869]" dest=".: . [40873,40874]"/>
  <match src="primitive_type [1964,1971]" dest="primitive_type [1964,1971]"/>
  <match src="identifier: setImplementation [93238,93255]" dest="identifier: setImplementation [76591,76608]"/>
  <match src="visibility [103810,103818]" dest="visibility [39815,39823]"/>
  <match src="return: return [3338,3344]" dest="return: return [3338,3344]"/>
  <match src="primitive_type [102402,102409]" dest="primitive_type [38407,38414]"/>
  <match src="{: { [48733,48734]" dest="{: { [17314,17315]"/>
  <match src="identifier: LPAREN [29206,29212]" dest="identifier: LPAREN [45684,45690]"/>
  <match src="): ) [53186,53187]" dest="): ) [56268,56269]"/>
  <match src="}: } [85646,85647]" dest="}: } [72812,72813]"/>
  <match src=".: . [7533,7534]" dest=".: . [7533,7534]"/>
  <match src="primitive_type [95115,95121]" dest="primitive_type [31120,31126]"/>
  <match src="identifier: balance [103028,103035]" dest="identifier: balance [39033,39040]"/>
  <match src="member_expression [99837,99854]" dest="member_expression [35842,35859]"/>
  <match src="identifier: value [84795,84800]" dest="identifier: value [72855,72860]"/>
  <match src="variable_declaration_statement [100946,100981]" dest="variable_declaration_statement [36951,36986]"/>
  <match src=",: , [83104,83105]" dest=",: , [70908,70909]"/>
  <match src="return_statement [7249,7296]" dest="return_statement [7249,7296]"/>
  <match src="(: ( [36386,36387]" dest="(: ( [52864,52865]"/>
  <match src="user_defined_type [82461,82472]" dest="user_defined_type [70611,70618]"/>
  <match src="member_expression [104421,104452]" dest="member_expression [40426,40457]"/>
  <match src="{: { [34951,34952]" dest="{: { [51429,51430]"/>
  <match src="type_name [31745,31752]" dest="type_name [48223,48230]"/>
  <match src="call_expression [38406,38429]" dest="call_expression [54884,54907]"/>
  <match src="): ) [95769,95770]" dest="): ) [31774,31775]"/>
  <match src="(: ( [9573,9574]" dest="(: ( [9573,9574]"/>
  <match src=".: . [100846,100847]" dest=".: . [36851,36852]"/>
  <match src="expression_statement [37086,37093]" dest="expression_statement [53564,53571]"/>
  <match src="{: { [33966,33967]" dest="{: { [50444,50445]"/>
  <match src="number_literal: 20 [37090,37092]" dest="number_literal: 20 [53568,53570]"/>
  <match src="return_type_definition [96853,96870]" dest="return_type_definition [32858,32875]"/>
  <match src="visibility [2356,2364]" dest="visibility [2356,2364]"/>
  <match src="primitive_type [52050,52057]" dest="primitive_type [26685,26692]"/>
  <match src="): ) [56484,56485]" dest="): ) [22576,22577]"/>
  <match src="identifier: account [109684,109691]" dest="identifier: account [69460,69467]"/>
  <match src="function_body [21473,21724]" dest="function_body [57468,57572]"/>
  <match src="private: private [44257,44264]" dest="private: private [12838,12845]"/>
  <match src="comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [13320,13590]" dest="comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [23847,24117]"/>
  <match src="identifier: value [83962,83967]" dest="identifier: value [73092,73097]"/>
  <match src="): ) [83126,83127]" dest="): ) [70933,70934]"/>
  <match src=".: . [98329,98330]" dest=".: . [34334,34335]"/>
  <match src="identifier: D256 [48516,48520]" dest="identifier: D256 [17097,17101]"/>
  <match src="indexed: indexed [82870,82877]" dest="indexed: indexed [70806,70813]"/>
  <match src="call_expression [79703,79751]" dest="call_expression [61877,61921]"/>
  <match src="type_name [100090,100097]" dest="type_name [36095,36102]"/>
  <match src="function_body [10050,10099]" dest="function_body [10050,10099]"/>
  <match src="primitive_type [28989,28996]" dest="primitive_type [45467,45474]"/>
  <match src="primitive_type [31797,31804]" dest="primitive_type [48275,48282]"/>
  <match src="return_type_definition [46384,46413]" dest="return_type_definition [14965,14994]"/>
  <match src="function_body [103819,104056]" dest="function_body [39824,40061]"/>
  <match src="event_paramater [83206,83222]" dest="event_paramater [83117,83130]"/>
  <match src="primitive_type [68043,68050]" dest="primitive_type [80336,80343]"/>
  <match src="identifier: value [8611,8616]" dest="identifier: value [8611,8616]"/>
  <match src="return: return [48070,48076]" dest="return: return [16651,16657]"/>
  <match src="call_argument [70486,70490]" dest="call_argument [80646,80650]"/>
  <match src="function_definition [6961,7112]" dest="function_definition [6961,7112]"/>
  <match src="type_name [103755,103762]" dest="type_name [39760,39767]"/>
  <match src="user_defined_type [16608,16614]" dest="user_defined_type [60926,60931]"/>
  <match src="member_expression [96136,96150]" dest="member_expression [32141,32155]"/>
  <match src="identifier: value [6637,6642]" dest="identifier: value [6637,6642]"/>
  <match src="memory: memory [3964,3970]" dest="memory: memory [3964,3970]"/>
  <match src=".: . [50836,50837]" dest=".: . [63096,63097]"/>
  <match src="): ) [7100,7101]" dest="): ) [7100,7101]"/>
  <match src="memory: memory [7673,7679]" dest="memory: memory [7673,7679]"/>
  <match src="identifier: COLON [34129,34134]" dest="identifier: COLON [50607,50612]"/>
  <match src="primitive_type [32411,32418]" dest="primitive_type [48889,48896]"/>
  <match src="(: ( [86014,86015]" dest="(: ( [80433,80434]"/>
  <match src="return: return [46995,47001]" dest="return: return [15576,15582]"/>
  <match src="string: string [107527,107533]" dest="string: string [43532,43538]"/>
  <match src="&gt;&gt;: &gt;&gt; [38308,38310]" dest="&gt;&gt;: &gt;&gt; [54786,54788]"/>
  <match src="call_expression [35997,36014]" dest="call_expression [52475,52492]"/>
  <match src=".: . [97377,97378]" dest=".: . [33382,33383]"/>
  <match src="type_name [44670,44677]" dest="type_name [13251,13258]"/>
  <match src="state_mutability [32556,32560]" dest="state_mutability [49034,49038]"/>
  <match src="primitive_type [33368,33374]" dest="primitive_type [49846,49852]"/>
  <match src="call_argument [9586,9593]" dest="call_argument [9586,9593]"/>
  <match src="number_literal: 14400 [44345,44350]" dest="number_literal: 14400 [12926,12931]"/>
  <match src="}: } [34530,34531]" dest="}: } [51008,51009]"/>
  <match src="variable_declaration [35808,35817]" dest="variable_declaration [52286,52295]"/>
  <match src="block_statement [2632,2667]" dest="block_statement [2632,2667]"/>
  <match src="memory: memory [7225,7231]" dest="memory: memory [7225,7231]"/>
  <match src="=: = [82770,82771]" dest="=: = [70703,70704]"/>
  <match src="): ) [33099,33100]" dest="): ) [49577,49578]"/>
  <match src="): ) [100574,100575]" dest="): ) [36579,36580]"/>
  <match src="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [72854,73512]" dest="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [60218,60876]"/>
  <match src="identifier: candidate [100836,100845]" dest="identifier: candidate [36841,36850]"/>
  <match src="expression_statement [108338,108385]" dest="expression_statement [44343,44390]"/>
  <match src="primitive_type [56800,56807]" dest="primitive_type [22892,22899]"/>
  <match src="identifier: account [104201,104208]" dest="identifier: account [40206,40213]"/>
  <match src="identifier: reason [105846,105852]" dest="identifier: reason [41851,41857]"/>
  <match src="=: = [8602,8603]" dest="=: = [8602,8603]"/>
  <match src="identifier: Permission [110849,110859]" dest="identifier: Permission [78087,78097]"/>
  <match src="(: ( [97097,97098]" dest="(: ( [33102,33103]"/>
  <match src="identifier: b [8365,8366]" dest="identifier: b [8365,8366]"/>
  <match src="type_name [66772,66779]" dest="type_name [78306,78313]"/>
  <match src=",: , [87420,87421]" dest=",: , [79239,79240]"/>
  <match src="(: ( [46937,46938]" dest="(: ( [15518,15519]"/>
  <match src="primitive_type [31722,31729]" dest="primitive_type [48200,48207]"/>
  <match src="function_body [70354,70388]" dest="function_body [62771,62864]"/>
  <match src="identifier: Decimal [46432,46439]" dest="identifier: Decimal [15013,15020]"/>
  <match src="type_name [8109,8113]" dest="type_name [8109,8113]"/>
  <match src="call_argument [77861,77867]" dest="call_argument [18959,18965]"/>
  <match src="): ) [103916,103917]" dest="): ) [39921,39922]"/>
  <match src="identifier: GOVERNANCE_QUORUM [47023,47040]" dest="identifier: GOVERNANCE_QUORUM [15604,15621]"/>
  <match src="primitive_type [101863,101870]" dest="primitive_type [37868,37875]"/>
  <match src="internal: internal [107949,107957]" dest="internal: internal [43954,43962]"/>
  <match src="type_name [29443,29450]" dest="type_name [45921,45928]"/>
  <match src="(: ( [46273,46274]" dest="(: ( [14854,14855]"/>
  <match src="{: { [102298,102299]" dest="{: { [38303,38304]"/>
  <match src="function_definition [95388,95488]" dest="function_definition [31393,31493]"/>
  <match src="(: ( [10180,10181]" dest="(: ( [10180,10181]"/>
  <match src="identifier: currentLock [108310,108321]" dest="identifier: currentLock [44315,44326]"/>
  <match src="identifier: staged [104278,104284]" dest="identifier: staged [40283,40289]"/>
  <match src="using_directive [101813,101840]" dest="using_directive [37818,37845]"/>
  <match src="parameter [33789,33801]" dest="parameter [50267,50279]"/>
  <match src="address: address [54592,54599]" dest="address: address [20684,20691]"/>
  <match src="member_expression [30668,30684]" dest="member_expression [47146,47162]"/>
  <match src="struct_member [90807,90823]" dest="struct_member [29234,29250]"/>
  <match src="function_body [105665,105741]" dest="function_body [41670,41746]"/>
  <match src="(: ( [29508,29509]" dest="(: ( [45986,45987]"/>
  <match src="address: address [107892,107899]" dest="address: address [43897,43904]"/>
  <match src="return: return [46294,46300]" dest="return: return [14875,14881]"/>
  <match src="): ) [109414,109415]" dest="): ) [69190,69191]"/>
  <match src="pure: pure [3994,3998]" dest="pure: pure [3994,3998]"/>
  <match src="function: function [4724,4732]" dest="function: function [4724,4732]"/>
  <match src="): ) [2762,2763]" dest="): ) [2762,2763]"/>
  <match src="{: { [711,712]" dest="{: { [711,712]"/>
  <match src="): ) [83495,83496]" dest="): ) [71504,71505]"/>
  <match src="call_argument [21656,21662]" dest="call_argument [59653,59659]"/>
  <match src="identifier: amount [104221,104227]" dest="identifier: amount [40226,40232]"/>
  <match src="(: ( [10329,10330]" dest="(: ( [10329,10330]"/>
  <match src=",: , [32920,32921]" dest=",: , [49398,49399]"/>
  <match src="): ) [15327,15328]" dest="): ) [25854,25855]"/>
  <match src="parameter [98259,98266]" dest="parameter [34264,34271]"/>
  <match src="return_type_definition [3309,3326]" dest="return_type_definition [3309,3326]"/>
  <match src="expression_statement [20754,20825]" dest="expression_statement [64391,64470]"/>
  <match src="type_cast_expression [103683,103693]" dest="type_cast_expression [39688,39698]"/>
  <match src="): ) [34511,34512]" dest="): ) [50989,50990]"/>
  <match src="external: external [56266,56274]" dest="external: external [22358,22366]"/>
  <match src="(: ( [56227,56228]" dest="(: ( [22319,22320]"/>
  <match src="): ) [15084,15085]" dest="): ) [25611,25612]"/>
  <match src="(: ( [103901,103902]" dest="(: ( [39906,39907]"/>
  <match src="type_name [84185,84192]" dest="type_name [66641,66648]"/>
  <match src="{: { [93916,93917]" dest="{: { [77269,77270]"/>
  <match src=".: . [98907,98908]" dest=".: . [34912,34913]"/>
  <match src="(: ( [47265,47266]" dest="(: ( [15846,15847]"/>
  <match src="expression_statement [93718,93848]" dest="expression_statement [77071,77201]"/>
  <match src="primitive_type [106943,106950]" dest="primitive_type [42948,42955]"/>
  <match src="indexed: indexed [55749,55756]" dest="indexed: indexed [21841,21848]"/>
  <match src="identifier: reason [103910,103916]" dest="identifier: reason [39915,39921]"/>
  <match src="(: ( [30118,30119]" dest="(: ( [46596,46597]"/>
  <match src="parameter [31161,31175]" dest="parameter [47639,47653]"/>
  <match src="call_argument [7739,7743]" dest="call_argument [7739,7743]"/>
  <match src="unary_expression [31254,31259]" dest="unary_expression [47732,47737]"/>
  <match src="array_access [37256,37274]" dest="array_access [53734,53752]"/>
  <match src="function_body [99819,99888]" dest="function_body [35824,35893]"/>
  <match src="identifier: Decimal [67910,67917]" dest="identifier: Decimal [68245,68252]"/>
  <match src="uint256: uint256 [4737,4744]" dest="uint256: uint256 [4737,4744]"/>
  <match src="type_name [55788,55795]" dest="type_name [21880,21887]"/>
  <match src="view: view [95101,95105]" dest="view: view [31106,31110]"/>
  <match src="function_definition [51972,52009]" dest="function_definition [26607,26644]"/>
  <match src="): ) [97055,97056]" dest="): ) [33060,33061]"/>
  <match src="(: ( [38410,38411]" dest="(: ( [54888,54889]"/>
  <match src="type_name [101885,101892]" dest="type_name [37890,37897]"/>
  <match src="): ) [82900,82901]" dest="): ) [70836,70837]"/>
  <match src="identifier: sender [84506,84512]" dest="identifier: sender [72691,72697]"/>
  <match src="type_name [27507,27514]" dest="type_name [56712,56719]"/>
  <match src="identifier: accounts [97541,97549]" dest="identifier: accounts [33546,33554]"/>
  <match src="identifier: period [100146,100152]" dest="identifier: period [36151,36157]"/>
  <match src="}: } [8572,8573]" dest="}: } [8572,8573]"/>
  <match src="): ) [36673,36674]" dest="): ) [53151,53152]"/>
  <match src="): ) [35874,35875]" dest="): ) [52352,52353]"/>
  <match src="identifier: provider [95722,95730]" dest="identifier: provider [31727,31735]"/>
  <match src="assignment_expression [36869,36904]" dest="assignment_expression [53347,53382]"/>
  <match src="=: = [4144,4145]" dest="=: = [4144,4145]"/>
  <match src="identifier: dollar [111560,111566]" dest="identifier: dollar [56991,56997]"/>
  <match src="member_expression [100393,100428]" dest="member_expression [36398,36433]"/>
  <match src="binary_expression [97401,97447]" dest="binary_expression [33406,33452]"/>
  <match src="member_expression [105676,105691]" dest="member_expression [41681,41696]"/>
  <match src="type_name [82740,82747]" dest="type_name [70673,70680]"/>
  <match src="primitive_type [75731,75738]" dest="primitive_type [67588,67595]"/>
  <match src="identifier: value [84749,84754]" dest="identifier: value [73281,73286]"/>
  <match src="): ) [81233,81234]" dest="): ) [60067,60068]"/>
  <match src="identifier: token1 [56196,56202]" dest="identifier: token1 [22288,22294]"/>
  <match src="assignment_expression [103509,103588]" dest="assignment_expression [39514,39593]"/>
  <match src="call_expression [86350,86388]" dest="call_expression [72963,72987]"/>
  <match src="{: { [7081,7082]" dest="{: { [7081,7082]"/>
  <match src="(: ( [86378,86379]" dest="(: ( [72972,72973]"/>
  <match src="primitive_type [1418,1425]" dest="primitive_type [1418,1425]"/>
  <match src="parameter [30524,30540]" dest="parameter [47002,47018]"/>
  <match src="type_cast_expression [30028,30363]" dest="type_cast_expression [46506,46841]"/>
  <match src="visibility [94812,94819]" dest="visibility [30817,30824]"/>
  <match src="external: external [54924,54932]" dest="external: external [21016,21024]"/>
  <match src="function_definition [9834,9959]" dest="function_definition [9834,9959]"/>
  <match src="identifier: account [109740,109747]" dest="identifier: account [69516,69523]"/>
  <match src="identifier: spender [13638,13645]" dest="identifier: spender [24165,24172]"/>
  <match src="identifier: D256 [68618,68622]" dest="identifier: D256 [20149,20153]"/>
  <match src="identifier: msg [85385,85388]" dest="identifier: msg [80062,80065]"/>
  <match src="address: address [27507,27514]" dest="address: address [56712,56719]"/>
  <match src="bool: bool [10044,10048]" dest="bool: bool [10044,10048]"/>
  <match src="identifier: value [55539,55544]" dest="identifier: value [21631,21636]"/>
  <match src="}: } [87099,87100]" dest="}: } [59678,59679]"/>
  <match src="identifier: IUniswapV2Pair [81214,81228]" dest="identifier: dollar [60060,60066]"/>
  <match src="identifier: spender [105631,105638]" dest="identifier: spender [41636,41643]"/>
  <match src="variable_declaration [68833,68843]" dest="variable_declaration [68052,68062]"/>
  <match src=",: , [30438,30439]" dest=",: , [46916,46917]"/>
  <match src="returns: returns [100493,100500]" dest="returns: returns [36498,36505]"/>
  <match src="identifier: input [38697,38702]" dest="identifier: input [55175,55180]"/>
  <match src="call_expression [29628,29652]" dest="call_expression [46106,46130]"/>
  <match src="unary_expression [109930,109962]" dest="unary_expression [69706,69738]"/>
  <match src="identifier: one [67918,67921]" dest="identifier: one [68253,68256]"/>
  <match src="state_mutability [2365,2369]" dest="state_mutability [2365,2369]"/>
  <match src=".: . [97741,97742]" dest=".: . [33746,33747]"/>
  <match src="member_expression [104151,104182]" dest="member_expression [40156,40187]"/>
  <match src="identifier: value [83617,83622]" dest="identifier: balance [72107,72114]"/>
  <match src="identifier: getEpochStrategy [45867,45883]" dest="identifier: getEpochStrategy [14448,14464]"/>
  <match src="type_name [72287,72294]" dest="type_name [70910,70917]"/>
  <match src="primitive_type [93191,93198]" dest="primitive_type [76544,76551]"/>
  <match src="identifier: must [29850,29854]" dest="identifier: must [46328,46332]"/>
  <match src="function_body [35692,36523]" dest="function_body [52170,53001]"/>
  <match src=".: . [105520,105521]" dest=".: . [41525,41526]"/>
  <match src="primitive_type [81324,81331]" dest="primitive_type [80175,80182]"/>
  <match src="assignment_expression [37457,37467]" dest="assignment_expression [53935,53945]"/>
  <match src="call_argument [86282,86296]" dest="call_argument [80380,80400]"/>
  <match src="primitive_type [107708,107715]" dest="primitive_type [43713,43720]"/>
  <match src="): ) [31650,31651]" dest="): ) [48128,48129]"/>
  <match src="call_argument [36387,36408]" dest="call_argument [52865,52886]"/>
  <match src="member_expression [104805,104818]" dest="member_expression [40810,40823]"/>
  <match src="identifier: D256 [10143,10147]" dest="identifier: D256 [10143,10147]"/>
  <match src="identifier: amount [20961,20967]" dest="identifier: amount [57048,57054]"/>
  <match src="identifier: b [10304,10305]" dest="identifier: b [10304,10305]"/>
  <match src="): ) [6776,6777]" dest="): ) [6776,6777]"/>
  <match src="identifier: slot [93938,93942]" dest="identifier: slot [77291,77295]"/>
  <match src="parameter [99127,99140]" dest="parameter [35132,35145]"/>
  <match src="identifier: encodePacked [31945,31957]" dest="identifier: encodePacked [48423,48435]"/>
  <match src="call_argument [97020,97038]" dest="call_argument [33025,33043]"/>
  <match src="address: address [91462,91469]" dest="address: address [29889,29896]"/>
  <match src="identifier: msg [85267,85270]" dest="identifier: msg [73042,73045]"/>
  <match src="type_name [29145,29151]" dest="type_name [45623,45629]"/>
  <match src="if_statement [35703,35756]" dest="if_statement [52181,52234]"/>
  <match src="revert: revert [33343,33349]" dest="revert: revert [49821,49827]"/>
  <match src="identifier: amount [23544,23550]" dest="identifier: amount [18484,18490]"/>
  <match src="): ) [69678,69679]" dest="): ) [68083,68084]"/>
  <match src="call_argument [102790,102796]" dest="call_argument [38795,38801]"/>
  <match src="]: ] [105149,105150]" dest="]: ] [41154,41155]"/>
  <match src="user_defined_type [66471,66483]" dest="user_defined_type [65823,65835]"/>
  <match src="(: ( [100325,100326]" dest="(: ( [36330,36331]"/>
  <match src="primitive_type [82826,82833]" dest="primitive_type [70762,70769]"/>
  <match src="call_argument [38269,38286]" dest="call_argument [54747,54764]"/>
  <match src="return: return [47476,47482]" dest="return: return [16057,16063]"/>
  <match src="string_literal [53572,53615]" dest="string_literal [64884,64922]"/>
  <match src="if_statement [29505,29806]" dest="if_statement [45983,46284]"/>
  <match src="member_expression [81214,81239]" dest="member_expression [60060,60073]"/>
  <match src="emit_statement [103669,103712]" dest="emit_statement [39674,39717]"/>
  <match src="}: } [11298,11299]" dest="}: } [11298,11299]"/>
  <match src="string: string [103788,103794]" dest="string: string [39793,39799]"/>
  <match src="primitive_type [44171,44178]" dest="primitive_type [12752,12759]"/>
  <match src="call_expression [84344,84390]" dest="call_expression [71960,72006]"/>
  <match src="returns: returns [102283,102290]" dest="returns: returns [38288,38295]"/>
  <match src="identifier: start [46013,46018]" dest="identifier: start [14594,14599]"/>
  <match src="function: function [84093,84101]" dest="function: function [71796,71804]"/>
  <match src="if: if [108296,108298]" dest="if: if [44301,44303]"/>
  <match src=",: , [45998,45999]" dest=",: , [14579,14580]"/>
  <match src="call_expression [86922,87092]" dest="call_expression [59293,59480]"/>
  <match src="uint256: uint256 [46727,46734]" dest="uint256: uint256 [15308,15315]"/>
  <match src="identifier: recipient [20707,20716]" dest="identifier: recipient [64329,64338]"/>
  <match src="identifier: Deposit [83470,83477]" dest="identifier: Deposit [71479,71486]"/>
  <match src="visibility [56149,56157]" dest="visibility [22241,22249]"/>
  <match src="revert: revert [31276,31282]" dest="revert: revert [47754,47760]"/>
  <match src="primitive_type [56062,56066]" dest="primitive_type [22154,22158]"/>
  <match src="state_mutability [96311,96315]" dest="state_mutability [32316,32320]"/>
  <match src="): ) [47794,47795]" dest="): ) [16375,16376]"/>
  <match src="visibility [56771,56779]" dest="visibility [22863,22871]"/>
  <match src="using: using [77255,77260]" dest="using: using [83045,83050]"/>
  <match src="uint256: uint256 [4134,4141]" dest="uint256: uint256 [4134,4141]"/>
  <match src=",: , [3282,3283]" dest=",: , [3282,3283]"/>
  <match src="identifier: account [83164,83171]" dest="identifier: account [78486,78493]"/>
  <match src="identifier: symbol [95085,95091]" dest="identifier: symbol [31090,31096]"/>
  <match src="type_name [44249,44256]" dest="type_name [12830,12837]"/>
  <match src="event_paramater [54614,54632]" dest="event_paramater [20706,20724]"/>
  <match src="pure: pure [10461,10465]" dest="pure: pure [10461,10465]"/>
  <match src="): ) [108258,108259]" dest="): ) [44263,44264]"/>
  <match src=",: , [109981,109982]" dest=",: , [69757,69758]"/>
  <match src="call_expression [106435,106489]" dest="call_expression [42440,42494]"/>
  <match src="uint256: uint256 [16641,16648]" dest="uint256: uint256 [60958,60965]"/>
  <match src="uint256: uint256 [108153,108160]" dest="uint256: uint256 [44158,44165]"/>
  <match src=",: , [10219,10220]" dest=",: , [10219,10220]"/>
  <match src="function_definition [55287,55347]" dest="function_definition [21379,21439]"/>
  <match src="function: function [9619,9627]" dest="function: function [9619,9627]"/>
  <match src="}: } [31662,31663]" dest="}: } [48140,48141]"/>
  <match src="type_name [48828,48835]" dest="type_name [17409,17416]"/>
  <match src="string_literal [95040,95060]" dest="string_literal [31045,31065]"/>
  <match src="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [117,692]" dest="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [117,692]"/>
  <match src="string [51149,51158]" dest="string [56601,56643]"/>
  <match src="member_expression [109427,109439]" dest="member_expression [69203,69215]"/>
  <match src="identifier: amount [14805,14811]" dest="identifier: amount [25332,25338]"/>
  <match src="identifier: z [38411,38412]" dest="identifier: z [54889,54890]"/>
  <match src="function_body [9322,9396]" dest="function_body [9322,9396]"/>
  <match src="(: ( [84738,84739]" dest="(: ( [73261,73262]"/>
  <match src="member_expression [106819,106832]" dest="member_expression [42824,42837]"/>
  <match src="identifier: supply [95474,95480]" dest="identifier: supply [31479,31485]"/>
  <match src="event_paramater [55788,55810]" dest="event_paramater [21880,21902]"/>
  <match src="call_argument [21120,21126]" dest="call_argument [64993,64999]"/>
  <match src=",: , [90032,90033]" dest=",: , [28459,28460]"/>
  <match src="bytes32: bytes32 [29443,29450]" dest="bytes32: bytes32 [45921,45928]"/>
  <match src="primitive_type [45085,45092]" dest="primitive_type [13666,13673]"/>
  <match src="if_statement [97397,97504]" dest="if_statement [33402,33509]"/>
  <match src="return: return [96021,96027]" dest="return: return [32026,32032]"/>
  <match src="}: } [90540,90541]" dest="}: } [28967,28968]"/>
  <match src="function_definition [100592,100723]" dest="function_definition [36597,36728]"/>
  <match src="pure: pure [55389,55393]" dest="pure: pure [21481,21485]"/>
  <match src="private: private [69835,69842]" dest="private: private [67318,67325]"/>
  <match src="): ) [17661,17662]" dest="): ) [58896,58897]"/>
  <match src=".: . [109711,109712]" dest=".: . [69487,69488]"/>
  <match src="identifier: IUniswapV2Pair [54474,54488]" dest="identifier: IUniswapV2Pair [20566,20580]"/>
  <match src="identifier: sender [84901,84907]" dest="identifier: sender [72490,72496]"/>
  <match src="identifier: epoch [99512,99517]" dest="identifier: epoch [35517,35522]"/>
  <match src="}: } [102192,102193]" dest="}: } [38197,38198]"/>
  <match src="user_defined_type [7467,7471]" dest="user_defined_type [7467,7471]"/>
  <match src="}: } [2791,2792]" dest="}: } [2791,2792]"/>
  <match src="&quot;: &quot; [50926,50927]" dest="&quot;: &quot; [64657,64658]"/>
  <match src="member_expression [97596,97610]" dest="member_expression [33601,33615]"/>
  <match src="modifier_definition [109648,109861]" dest="modifier_definition [69424,69637]"/>
  <match src="member_expression [98901,98929]" dest="member_expression [34906,34934]"/>
  <match src="binary_expression [97175,97205]" dest="binary_expression [33180,33210]"/>
  <match src="address: address [95894,95901]" dest="address: address [31899,31906]"/>
  <match src="assignment_expression [103830,103917]" dest="assignment_expression [39835,39922]"/>
  <match src="pure: pure [46713,46717]" dest="pure: pure [15294,15298]"/>
  <match src="function: function [46217,46225]" dest="function: function [14798,14806]"/>
  <match src="visibility [44910,44917]" dest="visibility [13491,13498]"/>
  <match src="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [51268,51926]" dest="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [25903,26561]"/>
  <match src="(: ( [97029,97030]" dest="(: ( [33034,33035]"/>
  <match src="(: ( [93355,93356]" dest="(: ( [76708,76709]"/>
  <match src="(: ( [34805,34806]" dest="(: ( [51283,51284]"/>
  <match src="primitive_type [30449,30456]" dest="primitive_type [46927,46934]"/>
  <match src="uint256: uint256 [48619,48626]" dest="uint256: uint256 [17200,17207]"/>
  <match src="call_argument [74577,74590]" dest="call_argument [59339,59352]"/>
  <match src="uint256: uint256 [44201,44208]" dest="uint256: uint256 [12782,12789]"/>
  <match src="identifier: amount [14390,14396]" dest="identifier: amount [24917,24923]"/>
  <match src="identifier: approve [90815,90822]" dest="identifier: approve [29242,29249]"/>
  <match src="comment: // File: contracts/external/Require.sol [28060,28099]" dest="comment: // File: contracts/dao/Permission.sol [68309,68346]"/>
  <match src="returns: returns [98250,98257]" dest="returns: returns [34255,34262]"/>
  <match src="identifier: amount [103481,103487]" dest="identifier: amount [39486,39492]"/>
  <match src="member_expression [86002,86014]" dest="member_expression [80421,80433]"/>
  <match src="expression_statement [53165,53188]" dest="expression_statement [56239,56270]"/>
  <match src="type_name [7586,7590]" dest="type_name [7586,7590]"/>
  <match src="return: return [96745,96751]" dest="return: return [32750,32756]"/>
  <match src="type_name [3957,3963]" dest="type_name [3957,3963]"/>
  <match src="string_literal [23552,23590]" dest="string_literal [63177,63194]"/>
  <match src=",: , [82885,82886]" dest=",: , [70821,70822]"/>
  <match src="state_variable_declaration [45359,45407]" dest="state_variable_declaration [13940,13988]"/>
  <match src="constant: constant [44918,44926]" dest="constant: constant [13499,13507]"/>
  <match src="array_access [104743,104782]" dest="array_access [40748,40787]"/>
  <match src="function: function [48775,48783]" dest="function: function [17356,17364]"/>
  <match src="primitive_type [35808,35815]" dest="primitive_type [52286,52293]"/>
  <match src="call_expression [110041,110070]" dest="call_expression [69817,69846]"/>
  <match src="): ) [106555,106556]" dest="): ) [42560,42561]"/>
  <match src="call_argument [86975,86979]" dest="call_argument [59603,59607]"/>
  <match src="function_body [46161,46209]" dest="function_body [14742,14790]"/>
  <match src="): ) [37568,37569]" dest="): ) [54046,54047]"/>
  <match src="call_argument [85093,85103]" dest="call_argument [79312,79322]"/>
  <match src="): ) [97529,97530]" dest="): ) [33534,33535]"/>
  <match src="return: return [9757,9763]" dest="return: return [9757,9763]"/>
  <match src="identifier: _state [106729,106735]" dest="identifier: _state [42734,42740]"/>
  <match src="{: { [20743,20744]" dest="{: { [64380,64381]"/>
  <match src="): ) [91488,91489]" dest="): ) [29915,29916]"/>
  <match src="identifier: sub [107645,107648]" dest="identifier: sub [43650,43653]"/>
  <match src="call_argument [33619,33627]" dest="call_argument [50097,50105]"/>
  <match src=".: . [96366,96367]" dest=".: . [32371,32372]"/>
  <match src="}: } [99887,99888]" dest="}: } [35892,35893]"/>
  <match src="identifier: b [9226,9227]" dest="identifier: b [9226,9227]"/>
  <match src="primitive_type [107492,107499]" dest="primitive_type [43497,43504]"/>
  <match src="parameter [14762,14776]" dest="parameter [25289,25303]"/>
  <match src="address: address [53088,53095]" dest="address: address [56186,56193]"/>
  <match src="type_cast_expression [37919,37940]" dest="type_cast_expression [54397,54418]"/>
  <match src="): ) [47098,47099]" dest="): ) [15679,15680]"/>
  <match src="&gt;: &gt; [10373,10374]" dest="&gt;: &gt; [10373,10374]"/>
  <match src="type_name [54947,54951]" dest="type_name [21039,21043]"/>
  <match src="(: ( [74576,74577]" dest="(: ( [59338,59339]"/>
  <match src="identifier: Require [109704,109711]" dest="identifier: Require [69480,69487]"/>
  <match src="identifier: totalRewarded [74494,74507]" dest="identifier: balanceCheck [59259,59271]"/>
  <match src="type_name [34631,34638]" dest="type_name [51109,51116]"/>
  <match src="array_access [38385,38403]" dest="array_access [54863,54881]"/>
  <match src=",: , [24282,24283]" dest=",: , [56790,56791]"/>
  <match src="identifier: univ2 [83317,83322]" dest="identifier: dollar [71352,71358]"/>
  <match src="): ) [108449,108450]" dest="): ) [44454,44455]"/>
  <match src="type_name [47456,47463]" dest="type_name [16037,16044]"/>
  <match src="contract: contract [16581,16589]" dest="contract: contract [60894,60902]"/>
  <match src="identifier: Account [97572,97579]" dest="identifier: Account [33577,33584]"/>
  <match src="return_type_definition [98145,98162]" dest="return_type_definition [34150,34167]"/>
  <match src="call_argument [33025,33044]" dest="call_argument [49503,49522]"/>
  <match src="(: ( [102291,102292]" dest="(: ( [38296,38297]"/>
  <match src="(: ( [32085,32086]" dest="(: ( [48563,48564]"/>
  <match src="expression_statement [36306,36310]" dest="expression_statement [52784,52788]"/>
  <match src="primitive_type [108432,108439]" dest="primitive_type [44437,44444]"/>
  <match src="return: return [46747,46753]" dest="return: return [15328,15334]"/>
  <match src="): ) [36409,36410]" dest="): ) [52887,52888]"/>
  <match src="call_expression [86562,86576]" dest="call_expression [56901,56915]"/>
  <match src="identifier: add [107837,107840]" dest="identifier: add [43842,43845]"/>
  <match src=".: . [8163,8164]" dest=".: . [8163,8164]"/>
  <match src="identifier: self [9199,9203]" dest="identifier: self [9199,9203]"/>
  <match src="variable_declaration [4134,4143]" dest="variable_declaration [4134,4143]"/>
  <match src="): ) [107188,107189]" dest="): ) [43193,43194]"/>
  <match src="identifier: b [4816,4817]" dest="identifier: b [4816,4817]"/>
  <match src="identifier: amount [107440,107446]" dest="identifier: amount [43445,43451]"/>
  <match src="return_statement [97849,97893]" dest="return_statement [33854,33898]"/>
  <match src="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [2800,3254]" dest="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [2800,3254]"/>
  <match src="function: function [107113,107121]" dest="function: function [43118,43126]"/>
  <match src="struct_declaration [90734,90923]" dest="struct_declaration [29161,29350]"/>
  <match src="type_name [84266,84273]" dest="type_name [63218,63225]"/>
  <match src="identifier: Decimal [46963,46970]" dest="identifier: Decimal [15544,15551]"/>
  <match src="return_statement [99830,99881]" dest="return_statement [35835,35886]"/>
  <match src="identifier: _state [106819,106825]" dest="identifier: _state [42824,42830]"/>
  <match src=",: , [84633,84634]" dest=",: , [72206,72207]"/>
  <match src="visibility [95771,95777]" dest="visibility [31776,31782]"/>
  <match src="uint256: uint256 [18544,18551]" dest="uint256: uint256 [60025,60032]"/>
  <match src="call_struct_argument [9115,9145]" dest="call_struct_argument [9115,9145]"/>
  <match src="comment: // 1000 USDC [43945,43957]" dest="comment: // 1000 USDC [12526,12538]"/>
  <match src="member_expression [98535,98569]" dest="member_expression [34540,34574]"/>
  <match src="visibility [54924,54932]" dest="visibility [21016,21024]"/>
  <match src="identifier: file [29428,29432]" dest="identifier: file [45906,45910]"/>
  <match src="comment: // '&gt;' [29265,29271]" dest="comment: // '&gt;' [45743,45749]"/>
  <match src=".: . [7521,7522]" dest=".: . [7521,7522]"/>
  <match src="{: { [67854,67855]" dest="{: { [68223,68224]"/>
  <match src="parameter [36618,36630]" dest="parameter [53096,53108]"/>
  <match src="call_argument [107440,107446]" dest="call_argument [43445,43451]"/>
  <match src="member_expression [105362,105388]" dest="member_expression [41367,41393]"/>
  <match src=".: . [97610,97611]" dest=".: . [33615,33616]"/>
  <match src="call_expression [47330,47378]" dest="call_expression [15911,15959]"/>
  <match src="visibility [97808,97814]" dest="visibility [33813,33819]"/>
  <match src=".: . [103164,103165]" dest=".: . [39169,39170]"/>
  <match src="call_expression [87346,87455]" dest="call_expression [79138,79272]"/>
  <match src="identifier: require [4095,4102]" dest="identifier: require [4095,4102]"/>
  <match src="identifier: z [37461,37462]" dest="identifier: z [53939,53940]"/>
  <match src="identifier: to [54630,54632]" dest="identifier: to [20722,20724]"/>
  <match src="{: { [7238,7239]" dest="{: { [7238,7239]"/>
  <match src="(: ( [38696,38697]" dest="(: ( [55174,55175]"/>
  <match src="call_expression [96571,96610]" dest="call_expression [32576,32615]"/>
  <match src="type_name [36560,36567]" dest="type_name [53038,53045]"/>
  <match src="array_access [37856,37865]" dest="array_access [54334,54343]"/>
  <match src=".: . [86998,86999]" dest=".: . [59389,59390]"/>
  <match src="&lt;: &lt; [38075,38076]" dest="&lt;: &lt; [54553,54554]"/>
  <match src="{: { [29494,29495]" dest="{: { [45972,45973]"/>
  <match src="(: ( [101028,101029]" dest="(: ( [37033,37034]"/>
  <match src="=: = [84218,84219]" dest="=: = [66657,66658]"/>
  <match src="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      * - Addition cannot overflow.      */ [718,943]" dest="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      * - Addition cannot overflow.      */ [718,943]"/>
  <match src="): ) [48488,48489]" dest="): ) [17069,17070]"/>
  <match src="internal: internal [47100,47108]" dest="internal: internal [15681,15689]"/>
  <match src="return: return [100110,100116]" dest="return: return [36115,36121]"/>
  <match src=":: : [84391,84392]" dest=":: : [72007,72008]"/>
  <match src="state_mutability [6869,6873]" dest="state_mutability [6869,6873]"/>
  <match src="return_type_definition [12988,13005]" dest="return_type_definition [23515,23532]"/>
  <match src="(: ( [55619,55620]" dest="(: ( [21711,21712]"/>
  <match src="uint256: uint256 [52050,52057]" dest="uint256: uint256 [26685,26692]"/>
  <match src="enum_value: Frozen [90010,90016]" dest="enum_value: Frozen [28437,28443]"/>
  <match src="variable_declaration_statement [68700,68738]" dest="variable_declaration_statement [79285,79324]"/>
  <match src="view: view [96530,96534]" dest="view: view [32535,32539]"/>
  <match src="call_argument [48220,48255]" dest="call_argument [16801,16836]"/>
  <match src="type_name [46845,46852]" dest="type_name [15426,15433]"/>
  <match src="(: ( [1417,1418]" dest="(: ( [1417,1418]"/>
  <match src=",: , [9866,9867]" dest=",: , [9866,9867]"/>
  <match src="identifier: Swap [55773,55777]" dest="identifier: Swap [21865,21869]"/>
  <match src="block_statement [67854,67943]" dest="block_statement [68223,68270]"/>
  <match src="struct_member [91322,91340]" dest="struct_member [29749,29767]"/>
  <match src=".: . [98040,98041]" dest=".: . [34045,34046]"/>
  <match src="returns: returns [55024,55031]" dest="returns: returns [21116,21123]"/>
  <match src="}: } [48263,48264]" dest="}: } [16844,16845]"/>
  <match src="call_expression [34078,34102]" dest="call_expression [50556,50580]"/>
  <match src="identifier: from [55225,55229]" dest="identifier: from [21317,21321]"/>
  <match src="parameter [99282,99295]" dest="parameter [35287,35300]"/>
  <match src="assignment_expression [107569,107664]" dest="assignment_expression [43574,43669]"/>
  <match src="): ) [107446,107447]" dest="): ) [43451,43452]"/>
  <match src="): ) [30898,30899]" dest="): ) [47376,47377]"/>
  <match src="}: } [96268,96269]" dest="}: } [32273,32274]"/>
  <match src="identifier: msg [84059,84062]" dest="identifier: msg [81885,81888]"/>
  <match src="call_argument [85619,85624]" dest="call_argument [72791,72796]"/>
  <match src="member_expression [7090,7095]" dest="member_expression [7090,7095]"/>
  <match src="call_expression [8554,8561]" dest="call_expression [8554,8561]"/>
  <match src="binary_expression [96932,96948]" dest="binary_expression [32937,32953]"/>
  <match src="): ) [69329,69330]" dest="): ) [67116,67117]"/>
  <match src="call_argument [85267,85277]" dest="call_argument [73042,73052]"/>
  <match src="address: address [97953,97960]" dest="address: address [33958,33965]"/>
  <match src="function_body [99480,99533]" dest="function_body [35485,35538]"/>
  <match src="): ) [104899,104900]" dest="): ) [40904,40905]"/>
  <match src="type_name [90598,90605]" dest="type_name [29025,29032]"/>
  <match src="bytes32: bytes32 [109286,109293]" dest="bytes32: bytes32 [69062,69069]"/>
  <match src="mapping: mapping [90858,90865]" dest="mapping: mapping [29285,29292]"/>
  <match src="variable_declaration [69497,69520]" dest="variable_declaration [72945,72960]"/>
  <match src=",: , [31515,31516]" dest=",: , [47993,47994]"/>
  <match src="uint256: uint256 [17654,17661]" dest="uint256: uint256 [58889,58896]"/>
  <match src="view: view [96711,96715]" dest="view: view [32716,32720]"/>
  <match src="identifier: _state [102462,102468]" dest="identifier: _state [38467,38473]"/>
  <match src="visibility [10452,10460]" dest="visibility [10452,10460]"/>
  <match src="call_argument [38691,38716]" dest="call_argument [55169,55194]"/>
  <match src="function_body [99963,100023]" dest="function_body [35968,36028]"/>
  <match src="return_statement [46995,47043]" dest="return_statement [15576,15624]"/>
  <match src="external: external [102274,102282]" dest="external: external [38279,38287]"/>
  <match src=",: , [4814,4815]" dest=",: , [4814,4815]"/>
  <match src="variable_declaration_statement [36779,36815]" dest="variable_declaration_statement [53257,53293]"/>
  <match src="(: ( [22937,22938]" dest="(: ( [63759,63760]"/>
  <match src="): ) [97347,97348]" dest="): ) [33352,33353]"/>
  <match src="state_mutability [57175,57179]" dest="state_mutability [18402,18406]"/>
  <match src="{: { [96447,96448]" dest="{: { [32452,32453]"/>
  <match src="identifier: stringify [32231,32240]" dest="identifier: stringify [48709,48718]"/>
  <match src="return_statement [96458,96488]" dest="return_statement [32463,32493]"/>
  <match src="identifier: recipient [13261,13270]" dest="identifier: recipient [23788,23797]"/>
  <match src="type_name [98838,98845]" dest="type_name [34843,34850]"/>
  <match src="): ) [75837,75838]" dest="): ) [82149,82150]"/>
  <match src="): ) [108284,108285]" dest="): ) [44289,44290]"/>
  <match src="identifier: epochs [105273,105279]" dest="identifier: epochs [41278,41284]"/>
  <match src="call_expression [32067,32093]" dest="call_expression [48545,48571]"/>
  <match src="function_body [48733,48767]" dest="function_body [17314,17348]"/>
  <match src="member_expression [104185,104216]" dest="member_expression [40190,40221]"/>
  <match src="type_name [46727,46734]" dest="type_name [15308,15315]"/>
  <match src="return: return [10061,10067]" dest="return: return [10061,10067]"/>
  <match src="visibility [44678,44685]" dest="visibility [13259,13266]"/>
  <match src="state_mutability [47565,47569]" dest="state_mutability [16146,16150]"/>
  <match src="function_definition [55047,55117]" dest="function_definition [21139,21209]"/>
  <match src="primitive_type [109676,109683]" dest="primitive_type [69452,69459]"/>
  <match src="identifier: strategy [98604,98612]" dest="identifier: strategy [34609,34617]"/>
  <match src="array_access [105475,105499]" dest="array_access [41480,41504]"/>
  <match src="): ) [33133,33134]" dest="): ) [49611,49612]"/>
  <match src="&quot;: &quot; [18717,18718]" dest="&quot;: &quot; [72620,72621]"/>
  <match src=",: , [105051,105052]" dest=",: , [41056,41057]"/>
  <match src="}: } [7302,7303]" dest="}: } [7302,7303]"/>
  <match src="member_expression [9930,9940]" dest="member_expression [9930,9940]"/>
  <match src="call_argument [79715,79750]" dest="call_argument [61889,61920]"/>
  <match src="): ) [55313,55314]" dest="): ) [21405,21406]"/>
  <match src="parameter [55502,55515]" dest="parameter [21594,21607]"/>
  <match src="member_expression [83565,83575]" dest="member_expression [72387,72397]"/>
  <match src="returns: returns [38580,38587]" dest="returns: returns [55058,55065]"/>
  <match src="internal: internal [105656,105664]" dest="internal: internal [41661,41669]"/>
  <match src="address: address [15289,15296]" dest="address: address [25816,25823]"/>
  <match src="function_definition [8004,8187]" dest="function_definition [8004,8187]"/>
  <match src="member_expression [97471,97485]" dest="member_expression [33476,33490]"/>
  <match src="address: address [13630,13637]" dest="address: address [24157,24164]"/>
  <match src="binary_expression [1992,1998]" dest="binary_expression [1992,1998]"/>
  <match src="uint256: uint256 [50313,50320]" dest="uint256: uint256 [72345,72352]"/>
  <match src="call_expression [30269,30288]" dest="call_expression [46747,46766]"/>
  <match src="parameter [64801,64820]" dest="parameter [27590,27609]"/>
  <match src="return_statement [96235,96262]" dest="return_statement [32240,32267]"/>
  <match src="assignment_expression [36366,36410]" dest="assignment_expression [52844,52888]"/>
  <match src="): ) [96608,96609]" dest="): ) [32613,32614]"/>
  <match src=",: , [20697,20698]" dest=",: , [64319,64320]"/>
  <match src="expression_statement [86420,86467]" dest="expression_statement [63331,63373]"/>
  <match src="call_argument [29585,29760]" dest="call_argument [46063,46238]"/>
  <match src="call_expression [9778,9815]" dest="call_expression [9778,9815]"/>
  <match src="): ) [56147,56148]" dest="): ) [22239,22240]"/>
  <match src="): ) [103710,103711]" dest="): ) [39715,39716]"/>
  <match src="call_struct_argument [46446,46472]" dest="call_struct_argument [15027,15053]"/>
  <match src="comment: /* solium-disable-next-line security/no-inline-assembly */ [35277,35335]" dest="comment: /* solium-disable-next-line security/no-inline-assembly */ [51755,51813]"/>
  <match src="): ) [100205,100206]" dest="): ) [36210,36211]"/>
  <match src="identifier: Locked [97486,97492]" dest="identifier: Locked [33491,33497]"/>
  <match src="internal: internal [20734,20742]" dest="internal: internal [56971,56979]"/>
  <match src="): ) [52064,52065]" dest="): ) [26699,26700]"/>
  <match src="call_argument [98604,98619]" dest="call_argument [34609,34624]"/>
  <match src="state_mutability [31229,31233]" dest="state_mutability [47707,47711]"/>
  <match src="pure: pure [32556,32560]" dest="pure: pure [49034,49038]"/>
  <match src="): ) [110069,110070]" dest="): ) [69845,69846]"/>
  <match src="member_expression [98779,98794]" dest="member_expression [34784,34799]"/>
  <match src="binary_expression [1063,1069]" dest="binary_expression [1063,1069]"/>
  <match src="call_argument [36381,36409]" dest="call_argument [52859,52887]"/>
  <match src="(: ( [83050,83051]" dest="(: ( [70854,70855]"/>
  <match src="primitive_type [100794,100798]" dest="primitive_type [36799,36803]"/>
  <match src="): ) [48594,48595]" dest="): ) [17175,17176]"/>
  <match src="identifier: totalRedeemable [96286,96301]" dest="identifier: totalRedeemable [32291,32306]"/>
  <match src="call_argument [8365,8366]" dest="call_argument [8365,8366]"/>
  <match src="yul_evm_builtin [93931,93937]" dest="yul_evm_builtin [77284,77290]"/>
  <match src="string [22155,22190]" dest="string [63693,63722]"/>
  <match src="identifier: Status [109760,109766]" dest="identifier: Status [69536,69542]"/>
  <match src="function_body [98517,98663]" dest="function_body [34522,34668]"/>
  <match src="function_body [102427,102503]" dest="function_body [38432,38508]"/>
  <match src="function: function [12795,12803]" dest="function: function [23322,23330]"/>
  <match src="identifier: value [55158,55163]" dest="identifier: value [21250,21255]"/>
  <match src="): ) [7542,7543]" dest="): ) [7542,7543]"/>
  <match src="{: { [47705,47706]" dest="{: { [16286,16287]"/>
  <match src=".: . [84505,84506]" dest=".: . [72690,72691]"/>
  <match src=".: . [97862,97863]" dest=".: . [33867,33868]"/>
  <match src="}: } [95247,95248]" dest="}: } [31252,31253]"/>
  <match src="identifier: sub [102645,102648]" dest="identifier: sub [38650,38653]"/>
  <match src="parameter [9642,9658]" dest="parameter [9642,9658]"/>
  <match src="state_mutability [9892,9896]" dest="state_mutability [9892,9896]"/>
  <match src="type_name [68043,68050]" dest="type_name [80336,80343]"/>
  <match src="visibility [11133,11140]" dest="visibility [11133,11140]"/>
  <match src=".: . [9132,9133]" dest=".: . [9132,9133]"/>
  <match src="variable_declaration_statement [68648,68690]" dest="variable_declaration_statement [66138,66182]"/>
  <match src="function: function [7362,7370]" dest="function: function [7362,7370]"/>
  <match src="type_name [48322,48334]" dest="type_name [16903,16915]"/>
  <match src="{: { [91074,91075]" dest="{: { [29501,29502]"/>
  <match src=".: . [107636,107637]" dest=".: . [43641,43642]"/>
  <match src="function: function [83512,83520]" dest="function: function [71521,71529]"/>
  <match src="): ) [46249,46250]" dest="): ) [14830,14831]"/>
  <match src="uint256: uint256 [90456,90463]" dest="uint256: uint256 [28883,28890]"/>
  <match src="&quot;: &quot; [110016,110017]" dest="&quot;: &quot; [69792,69793]"/>
  <match src="uint256: uint256 [85052,85059]" dest="uint256: uint256 [63252,63259]"/>
  <match src="expression_statement [83634,83715]" dest="expression_statement [71652,71736]"/>
  <match src="user_defined_type [8109,8113]" dest="user_defined_type [8109,8113]"/>
  <match src="{: { [32588,32589]" dest="{: { [49066,49067]"/>
  <match src="&quot;: &quot; [85977,85978]" dest="&quot;: &quot; [80311,80312]"/>
  <match src="parameter [78819,78833]" dest="parameter [62725,62739]"/>
  <match src="member_expression [85740,85752]" dest="member_expression [81196,81208]"/>
  <match src="identifier: COMMA [30926,30931]" dest="identifier: COMMA [47404,47409]"/>
  <match src="identifier: b [9466,9467]" dest="identifier: b [9466,9467]"/>
  <match src="public: public [98853,98859]" dest="public: public [34858,34864]"/>
  <match src="): ) [86546,86547]" dest="): ) [63896,63897]"/>
  <match src="member_expression [102744,102763]" dest="member_expression [38749,38768]"/>
  <match src="parameter [56889,56896]" dest="parameter [22981,22988]"/>
  <match src="identifier: incrementEpoch [106065,106079]" dest="identifier: incrementEpoch [42070,42084]"/>
  <match src="function_definition [8195,8378]" dest="function_definition [8195,8378]"/>
  <match src="]: ] [99517,99518]" dest="]: ] [35522,35523]"/>
  <match src="expression_statement [107053,107098]" dest="expression_statement [43058,43103]"/>
  <match src="call_expression [83922,84008]" dest="call_expression [72536,72580]"/>
  <match src="primitive_type [53282,53289]" dest="primitive_type [56442,56449]"/>
  <match src=".: . [97485,97486]" dest=".: . [33490,33491]"/>
  <match src="identifier: amount [102410,102416]" dest="identifier: amount [38415,38421]"/>
  <match src="): ) [93394,93395]" dest="): ) [76747,76748]"/>
  <match src="private: private [24488,24495]" dest="private: private [60041,60048]"/>
  <match src="member_expression [96136,96157]" dest="member_expression [32141,32162]"/>
  <match src="identifier: EPOCH_PERIOD [46054,46066]" dest="identifier: EPOCH_PERIOD [14635,14647]"/>
  <match src="identifier: balanceOfRewardedWithPhantom [75739,75767]" dest="identifier: totalRedeemable [67596,67611]"/>
  <match src="=: = [29257,29258]" dest="=: = [45735,45736]"/>
  <match src="return_statement [5519,5532]" dest="return_statement [5519,5532]"/>
  <match src="&quot;: &quot; [84635,84636]" dest="&quot;: &quot; [72208,72209]"/>
  <match src="identifier: epochs [99197,99203]" dest="identifier: epochs [35202,35208]"/>
  <match src="&quot;: &quot; [109827,109828]" dest="&quot;: &quot; [69603,69604]"/>
  <match src="primitive_type [36001,36006]" dest="primitive_type [52479,52484]"/>
  <match src="parameter [1463,1470]" dest="parameter [1463,1470]"/>
  <match src="identifier: epoch [97292,97297]" dest="identifier: epoch [33297,33302]"/>
  <match src="member_expression [9807,9814]" dest="member_expression [9807,9814]"/>
  <match src="identifier: _state [103021,103027]" dest="identifier: _state [39026,39032]"/>
  <match src="address: address [107708,107715]" dest="address: address [43713,43720]"/>
  <match src="return_type_definition [47687,47704]" dest="return_type_definition [16268,16285]"/>
  <match src=".: . [102750,102751]" dest=".: . [38755,38756]"/>
  <match src="identifier: Require [84919,84926]" dest="identifier: Require [81483,81490]"/>
  <match src="member_expression [8350,8364]" dest="member_expression [8350,8364]"/>
  <match src="identifier: a [1426,1427]" dest="identifier: a [1426,1427]"/>
  <match src="call_expression [1984,2013]" dest="call_expression [1984,2013]"/>
  <match src="primitive_type [10968,10975]" dest="primitive_type [10968,10975]"/>
  <match src="state_mutability [47925,47929]" dest="state_mutability [16506,16510]"/>
  <match src="variable_declaration [36648,36657]" dest="variable_declaration [53126,53135]"/>
  <match src="expression_statement [36150,36156]" dest="expression_statement [52628,52634]"/>
  <match src="): ) [104129,104130]" dest="): ) [40134,40135]"/>
  <match src="identifier: amount [78125,78131]" dest="identifier: amount [56593,56599]"/>
  <match src="function: function [24196,24204]" dest="function: function [56687,56695]"/>
  <match src="call_expression [106614,106639]" dest="call_expression [42619,42644]"/>
  <match src="expression_statement [23090,23127]" dest="expression_statement [64152,64204]"/>
  <match src="}: } [95605,95606]" dest="}: } [31610,31611]"/>
  <match src="]: ] [106459,106460]" dest="]: ] [42464,42465]"/>
  <match src="pure: pure [10030,10034]" dest="pure: pure [10030,10034]"/>
  <match src="identifier: amount [104491,104497]" dest="identifier: amount [40496,40502]"/>
  <match src="{: { [98883,98884]" dest="{: { [34888,34889]"/>
  <match src="member_expression [106125,106145]" dest="member_expression [42130,42150]"/>
  <match src="identifier: candidates [100262,100272]" dest="identifier: candidates [36267,36277]"/>
  <match src="): ) [70524,70525]" dest="): ) [80684,80685]"/>
  <match src="[: [ [107625,107626]" dest="[: [ [43630,43631]"/>
  <match src="identifier: size [88702,88706]" dest="identifier: size [74369,74373]"/>
  <match src="identifier: allowanceCoupons [97921,97937]" dest="identifier: allowanceCoupons [33926,33942]"/>
  <match src="): ) [34477,34478]" dest="): ) [50955,50956]"/>
  <match src="primitive_type [5397,5404]" dest="primitive_type [5397,5404]"/>
  <match src="identifier: EPOCH_START [46020,46031]" dest="identifier: EPOCH_START [14601,14612]"/>
  <match src="function: function [46673,46681]" dest="function: function [15254,15262]"/>
  <match src="return_statement [48848,48872]" dest="return_statement [17429,17453]"/>
  <match src="parameter [105784,105797]" dest="parameter [41789,41802]"/>
  <match src="primitive_type [75882,75889]" dest="primitive_type [66993,67000]"/>
  <match src="(: ( [24213,24214]" dest="(: ( [56711,56712]"/>
  <match src="}: } [90623,90624]" dest="}: } [29050,29051]"/>
  <match src="address: address [96687,96694]" dest="address: address [32692,32699]"/>
  <match src="parameter [102239,102256]" dest="parameter [38244,38261]"/>
  <match src="call_argument [33440,33464]" dest="call_argument [49918,49942]"/>
  <match src="returns: returns [10172,10179]" dest="returns: returns [10172,10179]"/>
  <match src="identifier: decrementBalanceOfBonded [85360,85384]" dest="identifier: placeLock [80052,80061]"/>
  <match src=".: . [100705,100706]" dest=".: . [36710,36711]"/>
  <match src="identifier: totalBonded [84450,84461]" dest="identifier: totalBonded [72051,72062]"/>
  <match src="visibility [46940,46948]" dest="visibility [15521,15529]"/>
  <match src="]: ] [100845,100846]" dest="]: ] [36850,36851]"/>
  <match src=",: , [108053,108054]" dest=",: , [44058,44059]"/>
  <match src="(: ( [85266,85267]" dest="(: ( [73041,73042]"/>
  <match src="): ) [36013,36014]" dest="): ) [52491,52492]"/>
  <match src="): ) [56203,56204]" dest="): ) [22295,22296]"/>
  <match src="address: address [104098,104105]" dest="address: address [40103,40110]"/>
  <match src="member_expression [100117,100152]" dest="member_expression [36122,36157]"/>
  <match src="type_name [95792,95799]" dest="type_name [31797,31804]"/>
  <match src="(: ( [99601,99602]" dest="(: ( [35606,35607]"/>
  <match src="identifier: deadline [55551,55559]" dest="identifier: deadline [21643,21651]"/>
  <match src="call_expression [84152,84172]" dest="call_expression [71875,71895]"/>
  <match src="): ) [22908,22909]" dest="): ) [64041,64042]"/>
  <match src=",: , [34376,34377]" dest=",: , [50854,50855]"/>
  <match src="external: external [12818,12826]" dest="external: external [23345,23353]"/>
  <match src="false [102180,102185]" dest="false [38185,38190]"/>
  <match src="function: function [56690,56698]" dest="function: function [22782,22790]"/>
  <match src="function: function [29376,29384]" dest="function: function [45854,45862]"/>
  <match src="): ) [84746,84747]" dest="): ) [73269,73270]"/>
  <match src="binary_expression [5526,5531]" dest="binary_expression [5526,5531]"/>
  <match src="member_expression [95819,95841]" dest="member_expression [31824,31846]"/>
  <match src="type_alias [101819,101827]" dest="type_alias [37824,37832]"/>
  <match src="identifier: file [32003,32007]" dest="identifier: file [48481,48485]"/>
  <match src="visibility [47673,47681]" dest="visibility [16254,16262]"/>
  <match src="identifier: abi [30057,30060]" dest="identifier: abi [46535,46538]"/>
  <match src="call_expression [34247,34266]" dest="call_expression [50725,50744]"/>
  <match src="type_name [74782,74789]" dest="type_name [81943,81950]"/>
  <match src="parameter [35673,35685]" dest="parameter [52151,52163]"/>
  <match src="modifier: modifier [109648,109656]" dest="modifier: modifier [69424,69432]"/>
  <match src="identifier: coupons [96480,96487]" dest="identifier: coupons [32485,32492]"/>
  <match src="(: ( [107891,107892]" dest="(: ( [43896,43897]"/>
  <match src="returns: returns [46836,46843]" dest="returns: returns [15417,15424]"/>
  <match src="identifier: GOVERNANCE_PROPOSAL_THRESHOLD [47183,47212]" dest="identifier: GOVERNANCE_PROPOSAL_THRESHOLD [15764,15793]"/>
  <match src="primitive_type [31301,31307]" dest="primitive_type [47779,47785]"/>
  <match src=",: , [90016,90017]" dest=",: , [28443,28444]"/>
  <match src="return_statement [35551,35571]" dest="return_statement [52029,52049]"/>
  <match src="identifier: getEpochStrategy [98330,98346]" dest="identifier: getEpochStrategy [34335,34351]"/>
  <match src="array_access [105676,105724]" dest="array_access [41681,41729]"/>
  <match src="uint256: uint256 [43556,43563]" dest="uint256: uint256 [12137,12144]"/>
  <match src="call_argument [38791,38825]" dest="call_argument [55269,55303]"/>
  <match src="member_expression [104239,104253]" dest="member_expression [40244,40258]"/>
  <match src="=: = [102764,102765]" dest="=: = [38769,38770]"/>
  <match src="identifier: amount0Out [56709,56719]" dest="identifier: amount0Out [22801,22811]"/>
  <match src="): ) [36630,36631]" dest="): ) [53108,53109]"/>
  <match src="^:  ^ [69,71]" dest="^:  ^ [69,71]"/>
  <match src="): ) [59347,59348]" dest="): ) [73218,73219]"/>
  <match src="visibility [99142,99148]" dest="visibility [35147,35153]"/>
  <match src="internal: internal [21464,21472]" dest="internal: internal [57459,57467]"/>
  <match src="return_statement [7697,7749]" dest="return_statement [7697,7749]"/>
  <match src="identifier: spender [105807,105814]" dest="identifier: spender [41812,41819]"/>
  <match src="{: { [48343,48344]" dest="{: { [16924,16925]"/>
  <match src="): ) [95290,95291]" dest="): ) [31295,31296]"/>
  <match src="return_statement [9757,9819]" dest="return_statement [9757,9819]"/>
  <match src="&quot;: &quot; [109329,109330]" dest="&quot;: &quot; [69105,69106]"/>
  <match src="false: false [102067,102072]" dest="false: false [38072,38077]"/>
  <match src="primitive_type [9238,9244]" dest="primitive_type [9238,9244]"/>
  <match src="view: view [100488,100492]" dest="view: view [36493,36497]"/>
  <match src="bytes: bytes [34689,34694]" dest="bytes: bytes [51167,51172]"/>
  <match src="assignment_expression [37902,37941]" dest="assignment_expression [54380,54419]"/>
  <match src=".: . [103897,103898]" dest=".: . [39902,39903]"/>
  <match src="call_expression [86029,86058]" dest="call_expression [78662,78683]"/>
  <match src="primitive_type [33789,33796]" dest="primitive_type [50267,50274]"/>
  <match src="identifier: expiring [99385,99393]" dest="identifier: expiring [35390,35398]"/>
  <match src="indexed: indexed [55931,55938]" dest="indexed: indexed [22023,22030]"/>
  <match src="view: view [100214,100218]" dest="view: view [36219,36223]"/>
  <match src=".: . [7728,7729]" dest=".: . [7728,7729]"/>
  <match src="function_definition [98414,98663]" dest="function_definition [34419,34668]"/>
  <match src="function: function [56243,56251]" dest="function: function [22335,22343]"/>
  <match src="visibility [48299,48307]" dest="visibility [16880,16888]"/>
  <match src="primitive_type [38058,38065]" dest="primitive_type [54536,54543]"/>
  <match src="returns: returns [6756,6763]" dest="returns: returns [6756,6763]"/>
  <match src="(: ( [10043,10044]" dest="(: ( [10043,10044]"/>
  <match src="identifier: FILE [85930,85934]" dest="identifier: FILE [80278,80282]"/>
  <match src="call_expression [108007,108062]" dest="call_expression [44012,44067]"/>
  <match src="visibility [8458,8466]" dest="visibility [8458,8466]"/>
  <match src="primitive_type [33228,33235]" dest="primitive_type [49706,49713]"/>
  <match src="internal: internal [984,992]" dest="internal: internal [984,992]"/>
  <match src="binary_expression [84287,84305]" dest="binary_expression [71926,71944]"/>
  <match src="if_statement [33317,33730]" dest="if_statement [49795,50208]"/>
  <match src="contract: contract [109246,109254]" dest="contract: contract [69022,69030]"/>
  <match src="identifier: FOUR_BIT_MASK [38415,38428]" dest="identifier: FOUR_BIT_MASK [54893,54906]"/>
  <match src="primitive_type [81340,81347]" dest="primitive_type [81157,81164]"/>
  <match src="identifier: reject [107830,107836]" dest="identifier: reject [43835,43841]"/>
  <match src="identifier: Require [87517,87524]" dest="identifier: Require [81318,81325]"/>
  <match src="type_name [36001,36006]" dest="type_name [52479,52484]"/>
  <match src="type_name [8245,8252]" dest="type_name [8245,8252]"/>
  <match src=".: . [103836,103837]" dest=".: . [39841,39842]"/>
  <match src="view: view [95674,95678]" dest="view: view [31679,31683]"/>
  <match src="return_type_definition [64864,64881]" dest="return_type_definition [27653,27670]"/>
  <match src="call_expression [10354,10372]" dest="call_expression [10354,10372]"/>
  <match src="identifier: unfreeze [79619,79627]" dest="identifier: step [61586,61590]"/>
  <match src="): ) [102047,102048]" dest="): ) [38052,38053]"/>
  <match src="binary_expression [1039,1044]" dest="binary_expression [1039,1044]"/>
  <match src="[: [ [107015,107016]" dest="[: [ [43020,43021]"/>
  <match src="visibility [45232,45239]" dest="visibility [13813,13820]"/>
  <match src=".: . [85270,85271]" dest=".: . [73045,73046]"/>
  <match src="address: address [53816,53823]" dest="address: address [61421,61428]"/>
  <match src="identifier: totalBonded [84287,84298]" dest="identifier: totalBonded [71926,71937]"/>
  <match src="): ) [85779,85780]" dest="): ) [59369,59370]"/>
  <match src="function_definition [48775,48879]" dest="function_definition [17356,17460]"/>
  <match src="(: ( [12956,12957]" dest="(: ( [23483,23484]"/>
  <match src="type_name [99746,99753]" dest="type_name [35751,35758]"/>
  <match src="call_argument [83780,83785]" dest="call_argument [71774,71779]"/>
  <match src="{: { [47588,47589]" dest="{: { [16169,16170]"/>
  <match src="contract_body [64729,64885]" dest="contract_body [27518,27674]"/>
  <match src="&quot;: &quot; [3355,3356]" dest="&quot;: &quot; [3355,3356]"/>
  <match src=":: : [8616,8617]" dest=":: : [8616,8617]"/>
  <match src="function_definition [6711,6827]" dest="function_definition [6711,6827]"/>
  <match src="identifier: owner [15282,15287]" dest="identifier: owner [25809,25814]"/>
  <match src="number_literal: 0 [10375,10376]" dest="number_literal: 0 [10375,10376]"/>
  <match src="expression_statement [103830,103918]" dest="expression_statement [39835,39923]"/>
  <match src="visibility [10571,10579]" dest="visibility [10571,10579]"/>
  <match src="type_name [44594,44601]" dest="type_name [13175,13182]"/>
  <match src="function_definition [46337,46482]" dest="function_definition [14918,15063]"/>
  <match src="call_expression [97002,97056]" dest="call_expression [33007,33061]"/>
  <match src="): ) [80771,80772]" dest="): ) [58957,58958]"/>
  <match src="visibility [56039,56047]" dest="visibility [22131,22139]"/>
  <match src="(: ( [9136,9137]" dest="(: ( [9136,9137]"/>
  <match src="): ) [86295,86296]" dest="): ) [80399,80400]"/>
  <match src="yul_identifier [89201,89208]" dest="yul_identifier [74868,74875]"/>
  <match src="identifier: sub [105385,105388]" dest="identifier: sub [41390,41393]"/>
  <match src="return: return [37491,37497]" dest="return: return [53969,53975]"/>
  <match src="function_body [47144,47222]" dest="function_body [15725,15803]"/>
  <match src="): ) [9387,9388]" dest="): ) [9387,9388]"/>
  <match src="struct_member [44171,44186]" dest="struct_member [12752,12767]"/>
  <match src="function_definition [69183,69802]" dest="function_definition [66850,67241]"/>
  <match src="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [48930,49588]" dest="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [17503,18161]"/>
  <match src="call_expression [84733,84740]" dest="call_expression [73256,73263]"/>
  <match src="binary_expression [38073,38079]" dest="binary_expression [54551,54557]"/>
  <match src="call_argument [33397,33684]" dest="call_argument [49875,50162]"/>
  <match src="memory: memory [7390,7396]" dest="memory: memory [7390,7396]"/>
  <match src="function_body [96871,97064]" dest="function_body [32876,33069]"/>
  <match src="event_paramater [83106,83126]" dest="event_paramater [83132,83149]"/>
  <match src="=: = [75768,75769]" dest="=: = [82100,82101]"/>
  <match src="type_name [55081,55085]" dest="type_name [21173,21177]"/>
  <match src="bool: bool [68833,68837]" dest="bool: bool [68052,68056]"/>
  <match src="identifier: decrementBalanceOfStaged [83634,83658]" dest="identifier: decrementBalanceOfStaged [71652,71676]"/>
  <match src="identifier: SafeMath [16628,16636]" dest="identifier: SafeMath [60945,60953]"/>
  <match src="identifier: ASCII_ZERO [37879,37889]" dest="identifier: ASCII_ZERO [54357,54367]"/>
  <match src=".: . [103035,103036]" dest=".: . [39040,39041]"/>
  <match src="identifier: accounts [103516,103524]" dest="identifier: accounts [39521,39529]"/>
  <match src="call_argument [37424,37441]" dest="call_argument [53902,53919]"/>
  <match src="}: } [107454,107455]" dest="}: } [43459,43460]"/>
  <match src="member_expression [99356,99369]" dest="member_expression [35361,35374]"/>
  <match src="function_definition [99412,99533]" dest="function_definition [35417,35538]"/>
  <match src="visibility [98238,98244]" dest="visibility [34243,34249]"/>
  <match src="call_expression [74558,74613]" dest="call_expression [59320,59389]"/>
  <match src="primitive_type [14416,14420]" dest="primitive_type [24943,24947]"/>
  <match src="primitive_type [56289,56296]" dest="primitive_type [22381,22388]"/>
  <match src="(: ( [15028,15029]" dest="(: ( [25555,25556]"/>
  <match src="visibility [32542,32550]" dest="visibility [49020,49028]"/>
  <match src=",: , [54991,54992]" dest=",: , [21083,21084]"/>
  <match src="type_name [101863,101870]" dest="type_name [37868,37875]"/>
  <match src="type_name [35977,35982]" dest="type_name [52455,52460]"/>
  <match src="function: function [45735,45743]" dest="function: function [14316,14324]"/>
  <match src=".: . [97603,97604]" dest=".: . [33608,33609]"/>
  <match src="call_argument [4819,4845]" dest="call_argument [4819,4845]"/>
  <match src="identifier: TREASURY_RATIO [45445,45459]" dest="identifier: TREASURY_RATIO [14026,14040]"/>
  <match src="identifier: outstanding [104877,104888]" dest="identifier: outstanding [40882,40893]"/>
  <match src="identifier: balance [104918,104925]" dest="identifier: balance [40923,40930]"/>
  <match src="return: return [47599,47605]" dest="return: return [16180,16186]"/>
  <match src=",: , [1900,1901]" dest=",: , [1900,1901]"/>
  <match src="call_argument [47015,47041]" dest="call_argument [15596,15622]"/>
  <match src="event_paramater [54534,54557]" dest="event_paramater [20626,20649]"/>
  <match src=".: . [102605,102606]" dest=".: . [38610,38611]"/>
  <match src="indexed: indexed [15297,15304]" dest="indexed: indexed [25824,25831]"/>
  <match src="identifier: coupons [106840,106847]" dest="identifier: coupons [42845,42852]"/>
  <match src="number_literal: 18 [95238,95240]" dest="number_literal: 18 [31243,31245]"/>
  <match src="(: ( [48468,48469]" dest="(: ( [17049,17050]"/>
  <match src="type_name [13306,13310]" dest="type_name [23833,23837]"/>
  <match src="variable_declaration [75535,75554]" dest="variable_declaration [71908,71923]"/>
  <match src="identifier: to [55757,55759]" dest="identifier: to [21849,21851]"/>
  <match src="member_expression [85707,85717]" dest="member_expression [71852,71862]"/>
  <match src="(: ( [84744,84745]" dest="(: ( [73267,73268]"/>
  <match src="identifier: account [27515,27522]" dest="identifier: account [56720,56727]"/>
  <match src="identifier: value [15079,15084]" dest="identifier: value [25606,25611]"/>
  <match src="comment: // populate the least-significant character [37199,37242]" dest="comment: // populate the least-significant character [53677,53720]"/>
  <match src="]: ] [38260,38261]" dest="]: ] [54738,54739]"/>
  <match src="(: ( [106196,106197]" dest="(: ( [42201,42202]"/>
  <match src="identifier: div [3269,3272]" dest="identifier: div [3269,3272]"/>
  <match src="parameter [107911,107925]" dest="parameter [43916,43930]"/>
  <match src="identifier: epoch [105513,105518]" dest="identifier: epoch [41518,41523]"/>
  <match src="type_name [54693,54699]" dest="type_name [20785,20791]"/>
  <match src="member_expression [7532,7537]" dest="member_expression [7532,7537]"/>
  <match src="identifier: candidate [107987,107996]" dest="identifier: candidate [43992,44001]"/>
  <match src="array_access [105938,105986]" dest="array_access [41943,41991]"/>
  <match src="type_name [43473,43480]" dest="type_name [12054,12061]"/>
  <match src="parameter [55570,55579]" dest="parameter [21662,21671]"/>
  <match src="[: [ [99854,99855]" dest="[: [ [35859,35860]"/>
  <match src="identifier: candidates [99988,99998]" dest="identifier: candidates [35993,36003]"/>
  <match src="primitive_type [15051,15058]" dest="primitive_type [25578,25585]"/>
  <match src="assignment_expression [106372,106424]" dest="assignment_expression [42377,42429]"/>
  <match src="external: external [14813,14821]" dest="external: external [25340,25348]"/>
  <match src="state_mutability [31840,31844]" dest="state_mutability [48318,48322]"/>
  <match src="): ) [98484,98485]" dest="): ) [34489,34490]"/>
  <match src="struct_member [90981,90996]" dest="struct_member [29408,29423]"/>
  <match src="function_definition [46909,47050]" dest="function_definition [15490,15631]"/>
  <match src="identifier: unfreeze [84822,84830]" dest="identifier: unfreeze [72912,72920]"/>
  <match src="identifier: Decimal [66459,66466]" dest="identifier: Decimal [65811,65818]"/>
  <match src=".: . [108499,108500]" dest=".: . [44504,44505]"/>
  <match src="member_expression [106435,106477]" dest="member_expression [42440,42482]"/>
  <match src="identifier: amount1 [55732,55739]" dest="identifier: amount1 [21824,21831]"/>
  <match src=".: . [96758,96759]" dest=".: . [32763,32764]"/>
  <match src="&amp;: &amp; [38271,38272]" dest="&amp;: &amp; [54749,54750]"/>
  <match src="returns: returns [4773,4780]" dest="returns: returns [4773,4780]"/>
  <match src="{: { [24254,24255]" dest="{: { [56754,56755]"/>
  <match src="call_expression [11000,11038]" dest="call_expression [11000,11038]"/>
  <match src="string_literal [20969,21009]" dest="string_literal [57056,57100]"/>
  <match src="expression_statement [59297,59349]" dest="expression_statement [73147,73220]"/>
  <match src="identifier: LibEIP712 [50132,50141]" dest="identifier: transferFrom [56487,56499]"/>
  <match src="): ) [48444,48445]" dest="): ) [17025,17026]"/>
  <match src="identifier: errorMessage [5495,5507]" dest="identifier: errorMessage [5495,5507]"/>
  <match src="user_defined_type [46393,46405]" dest="user_defined_type [14974,14986]"/>
  <match src="yul_identifier [101015,101019]" dest="yul_identifier [37020,37024]"/>
  <match src="}: } [100722,100723]" dest="}: } [36727,36728]"/>
  <match src="): ) [46412,46413]" dest="): ) [14993,14994]"/>
  <match src="): ) [100479,100480]" dest="): ) [36484,36485]"/>
  <match src="): ) [54922,54923]" dest="): ) [21014,21015]"/>
  <match src="call_argument [18709,18715]" dest="call_argument [18496,18502]"/>
  <match src="function_definition [10392,10529]" dest="function_definition [10392,10529]"/>
  <match src="member_expression [98901,98941]" dest="member_expression [34906,34946]"/>
  <match src="visibility [43898,43905]" dest="visibility [12479,12486]"/>
  <match src="member_expression [31941,31957]" dest="member_expression [48419,48435]"/>
  <match src="identifier: withdraw [83521,83529]" dest="identifier: withdraw [71530,71538]"/>
  <match src="private: private [43708,43715]" dest="private: private [12289,12296]"/>
  <match src=",: , [83676,83677]" dest=",: , [71694,71695]"/>
  <match src="identifier: value [83181,83186]" dest="identifier: value [61472,61477]"/>
  <match src="identifier: approve [107637,107644]" dest="identifier: approve [43642,43649]"/>
  <match src="inheritance_specifier [94719,94724]" dest="inheritance_specifier [30724,30729]"/>
  <match src="function_body [96010,96057]" dest="function_body [32015,32062]"/>
  <match src="identifier: epoch [97523,97528]" dest="identifier: epoch [33528,33533]"/>
  <match src="type_name [108097,108104]" dest="type_name [44102,44109]"/>
  <match src="identifier: balanceOf [54899,54908]" dest="identifier: balanceOf [20991,21000]"/>
  <match src="&quot;: &quot; [21008,21009]" dest="&quot;: &quot; [57099,57100]"/>
  <match src=".: . [107059,107060]" dest=".: . [43064,43065]"/>
  <match src="call_argument [85477,85487]" dest="call_argument [80013,80023]"/>
  <match src="): ) [87285,87286]" dest="): ) [78748,78749]"/>
  <match src="member_expression [48361,48373]" dest="member_expression [16942,16954]"/>
  <match src="type_name [99602,99606]" dest="type_name [35607,35611]"/>
  <match src="return_statement [95452,95481]" dest="return_statement [31457,31486]"/>
  <match src="parameter [104098,104113]" dest="parameter [40103,40118]"/>
  <match src="uint256: uint256 [44594,44601]" dest="uint256: uint256 [13175,13182]"/>
  <match src="): ) [56091,56092]" dest="): ) [22183,22184]"/>
  <match src="primitive_type [35562,35567]" dest="primitive_type [52040,52045]"/>
  <match src="public: public [97669,97675]" dest="public: public [33674,33680]"/>
  <match src="identifier: reason [7848,7854]" dest="identifier: reason [7848,7854]"/>
  <match src="primitive_type [82945,82952]" dest="primitive_type [61554,61561]"/>
  <match src="identifier: b [11119,11120]" dest="identifier: b [11119,11120]"/>
  <match src="member_expression [87346,87358]" dest="member_expression [79138,79150]"/>
  <match src="comment: /*     Copyright 2019 dYdX Trading Inc.     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [5589,6285]" dest="comment: /*     Copyright 2019 dYdX Trading Inc.     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [5589,6285]"/>
  <match src="identifier: _state [107360,107366]" dest="identifier: _state [43365,43371]"/>
  <match src="identifier: sender [84835,84841]" dest="identifier: sender [72925,72931]"/>
  <match src="primitive_type [37873,37878]" dest="primitive_type [54351,54356]"/>
  <match src="{: { [9345,9346]" dest="{: { [9345,9346]"/>
  <match src="call_argument [79035,79041]" dest="call_argument [62849,62855]"/>
  <match src="function: function [108078,108086]" dest="function: function [44083,44091]"/>
  <match src="private: private [43564,43571]" dest="private: private [12145,12152]"/>
  <match src="{: { [30599,30600]" dest="{: { [47077,47078]"/>
  <match src="return_statement [4802,4847]" dest="return_statement [4802,4847]"/>
  <match src="type_name [5459,5466]" dest="type_name [5459,5466]"/>
  <match src="identifier: D256 [48477,48481]" dest="identifier: D256 [17058,17062]"/>
  <match src="identifier: b [9944,9945]" dest="identifier: b [9944,9945]"/>
  <match src="memory: memory [8223,8229]" dest="memory: memory [8223,8229]"/>
  <match src="visibility [86828,86836]" dest="visibility [64371,64379]"/>
  <match src="identifier: account [99754,99761]" dest="identifier: account [35759,35766]"/>
  <match src="visibility [1440,1448]" dest="visibility [1440,1448]"/>
  <match src="variable_declaration [34767,34786]" dest="variable_declaration [51245,51264]"/>
  <match src=",: , [10513,10514]" dest=",: , [10513,10514]"/>
  <match src="identifier: Candidate [99803,99812]" dest="identifier: Candidate [35808,35817]"/>
  <match src="&quot;: &quot; [26371,26372]" dest="&quot;: &quot; [78929,78930]"/>
  <match src=".: . [98565,98566]" dest=".: . [34570,34571]"/>
  <match src="constant: constant [45008,45016]" dest="constant: constant [13589,13597]"/>
  <match src="identifier: getInitialStakeMultiple [84354,84377]" dest="identifier: getInitialStakeMultiple [71980,72003]"/>
  <match src="primitive_type [53816,53823]" dest="primitive_type [61421,61428]"/>
  <match src="primitive_type [36560,36567]" dest="primitive_type [53038,53045]"/>
  <match src="(: ( [8774,8775]" dest="(: ( [8774,8775]"/>
  <match src="internal: internal [46370,46378]" dest="internal: internal [14951,14959]"/>
  <match src="&quot;: &quot; [53572,53573]" dest="&quot;: &quot; [64884,64885]"/>
  <match src="identifier: account [88645,88652]" dest="identifier: account [74312,74319]"/>
  <match src="type_name [86157,86164]" dest="type_name [62129,62136]"/>
  <match src="): ) [103375,103376]" dest="): ) [39380,39381]"/>
  <match src="): ) [56896,56897]" dest="): ) [22988,22989]"/>
  <match src="primitive_type [69256,69263]" dest="primitive_type [67058,67065]"/>
  <match src="identifier: getDebtRatioCap [48281,48296]" dest="identifier: getDebtRatioCap [16862,16877]"/>
  <match src="): ) [11020,11021]" dest="): ) [11020,11021]"/>
  <match src="type_name [56590,56594]" dest="type_name [22682,22686]"/>
  <match src="block_statement [35876,35933]" dest="block_statement [52354,52411]"/>
  <match src="call_expression [79703,79710]" dest="call_expression [61877,61884]"/>
  <match src="identifier: account [95283,95290]" dest="identifier: account [31288,31295]"/>
  <match src="): ) [8175,8176]" dest="): ) [8175,8176]"/>
  <match src="): ) [55410,55411]" dest="): ) [21502,21503]"/>
  <match src="call_argument [29730,29736]" dest="call_argument [46208,46214]"/>
  <match src="uint256: uint256 [102708,102715]" dest="uint256: uint256 [38713,38720]"/>
  <match src="variable_declaration [85052,85072]" dest="variable_declaration [63252,63272]"/>
  <match src="identifier: that [87164,87168]" dest="identifier: that [78643,78647]"/>
  <match src="(: ( [90865,90866]" dest="(: ( [29292,29293]"/>
  <match src="): ) [46938,46939]" dest="): ) [15519,15520]"/>
  <match src="primitive_type [10044,10048]" dest="primitive_type [10044,10048]"/>
  <match src=".: . [107081,107082]" dest=".: . [43086,43087]"/>
  <match src="string [26897,26933]" dest="string [79727,79757]"/>
  <match src="comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [4162,4239]" dest="comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [4162,4239]"/>
  <match src="visibility [96523,96529]" dest="visibility [32528,32534]"/>
  <match src="identifier: account [82878,82885]" dest="identifier: account [70814,70821]"/>
  <match src="type_cast_expression [30639,31052]" dest="type_cast_expression [47117,47530]"/>
  <match src="): ) [98347,98348]" dest="): ) [34352,34353]"/>
  <match src="(: ( [86966,86967]" dest="(: ( [59594,59595]"/>
  <match src="identifier: D256 [10419,10423]" dest="identifier: D256 [10419,10423]"/>
  <match src="member_expression [7517,7531]" dest="member_expression [7517,7531]"/>
  <match src="string_literal [85502,85538]" dest="string_literal [80864,80882]"/>
  <match src=".: . [9126,9127]" dest=".: . [9126,9127]"/>
  <match src="(: ( [48296,48297]" dest="(: ( [16877,16878]"/>
  <match src="=: = [44649,44650]" dest="=: = [13230,13231]"/>
  <match src="for: for [36125,36128]" dest="for: for [52603,52606]"/>
  <match src="call_argument [48374,48397]" dest="call_argument [16955,16978]"/>
  <match src="primitive_type [45545,45552]" dest="primitive_type [14126,14133]"/>
  <match src="call_argument [31552,31560]" dest="call_argument [48030,48038]"/>
  <match src="primitive_type [55788,55795]" dest="primitive_type [21880,21887]"/>
  <match src="identifier: isContract [88626,88636]" dest="identifier: isContract [74293,74303]"/>
  <match src="identifier: Decimal [48469,48476]" dest="identifier: Decimal [17050,17057]"/>
  <match src="): ) [106239,106240]" dest="): ) [42244,42245]"/>
  <match src="number_literal: 40 [37405,37407]" dest="number_literal: 40 [53883,53885]"/>
  <match src="member_expression [108471,108511]" dest="member_expression [44476,44516]"/>
  <match src="): ) [1100,1101]" dest="): ) [1100,1101]"/>
  <match src="identifier: sender [84063,84069]" dest="identifier: sender [81889,81895]"/>
  <match src="type_name [98752,98759]" dest="type_name [34757,34764]"/>
  <match src="parameter [102857,102877]" dest="parameter [38862,38882]"/>
  <match src="type_name [103456,103463]" dest="type_name [39461,39468]"/>
  <match src="identifier: FOUR_BIT_MASK [29294,29307]" dest="identifier: FOUR_BIT_MASK [45772,45785]"/>
  <match src="}: } [107855,107856]" dest="}: } [43860,43861]"/>
  <match src="block_statement [96950,96985]" dest="block_statement [32955,32990]"/>
  <match src="}: } [11301,11302]" dest="}: } [11301,11302]"/>
  <match src="return_statement [100811,100859]" dest="return_statement [36816,36864]"/>
  <match src="comment: /**      * Global      */ [95614,95641]" dest="comment: /**      * Global      */ [31619,31646]"/>
  <match src="call_argument [93466,93483]" dest="call_argument [76819,76836]"/>
  <match src=".: . [103966,103967]" dest=".: . [39971,39972]"/>
  <match src="}: } [99403,99404]" dest="}: } [35408,35409]"/>
  <match src="identifier: reason [107657,107663]" dest="identifier: reason [43662,43668]"/>
  <match src="identifier: candidate [100762,100771]" dest="identifier: candidate [36767,36776]"/>
  <match src="(: ( [102944,102945]" dest="(: ( [38949,38950]"/>
  <match src="return: return [45708,45714]" dest="return: return [14289,14295]"/>
  <match src="memory: memory [10297,10303]" dest="memory: memory [10297,10303]"/>
  <match src="{: { [10336,10337]" dest="{: { [10336,10337]"/>
  <match src="type_name [36648,36655]" dest="type_name [53126,53133]"/>
  <match src="identifier: period [46046,46052]" dest="identifier: period [14627,14633]"/>
  <match src="): ) [10371,10372]" dest="): ) [10371,10372]"/>
  <match src="type_name [3935,3942]" dest="type_name [3935,3942]"/>
  <match src="function: function [35586,35594]" dest="function: function [52064,52072]"/>
  <match src="string [67373,67392]" dest="string [81802,81816]"/>
  <match src="(: ( [30620,30621]" dest="(: ( [47098,47099]"/>
  <match src="for_statement [38053,38466]" dest="for_statement [54531,54944]"/>
  <match src="identifier: Decimal [48508,48515]" dest="identifier: Decimal [17089,17096]"/>
  <match src="user_defined_type [8300,8304]" dest="user_defined_type [8300,8304]"/>
  <match src="address: address [27625,27632]" dest="address: address [56425,56432]"/>
  <match src="state_mutability [8852,8856]" dest="state_mutability [8852,8856]"/>
  <match src="primitive_type [15314,15321]" dest="primitive_type [25841,25848]"/>
  <match src="function_body [67771,67950]" dest="function_body [68013,68302]"/>
  <match src="uint: uint [55081,55085]" dest="uint: uint [21173,21177]"/>
  <match src="(: ( [48024,48025]" dest="(: ( [16605,16606]"/>
  <match src="uint256: uint256 [12841,12848]" dest="uint256: uint256 [23368,23375]"/>
  <match src=":: : [9776,9777]" dest=":: : [9776,9777]"/>
  <match src="parameter [46274,46281]" dest="parameter [14855,14862]"/>
  <match src="identifier: Decimal [47162,47169]" dest="identifier: Decimal [15743,15750]"/>
  <match src="(: ( [31253,31254]" dest="(: ( [47731,47732]"/>
  <match src="identifier: lastReserve [69880,69891]" dest="identifier: staged [72451,72457]"/>
  <match src="visibility [55255,55263]" dest="visibility [21347,21355]"/>
  <match src=".: . [85594,85595]" dest=".: . [72766,72767]"/>
  <match src="function: function [55047,55055]" dest="function: function [21139,21147]"/>
  <match src="type_name [53088,53095]" dest="type_name [56186,56193]"/>
  <match src="string_literal [109806,109828]" dest="string_literal [69582,69604]"/>
  <match src="identifier: balanceCheck [84021,84033]" dest="identifier: balanceCheck [60152,60164]"/>
  <match src="identifier: epoch [98915,98920]" dest="identifier: epoch [34920,34925]"/>
  <match src="(: ( [31391,31392]" dest="(: ( [47869,47870]"/>
  <match src="identifier: OpenZeppelinUpgradesAddress [88219,88246]" dest="identifier: OpenZeppelinUpgradesAddress [73886,73913]"/>
  <match src="]: ] [107387,107388]" dest="]: ] [43392,43393]"/>
  <match src="call_argument [30119,30123]" dest="call_argument [46597,46601]"/>
  <match src="identifier: b [4150,4151]" dest="identifier: b [4150,4151]"/>
  <match src="(: ( [96301,96302]" dest="(: ( [32306,32307]"/>
  <match src="identifier: _state [96465,96471]" dest="identifier: _state [32470,32476]"/>
  <match src="call_expression [111244,111252]" dest="call_expression [56239,56247]"/>
  <match src="identifier: amount [103102,103108]" dest="identifier: amount [39107,39113]"/>
  <match src=".: . [104811,104812]" dest=".: . [40816,40817]"/>
  <match src="(: ( [96520,96521]" dest="(: ( [32525,32526]"/>
  <match src="call_expression [6801,6819]" dest="call_expression [6801,6819]"/>
  <match src="member_expression [95715,95730]" dest="member_expression [31720,31735]"/>
  <match src="type_name [10143,10147]" dest="type_name [10143,10147]"/>
  <match src=".: . [107216,107217]" dest=".: . [43221,43222]"/>
  <match src="{: { [69244,69245]" dest="{: { [66905,66906]"/>
  <match src="member_expression [99635,99667]" dest="member_expression [35640,35672]"/>
  <match src="&quot;: &quot; [82772,82773]" dest="&quot;: &quot; [70705,70706]"/>
  <match src="identifier: amount [52118,52124]" dest="identifier: amount [26753,26759]"/>
  <match src="return: return [95914,95920]" dest="return: return [31919,31925]"/>
  <match src="(: ( [96931,96932]" dest="(: ( [32936,32937]"/>
  <match src=".: . [10740,10741]" dest=".: . [10740,10741]"/>
  <match src="member_expression [108240,108263]" dest="member_expression [44245,44268]"/>
  <match src="): ) [12816,12817]" dest="): ) [23343,23344]"/>
  <match src="primitive_type [98154,98161]" dest="primitive_type [34159,34166]"/>
  <match src="uint256: uint256 [90486,90493]" dest="uint256: uint256 [28913,28920]"/>
  <match src="string_literal [20784,20823]" dest="string_literal [64421,64468]"/>
  <match src="parameter [105053,105067]" dest="parameter [41058,41072]"/>
  <match src="identifier: Bond [82972,82976]" dest="identifier: Unbond [70947,70953]"/>
  <match src="primitive_type [86319,86326]" dest="primitive_type [61851,61858]"/>
  <match src="}: } [7554,7555]" dest="}: } [7554,7555]"/>
  <match src="identifier: D256 [9013,9017]" dest="identifier: D256 [9013,9017]"/>
  <match src="identifier: file [32719,32723]" dest="identifier: file [49197,49201]"/>
  <match src="identifier: EPOCH_PERIOD [44330,44342]" dest="identifier: EPOCH_PERIOD [12911,12923]"/>
  <match src="array_access [103544,103568]" dest="array_access [39549,39573]"/>
  <match src="function_body [97699,97760]" dest="function_body [33704,33765]"/>
  <match src="type_name [47291,47303]" dest="type_name [15872,15884]"/>
  <match src="{: { [99172,99173]" dest="{: { [35177,35178]"/>
  <match src="identifier: Decimal [68648,68655]" dest="identifier: Decimal [66138,66145]"/>
  <match src="memory: memory [10011,10017]" dest="memory: memory [10011,10017]"/>
  <match src="identifier: SafeMath [6446,6454]" dest="identifier: SafeMath [6446,6454]"/>
  <match src="parameter [3935,3944]" dest="parameter [3935,3944]"/>
  <match src="function: function [79610,79618]" dest="function: function [61577,61585]"/>
  <match src="identifier: z [38448,38449]" dest="identifier: z [54926,54927]"/>
  <match src="identifier: totalCoupons [96402,96414]" dest="identifier: totalCoupons [32407,32419]"/>
  <match src="identifier: epochs [104855,104861]" dest="identifier: epochs [40860,40866]"/>
  <match src="member_expression [7517,7527]" dest="member_expression [7517,7527]"/>
  <match src="parameter [53088,53103]" dest="parameter [56186,56201]"/>
  <match src="==: == [84301,84303]" dest="==: == [71940,71942]"/>
  <match src="): ) [84800,84801]" dest="): ) [72358,72359]"/>
  <match src="): ) [100657,100658]" dest="): ) [36662,36663]"/>
  <match src="address: address [14762,14769]" dest="address: address [25289,25296]"/>
  <match src="identifier: valid [68838,68843]" dest="identifier: valid [68057,68062]"/>
  <match src="contract_body [54489,56910]" dest="contract_body [20581,23002]"/>
  <match src="address: address [101885,101892]" dest="address: address [37890,37897]"/>
  <match src="call_expression [22930,22998]" dest="call_expression [63734,63837]"/>
  <match src="visibility [54732,54740]" dest="visibility [20824,20832]"/>
  <match src=".: . [46569,46570]" dest=".: . [15150,15151]"/>
  <match src="&quot;: &quot; [86131,86132]" dest="&quot;: &quot; [80511,80512]"/>
  <match src="function_body [6783,6827]" dest="function_body [6783,6827]"/>
  <match src="identifier: owner [105890,105895]" dest="identifier: owner [41895,41900]"/>
  <match src="private: private [44209,44216]" dest="private: private [12790,12797]"/>
  <match src="}: } [108069,108070]" dest="}: } [44074,44075]"/>
  <match src="memory: memory [102864,102870]" dest="memory: memory [38869,38875]"/>
  <match src="(: ( [106262,106263]" dest="(: ( [42267,42268]"/>
  <match src="]: ] [97879,97880]" dest="]: ] [33884,33885]"/>
  <match src="returns: returns [1955,1962]" dest="returns: returns [1955,1962]"/>
  <match src="user_defined_type [6765,6769]" dest="user_defined_type [6765,6769]"/>
  <match src="(: ( [103682,103683]" dest="(: ( [39687,39688]"/>
  <match src="identifier: mint [56555,56559]" dest="identifier: mint [22647,22651]"/>
  <match src="identifier: priceCumulative [68051,68066]" dest="identifier: endsAfter [80344,80353]"/>
  <match src="type_name [6521,6528]" dest="type_name [6521,6528]"/>
  <match src="binary_expression [10499,10521]" dest="binary_expression [10499,10521]"/>
  <match src="event_paramater [82945,82958]" dest="event_paramater [61554,61567]"/>
  <match src="primitive_type [12841,12848]" dest="primitive_type [23368,23375]"/>
  <match src=",: , [105036,105037]" dest=",: , [41041,41042]"/>
  <match src=",: , [1069,1070]" dest=",: , [1069,1070]"/>
  <match src="}: } [46900,46901]" dest="}: } [15481,15482]"/>
  <match src="public: public [96417,96423]" dest="public: public [32422,32428]"/>
  <match src="returns: returns [8862,8869]" dest="returns: returns [8862,8869]"/>
  <match src="call_argument [53425,53427]" dest="call_argument [64810,64812]"/>
  <match src="variable_declaration_statement [84185,84256]" dest="variable_declaration_statement [66641,66693]"/>
  <match src="address: address [81324,81331]" dest="address: address [80175,80182]"/>
  <match src="}: } [102079,102080]" dest="}: } [38084,38085]"/>
  <match src="memory: memory [102564,102570]" dest="memory: memory [38569,38575]"/>
  <match src="assembly_statement [100991,101045]" dest="assembly_statement [36996,37050]"/>
  <match src="variable_declaration [88694,88706]" dest="variable_declaration [74361,74373]"/>
  <match src="internal: internal [4759,4767]" dest="internal: internal [4759,4767]"/>
  <match src="): ) [85439,85440]" dest="): ) [80083,80084]"/>
  <match src="event_paramater [82826,82839]" dest="event_paramater [70762,70775]"/>
  <match src="): ) [96332,96333]" dest="): ) [32337,32338]"/>
  <match src="function_body [46414,46482]" dest="function_body [14995,15063]"/>
  <match src="visibility [100773,100779]" dest="visibility [36778,36784]"/>
  <match src="type_name [35615,35622]" dest="type_name [52093,52100]"/>
  <match src="identifier: epochs [99054,99060]" dest="identifier: epochs [35059,35065]"/>
  <match src="struct_member [90833,90848]" dest="struct_member [29260,29275]"/>
  <match src="(: ( [9303,9304]" dest="(: ( [9303,9304]"/>
  <match src="): ) [8560,8561]" dest="): ) [8560,8561]"/>
  <match src="identifier: payloadB [30968,30976]" dest="identifier: payloadB [47446,47454]"/>
  <match src="): ) [85538,85539]" dest="): ) [80040,80041]"/>
  <match src="identifier: USDC [43825,43829]" dest="identifier: USDC [12406,12410]"/>
  <match src="event_paramater [55871,55886]" dest="event_paramater [21963,21978]"/>
  <match src="memory: memory [9674,9680]" dest="memory: memory [9674,9680]"/>
  <match src=",: , [85784,85785]" dest=",: , [81245,81246]"/>
  <match src="): ) [2012,2013]" dest="): ) [2012,2013]"/>
  <match src="identifier: Status [97378,97384]" dest="identifier: Status [33383,33389]"/>
  <match src="call_expression [31542,31561]" dest="call_expression [48020,48039]"/>
  <match src="call_argument [85489,85500]" dest="call_argument [80025,80034]"/>
  <match src="(: ( [45552,45553]" dest="(: ( [14133,14134]"/>
  <match src="returns: returns [54810,54817]" dest="returns: returns [20902,20909]"/>
  <match src="variable_declaration_statement [98279,98349]" dest="variable_declaration_statement [34284,34354]"/>
  <match src="identifier: votes [90883,90888]" dest="identifier: votes [29310,29315]"/>
  <match src="identifier: value [8914,8919]" dest="identifier: value [8914,8919]"/>
  <match src=".: . [95364,95365]" dest=".: . [31369,31370]"/>
  <match src="type_name [90899,90903]" dest="type_name [29326,29330]"/>
  <match src="parameter [37607,37619]" dest="parameter [54085,54097]"/>
  <match src="{: { [9554,9555]" dest="{: { [9554,9555]"/>
  <match src="identifier: value [9809,9814]" dest="identifier: value [9809,9814]"/>
  <match src="call_argument [4103,4108]" dest="call_argument [4103,4108]"/>
  <match src="identifier: staged [96777,96783]" dest="identifier: staged [32782,32788]"/>
  <match src="function: function [6835,6843]" dest="function: function [6835,6843]"/>
  <match src="identifier: candidate [107716,107725]" dest="identifier: candidate [43721,43730]"/>
  <match src="identifier: s [55589,55590]" dest="identifier: s [21681,21682]"/>
  <match src="visibility [103489,103497]" dest="visibility [39494,39502]"/>
  <match src="identifier: decrementBalanceOf [103736,103754]" dest="identifier: decrementBalanceOf [39741,39759]"/>
  <match src="}: } [103383,103384]" dest="}: } [39388,39389]"/>
  <match src="identifier: lockedUntil [90277,90288]" dest="identifier: lockedUntil [28704,28715]"/>
  <match src=".: . [79724,79725]" dest=".: . [61898,61899]"/>
  <match src="number_literal: 0 [97204,97205]" dest="number_literal: 0 [33209,33210]"/>
  <match src="(: ( [100365,100366]" dest="(: ( [36370,36371]"/>
  <match src="return_statement [100522,100577]" dest="return_statement [36527,36582]"/>
  <match src="identifier: redeemable [91168,91178]" dest="identifier: redeemable [29595,29605]"/>
  <match src="indexed: indexed [27209,27216]" dest="indexed: indexed [61189,61196]"/>
  <match src="]: ] [36372,36373]" dest="]: ] [52850,52851]"/>
  <match src="call_argument [32153,32172]" dest="call_argument [48631,48650]"/>
  <match src="member_expression [33397,33413]" dest="member_expression [49875,49891]"/>
  <match src=".: . [102913,102914]" dest=".: . [38918,38919]"/>
  <match src="expression_statement [106102,106153]" dest="expression_statement [42107,42158]"/>
  <match src="identifier: getSupplyChangeLimit [48423,48443]" dest="identifier: getSupplyChangeLimit [17004,17024]"/>
  <match src=".: . [97283,97284]" dest=".: . [33288,33289]"/>
  <match src="state_mutability [100639,100643]" dest="state_mutability [36644,36648]"/>
  <match src="visibility [47916,47924]" dest="visibility [16497,16505]"/>
  <match src="function_definition [12938,13006]" dest="function_definition [23465,23533]"/>
  <match src="returns: returns [17086,17093]" dest="returns: returns [57191,57198]"/>
  <match src="identifier: D256 [8027,8031]" dest="identifier: D256 [8027,8031]"/>
  <match src="primitive_type [56116,56123]" dest="primitive_type [22208,22215]"/>
  <match src="(: ( [9176,9177]" dest="(: ( [9176,9177]"/>
  <match src="function_definition [93172,93492]" dest="function_definition [76525,76845]"/>
  <match src="return_type_definition [17645,17662]" dest="return_type_definition [58880,58897]"/>
  <match src="internal: internal [8267,8275]" dest="internal: internal [8267,8275]"/>
  <match src="pure: pure [993,997]" dest="pure: pure [993,997]"/>
  <match src="call_expression [85869,85989]" dest="call_expression [80214,80323]"/>
  <match src="identifier: b [8936,8937]" dest="identifier: b [8936,8937]"/>
  <match src="member_expression [102438,102459]" dest="member_expression [38443,38464]"/>
  <match src="state_mutability [97977,97981]" dest="state_mutability [33982,33986]"/>
  <match src="{: { [104690,104691]" dest="{: { [40695,40696]"/>
  <match src="memory: memory [10442,10448]" dest="memory: memory [10442,10448]"/>
  <match src="identifier: Provide [83140,83147]" dest="identifier: Commit [78463,78469]"/>
  <match src=",: , [2343,2344]" dest=",: , [2343,2344]"/>
  <match src="): ) [4757,4758]" dest="): ) [4757,4758]"/>
  <match src="type_name [91135,91142]" dest="type_name [29562,29569]"/>
  <match src="(: ( [8490,8491]" dest="(: ( [8490,8491]"/>
  <match src="function_definition [48679,48767]" dest="function_definition [17260,17348]"/>
  <match src="function_definition [56074,56125]" dest="function_definition [22166,22217]"/>
  <match src="memory: memory [9192,9198]" dest="memory: memory [9192,9198]"/>
  <match src="primitive_type [43800,43807]" dest="primitive_type [12381,12388]"/>
  <match src="function: function [48414,48422]" dest="function: function [16995,17003]"/>
  <match src="): ) [85616,85617]" dest="): ) [72788,72789]"/>
  <match src="external: external [55093,55101]" dest="external: external [21185,21193]"/>
  <match src="(: ( [53087,53088]" dest="(: ( [56185,56186]"/>
  <match src="enum_declaration [90654,90726]" dest="enum_declaration [29081,29153]"/>
  <match src="uint: uint [55658,55662]" dest="uint: uint [21750,21754]"/>
  <match src=",: , [105830,105831]" dest=",: , [41835,41836]"/>
  <match src="return_type_definition [55463,55477]" dest="return_type_definition [21555,21569]"/>
  <match src=".: . [98454,98455]" dest=".: . [34459,34460]"/>
  <match src="uint256: uint256 [35615,35622]" dest="uint256: uint256 [52093,52100]"/>
  <match src="address: address [91360,91367]" dest="address: address [29787,29794]"/>
  <match src="primitive_type [96882,96889]" dest="primitive_type [32887,32894]"/>
  <match src="identifier: State [91379,91384]" dest="identifier: State [29806,29811]"/>
  <match src="=: = [45269,45270]" dest="=: = [13850,13851]"/>
  <match src="}: } [38498,38499]" dest="}: } [54976,54977]"/>
  <match src="call_argument [87435,87444]" dest="call_argument [79254,79261]"/>
  <match src="function: function [106505,106513]" dest="function: function [42510,42518]"/>
  <match src="]: ] [108034,108035]" dest="]: ] [44039,44040]"/>
  <match src=".: . [104191,104192]" dest=".: . [40196,40197]"/>
  <match src="identifier: reason [29896,29902]" dest="identifier: reason [46374,46380]"/>
  <match src="identifier: COMMA [34293,34298]" dest="identifier: COMMA [50771,50776]"/>
  <match src="): ) [35213,35214]" dest="): ) [51691,51692]"/>
  <match src="visibility [56572,56580]" dest="visibility [22664,22672]"/>
  <match src="private: private [43992,43999]" dest="private: private [12573,12580]"/>
  <match src="return_type_definition [5450,5467]" dest="return_type_definition [5450,5467]"/>
  <match src="type_name [27625,27632]" dest="type_name [56425,56432]"/>
  <match src="identifier: i [38081,38082]" dest="identifier: i [54559,54560]"/>
  <match src="=: = [45180,45181]" dest="=: = [13761,13762]"/>
  <match src="member_expression [97534,97549]" dest="member_expression [33539,33554]"/>
  <match src="pure: pure [8852,8856]" dest="pure: pure [8852,8856]"/>
  <match src="return_statement [11229,11238]" dest="return_statement [11229,11238]"/>
  <match src="identifier: must [29982,29986]" dest="identifier: must [46460,46464]"/>
  <match src="type_name [54511,54518]" dest="type_name [20603,20610]"/>
  <match src="type_name [56670,56674]" dest="type_name [22762,22766]"/>
  <match src="(: ( [64750,64751]" dest="(: ( [27539,27540]"/>
  <match src="identifier: coupons [91220,91227]" dest="identifier: coupons [29647,29654]"/>
  <match src="function: function [93645,93653]" dest="function: function [76998,77006]"/>
  <match src=",: , [22875,22876]" dest=",: , [64025,64026]"/>
  <match src="variable_declaration_statement [35808,35826]" dest="variable_declaration_statement [52286,52304]"/>
  <match src="array_access [99837,99880]" dest="array_access [35842,35885]"/>
  <match src="string_literal [93380,93394]" dest="string_literal [76733,76747]"/>
  <match src="identifier: add [7528,7531]" dest="identifier: add [7528,7531]"/>
  <match src="(: ( [83450,83451]" dest="(: ( [57562,57563]"/>
  <match src="(: ( [99745,99746]" dest="(: ( [35750,35751]"/>
  <match src="call_argument [83950,83960]" dest="call_argument [72561,72571]"/>
  <match src="primitive_type [90269,90276]" dest="primitive_type [28696,28703]"/>
  <match src="parameter [93191,93216]" dest="parameter [76544,76569]"/>
  <match src="uint256: uint256 [17398,17405]" dest="uint256: uint256 [59515,59522]"/>
  <match src=",: , [83015,83016]" dest=",: , [70992,70993]"/>
  <match src="identifier: sub [7729,7732]" dest="identifier: sub [7729,7732]"/>
  <match src="visibility [44257,44264]" dest="visibility [12838,12845]"/>
  <match src="visibility [80675,80683]" dest="visibility [57623,57631]"/>
  <match src="(: ( [53563,53564]" dest="(: ( [64855,64856]"/>
  <match src="(: ( [95312,95313]" dest="(: ( [31317,31318]"/>
  <match src="): ) [83740,83741]" dest="): ) [57340,57341]"/>
  <match src="): ) [46982,46983]" dest="): ) [15563,15564]"/>
  <match src="identifier: D256 [9304,9308]" dest="identifier: D256 [9304,9308]"/>
  <match src="type_cast_expression [43832,43883]" dest="type_cast_expression [12413,12464]"/>
  <match src="uint256: uint256 [97151,97158]" dest="uint256: uint256 [33156,33163]"/>
  <match src="visibility [99308,99314]" dest="visibility [35313,35319]"/>
  <match src="call_argument [30269,30288]" dest="call_argument [46747,46766]"/>
  <match src="): ) [11212,11213]" dest="): ) [11212,11213]"/>
  <match src="call_argument [83969,84007]" dest="call_argument [81445,81459]"/>
  <match src="function_definition [7362,7555]" dest="function_definition [7362,7555]"/>
  <match src="uint256: uint256 [97690,97697]" dest="uint256: uint256 [33695,33702]"/>
  <match src="): ) [9739,9740]" dest="): ) [9739,9740]"/>
  <match src="identifier: amount [105991,105997]" dest="identifier: amount [41996,42002]"/>
  <match src="): ) [109960,109961]" dest="): ) [69736,69737]"/>
  <match src="array_access [108175,108199]" dest="array_access [44180,44204]"/>
  <match src="function: function [55287,55295]" dest="function: function [21379,21387]"/>
  <match src="uint256: uint256 [104363,104370]" dest="uint256: uint256 [40368,40375]"/>
  <match src="}: } [38836,38837]" dest="}: } [55314,55315]"/>
  <match src=":: : [47181,47182]" dest=":: : [15762,15763]"/>
  <match src="member_expression [103830,103862]" dest="member_expression [39835,39867]"/>
  <match src="primitive_type [16677,16684]" dest="primitive_type [18313,18320]"/>
  <match src="identifier: b [9137,9138]" dest="identifier: b [9137,9138]"/>
  <match src="public: public [93014,93020]" dest="public: public [76367,76373]"/>
  <match src="constant: constant [44851,44859]" dest="constant: constant [13432,13440]"/>
  <match src="identifier: POOL_EXIT_LOCKUP_EPOCHS [45017,45040]" dest="identifier: POOL_EXIT_LOCKUP_EPOCHS [13598,13621]"/>
  <match src="(: ( [96214,96215]" dest="(: ( [32219,32220]"/>
  <match src="identifier: reason [105205,105211]" dest="identifier: reason [41210,41216]"/>
  <match src="uint256: uint256 [97115,97122]" dest="uint256: uint256 [33120,33127]"/>
  <match src="parameter [95007,95020]" dest="parameter [31012,31025]"/>
  <match src="variable_declaration_statement [35836,35851]" dest="variable_declaration_statement [52314,52329]"/>
  <match src="identifier: D256 [11107,11111]" dest="identifier: D256 [11107,11111]"/>
  <match src="{: { [54489,54490]" dest="{: { [20581,20582]"/>
  <match src="returns: returns [56163,56170]" dest="returns: returns [22255,22262]"/>
  <match src="array_access [104151,104175]" dest="array_access [40156,40180]"/>
  <match src=".: . [93753,93754]" dest=".: . [77106,77107]"/>
  <match src="member_expression [100255,100291]" dest="member_expression [36260,36296]"/>
  <match src="member_expression [86949,86966]" dest="member_expression [59581,59594]"/>
  <match src="type_name [32434,32441]" dest="type_name [48912,48919]"/>
  <match src="return_statement [99491,99526]" dest="return_statement [35496,35531]"/>
  <match src="call_expression [86949,86981]" dest="call_expression [59581,59617]"/>
  <match src=",: , [31786,31787]" dest=",: , [48264,48265]"/>
  <match src="call_argument [84897,84907]" dest="call_argument [72486,72496]"/>
  <match src="(: ( [95114,95115]" dest="(: ( [31119,31120]"/>
  <match src=",: , [105395,105396]" dest=",: , [41400,41401]"/>
  <match src="identifier: amount1Out [55902,55912]" dest="identifier: amount1Out [21994,22004]"/>
  <match src="member_expression [103331,103360]" dest="member_expression [39336,39365]"/>
  <match src="call_expression [33025,33044]" dest="call_expression [49503,49522]"/>
  <match src="private: private [66500,66507]" dest="private: private [60982,60989]"/>
  <match src="function: function [84771,84779]" dest="function: function [72329,72337]"/>
  <match src="): ) [13645,13646]" dest="): ) [24172,24173]"/>
  <match src="bytes2: bytes2 [29190,29196]" dest="bytes2: bytes2 [45668,45674]"/>
  <match src="uint256: uint256 [105053,105060]" dest="uint256: uint256 [41058,41065]"/>
  <match src="type_name [100326,100333]" dest="type_name [36331,36338]"/>
  <match src="parameter [54909,54922]" dest="parameter [21001,21014]"/>
  <match src="): ) [46537,46538]" dest="): ) [15118,15119]"/>
  <match src="uint256: uint256 [106332,106339]" dest="uint256: uint256 [42337,42344]"/>
  <match src="function: function [56425,56433]" dest="function: function [22517,22525]"/>
  <match src="binary_expression [38697,38715]" dest="binary_expression [55175,55193]"/>
  <match src="{: { [4791,4792]" dest="{: { [4791,4792]"/>
  <match src="identifier: spender [95538,95545]" dest="identifier: spender [31543,31550]"/>
  <match src="uint256: uint256 [1891,1898]" dest="uint256: uint256 [1891,1898]"/>
  <match src="visibility [105455,105463]" dest="visibility [41460,41468]"/>
  <match src="primitive_type [81240,81247]" dest="primitive_type [60074,60081]"/>
  <match src="type_name [29190,29196]" dest="type_name [45668,45674]"/>
  <match src="(: ( [7219,7220]" dest="(: ( [7219,7220]"/>
  <match src="return: return [97252,97258]" dest="return: return [33257,33263]"/>
  <match src="binary_expression [50856,50874]" dest="binary_expression [63116,63143]"/>
  <match src="emit_statement [21087,21128]" dest="emit_statement [64947,65001]"/>
  <match src="identifier: factory [56083,56090]" dest="identifier: factory [22175,22182]"/>
  <match src="number_literal: 0 [96972,96973]" dest="number_literal: 0 [32977,32978]"/>
  <match src="uint256: uint256 [16752,16759]" dest="uint256: uint256 [18343,18350]"/>
  <match src="identifier: _state [91551,91557]" dest="identifier: _state [29978,29984]"/>
  <match src="uint256: uint256 [5459,5466]" dest="uint256: uint256 [5459,5466]"/>
  <match src="function_definition [105749,106014]" dest="function_definition [41754,42019]"/>
  <match src="call_argument [102488,102494]" dest="call_argument [38493,38499]"/>
  <match src=".: . [107829,107830]" dest=".: . [43834,43835]"/>
  <match src="uint: uint [55243,55247]" dest="uint: uint [21335,21339]"/>
  <match src=".: . [95927,95928]" dest=".: . [31932,31933]"/>
  <match src="uint256: uint256 [100502,100509]" dest="uint256: uint256 [36507,36514]"/>
  <match src="): ) [45695,45696]" dest="): ) [14276,14277]"/>
  <match src="type_name [44201,44208]" dest="type_name [12782,12789]"/>
  <match src="identifier: decrementBalanceOfCoupons [104995,105020]" dest="identifier: decrementBalanceOfCoupons [41000,41025]"/>
  <match src=",: , [52108,52109]" dest=",: , [26743,26744]"/>
  <match src="==: == [9941,9943]" dest="==: == [9941,9943]"/>
  <match src="external: external [83264,83272]" dest="external: external [71301,71309]"/>
  <match src="parameter [9013,9026]" dest="parameter [9013,9026]"/>
  <match src="identifier: _state [106219,106225]" dest="identifier: _state [42224,42230]"/>
  <match src="identifier: payloadC [34413,34421]" dest="identifier: payloadC [50891,50899]"/>
  <match src="view: view [56399,56403]" dest="view: view [22491,22495]"/>
  <match src="struct_member [90350,90364]" dest="struct_member [28777,28791]"/>
  <match src="type_name [90456,90463]" dest="type_name [28883,28890]"/>
  <match src="(: ( [46613,46614]" dest="(: ( [15194,15195]"/>
  <match src="visibility [84802,84810]" dest="visibility [72360,72368]"/>
  <match src="type_name [91424,91435]" dest="type_name [29851,29862]"/>
  <match src="identifier: balance [103890,103897]" dest="identifier: balance [39895,39902]"/>
  <match src="parameter [102043,102047]" dest="parameter [38048,38052]"/>
  <match src="member_expression [81154,81164]" dest="member_expression [83324,83334]"/>
  <match src="member_expression [106219,106248]" dest="member_expression [42224,42253]"/>
  <match src="primitive_type [44122,44129]" dest="primitive_type [12703,12710]"/>
  <match src="{: { [46583,46584]" dest="{: { [15164,15165]"/>
  <match src="call_argument [30968,30976]" dest="call_argument [47446,47454]"/>
  <match src="): ) [96732,96733]" dest="): ) [32737,32738]"/>
  <match src="(: ( [109915,109916]" dest="(: ( [69691,69692]"/>
  <match src="internal: internal [32542,32550]" dest="internal: internal [49020,49028]"/>
  <match src="identifier: outstandingCoupons [97175,97193]" dest="identifier: outstandingCoupons [33180,33198]"/>
  <match src="member_expression [100677,100711]" dest="member_expression [36682,36716]"/>
  <match src="identifier: amount [21456,21462]" dest="identifier: amount [57451,57457]"/>
  <match src="function: function [105420,105428]" dest="function: function [41425,41433]"/>
  <match src="): ) [34343,34344]" dest="): ) [50821,50822]"/>
  <match src="state_mutability [54864,54868]" dest="state_mutability [20956,20960]"/>
  <match src="]: ] [105285,105286]" dest="]: ] [41290,41291]"/>
  <match src="identifier: epochs [99363,99369]" dest="identifier: epochs [35368,35374]"/>
  <match src="uint256: uint256 [77274,77281]" dest="uint256: uint256 [83064,83071]"/>
  <match src="]: ] [98039,98040]" dest="]: ] [34044,34045]"/>
  <match src=".: . [7091,7092]" dest=".: . [7091,7092]"/>
  <match src="(: ( [8016,8017]" dest="(: ( [8016,8017]"/>
  <match src="&quot;: &quot; [20141,20142]" dest="&quot;: &quot; [71180,71181]"/>
  <match src="internal: internal [1941,1949]" dest="internal: internal [1941,1949]"/>
  <match src="comment: // allocate the string [35945,35967]" dest="comment: // allocate the string [52423,52445]"/>
  <match src="}: } [10528,10529]" dest="}: } [10528,10529]"/>
  <match src="array_access [105111,105150]" dest="array_access [41116,41155]"/>
  <match src="[: [ [100134,100135]" dest="[: [ [36139,36140]"/>
  <match src="identifier: pow [8395,8398]" dest="identifier: pow [8395,8398]"/>
  <match src="contract_declaration [94699,101055]" dest="contract_declaration [30704,37060]"/>
  <match src="(: ( [92951,92952]" dest="(: ( [76304,76305]"/>
  <match src="primitive_type [35234,35241]" dest="primitive_type [51712,51719]"/>
  <match src="(: ( [74595,74596]" dest="(: ( [59374,59375]"/>
  <match src="identifier: must [32582,32586]" dest="identifier: must [49060,49064]"/>
  <match src="): ) [65684,65685]" dest="): ) [81986,81987]"/>
  <match src="]: ] [100420,100421]" dest="]: ] [36425,36426]"/>
  <match src="uint256: uint256 [68043,68050]" dest="uint256: uint256 [80336,80343]"/>
  <match src="): ) [83424,83425]" dest="): ) [71460,71461]"/>
  <match src="identifier: balanceOf [86957,86966]" dest="identifier: mint [59590,59594]"/>
  <match src="{: { [90947,90948]" dest="{: { [29374,29375]"/>
  <match src="identifier: self [8350,8354]" dest="identifier: self [8350,8354]"/>
  <match src="identifier: D256 [7385,7389]" dest="identifier: D256 [7385,7389]"/>
  <match src="[: [ [104166,104167]" dest="[: [ [40171,40172]"/>
  <match src="function_definition [97632,97760]" dest="function_definition [33637,33765]"/>
  <match src="type_name [19244,19251]" dest="type_name [18597,18604]"/>
  <match src="{: { [28888,28889]" dest="{: { [45366,45367]"/>
  <match src="primitive_type [29277,29284]" dest="primitive_type [45755,45762]"/>
  <match src="return_statement [8547,8562]" dest="return_statement [8547,8562]"/>
  <match src="external: external [102138,102146]" dest="external: external [38143,38151]"/>
  <match src="view: view [99789,99793]" dest="view: view [35794,35798]"/>
  <match src="function_body [47705,47753]" dest="function_body [16286,16334]"/>
  <match src=".: . [106392,106393]" dest=".: . [42397,42398]"/>
  <match src="visibility [48145,48153]" dest="visibility [16726,16734]"/>
  <match src="call_expression [108264,108284]" dest="call_expression [44269,44289]"/>
  <match src="uint256: uint256 [16790,16797]" dest="uint256: uint256 [83094,83101]"/>
  <match src="identifier: epochs [104812,104818]" dest="identifier: epochs [40817,40823]"/>
  <match src="identifier: div [8204,8207]" dest="identifier: div [8204,8207]"/>
  <match src="parameter [4782,4789]" dest="parameter [4782,4789]"/>
  <match src="): ) [47586,47587]" dest="): ) [16167,16168]"/>
  <match src="(: ( [55402,55403]" dest="(: ( [21494,21495]"/>
  <match src="{: { [6433,6434]" dest="{: { [6433,6434]"/>
  <match src="(: ( [88676,88677]" dest="(: ( [74343,74344]"/>
  <match src="emit: emit [83465,83469]" dest="emit: emit [71474,71478]"/>
  <match src="identifier: msg [85324,85327]" dest="identifier: msg [63409,63412]"/>
  <match src="}: } [9610,9611]" dest="}: } [9610,9611]"/>
  <match src="returns: returns [55394,55401]" dest="returns: returns [21486,21493]"/>
  <match src="identifier: Constants [105525,105534]" dest="identifier: Constants [41530,41539]"/>
  <match src="member_expression [103952,103977]" dest="member_expression [39957,39982]"/>
  <match src="primitive_type [102557,102563]" dest="primitive_type [38562,38568]"/>
  <match src="call_argument [83617,83622]" dest="call_argument [72107,72114]"/>
  <match src="identifier: b [11276,11277]" dest="identifier: b [11276,11277]"/>
  <match src="(: ( [105196,105197]" dest="(: ( [41201,41202]"/>
  <match src="{: { [106208,106209]" dest="{: { [42213,42214]"/>
  <match src=",: , [32842,32843]" dest=",: , [49320,49321]"/>
  <match src="uint256: uint256 [103473,103480]" dest="uint256: uint256 [39478,39485]"/>
  <match src="address: address [96824,96831]" dest="address: address [32829,32836]"/>
  <match src="number_literal: 0 [2629,2630]" dest="number_literal: 0 [2629,2630]"/>
  <match src="parameter [70345,70352]" dest="parameter [62762,62769]"/>
  <match src="primitive_type [3946,3953]" dest="primitive_type [3946,3953]"/>
  <match src="identifier: implementation [110053,110067]" dest="identifier: implementation [69829,69843]"/>
  <match src="memory: memory [10148,10154]" dest="memory: memory [10148,10154]"/>
  <match src="revert: revert [30614,30620]" dest="revert: revert [47092,47098]"/>
  <match src="): ) [100549,100550]" dest="): ) [36554,36555]"/>
  <match src="): ) [50219,50220]" dest="): ) [56521,56522]"/>
  <match src="identifier: D256 [9214,9218]" dest="identifier: D256 [9214,9218]"/>
  <match src="returns: returns [47114,47121]" dest="returns: returns [15695,15702]"/>
  <match src="): ) [13004,13005]" dest="): ) [23531,23532]"/>
  <match src="uint256: uint256 [75535,75542]" dest="uint256: uint256 [71908,71915]"/>
  <match src="external: external [13647,13655]" dest="external: external [24174,24182]"/>
  <match src="address: address [101863,101870]" dest="address: address [37868,37875]"/>
  <match src="memory: memory [9018,9024]" dest="memory: memory [9018,9024]"/>
  <match src="address: address [105799,105806]" dest="address: address [41804,41811]"/>
  <match src="{: { [105464,105465]" dest="{: { [41469,41470]"/>
  <match src="constant: constant [29285,29293]" dest="constant: constant [45763,45771]"/>
  <match src="(: ( [98389,98390]" dest="(: ( [34394,34395]"/>
  <match src="): ) [31819,31820]" dest="): ) [48297,48298]"/>
  <match src="}: } [91050,91051]" dest="}: } [29477,29478]"/>
  <match src="call_expression [83317,83371]" dest="call_expression [71352,71407]"/>
  <match src="(: ( [37281,37282]" dest="(: ( [53759,53760]"/>
  <match src="): ) [46820,46821]" dest="): ) [15401,15402]"/>
  <match src="call_argument [58955,58992]" dest="call_argument [73099,73135]"/>
  <match src="call_argument [86379,86387]" dest="call_argument [72973,72986]"/>
  <match src="type_name [98259,98266]" dest="type_name [34264,34271]"/>
  <match src="): ) [1939,1940]" dest="): ) [1939,1940]"/>
  <match src="member_expression [8618,8628]" dest="member_expression [8618,8628]"/>
  <match src="return: return [76092,76098]" dest="return: return [59226,59232]"/>
  <match src="bytes32: bytes32 [30449,30456]" dest="bytes32: bytes32 [46927,46934]"/>
  <match src="call_argument [9345,9387]" dest="call_argument [9345,9387]"/>
  <match src="identifier: spender [51198,51205]" dest="identifier: spender [64187,64194]"/>
  <match src="call_argument [83419,83424]" dest="call_argument [71455,71460]"/>
  <match src="identifier: b [9025,9026]" dest="identifier: b [9025,9026]"/>
  <match src="number_literal: 0 [35568,35569]" dest="number_literal: 0 [52046,52047]"/>
  <match src="identifier: recordVote [107122,107132]" dest="identifier: recordVote [43127,43137]"/>
  <match src="pure: pure [48605,48609]" dest="pure: pure [17186,17190]"/>
  <match src="identifier: div [3931,3934]" dest="identifier: div [3931,3934]"/>
  <match src="uint256: uint256 [44249,44256]" dest="uint256: uint256 [12830,12837]"/>
  <match src="uint256: uint256 [90204,90211]" dest="uint256: uint256 [28631,28638]"/>
  <match src="bytes32: bytes32 [31722,31729]" dest="bytes32: bytes32 [48200,48207]"/>
  <match src="}: } [35496,35497]" dest="}: } [51974,51975]"/>
  <match src="): ) [107041,107042]" dest="): ) [43046,43047]"/>
  <match src="identifier: _state [97534,97540]" dest="identifier: _state [33539,33545]"/>
  <match src="&quot;: &quot; [1071,1072]" dest="&quot;: &quot; [1071,1072]"/>
  <match src="): ) [98619,98620]" dest="): ) [34624,34625]"/>
  <match src="): ) [46734,46735]" dest="): ) [15315,15316]"/>
  <match src="identifier: Require [87346,87353]" dest="identifier: Require [79138,79145]"/>
  <match src="binary_expression [37424,37441]" dest="binary_expression [53902,53919]"/>
  <match src="): ) [89208,89209]" dest="): ) [74875,74876]"/>
  <match src="identifier: bstr [35990,35994]" dest="identifier: bstr [52468,52472]"/>
  <match src=".: . [104876,104877]" dest=".: . [40881,40882]"/>
  <match src="parameter [106317,106330]" dest="parameter [42322,42335]"/>
  <match src="identifier: epoch [106325,106330]" dest="identifier: epoch [42330,42335]"/>
  <match src="identifier: amount0 [55718,55725]" dest="identifier: amount0 [21810,21817]"/>
  <match src="visibility [9039,9047]" dest="visibility [9039,9047]"/>
  <match src="identifier: balanceCheck [86888,86900]" dest="identifier: mintToDAO [59505,59514]"/>
  <match src="{: { [96734,96735]" dest="{: { [32739,32740]"/>
  <match src="function: function [104598,104606]" dest="function: function [40603,40611]"/>
  <match src="identifier: D256 [7220,7224]" dest="identifier: D256 [7220,7224]"/>
  <match src="call_argument [84450,84463]" dest="call_argument [72051,72064]"/>
  <match src="member_expression [107801,107840]" dest="member_expression [43806,43845]"/>
  <match src="): ) [7911,7912]" dest="): ) [7911,7912]"/>
  <match src="]: ] [107635,107636]" dest="]: ] [43640,43641]"/>
  <match src="call_argument [78125,78131]" dest="call_argument [56593,56599]"/>
  <match src="state_mutability [97356,97360]" dest="state_mutability [33361,33365]"/>
  <match src="call_expression [86002,86143]" dest="call_expression [80421,80523]"/>
  <match src="call_argument [86101,86132]" dest="call_argument [80501,80512]"/>
  <match src="external: external [55592,55600]" dest="external: external [21684,21692]"/>
  <match src="(: ( [85778,85779]" dest="(: ( [59368,59369]"/>
  <match src="function_definition [100874,101052]" dest="function_definition [36879,37057]"/>
  <match src=".: . [86277,86278]" dest=".: . [80375,80376]"/>
  <match src="member_expression [84344,84377]" dest="member_expression [71970,72003]"/>
  <match src="identifier: encodePacked [31334,31346]" dest="identifier: encodePacked [47812,47824]"/>
  <match src="{: { [109693,109694]" dest="{: { [69469,69470]"/>
  <match src="identifier: Decimal [6425,6432]" dest="identifier: Decimal [6425,6432]"/>
  <match src="++: ++ [38082,38084]" dest="++: ++ [54560,54562]"/>
  <match src="return_statement [95812,95842]" dest="return_statement [31817,31847]"/>
  <match src="call_argument [53564,53570]" dest="call_argument [64876,64882]"/>
  <match src="): ) [55091,55092]" dest="): ) [21183,21184]"/>
  <match src="identifier: div [11022,11025]" dest="identifier: div [11022,11025]"/>
  <match src="state_variable_declaration [44992,45046]" dest="state_variable_declaration [13573,13627]"/>
  <match src=".: . [103550,103551]" dest=".: . [39555,39556]"/>
  <match src="(: ( [1493,1494]" dest="(: ( [1493,1494]"/>
  <match src="uint256: uint256 [75650,75657]" dest="uint256: uint256 [67642,67649]"/>
  <match src="type_name [6629,6636]" dest="type_name [6629,6636]"/>
  <match src="expression_statement [84919,85040]" dest="expression_statement [81483,81685]"/>
  <match src=".: . [85480,85481]" dest=".: . [80016,80017]"/>
  <match src=",: , [85601,85602]" dest=",: , [72773,72774]"/>
  <match src="using_directive [73569,73596]" dest="using_directive [56074,56101]"/>
  <match src="): ) [9315,9316]" dest="): ) [9315,9316]"/>
  <match src="call_argument [32657,33100]" dest="call_argument [49135,49578]"/>
  <match src="(: ( [101862,101863]" dest="(: ( [37867,37868]"/>
  <match src="function: function [70303,70311]" dest="function: function [62702,62710]"/>
  <match src="event_definition [27132,27175]" dest="event_definition [61279,61372]"/>
  <match src="(: ( [56115,56116]" dest="(: ( [22207,22208]"/>
  <match src="call_argument [34293,34298]" dest="call_argument [50771,50776]"/>
  <match src="identifier: Transfer [54583,54591]" dest="identifier: Transfer [20675,20683]"/>
  <match src="identifier: value [9359,9364]" dest="identifier: value [9359,9364]"/>
  <match src="{: { [96010,96011]" dest="{: { [32015,32016]"/>
  <match src="): ) [10019,10020]" dest="): ) [10019,10020]"/>
  <match src="call_argument [30668,31033]" dest="call_argument [47146,47511]"/>
  <match src="call_argument [31424,31429]" dest="call_argument [47902,47907]"/>
  <match src="identifier: payloadA [31778,31786]" dest="identifier: payloadA [48256,48264]"/>
  <match src="}: } [91234,91235]" dest="}: } [29661,29662]"/>
  <match src="identifier: sender [86449,86455]" dest="identifier: sender [63351,63357]"/>
  <match src=",: , [33778,33779]" dest=",: , [50256,50257]"/>
  <match src="identifier: _state [103303,103309]" dest="identifier: _state [39308,39314]"/>
  <match src="(: ( [11164,11165]" dest="(: ( [11164,11165]"/>
  <match src="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      * - Multiplication cannot overflow.      */ [2078,2315]" dest="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      * - Multiplication cannot overflow.      */ [2078,2315]"/>
  <match src="): ) [109838,109839]" dest="): ) [69614,69615]"/>
  <match src=".: . [104925,104926]" dest=".: . [40930,40931]"/>
  <match src="identifier: b [2724,2725]" dest="identifier: b [2724,2725]"/>
  <match src="return_type_definition [96316,96333]" dest="return_type_definition [32321,32338]"/>
  <match src="(: ( [93255,93256]" dest="(: ( [76608,76609]"/>
  <match src="primitive_type [13306,13310]" dest="primitive_type [23833,23837]"/>
  <match src="uint256: uint256 [83091,83098]" dest="uint256: uint256 [70895,70902]"/>
  <match src="=: = [29122,29123]" dest="=: = [45600,45601]"/>
  <match src="variable_declaration [36130,36139]" dest="variable_declaration [52608,52617]"/>
  <match src=".: . [105534,105535]" dest=".: . [41539,41540]"/>
  <match src="parameter [77485,77499]" dest="parameter [56729,56743]"/>
  <match src="): ) [36903,36904]" dest="): ) [53381,53382]"/>
  <match src="): ) [9473,9474]" dest="): ) [9473,9474]"/>
  <match src="identifier: _state [96136,96142]" dest="identifier: _state [32141,32147]"/>
  <match src="internal: internal [8838,8846]" dest="internal: internal [8838,8846]"/>
  <match src="user_defined_type [47123,47135]" dest="user_defined_type [15704,15716]"/>
  <match src="identifier: value [9371,9376]" dest="identifier: value [9371,9376]"/>
  <match src="identifier: value [82834,82839]" dest="identifier: value [70770,70775]"/>
  <match src="identifier: FILE [85799,85803]" dest="identifier: FILE [81260,81264]"/>
  <match src="uint256: uint256 [38058,38065]" dest="uint256: uint256 [54536,54543]"/>
  <match src="indexed: indexed [55796,55803]" dest="indexed: indexed [21888,21895]"/>
  <match src="call_argument [36811,36813]" dest="call_argument [53289,53291]"/>
  <match src="call_argument [33071,33077]" dest="call_argument [49549,49555]"/>
  <match src="identifier: offset [98648,98654]" dest="identifier: offset [34653,34659]"/>
  <match src="comment: /* Address */ [45482,45495]" dest="comment: /* Address */ [14063,14076]"/>
  <match src="type_name [80693,80700]" dest="type_name [57641,57648]"/>
  <match src="function: function [106918,106926]" dest="function: function [42923,42931]"/>
  <match src="type_name [11083,11087]" dest="type_name [11083,11087]"/>
  <match src="type_name [7040,7044]" dest="type_name [7040,7044]"/>
  <match src="contract_declaration [92413,93983]" dest="contract_declaration [75766,77336]"/>
  <match src="call_expression [35558,35570]" dest="call_expression [52036,52048]"/>
  <match src="}: } [99093,99094]" dest="}: } [35098,35099]"/>
  <match src="variable_declaration [2679,2688]" dest="variable_declaration [2679,2688]"/>
  <match src="call_argument [86302,86307]" dest="call_argument [80406,80407]"/>
  <match src="(: ( [97193,97194]" dest="(: ( [33198,33199]"/>
  <match src="}: } [35755,35756]" dest="}: } [52233,52234]"/>
  <match src="}: } [47516,47517]" dest="}: } [16097,16098]"/>
  <match src="identifier: amount [105727,105733]" dest="identifier: amount [41732,41738]"/>
  <match src="function: function [47639,47647]" dest="function: function [16220,16228]"/>
  <match src="call_expression [86262,86297]" dest="call_expression [80356,80401]"/>
  <match src="(: ( [31551,31552]" dest="(: ( [48029,48030]"/>
  <match src="expression_statement [106729,106809]" dest="expression_statement [42734,42814]"/>
  <match src="identifier: msg [83768,83771]" dest="identifier: msg [71762,71765]"/>
  <match src="(: ( [106316,106317]" dest="(: ( [42321,42322]"/>
  <match src="call_argument [10078,10082]" dest="call_argument [10078,10082]"/>
  <match src=",: , [54532,54533]" dest=",: , [20624,20625]"/>
  <match src="visibility [3295,3303]" dest="visibility [3295,3303]"/>
  <match src="identifier: expiration [99076,99086]" dest="identifier: expiration [35081,35091]"/>
  <match src="identifier: period [98613,98619]" dest="identifier: period [34618,34624]"/>
  <match src="(: ( [55110,55111]" dest="(: ( [21202,21203]"/>
  <match src="(: ( [22247,22248]" dest="(: ( [62969,62970]"/>
  <match src="identifier: D256 [6888,6892]" dest="identifier: D256 [6888,6892]"/>
  <match src="state_mutability [70331,70335]" dest="state_mutability [62748,62752]"/>
  <match src="state_mutability [56399,56403]" dest="state_mutability [22491,22495]"/>
  <match src="): ) [99170,99171]" dest="): ) [35175,35176]"/>
  <match src="member_expression [7718,7732]" dest="member_expression [7718,7732]"/>
  <match src="call_argument [75829,75836]" dest="call_argument [82126,82133]"/>
  <match src="primitive_type [8245,8252]" dest="primitive_type [8245,8252]"/>
  <match src=",: , [82943,82944]" dest=",: , [83202,83203]"/>
  <match src="uint256: uint256 [52110,52117]" dest="uint256: uint256 [26745,26752]"/>
  <match src="internal: internal [106199,106207]" dest="internal: internal [42204,42212]"/>
  <match src="call_argument [30202,30208]" dest="call_argument [46680,46686]"/>
  <match src="pure: pure [48308,48312]" dest="pure: pure [16889,16893]"/>
  <match src="identifier: decimals [95181,95189]" dest="identifier: decimals [31186,31194]"/>
  <match src="&gt;: &gt; [108308,108309]" dest="&gt;: &gt; [44313,44314]"/>
  <match src="type_name [12841,12848]" dest="type_name [23368,23375]"/>
  <match src=".: . [83896,83897]" dest=".: . [71626,71627]"/>
  <match src="): ) [103587,103588]" dest="): ) [39592,39593]"/>
  <match src="parameter [108432,108449]" dest="parameter [44437,44454]"/>
  <match src="primitive_type [90374,90381]" dest="primitive_type [28801,28808]"/>
  <match src="type_name [1027,1034]" dest="type_name [1027,1034]"/>
  <match src="event_paramater [27150,27173]" dest="event_paramater [61302,61325]"/>
  <match src="parameter [104379,104399]" dest="parameter [40384,40404]"/>
  <match src="function_body [5468,5539]" dest="function_body [5468,5539]"/>
  <match src="(: ( [47818,47819]" dest="(: ( [16399,16400]"/>
  <match src="}: } [47376,47377]" dest="}: } [15957,15958]"/>
  <match src="return: return [38679,38685]" dest="return: return [55157,55163]"/>
  <match src="type_name [45909,45922]" dest="type_name [14490,14503]"/>
  <match src="function_definition [47525,47631]" dest="function_definition [16106,16212]"/>
  <match src="state_mutability [56518,56522]" dest="state_mutability [22610,22614]"/>
  <match src="call_argument [35568,35569]" dest="call_argument [52046,52047]"/>
  <match src="identifier: coupons [105136,105143]" dest="identifier: coupons [41141,41148]"/>
  <match src="identifier: msg [81154,81157]" dest="identifier: msg [83324,83327]"/>
  <match src="uint256: uint256 [95313,95320]" dest="uint256: uint256 [31318,31325]"/>
  <match src="address: address [102105,102112]" dest="address: address [38110,38117]"/>
  <match src="returns: returns [8100,8107]" dest="returns: returns [8100,8107]"/>
  <match src="(: ( [93725,93726]" dest="(: ( [77078,77079]"/>
  <match src="primitive_type [91135,91142]" dest="primitive_type [29562,29569]"/>
  <match src="bytes32: bytes32 [100946,100953]" dest="bytes32: bytes32 [36951,36958]"/>
  <match src="byte: byte [37868,37872]" dest="byte: byte [54346,54350]"/>
  <match src="(: ( [95212,95213]" dest="(: ( [31217,31218]"/>
  <match src="primitive_type [44992,44999]" dest="primitive_type [13573,13580]"/>
  <match src="return_type_definition [47810,47827]" dest="return_type_definition [16391,16408]"/>
  <match src="uint256: uint256 [44835,44842]" dest="uint256: uint256 [13416,13423]"/>
  <match src="primitive_type [55871,55875]" dest="primitive_type [21963,21967]"/>
  <match src="pure: pure [9285,9289]" dest="pure: pure [9285,9289]"/>
  <match src="function_body [95322,95380]" dest="function_body [31327,31385]"/>
  <match src="identifier: amount [78742,78748]" dest="identifier: amount [18904,18910]"/>
  <match src="internal: internal [106082,106090]" dest="internal: internal [42087,42095]"/>
  <match src="primitive_type [107927,107933]" dest="primitive_type [43932,43938]"/>
  <match src="member_expression [108175,108190]" dest="member_expression [44180,44195]"/>
  <match src="function_body [48189,48264]" dest="function_body [16770,16845]"/>
  <match src="): ) [102416,102417]" dest="): ) [38421,38422]"/>
  <match src="call_expression [47162,47214]" dest="call_expression [15743,15795]"/>
  <match src="type_name [102857,102863]" dest="type_name [38862,38868]"/>
  <match src=":: : [48380,48381]" dest=":: : [16961,16962]"/>
  <match src="primitive_type [99282,99289]" dest="primitive_type [35287,35294]"/>
  <match src="{: { [107349,107350]" dest="{: { [43354,43355]"/>
  <match src="identifier: reject [108036,108042]" dest="identifier: reject [44041,44047]"/>
  <match src="type_name [95275,95282]" dest="type_name [31280,31287]"/>
  <match src="user_defined_type [107169,107183]" dest="user_defined_type [43174,43188]"/>
  <match src="expression_statement [2707,2764]" dest="expression_statement [2707,2764]"/>
  <match src="type_name [55984,55991]" dest="type_name [22076,22083]"/>
  <match src=",: , [30513,30514]" dest=",: , [46991,46992]"/>
  <match src="identifier: account [104641,104648]" dest="identifier: account [40646,40653]"/>
  <match src="call_argument [21109,21118]" dest="call_argument [64975,64984]"/>
  <match src="}: } [107104,107105]" dest="}: } [43109,43110]"/>
  <match src="identifier: i [37177,37178]" dest="identifier: i [53655,53656]"/>
  <match src="=: = [43673,43674]" dest="=: = [12254,12255]"/>
  <match src="array_access [107399,107427]" dest="array_access [43404,43432]"/>
  <match src="function: function [54776,54784]" dest="function: function [20868,20876]"/>
  <match src="identifier: epoch [106109,106114]" dest="identifier: epoch [42114,42119]"/>
  <match src="{: { [48374,48375]" dest="{: { [16955,16956]"/>
  <match src="parameter [98154,98161]" dest="parameter [34159,34166]"/>
  <match src="visibility [43992,43999]" dest="visibility [12573,12580]"/>
  <match src="visibility [53298,53304]" dest="visibility [62741,62747]"/>
  <match src="[: [ [104733,104734]" dest="[: [ [40738,40739]"/>
  <match src="(: ( [110067,110068]" dest="(: ( [69843,69844]"/>
  <match src="): ) [107547,107548]" dest="): ) [43552,43553]"/>
  <match src="uint256: uint256 [102258,102265]" dest="uint256: uint256 [38263,38270]"/>
  <match src="identifier: EPOCH_OFFSET [44226,44238]" dest="identifier: EPOCH_OFFSET [12807,12819]"/>
  <match src="block_statement [29988,30390]" dest="block_statement [46466,46868]"/>
  <match src="identifier: totalPhantom [86282,86294]" dest="identifier: periodFor [80380,80389]"/>
  <match src="inheritance_specifier [110842,110847]" dest="inheritance_specifier [82996,83001]"/>
  <match src=".: . [84834,84835]" dest=".: . [72924,72925]"/>
  <match src="identifier: amount [24284,24290]" dest="identifier: amount [56792,56798]"/>
  <match src="): ) [97667,97668]" dest="): ) [33672,33673]"/>
  <match src="(: ( [102998,102999]" dest="(: ( [39003,39004]"/>
  <match src="member_expression [102899,102918]" dest="member_expression [38904,38923]"/>
  <match src="identifier: lockedUntil [108363,108374]" dest="identifier: lockedUntil [44368,44379]"/>
  <match src="primitive_type [102541,102548]" dest="primitive_type [38546,38553]"/>
  <match src="=: = [104846,104847]" dest="=: = [40851,40852]"/>
  <match src=".: . [99075,99076]" dest=".: . [35080,35081]"/>
  <match src="member_expression [106435,106482]" dest="member_expression [42440,42487]"/>
  <match src="contract_body [90647,90926]" dest="contract_body [29074,29353]"/>
  <match src="identifier: account [103560,103567]" dest="identifier: account [39565,39572]"/>
  <match src=",: , [106330,106331]" dest=",: , [42335,42336]"/>
  <match src="array_access [105874,105896]" dest="array_access [41879,41901]"/>
  <match src="identifier: a [1899,1900]" dest="identifier: a [1899,1900]"/>
  <match src="member_expression [85603,85614]" dest="member_expression [72775,72786]"/>
  <match src="identifier: msg [83605,83608]" dest="identifier: msg [72095,72098]"/>
  <match src="(: ( [79627,79628]" dest="(: ( [61590,61591]"/>
  <match src="(: ( [87358,87359]" dest="(: ( [79150,79151]"/>
  <match src="type_name [33769,33773]" dest="type_name [50247,50251]"/>
  <match src="visibility [27830,27838]" dest="visibility [58871,58879]"/>
  <match src="): ) [104038,104039]" dest="): ) [40043,40044]"/>
  <match src="(: ( [83564,83565]" dest="(: ( [72386,72387]"/>
  <match src="(: ( [35604,35605]" dest="(: ( [52082,52083]"/>
  <match src="user_defined_type [91371,91384]" dest="user_defined_type [29798,29811]"/>
  <match src="uint256: uint256 [80702,80709]" dest="uint256: uint256 [57650,57657]"/>
  <match src="primitive_type [44835,44842]" dest="primitive_type [13416,13423]"/>
  <match src="call_expression [84822,84842]" dest="call_expression [72912,72932]"/>
  <match src="identifier: COLON [29679,29684]" dest="identifier: COLON [46157,46162]"/>
  <match src="variable_declaration [36779,36798]" dest="variable_declaration [53257,53276]"/>
  <match src="variable_declaration [69282,69306]" dest="variable_declaration [67081,67097]"/>
  <match src="return_type_definition [56581,56605]" dest="return_type_definition [22673,22697]"/>
  <match src="(: ( [12840,12841]" dest="(: ( [23367,23368]"/>
  <match src="internal: internal [103810,103818]" dest="internal: internal [39815,39823]"/>
  <match src="identifier: msg [84831,84834]" dest="identifier: msg [72921,72924]"/>
  <match src="): ) [47266,47267]" dest="): ) [15847,15848]"/>
  <match src="returns: returns [6879,6886]" dest="returns: returns [6879,6886]"/>
  <match src="): ) [93782,93783]" dest="): ) [77135,77136]"/>
  <match src="): ) [69242,69243]" dest="): ) [68011,68012]"/>
  <match src="primitive_type [72287,72294]" dest="primitive_type [70910,70917]"/>
  <match src="state_mutability [75501,75505]" dest="state_mutability [67326,67330]"/>
  <match src="): ) [86955,86956]" dest="): ) [59588,59589]"/>
  <match src="(: ( [5486,5487]" dest="(: ( [5486,5487]"/>
  <match src="{: { [8318,8319]" dest="{: { [8318,8319]"/>
  <match src="=: = [37912,37913]" dest="=: = [54390,54391]"/>
  <match src="comment: /* Oracle */ [43782,43794]" dest="comment: /* Oracle */ [12363,12375]"/>
  <match src="struct_member [6629,6643]" dest="struct_member [6629,6643]"/>
  <match src="{: { [90445,90446]" dest="{: { [28872,28873]"/>
  <match src=".: . [95721,95722]" dest=".: . [31726,31727]"/>
  <match src=",: , [35398,35399]" dest=",: , [51876,51877]"/>
  <match src="member_expression [104455,104470]" dest="member_expression [40460,40475]"/>
  <match src="identifier: input [38652,38657]" dest="identifier: input [55130,55135]"/>
  <match src="identifier: that [84927,84931]" dest="identifier: that [81491,81495]"/>
  <match src="member_expression [47330,47342]" dest="member_expression [15911,15923]"/>
  <match src="(: ( [56589,56590]" dest="(: ( [22681,22682]"/>
  <match src="visibility [106352,106360]" dest="visibility [42357,42365]"/>
  <match src="): ) [69204,69205]" dest="): ) [66895,66896]"/>
  <match src="): ) [105654,105655]" dest="): ) [41659,41660]"/>
  <match src="string_literal [93785,93846]" dest="string_literal [77138,77199]"/>
  <match src="member_expression [109752,109766]" dest="member_expression [69528,69542]"/>
  <match src="identifier: skim [56795,56799]" dest="identifier: skim [22887,22891]"/>
  <match src="call_struct_argument [7263,7292]" dest="call_struct_argument [7263,7292]"/>
  <match src="primitive_type [27150,27157]" dest="primitive_type [61302,61309]"/>
  <match src="identifier: candidate [100135,100144]" dest="identifier: candidate [36140,36149]"/>
  <match src="uint256: uint256 [46274,46281]" dest="uint256: uint256 [14855,14862]"/>
  <match src="struct_member [90139,90175]" dest="struct_member [28566,28602]"/>
  <match src="return_statement [95708,95738]" dest="return_statement [31713,31743]"/>
  <match src="): ) [33548,33549]" dest="): ) [50026,50027]"/>
  <match src="=: = [37786,37787]" dest="=: = [54264,54265]"/>
  <match src="call_argument [32277,32283]" dest="call_argument [48755,48761]"/>
  <match src="type_name [102122,102129]" dest="type_name [38127,38134]"/>
  <match src="uint256: uint256 [90374,90381]" dest="uint256: uint256 [28801,28808]"/>
  <match src="}: } [4853,4854]" dest="}: } [4853,4854]"/>
  <match src="=: = [106612,106613]" dest="=: = [42617,42618]"/>
  <match src=".: . [106400,106401]" dest=".: . [42405,42406]"/>
  <match src="identifier: self [7598,7602]" dest="identifier: self [7598,7602]"/>
  <match src="public: public [97808,97814]" dest="public: public [33813,33819]"/>
  <match src="): ) [102722,102723]" dest="): ) [38727,38728]"/>
  <match src="visibility [23420,23428]" dest="visibility [57182,57190]"/>
  <match src="variable_declaration_statement [38148,38170]" dest="variable_declaration_statement [54626,54648]"/>
  <match src="{: { [102588,102589]" dest="{: { [38593,38594]"/>
  <match src=".: . [86448,86449]" dest=".: . [63350,63351]"/>
  <match src="type_name [55741,55748]" dest="type_name [21833,21840]"/>
  <match src="external: external [12974,12982]" dest="external: external [23501,23509]"/>
  <match src="(: ( [105783,105784]" dest="(: ( [41788,41789]"/>
  <match src="call_expression [96571,96579]" dest="call_expression [32576,32584]"/>
  <match src="call_argument [103986,103992]" dest="call_argument [39991,39997]"/>
  <match src="inheritance_specifier [92437,92442]" dest="inheritance_specifier [75790,75795]"/>
  <match src="expression_statement [107969,108063]" dest="expression_statement [43974,44068]"/>
  <match src="{: { [109277,109278]" dest="{: { [69053,69054]"/>
  <match src="identifier: to [55149,55151]" dest="identifier: to [21241,21243]"/>
  <match src="identifier: reason [30813,30819]" dest="identifier: reason [47291,47297]"/>
  <match src="binary_expression [4146,4151]" dest="binary_expression [4146,4151]"/>
  <match src="identifier: newPhantom [84274,84284]" dest="identifier: epoch [63226,63231]"/>
  <match src="parameter [10594,10598]" dest="parameter [10594,10598]"/>
  <match src="return: return [96458,96464]" dest="return: return [32463,32469]"/>
  <match src="parameter [69852,69859]" dest="parameter [62937,62944]"/>
  <match src="identifier: strategy [98570,98578]" dest="identifier: strategy [34575,34583]"/>
  <match src="identifier: a [3349,3350]" dest="identifier: a [3349,3350]"/>
  <match src="(: ( [7507,7508]" dest="(: ( [7507,7508]"/>
  <match src=".: . [99210,99211]" dest=".: . [35215,35216]"/>
  <match src="): ) [85855,85856]" dest="): ) [81304,81305]"/>
  <match src="identifier: _transfer [20673,20682]" dest="identifier: transferCoupons [64289,64304]"/>
  <match src="member_expression [106125,106149]" dest="member_expression [42130,42154]"/>
  <match src="): ) [83222,83223]" dest="): ) [78520,78521]"/>
  <match src="}: } [29812,29813]" dest="}: } [46290,46291]"/>
  <match src="%: % [36403,36404]" dest="%: % [52881,52882]"/>
  <match src="comment: // bytes32 are &quot;0x&quot; followed by 32 bytes of data which take up 2 characters each [37676,37756]" dest="comment: // bytes32 are &quot;0x&quot; followed by 32 bytes of data which take up 2 characters each [54154,54234]"/>
  <match src="call_argument [103902,103908]" dest="call_argument [39907,39913]"/>
  <match src="call_expression [31941,32306]" dest="call_expression [48419,48784]"/>
  <match src="return_type_definition [100785,100799]" dest="return_type_definition [36790,36804]"/>
  <match src="parameter [102708,102722]" dest="parameter [38713,38727]"/>
  <match src="yul_path [35392,35398]" dest="yul_path [51870,51876]"/>
  <match src="type_name [10125,10129]" dest="type_name [10125,10129]"/>
  <match src="function_body [8889,8955]" dest="function_body [8889,8955]"/>
  <match src="type_name [98154,98161]" dest="type_name [34159,34166]"/>
  <match src="type_name [108114,108121]" dest="type_name [44119,44126]"/>
  <match src="): ) [108321,108322]" dest="): ) [44326,44327]"/>
  <match src="type_name [44171,44178]" dest="type_name [12752,12759]"/>
  <match src="identifier: b [3954,3955]" dest="identifier: b [3954,3955]"/>
  <match src="visibility [7867,7875]" dest="visibility [7867,7875]"/>
  <match src="call_argument [10515,10516]" dest="call_argument [10515,10516]"/>
  <match src="function: function [11054,11062]" dest="function: function [11054,11062]"/>
  <match src="primitive_type [95213,95218]" dest="primitive_type [31218,31223]"/>
  <match src="call_expression [107608,107664]" dest="call_expression [43613,43669]"/>
  <match src="(: ( [36931,36932]" dest="(: ( [53409,53410]"/>
  <match src="call_argument [97194,97199]" dest="call_argument [33199,33204]"/>
  <match src="type_name [99163,99170]" dest="type_name [35168,35175]"/>
  <match src="identifier: epoch [99290,99295]" dest="identifier: epoch [35295,35300]"/>
  <match src="type_name [107150,107157]" dest="type_name [43155,43162]"/>
  <match src="struct_member [91454,91501]" dest="struct_member [29881,29928]"/>
  <match src="uint256: uint256 [66772,66779]" dest="uint256: uint256 [78306,78313]"/>
  <match src="): ) [8831,8832]" dest="): ) [8831,8832]"/>
  <match src="parameter [97953,97968]" dest="parameter [33958,33973]"/>
  <match src="comment: // '0' [28977,28983]" dest="comment: // '0' [45455,45461]"/>
  <match src="identifier: msg [86047,86050]" dest="identifier: msg [78672,78675]"/>
  <match src="{: { [33328,33329]" dest="{: { [49806,49807]"/>
  <match src="member_expression [67280,67292]" dest="member_expression [81697,81709]"/>
  <match src="if: if [38648,38650]" dest="if: if [55126,55128]"/>
  <match src="]: ] [99864,99865]" dest="]: ] [35869,35870]"/>
  <match src="if_statement [67782,67943]" dest="if_statement [68211,68270]"/>
  <match src="call_expression [109903,110028]" dest="call_expression [69679,69804]"/>
  <match src="function_definition [95172,95248]" dest="function_definition [31177,31253]"/>
  <match src="identifier: USDC [45715,45719]" dest="identifier: USDC [14296,14300]"/>
  <match src="uint256: uint256 [45224,45231]" dest="uint256: uint256 [13805,13812]"/>
  <match src="call_argument [20784,20823]" dest="call_argument [64421,64468]"/>
  <match src="call_expression [110053,110069]" dest="call_expression [69829,69845]"/>
  <match src="primitive_type [4737,4744]" dest="primitive_type [4737,4744]"/>
  <match src="identifier: candidate [100273,100282]" dest="identifier: candidate [36278,36287]"/>
  <match src="identifier: DEBT_RATIO_CAP [48382,48396]" dest="identifier: DEBT_RATIO_CAP [16963,16977]"/>
  <match src="identifier: amount [53180,53186]" dest="identifier: amount [56262,56268]"/>
  <match src="internal: internal [80675,80683]" dest="internal: internal [57623,57631]"/>
  <match src="parenthesized_expression [33349,33718]" dest="parenthesized_expression [49827,50196]"/>
  <match src="): ) [7743,7744]" dest="): ) [7743,7744]"/>
  <match src="type_name [95688,95695]" dest="type_name [31693,31700]"/>
  <match src="uint256: uint256 [100366,100373]" dest="uint256: uint256 [36371,36378]"/>
  <match src="array_access [36366,36373]" dest="array_access [52844,52851]"/>
  <match src="mstore: mstore [35385,35391]" dest="mstore: mstore [51863,51869]"/>
  <match src="): ) [95092,95093]" dest="): ) [31097,31098]"/>
  <match src="{: { [108142,108143]" dest="{: { [44147,44148]"/>
  <match src="{: { [29966,29967]" dest="{: { [46444,46445]"/>
  <match src="parameter [31797,31813]" dest="parameter [48275,48291]"/>
  <match src="false [67925,67930]" dest="false [82045,82050]"/>
  <match src="function: function [93172,93180]" dest="function: function [76525,76533]"/>
  <match src="state_mutability [94993,94997]" dest="state_mutability [30998,31002]"/>
  <match src=",: , [55656,55657]" dest=",: , [21748,21749]"/>
  <match src="identifier: Require [67280,67287]" dest="identifier: Require [81697,81704]"/>
  <match src="member_expression [104848,104861]" dest="member_expression [40853,40866]"/>
  <match src="type_cast_expression [38786,38826]" dest="type_cast_expression [55264,55304]"/>
  <match src="call_argument [103683,103693]" dest="call_argument [39688,39698]"/>
  <match src="indexed: indexed [83059,83066]" dest="indexed: indexed [70863,70870]"/>
  <match src="identifier: account [107141,107148]" dest="identifier: account [43146,43153]"/>
  <match src="primitive_type [36660,36667]" dest="primitive_type [53138,53145]"/>
  <match src="comment: /**      * @dev Returns the amount of tokens in existence.      */ [12721,12789]" dest="comment: /**      * @dev Returns the amount of tokens in existence.      */ [23248,23316]"/>
  <match src="identifier: self [10364,10368]" dest="identifier: self [10364,10368]"/>
  <match src="parameter [12957,12972]" dest="parameter [23484,23499]"/>
  <match src="): ) [95577,95578]" dest="): ) [31582,31583]"/>
  <match src="identifier: j [35914,35915]" dest="identifier: j [52392,52393]"/>
  <match src="type_name [10181,10185]" dest="type_name [10181,10185]"/>
  <match src="type_name [8436,8443]" dest="type_name [8436,8443]"/>
  <match src=".: . [106114,106115]" dest=".: . [42119,42120]"/>
  <match src="): ) [38550,38551]" dest="): ) [55028,55029]"/>
  <match src="parameter [9868,9881]" dest="parameter [9868,9881]"/>
  <match src="call_argument [10509,10513]" dest="call_argument [10509,10513]"/>
  <match src="call_struct_argument [9771,9815]" dest="call_struct_argument [9771,9815]"/>
  <match src="number_literal: 1 [43509,43510]" dest="number_literal: 1 [12090,12091]"/>
  <match src="for_statement [34921,35508]" dest="for_statement [51399,51986]"/>
  <match src="state_mutability [97815,97819]" dest="state_mutability [33820,33824]"/>
  <match src="state_variable_declaration [44594,44656]" dest="state_variable_declaration [13175,13237]"/>
  <match src="uint256: uint256 [48050,48057]" dest="uint256: uint256 [16631,16638]"/>
  <match src="type_name [9906,9910]" dest="type_name [9906,9910]"/>
  <match src="(: ( [48520,48521]" dest="(: ( [17101,17102]"/>
  <match src="comment: // find the last non-zero byte in order to determine the length [35118,35181]" dest="comment: // find the last non-zero byte in order to determine the length [51596,51659]"/>
  <match src="): ) [107741,107742]" dest="): ) [43746,43747]"/>
  <match src="identifier: account [97275,97282]" dest="identifier: account [33280,33287]"/>
  <match src="type_name [94751,94758]" dest="type_name [30756,30763]"/>
  <match src="]: ] [104478,104479]" dest="]: ] [40483,40484]"/>
  <match src="type_name [32513,32520]" dest="type_name [48991,48998]"/>
  <match src="function_definition [10821,11046]" dest="function_definition [10821,11046]"/>
  <match src="parameter [97690,97697]" dest="parameter [33695,33702]"/>
  <match src="address: address [55741,55748]" dest="address: address [21833,21840]"/>
  <match src="return_statement [97252,97299]" dest="return_statement [33257,33304]"/>
  <match src="identifier: denominator [10912,10923]" dest="identifier: denominator [10912,10923]"/>
  <match src="internal: internal [46940,46948]" dest="internal: internal [15521,15529]"/>
  <match src="function_body [45802,45850]" dest="function_body [14383,14431]"/>
  <match src="function_body [8318,8378]" dest="function_body [8318,8378]"/>
  <match src="number_literal: 2 [10520,10521]" dest="number_literal: 2 [10520,10521]"/>
  <match src="identifier: _state [103130,103136]" dest="identifier: _state [39135,39141]"/>
  <match src=",: , [87017,87018]" dest=",: , [59412,59413]"/>
  <match src="identifier: value [54564,54569]" dest="identifier: value [20656,20661]"/>
  <match src=".: . [10622,10623]" dest=".: . [10622,10623]"/>
  <match src="type_name [16677,16684]" dest="type_name [18313,18320]"/>
  <match src="type_name [29400,29404]" dest="type_name [45878,45882]"/>
  <match src=".: . [106768,106769]" dest=".: . [42773,42774]"/>
  <match src="uint: uint [56590,56594]" dest="uint: uint [22682,22686]"/>
  <match src="identifier: account [97417,97424]" dest="identifier: account [33422,33429]"/>
  <match src="(: ( [30009,30010]" dest="(: ( [46487,46488]"/>
  <match src="}: } [46472,46473]" dest="}: } [15053,15054]"/>
  <match src="identifier: burnFrom [24205,24213]" dest="identifier: redeemToAccount [56696,56711]"/>
  <match src="identifier: Context [16599,16606]" dest="identifier: Comptroller [60913,60924]"/>
  <match src="identifier: totalBonded [87003,87014]" dest="identifier: totalRedeemable [59394,59409]"/>
  <match src="identifier: this [86975,86979]" dest="identifier: this [59603,59607]"/>
  <match src="identifier: isInitialized [109931,109944]" dest="identifier: isInitialized [69707,69720]"/>
  <match src="identifier: add [103645,103648]" dest="identifier: add [39650,39653]"/>
  <match src="return_type_definition [48460,48489]" dest="return_type_definition [17041,17070]"/>
  <match src=",: , [31711,31712]" dest=",: , [48189,48190]"/>
  <match src="function_body [100099,100160]" dest="function_body [36104,36165]"/>
  <match src="parameter [102541,102555]" dest="parameter [38546,38560]"/>
  <match src="return: return [99349,99355]" dest="return: return [35354,35360]"/>
  <match src="identifier: owner [97946,97951]" dest="identifier: owner [33951,33956]"/>
  <match src="identifier: owner [54527,54532]" dest="identifier: owner [20619,20624]"/>
  <match src="state_mutability [3304,3308]" dest="state_mutability [3304,3308]"/>
  <match src="type_name [56172,56179]" dest="type_name [22264,22271]"/>
  <match src="function_definition [55486,55601]" dest="function_definition [21578,21693]"/>
  <match src="identifier: RPAREN [34449,34455]" dest="identifier: RPAREN [50927,50933]"/>
  <match src="returns: returns [56471,56478]" dest="returns: returns [22563,22570]"/>
  <match src="call_expression [104541,104582]" dest="call_expression [40546,40587]"/>
  <match src="event_paramater [55727,55739]" dest="event_paramater [21819,21831]"/>
  <match src="identifier: amount [13280,13286]" dest="identifier: amount [23807,23813]"/>
  <match src="call_expression [83727,83741]" dest="call_expression [57327,57341]"/>
  <match src="assignment_expression [102899,102960]" dest="assignment_expression [38904,38965]"/>
  <match src="{: { [34708,34709]" dest="{: { [51186,51187]"/>
  <match src="parameter [10125,10141]" dest="parameter [10125,10141]"/>
  <match src="(: ( [31918,31919]" dest="(: ( [48396,48397]"/>
  <match src="): ) [103281,103282]" dest="): ) [39286,39287]"/>
  <match src="call_expression [29711,29737]" dest="call_expression [46189,46215]"/>
  <match src="identifier: BOOTSTRAPPING_PERIOD [43581,43601]" dest="identifier: BOOTSTRAPPING_PERIOD [12162,12182]"/>
  <match src="primitive_type [56590,56594]" dest="primitive_type [22682,22686]"/>
  <match src="(: ( [33458,33459]" dest="(: ( [49936,49937]"/>
  <match src="(: ( [55965,55966]" dest="(: ( [22057,22058]"/>
  <match src="function_body [107349,107455]" dest="function_body [43354,43460]"/>
  <match src="identifier: mod [5382,5385]" dest="identifier: mod [5382,5385]"/>
  <match src="visibility [7007,7015]" dest="visibility [7007,7015]"/>
  <match src="): ) [10479,10480]" dest="): ) [10479,10480]"/>
  <match src="contract_declaration [90303,90624]" dest="contract_declaration [28730,29051]"/>
  <match src="identifier: getInitialStakeMultiple [46103,46126]" dest="identifier: getInitialStakeMultiple [14684,14707]"/>
  <match src="string [22256,22292]" dest="string [63034,63065]"/>
  <match src="call_expression [4095,4123]" dest="call_expression [4095,4123]"/>
  <match src=".: . [85388,85389]" dest=".: . [80065,80066]"/>
  <match src="string: string [31912,31918]" dest="string: string [48390,48396]"/>
  <match src=",: , [85803,85804]" dest=",: , [81264,81265]"/>
  <match src="identifier: getTreasuryRatio [48008,48024]" dest="identifier: getTreasuryRatio [16589,16605]"/>
  <match src="identifier: file [32419,32423]" dest="identifier: file [48897,48901]"/>
  <match src="identifier: value [46446,46451]" dest="identifier: value [15027,15032]"/>
  <match src="uint256: uint256 [72502,72509]" dest="uint256: uint256 [66071,66078]"/>
  <match src="call_expression [106125,106152]" dest="call_expression [42130,42157]"/>
  <match src="type_name [24065,24072]" dest="type_name [18371,18378]"/>
  <match src="(: ( [6928,6929]" dest="(: ( [6928,6929]"/>
  <match src="private: private [82748,82755]" dest="private: private [70681,70688]"/>
  <match src="type_name [93860,93867]" dest="type_name [77213,77220]"/>
  <match src="!=: != [20769,20771]" dest="!=: != [64406,64408]"/>
  <match src="byte: byte [38686,38690]" dest="byte: byte [55164,55168]"/>
  <match src="primitive_type [56532,56536]" dest="primitive_type [22624,22628]"/>
  <match src="uint256: uint256 [13272,13279]" dest="uint256: uint256 [23799,23806]"/>
  <match src="(: ( [11072,11073]" dest="(: ( [11072,11073]"/>
  <match src="call_argument [32231,32250]" dest="call_argument [48709,48728]"/>
  <match src="type_name [83188,83195]" dest="type_name [83204,83211]"/>
  <match src="call_expression [33440,33464]" dest="call_expression [49918,49942]"/>
  <match src=".: . [47130,47131]" dest=".: . [15711,15712]"/>
  <match src="return: return [48744,48750]" dest="return: return [17325,17331]"/>
  <match src="user_defined_type [10553,10557]" dest="user_defined_type [10553,10557]"/>
  <match src="]: ] [107252,107253]" dest="]: ] [43257,43258]"/>
  <match src="identifier: bonded [102638,102644]" dest="identifier: bonded [38643,38649]"/>
  <match src="identifier: price [68668,68673]" dest="identifier: price [66158,66163]"/>
  <match src="view: view [100639,100643]" dest="view: view [36644,36648]"/>
  <match src="type_name [105623,105630]" dest="type_name [41628,41635]"/>
  <match src="return_statement [70365,70381]" dest="return_statement [62782,62857]"/>
  <match src="call_argument [70453,70471]" dest="call_argument [80563,80631]"/>
  <match src="primitive_type [65680,65684]" dest="primitive_type [81982,81986]"/>
  <match src=".: . [7954,7955]" dest=".: . [7954,7955]"/>
  <match src="(: ( [36400,36401]" dest="(: ( [52878,52879]"/>
  <match src="identifier: fluidUntil [105500,105510]" dest="identifier: fluidUntil [41505,41515]"/>
  <match src="(: ( [93671,93672]" dest="(: ( [77024,77025]"/>
  <match src="return_type_definition [54684,54707]" dest="return_type_definition [20776,20799]"/>
  <match src="identifier: payloadC [32521,32529]" dest="identifier: payloadC [48999,49007]"/>
  <match src="(: ( [106942,106943]" dest="(: ( [42947,42948]"/>
  <match src="call_argument [109731,109772]" dest="call_argument [69507,69548]"/>
  <match src="type_name [102557,102563]" dest="type_name [38562,38568]"/>
  <match src="}: } [97899,97900]" dest="}: } [33904,33905]"/>
  <match src="call_argument [8700,8704]" dest="call_argument [8700,8704]"/>
  <match src="primitive_type [37637,37644]" dest="primitive_type [54115,54122]"/>
  <match src=".: . [9370,9371]" dest=".: . [9370,9371]"/>
  <match src="struct_declaration [90430,90541]" dest="struct_declaration [28857,28968]"/>
  <match src="identifier: encodePacked [29589,29601]" dest="identifier: encodePacked [46067,46079]"/>
  <match src="type_name [81324,81331]" dest="type_name [80175,80182]"/>
  <match src="type_name [31797,31804]" dest="type_name [48275,48282]"/>
  <match src="type_name [52093,52100]" dest="type_name [26728,26735]"/>
  <match src="returns: returns [55463,55470]" dest="returns: returns [21555,21562]"/>
  <match src="visibility [3985,3993]" dest="visibility [3985,3993]"/>
  <match src="memory: memory [9993,9999]" dest="memory: memory [9993,9999]"/>
  <match src="event: event [83134,83139]" dest="event: event [78457,78462]"/>
  <match src="parameter [56738,56748]" dest="parameter [22830,22840]"/>
  <match src="primitive_type [3318,3325]" dest="primitive_type [3318,3325]"/>
  <match src="return_statement [76092,76101]" dest="return_statement [59226,59235]"/>
  <match src="visibility [103110,103118]" dest="visibility [39115,39123]"/>
  <match src="constant: constant [29241,29249]" dest="constant: constant [45719,45727]"/>
  <match src="identifier: _state [99190,99196]" dest="identifier: _state [35195,35201]"/>
  <match src="call_expression [85767,85780]" dest="call_expression [59357,59370]"/>
  <match src="identifier: _state [107210,107216]" dest="identifier: _state [43215,43221]"/>
  <match src=".: . [97478,97479]" dest=".: . [33483,33484]"/>
  <match src="member_expression [97401,97416]" dest="member_expression [33406,33421]"/>
  <match src="parameter [9187,9203]" dest="parameter [9187,9203]"/>
  <match src="returns: returns [56404,56411]" dest="returns: returns [22496,22503]"/>
  <match src="parameter [105640,105654]" dest="parameter [41645,41659]"/>
  <match src="(: ( [12815,12816]" dest="(: ( [23342,23343]"/>
  <match src="identifier: from [8554,8558]" dest="identifier: from [8554,8558]"/>
  <match src="parameter [10419,10435]" dest="parameter [10419,10435]"/>
  <match src="array_access [105153,105177]" dest="array_access [41158,41182]"/>
  <match src="(: ( [106541,106542]" dest="(: ( [42546,42547]"/>
  <match src="identifier: Pool [82453,82457]" dest="identifier: Bonding [70600,70607]"/>
  <match src="&quot;: &quot; [3382,3383]" dest="&quot;: &quot; [3382,3383]"/>
  <match src="uint256: uint256 [6985,6992]" dest="uint256: uint256 [6985,6992]"/>
  <match src="identifier: decrementBalanceOfStaged [104321,104345]" dest="identifier: decrementBalanceOfStaged [40326,40350]"/>
  <match src="type_name [22088,22095]" dest="type_name [59707,59714]"/>
  <match src="[: [ [99203,99204]" dest="[: [ [35208,35209]"/>
  <match src="expression_statement [34942,34948]" dest="expression_statement [51420,51426]"/>
  <match src="function_body [93707,93980]" dest="function_body [77060,77333]"/>
  <match src="return_statement [96129,96158]" dest="return_statement [32134,32163]"/>
  <match src="type_name [90185,90212]" dest="type_name [28612,28639]"/>
  <match src="comment: /**      * Returns whether the target address is a contract      * @dev This function will return false if invoked during the constructor of a contract,      * as the code is not actually created until after the constructor finishes.      * @param account address of the account to check      * @return whether the target address is a contract      */ [88254,88611]" dest="comment: /**      * Returns whether the target address is a contract      * @dev This function will return false if invoked during the constructor of a contract,      * as the code is not actually created until after the constructor finishes.      * @param account address of the account to check      * @return whether the target address is a contract      */ [73921,74278]"/>
  <match src="identifier: D256 [7586,7590]" dest="identifier: D256 [7586,7590]"/>
  <match src="call_expression [106754,106808]" dest="call_expression [42759,42813]"/>
  <match src="identifier: D256 [7256,7260]" dest="identifier: D256 [7256,7260]"/>
  <match src="event_definition [82908,82960]" dest="event_definition [83157,83220]"/>
  <match src="): ) [84841,84842]" dest="): ) [72931,72932]"/>
  <match src="member_expression [108338,108374]" dest="member_expression [44343,44379]"/>
  <match src="identifier: reason [103275,103281]" dest="identifier: reason [39280,39286]"/>
  <match src=".: . [104767,104768]" dest=".: . [40772,40773]"/>
  <match src="identifier: b [7965,7966]" dest="identifier: b [7965,7966]"/>
  <match src="identifier: spender [55001,55008]" dest="identifier: spender [21093,21100]"/>
  <match src="identifier: Transfer [21092,21100]" dest="identifier: CouponTransfer [64952,64966]"/>
  <match src="state_mutability [1449,1453]" dest="state_mutability [1449,1453]"/>
  <match src="uint256: uint256 [21448,21455]" dest="uint256: uint256 [57443,57450]"/>
  <match src="type_name [100613,100620]" dest="type_name [36618,36625]"/>
  <match src=",: , [102237,102238]" dest=",: , [38242,38243]"/>
  <match src="block_statement [31261,31663]" dest="block_statement [47739,48141]"/>
  <match src="(: ( [56879,56880]" dest="(: ( [22971,22972]"/>
  <match src="): ) [96592,96593]" dest="): ) [32597,32598]"/>
  <match src="update_expression [35891,35899]" dest="update_expression [52369,52377]"/>
  <match src="returns: returns [47810,47817]" dest="returns: returns [16391,16398]"/>
  <match src="function_body [102298,102329]" dest="function_body [38303,38334]"/>
  <match src="type_name [962,969]" dest="type_name [962,969]"/>
  <match src="member_expression [104455,104486]" dest="member_expression [40460,40491]"/>
  <match src="(: ( [69222,69223]" dest="(: ( [67991,67992]"/>
  <match src="assignment_expression [38444,38454]" dest="assignment_expression [54922,54932]"/>
  <match src="(: ( [100501,100502]" dest="(: ( [36506,36507]"/>
  <match src="comment: // 'a' - 10 [29032,29043]" dest="comment: // 'a' - 10 [45510,45521]"/>
  <match src=",: , [7154,7155]" dest=",: , [7154,7155]"/>
  <match src="(: ( [86574,86575]" dest="(: ( [56913,56914]"/>
  <match src="private: private [27245,27252]" dest="private: private [59531,59538]"/>
  <match src="identifier: sender [102231,102237]" dest="identifier: sender [38236,38242]"/>
  <match src="function: function [46787,46795]" dest="function: function [15368,15376]"/>
  <match src="primitive_type [94804,94811]" dest="primitive_type [30809,30816]"/>
  <match src="function_body [85729,86648]" dest="function_body [80203,81124]"/>
  <match src="type_name [91405,91436]" dest="type_name [29832,29863]"/>
  <match src="if_statement [53378,53629]" dest="if_statement [64734,64935]"/>
  <match src="): ) [54706,54707]" dest="): ) [20798,20799]"/>
  <match src="struct_member [90088,90103]" dest="struct_member [28515,28530]"/>
  <match src="]: ] [37415,37416]" dest="]: ] [53893,53894]"/>
  <match src="call_expression [34161,34187]" dest="call_expression [50639,50665]"/>
  <match src="identifier: amount [102549,102555]" dest="identifier: amount [38554,38560]"/>
  <match src="uint256: uint256 [99297,99304]" dest="uint256: uint256 [35302,35309]"/>
  <match src="(: ( [36617,36618]" dest="(: ( [53095,53096]"/>
  <match src="function_body [84811,85647]" dest="function_body [72399,72813]"/>
  <match src="identifier: epoch [97440,97445]" dest="identifier: epoch [33445,33450]"/>
  <match src="identifier: c [2783,2784]" dest="identifier: c [2783,2784]"/>
  <match src="(: ( [50841,50842]" dest="(: ( [63101,63102]"/>
  <match src="address: address [104633,104640]" dest="address: address [40638,40645]"/>
  <match src="identifier: initialize [93001,93011]" dest="identifier: initialize [76354,76364]"/>
  <match src=",: , [85617,85618]" dest=",: , [72789,72790]"/>
  <match src="=: = [36879,36880]" dest="=: = [53357,53358]"/>
  <match src="user_defined_type [8491,8495]" dest="user_defined_type [8491,8495]"/>
  <match src="type_name [84107,84114]" dest="type_name [71810,71817]"/>
  <match src="identifier: FILE [82765,82769]" dest="identifier: FILE [70698,70702]"/>
  <match src="function: function [8762,8770]" dest="function: function [8762,8770]"/>
  <match src="(: ( [80770,80771]" dest="(: ( [58956,58957]"/>
  <match src="binary_expression [8524,8530]" dest="binary_expression [8524,8530]"/>
  <match src="identifier: INITIAL_STAKE_MULTIPLE [44009,44031]" dest="identifier: INITIAL_STAKE_MULTIPLE [12590,12612]"/>
  <match src="type_name [29888,29895]" dest="type_name [46366,46373]"/>
  <match src="(: ( [84615,84616]" dest="(: ( [72188,72189]"/>
  <match src="identifier: Claim [82914,82919]" dest="identifier: Incentivization [83163,83178]"/>
  <match src="parameter [56062,56066]" dest="parameter [22154,22158]"/>
  <match src="primitive_type [91110,91117]" dest="primitive_type [29537,29544]"/>
  <match src="external: external [54732,54740]" dest="external: external [20824,20832]"/>
  <match src="): ) [86296,86297]" dest="): ) [80400,80401]"/>
  <match src=".: . [32660,32661]" dest=".: . [49138,49139]"/>
  <match src="internal: internal [102579,102587]" dest="internal: internal [38584,38592]"/>
  <match src="expression_statement [23009,23078]" dest="expression_statement [64063,64140]"/>
  <match src="==: == [106680,106682]" dest="==: == [42685,42687]"/>
  <match src="): ) [47554,47555]" dest="): ) [16135,16136]"/>
  <match src="parameter [100754,100771]" dest="parameter [36759,36776]"/>
  <match src="): ) [52000,52001]" dest="): ) [26635,26636]"/>
  <match src="returns: returns [97820,97827]" dest="returns: returns [33825,33832]"/>
  <match src="indexed: indexed [55628,55635]" dest="indexed: indexed [21720,21727]"/>
  <match src="type_name [75731,75738]" dest="type_name [67588,67595]"/>
  <match src="identifier: BASE [6538,6542]" dest="identifier: BASE [6538,6542]"/>
  <match src="internal: internal [8458,8466]" dest="internal: internal [8458,8466]"/>
  <match src="return: return [35734,35740]" dest="return: return [52212,52218]"/>
  <match src="(: ( [14761,14762]" dest="(: ( [25288,25289]"/>
  <match src="address: address [54614,54621]" dest="address: address [20706,20713]"/>
  <match src=":=: := [89186,89188]" dest=":=: := [74853,74855]"/>
  <match src="primitive_type [44670,44677]" dest="primitive_type [13251,13258]"/>
  <match src="address: address [86967,86974]" dest="address: address [59595,59602]"/>
  <match src="primitive_type [13630,13637]" dest="primitive_type [24157,24164]"/>
  <match src="memory: memory [68661,68667]" dest="memory: memory [66151,66157]"/>
  <match src="type_name [13630,13637]" dest="type_name [24157,24164]"/>
  <match src="{: { [29516,29517]" dest="{: { [45994,45995]"/>
  <match src="(: ( [76215,76216]" dest="(: ( [81364,81365]"/>
  <match src="visibility [105091,105099]" dest="visibility [41096,41104]"/>
  <match src="return_statement [46747,46772]" dest="return_statement [15328,15353]"/>
  <match src="state_mutability [96201,96205]" dest="state_mutability [32206,32210]"/>
  <match src="uint256: uint256 [103245,103252]" dest="uint256: uint256 [39250,39257]"/>
  <match src="[: [ [105715,105716]" dest="[: [ [41720,41721]"/>
  <match src="pure: pure [36599,36603]" dest="pure: pure [53077,53081]"/>
  <match src="uint256: uint256 [96325,96332]" dest="uint256: uint256 [32330,32337]"/>
  <match src="identifier: couponAllowances [105699,105715]" dest="identifier: couponAllowances [41704,41720]"/>
  <match src="identifier: value [11268,11273]" dest="identifier: value [11268,11273]"/>
  <match src="(: ( [6974,6975]" dest="(: ( [6974,6975]"/>
  <match src="}: } [102671,102672]" dest="}: } [38676,38677]"/>
  <match src="member_expression [85385,85395]" dest="member_expression [80062,80072]"/>
  <match src="contract: contract [101771,101779]" dest="contract: contract [37776,37784]"/>
  <match src="event_paramater [55713,55725]" dest="event_paramater [21805,21817]"/>
  <match src="type_cast_expression [20772,20782]" dest="type_cast_expression [64409,64419]"/>
  <match src="): ) [31481,31482]" dest="): ) [47959,47960]"/>
  <match src="for: for [101828,101831]" dest="for: for [37833,37836]"/>
  <match src="(: ( [99328,99329]" dest="(: ( [35333,35334]"/>
  <match src="identifier: sender [82618,82624]" dest="identifier: sender [63764,63770]"/>
  <match src="type_name [106943,106950]" dest="type_name [42948,42955]"/>
  <match src="identifier: sender [83772,83778]" dest="identifier: sender [71766,71772]"/>
  <match src=",: , [103770,103771]" dest=",: , [39775,39776]"/>
  <match src="visibility [56509,56517]" dest="visibility [22601,22609]"/>
  <match src="): ) [67718,67719]" dest="): ) [67973,67974]"/>
  <match src="}: } [8954,8955]" dest="}: } [8954,8955]"/>
  <match src="return_statement [9923,9952]" dest="return_statement [9923,9952]"/>
  <match src="uint8: uint8 [37873,37878]" dest="uint8: uint8 [54351,54356]"/>
  <match src="identifier: must [33774,33778]" dest="identifier: must [50252,50256]"/>
  <match src="identifier: i [35251,35252]" dest="identifier: i [51729,51730]"/>
  <match src="&quot;: &quot; [86101,86102]" dest="&quot;: &quot; [80501,80502]"/>
  <match src="call_expression [7532,7543]" dest="call_expression [7532,7543]"/>
  <match src="identifier: D256 [8109,8113]" dest="identifier: D256 [8109,8113]"/>
  <match src="yul_identifier [93938,93942]" dest="yul_identifier [77291,77295]"/>
  <match src="return_type_definition [47282,47311]" dest="return_type_definition [15863,15892]"/>
  <match src="block_statement [38086,38466]" dest="block_statement [54564,54944]"/>
  <match src="emit: emit [93452,93456]" dest="emit: emit [76805,76809]"/>
  <match src="type_name [55243,55247]" dest="type_name [21335,21339]"/>
  <match src="&gt;=: &gt;= [1065,1067]" dest="&gt;=: &gt;= [1065,1067]"/>
  <match src="type_name [36130,36137]" dest="type_name [52608,52615]"/>
  <match src="expression_statement [104911,104971]" dest="expression_statement [40916,40976]"/>
  <match src="): ) [101918,101919]" dest="): ) [37923,37924]"/>
  <match src="type_name [54978,54985]" dest="type_name [21070,21077]"/>
  <match src="identifier: ASCII_ZERO [38705,38715]" dest="identifier: ASCII_ZERO [55183,55193]"/>
  <match src="type_name [94783,94795]" dest="type_name [30788,30800]"/>
  <match src="type_name [91031,91038]" dest="type_name [29458,29465]"/>
  <match src="identifier: Require [50951,50958]" dest="identifier: Require [62957,62964]"/>
  <match src="member_expression [34035,34051]" dest="member_expression [50513,50529]"/>
  <match src="identifier: b [10155,10156]" dest="identifier: b [10155,10156]"/>
  <match src="identifier: add [104959,104962]" dest="identifier: add [40964,40967]"/>
  <match src="comment: /* Pool */ [44976,44986]" dest="comment: /* Pool */ [13557,13567]"/>
  <match src="parameter [103261,103281]" dest="parameter [39266,39286]"/>
  <match src="): ) [99606,99607]" dest="): ) [35611,35612]"/>
  <match src="function_definition [85655,86648]" dest="function_definition [80159,81124]"/>
  <match src="call_expression [20754,20824]" dest="call_expression [64391,64469]"/>
  <match src="call_argument [83893,83903]" dest="call_argument [71623,71633]"/>
  <match src="visibility [16798,16805]" dest="visibility [19910,19917]"/>
  <match src="=: = [106752,106753]" dest="=: = [42757,42758]"/>
  <match src="bool: bool [10330,10334]" dest="bool: bool [10330,10334]"/>
  <match src="(: ( [98444,98445]" dest="(: ( [34449,34450]"/>
  <match src="(: ( [56531,56532]" dest="(: ( [22623,22624]"/>
  <match src="identifier: statusOf [97323,97331]" dest="identifier: statusOf [33328,33336]"/>
  <match src="=: = [84879,84880]" dest="=: = [62090,62091]"/>
  <match src="return: return [11229,11235]" dest="return: return [11229,11235]"/>
  <match src="identifier: b [1497,1498]" dest="identifier: b [1497,1498]"/>
  <match src=".: . [68617,68618]" dest=".: . [20148,20149]"/>
  <match src="[: [ [104200,104201]" dest="[: [ [40205,40206]"/>
  <match src="): ) [10684,10685]" dest="): ) [10684,10685]"/>
  <match src="{: { [95801,95802]" dest="{: { [31806,31807]"/>
  <match src="view: view [56466,56470]" dest="view: view [22558,22562]"/>
  <match src="): ) [30546,30547]" dest="): ) [47024,47025]"/>
  <match src="parameter [12997,13004]" dest="parameter [23524,23531]"/>
  <match src="identifier: stringifyTruncated [34602,34620]" dest="identifier: stringifyTruncated [51080,51098]"/>
  <match src="parameter [97791,97806]" dest="parameter [33796,33811]"/>
  <match src="primitive_type [32513,32520]" dest="primitive_type [48991,48998]"/>
  <match src="return_statement [102309,102322]" dest="return_statement [38314,38327]"/>
  <match src="primitive_type [66642,66649]" dest="primitive_type [78495,78502]"/>
  <match src="primitive_type [88677,88681]" dest="primitive_type [74344,74348]"/>
  <match src=",: , [23165,23166]" dest=",: , [64255,64256]"/>
  <match src="member_expression [46601,46613]" dest="member_expression [15182,15194]"/>
  <match src="parameter [13272,13286]" dest="parameter [23799,23813]"/>
  <match src="member_expression [98639,98654]" dest="member_expression [34644,34659]"/>
  <match src="identifier: candidate [107016,107025]" dest="identifier: candidate [43021,43030]"/>
  <match src="return_type_definition [100219,100236]" dest="return_type_definition [36224,36241]"/>
  <match src=",: , [3353,3354]" dest=",: , [3353,3354]"/>
  <match src="function_definition [52079,52148]" dest="function_definition [26714,26783]"/>
  <match src="type_cast_expression [33368,33703]" dest="type_cast_expression [49846,50181]"/>
  <match src="parameter [55153,55163]" dest="parameter [21245,21255]"/>
  <match src="type_name [55502,55509]" dest="type_name [21594,21601]"/>
  <match src="address: address [13615,13622]" dest="address: address [24142,24149]"/>
  <match src="call_argument [83768,83778]" dest="call_argument [71762,71772]"/>
  <match src="(: ( [36129,36130]" dest="(: ( [52607,52608]"/>
  <match src="type_name [1007,1014]" dest="type_name [1007,1014]"/>
  <match src="internal: internal [102879,102887]" dest="internal: internal [38884,38892]"/>
  <match src="state_mutability [100352,100356]" dest="state_mutability [36357,36361]"/>
  <match src="comment: // MAINNET  [43512,43523]" dest="comment: // MAINNET  [12093,12104]"/>
  <match src="visibility [55592,55600]" dest="visibility [21684,21692]"/>
  <match src="identifier: spender [15305,15312]" dest="identifier: spender [25832,25839]"/>
  <match src="number_literal: 0 [4107,4108]" dest="number_literal: 0 [4107,4108]"/>
  <match src="expression_statement [22930,22999]" dest="expression_statement [63734,63838]"/>
  <match src="pure: pure [9709,9713]" dest="pure: pure [9709,9713]"/>
  <match src="]: ] [104739,104740]" dest="]: ] [40744,40745]"/>
  <match src="identifier: balanceCheck [83727,83739]" dest="identifier: balanceCheck [57327,57339]"/>
  <match src=",: , [33801,33802]" dest=",: , [50279,50280]"/>
  <match src=".: . [107004,107005]" dest=".: . [43009,43010]"/>
  <match src="identifier: require [27378,27385]" dest="identifier: decrementBalanceOf [72668,72686]"/>
  <match src="uint256: uint256 [50050,50057]" dest="uint256: uint256 [61046,61053]"/>
  <match src="uint8: uint8 [36381,36386]" dest="uint8: uint8 [52859,52864]"/>
  <match src="identifier: couponAllowances [98041,98057]" dest="identifier: couponAllowances [34046,34062]"/>
  <match src="}: } [96984,96985]" dest="}: } [32989,32990]"/>
  <match src=",: , [86173,86174]" dest=",: , [62151,62152]"/>
  <match src="identifier: getGovernancePeriod [46682,46701]" dest="identifier: getGovernancePeriod [15263,15282]"/>
  <match src="parameter [56670,56682]" dest="parameter [22762,22774]"/>
  <match src=",: , [87036,87037]" dest=",: , [59431,59432]"/>
  <match src="parameter [102122,102136]" dest="parameter [38127,38141]"/>
  <match src="identifier: epoch [104819,104824]" dest="identifier: epoch [40824,40829]"/>
  <match src="returns: returns [80684,80691]" dest="returns: returns [57632,57639]"/>
  <match src="return_statement [2054,2063]" dest="return_statement [2054,2063]"/>
  <match src="type_name [44835,44842]" dest="type_name [13416,13423]"/>
  <match src="call_struct_argument [47016,47040]" dest="call_struct_argument [15597,15621]"/>
  <match src="comment: // 3% [45277,45282]" dest="comment: // 3% [13858,13863]"/>
  <match src="&quot;: &quot; [109318,109319]" dest="&quot;: &quot; [69094,69095]"/>
  <match src="(: ( [46561,46562]" dest="(: ( [15142,15143]"/>
  <match src="primitive_type [100326,100333]" dest="primitive_type [36331,36338]"/>
  <match src="true [108514,108518]" dest="true [44519,44523]"/>
  <match src="): ) [69859,69860]" dest="): ) [62944,62945]"/>
  <match src="primitive_type [55338,55345]" dest="primitive_type [21430,21437]"/>
  <match src="address: address [66670,66677]" dest="address: address [78387,78394]"/>
  <match src="call_argument [2715,2725]" dest="call_argument [2715,2725]"/>
  <match src="primitive_type [55923,55930]" dest="primitive_type [22015,22022]"/>
  <match src="identifier: burn [51981,51985]" dest="identifier: burn [26616,26620]"/>
  <match src="event: event [82787,82792]" dest="event: event [70723,70728]"/>
  <match src="&quot;: &quot; [70505,70506]" dest="&quot;: &quot; [80665,80666]"/>
  <match src=".: . [105272,105273]" dest=".: . [41277,41278]"/>
  <match src="state_mutability [40376,40380]" dest="state_mutability [20218,20222]"/>
  <match src="uint256: uint256 [90807,90814]" dest="uint256: uint256 [29234,29241]"/>
  <match src=".: . [104284,104285]" dest=".: . [40289,40290]"/>
  <match src="identifier: Decimal [47002,47009]" dest="identifier: Decimal [15583,15590]"/>
  <match src="user_defined_type [10437,10441]" dest="user_defined_type [10437,10441]"/>
  <match src=",: , [86455,86456]" dest=",: , [63357,63358]"/>
  <match src="return_type_definition [54938,54952]" dest="return_type_definition [21030,21044]"/>
  <match src="call_expression [97175,97200]" dest="call_expression [33180,33205]"/>
  <match src="function_definition [79610,79759]" dest="function_definition [61577,61993]"/>
  <match src="member_expression [98181,98193]" dest="member_expression [34186,34198]"/>
  <match src="identifier: candidate [106951,106960]" dest="identifier: candidate [42956,42965]"/>
  <match src="type_name [103788,103794]" dest="type_name [39793,39799]"/>
  <match src="(: ( [47290,47291]" dest="(: ( [15871,15872]"/>
  <match src="variable_declaration [69872,69891]" dest="variable_declaration [72443,72457]"/>
  <match src="primitive_type [54878,54882]" dest="primitive_type [20970,20974]"/>
  <match src="call_argument [81154,81164]" dest="call_argument [83324,83334]"/>
  <match src="primitive_type [55741,55748]" dest="primitive_type [21833,21840]"/>
  <match src="yul_function_call [101023,101034]" dest="yul_function_call [37028,37039]"/>
  <match src="=: = [103863,103864]" dest="=: = [39868,39869]"/>
  <match src="user_defined_type [91006,91013]" dest="user_defined_type [29433,29440]"/>
  <match src="variable_declaration [86227,86259]" dest="variable_declaration [62261,62284]"/>
  <match src="visibility [96417,96423]" dest="visibility [32422,32428]"/>
  <match src="comment: // reverse-for-loops with unsigned integer [36174,36216]" dest="comment: // reverse-for-loops with unsigned integer [52652,52694]"/>
  <match src="identifier: IERC20 [51958,51964]" dest="identifier: IERC20 [26593,26599]"/>
  <match src="type_name [107133,107140]" dest="type_name [43138,43145]"/>
  <match src="identifier: balance [103137,103144]" dest="identifier: balance [39142,39149]"/>
  <match src=",: , [5406,5407]" dest=",: , [5406,5407]"/>
  <match src="call_argument [30794,30820]" dest="call_argument [47272,47298]"/>
  <match src="call_argument [7096,7100]" dest="call_argument [7096,7100]"/>
  <match src="parameter [11165,11172]" dest="parameter [11165,11172]"/>
  <match src="visibility [102274,102282]" dest="visibility [38279,38287]"/>
  <match src="(: ( [105437,105438]" dest="(: ( [41442,41443]"/>
  <match src="string_literal [21515,21548]" dest="string_literal [57506,57536]"/>
  <match src="member_expression [107608,107648]" dest="member_expression [43613,43653]"/>
  <match src="parameter [55231,55241]" dest="parameter [21323,21333]"/>
  <match src="call_argument [87416,87420]" dest="call_argument [79235,79239]"/>
  <match src="binary_expression [35251,35256]" dest="binary_expression [51729,51734]"/>
  <match src="}: } [33145,33146]" dest="}: } [49623,49624]"/>
  <match src="&quot;: &quot; [95040,95041]" dest="&quot;: &quot; [31045,31046]"/>
  <match src="{: { [99608,99609]" dest="{: { [35613,35614]"/>
  <match src="primitive_type [46152,46159]" dest="primitive_type [14733,14740]"/>
  <match src="): ) [31870,31871]" dest="): ) [48348,48349]"/>
  <match src="identifier: _state [108175,108181]" dest="identifier: _state [44180,44186]"/>
  <match src="}: } [46778,46779]" dest="}: } [15359,15360]"/>
  <match src="uint256: uint256 [91413,91420]" dest="uint256: uint256 [29840,29847]"/>
  <match src="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [64928,65586]" dest="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [27714,28372]"/>
  <match src="call_argument [30711,30735]" dest="call_argument [47189,47213]"/>
  <match src="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [12542,12695]" dest="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [23069,23222]"/>
  <match src="parameter [9238,9258]" dest="parameter [9238,9258]"/>
  <match src="identifier: account [96695,96702]" dest="identifier: account [32700,32707]"/>
  <match src="parameter [98838,98851]" dest="parameter [34843,34856]"/>
  <match src="call_expression [7256,7295]" dest="call_expression [7256,7295]"/>
  <match src="string_literal [35741,35744]" dest="string_literal [52219,52222]"/>
  <match src="constant: constant [92690,92698]" dest="constant: constant [76043,76051]"/>
  <match src="call_argument [17978,17984]" dest="call_argument [60089,60095]"/>
  <match src="{: { [96334,96335]" dest="{: { [32339,32340]"/>
  <match src="]: ] [105134,105135]" dest="]: ] [41139,41140]"/>
  <match src="identifier: bonded [106242,106248]" dest="identifier: bonded [42247,42253]"/>
  <match src="=: = [43759,43760]" dest="=: = [12340,12341]"/>
  <match src="identifier: GOVERNANCE_PERIOD [44415,44432]" dest="identifier: GOVERNANCE_PERIOD [12996,13013]"/>
  <match src="identifier: D256 [6924,6928]" dest="identifier: D256 [6924,6928]"/>
  <match src="member_expression [98018,98033]" dest="member_expression [34023,34038]"/>
  <match src="): ) [102959,102960]" dest="): ) [38964,38965]"/>
  <match src=",: , [33044,33045]" dest=",: , [49522,49523]"/>
  <match src="identifier: account [109407,109414]" dest="identifier: account [69183,69190]"/>
  <match src="constant: constant [43489,43497]" dest="constant: constant [12070,12078]"/>
  <match src="type_name [45224,45231]" dest="type_name [13805,13812]"/>
  <match src="(: ( [3348,3349]" dest="(: ( [3348,3349]"/>
  <match src="uint256: uint256 [36660,36667]" dest="uint256: uint256 [53138,53145]"/>
  <match src="function_definition [100444,100584]" dest="function_definition [36449,36589]"/>
  <match src="identifier: v [55567,55568]" dest="identifier: v [21659,21660]"/>
  <match src="): ) [86575,86576]" dest="): ) [56914,56915]"/>
  <match src="(: ( [46151,46152]" dest="(: ( [14732,14733]"/>
  <match src="visibility [108133,108141]" dest="visibility [44138,44146]"/>
  <match src="private: private [44843,44850]" dest="private: private [13424,13431]"/>
  <match src=".: . [97039,97040]" dest=".: . [33044,33045]"/>
  <match src="identifier: amount [53360,53366]" dest="identifier: amount [56524,56530]"/>
  <match src="type_name [33812,33819]" dest="type_name [50290,50297]"/>
  <match src="event_definition [83038,83128]" dest="event_definition [70844,70935]"/>
  <match src="primitive_type [104115,104122]" dest="primitive_type [40120,40127]"/>
  <match src="type_name [10594,10598]" dest="type_name [10594,10598]"/>
  <match src="visibility [13647,13655]" dest="visibility [24174,24182]"/>
  <match src="interface: interface [12697,12706]" dest="interface: interface [23224,23233]"/>
  <match src="if: if [29505,29507]" dest="if: if [45983,45985]"/>
  <match src="identifier: _state [100117,100123]" dest="identifier: _state [36122,36128]"/>
  <match src="identifier: encodePacked [32661,32673]" dest="identifier: encodePacked [49139,49151]"/>
  <match src="primitive_type [6521,6528]" dest="primitive_type [6521,6528]"/>
  <match src=".: . [12224,12225]" dest=".: . [64741,64742]"/>
  <match src=".: . [106825,106826]" dest=".: . [42830,42831]"/>
  <match src=",: , [9376,9377]" dest=",: , [9376,9377]"/>
  <match src="{: { [37626,37627]" dest="{: { [54104,54105]"/>
  <match src="function_body [96334,96385]" dest="function_body [32339,32390]"/>
  <match src="member_expression [97002,97043]" dest="member_expression [33007,33048]"/>
  <match src="struct_member [90113,90129]" dest="struct_member [28540,28556]"/>
  <match src="identifier: lastReserve [68708,68719]" dest="identifier: bonded [79293,79299]"/>
  <match src="(: ( [10750,10751]" dest="(: ( [10750,10751]"/>
  <match src="}: } [9601,9602]" dest="}: } [9601,9602]"/>
  <match src="primitive_type [96001,96008]" dest="primitive_type [32006,32013]"/>
  <match src="parameter [17654,17661]" dest="parameter [58889,58896]"/>
  <match src="member_expression [97717,97752]" dest="member_expression [33722,33757]"/>
  <match src="uint256: uint256 [51986,51993]" dest="uint256: uint256 [26621,26628]"/>
  <match src="): ) [56536,56537]" dest="): ) [22628,22629]"/>
  <match src="parameter [109399,109414]" dest="parameter [69175,69190]"/>
  <match src=",: , [82472,82473]" dest=",: , [70618,70619]"/>
  <match src="(: ( [68687,68688]" dest="(: ( [66179,66180]"/>
  <match src="call_expression [30100,30124]" dest="call_expression [46578,46602]"/>
  <match src="type_name [33789,33796]" dest="type_name [50267,50274]"/>
  <match src="struct_member [91135,91150]" dest="struct_member [29562,29577]"/>
  <match src="{: { [96950,96951]" dest="{: { [32955,32956]"/>
  <match src="member_expression [50132,50158]" dest="member_expression [56478,56499]"/>
  <match src="identifier: totalBonded [86393,86404]" dest="identifier: totalBonded [72992,73003]"/>
  <match src="pure: pure [40376,40380]" dest="pure: pure [20218,20222]"/>
  <match src="expression_statement [84684,84699]" dest="expression_statement [57114,57129]"/>
  <match src="visibility [31215,31223]" dest="visibility [47693,47701]"/>
  <match src="identifier: totalStaged [86985,86996]" dest="identifier: totalStaged [59375,59386]"/>
  <match src="bytes32: bytes32 [55338,55345]" dest="bytes32: bytes32 [21430,21437]"/>
  <match src="primitive_type [90758,90765]" dest="primitive_type [29185,29192]"/>
  <match src="string_literal [67373,67392]" dest="string_literal [81802,81816]"/>
  <match src="visibility [21464,21472]" dest="visibility [57459,57467]"/>
  <match src=".: . [30671,30672]" dest=".: . [47149,47150]"/>
  <match src="call_argument [85404,85439]" dest="call_argument [81011,81025]"/>
  <match src="member_expression [107801,107836]" dest="member_expression [43806,43841]"/>
  <match src="type_cast_expression [38686,38717]" dest="type_cast_expression [55164,55195]"/>
  <match src="comment: // addresses are &quot;0x&quot; followed by 20 bytes of data which take up 2 characters each [36687,36769]" dest="comment: // addresses are &quot;0x&quot; followed by 20 bytes of data which take up 2 characters each [53165,53247]"/>
  <match src="}: } [15331,15332]" dest="}: } [25858,25859]"/>
  <match src="type_name [35234,35241]" dest="type_name [51712,51719]"/>
  <match src="primitive_type [37766,37771]" dest="primitive_type [54244,54249]"/>
  <match src="identifier: i [8662,8663]" dest="identifier: i [8662,8663]"/>
  <match src="type_name [16641,16648]" dest="type_name [60958,60965]"/>
  <match src="string: string [7834,7840]" dest="string: string [7834,7840]"/>
  <match src="pragma: pragma [80,86]" dest="pragma: pragma [80,86]"/>
  <match src="identifier: success [93293,93300]" dest="identifier: success [76646,76653]"/>
  <match src="identifier: self [8797,8801]" dest="identifier: self [8797,8801]"/>
  <match src="primitive_type [15029,15036]" dest="primitive_type [25556,25563]"/>
  <match src="call_argument [60763,60788]" dest="call_argument [83552,83567]"/>
  <match src="(: ( [29980,29981]" dest="(: ( [46458,46459]"/>
  <match src="identifier: recipient [53349,53358]" dest="identifier: recipient [64696,64705]"/>
  <match src="type_name [91352,91385]" dest="type_name [29779,29812]"/>
  <match src="[: [ [37262,37263]" dest="[: [ [53740,53741]"/>
  <match src="expression_statement [86477,86548]" dest="expression_statement [63856,63898]"/>
  <match src="expression_statement [37398,37443]" dest="expression_statement [53876,53921]"/>
  <match src="function_definition [9404,9611]" dest="function_definition [9404,9611]"/>
  <match src="primitive_type [43890,43897]" dest="primitive_type [12471,12478]"/>
  <match src="call_argument [7290,7291]" dest="call_argument [7290,7291]"/>
  <match src="array_access [108338,108362]" dest="array_access [44343,44367]"/>
  <match src="(: ( [46962,46963]" dest="(: ( [15543,15544]"/>
  <match src="identifier: data [56765,56769]" dest="identifier: data [22857,22861]"/>
  <match src="): ) [105558,105559]" dest="): ) [41563,41564]"/>
  <match src=",: , [31734,31735]" dest=",: , [48212,48213]"/>
  <match src="identifier: b [7621,7622]" dest="identifier: b [7621,7622]"/>
  <match src="[: [ [108190,108191]" dest="[: [ [44195,44196]"/>
  <match src="pure: pure [33296,33300]" dest="pure: pure [49774,49778]"/>
  <match src="function_definition [56690,56780]" dest="function_definition [22782,22872]"/>
  <match src="return_statement [6917,6946]" dest="return_statement [6917,6946]"/>
  <match src="primitive_type [64873,64880]" dest="primitive_type [27662,27669]"/>
  <match src="type_name [82977,82984]" dest="type_name [70954,70961]"/>
  <match src="member_expression [102623,102648]" dest="member_expression [38628,38653]"/>
  <match src="=&gt;: =&gt; [91470,91472]" dest="=&gt;: =&gt; [29897,29899]"/>
  <match src="primitive_type [44147,44154]" dest="primitive_type [12728,12735]"/>
  <match src="external: external [56812,56820]" dest="external: external [22904,22912]"/>
  <match src=",: , [30735,30736]" dest=",: , [47213,47214]"/>
  <match src="state_mutability [10461,10465]" dest="state_mutability [10461,10465]"/>
  <match src="assignment_expression [104805,104900]" dest="assignment_expression [40810,40905]"/>
  <match src="number_literal: 0 [76099,76100]" dest="number_literal: 0 [59233,59234]"/>
  <match src="): ) [7291,7292]" dest="): ) [7291,7292]"/>
  <match src="private: private [43808,43815]" dest="private: private [12389,12396]"/>
  <match src="member_expression [103158,103187]" dest="member_expression [39163,39192]"/>
  <match src="visibility [100481,100487]" dest="visibility [36486,36492]"/>
  <match src="call_expression [69611,69679]" dest="call_expression [68066,68084]"/>
  <match src="state_mutability [97137,97141]" dest="state_mutability [33142,33146]"/>
  <match src="primitive_type [106542,106549]" dest="primitive_type [42547,42554]"/>
  <match src="(: ( [85384,85385]" dest="(: ( [80061,80062]"/>
  <match src="call_expression [84287,84464]" dest="call_expression [71926,72065]"/>
  <match src="function_definition [96799,97064]" dest="function_definition [32804,33069]"/>
  <match src="call_argument [104963,104969]" dest="call_argument [40968,40974]"/>
  <match src="address: address [83350,83357]" dest="address: address [71386,71393]"/>
  <match src="identifier: payloadA [33845,33853]" dest="identifier: payloadA [50323,50331]"/>
  <match src="call_expression [7950,7985]" dest="call_expression [7950,7985]"/>
  <match src="primitive_type [55472,55476]" dest="primitive_type [21564,21568]"/>
  <match src="{: { [47465,47466]" dest="{: { [16046,16047]"/>
  <match src="type_name [55821,55825]" dest="type_name [21913,21917]"/>
  <match src="identifier: outstanding [105295,105306]" dest="identifier: outstanding [41300,41311]"/>
  <match src="}: } [99532,99533]" dest="}: } [35537,35538]"/>
  <match src="(: ( [104220,104221]" dest="(: ( [40225,40226]"/>
  <match src="!: ! [33321,33322]" dest="!: ! [49799,49800]"/>
  <match src="(: ( [36667,36668]" dest="(: ( [53145,53146]"/>
  <match src="call_argument [83350,83363]" dest="call_argument [71386,71399]"/>
  <match src="(: ( [97369,97370]" dest="(: ( [33374,33375]"/>
  <match src="parameter [103788,103808]" dest="parameter [39793,39813]"/>
  <match src="parameter [13253,13270]" dest="parameter [23780,23797]"/>
  <match src="expression_statement [102744,102798]" dest="expression_statement [38749,38803]"/>
  <match src="member_expression [105525,105557]" dest="member_expression [41530,41562]"/>
  <match src="state_mutability [96530,96534]" dest="state_mutability [32535,32539]"/>
  <match src="private: private [43636,43643]" dest="private: private [12217,12224]"/>
  <match src=".: . [69618,69619]" dest=".: . [82109,82110]"/>
  <match src=".: . [102785,102786]" dest=".: . [38790,38791]"/>
  <match src="primitive_type [10475,10479]" dest="primitive_type [10475,10479]"/>
  <match src=",: , [29684,29685]" dest=",: , [46162,46163]"/>
  <match src="member_expression [107569,107605]" dest="member_expression [43574,43610]"/>
  <match src="primitive_type [30472,30479]" dest="primitive_type [46950,46957]"/>
  <match src="number_literal: 0 [103691,103692]" dest="number_literal: 0 [39696,39697]"/>
  <match src="type_name [69256,69263]" dest="type_name [67058,67065]"/>
  <match src="visibility [33920,33928]" dest="visibility [50398,50406]"/>
  <match src="]: ] [97282,97283]" dest="]: ] [33287,33288]"/>
  <match src="pure: pure [1950,1954]" dest="pure: pure [1950,1954]"/>
  <match src="state_mutability [56048,56052]" dest="state_mutability [22140,22144]"/>
  <match src=".: . [105343,105344]" dest=".: . [41348,41349]"/>
  <match src="variable_declaration [108222,108237]" dest="variable_declaration [44227,44242]"/>
  <match src="(: ( [83283,83284]" dest="(: ( [78611,78612]"/>
  <match src="internal: internal [9480,9488]" dest="internal: internal [9480,9488]"/>
  <match src="identifier: D256 [47131,47135]" dest="identifier: D256 [15712,15716]"/>
  <match src=",: , [29902,29903]" dest=",: , [46380,46381]"/>
  <match src="identifier: balance [96249,96256]" dest="identifier: balance [32254,32261]"/>
  <match src="): ) [99336,99337]" dest="): ) [35341,35342]"/>
  <match src=".: . [104854,104855]" dest=".: . [40859,40860]"/>
  <match src="identifier: z [37645,37646]" dest="identifier: z [54123,54124]"/>
  <match src="struct_member [90374,90389]" dest="struct_member [28801,28816]"/>
  <match src="identifier: COLON [32035,32040]" dest="identifier: COLON [48513,48518]"/>
  <match src="variable_declaration [8647,8656]" dest="variable_declaration [8647,8656]"/>
  <match src="): ) [95978,95979]" dest="): ) [31983,31984]"/>
  <match src="bool: bool [10475,10479]" dest="bool: bool [10475,10479]"/>
  <match src=".: . [95346,95347]" dest=".: . [31351,31352]"/>
  <match src="type_name [35673,35678]" dest="type_name [52151,52156]"/>
  <match src="parameter [107727,107741]" dest="parameter [43732,43746]"/>
  <match src="type_name [29420,29427]" dest="type_name [45898,45905]"/>
  <match src="type_name [55546,55550]" dest="type_name [21638,21642]"/>
  <match src="expression_statement [1984,2014]" dest="expression_statement [1984,2014]"/>
  <match src="comment: /**  * Utility library of inline functions on addresses  *  * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol  * This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts  * when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the  * build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.  */ [87702,88209]" dest="comment: /**  * Utility library of inline functions on addresses  *  * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol  * This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts  * when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the  * build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.  */ [73369,73876]"/>
  <match src="identifier: value [9579,9584]" dest="identifier: value [9579,9584]"/>
  <match src="state_variable_declaration [109286,109331]" dest="state_variable_declaration [69062,69107]"/>
  <match src="constant: constant [44217,44225]" dest="constant: constant [12798,12806]"/>
  <match src="return: return [9333,9339]" dest="return: return [9333,9339]"/>
  <match src="(: ( [56840,56841]" dest="(: ( [22932,22933]"/>
  <match src="}: } [8753,8754]" dest="}: } [8753,8754]"/>
  <match src="comment: // File: contracts/external/Decimal.sol [5546,5585]" dest="comment: // File: contracts/external/Decimal.sol [5546,5585]"/>
  <match src="identifier: EpochStrategy [98455,98468]" dest="identifier: EpochStrategy [34460,34473]"/>
  <match src="{: { [90562,90563]" dest="{: { [28989,28990]"/>
  <match src=".: . [108042,108043]" dest=".: . [44047,44048]"/>
  <match src="(: ( [4007,4008]" dest="(: ( [4007,4008]"/>
  <match src="call_expression [104263,104296]" dest="call_expression [40268,40301]"/>
  <match src="string [20784,20823]" dest="string [64421,64468]"/>
  <match src="emit: emit [84711,84715]" dest="emit: emit [73232,73236]"/>
  <match src="&quot;: &quot; [85949,85950]" dest="&quot;: &quot; [80297,80298]"/>
  <match src="address: address [65639,65646]" dest="address: address [78544,78551]"/>
  <match src="[: [ [97416,97417]" dest="[: [ [33421,33422]"/>
  <match src="visibility [96304,96310]" dest="visibility [32309,32315]"/>
  <match src="(: ( [81239,81240]" dest="(: ( [60073,60074]"/>
  <match src="}: } [35507,35508]" dest="}: } [51985,51986]"/>
  <match src="internal: internal [9883,9891]" dest="internal: internal [9883,9891]"/>
  <match src="(: ( [102487,102488]" dest="(: ( [38492,38493]"/>
  <match src="memory: memory [48482,48488]" dest="memory: memory [17063,17069]"/>
  <match src=",: , [23156,23157]" dest=",: , [64246,64247]"/>
  <match src="}: } [96384,96385]" dest="}: } [32389,32390]"/>
  <match src="return: return [2647,2653]" dest="return: return [2647,2653]"/>
  <match src=",: , [10893,10894]" dest=",: , [10893,10894]"/>
  <match src="member_expression [84721,84731]" dest="member_expression [73244,73254]"/>
  <match src="(: ( [108431,108432]" dest="(: ( [44436,44437]"/>
  <match src="identifier: ASCII_ZERO [36387,36397]" dest="identifier: ASCII_ZERO [52865,52875]"/>
  <match src="): ) [97806,97807]" dest="): ) [33811,33812]"/>
  <match src="identifier: setup [111274,111279]" dest="identifier: capture [68075,68082]"/>
  <match src="uint256: uint256 [90158,90165]" dest="uint256: uint256 [28585,28592]"/>
  <match src="identifier: totalDebt [96182,96191]" dest="identifier: totalDebt [32187,32196]"/>
  <match src="call_argument [108274,108283]" dest="call_argument [44279,44288]"/>
  <match src="): ) [83362,83363]" dest="): ) [71398,71399]"/>
  <match src="expression_statement [1055,1102]" dest="expression_statement [1055,1102]"/>
  <match src="identifier: b [7733,7734]" dest="identifier: b [7733,7734]"/>
  <match src="primitive_type [70345,70352]" dest="primitive_type [62762,62769]"/>
  <match src=",: , [10435,10436]" dest=",: , [10435,10436]"/>
  <match src="parameter [32434,32448]" dest="parameter [48912,48926]"/>
  <match src="(: ( [100897,100898]" dest="(: ( [36902,36903]"/>
  <match src="event_paramater [83002,83015]" dest="event_paramater [70979,70992]"/>
  <match src="(: ( [105020,105021]" dest="(: ( [41025,41026]"/>
  <match src="returns: returns [55102,55109]" dest="returns: returns [21194,21201]"/>
  <match src="{: { [90747,90748]" dest="{: { [29174,29175]"/>
  <match src="identifier: provider [91331,91339]" dest="identifier: provider [29758,29766]"/>
  <match src="yul_path [93944,93961]" dest="yul_path [77297,77314]"/>
  <match src="}: } [1540,1541]" dest="}: } [1540,1541]"/>
  <match src="member_expression [104911,104925]" dest="member_expression [40916,40930]"/>
  <match src="return_type_definition [54746,54769]" dest="return_type_definition [20838,20861]"/>
  <match src=":: : [46018,46019]" dest=":: : [14599,14600]"/>
  <match src="}: } [95163,95164]" dest="}: } [31168,31169]"/>
  <match src="parameter [47123,47142]" dest="parameter [15704,15723]"/>
  <match src="identifier: accounts [91386,91394]" dest="identifier: accounts [29813,29821]"/>
  <match src="using: using [94732,94737]" dest="using: using [30737,30742]"/>
  <match src="identifier: reason [7978,7984]" dest="identifier: reason [7978,7984]"/>
  <match src="function: function [38507,38515]" dest="function: function [54985,54993]"/>
  <match src="assignment_expression [103130,103195]" dest="assignment_expression [39135,39200]"/>
  <match src="call_argument [109806,109828]" dest="call_argument [69582,69604]"/>
  <match src="return_statement [96745,96784]" dest="return_statement [32750,32789]"/>
  <match src="function_body [107558,107672]" dest="function_body [43563,43677]"/>
  <match src="type_name [86319,86326]" dest="type_name [61851,61858]"/>
  <match src=".: . [105986,105987]" dest=".: . [41991,41992]"/>
  <match src="}: } [10640,10641]" dest="}: } [10640,10641]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [92699,92718]" dest="identifier: IMPLEMENTATION_SLOT [76052,76071]"/>
  <match src="identifier: b [10084,10085]" dest="identifier: b [10084,10085]"/>
  <match src="identifier: kLast [56501,56506]" dest="identifier: kLast [22593,22598]"/>
  <match src="comment: // File: @openzeppelin/contracts/math/SafeMath.sol [0,50]" dest="comment: // File: @openzeppelin/contracts/math/SafeMath.sol [0,50]"/>
  <match src="user_defined_type [9072,9076]" dest="user_defined_type [9072,9076]"/>
  <match src="number_literal: 0 [34946,34947]" dest="number_literal: 0 [51424,51425]"/>
  <match src="return_type_definition [48313,48342]" dest="return_type_definition [16894,16923]"/>
  <match src="type_name [55183,55187]" dest="type_name [21275,21279]"/>
  <match src="parameter [52033,52048]" dest="parameter [26668,26683]"/>
  <match src="identifier: GOVERNANCE_EXPIRATION [44482,44503]" dest="identifier: GOVERNANCE_EXPIRATION [13063,13084]"/>
  <match src=",: , [33880,33881]" dest=",: , [50358,50359]"/>
  <match src="identifier: mul [97016,97019]" dest="identifier: mul [33021,33024]"/>
  <match src="identifier: sub [9133,9136]" dest="identifier: sub [9133,9136]"/>
  <match src="call_argument [33491,33496]" dest="call_argument [49969,49974]"/>
  <match src="primitive_type [78819,78826]" dest="primitive_type [62725,62732]"/>
  <match src="identifier: balanceCheck [84684,84696]" dest="identifier: balanceCheck [57114,57126]"/>
  <match src="(: ( [107491,107492]" dest="(: ( [43496,43497]"/>
  <match src="returns: returns [45679,45686]" dest="returns: returns [14260,14267]"/>
  <match src="): ) [93697,93698]" dest="): ) [77050,77051]"/>
  <match src="call_argument [77659,77665]" dest="call_argument [57498,57504]"/>
  <match src="&quot;: &quot; [59322,59323]" dest="&quot;: &quot; [73187,73188]"/>
  <match src="call_expression [37277,37300]" dest="call_expression [53755,53778]"/>
  <match src="identifier: add [958,961]" dest="identifier: add [958,961]"/>
  <match src="private: private [67986,67993]" dest="private: private [81960,81967]"/>
  <match src="returns: returns [1454,1461]" dest="returns: returns [1454,1461]"/>
  <match src="returns: returns [55329,55336]" dest="returns: returns [21421,21428]"/>
  <match src="): ) [30123,30124]" dest="): ) [46601,46602]"/>
  <match src="function_definition [93645,93980]" dest="function_definition [76998,77333]"/>
  <match src="primitive_type [7834,7840]" dest="primitive_type [7834,7840]"/>
  <match src="member_expression [104421,104436]" dest="member_expression [40426,40441]"/>
  <match src="uint256: uint256 [78819,78826]" dest="uint256: uint256 [62725,62732]"/>
  <match src="identifier: result [37902,37908]" dest="identifier: result [54380,54386]"/>
  <match src="}: } [98073,98074]" dest="}: } [34078,34079]"/>
  <match src="}: } [6826,6827]" dest="}: } [6826,6827]"/>
  <match src="): ) [31616,31617]" dest="): ) [48094,48095]"/>
  <match src="=: = [36658,36659]" dest="=: = [53136,53137]"/>
  <match src="[: [ [97274,97275]" dest="[: [ [33279,33280]"/>
  <match src="type_name [99763,99770]" dest="type_name [35768,35775]"/>
  <match src="identifier: getPartial [7270,7280]" dest="identifier: getPartial [7270,7280]"/>
  <match src="address: address [56626,56633]" dest="address: address [22718,22725]"/>
  <match src="identifier: period [106970,106976]" dest="identifier: period [42975,42981]"/>
  <match src="): ) [29514,29515]" dest="): ) [45992,45993]"/>
  <match src="state_variable_declaration [43556,43608]" dest="state_variable_declaration [12137,12189]"/>
  <match src="uint256: uint256 [99127,99134]" dest="uint256: uint256 [35132,35139]"/>
  <match src="primitive_type [108153,108160]" dest="primitive_type [44158,44165]"/>
  <match src="primitive_type [50207,50214]" dest="primitive_type [56509,56516]"/>
  <match src="{: { [47144,47145]" dest="{: { [15725,15726]"/>
  <match src="{: { [31872,31873]" dest="{: { [48350,48351]"/>
  <match src="call_argument [36932,36953]" dest="call_argument [53410,53431]"/>
  <match src="function_definition [21416,21724]" dest="function_definition [57421,57572]"/>
  <match src=":: : [8919,8920]" dest=":: : [8919,8920]"/>
  <match src="call_expression [98535,98620]" dest="call_expression [34540,34625]"/>
  <match src="type_name [29845,29849]" dest="type_name [46323,46327]"/>
  <match src="): ) [97014,97015]" dest="): ) [33019,33020]"/>
  <match src="primitive_type [35673,35678]" dest="primitive_type [52151,52156]"/>
  <match src="function_definition [99896,100023]" dest="function_definition [35901,36028]"/>
  <match src="identifier: incrementBalanceOfClaimable [85296,85323]" dest="identifier: incrementBalanceOfCoupons [63383,63408]"/>
  <match src="boolean_literal [108514,108518]" dest="boolean_literal [44519,44523]"/>
  <match src="(: ( [45662,45663]" dest="(: ( [14243,14244]"/>
  <match src="type_name [9728,9732]" dest="type_name [9728,9732]"/>
  <match src="identifier: Oracle [66428,66434]" dest="identifier: Regulator [65740,65749]"/>
  <match src=".: . [83568,83569]" dest=".: . [72390,72391]"/>
  <match src="identifier: amount [107519,107525]" dest="identifier: amount [43524,43530]"/>
  <match src="function_definition [83232,83504]" dest="function_definition [71269,71513]"/>
  <match src="identifier: c [2715,2716]" dest="identifier: c [2715,2716]"/>
  <match src="state_mutability [100488,100492]" dest="state_mutability [36493,36497]"/>
  <match src="uint256: uint256 [43984,43991]" dest="uint256: uint256 [12565,12572]"/>
  <match src="contract: contract [51938,51946]" dest="contract: contract [26573,26581]"/>
  <match src="{: { [8150,8151]" dest="{: { [8150,8151]"/>
  <match src="member_expression [102921,102940]" dest="member_expression [38926,38945]"/>
  <match src="identifier: totalNet [96512,96520]" dest="identifier: totalNet [32517,32525]"/>
  <match src="}: } [86647,86648]" dest="}: } [81123,81124]"/>
  <match src="function_body [100800,100866]" dest="function_body [36805,36871]"/>
  <match src="): ) [99668,99669]" dest="): ) [35673,35674]"/>
  <match src="identifier: GOVERNANCE_PROPOSAL_THRESHOLD [44619,44648]" dest="identifier: GOVERNANCE_PROPOSAL_THRESHOLD [13200,13229]"/>
  <match src="primitive_type [36927,36931]" dest="primitive_type [53405,53409]"/>
  <match src="return_type_definition [100357,100374]" dest="return_type_definition [36362,36379]"/>
  <match src=".: . [87524,87525]" dest=".: . [81325,81326]"/>
  <match src="identifier: _mint [21425,21430]" dest="identifier: decreaseDebt [57430,57442]"/>
  <match src="primitive_type [92674,92681]" dest="primitive_type [76027,76034]"/>
  <match src="number_literal: 2 [11286,11287]" dest="number_literal: 2 [11286,11287]"/>
  <match src="identifier: account [27682,27689]" dest="identifier: account [56500,56507]"/>
  <match src=".: . [107026,107027]" dest=".: . [43031,43032]"/>
  <match src="identifier: value [10623,10628]" dest="identifier: value [10623,10628]"/>
  <match src="parameter [55403,55410]" dest="parameter [21495,21502]"/>
  <match src="}: } [93982,93983]" dest="}: } [77335,77336]"/>
  <match src="type_name [94804,94811]" dest="type_name [30809,30816]"/>
  <match src="parameter [48619,48626]" dest="parameter [17200,17207]"/>
  <match src="assignment_expression [107360,107447]" dest="assignment_expression [43365,43452]"/>
  <match src="primitive_type [86227,86234]" dest="primitive_type [62261,62268]"/>
  <match src=".: . [100261,100262]" dest=".: . [36266,36267]"/>
  <match src="): ) [85348,85349]" dest="): ) [63440,63441]"/>
  <match src="return: return [48354,48360]" dest="return: return [16935,16941]"/>
  <match src="call_argument [84628,84633]" dest="call_argument [72201,72206]"/>
  <match src="number_literal: 1 [53426,53427]" dest="number_literal: 1 [64811,64812]"/>
  <match src="return: return [10347,10353]" dest="return: return [10347,10353]"/>
  <match src="(: ( [31107,31108]" dest="(: ( [47585,47586]"/>
  <match src="function_body [10600,10641]" dest="function_body [10600,10641]"/>
  <match src="parameter [104346,104361]" dest="parameter [40351,40366]"/>
  <match src="&quot;: &quot; [84669,84670]" dest="&quot;: &quot; [72245,72246]"/>
  <match src="identifier: epoch [105186,105191]" dest="identifier: epoch [41191,41196]"/>
  <match src="]: ] [90523,90524]" dest="]: ] [28950,28951]"/>
  <match src="call_argument [93424,93438]" dest="call_argument [76777,76791]"/>
  <match src="call_argument [20864,20865]" dest="call_argument [64509,64510]"/>
  <match src="variable_declaration [68700,68719]" dest="variable_declaration [79285,79299]"/>
  <match src="visibility [93699,93706]" dest="visibility [77052,77059]"/>
  <match src="identifier: coupons [98922,98929]" dest="identifier: coupons [34927,34934]"/>
  <match src="function_definition [83512,83794]" dest="function_definition [71521,71788]"/>
  <match src="identifier: expiration [106401,106411]" dest="identifier: expiration [42406,42416]"/>
  <match src="string: string [34006,34012]" dest="string: string [50484,50490]"/>
  <match src="view: view [97137,97141]" dest="view: view [33142,33146]"/>
  <match src="identifier: totalSupply [106251,106262]" dest="identifier: totalSupply [42256,42267]"/>
  <match src="): ) [22292,22293]" dest="): ) [63075,63076]"/>
  <match src="(: ( [102104,102105]" dest="(: ( [38109,38110]"/>
  <match src="identifier: balance [95466,95473]" dest="identifier: balance [31471,31478]"/>
  <match src="[: [ [90522,90523]" dest="[: [ [28949,28950]"/>
  <match src="uint256: uint256 [104665,104672]" dest="uint256: uint256 [40670,40677]"/>
  <match src="identifier: stringify [36540,36549]" dest="identifier: stringify [53018,53027]"/>
  <match src="member_expression [93325,93355]" dest="member_expression [76678,76708]"/>
  <match src="identifier: accounts [98025,98033]" dest="identifier: accounts [34030,34038]"/>
  <match src="identifier: amount [77937,77943]" dest="identifier: amount [64196,64202]"/>
  <match src="identifier: mul [7534,7537]" dest="identifier: mul [7534,7537]"/>
  <match src="visibility [6732,6740]" dest="visibility [6732,6740]"/>
  <match src="(: ( [97689,97690]" dest="(: ( [33694,33695]"/>
  <match src="function: function [107463,107471]" dest="function: function [43468,43476]"/>
  <match src="function_definition [96173,96269]" dest="function_definition [32178,32274]"/>
  <match src="==: == [10087,10089]" dest="==: == [10087,10089]"/>
  <match src="): ) [11172,11173]" dest="): ) [11172,11173]"/>
  <match src="library_declaration [694,5542]" dest="library_declaration [694,5542]"/>
  <match src="(: ( [8207,8208]" dest="(: ( [8207,8208]"/>
  <match src="variable_declaration_statement [35977,36015]" dest="variable_declaration_statement [52455,52493]"/>
  <match src="memory: memory [10673,10679]" dest="memory: memory [10673,10679]"/>
  <match src="returns: returns [10321,10328]" dest="returns: returns [10321,10328]"/>
  <match src="=: = [44433,44434]" dest="=: = [13014,13015]"/>
  <match src="call_expression [85740,85856]" dest="call_expression [81196,81305]"/>
  <match src="address: address [66539,66546]" dest="address: address [78254,78261]"/>
  <match src="(: ( [105557,105558]" dest="(: ( [41562,41563]"/>
  <match src=".: . [86929,86930]" dest=".: . [59300,59301]"/>
  <match src="identifier: payloadA [32467,32475]" dest="identifier: payloadA [48945,48953]"/>
  <match src="): ) [79709,79710]" dest="): ) [61883,61884]"/>
  <match src="primitive_type [75650,75657]" dest="primitive_type [67642,67649]"/>
  <match src="bytes32: bytes32 [33812,33819]" dest="bytes32: bytes32 [50290,50297]"/>
  <match src="): ) [48255,48256]" dest="): ) [16836,16837]"/>
  <match src="address: address [43832,43839]" dest="address: address [12413,12420]"/>
  <match src="state_mutability [47277,47281]" dest="state_mutability [15858,15862]"/>
  <match src="identifier: spender [105716,105723]" dest="identifier: spender [41721,41728]"/>
  <match src="primitive_type [103261,103267]" dest="primitive_type [39266,39272]"/>
  <match src="function_definition [95496,95606]" dest="function_definition [31501,31611]"/>
  <match src="): ) [104227,104228]" dest="): ) [40232,40233]"/>
  <match src="member_expression [79715,79748]" dest="member_expression [61889,61918]"/>
  <match src="state_mutability [95418,95422]" dest="state_mutability [31423,31427]"/>
  <match src="call_expression [4809,4846]" dest="call_expression [4809,4846]"/>
  <match src="identifier: offset [44130,44136]" dest="identifier: offset [12711,12717]"/>
  <match src="identifier: D256 [46971,46975]" dest="identifier: D256 [15552,15556]"/>
  <match src=",: , [101883,101884]" dest=",: , [37888,37889]"/>
  <match src="array_access [107210,107238]" dest="array_access [43215,43243]"/>
  <match src="type_name [97332,97339]" dest="type_name [33337,33344]"/>
  <match src="number_literal: 120 [29083,29086]" dest="number_literal: 120 [45561,45564]"/>
  <match src="member_expression [104541,104555]" dest="member_expression [40546,40560]"/>
  <match src="internal: internal [10571,10579]" dest="internal: internal [10571,10579]"/>
  <match src="call_argument [86503,86513]" dest="call_argument [63872,63882]"/>
  <match src="external: external [65657,65665]" dest="external: external [78584,78592]"/>
  <match src="public: public [97970,97976]" dest="public: public [33975,33981]"/>
  <match src="=: = [105923,105924]" dest="=: = [41928,41929]"/>
  <match src="uint256: uint256 [20718,20725]" dest="uint256: uint256 [64355,64362]"/>
  <match src="(: ( [6847,6848]" dest="(: ( [6847,6848]"/>
  <match src="external: external [71296,71304]" dest="external: external [83405,83413]"/>
  <match src="call_expression [34403,34422]" dest="call_expression [50881,50900]"/>
  <match src="}: } [64884,64885]" dest="}: } [27673,27674]"/>
  <match src="identifier: shift [37410,37415]" dest="identifier: shift [53888,53893]"/>
  <match src=".: . [100550,100551]" dest=".: . [36555,36556]"/>
  <match src="variable_declaration [35836,35850]" dest="variable_declaration [52314,52328]"/>
  <match src="visibility [47796,47804]" dest="visibility [16377,16385]"/>
  <match src="(: ( [48618,48619]" dest="(: ( [17199,17200]"/>
  <match src="member_expression [109454,109496]" dest="member_expression [69230,69272]"/>
  <match src=".: . [96471,96472]" dest=".: . [32476,32477]"/>
  <match src="identifier: _ [109575,109576]" dest="identifier: _ [69351,69352]"/>
  <match src="parameter [100366,100373]" dest="parameter [36371,36378]"/>
  <match src="primitive_type [107511,107518]" dest="primitive_type [43516,43523]"/>
  <match src=".: . [74566,74567]" dest=".: . [59328,59329]"/>
  <match src="parameter [45688,45695]" dest="parameter [14269,14276]"/>
  <match src="=: = [102919,102920]" dest="=: = [38924,38925]"/>
  <match src="member_expression [99190,99218]" dest="member_expression [35195,35223]"/>
  <match src="identifier: epoch [105144,105149]" dest="identifier: epoch [41149,41154]"/>
  <match src="(: ( [81247,81248]" dest="(: ( [60081,60082]"/>
  <match src="type_name [44457,44464]" dest="type_name [13038,13045]"/>
  <match src="returns: returns [96429,96436]" dest="returns: returns [32434,32441]"/>
  <match src="}: } [106870,106871]" dest="}: } [42875,42876]"/>
  <match src="}: } [97623,97624]" dest="}: } [33628,33629]"/>
  <match src="primitive_type [2345,2352]" dest="primitive_type [2345,2352]"/>
  <match src="visibility [77501,77509]" dest="visibility [56745,56753]"/>
  <match src="{: { [51965,51966]" dest="{: { [26600,26601]"/>
  <match src="identifier: amount [51994,52000]" dest="identifier: amount [26629,26635]"/>
  <match src="identifier: amount [103649,103655]" dest="identifier: amount [39654,39660]"/>
  <match src=".: . [107575,107576]" dest=".: . [43580,43581]"/>
  <match src="): ) [29935,29936]" dest="): ) [46413,46414]"/>
  <match src="visibility [66547,66554]" dest="visibility [66545,66552]"/>
  <match src="): ) [35406,35407]" dest="): ) [51884,51885]"/>
  <match src="type_name [104633,104640]" dest="type_name [40638,40645]"/>
  <match src="member_expression [99356,99393]" dest="member_expression [35361,35398]"/>
  <match src="}: } [7293,7294]" dest="}: } [7293,7294]"/>
  <match src="}: } [46481,46482]" dest="}: } [15062,15063]"/>
  <match src="): ) [47142,47143]" dest="): ) [15723,15724]"/>
  <match src="): ) [79750,79751]" dest="): ) [61920,61921]"/>
  <match src="type_name [33864,33871]" dest="type_name [50342,50349]"/>
  <match src="parameter [97098,97113]" dest="parameter [33103,33118]"/>
  <match src="visibility [85687,85695]" dest="visibility [80194,80202]"/>
  <match src="type_name [91296,91303]" dest="type_name [29723,29730]"/>
  <match src="identifier: owner [55442,55447]" dest="identifier: owner [21534,21539]"/>
  <match src="visibility [10307,10315]" dest="visibility [10307,10315]"/>
  <match src="primitive_type [99566,99573]" dest="primitive_type [35571,35578]"/>
  <match src="primitive_type [20699,20706]" dest="primitive_type [64321,64328]"/>
  <match src="parameter [33864,33880]" dest="parameter [50342,50358]"/>
  <match src=",: , [97113,97114]" dest=",: , [33118,33119]"/>
  <match src="[: [ [108353,108354]" dest="[: [ [44358,44359]"/>
  <match src="primitive_type [106577,106584]" dest="primitive_type [42582,42589]"/>
  <match src="identifier: must [30434,30438]" dest="identifier: must [46912,46916]"/>
  <match src="array_access [97523,97558]" dest="array_access [33528,33563]"/>
  <match src="identifier: dollarAmount [80661,80673]" dest="identifier: dollarAmount [62905,62917]"/>
  <match src="identifier: getPartial [9563,9573]" dest="identifier: getPartial [9563,9573]"/>
  <match src="}: } [21134,21135]" dest="}: } [65007,65008]"/>
  <match src="call_argument [9574,9584]" dest="call_argument [9574,9584]"/>
  <match src="type_name [9072,9076]" dest="type_name [9072,9076]"/>
  <match src="bytes: bytes [36618,36623]" dest="bytes: bytes [53096,53101]"/>
  <match src="number_literal: 0x3e [29259,29263]" dest="number_literal: 0x3e [45737,45741]"/>
  <match src="visibility [43808,43815]" dest="visibility [12389,12396]"/>
  <match src="type_name [90877,90881]" dest="type_name [29304,29308]"/>
  <match src="return_type_definition [54869,54883]" dest="return_type_definition [20961,20975]"/>
  <match src="function_body [31850,32359]" dest="function_body [48328,48837]"/>
  <match src="(: ( [97174,97175]" dest="(: ( [33179,33180]"/>
  <match src="call_argument [83659,83669]" dest="call_argument [71677,71687]"/>
  <match src="return_type_definition [69214,69243]" dest="return_type_definition [67983,68012]"/>
  <match src="is: is [92434,92436]" dest="is: is [75787,75789]"/>
  <match src="(: ( [98873,98874]" dest="(: ( [34878,34879]"/>
  <match src="new: new [36801,36804]" dest="new: new [53279,53282]"/>
  <match src=".: . [31333,31334]" dest=".: . [47811,47812]"/>
  <match src="return_type_definition [97982,97999]" dest="return_type_definition [33987,34004]"/>
  <match src=".: . [104942,104943]" dest=".: . [40947,40948]"/>
  <match src="identifier: mul [7967,7970]" dest="identifier: mul [7967,7970]"/>
  <match src="type_name [82920,82927]" dest="type_name [83179,83186]"/>
  <match src="identifier: reason [103986,103992]" dest="identifier: reason [39991,39997]"/>
  <match src="user_defined_type [91296,91303]" dest="user_defined_type [29723,29730]"/>
  <match src="identifier: balance [96035,96042]" dest="identifier: balance [32040,32047]"/>
  <match src="event_paramater [15289,15312]" dest="event_paramater [25816,25839]"/>
  <match src="call_argument [109787,109791]" dest="call_argument [69563,69567]"/>
  <match src="uint: uint [54947,54951]" dest="uint: uint [21039,21043]"/>
  <match src="function_body [33944,34531]" dest="function_body [50422,51009]"/>
  <match src="): ) [98236,98237]" dest="): ) [34241,34242]"/>
  <match src="identifier: D256 [6765,6769]" dest="identifier: D256 [6765,6769]"/>
  <match src="identifier: notPaused [83296,83305]" dest="identifier: onlyFrozenOrLocked [71310,71328]"/>
  <match src="=: = [106123,106124]" dest="=: = [42128,42129]"/>
  <match src="identifier: reason [108055,108061]" dest="identifier: reason [44060,44066]"/>
  <match src="private: private [43898,43905]" dest="private: private [12479,12486]"/>
  <match src="type_name [56289,56296]" dest="type_name [22381,22388]"/>
  <match src="}: } [46076,46077]" dest="}: } [14657,14658]"/>
  <match src="}: } [33736,33737]" dest="}: } [50214,50215]"/>
  <match src="number_literal: 0 [106683,106684]" dest="number_literal: 0 [42688,42689]"/>
  <match src=",: , [93783,93784]" dest=",: , [77136,77137]"/>
  <match src="function_body [108142,108403]" dest="function_body [44147,44408]"/>
  <match src="member_expression [104743,104775]" dest="member_expression [40748,40780]"/>
  <match src="identifier: _state [106125,106131]" dest="identifier: _state [42130,42136]"/>
  <match src="identifier: j [36105,36106]" dest="identifier: j [52583,52584]"/>
  <match src="call_argument [105197,105203]" dest="call_argument [41202,41208]"/>
  <match src="identifier: account [96768,96775]" dest="identifier: account [32773,32780]"/>
  <match src="identifier: provider [95928,95936]" dest="identifier: provider [31933,31941]"/>
  <match src="member_expression [95921,95941]" dest="member_expression [31926,31946]"/>
  <match src="): ) [3325,3326]" dest="): ) [3325,3326]"/>
  <match src="type_name [78819,78826]" dest="type_name [62725,62732]"/>
  <match src="call_expression [30958,30977]" dest="call_expression [47436,47455]"/>
  <match src="=: = [105151,105152]" dest="=: = [41156,41157]"/>
  <match src="identifier: totalStaged [96074,96085]" dest="identifier: totalStaged [32079,32090]"/>
  <match src="primitive_type [54993,55000]" dest="primitive_type [21085,21092]"/>
  <match src="uint256: uint256 [106542,106549]" dest="uint256: uint256 [42547,42554]"/>
  <match src="(: ( [59304,59305]" dest="(: ( [73165,73166]"/>
  <match src="call_argument [32719,32723]" dest="call_argument [49197,49201]"/>
  <match src="identifier: accounts [104708,104716]" dest="identifier: accounts [40713,40721]"/>
  <match src="return_statement [100248,100292]" dest="return_statement [36253,36297]"/>
  <match src="for: for [8642,8645]" dest="for: for [8642,8645]"/>
  <match src="identifier: _ [70538,70539]" dest="identifier: _ [83822,83823]"/>
  <match src="struct: struct [6606,6612]" dest="struct: struct [6606,6612]"/>
  <match src=",: , [103908,103909]" dest=",: , [39913,39914]"/>
  <match src="identifier: amount [22248,22254]" dest="identifier: amount [59965,59971]"/>
  <match src="visibility [37575,37582]" dest="visibility [54053,54060]"/>
  <match src="call_argument [50856,50874]" dest="call_argument [63116,63143]"/>
  <match src="call_struct_argument [7943,7985]" dest="call_struct_argument [7943,7985]"/>
  <match src="function_body [106208,106272]" dest="function_body [42213,42277]"/>
  <match src="internal: internal [48701,48709]" dest="internal: internal [17282,17290]"/>
  <match src="identifier: recipient [20843,20852]" dest="identifier: recipient [64488,64497]"/>
  <match src="identifier: sub [103974,103977]" dest="identifier: sub [39979,39982]"/>
  <match src="address: address [23028,23035]" dest="address: address [64082,64089]"/>
  <match src="visibility [92682,92689]" dest="visibility [76035,76042]"/>
  <match src="(: ( [91359,91360]" dest="(: ( [29786,29787]"/>
  <match src="state_mutability [12983,12987]" dest="state_mutability [23510,23514]"/>
  <match src=".: . [50958,50959]" dest=".: . [62964,62965]"/>
  <match src="return_type_definition [6879,6900]" dest="return_type_definition [6879,6900]"/>
  <match src="primitive_type [55502,55509]" dest="primitive_type [21594,21601]"/>
  <match src="parameter [106962,106976]" dest="parameter [42967,42981]"/>
  <match src="binary_expression [6545,6551]" dest="binary_expression [6545,6551]"/>
  <match src="call_expression [45949,46078]" dest="call_expression [14530,14659]"/>
  <match src="(: ( [83477,83478]" dest="(: ( [71486,71487]"/>
  <match src="{: { [97838,97839]" dest="{: { [33843,33844]"/>
  <match src="call_argument [34325,34344]" dest="call_argument [50803,50822]"/>
  <match src="type_name [44530,44537]" dest="type_name [13111,13118]"/>
  <match src="member_expression [8159,8169]" dest="member_expression [8159,8169]"/>
  <match src="{: { [97386,97387]" dest="{: { [33391,33392]"/>
  <match src="return_statement [7496,7548]" dest="return_statement [7496,7548]"/>
  <match src="identifier: reason [93431,93437]" dest="identifier: reason [76784,76790]"/>
  <match src="identifier: reason [32802,32808]" dest="identifier: reason [49280,49286]"/>
  <match src="identifier: result [38485,38491]" dest="identifier: result [54963,54969]"/>
  <match src=".: . [10746,10747]" dest=".: . [10746,10747]"/>
  <match src="array_access [107969,107997]" dest="array_access [43974,44002]"/>
  <match src="string [109806,109828]" dest="string [69582,69604]"/>
  <match src="identifier: value [11196,11201]" dest="identifier: value [11196,11201]"/>
  <match src=",: , [108112,108113]" dest=",: , [44117,44118]"/>
  <match src="parameter [88677,88681]" dest="parameter [74344,74348]"/>
  <match src="}: } [9825,9826]" dest="}: } [9825,9826]"/>
  <match src="pure: pure [35654,35658]" dest="pure: pure [52132,52136]"/>
  <match src="(: ( [33987,33988]" dest="(: ( [50465,50466]"/>
  <match src="comment: /**  * @title Require  * @author dYdX  *  * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()  */ [28724,28870]" dest="comment: // File: contracts/dao/Govern.sol [77340,77373]"/>
  <match src="(: ( [104097,104098]" dest="(: ( [40102,40103]"/>
  <match src="identifier: this [50215,50219]" dest="identifier: this [56517,56521]"/>
  <match src="=: = [28971,28972]" dest="=: = [45449,45450]"/>
  <match src="address: address [14778,14785]" dest="address: address [25305,25312]"/>
  <match src="identifier: reason [33542,33548]" dest="identifier: reason [50020,50026]"/>
  <match src=".: . [34792,34793]" dest=".: . [51270,51271]"/>
  <match src="identifier: errorMessage [4110,4122]" dest="identifier: errorMessage [4110,4122]"/>
  <match src="(: ( [56655,56656]" dest="(: ( [22747,22748]"/>
  <match src="return_type_definition [9504,9525]" dest="return_type_definition [9504,9525]"/>
  <match src="identifier: errorMessage [1927,1939]" dest="identifier: errorMessage [1927,1939]"/>
  <match src="call_expression [37419,37442]" dest="call_expression [53897,53920]"/>
  <match src="{: { [103010,103011]" dest="{: { [39015,39016]"/>
  <match src="primitive_type [95432,95439]" dest="primitive_type [31437,31444]"/>
  <match src="member_expression [106998,107015]" dest="member_expression [43003,43020]"/>
  <match src="array_access [104848,104868]" dest="array_access [40853,40873]"/>
  <match src="): ) [68736,68737]" dest="): ) [79322,79323]"/>
  <match src="]: ] [96775,96776]" dest="]: ] [32780,32781]"/>
  <match src="type_name [99803,99817]" dest="type_name [35808,35822]"/>
  <match src="(: ( [24274,24275]" dest="(: ( [56782,56783]"/>
  <match src="identifier: coupons [104768,104775]" dest="identifier: coupons [40773,40780]"/>
  <match src="): ) [56179,56180]" dest="): ) [22271,22272]"/>
  <match src=",: , [5395,5396]" dest=",: , [5395,5396]"/>
  <match src="): ) [103655,103656]" dest="): ) [39660,39661]"/>
  <match src="identifier: z [38302,38303]" dest="identifier: z [54780,54781]"/>
  <match src="member_expression [96352,96377]" dest="member_expression [32357,32382]"/>
  <match src="parameter [105438,105453]" dest="parameter [41443,41458]"/>
  <match src="call_argument [33035,33043]" dest="call_argument [49513,49521]"/>
  <match src="(: ( [98258,98259]" dest="(: ( [34263,34264]"/>
  <match src="]: ] [99209,99210]" dest="]: ] [35214,35215]"/>
  <match src="identifier: file [31146,31150]" dest="identifier: file [47624,47628]"/>
  <match src="identifier: Decimal [47291,47298]" dest="identifier: Decimal [15872,15879]"/>
  <match src="return_statement [95231,95241]" dest="return_statement [31236,31246]"/>
  <match src="visibility [98853,98859]" dest="visibility [34858,34864]"/>
  <match src="identifier: value [8623,8628]" dest="identifier: value [8623,8628]"/>
  <match src="): ) [102136,102137]" dest="): ) [38141,38142]"/>
  <match src="member_expression [103130,103155]" dest="member_expression [39135,39160]"/>
  <match src="if: if [32577,32579]" dest="if: if [49055,49057]"/>
  <match src="primitive_type [95313,95320]" dest="primitive_type [31318,31325]"/>
  <match src="primitive_type [107150,107157]" dest="primitive_type [43155,43162]"/>
  <match src="call_expression [100555,100575]" dest="call_expression [36560,36580]"/>
  <match src="pure: pure [54679,54683]" dest="pure: pure [20771,20775]"/>
  <match src="call_argument [108055,108061]" dest="call_argument [44060,44066]"/>
  <match src="(: ( [54852,54853]" dest="(: ( [20944,20945]"/>
  <match src="}: } [8177,8178]" dest="}: } [8177,8178]"/>
  <match src="): ) [94984,94985]" dest="): ) [30989,30990]"/>
  <match src="parameter [95115,95128]" dest="parameter [31120,31133]"/>
  <match src="}: } [98208,98209]" dest="}: } [34213,34214]"/>
  <match src="identifier: balance [105369,105376]" dest="identifier: balance [41374,41381]"/>
  <match src="]: ] [105723,105724]" dest="]: ] [41728,41729]"/>
  <match src="call_argument [78471,78477]" dest="call_argument [64714,64720]"/>
  <match src="internal: internal [48805,48813]" dest="internal: internal [17386,17394]"/>
  <match src="user_defined_type [45909,45922]" dest="user_defined_type [14490,14503]"/>
  <match src="function_body [46583,46665]" dest="function_body [15164,15246]"/>
  <match src="type_name [86175,86182]" dest="type_name [67099,67106]"/>
  <match src="identifier: balanceOfRewarded [86029,86046]" dest="identifier: balanceOf [78662,78671]"/>
  <match src="identifier: balance [102630,102637]" dest="identifier: balance [38635,38642]"/>
  <match src="array_access [103830,103854]" dest="array_access [39835,39859]"/>
  <match src="inheritance_specifier [16608,16614]" dest="inheritance_specifier [60926,60931]"/>
  <match src="identifier: coupons [106461,106468]" dest="identifier: coupons [42466,42473]"/>
  <match src="type_cast_expression [83350,83363]" dest="type_cast_expression [71386,71399]"/>
  <match src="call_expression [50829,50938]" dest="call_expression [63089,63205]"/>
  <match src=",: , [3955,3956]" dest=",: , [3955,3956]"/>
  <match src="): ) [107947,107948]" dest="): ) [43952,43953]"/>
  <match src="return_statement [1483,1534]" dest="return_statement [1483,1534]"/>
  <match src="primitive_type [91031,91038]" dest="primitive_type [29458,29465]"/>
  <match src="): ) [47914,47915]" dest="): ) [16495,16496]"/>
  <match src="member_expression [34789,34805]" dest="member_expression [51267,51283]"/>
  <match src="=: = [37175,37176]" dest="=: = [53653,53654]"/>
  <match src="parameter [55534,55544]" dest="parameter [21626,21636]"/>
  <match src="identifier: incrementBalanceOf [103437,103455]" dest="identifier: incrementBalanceOf [39442,39460]"/>
  <match src="call_argument [17482,17488]" dest="call_argument [57239,57245]"/>
  <match src="function_body [96447,96495]" dest="function_body [32452,32500]"/>
  <match src="call_argument [77937,77943]" dest="call_argument [64196,64202]"/>
  <match src="expression_statement [107569,107665]" dest="expression_statement [43574,43670]"/>
  <match src="function_body [95130,95164]" dest="function_body [31135,31169]"/>
  <match src="pure: pure [47565,47569]" dest="pure: pure [16146,16150]"/>
  <match src="if_statement [30588,31079]" dest="if_statement [47066,47557]"/>
  <match src="function: function [47058,47066]" dest="function: function [15639,15647]"/>
  <match src="[: [ [103845,103846]" dest="[: [ [39850,39851]"/>
  <match src="parameter [7787,7803]" dest="parameter [7787,7803]"/>
  <match src="identifier: newLock [108300,108307]" dest="identifier: newLock [44305,44312]"/>
  <match src="call_argument [7941,7987]" dest="call_argument [7941,7987]"/>
  <match src="identifier: require [20835,20842]" dest="identifier: require [64480,64487]"/>
  <match src="primitive_type [29420,29427]" dest="primitive_type [45898,45905]"/>
  <match src="{: { [105863,105864]" dest="{: { [41868,41869]"/>
  <match src="function_definition [45858,46086]" dest="function_definition [14439,14667]"/>
  <match src="visibility [104131,104139]" dest="visibility [40136,40144]"/>
  <match src="): ) [10305,10306]" dest="): ) [10305,10306]"/>
  <match src="[: [ [36921,36922]" dest="[: [ [53399,53400]"/>
  <match src="{: { [100375,100376]" dest="{: { [36380,36381]"/>
  <match src="address: address [55788,55795]" dest="address: address [21880,21887]"/>
  <match src="state_variable_declaration [43800,43884]" dest="state_variable_declaration [12381,12465]"/>
  <match src="using: using [66453,66458]" dest="using: using [65805,65810]"/>
  <match src="bytes32: bytes32 [29865,29872]" dest="bytes32: bytes32 [46343,46350]"/>
  <match src="type_name [105608,105615]" dest="type_name [41613,41620]"/>
  <match src="(: ( [86601,86602]" dest="(: ( [81093,81094]"/>
  <match src="): ) [79643,79644]" dest="): ) [61591,61592]"/>
  <match src="return: return [38779,38785]" dest="return: return [55257,55263]"/>
  <match src="function: function [85655,85663]" dest="function: function [80159,80167]"/>
  <match src="identifier: amount [104371,104377]" dest="identifier: amount [40376,40382]"/>
  <match src="state_variable_declaration [44902,44955]" dest="state_variable_declaration [13483,13536]"/>
  <match src="primitive_type [16641,16648]" dest="primitive_type [60958,60965]"/>
  <match src="user_defined_type [11083,11087]" dest="user_defined_type [11083,11087]"/>
  <match src="call_argument [34214,34220]" dest="call_argument [50692,50698]"/>
  <match src="): ) [9817,9818]" dest="): ) [9817,9818]"/>
  <match src="parameter [107305,107322]" dest="parameter [43310,43327]"/>
  <match src="visibility [43708,43715]" dest="visibility [12289,12296]"/>
  <match src="identifier: _account [65647,65655]" dest="identifier: candidate [78552,78561]"/>
  <match src="call_argument [93256,93273]" dest="call_argument [76609,76626]"/>
  <match src="return_statement [45813,45843]" dest="return_statement [14394,14424]"/>
  <match src="type_name [52110,52117]" dest="type_name [26745,26752]"/>
  <match src="public: public [96704,96710]" dest="public: public [32709,32715]"/>
  <match src="): ) [87016,87017]" dest="): ) [59411,59412]"/>
  <match src="call_argument [59305,59320]" dest="call_argument [73178,73185]"/>
  <match src="): ) [86191,86192]" dest="): ) [62188,62189]"/>
  <match src="array_access [106819,106839]" dest="array_access [42824,42844]"/>
  <match src="): ) [12972,12973]" dest="): ) [23499,23500]"/>
  <match src="type_name [97991,97998]" dest="type_name [33996,34003]"/>
  <match src="identifier: bonded [91118,91124]" dest="identifier: bonded [29545,29551]"/>
  <match src="call_argument [32836,32842]" dest="call_argument [49314,49320]"/>
  <match src="identifier: balance [96359,96366]" dest="identifier: balance [32364,32371]"/>
  <match src="{: { [46445,46446]" dest="{: { [15026,15027]"/>
  <match src="identifier: onlyFrozen [83554,83564]" dest="identifier: onlyFrozenOrFluid [72369,72386]"/>
  <match src="(: ( [29389,29390]" dest="(: ( [45867,45868]"/>
  <match src=".: . [104958,104959]" dest=".: . [40963,40964]"/>
  <match src="returns: returns [95679,95686]" dest="returns: returns [31684,31691]"/>
  <match src="yul_path [93938,93942]" dest="yul_path [77291,77295]"/>
  <match src="primitive_type [100462,100469]" dest="primitive_type [36467,36474]"/>
  <match src="return_statement [38478,38492]" dest="return_statement [54956,54970]"/>
  <match src="): ) [45595,45596]" dest="): ) [14176,14177]"/>
  <match src="memory: memory [45923,45929]" dest="memory: memory [14504,14510]"/>
  <match src="yul_identifier [93944,93961]" dest="yul_identifier [77297,77314]"/>
  <match src="call_expression [6924,6945]" dest="call_expression [6924,6945]"/>
  <match src="primitive_type [38691,38696]" dest="primitive_type [55169,55174]"/>
  <match src=",: , [55568,55569]" dest=",: , [21660,21661]"/>
  <match src="identifier: value [50321,50326]" dest="identifier: value [72353,72358]"/>
  <match src="type_cast_expression [31912,32325]" dest="type_cast_expression [48390,48803]"/>
  <match src="function_body [8127,8187]" dest="function_body [8127,8187]"/>
  <match src="function_definition [37520,38499]" dest="function_definition [53998,54977]"/>
  <match src="returns: returns [96716,96723]" dest="returns: returns [32721,32728]"/>
  <match src="): ) [45929,45930]" dest="): ) [14510,14511]"/>
  <match src="(: ( [56799,56800]" dest="(: ( [22891,22892]"/>
  <match src="(: ( [109739,109740]" dest="(: ( [69515,69516]"/>
  <match src="identifier: D256 [46401,46405]" dest="identifier: D256 [14982,14986]"/>
  <match src="identifier: b [9807,9808]" dest="identifier: b [9807,9808]"/>
  <match src="function: function [102680,102688]" dest="function: function [38685,38693]"/>
  <match src="function_definition [5373,5539]" dest="function_definition [5373,5539]"/>
  <match src="function: function [98703,98711]" dest="function: function [34708,34716]"/>
  <match src="function_definition [22844,23182]" dest="function_definition [63986,64272]"/>
  <match src="identifier: start [100706,100711]" dest="identifier: start [36711,36716]"/>
  <match src="primitive_type [93424,93430]" dest="primitive_type [76777,76783]"/>
  <match src="): ) [52124,52125]" dest="): ) [26759,26760]"/>
  <match src="}: } [100022,100023]" dest="}: } [36027,36028]"/>
  <match src="primitive_type [1007,1014]" dest="primitive_type [1007,1014]"/>
  <match src="): ) [35634,35635]" dest="): ) [52112,52113]"/>
  <match src="public: public [96841,96847]" dest="public: public [32846,32852]"/>
  <match src="type_name [83206,83213]" dest="type_name [83117,83124]"/>
  <match src="function: function [13235,13243]" dest="function: function [23762,23770]"/>
  <match src="identifier: account [97106,97113]" dest="identifier: account [33111,33118]"/>
  <match src="external: external [84802,84810]" dest="external: external [72360,72368]"/>
  <match src="binary_expression [106653,106684]" dest="binary_expression [42658,42689]"/>
  <match src="primitive_type [72477,72484]" dest="primitive_type [65990,65997]"/>
  <match src="call_expression [84344,84379]" dest="call_expression [71970,72005]"/>
  <match src="identifier: Decimal [46393,46400]" dest="identifier: Decimal [14974,14981]"/>
  <match src="primitive_type [83206,83213]" dest="primitive_type [83117,83124]"/>
  <match src="struct_member [91110,91125]" dest="struct_member [29537,29552]"/>
  <match src="uint: uint [54878,54882]" dest="uint: uint [20970,20974]"/>
  <match src="pure: pure [54741,54745]" dest="pure: pure [20833,20837]"/>
  <match src="internal: internal [102418,102426]" dest="internal: internal [38423,38431]"/>
  <match src="type_name [96882,96889]" dest="type_name [32887,32894]"/>
  <match src="identifier: account [105029,105036]" dest="identifier: account [41034,41041]"/>
  <match src="identifier: Require [86002,86009]" dest="identifier: Require [80421,80428]"/>
  <match src="): ) [105325,105326]" dest="): ) [41330,41331]"/>
  <match src="state_mutability [45895,45899]" dest="state_mutability [14476,14480]"/>
  <match src="if: if [11190,11192]" dest="if: if [11190,11192]"/>
  <match src="(: ( [96597,96598]" dest="(: ( [32602,32603]"/>
  <match src="memory: memory [47136,47142]" dest="memory: memory [15717,15723]"/>
  <match src="pure: pure [7881,7885]" dest="pure: pure [7881,7885]"/>
  <match src="function_body [93227,93492]" dest="function_body [76580,76845]"/>
  <match src="identifier: COMMA [32993,32998]" dest="identifier: COMMA [49471,49476]"/>
  <match src="visibility [99933,99939]" dest="visibility [35938,35944]"/>
  <match src="(: ( [48219,48220]" dest="(: ( [16800,16801]"/>
  <match src="{: { [98761,98762]" dest="{: { [34766,34767]"/>
  <match src="parameter [22877,22892]" dest="parameter [64010,64025]"/>
  <match src="function_body [10481,10529]" dest="function_body [10481,10529]"/>
  <match src="]: ] [108198,108199]" dest="]: ] [44203,44204]"/>
  <match src="primitive_type [86157,86164]" dest="primitive_type [62129,62136]"/>
  <match src="function: function [95496,95504]" dest="function: function [31501,31509]"/>
  <match src="returns: returns [56523,56530]" dest="returns: returns [22615,22622]"/>
  <match src="member_expression [85267,85277]" dest="member_expression [73042,73052]"/>
  <match src="event_paramater [27201,27224]" dest="event_paramater [61181,61204]"/>
  <match src="primitive_type [9906,9910]" dest="primitive_type [9906,9910]"/>
  <match src="comment: // File: @openzeppelin/contracts/access/Roles.sol [25937,25986]" dest="comment: // File: contracts/dao/Comptroller.sol [55319,55357]"/>
  <match src="state_mutability [98494,98498]" dest="state_mutability [34499,34503]"/>
  <match src="primitive_type [90088,90095]" dest="primitive_type [28515,28522]"/>
  <match src="identifier: candidate [107587,107596]" dest="identifier: candidate [43592,43601]"/>
  <match src="uint256: uint256 [3935,3942]" dest="uint256: uint256 [3935,3942]"/>
  <match src="): ) [7987,7988]" dest="): ) [7987,7988]"/>
  <match src="(: ( [98603,98604]" dest="(: ( [34608,34609]"/>
  <match src="internal: internal [45770,45778]" dest="internal: internal [14351,14359]"/>
  <match src=",: , [83363,83364]" dest=",: , [71399,71400]"/>
  <match src="(: ( [56559,56560]" dest="(: ( [22651,22652]"/>
  <match src="member_expression [106435,106468]" dest="member_expression [42440,42473]"/>
  <match src="public: public [99581,99587]" dest="public: public [35586,35592]"/>
  <match src="pure: pure [46138,46142]" dest="pure: pure [14719,14723]"/>
  <match src="]: ] [103567,103568]" dest="]: ] [39572,39573]"/>
  <match src="type_name [48724,48731]" dest="type_name [17305,17312]"/>
  <match src="parameter [56480,56484]" dest="parameter [22572,22576]"/>
  <match src="&quot;: &quot; [22996,22997]" dest="&quot;: &quot; [63835,63836]"/>
  <match src="identifier: ADVANCE_INCENTIVE [44860,44877]" dest="identifier: ADVANCE_INCENTIVE [13441,13458]"/>
  <match src="return_statement [95590,95599]" dest="return_statement [31595,31604]"/>
  <match src="identifier: transfer [13244,13252]" dest="identifier: transfer [23771,23779]"/>
  <match src="identifier: msg [83284,83287]" dest="identifier: msg [78612,78615]"/>
  <match src="]: ] [108361,108362]" dest="]: ] [44366,44367]"/>
  <match src="internal: internal [10021,10029]" dest="internal: internal [10021,10029]"/>
  <match src="): ) [96869,96870]" dest="): ) [32874,32875]"/>
  <match src="type_name [8027,8031]" dest="type_name [8027,8031]"/>
  <match src="uint256: uint256 [98874,98881]" dest="uint256: uint256 [34879,34886]"/>
  <match src="return: return [95590,95596]" dest="return: return [31595,31601]"/>
  <match src="public: public [96304,96310]" dest="public: public [32309,32315]"/>
  <match src="function_definition [29376,29813]" dest="function_definition [45854,46291]"/>
  <match src="type_name [30429,30433]" dest="type_name [46907,46911]"/>
  <match src="return: return [102173,102179]" dest="return: return [38178,38184]"/>
  <match src="identifier: owner [55510,55515]" dest="identifier: owner [21602,21607]"/>
  <match src="member_expression [104541,104566]" dest="member_expression [40546,40571]"/>
  <match src="bytes32: bytes32 [31138,31145]" dest="bytes32: bytes32 [47616,47623]"/>
  <match src="parameter [9304,9315]" dest="parameter [9304,9315]"/>
  <match src="call_expression [98320,98348]" dest="call_expression [34325,34353]"/>
  <match src=".: . [109434,109435]" dest=".: . [69210,69211]"/>
  <match src="uint256: uint256 [44670,44677]" dest="uint256: uint256 [13251,13258]"/>
  <match src=",: , [11096,11097]" dest=",: , [11096,11097]"/>
  <match src="new_expression [37788,37797]" dest="new_expression [54266,54275]"/>
  <match src="identifier: candidate [107158,107167]" dest="identifier: candidate [43163,43172]"/>
  <match src="identifier: newImplementation [93466,93483]" dest="identifier: newImplementation [76819,76836]"/>
  <match src="identifier: initialized [108420,108431]" dest="identifier: initialized [44425,44436]"/>
  <match src="array_access [107053,107081]" dest="array_access [43058,43086]"/>
  <match src="yul_identifier [35392,35398]" dest="yul_identifier [51870,51876]"/>
  <match src=",: , [22957,22958]" dest=",: , [63770,63771]"/>
  <match src="identifier: accounts [108182,108190]" dest="identifier: accounts [44187,44195]"/>
  <match src="function_definition [46494,46665]" dest="function_definition [15075,15246]"/>
  <match src="identifier: encodeWithSignature [93360,93379]" dest="identifier: encodeWithSignature [76713,76732]"/>
  <match src="identifier: newImplementation [93256,93273]" dest="identifier: newImplementation [76609,76626]"/>
  <match src="user_defined_type [8812,8816]" dest="user_defined_type [8812,8816]"/>
  <match src="parameter [8491,8502]" dest="parameter [8491,8502]"/>
  <match src="view: view [65666,65670]" dest="view: view [81968,81972]"/>
  <match src="member_expression [85869,85881]" dest="member_expression [80214,80226]"/>
  <match src="identifier: D256 [8785,8789]" dest="identifier: D256 [8785,8789]"/>
  <match src="return: return [89221,89227]" dest="return: return [74888,74894]"/>
  <match src="visibility [86713,86721]" dest="visibility [63634,63642]"/>
  <match src="(: ( [8149,8150]" dest="(: ( [8149,8150]"/>
  <match src=".: . [97558,97559]" dest=".: . [33563,33564]"/>
  <match src="revert_statement [33981,34513]" dest="revert_statement [50459,50991]"/>
  <match src="primitive_type [90350,90357]" dest="primitive_type [28777,28784]"/>
  <match src="variable_declaration_statement [88694,88707]" dest="variable_declaration_statement [74361,74374]"/>
  <match src="address: address [55231,55238]" dest="address: address [21323,21330]"/>
  <match src="]: ] [108498,108499]" dest="]: ] [44503,44504]"/>
  <match src="identifier: div [10747,10750]" dest="identifier: div [10747,10750]"/>
  <match src="parameter [46562,46581]" dest="parameter [15143,15162]"/>
  <match src="return_statement [9101,9149]" dest="return_statement [9101,9149]"/>
  <match src="call_argument [102953,102959]" dest="call_argument [38958,38964]"/>
  <match src="(: ( [9368,9369]" dest="(: ( [9368,9369]"/>
  <match src="): ) [95439,95440]" dest="): ) [31444,31445]"/>
  <match src=",: , [33826,33827]" dest=",: , [50304,50305]"/>
  <match src="return_type_definition [56404,56418]" dest="return_type_definition [22496,22510]"/>
  <match src="user_defined_type [98279,98302]" dest="user_defined_type [34284,34307]"/>
  <match src="state_variable_declaration [45501,45597]" dest="state_variable_declaration [14082,14178]"/>
  <match src="struct_member [90598,90614]" dest="struct_member [29025,29041]"/>
  <match src="return_statement [45708,45720]" dest="return_statement [14289,14301]"/>
  <match src=",: , [83669,83670]" dest=",: , [71687,71688]"/>
  <match src="[: [ [97291,97292]" dest="[: [ [33296,33297]"/>
  <match src="primitive_type [99020,99027]" dest="primitive_type [35025,35032]"/>
  <match src="type_name [10044,10048]" dest="type_name [10044,10048]"/>
  <match src="identifier: payloadA [32163,32171]" dest="identifier: payloadA [48641,48649]"/>
  <match src="string_literal [87051,87081]" dest="string_literal [59446,59469]"/>
  <match src="=: = [104741,104742]" dest="=: = [40746,40747]"/>
  <match src="primitive_type [72183,72190]" dest="primitive_type [65865,65872]"/>
  <match src="emit: emit [83754,83758]" dest="emit: emit [71748,71752]"/>
  <match src="!: ! [109930,109931]" dest="!: ! [69706,69707]"/>
  <match src="identifier: Coupons [90598,90605]" dest="identifier: Coupons [29025,29032]"/>
  <match src="identifier: reason [107541,107547]" dest="identifier: reason [43546,43552]"/>
  <match src="internal: internal [108451,108459]" dest="internal: internal [44456,44464]"/>
  <match src="member_expression [9354,9364]" dest="member_expression [9354,9364]"/>
  <match src="[: [ [107986,107987]" dest="[: [ [43991,43992]"/>
  <match src="parameter [17897,17911]" dest="parameter [59853,59867]"/>
  <match src="comment: // ============ Self Functions ============ [7311,7354]" dest="comment: // ============ Self Functions ============ [7311,7354]"/>
  <match src="function_definition [64736,64760]" dest="function_definition [27525,27549]"/>
  <match src="}: } [33729,33730]" dest="}: } [50207,50208]"/>
  <match src="{: { [100511,100512]" dest="{: { [36516,36517]"/>
  <match src="type_name [107727,107734]" dest="type_name [43732,43739]"/>
  <match src="identifier: LPAREN [30236,30242]" dest="identifier: LPAREN [46714,46720]"/>
  <match src="user_defined_type [9669,9673]" dest="user_defined_type [9669,9673]"/>
  <match src="private: private [44602,44609]" dest="private: private [13183,13190]"/>
  <match src="identifier: D256 [47299,47303]" dest="identifier: D256 [15880,15884]"/>
  <match src="uint256: uint256 [75882,75889]" dest="uint256: uint256 [66993,67000]"/>
  <match src="): ) [97038,97039]" dest="): ) [33043,33044]"/>
  <match src="member_expression [106102,106114]" dest="member_expression [42107,42119]"/>
  <match src="private: private [98486,98493]" dest="private: private [34491,34498]"/>
  <match src="return: return [96965,96971]" dest="return: return [32970,32976]"/>
  <match src="identifier: b [4103,4104]" dest="identifier: b [4103,4104]"/>
  <match src="visibility [64785,64791]" dest="visibility [27574,27580]"/>
  <match src="return_statement [9333,9389]" dest="return_statement [9333,9389]"/>
  <match src="member_expression [99837,99871]" dest="member_expression [35842,35876]"/>
  <match src="return_statement [10729,10757]" dest="return_statement [10729,10757]"/>
  <match src="address: address [56228,56235]" dest="address: address [22320,22327]"/>
  <match src="function_body [95903,95949]" dest="function_body [31908,31954]"/>
  <match src="comment: /**      * Governance      */ [106879,106910]" dest="comment: /**      * Governance      */ [42884,42915]"/>
  <match src="call_expression [102623,102664]" dest="call_expression [38628,38669]"/>
  <match src="(: ( [31307,31308]" dest="(: ( [47785,47786]"/>
  <match src="user_defined_type [9642,9646]" dest="user_defined_type [9642,9646]"/>
  <match src="parameter [96544,96551]" dest="parameter [32549,32556]"/>
  <match src="): ) [6899,6900]" dest="): ) [6899,6900]"/>
  <match src="member_expression [106998,107032]" dest="member_expression [43003,43037]"/>
  <match src="member_expression [98901,98914]" dest="member_expression [34906,34919]"/>
  <match src="internal: internal [102724,102732]" dest="internal: internal [38729,38737]"/>
  <match src="parameter [56228,56235]" dest="parameter [22320,22327]"/>
  <match src="): ) [37939,37940]" dest="): ) [54417,54418]"/>
  <match src="primitive_type [97791,97798]" dest="primitive_type [33796,33803]"/>
  <match src="return: return [98528,98534]" dest="return: return [34533,34539]"/>
  <match src="type_name [95515,95522]" dest="type_name [31520,31527]"/>
  <match src="binary_expression [2691,2696]" dest="binary_expression [2691,2696]"/>
  <match src="identifier: ASCII_LOWER_EX [37925,37939]" dest="identifier: ASCII_LOWER_EX [54403,54417]"/>
  <match src="return_statement [96021,96050]" dest="return_statement [32026,32055]"/>
  <match src="): ) [106638,106639]" dest="): ) [42643,42644]"/>
  <match src="type_name [48469,48481]" dest="type_name [17050,17062]"/>
  <match src="public: public [100773,100779]" dest="public: public [36778,36784]"/>
  <match src=",: , [107909,107910]" dest=",: , [43914,43915]"/>
  <match src="primitive_type [47579,47586]" dest="primitive_type [16160,16167]"/>
  <match src="call_argument [2727,2762]" dest="call_argument [2727,2762]"/>
  <match src="state_mutability [48154,48158]" dest="state_mutability [16735,16739]"/>
  <match src="visibility [97669,97675]" dest="visibility [33674,33680]"/>
  <match src="!: ! [30592,30593]" dest="!: ! [47070,47071]"/>
  <match src=".: . [102637,102638]" dest=".: . [38642,38643]"/>
  <match src="type_cast_expression [34006,34497]" dest="type_cast_expression [50484,50975]"/>
  <match src="primitive_type [101885,101892]" dest="primitive_type [37890,37897]"/>
  <match src=",: , [33853,33854]" dest=",: , [50331,50332]"/>
  <match src="&quot;: &quot; [4819,4820]" dest="&quot;: &quot; [4819,4820]"/>
  <match src="uint256: uint256 [102402,102409]" dest="uint256: uint256 [38407,38414]"/>
  <match src="identifier: balance [95365,95372]" dest="identifier: balance [31370,31377]"/>
  <match src="member_expression [105266,105279]" dest="member_expression [41271,41284]"/>
  <match src="identifier: unbond [84780,84786]" dest="identifier: unbond [72338,72344]"/>
  <match src="type_name [12997,13004]" dest="type_name [23524,23531]"/>
  <match src="}: } [8945,8946]" dest="}: } [8945,8946]"/>
  <match src="identifier: sender [20762,20768]" dest="identifier: sender [64399,64405]"/>
  <match src="member_expression [69611,69624]" dest="member_expression [82102,82115]"/>
  <match src="identifier: coupons [104826,104833]" dest="identifier: coupons [40831,40838]"/>
  <match src="function: function [74485,74493]" dest="function: function [59250,59258]"/>
  <match src="member_expression [82614,82624]" dest="member_expression [63760,63770]"/>
  <match src="returns: returns [47447,47454]" dest="returns: returns [16028,16035]"/>
  <match src="number_literal: 0 [20864,20865]" dest="number_literal: 0 [64509,64510]"/>
  <match src="identifier: deposit [83241,83248]" dest="identifier: deposit [71278,71285]"/>
  <match src="identifier: bstr [36366,36370]" dest="identifier: bstr [52844,52848]"/>
  <match src="): ) [83910,83911]" dest="): ) [71640,71641]"/>
  <match src="return_statement [46294,46322]" dest="return_statement [14875,14903]"/>
  <match src="{: { [47948,47949]" dest="{: { [16529,16530]"/>
  <match src="type_name [24231,24238]" dest="type_name [18625,18632]"/>
  <match src="internal: internal [78035,78043]" dest="internal: internal [56458,56466]"/>
  <match src=".: . [84900,84901]" dest=".: . [72489,72490]"/>
  <match src="identifier: decrementBalanceOfStaged [84591,84615]" dest="identifier: decrementBalanceOfStaged [72164,72188]"/>
  <match src="identifier: length [35400,35406]" dest="identifier: length [51878,51884]"/>
  <match src="parameter [7467,7478]" dest="parameter [7467,7478]"/>
  <match src="identifier: sender [55636,55642]" dest="identifier: sender [21728,21734]"/>
  <match src="identifier: coupons [104951,104958]" dest="identifier: coupons [40956,40963]"/>
  <match src="): ) [90881,90882]" dest="): ) [29308,29309]"/>
  <match src="function_definition [56187,56237]" dest="function_definition [22279,22329]"/>
  <match src="identifier: provide [85664,85671]" dest="identifier: commit [80168,80174]"/>
  <match src="identifier: upgradeTo [93181,93190]" dest="identifier: upgradeTo [76534,76543]"/>
  <match src="identifier: account [82993,83000]" dest="identifier: account [70970,70977]"/>
  <match src="identifier: i [36138,36139]" dest="identifier: i [52616,52617]"/>
  <match src="primitive_type [90833,90840]" dest="primitive_type [29260,29267]"/>
  <match src="(: ( [86281,86282]" dest="(: ( [80379,80380]"/>
  <match src="call_argument [31542,31561]" dest="call_argument [48020,48039]"/>
  <match src="bytes32: bytes32 [33253,33260]" dest="bytes32: bytes32 [49731,49738]"/>
  <match src="): ) [22997,22998]" dest="): ) [63836,63837]"/>
  <match src="parameter [13615,13628]" dest="parameter [24142,24155]"/>
  <match src="): ) [8120,8121]" dest="): ) [8120,8121]"/>
  <match src="number_literal: 1 [106150,106151]" dest="number_literal: 1 [42155,42156]"/>
  <match src="identifier: candidates [100400,100410]" dest="identifier: candidates [36405,36415]"/>
  <match src="): ) [103808,103809]" dest="): ) [39813,39814]"/>
  <match src="function_definition [98957,99094]" dest="function_definition [34962,35099]"/>
  <match src="comment: // 4.5% [45467,45474]" dest="comment: // 4.5% [14048,14055]"/>
  <match src="pure: pure [47925,47929]" dest="pure: pure [16506,16510]"/>
  <match src="identifier: BASE [7538,7542]" dest="identifier: BASE [7538,7542]"/>
  <match src="function_body [108460,108526]" dest="function_body [44465,44531]"/>
  <match src="call_expression [70426,70525]" dest="call_expression [80536,80685]"/>
  <match src=".: . [103637,103638]" dest=".: . [39642,39643]"/>
  <match src="]: ] [107426,107427]" dest="]: ] [43431,43432]"/>
  <match src="constant: constant [94820,94828]" dest="constant: constant [30825,30833]"/>
  <match src="call_expression [96904,96917]" dest="call_expression [32909,32922]"/>
  <match src="identifier: that [109712,109716]" dest="identifier: that [69488,69492]"/>
  <match src="state_mutability [54933,54937]" dest="state_mutability [21025,21029]"/>
  <match src="): ) [1438,1439]" dest="): ) [1438,1439]"/>
  <match src="uint256: uint256 [1463,1470]" dest="uint256: uint256 [1463,1470]"/>
  <match src="visibility [108451,108459]" dest="visibility [44456,44464]"/>
  <match src="struct_member [90858,90889]" dest="struct_member [29285,29316]"/>
  <match src="identifier: i [36371,36372]" dest="identifier: i [52849,52850]"/>
  <match src="identifier: a [1039,1040]" dest="identifier: a [1039,1040]"/>
  <match src="parameter [7834,7854]" dest="parameter [7834,7854]"/>
  <match src="view: view [56214,56218]" dest="view: view [22306,22310]"/>
  <match src="returns: returns [54938,54945]" dest="returns: returns [21030,21037]"/>
  <match src="contract_declaration [90930,91511]" dest="contract_declaration [29357,29938]"/>
  <match src="{: { [6783,6784]" dest="{: { [6783,6784]"/>
  <match src="address: address [83051,83058]" dest="address: address [70855,70862]"/>
  <match src="): ) [7427,7428]" dest="): ) [7427,7428]"/>
  <match src="public: public [95980,95986]" dest="public: public [31985,31991]"/>
  <match src="member_expression [99190,99203]" dest="member_expression [35195,35208]"/>
  <match src="(: ( [93937,93938]" dest="(: ( [77290,77291]"/>
  <match src="view: view [56158,56162]" dest="view: view [22250,22254]"/>
  <match src=",: , [31759,31760]" dest=",: , [48237,48238]"/>
  <match src="array_access [104185,104209]" dest="array_access [40190,40214]"/>
  <match src="visibility [45886,45894]" dest="visibility [14467,14475]"/>
  <match src=",: , [83903,83904]" dest=",: , [71633,71634]"/>
  <match src="primitive_type [33891,33898]" dest="primitive_type [50369,50376]"/>
  <match src="event_paramater [55966,55982]" dest="event_paramater [22058,22074]"/>
  <match src="primitive_type [4782,4789]" dest="primitive_type [4782,4789]"/>
  <match src=",: , [15049,15050]" dest=",: , [25576,25577]"/>
  <match src="parameter [14365,14380]" dest="parameter [24892,24907]"/>
  <match src="identifier: epochs [106826,106832]" dest="identifier: epochs [42831,42837]"/>
  <match src="bytes2: bytes2 [29145,29151]" dest="bytes2: bytes2 [45623,45629]"/>
  <match src="identifier: FILE [70486,70490]" dest="identifier: FILE [80646,80650]"/>
  <match src="function_definition [56546,56606]" dest="function_definition [22638,22698]"/>
  <match src="(: ( [80692,80693]" dest="(: ( [57640,57641]"/>
  <match src=",: , [105317,105318]" dest=",: , [41322,41323]"/>
  <match src="!=: != [23025,23027]" dest="!=: != [64079,64081]"/>
  <match src="member_expression [107360,107377]" dest="member_expression [43365,43382]"/>
  <match src="identifier: abi [34035,34038]" dest="identifier: abi [50513,50516]"/>
  <match src=".: . [9808,9809]" dest=".: . [9808,9809]"/>
  <match src="call_expression [68676,68689]" dest="call_expression [66166,66181]"/>
  <match src="identifier: that [86010,86014]" dest="identifier: that [80429,80433]"/>
  <match src="function_body [109416,109584]" dest="function_body [69192,69360]"/>
  <match src="function: function [45858,45866]" dest="function: function [14439,14447]"/>
  <match src="uint256: uint256 [28943,28950]" dest="uint256: uint256 [45421,45428]"/>
  <match src="}: } [108402,108403]" dest="}: } [44407,44408]"/>
  <match src="pure: pure [8472,8476]" dest="pure: pure [8472,8476]"/>
  <match src="]: ] [104781,104782]" dest="]: ] [40786,40787]"/>
  <match src="number_literal: 5e19 [44880,44884]" dest="number_literal: 5e19 [13461,13465]"/>
  <match src="): ) [56455,56456]" dest="): ) [22547,22548]"/>
  <match src="call_argument [7971,7975]" dest="call_argument [7971,7975]"/>
  <match src="(: ( [12996,12997]" dest="(: ( [23523,23524]"/>
  <match src="identifier: amount [22902,22908]" dest="identifier: amount [64035,64041]"/>
  <match src="identifier: debt [102914,102918]" dest="identifier: debt [38919,38923]"/>
  <match src="(: ( [105524,105525]" dest="(: ( [41529,41530]"/>
  <match src="function: function [13596,13604]" dest="function: function [24123,24131]"/>
  <match src="parameter [5408,5434]" dest="parameter [5408,5434]"/>
  <match src="): ) [96702,96703]" dest="): ) [32707,32708]"/>
  <match src="&lt;: &lt; [8664,8665]" dest="&lt;: &lt; [8664,8665]"/>
  <match src="identifier: periodFor [108264,108273]" dest="identifier: periodFor [44269,44278]"/>
  <match src="member_expression [103509,103524]" dest="member_expression [39514,39529]"/>
  <match src="identifier: D256 [6613,6617]" dest="identifier: D256 [6613,6617]"/>
  <match src="visibility [78035,78043]" dest="visibility [56458,56466]"/>
  <match src="expression_statement [79665,79752]" dest="expression_statement [61932,61986]"/>
  <match src="call_expression [8604,8631]" dest="call_expression [8604,8631]"/>
  <match src="event_definition [55678,55761]" dest="event_definition [21770,21853]"/>
  <match src="uint256: uint256 [90515,90522]" dest="uint256: uint256 [28942,28949]"/>
  <match src="identifier: add [107436,107439]" dest="identifier: add [43441,43444]"/>
  <match src="identifier: Decimal [69611,69618]" dest="identifier: Decimal [82102,82109]"/>
  <match src="{: { [36637,36638]" dest="{: { [53115,53116]"/>
  <match src=".: . [96579,96580]" dest=".: . [32584,32585]"/>
  <match src="): ) [54768,54769]" dest="): ) [20860,20861]"/>
  <match src=",: , [83615,83616]" dest=",: , [72105,72106]"/>
  <match src="function: function [31678,31686]" dest="function: function [48156,48164]"/>
  <match src="=: = [43507,43508]" dest="=: = [12088,12089]"/>
  <match src=",: , [8801,8802]" dest=",: , [8801,8802]"/>
  <match src="variable_declaration [100946,100958]" dest="variable_declaration [36951,36963]"/>
  <match src="identifier: b [1910,1911]" dest="identifier: b [1910,1911]"/>
  <match src="string: string [5408,5414]" dest="string: string [5408,5414]"/>
  <match src="parameter [102841,102855]" dest="parameter [38846,38860]"/>
  <match src="{: { [45963,45964]" dest="{: { [14544,14545]"/>
  <match src="expression_statement [109427,109563]" dest="expression_statement [69203,69339]"/>
  <match src="primitive_type [33812,33819]" dest="primitive_type [50290,50297]"/>
  <match src=",: , [53398,53399]" dest=",: , [64785,64786]"/>
  <match src="): ) [54824,54825]" dest="): ) [20916,20917]"/>
  <match src="identifier: CHAIN_ID [48751,48759]" dest="identifier: CHAIN_ID [17332,17340]"/>
  <match src="visibility [56457,56465]" dest="visibility [22549,22557]"/>
  <match src="bool: bool [33185,33189]" dest="bool: bool [49663,49667]"/>
  <match src="view: view [98140,98144]" dest="view: view [34145,34149]"/>
  <match src="bytes: bytes [35673,35678]" dest="bytes: bytes [52151,52156]"/>
  <match src="}: } [89243,89244]" dest="}: } [74910,74911]"/>
  <match src="identifier: i [38164,38165]" dest="identifier: i [54642,54643]"/>
  <match src=".: . [46970,46971]" dest=".: . [15551,15552]"/>
  <match src="identifier: sub [74592,74595]" dest="identifier: add [59371,59374]"/>
  <match src="type_name [45288,45295]" dest="type_name [13869,13876]"/>
  <match src="if: if [30588,30590]" dest="if: if [47066,47068]"/>
  <match src="): ) [98759,98760]" dest="): ) [34764,34765]"/>
  <match src="identifier: tokenB [81348,81354]" dest="identifier: candidate [81165,81174]"/>
  <match src="call_argument [30813,30819]" dest="call_argument [47291,47297]"/>
  <match src="return: return [10993,10999]" dest="return: return [10993,10999]"/>
  <match src="return_type_definition [98743,98760]" dest="return_type_definition [34748,34765]"/>
  <match src="call_argument [105205,105211]" dest="call_argument [41210,41216]"/>
  <match src="(: ( [53424,53425]" dest="(: ( [64809,64810]"/>
  <match src="function_definition [55418,55478]" dest="function_definition [21510,21570]"/>
  <match src="byte: byte [38786,38790]" dest="byte: byte [55264,55268]"/>
  <match src="identifier: candidates [108478,108488]" dest="identifier: candidates [44483,44493]"/>
  <match src="member_expression [96242,96261]" dest="member_expression [32247,32266]"/>
  <match src="member_expression [103623,103644]" dest="member_expression [39628,39649]"/>
  <match src="identifier: Transfer [101854,101862]" dest="identifier: Transfer [37859,37867]"/>
  <match src="identifier: mul [2330,2333]" dest="identifier: mul [2330,2333]"/>
  <match src="identifier: account [104020,104027]" dest="identifier: account [40025,40032]"/>
  <match src="type_name [98445,98468]" dest="type_name [34450,34473]"/>
  <match src=".: . [109489,109490]" dest=".: . [69265,69266]"/>
  <match src="(: ( [104288,104289]" dest="(: ( [40293,40294]"/>
  <match src="returns: returns [48715,48722]" dest="returns: returns [17296,17303]"/>
  <match src=":: : [7716,7717]" dest=":: : [7716,7717]"/>
  <match src="(: ( [32673,32674]" dest="(: ( [49151,49152]"/>
  <match src=",: , [105621,105622]" dest=",: , [41626,41627]"/>
  <match src="returns: returns [7211,7218]" dest="returns: returns [7211,7218]"/>
  <match src="identifier: balance [106761,106768]" dest="identifier: balance [42766,42773]"/>
  <match src="identifier: a [11266,11267]" dest="identifier: a [11266,11267]"/>
  <match src="call_expression [104848,104900]" dest="call_expression [40853,40905]"/>
  <match src="returns: returns [54684,54691]" dest="returns: returns [20776,20783]"/>
  <match src="return_type_definition [70336,70353]" dest="return_type_definition [62753,62770]"/>
  <match src="identifier: abi [32657,32660]" dest="identifier: abi [49135,49138]"/>
  <match src="parameter [102292,102296]" dest="parameter [38297,38301]"/>
  <match src="bool: bool [88677,88681]" dest="bool: bool [74344,74348]"/>
  <match src="call_expression [33397,33684]" dest="call_expression [49875,50162]"/>
  <match src="parameter [105608,105621]" dest="parameter [41613,41626]"/>
  <match src="state_variable_declaration [29236,29264]" dest="state_variable_declaration [45714,45742]"/>
  <match src="identifier: amount [105389,105395]" dest="identifier: amount [41394,41400]"/>
  <match src="return_type_definition [97820,97837]" dest="return_type_definition [33825,33842]"/>
  <match src="identifier: div [84446,84449]" dest="identifier: div [72047,72050]"/>
  <match src="identifier: add [100551,100554]" dest="identifier: add [36556,36559]"/>
  <match src="member_expression [108338,108353]" dest="member_expression [44343,44358]"/>
  <match src="): ) [7000,7001]" dest="): ) [7000,7001]"/>
  <match src="number_literal: 1 [57982,57983]" dest="number_literal: 1 [80588,80589]"/>
  <match src="state_mutability [12827,12831]" dest="state_mutability [23354,23358]"/>
  <match src="visibility [65657,65665]" dest="visibility [78584,78592]"/>
  <match src=".: . [83481,83482]" dest=".: . [71490,71491]"/>
  <match src="visibility [33282,33290]" dest="visibility [49760,49768]"/>
  <match src="call_argument [37879,37889]" dest="call_argument [54357,54367]"/>
  <match src="boolean_literal [102316,102321]" dest="boolean_literal [38321,38326]"/>
  <match src=",: , [107148,107149]" dest=",: , [43153,43154]"/>
  <match src=",: , [971,972]" dest=",: , [971,972]"/>
  <match src="function_definition [4724,4854]" dest="function_definition [4724,4854]"/>
  <match src=".: . [76245,76246]" dest=".: . [81366,81367]"/>
  <match src=",: , [83000,83001]" dest=",: , [70977,70978]"/>
  <match src="call_argument [83852,83862]" dest="call_argument [72889,72899]"/>
  <match src="}: } [98948,98949]" dest="}: } [34953,34954]"/>
  <match src="--: -- [36307,36309]" dest="--: -- [52785,52787]"/>
  <match src="call_expression [105938,106006]" dest="call_expression [41943,42011]"/>
  <match src="(: ( [101989,101990]" dest="(: ( [37994,37995]"/>
  <match src="type_name [66642,66649]" dest="type_name [78495,78502]"/>
  <match src="function: function [3260,3268]" dest="function: function [3260,3268]"/>
  <match src="type_cast_expression [37873,37890]" dest="type_cast_expression [54351,54368]"/>
  <match src="[: [ [98914,98915]" dest="[: [ [34919,34920]"/>
  <match src="): ) [31208,31209]" dest="): ) [47686,47687]"/>
  <match src="function_definition [9619,9826]" dest="function_definition [9619,9826]"/>
  <match src="state_variable_declaration [44835,44885]" dest="state_variable_declaration [13416,13466]"/>
  <match src="state_mutability [56466,56470]" dest="state_mutability [22558,22562]"/>
  <match src="user_defined_type [94719,94724]" dest="user_defined_type [30724,30729]"/>
  <match src="primitive_type [34767,34772]" dest="primitive_type [51245,51250]"/>
  <match src="type_name [15289,15296]" dest="type_name [25816,25823]"/>
  <match src="assembly_statement [35353,35448]" dest="assembly_statement [51831,51926]"/>
  <match src=".: . [106378,106379]" dest=".: . [42383,42384]"/>
  <match src="=: = [37647,37648]" dest="=: = [54125,54126]"/>
  <match src="memory: memory [67757,67763]" dest="memory: memory [19892,19898]"/>
  <match src="member_expression [109475,109489]" dest="member_expression [69251,69265]"/>
  <match src="}: } [106496,106497]" dest="}: } [42501,42502]"/>
  <match src="event_paramater [82920,82943]" dest="event_paramater [83179,83202]"/>
  <match src="parameter [80702,80709]" dest="parameter [57650,57657]"/>
  <match src="identifier: compareTo [10068,10077]" dest="identifier: compareTo [10068,10077]"/>
  <match src="expression_statement [81128,81184]" dest="expression_statement [83310,83345]"/>
  <match src="identifier: that [29830,29834]" dest="identifier: that [46308,46312]"/>
  <match src="event: event [15014,15019]" dest="event: event [25541,25546]"/>
  <match src="=: = [45041,45042]" dest="=: = [13622,13623]"/>
  <match src="call_argument [30880,30899]" dest="call_argument [47358,47377]"/>
  <match src=",: , [104027,104028]" dest=",: , [40032,40033]"/>
  <match src="member_expression [105475,105490]" dest="member_expression [41480,41495]"/>
  <match src="identifier: rejectFor [100555,100564]" dest="identifier: rejectFor [36560,36569]"/>
  <match src="primitive_type [55644,55648]" dest="primitive_type [21736,21740]"/>
  <match src="return: return [97516,97522]" dest="return: return [33521,33527]"/>
  <match src="call_argument [36668,36673]" dest="call_argument [53146,53151]"/>
  <match src="binary_expression [38306,38312]" dest="binary_expression [54784,54790]"/>
  <match src="identifier: getAdvanceIncentive [47534,47553]" dest="identifier: getAdvanceIncentive [16115,16134]"/>
  <match src="identifier: incrementTotalRedeemable [103069,103093]" dest="identifier: incrementTotalRedeemable [39074,39098]"/>
  <match src="identifier: amount [18622,18628]" dest="identifier: amount [60132,60138]"/>
  <match src="return: return [99619,99625]" dest="return: return [35624,35630]"/>
  <match src="constant: constant [45436,45444]" dest="constant: constant [14017,14025]"/>
  <match src="revert: revert [31887,31893]" dest="revert: revert [48365,48371]"/>
  <match src="internal: internal [47433,47441]" dest="internal: internal [16014,16022]"/>
  <match src="address: address [105784,105791]" dest="address: address [41789,41796]"/>
  <match src=".: . [105880,105881]" dest=".: . [41885,41886]"/>
  <match src="(: ( [46701,46702]" dest="(: ( [15282,15283]"/>
  <match src="state_mutability [46949,46953]" dest="state_mutability [15530,15534]"/>
  <match src="returns: returns [96853,96860]" dest="returns: returns [32858,32865]"/>
  <match src="type_name [106317,106324]" dest="type_name [42322,42329]"/>
  <match src="comment: // Overridable for testing [98671,98697]" dest="comment: // Overridable for testing [34676,34702]"/>
  <match src=".: . [106776,106777]" dest=".: . [42781,42782]"/>
  <match src="new: new [37788,37791]" dest="new: new [54266,54269]"/>
  <match src="emit_statement [104006,104049]" dest="emit_statement [40011,40054]"/>
  <match src="): ) [47431,47432]" dest="): ) [16012,16013]"/>
  <match src="identifier: COLON [32751,32756]" dest="identifier: COLON [49229,49234]"/>
  <match src="for_statement [8642,8723]" dest="for_statement [8642,8723]"/>
  <match src="emit: emit [86589,86593]" dest="emit: emit [81082,81086]"/>
  <match src="call_argument [34035,34478]" dest="call_argument [50513,50956]"/>
  <match src="): ) [95665,95666]" dest="): ) [31670,31671]"/>
  <match src="returns: returns [7031,7038]" dest="returns: returns [7031,7038]"/>
  <match src="string: string [102557,102563]" dest="string: string [38562,38568]"/>
  <match src="call_expression [9549,9603]" dest="call_expression [9549,9603]"/>
  <match src="comment: /**      * @dev Upgrades the proxy to a new implementation.      * @param newImplementation Address of the new implementation.      */ [93029,93166]" dest="comment: /**      * @dev Upgrades the proxy to a new implementation.      * @param newImplementation Address of the new implementation.      */ [76382,76519]"/>
  <match src="(: ( [67292,67293]" dest="(: ( [81709,81710]"/>
  <match src="&quot;: &quot; [26897,26898]" dest="&quot;: &quot; [79727,79728]"/>
  <match src="member_expression [99981,100015]" dest="member_expression [35986,36020]"/>
  <match src=".: . [100283,100284]" dest=".: . [36288,36289]"/>
  <match src="event_paramater [83173,83186]" dest="event_paramater [61464,61477]"/>
  <match src="visibility [70322,70330]" dest="visibility [64043,64051]"/>
  <match src="internal: internal [47268,47276]" dest="internal: internal [15849,15857]"/>
  <match src="member_expression [106435,106448]" dest="member_expression [42440,42453]"/>
  <match src="call_argument [78193,78199]" dest="call_argument [57005,57011]"/>
  <match src="{: { [30577,30578]" dest="{: { [47055,47056]"/>
  <match src="expression_statement [103509,103589]" dest="expression_statement [39514,39594]"/>
  <match src=",: , [85624,85625]" dest=",: , [72796,72797]"/>
  <match src="call_argument [29628,29652]" dest="call_argument [46106,46130]"/>
  <match src="): ) [99817,99818]" dest="): ) [35822,35823]"/>
  <match src="}: } [30389,30390]" dest="}: } [46867,46868]"/>
  <match src=".: . [105306,105307]" dest=".: . [41311,41312]"/>
  <match src="identifier: slot [101029,101033]" dest="identifier: slot [37034,37038]"/>
  <match src="visibility [102025,102033]" dest="visibility [38030,38038]"/>
  <match src="parameter [9850,9866]" dest="parameter [9850,9866]"/>
  <match src="&lt;=: &lt;= [99632,99634]" dest="&lt;=: &lt;= [35637,35639]"/>
  <match src="block_statement [37099,37479]" dest="block_statement [53577,53957]"/>
  <match src="view: view [99006,99010]" dest="view: view [35011,35015]"/>
  <match src=",: , [32400,32401]" dest=",: , [48878,48879]"/>
  <match src="identifier: _state [100255,100261]" dest="identifier: _state [36260,36266]"/>
  <match src="): ) [47041,47042]" dest="): ) [15622,15623]"/>
  <match src="identifier: Epoch [91424,91429]" dest="identifier: Epoch [29851,29856]"/>
  <match src="call_argument [30183,30209]" dest="call_argument [46661,46687]"/>
  <match src="identifier: epoch [76210,76215]" dest="identifier: epoch [81359,81364]"/>
  <match src="call_argument [37657,37662]" dest="call_argument [54135,54140]"/>
  <match src="parameter [102105,102120]" dest="parameter [38110,38125]"/>
  <match src=",: , [99761,99762]" dest=",: , [35766,35767]"/>
  <match src="identifier: amount [103361,103367]" dest="identifier: amount [39366,39372]"/>
  <match src="identifier: z [36656,36657]" dest="identifier: z [53134,53135]"/>
  <match src="identifier: _state [105362,105368]" dest="identifier: _state [41367,41373]"/>
  <match src="type_name [105038,105045]" dest="type_name [41043,41050]"/>
  <match src=".: . [70433,70434]" dest=".: . [80543,80544]"/>
  <match src="parameter [48050,48057]" dest="parameter [16631,16638]"/>
  <match src="parenthesized_expression [31282,31651]" dest="parenthesized_expression [47760,48129]"/>
  <match src="identifier: sub [103898,103901]" dest="identifier: sub [39903,39906]"/>
  <match src="(: ( [96686,96687]" dest="(: ( [32691,32692]"/>
  <match src="uint256: uint256 [5397,5404]" dest="uint256: uint256 [5397,5404]"/>
  <match src="uint256: uint256 [102122,102129]" dest="uint256: uint256 [38127,38134]"/>
  <match src=".: . [102452,102453]" dest=".: . [38457,38458]"/>
  <match src="=: = [45128,45129]" dest="=: = [13709,13710]"/>
  <match src="number_literal: 180 [45130,45133]" dest="number_literal: 180 [13711,13714]"/>
  <match src="identifier: expiring [99219,99227]" dest="identifier: expiring [35224,35232]"/>
  <match src="uint: uint [56532,56536]" dest="uint: uint [22624,22628]"/>
  <match src="identifier: self [7517,7521]" dest="identifier: self [7517,7521]"/>
  <match src="identifier: reason [103369,103375]" dest="identifier: reason [39374,39380]"/>
  <match src="type_name [32391,32395]" dest="type_name [48869,48873]"/>
  <match src="type_name [97690,97697]" dest="type_name [33695,33702]"/>
  <match src="primitive_type [47939,47946]" dest="primitive_type [16520,16527]"/>
  <match src="returns: returns [65671,65678]" dest="returns: returns [81973,81980]"/>
  <match src="address: address [55064,55071]" dest="address: address [21156,21163]"/>
  <match src="call_expression [68722,68737]" dest="call_expression [79302,79323]"/>
  <match src="primitive_type [48724,48731]" dest="primitive_type [17305,17312]"/>
  <match src="function: function [56131,56139]" dest="function: function [22223,22231]"/>
  <match src="=: = [92719,92720]" dest="=: = [76072,76073]"/>
  <match src="identifier: sub [9173,9176]" dest="identifier: sub [9173,9176]"/>
  <match src="function_definition [30405,31086]" dest="function_definition [46883,47564]"/>
  <match src="return_type_definition [47570,47587]" dest="return_type_definition [16151,16168]"/>
  <match src="type_name [55141,55148]" dest="type_name [21233,21240]"/>
  <match src="primitive_type [88637,88644]" dest="primitive_type [74304,74311]"/>
  <match src="false [102316,102321]" dest="false [38321,38326]"/>
  <match src="member_expression [8921,8931]" dest="member_expression [8921,8931]"/>
  <match src="type_name [82945,82952]" dest="type_name [61554,61561]"/>
  <match src="type_name [33837,33844]" dest="type_name [50315,50322]"/>
  <match src="type_name [47123,47135]" dest="type_name [15704,15716]"/>
  <match src=",: , [4108,4109]" dest=",: , [4108,4109]"/>
  <match src="uint256: uint256 [10709,10716]" dest="uint256: uint256 [10709,10716]"/>
  <match src="return: return [97222,97228]" dest="return: return [33227,33233]"/>
  <match src="user_defined_type [97370,97384]" dest="user_defined_type [33375,33389]"/>
  <match src="call_expression [8921,8944]" dest="call_expression [8921,8944]"/>
  <match src="(: ( [110052,110053]" dest="(: ( [69828,69829]"/>
  <match src="address: address [54511,54518]" dest="address: address [20603,20610]"/>
  <match src="*: * [37179,37180]" dest="*: * [53657,53658]"/>
  <match src="(: ( [48167,48168]" dest="(: ( [16748,16749]"/>
  <match src="address: address [93672,93679]" dest="address: address [77025,77032]"/>
  <match src="contract_declaration [90628,90926]" dest="contract_declaration [29055,29353]"/>
  <match src="{: { [31261,31262]" dest="{: { [47739,47740]"/>
  <match src="): ) [43882,43883]" dest="): ) [12463,12464]"/>
  <match src="{: { [109892,109893]" dest="{: { [69668,69669]"/>
  <match src="event: event [53774,53779]" dest="event: event [61378,61383]"/>
  <match src="string [84635,84670]" dest="string [72208,72246]"/>
  <match src="primitive_type [90866,90873]" dest="primitive_type [29293,29300]"/>
  <match src="function: function [105749,105757]" dest="function: function [41754,41762]"/>
  <match src=".: . [11195,11196]" dest=".: . [11195,11196]"/>
  <match src="function_body [103010,103052]" dest="function_body [39015,39057]"/>
  <match src="number_literal: 0 [84304,84305]" dest="number_literal: 0 [71943,71944]"/>
  <match src="call_argument [32241,32249]" dest="call_argument [48719,48727]"/>
  <match src="member_expression [30057,30073]" dest="member_expression [46535,46551]"/>
  <match src="identifier: z [37424,37425]" dest="identifier: z [53902,53903]"/>
  <match src="call_argument [32086,32092]" dest="call_argument [48564,48570]"/>
  <match src="identifier: IOracle [66438,66445]" dest="identifier: Comptroller [65753,65764]"/>
  <match src="external: external [56205,56213]" dest="external: external [22297,22305]"/>
  <match src="): ) [3293,3294]" dest="): ) [3293,3294]"/>
  <match src="parameter [20683,20697]" dest="parameter [64305,64319]"/>
  <match src="): ) [109747,109748]" dest="): ) [69523,69524]"/>
  <match src="identifier: msg [84502,84505]" dest="identifier: msg [72687,72690]"/>
  <match src="identifier: newImplementation [93765,93782]" dest="identifier: newImplementation [77118,77135]"/>
  <match src="identifier: setImplementation [93654,93671]" dest="identifier: setImplementation [77007,77024]"/>
  <match src="comment: // populate the result with &quot;0x&quot; [37814,37846]" dest="comment: // populate the result with &quot;0x&quot; [54292,54324]"/>
  <match src="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [3400,3916]" dest="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [3400,3916]"/>
  <match src="uint112: uint112 [55984,55991]" dest="uint112: uint112 [22076,22083]"/>
  <match src="address: address [45545,45552]" dest="address: address [14126,14133]"/>
  <match src="expression_statement [51073,51170]" dest="expression_statement [56574,56645]"/>
  <match src="address: address [97791,97798]" dest="address: address [33796,33803]"/>
  <match src="private: private [45000,45007]" dest="private: private [13581,13588]"/>
  <match src="view: view [64859,64863]" dest="view: view [27648,27652]"/>
  <match src="struct_member [90240,90259]" dest="struct_member [28667,28686]"/>
  <match src="}: } [9816,9817]" dest="}: } [9816,9817]"/>
  <match src="internal: internal [23420,23428]" dest="internal: internal [57182,57190]"/>
  <match src="primitive_type [54978,54985]" dest="primitive_type [21070,21077]"/>
  <match src="type_name [56704,56708]" dest="type_name [22796,22800]"/>
  <match src="): ) [106151,106152]" dest="): ) [42156,42157]"/>
  <match src="uint256: uint256 [90113,90120]" dest="uint256: uint256 [28540,28547]"/>
  <match src="identifier: self [10431,10435]" dest="identifier: self [10431,10435]"/>
  <match src="identifier: Balance [91296,91303]" dest="identifier: Balance [29723,29730]"/>
  <match src="primitive_type [55273,55277]" dest="primitive_type [21365,21369]"/>
  <match src="return_type_definition [98250,98267]" dest="return_type_definition [34255,34272]"/>
  <match src="yul_path [89181,89185]" dest="yul_path [74848,74852]"/>
  <match src="member_expression [107763,107780]" dest="member_expression [43768,43785]"/>
  <match src="variable_declaration_statement [84855,84909]" dest="variable_declaration_statement [62066,62118]"/>
  <match src="uint256: uint256 [66872,66879]" dest="uint256: uint256 [78435,78442]"/>
  <match src="type_name [99282,99289]" dest="type_name [35287,35294]"/>
  <match src="function_body [95697,95745]" dest="function_body [31702,31750]"/>
  <match src="call_argument [104787,104793]" dest="call_argument [40792,40798]"/>
  <match src="returns: returns [3309,3316]" dest="returns: returns [3309,3316]"/>
  <match src="call_expression [9122,9145]" dest="call_expression [9122,9145]"/>
  <match src="identifier: _state [100818,100824]" dest="identifier: _state [36823,36829]"/>
  <match src="return_type_definition [10172,10186]" dest="return_type_definition [10172,10186]"/>
  <match src="): ) [96578,96579]" dest="): ) [32583,32584]"/>
  <match src="identifier: candidate [108489,108498]" dest="identifier: candidate [44494,44503]"/>
  <match src="identifier: owner [105954,105959]" dest="identifier: owner [41959,41964]"/>
  <match src="function_definition [35586,36523]" dest="function_definition [52064,53001]"/>
  <match src="external: external [84122,84130]" dest="external: external [71825,71833]"/>
  <match src="identifier: period [90382,90388]" dest="identifier: period [28809,28815]"/>
  <match src=".: . [31944,31945]" dest=".: . [48422,48423]"/>
  <match src="call_expression [84684,84698]" dest="call_expression [57114,57128]"/>
  <match src="}: } [97063,97064]" dest="}: } [33068,33069]"/>
  <match src="identifier: GOVERNANCE_EMERGENCY_DELAY [44767,44793]" dest="identifier: GOVERNANCE_EMERGENCY_DELAY [13348,13374]"/>
  <match src="identifier: initialized [108500,108511]" dest="identifier: initialized [44505,44516]"/>
  <match src="returns: returns [100219,100226]" dest="returns: returns [36224,36231]"/>
  <match src="string: string [95007,95013]" dest="string: string [31012,31018]"/>
  <match src="type_name [55153,55157]" dest="type_name [21245,21249]"/>
  <match src="struct: struct [90549,90555]" dest="struct: struct [28976,28982]"/>
  <match src="primitive_type [20772,20779]" dest="primitive_type [64409,64416]"/>
  <match src="}: } [7995,7996]" dest="}: } [7995,7996]"/>
  <match src="&quot;: &quot; [67373,67374]" dest="&quot;: &quot; [81802,81803]"/>
  <match src="=: = [103041,103042]" dest="=: = [39046,39047]"/>
  <match src="bool: bool [65680,65684]" dest="bool: bool [81982,81986]"/>
  <match src="visibility [12818,12826]" dest="visibility [23345,23353]"/>
  <match src="type_name [97652,97659]" dest="type_name [33657,33664]"/>
  <match src="returns: returns [13297,13304]" dest="returns: returns [23824,23831]"/>
  <match src="(: ( [82800,82801]" dest="(: ( [70736,70737]"/>
  <match src="visibility [100632,100638]" dest="visibility [36637,36643]"/>
  <match src="(: ( [98726,98727]" dest="(: ( [34731,34732]"/>
  <match src="return_statement [99974,100016]" dest="return_statement [35979,36021]"/>
  <match src="parameter [10143,10156]" dest="parameter [10143,10156]"/>
  <match src="constant: constant [29107,29115]" dest="constant: constant [45585,45593]"/>
  <match src="event_paramater [15051,15069]" dest="event_paramater [25578,25596]"/>
  <match src="expression_statement [105337,105405]" dest="expression_statement [41342,41410]"/>
  <match src="augmented_assignment_expression [36473,36480]" dest="augmented_assignment_expression [52951,52958]"/>
  <match src="uint256: uint256 [44305,44312]" dest="uint256: uint256 [12886,12893]"/>
  <match src=".: . [104917,104918]" dest=".: . [40922,40923]"/>
  <match src="identifier: Upgraded [93457,93465]" dest="identifier: Upgraded [76810,76818]"/>
  <match src="call_argument [83407,83417]" dest="call_argument [71443,71453]"/>
  <match src="&quot;: &quot; [2727,2728]" dest="&quot;: &quot; [2727,2728]"/>
  <match src="return_type_definition [9295,9316]" dest="return_type_definition [9295,9316]"/>
  <match src="assignment_expression [104421,104506]" dest="assignment_expression [40426,40511]"/>
  <match src="identifier: _state [104421,104427]" dest="identifier: _state [40426,40432]"/>
  <match src="(: ( [98130,98131]" dest="(: ( [34135,34136]"/>
  <match src="identifier: D256 [9549,9553]" dest="identifier: D256 [9549,9553]"/>
  <match src="return_statement [4251,4260]" dest="return_statement [4251,4260]"/>
  <match src="function: function [54959,54967]" dest="function: function [21051,21059]"/>
  <match src="): ) [48297,48298]" dest="): ) [16878,16879]"/>
  <match src="byte: byte [36881,36885]" dest="byte: byte [53359,53363]"/>
  <match src="(: ( [8108,8109]" dest="(: ( [8108,8109]"/>
  <match src="=: = [38162,38163]" dest="=: = [54640,54641]"/>
  <match src="identifier: value [83025,83030]" dest="identifier: value [71002,71007]"/>
  <match src="primitive_type [74577,74584]" dest="primitive_type [59339,59346]"/>
  <match src="variable_declaration [68043,68066]" dest="variable_declaration [80336,80353]"/>
  <match src="}: } [23602,23603]" dest="}: } [65010,65011]"/>
  <match src="type_name [107708,107715]" dest="type_name [43713,43720]"/>
  <match src="parameter [22088,22102]" dest="parameter [59707,59721]"/>
  <match src="identifier: epoch [105237,105242]" dest="identifier: epoch [41242,41247]"/>
  <match src="primitive_type [5386,5393]" dest="primitive_type [5386,5393]"/>
  <match src="member_expression [96028,96042]" dest="member_expression [32033,32047]"/>
  <match src="type_name [55231,55238]" dest="type_name [21323,21330]"/>
  <match src=".: . [105698,105699]" dest=".: . [41703,41704]"/>
  <match src="address: address [107150,107157]" dest="address: address [43155,43162]"/>
  <match src="return_type_definition [102034,102048]" dest="return_type_definition [38039,38053]"/>
  <match src="}: } [7102,7103]" dest="}: } [7102,7103]"/>
  <match src="identifier: Constants [99635,99644]" dest="identifier: Constants [35640,35649]"/>
  <match src="(: ( [51985,51986]" dest="(: ( [26620,26621]"/>
  <match src="visibility [45148,45155]" dest="visibility [13729,13736]"/>
  <match src="parameter [107892,107909]" dest="parameter [43897,43914]"/>
  <match src="returns: returns [56219,56226]" dest="returns: returns [22311,22318]"/>
  <match src="user_defined_type [10419,10423]" dest="user_defined_type [10419,10423]"/>
  <match src="identifier: totalSupply [54841,54852]" dest="identifier: totalSupply [20933,20944]"/>
  <match src=",: , [32502,32503]" dest=",: , [48980,48981]"/>
  <match src="=: = [86260,86261]" dest="=: = [80354,80355]"/>
  <match src="function_definition [10244,10384]" dest="function_definition [10244,10384]"/>
  <match src="uint256: uint256 [7145,7152]" dest="uint256: uint256 [7145,7152]"/>
  <match src="event_paramater [101905,101918]" dest="event_paramater [37910,37923]"/>
  <match src="number_literal: 18 [44435,44437]" dest="number_literal: 18 [13016,13018]"/>
  <match src="return_type_definition [998,1015]" dest="return_type_definition [998,1015]"/>
  <match src="parameter [9454,9467]" dest="parameter [9454,9467]"/>
  <match src="identifier: this [83358,83362]" dest="identifier: this [71394,71398]"/>
  <match src="identifier: period [107082,107088]" dest="identifier: period [43087,43093]"/>
  <match src="type_name [100228,100235]" dest="type_name [36233,36240]"/>
  <match src="return: return [96129,96135]" dest="return: return [32134,32140]"/>
  <match src="array_access [98901,98921]" dest="array_access [34906,34926]"/>
  <match src=".: . [7966,7967]" dest=".: . [7966,7967]"/>
  <match src="inheritance_specifier [66438,66445]" dest="inheritance_specifier [65753,65764]"/>
  <match src="parameter [3946,3955]" dest="parameter [3946,3955]"/>
  <match src="state_mutability [8472,8476]" dest="state_mutability [8472,8476]"/>
  <match src="): ) [55447,55448]" dest="): ) [21539,21540]"/>
  <match src="visibility [8838,8846]" dest="visibility [8838,8846]"/>
  <match src="function_body [95579,95606]" dest="function_body [31584,31611]"/>
  <match src="(: ( [99667,99668]" dest="(: ( [35672,35673]"/>
  <match src="identifier: fluidUntil [76246,76256]" dest="identifier: add [81367,81370]"/>
  <match src="type_name [90113,90120]" dest="type_name [28540,28547]"/>
  <match src="identifier: decrementApproveFor [107472,107491]" dest="identifier: decrementApproveFor [43477,43496]"/>
  <match src=",: , [32172,32173]" dest=",: , [48650,48651]"/>
  <match src="): ) [64848,64849]" dest="): ) [27637,27638]"/>
  <match src="expression_statement [20919,21011]" dest="expression_statement [57023,57102]"/>
  <match src="call_argument [1992,1998]" dest="call_argument [1992,1998]"/>
  <match src="): ) [84389,84390]" dest="): ) [72005,72006]"/>
  <match src="call_struct_argument [46615,46655]" dest="call_struct_argument [15196,15236]"/>
  <match src="identifier: FILE [50889,50893]" dest="identifier: FILE [63158,63162]"/>
  <match src="): ) [90211,90212]" dest="): ) [28638,28639]"/>
  <match src="struct_member [91031,91044]" dest="struct_member [29458,29471]"/>
  <match src="return: return [99040,99046]" dest="return: return [35045,35051]"/>
  <match src=",: , [10368,10369]" dest=",: , [10368,10369]"/>
  <match src="): ) [99961,99962]" dest="): ) [35966,35967]"/>
  <match src="parameter [33205,33217]" dest="parameter [49683,49695]"/>
  <match src="primitive_type [38686,38690]" dest="primitive_type [55164,55168]"/>
  <match src="identifier: _state [108471,108477]" dest="identifier: _state [44476,44482]"/>
  <match src="parameter [96824,96839]" dest="parameter [32829,32844]"/>
  <match src="identifier: ADVANCE_INCENTIVE [47606,47623]" dest="identifier: ADVANCE_INCENTIVE [16187,16204]"/>
  <match src="identifier: ORACLE_POOL_RATIO [48646,48663]" dest="identifier: ORACLE_POOL_RATIO [17227,17244]"/>
  <match src="identifier: encodePacked [30672,30684]" dest="identifier: encodePacked [47150,47162]"/>
  <match src="{: { [108460,108461]" dest="{: { [44465,44466]"/>
  <match src="identifier: sender [86606,86612]" dest="identifier: sender [81098,81104]"/>
  <match src="(: ( [100920,100921]" dest="(: ( [36925,36926]"/>
  <match src="(: ( [17094,17095]" dest="(: ( [57199,57200]"/>
  <match src="number_literal: 180 [43604,43607]" dest="number_literal: 180 [12185,12188]"/>
  <match src="(: ( [86392,86393]" dest="(: ( [72991,72992]"/>
  <match src=",: , [7401,7402]" dest=",: , [7401,7402]"/>
  <match src="identifier: getGovernanceEmergencyDelay [47403,47430]" dest="identifier: getGovernanceEmergencyDelay [15984,16011]"/>
  <match src="type_name [66872,66879]" dest="type_name [78435,78442]"/>
  <match src="return_type_definition [98865,98882]" dest="return_type_definition [34870,34887]"/>
  <match src="view: view [99940,99944]" dest="view: view [35945,35949]"/>
  <match src="function_definition [97912,98074]" dest="function_definition [33917,34079]"/>
  <match src="{: { [90970,90971]" dest="{: { [29397,29398]"/>
  <match src="identifier: candidate [107626,107635]" dest="identifier: candidate [43631,43640]"/>
  <match src="uint256: uint256 [1027,1034]" dest="uint256: uint256 [1027,1034]"/>
  <match src="internal: internal [29942,29950]" dest="internal: internal [46420,46428]"/>
  <match src=",: , [31482,31483]" dest=",: , [47960,47961]"/>
  <match src="): ) [47463,47464]" dest="): ) [16044,16045]"/>
  <match src="primitive_type [33837,33844]" dest="primitive_type [50315,50322]"/>
  <match src="string_literal [58955,58992]" dest="string_literal [73099,73135]"/>
  <match src="address: address [52033,52040]" dest="address: address [26668,26675]"/>
  <match src="identifier: self [9862,9866]" dest="identifier: self [9862,9866]"/>
  <match src=",: , [104039,104040]" dest=",: , [40044,40045]"/>
  <match src="): ) [14835,14836]" dest="): ) [25362,25363]"/>
  <match src="identifier: recipient [101998,102007]" dest="identifier: recipient [38003,38012]"/>
  <match src="parameter [99763,99780]" dest="parameter [35768,35785]"/>
  <match src="type_name [1913,1919]" dest="type_name [1913,1919]"/>
  <match src="[: [ [37404,37405]" dest="[: [ [53882,53883]"/>
  <match src="identifier: self [9930,9934]" dest="identifier: self [9930,9934]"/>
  <match src="{: { [95579,95580]" dest="{: { [31584,31585]"/>
  <match src="identifier: getChainId [48688,48698]" dest="identifier: getChainId [17269,17279]"/>
  <match src="identifier: must [31707,31711]" dest="identifier: must [48185,48189]"/>
  <match src="type_cast_expression [38691,38716]" dest="type_cast_expression [55169,55194]"/>
  <match src="}: } [32358,32359]" dest="}: } [48836,48837]"/>
  <match src="): ) [56507,56508]" dest="): ) [22599,22600]"/>
  <match src="function_definition [96393,96495]" dest="function_definition [32398,32500]"/>
  <match src="state_mutability [48710,48714]" dest="state_mutability [17291,17295]"/>
  <match src="): ) [9602,9603]" dest="): ) [9602,9603]"/>
  <match src="(: ( [96108,96109]" dest="(: ( [32113,32114]"/>
  <match src=".: . [29588,29589]" dest=".: . [46066,46067]"/>
  <match src="pure: pure [9494,9498]" dest="pure: pure [9494,9498]"/>
  <match src="{: { [96871,96872]" dest="{: { [32876,32877]"/>
  <match src=".: . [103576,103577]" dest=".: . [39581,39582]"/>
  <match src="identifier: abi [93356,93359]" dest="identifier: abi [76709,76712]"/>
  <match src="is: is [82458,82460]" dest="is: is [70608,70610]"/>
  <match src="identifier: value [84071,84076]" dest="identifier: value [72307,72312]"/>
  <match src="(: ( [47913,47914]" dest="(: ( [16494,16495]"/>
  <match src="using_directive [77255,77282]" dest="using_directive [83045,83072]"/>
  <match src=".: . [106743,106744]" dest=".: . [42748,42749]"/>
  <match src="primitive_type [90204,90211]" dest="primitive_type [28631,28638]"/>
  <match src="for_statement [37066,37479]" dest="for_statement [53544,53957]"/>
  <match src="external: external [54855,54863]" dest="external: external [20947,20955]"/>
  <match src="function_body [83577,83794]" dest="function_body [71594,71788]"/>
  <match src="): ) [23037,23038]" dest="): ) [64091,64092]"/>
  <match src=".: . [103136,103137]" dest=".: . [39141,39142]"/>
  <match src="type_name [99297,99304]" dest="type_name [35302,35309]"/>
  <match src="indexed: indexed [15037,15044]" dest="indexed: indexed [25564,25571]"/>
  <match src=",: , [21513,21514]" dest=",: , [57504,57505]"/>
  <match src="primitive_type [108222,108229]" dest="primitive_type [44227,44234]"/>
  <match src=".: . [86506,86507]" dest=".: . [63875,63876]"/>
  <match src=".: . [107405,107406]" dest=".: . [43410,43411]"/>
  <match src="identifier: amount [17978,17984]" dest="identifier: amount [60089,60095]"/>
  <match src="return_type_definition [80684,80710]" dest="return_type_definition [57632,57667]"/>
  <match src="variable_declaration [69256,69280]" dest="variable_declaration [67058,67079]"/>
  <match src="identifier: placeLock [108087,108096]" dest="identifier: placeLock [44092,44101]"/>
  <match src=",: , [3944,3945]" dest=",: , [3944,3945]"/>
  <match src="(: ( [46248,46249]" dest="(: ( [14829,14830]"/>
  <match src="parameter [46152,46159]" dest="parameter [14733,14740]"/>
  <match src="): ) [9147,9148]" dest="): ) [9147,9148]"/>
  <match src="parameter [104363,104377]" dest="parameter [40368,40382]"/>
  <match src=",: , [104663,104664]" dest=",: , [40668,40669]"/>
  <match src="function_body [99029,99094]" dest="function_body [35034,35099]"/>
  <match src="primitive_type [54614,54621]" dest="primitive_type [20706,20713]"/>
  <match src="&quot;: &quot; [84999,85000]" dest="&quot;: &quot; [81647,81648]"/>
  <match src="if: if [53378,53380]" dest="if: if [64734,64736]"/>
  <match src="call_expression [7517,7544]" dest="call_expression [7517,7544]"/>
  <match src="parameter [14831,14835]" dest="parameter [25358,25362]"/>
  <match src="state_mutability [99789,99793]" dest="state_mutability [35794,35798]"/>
  <match src="primitive_type [84185,84192]" dest="primitive_type [66641,66648]"/>
  <match src="variable_declaration_statement [96882,96918]" dest="variable_declaration_statement [32887,32923]"/>
  <match src="identifier: _state [104911,104917]" dest="identifier: _state [40916,40922]"/>
  <match src="visibility [86903,86910]" dest="visibility [59274,59281]"/>
  <match src="call_argument [85615,85616]" dest="call_argument [72787,72788]"/>
  <match src=".: . [86605,86606]" dest=".: . [81097,81098]"/>
  <match src="): ) [95409,95410]" dest="): ) [31414,31415]"/>
  <match src="address: address [82801,82808]" dest="address: address [70737,70744]"/>
  <match src="(: ( [48049,48050]" dest="(: ( [16630,16631]"/>
  <match src="call_struct_argument [8914,8944]" dest="call_struct_argument [8914,8944]"/>
  <match src="primitive_type [31770,31777]" dest="primitive_type [48248,48255]"/>
  <match src="primitive_type [109399,109406]" dest="primitive_type [69175,69182]"/>
  <match src="number_literal: 15e16 [45182,45187]" dest="number_literal: 15e16 [13763,13768]"/>
  <match src="visibility [69206,69213]" dest="visibility [67975,67982]"/>
  <match src="emit_statement [84711,84756]" dest="emit_statement [73232,73288]"/>
  <match src="private: private [44313,44320]" dest="private: private [12894,12901]"/>
  <match src="call_argument [102945,102951]" dest="call_argument [38950,38956]"/>
  <match src="parameter [100188,100205]" dest="parameter [36193,36210]"/>
  <match src="}: } [83793,83794]" dest="}: } [71787,71788]"/>
  <match src="number_literal: 0 [97229,97230]" dest="number_literal: 0 [33234,33235]"/>
  <match src="uint256: uint256 [43473,43480]" dest="uint256: uint256 [12054,12061]"/>
  <match src="call_argument [84745,84746]" dest="call_argument [73268,73269]"/>
  <match src="call_argument [30890,30898]" dest="call_argument [47368,47376]"/>
  <match src="identifier: balanceOfStaged [96671,96686]" dest="identifier: balanceOfStaged [32676,32691]"/>
  <match src="parameter [54993,55008]" dest="parameter [21085,21100]"/>
  <match src=".: . [106847,106848]" dest=".: . [42852,42853]"/>
  <match src="call_expression [47002,47042]" dest="call_expression [15583,15623]"/>
  <match src="identifier: balance [102606,102613]" dest="identifier: balance [38611,38618]"/>
  <match src="identifier: Require [86922,86929]" dest="identifier: Require [59293,59300]"/>
  <match src="identifier: that [67288,67292]" dest="identifier: that [81705,81709]"/>
  <match src="(: ( [29646,29647]" dest="(: ( [46124,46125]"/>
  <match src="function_definition [47058,47222]" dest="function_definition [15639,15803]"/>
  <match src="primitive_type [36779,36784]" dest="primitive_type [53257,53262]"/>
  <match src="type_name [100794,100798]" dest="type_name [36799,36803]"/>
  <match src="return: return [97464,97470]" dest="return: return [33469,33475]"/>
  <match src="type_name [80702,80709]" dest="type_name [57650,57657]"/>
  <match src="return: return [8138,8144]" dest="return: return [8138,8144]"/>
  <match src="): ) [56682,56683]" dest="): ) [22774,22775]"/>
  <match src=".: . [85610,85611]" dest=".: . [72782,72783]"/>
  <match src="identifier: Decimal [69583,69590]" dest="identifier: Decimal [68025,68032]"/>
  <match src="identifier: a [4813,4814]" dest="identifier: a [4813,4814]"/>
  <match src="identifier: couponAllowances [90213,90229]" dest="identifier: couponAllowances [28640,28656]"/>
  <match src="member_expression [102623,102637]" dest="member_expression [38628,38642]"/>
  <match src="type_name [33891,33898]" dest="type_name [50369,50376]"/>
  <match src="address: address [31770,31777]" dest="address: address [48248,48255]"/>
  <match src="uint256: uint256 [36130,36137]" dest="uint256: uint256 [52608,52615]"/>
  <match src="identifier: epoch [99370,99375]" dest="identifier: epoch [35375,35380]"/>
  <match src="(: ( [33958,33959]" dest="(: ( [50436,50437]"/>
  <match src="): ) [38716,38717]" dest="): ) [55194,55195]"/>
  <match src="inheritance_specifier [101791,101796]" dest="inheritance_specifier [37796,37801]"/>
  <match src="augmented_assignment_expression [35914,35921]" dest="augmented_assignment_expression [52392,52399]"/>
  <match src="(: ( [100187,100188]" dest="(: ( [36192,36193]"/>
  <match src="member_expression [103865,103897]" dest="member_expression [39870,39902]"/>
  <match src="comment: /**      * Governance      */ [99685,99716]" dest="comment: /**      * Governance      */ [35690,35721]"/>
  <match src="variable_declaration [34926,34935]" dest="variable_declaration [51404,51413]"/>
  <match src="parameter [33812,33826]" dest="parameter [50290,50304]"/>
  <match src="memory: memory [8590,8596]" dest="memory: memory [8590,8596]"/>
  <match src="call_expression [105525,105559]" dest="call_expression [41530,41564]"/>
  <match src="state_mutability [13656,13660]" dest="state_mutability [24183,24187]"/>
  <match src="(: ( [3272,3273]" dest="(: ( [3272,3273]"/>
  <match src="parameter [107324,107338]" dest="parameter [43329,43343]"/>
  <match src=",: , [56323,56324]" dest=",: , [22415,22416]"/>
  <match src="primitive_type [96725,96732]" dest="primitive_type [32730,32737]"/>
  <match src="call_expression [8696,8711]" dest="call_expression [8696,8711]"/>
  <match src="primitive_type [106962,106969]" dest="primitive_type [42967,42974]"/>
  <match src="): ) [37940,37941]" dest="): ) [54418,54419]"/>
  <match src="identifier: staged [91143,91149]" dest="identifier: staged [29570,29576]"/>
  <match src="function: function [95753,95761]" dest="function: function [31758,31766]"/>
  <match src="identifier: totalSupply [12804,12815]" dest="identifier: totalSupply [23331,23342]"/>
  <match src="member_expression [10736,10746]" dest="member_expression [10736,10746]"/>
  <match src="uint256: uint256 [10851,10858]" dest="uint256: uint256 [10851,10858]"/>
  <match src="function_body [105464,105568]" dest="function_body [41469,41573]"/>
  <match src="primitive_type [82510,82517]" dest="primitive_type [70657,70664]"/>
  <match src="state_mutability [9053,9057]" dest="state_mutability [9053,9057]"/>
  <match src="(: ( [10508,10509]" dest="(: ( [10508,10509]"/>
  <match src="identifier: msg [85093,85096]" dest="identifier: msg [79312,79315]"/>
  <match src="call_argument [30315,30321]" dest="call_argument [46793,46799]"/>
  <match src="{: { [22919,22920]" dest="{: { [64052,64053]"/>
  <match src="identifier: price1CumulativeLast [56434,56454]" dest="identifier: price1CumulativeLast [22526,22546]"/>
  <match src="function: function [22844,22852]" dest="function: function [63986,63994]"/>
  <match src="(: ( [100049,100050]" dest="(: ( [36054,36055]"/>
  <match src="identifier: add [103577,103580]" dest="identifier: add [39582,39585]"/>
  <match src="[: [ [100835,100836]" dest="[: [ [36840,36841]"/>
  <match src="(: ( [45883,45884]" dest="(: ( [14464,14465]"/>
  <match src="parameter [56656,56668]" dest="parameter [22748,22760]"/>
  <match src="parameter [97991,97998]" dest="parameter [33996,34003]"/>
  <match src="event_paramater [83091,83104]" dest="event_paramater [70895,70908]"/>
  <match src="member_expression [105111,105126]" dest="member_expression [41116,41131]"/>
  <match src="(: ( [35391,35392]" dest="(: ( [51869,51870]"/>
  <match src="bytes32: bytes32 [55570,55577]" dest="bytes32: bytes32 [21662,21669]"/>
  <match src="identifier: _state [102744,102750]" dest="identifier: _state [38749,38755]"/>
  <match src="visibility [106978,106986]" dest="visibility [42983,42991]"/>
  <match src="return: return [48200,48206]" dest="return: return [16781,16787]"/>
  <match src="{: { [48220,48221]" dest="{: { [16801,16802]"/>
  <match src="type_name [6985,6992]" dest="type_name [6985,6992]"/>
  <match src="[: [ [107244,107245]" dest="[: [ [43249,43250]"/>
  <match src="memory: memory [9518,9524]" dest="memory: memory [9518,9524]"/>
  <match src="visibility [47268,47276]" dest="visibility [15849,15857]"/>
  <match src=".: . [102468,102469]" dest=".: . [38473,38474]"/>
  <match src="primitive_type [8054,8061]" dest="primitive_type [8054,8061]"/>
  <match src="visibility [93218,93226]" dest="visibility [76571,76579]"/>
  <match src="type_name [98508,98515]" dest="type_name [34513,34520]"/>
  <match src="binary_expression [20843,20866]" dest="binary_expression [64488,64511]"/>
  <match src="&quot;: &quot; [26633,26634]" dest="&quot;: &quot; [79605,79606]"/>
  <match src="returns: returns [95204,95211]" dest="returns: returns [31209,31216]"/>
  <match src="&quot;: &quot; [83712,83713]" dest="&quot;: &quot; [71733,71734]"/>
  <match src="state_mutability [46713,46717]" dest="state_mutability [15294,15298]"/>
  <match src="parameter [35615,35628]" dest="parameter [52093,52106]"/>
  <match src="parameter [96725,96732]" dest="parameter [32730,32737]"/>
  <match src="=: = [107089,107090]" dest="=: = [43094,43095]"/>
  <match src="user_defined_type [11107,11111]" dest="user_defined_type [11107,11111]"/>
  <match src="call_argument [3352,3353]" dest="call_argument [3352,3353]"/>
  <match src="): ) [100373,100374]" dest="): ) [36378,36379]"/>
  <match src="=: = [44504,44505]" dest="=: = [13085,13086]"/>
  <match src="identifier: decrementRejectFor [107873,107891]" dest="identifier: decrementRejectFor [43878,43896]"/>
  <match src="(: ( [8975,8976]" dest="(: ( [8975,8976]"/>
  <match src="]: ] [97557,97558]" dest="]: ] [33562,33563]"/>
  <match src="&quot;: &quot; [23552,23553]" dest="&quot;: &quot; [63177,63178]"/>
  <match src="identifier: Storage [90939,90946]" dest="identifier: Storage [29366,29373]"/>
  <match src="for: for [94747,94750]" dest="for: for [30752,30755]"/>
  <match src="call_argument [8912,8946]" dest="call_argument [8912,8946]"/>
  <match src=".: . [97540,97541]" dest=".: . [33545,33546]"/>
  <match src="}: } [46085,46086]" dest="}: } [14666,14667]"/>
  <match src="call_argument [30057,30344]" dest="call_argument [46535,46822]"/>
  <match src="type_alias [82497,82505]" dest="type_alias [70644,70652]"/>
  <match src="type_name [55581,55588]" dest="type_name [21673,21680]"/>
  <match src="parameter [55111,55115]" dest="parameter [21203,21207]"/>
  <match src="identifier: sender [84620,84626]" dest="identifier: sender [72193,72199]"/>
  <match src="call_struct_argument [9347,9385]" dest="call_struct_argument [9347,9385]"/>
  <match src="call_argument [104575,104581]" dest="call_argument [40580,40586]"/>
  <match src="identifier: epochs [106442,106448]" dest="identifier: epochs [42447,42453]"/>
  <match src="comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [12858,12932]" dest="comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [23385,23459]"/>
  <match src="event: event [92937,92942]" dest="event: event [76290,76295]"/>
  <match src="call_argument [9378,9384]" dest="call_argument [9378,9384]"/>
  <match src="type_name [29236,29240]" dest="type_name [45714,45718]"/>
  <match src="identifier: D256 [10668,10672]" dest="identifier: D256 [10668,10672]"/>
  <match src="comment: /**      * ERC20 Interface      */ [94926,94962]" dest="comment: /**      * ERC20 Interface      */ [30931,30967]"/>
  <match src="visibility [84122,84130]" dest="visibility [71825,71833]"/>
  <match src="string_literal [84999,85028]" dest="string_literal [81647,81673]"/>
  <match src="primitive_type [93672,93679]" dest="primitive_type [77025,77032]"/>
  <match src="identifier: D256 [7467,7471]" dest="identifier: D256 [7467,7471]"/>
  <match src="function_body [32566,33153]" dest="function_body [49044,49631]"/>
  <match src="visibility [99782,99788]" dest="visibility [35787,35793]"/>
  <match src="string: string [103261,103267]" dest="string: string [39266,39272]"/>
  <match src="type_name [101832,101839]" dest="type_name [37837,37844]"/>
  <match src=".: . [106735,106736]" dest=".: . [42740,42741]"/>
  <match src="enum: enum [90654,90658]" dest="enum: enum [29081,29085]"/>
  <match src="identifier: Bond [84716,84720]" dest="identifier: Unbond [73237,73243]"/>
  <match src="type_name [56560,56567]" dest="type_name [22652,22659]"/>
  <match src="identifier: subtractedValue [19965,19980]" dest="identifier: totalSupply [18575,18586]"/>
  <match src="identifier: D256 [8812,8816]" dest="identifier: D256 [8812,8816]"/>
  <match src="): ) [105403,105404]" dest="): ) [41408,41409]"/>
  <match src="uint256: uint256 [14382,14389]" dest="uint256: uint256 [24909,24916]"/>
  <match src="): ) [10185,10186]" dest="): ) [10185,10186]"/>
  <match src=",: , [103702,103703]" dest=",: , [39707,39708]"/>
  <match src="call_expression [103331,103376]" dest="call_expression [39336,39381]"/>
  <match src="{: { [10187,10188]" dest="{: { [10187,10188]"/>
  <match src="(: ( [104786,104787]" dest="(: ( [40791,40792]"/>
  <match src="return: return [9542,9548]" dest="return: return [9542,9548]"/>
  <match src="primitive_type [40298,40305]" dest="primitive_type [64340,64347]"/>
  <match src="(: ( [3317,3318]" dest="(: ( [3317,3318]"/>
  <match src="number_literal: 18 [6549,6551]" dest="number_literal: 18 [6549,6551]"/>
  <match src="identifier: setDebtToZero [102985,102998]" dest="identifier: setDebtToZero [38990,39003]"/>
  <match src="(: ( [30591,30592]" dest="(: ( [47069,47070]"/>
  <match src="member_expression [96752,96767]" dest="member_expression [32757,32772]"/>
  <match src="address: address [54993,55000]" dest="address: address [21085,21092]"/>
  <match src="comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20Mintable}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [15404,16579]" dest="comment: // File: contracts/dao/Getters.sol [29992,30026]"/>
  <match src="uint256: uint256 [104650,104657]" dest="uint256: uint256 [40655,40662]"/>
  <match src="assembly: assembly [93907,93915]" dest="assembly: assembly [77260,77268]"/>
  <match src="identifier: result [38385,38391]" dest="identifier: result [54863,54869]"/>
  <match src="call_argument [53472,53478]" dest="call_argument [64856,64862]"/>
  <match src="call_expression [84220,84255]" dest="call_expression [66659,66692]"/>
  <match src="visibility [105656,105664]" dest="visibility [41661,41669]"/>
  <match src="primitive_type [69282,69289]" dest="primitive_type [67081,67088]"/>
  <match src=",: , [33242,33243]" dest=",: , [49720,49721]"/>
  <match src="function: function [6961,6969]" dest="function: function [6961,6969]"/>
  <match src="visibility [104681,104689]" dest="visibility [40686,40694]"/>
  <match src="): ) [11126,11127]" dest="): ) [11126,11127]"/>
  <match src="type_name [55217,55224]" dest="type_name [21309,21316]"/>
  <match src="pure: pure [33934,33938]" dest="pure: pure [50412,50416]"/>
  <match src="(: ( [9512,9513]" dest="(: ( [9512,9513]"/>
  <match src="primitive_type [56704,56708]" dest="primitive_type [22796,22800]"/>
  <match src="expression_statement [4095,4124]" dest="expression_statement [4095,4124]"/>
  <match src="return: return [10492,10498]" dest="return: return [10492,10498]"/>
  <match src="private: private [44750,44757]" dest="private: private [13331,13338]"/>
  <match src="): ) [104047,104048]" dest="): ) [40052,40053]"/>
  <match src="type_name [103245,103252]" dest="type_name [39250,39257]"/>
  <match src="is: is [51955,51957]" dest="is: is [26590,26592]"/>
  <match src=".: . [100123,100124]" dest=".: . [36128,36129]"/>
  <match src="(: ( [8364,8365]" dest="(: ( [8364,8365]"/>
  <match src="returns: returns [99011,99018]" dest="returns: returns [35016,35023]"/>
  <match src="!=: != [109472,109474]" dest="!=: != [69248,69250]"/>
  <match src="identifier: balance [104943,104950]" dest="identifier: balance [40948,40955]"/>
  <match src="(: ( [56703,56704]" dest="(: ( [22795,22796]"/>
  <match src="): ) [84754,84755]" dest="): ) [73286,73287]"/>
  <match src="primitive_type [105640,105647]" dest="primitive_type [41645,41652]"/>
  <match src="call_argument [37798,37800]" dest="call_argument [54276,54278]"/>
  <match src="(: ( [37878,37879]" dest="(: ( [54356,54357]"/>
  <match src="state_variable_declaration [45140,45188]" dest="state_variable_declaration [13721,13769]"/>
  <match src="(: ( [5458,5459]" dest="(: ( [5458,5459]"/>
  <match src="=: = [84285,84286]" dest="=: = [71924,71925]"/>
  <match src="function_body [106091,106160]" dest="function_body [42096,42165]"/>
  <match src="primitive_type [95275,95282]" dest="primitive_type [31280,31287]"/>
  <match src="call_expression [93407,93439]" dest="call_expression [76760,76792]"/>
  <match src="identifier: balanceOf [95265,95274]" dest="identifier: balanceOf [31270,31279]"/>
  <match src="struct_member [90486,90505]" dest="struct_member [28913,28932]"/>
  <match src="member_expression [8936,8943]" dest="member_expression [8936,8943]"/>
  <match src=",: , [15287,15288]" dest=",: , [25814,25815]"/>
  <match src="primitive_type [31118,31122]" dest="primitive_type [47596,47600]"/>
  <match src="primitive_type [37161,37168]" dest="primitive_type [53639,53646]"/>
  <match src="identifier: bonded [90581,90587]" dest="identifier: bonded [29008,29014]"/>
  <match src="comment: // 'x' [29088,29094]" dest="comment: // 'x' [45566,45572]"/>
  <match src="internal: internal [7434,7442]" dest="internal: internal [7434,7442]"/>
  <match src="(: ( [54977,54978]" dest="(: ( [21069,21070]"/>
  <match src="): ) [31635,31636]" dest="): ) [48113,48114]"/>
  <match src="function_body [8509,8754]" dest="function_body [8509,8754]"/>
  <match src="using_directive [82491,82518]" dest="using_directive [70638,70665]"/>
  <match src="return_statement [97464,97493]" dest="return_statement [33469,33498]"/>
  <match src="pure: pure [10316,10320]" dest="pure: pure [10316,10320]"/>
  <match src="user_defined_type [101791,101796]" dest="user_defined_type [37796,37801]"/>
  <match src="primitive_type [10330,10334]" dest="primitive_type [10330,10334]"/>
  <match src="function_definition [96277,96385]" dest="function_definition [32282,32390]"/>
  <match src="identifier: recovered [50856,50865]" dest="identifier: dollarAmount [63131,63143]"/>
  <match src="==: == [96944,96946]" dest="==: == [32949,32951]"/>
  <match src="/: / [4148,4149]" dest="/: / [4148,4149]"/>
  <match src="): ) [14811,14812]" dest="): ) [25338,25339]"/>
  <match src="): ) [48187,48188]" dest="): ) [16768,16769]"/>
  <match src="identifier: FILE [84980,84984]" dest="identifier: FILE [81628,81632]"/>
  <match src="identifier: payloadC [33899,33907]" dest="identifier: payloadC [50377,50385]"/>
  <match src="state_mutability [64859,64863]" dest="state_mutability [27648,27652]"/>
  <match src="identifier: epoch [99574,99579]" dest="identifier: epoch [35579,35584]"/>
  <match src="identifier: value [85279,85284]" dest="identifier: value [73054,73059]"/>
  <match src="return_type_definition [94998,95021]" dest="return_type_definition [31003,31026]"/>
  <match src="expression_statement [103928,103994]" dest="expression_statement [39933,39999]"/>
  <match src="identifier: _state [105475,105481]" dest="identifier: _state [41480,41486]"/>
  <match src=".: . [98578,98579]" dest=".: . [34583,34584]"/>
  <match src=".: . [99196,99197]" dest=".: . [35201,35202]"/>
  <match src="member_expression [106372,106385]" dest="member_expression [42377,42390]"/>
  <match src="function: function [69183,69191]" dest="function: function [66850,66858]"/>
  <match src="state_mutability [41916,41920]" dest="state_mutability [19918,19922]"/>
  <match src="returns: returns [998,1005]" dest="returns: returns [998,1005]"/>
  <match src="(: ( [96324,96325]" dest="(: ( [32329,32330]"/>
  <match src="return_type_definition [56647,56683]" dest="return_type_definition [22739,22775]"/>
  <match src="call_expression [20835,20906]" dest="call_expression [64480,64559]"/>
  <match src="primitive_type [66872,66879]" dest="primitive_type [78435,78442]"/>
  <match src="if_statement [8520,8573]" dest="if_statement [8520,8573]"/>
  <match src="member_expression [100393,100410]" dest="member_expression [36398,36415]"/>
  <match src="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [94851,94917]" dest="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [30856,30922]"/>
  <match src="(: ( [85590,85591]" dest="(: ( [72762,72763]"/>
  <match src="function_body [9531,9611]" dest="function_body [9531,9611]"/>
  <match src="(: ( [15265,15266]" dest="(: ( [25792,25793]"/>
  <match src="identifier: reason [9378,9384]" dest="identifier: reason [9378,9384]"/>
  <match src="uint256: uint256 [97991,97998]" dest="uint256: uint256 [33996,34003]"/>
  <match src="indexed: indexed [101871,101878]" dest="indexed: indexed [37876,37883]"/>
  <match src="uint256: uint256 [70345,70352]" dest="uint256: uint256 [62762,62769]"/>
  <match src=".: . [99518,99519]" dest=".: . [35523,35524]"/>
  <match src=".: . [97425,97426]" dest=".: . [33430,33431]"/>
  <match src="call_expression [31456,31482]" dest="call_expression [47934,47960]"/>
  <match src="call_argument [32783,32809]" dest="call_argument [49261,49287]"/>
  <match src="function_definition [100168,100299]" dest="function_definition [36173,36304]"/>
  <match src="identifier: require [5479,5486]" dest="identifier: require [5479,5486]"/>
  <match src="): ) [96609,96610]" dest="): ) [32614,32615]"/>
  <match src="call_argument [29647,29651]" dest="call_argument [46125,46129]"/>
  <match src="visibility [44398,44405]" dest="visibility [12979,12986]"/>
  <match src="&gt;: &gt; [100712,100713]" dest="&gt;: &gt; [36717,36718]"/>
  <match src="primitive_type [90193,90200]" dest="primitive_type [28620,28627]"/>
  <match src="number_literal: 48 [28973,28975]" dest="number_literal: 48 [45451,45453]"/>
  <match src="(: ( [47578,47579]" dest="(: ( [16159,16160]"/>
  <match src="function_definition [48566,48671]" dest="function_definition [17147,17252]"/>
  <match src="expression_statement [26866,26935]" dest="expression_statement [79688,79759]"/>
  <match src="(: ( [109398,109399]" dest="(: ( [69174,69175]"/>
  <match src="call_expression [104743,104794]" dest="call_expression [40748,40799]"/>
  <match src="}: } [6952,6953]" dest="}: } [6952,6953]"/>
  <match src="identifier: sender [83663,83669]" dest="identifier: sender [71681,71687]"/>
  <match src="identifier: must [31255,31259]" dest="identifier: must [47733,47737]"/>
  <match src="identifier: value [7510,7515]" dest="identifier: value [7510,7515]"/>
  <match src="string [85502,85538]" dest="string [80864,80882]"/>
  <match src="type_name [50337,50344]" dest="type_name [57604,57611]"/>
  <match src="function_body [86911,87100]" dest="function_body [59539,59679]"/>
  <match src="memory: memory [8817,8823]" dest="memory: memory [8817,8823]"/>
  <match src="member_expression [11266,11273]" dest="member_expression [11266,11273]"/>
  <match src=".: . [102644,102645]" dest=".: . [38649,38650]"/>
  <match src="primitive_type [55183,55187]" dest="primitive_type [21275,21279]"/>
  <match src=".: . [104427,104428]" dest=".: . [40432,40433]"/>
  <match src="parameter [103772,103786]" dest="parameter [39777,39791]"/>
  <match src="identifier: account [27633,27640]" dest="identifier: account [56433,56440]"/>
  <match src="(: ( [55216,55217]" dest="(: ( [21308,21309]"/>
  <match src="ternary_expression [11266,11291]" dest="ternary_expression [11266,11291]"/>
  <match src="returns: returns [10959,10966]" dest="returns: returns [10959,10966]"/>
  <match src="uint256: uint256 [72183,72190]" dest="uint256: uint256 [65865,65872]"/>
  <match src=",: , [109496,109497]" dest=",: , [69272,69273]"/>
  <match src="(: ( [21100,21101]" dest="(: ( [64966,64967]"/>
  <match src="identifier: sync [56836,56840]" dest="identifier: sync [22928,22932]"/>
  <match src="identifier: Provider [91322,91330]" dest="identifier: Provider [29749,29757]"/>
  <match src="(: ( [83322,83323]" dest="(: ( [71358,71359]"/>
  <match src="member_expression [103865,103901]" dest="member_expression [39870,39906]"/>
  <match src="identifier: stringify [32869,32878]" dest="identifier: stringify [49347,49356]"/>
  <match src="if_statement [108296,108396]" dest="if_statement [44301,44401]"/>
  <match src="): ) [34811,34812]" dest="): ) [51289,51290]"/>
  <match src="identifier: value [8926,8931]" dest="identifier: value [8926,8931]"/>
  <match src=".: . [102613,102614]" dest=".: . [38618,38619]"/>
  <match src="identifier: account [97660,97667]" dest="identifier: account [33665,33672]"/>
  <match src="private: private [38557,38564]" dest="private: private [55035,55042]"/>
  <match src="parenthesized_expression [36400,36408]" dest="parenthesized_expression [52878,52886]"/>
  <match src="identifier: _state [102899,102905]" dest="identifier: _state [38904,38910]"/>
  <match src="function_body [102888,102968]" dest="function_body [38893,38973]"/>
  <match src="identifier: incrementApproveFor [107285,107304]" dest="identifier: incrementApproveFor [43290,43309]"/>
  <match src="identifier: balance [103606,103613]" dest="identifier: balance [39611,39618]"/>
  <match src="primitive_type [14762,14769]" dest="primitive_type [25289,25296]"/>
  <match src="type_name [82510,82517]" dest="type_name [70657,70664]"/>
  <match src="number_literal: 0 [106862,106863]" dest="number_literal: 0 [42867,42868]"/>
  <match src="user_defined_type [10143,10147]" dest="user_defined_type [10143,10147]"/>
  <match src="struct_member [90399,90415]" dest="struct_member [28826,28842]"/>
  <match src="identifier: pair [53848,53852]" dest="identifier: spender [61545,61552]"/>
  <match src="&amp;: &amp; [37426,37427]" dest="&amp;: &amp; [53904,53905]"/>
  <match src="type_name [55570,55577]" dest="type_name [21662,21669]"/>
  <match src="identifier: decrementTotalBonded [102520,102540]" dest="identifier: decrementTotalBonded [38525,38545]"/>
  <match src="visibility [95192,95198]" dest="visibility [31197,31203]"/>
  <match src="identifier: recipient [102247,102256]" dest="identifier: recipient [38252,38261]"/>
  <match src="identifier: candidates [108014,108024]" dest="identifier: candidates [44019,44029]"/>
  <match src="identifier: candidates [107005,107015]" dest="identifier: candidates [43010,43020]"/>
  <match src="member_expression [103623,103637]" dest="member_expression [39628,39642]"/>
  <match src="primitive_type [12997,13004]" dest="primitive_type [23524,23531]"/>
  <match src="identifier: newLock [108377,108384]" dest="identifier: newLock [44382,44389]"/>
  <match src="internal: internal [77501,77509]" dest="internal: internal [56745,56753]"/>
  <match src="visibility [69835,69842]" dest="visibility [67318,67325]"/>
  <match src="external: external [50419,50427]" dest="external: external [62919,62927]"/>
  <match src="function_definition [7563,7756]" dest="function_definition [7563,7756]"/>
  <match src="expression_statement [37315,37326]" dest="expression_statement [53793,53804]"/>
  <match src="call_argument [67307,67339]" dest="call_argument [81724,81768]"/>
  <match src="returns: returns [98145,98152]" dest="returns: returns [34150,34157]"/>
  <match src=".: . [102780,102781]" dest=".: . [38785,38786]"/>
  <match src="}: } [31078,31079]" dest="}: } [47556,47557]"/>
  <match src="(: ( [5385,5386]" dest="(: ( [5385,5386]"/>
  <match src="): ) [10716,10717]" dest="): ) [10716,10717]"/>
  <match src="number_literal: 10e16 [43761,43766]" dest="number_literal: 10e16 [12342,12347]"/>
  <match src="function: function [55123,55131]" dest="function: function [21215,21223]"/>
  <match src="call_argument [108264,108284]" dest="call_argument [44269,44289]"/>
  <match src="): ) [88681,88682]" dest="): ) [74348,74349]"/>
  <match src="type_name [105816,105823]" dest="type_name [41821,41828]"/>
  <match src="yul_function_call [89189,89209]" dest="yul_function_call [74856,74876]"/>
  <match src="call_expression [1055,1101]" dest="call_expression [1055,1101]"/>
  <match src="identifier: State [91545,91550]" dest="identifier: State [29972,29977]"/>
  <match src="primitive_type [29236,29240]" dest="primitive_type [45714,45718]"/>
  <match src="identifier: payloadA [32879,32887]" dest="identifier: payloadA [49357,49365]"/>
  <match src="call_argument [108249,108258]" dest="call_argument [44254,44263]"/>
  <match src="identifier: account [97872,97879]" dest="identifier: account [33877,33884]"/>
  <match src="parameter [34631,34644]" dest="parameter [51109,51122]"/>
  <match src="): ) [56350,56351]" dest="): ) [22442,22443]"/>
  <match src="type_name [33228,33235]" dest="type_name [49706,49713]"/>
  <match src="call_argument [87244,87248]" dest="call_argument [78702,78706]"/>
  <match src="number_literal: 41 [37263,37265]" dest="number_literal: 41 [53741,53743]"/>
  <match src="): ) [55187,55188]" dest="): ) [21279,21280]"/>
  <match src="primitive_type [34006,34012]" dest="primitive_type [50484,50490]"/>
  <match src="parameter [32486,32502]" dest="parameter [48964,48980]"/>
  <match src="function_definition [8386,8754]" dest="function_definition [8386,8754]"/>
  <match src="identifier: _state [107399,107405]" dest="identifier: _state [43404,43410]"/>
  <match src="uint256: uint256 [77733,77740]" dest="uint256: uint256 [56955,56962]"/>
  <match src="type_name [82887,82894]" dest="type_name [70823,70830]"/>
  <match src="type_name [75650,75657]" dest="type_name [67642,67649]"/>
  <match src="call_expression [85360,85440]" dest="call_expression [80052,80084]"/>
  <match src="{: { [107752,107753]" dest="{: { [43757,43758]"/>
  <match src=".: . [106468,106469]" dest=".: . [42473,42474]"/>
  <match src="function: function [96662,96670]" dest="function: function [32667,32675]"/>
  <match src="if: if [31250,31252]" dest="if: if [47728,47730]"/>
  <match src="string: string [29556,29562]" dest="string: string [46034,46040]"/>
  <match src="type_name [30449,30456]" dest="type_name [46927,46934]"/>
  <match src="call_argument [9113,9147]" dest="call_argument [9113,9147]"/>
  <match src="call_argument [4813,4814]" dest="call_argument [4813,4814]"/>
  <match src="type_name [46393,46405]" dest="type_name [14974,14986]"/>
  <match src="parameter [105832,105852]" dest="parameter [41837,41857]"/>
  <match src="identifier: newPhantomFromBonded [86327,86347]" dest="identifier: expirationEpoch [61859,61874]"/>
  <match src="member_expression [83605,83615]" dest="member_expression [72095,72105]"/>
  <match src="type_name [44902,44909]" dest="type_name [13483,13490]"/>
  <match src="parameter [99803,99817]" dest="parameter [35808,35822]"/>
  <match src="comment: // File: @openzeppelin/contracts/GSN/Context.sol [11306,11354]" dest="comment: // File: contracts/dao/Curve.sol [17467,17499]"/>
  <match src="assignment_expression [107210,107260]" dest="assignment_expression [43215,43265]"/>
  <match src=".: . [83410,83411]" dest=".: . [71446,71447]"/>
  <match src="identifier: account [97340,97347]" dest="identifier: account [33345,33352]"/>
  <match src="primitive_type [21448,21455]" dest="primitive_type [57443,57450]"/>
  <match src="call_argument [103704,103710]" dest="call_argument [39709,39715]"/>
  <match src="expression_statement [109903,110029]" dest="expression_statement [69679,69805]"/>
  <match src=",: , [84984,84985]" dest=",: , [81632,81633]"/>
  <match src="identifier: implementation [100883,100897]" dest="identifier: implementation [36888,36902]"/>
  <match src="identifier: spender [14373,14380]" dest="identifier: spender [24900,24907]"/>
  <match src="uint256: uint256 [17897,17904]" dest="uint256: uint256 [59853,59860]"/>
  <match src="): ) [29463,29464]" dest="): ) [45941,45942]"/>
  <match src="{: { [106987,106988]" dest="{: { [42992,42993]"/>
  <match src="return_type_definition [35664,35686]" dest="return_type_definition [52142,52164]"/>
  <match src="primitive_type [38531,38538]" dest="primitive_type [55009,55016]"/>
  <match src="identifier: BASE [7096,7100]" dest="identifier: BASE [7096,7100]"/>
  <match src="(: ( [32380,32381]" dest="(: ( [48858,48859]"/>
  <match src="type_name [56880,56887]" dest="type_name [22972,22979]"/>
  <match src="pure: pure [10695,10699]" dest="pure: pure [10695,10699]"/>
  <match src="type_name [56532,56536]" dest="type_name [22624,22628]"/>
  <match src="function_definition [1405,1541]" dest="function_definition [1405,1541]"/>
  <match src="member_expression [105266,105310]" dest="member_expression [41271,41315]"/>
  <match src="identifier: balance [96472,96479]" dest="identifier: balance [32477,32484]"/>
  <match src="primitive_type [16928,16935]" dest="primitive_type [18416,18423]"/>
  <match src="external: external [56509,56517]" dest="external: external [22601,22609]"/>
  <match src="identifier: account [103695,103702]" dest="identifier: account [39700,39707]"/>
  <match src="pure: pure [48154,48158]" dest="pure: pure [16735,16739]"/>
  <match src=",: , [84747,84748]" dest=",: , [73270,73271]"/>
  <match src="external: external [64850,64858]" dest="external: external [27639,27647]"/>
  <match src="(: ( [95408,95409]" dest="(: ( [31413,31414]"/>
  <match src="identifier: add [79711,79714]" dest="identifier: add [61885,61888]"/>
  <match src="(: ( [55063,55064]" dest="(: ( [21155,21156]"/>
  <match src="identifier: lessThanOrEqualTo [10401,10418]" dest="identifier: lessThanOrEqualTo [10401,10418]"/>
  <match src="string_literal [3355,3383]" dest="string_literal [3355,3383]"/>
  <match src="type_name [105021,105028]" dest="type_name [41026,41033]"/>
  <match src="state_mutability [95778,95782]" dest="state_mutability [31783,31787]"/>
  <match src="uint256: uint256 [32513,32520]" dest="uint256: uint256 [48991,48998]"/>
  <match src="member_expression [7733,7738]" dest="member_expression [7733,7738]"/>
  <match src="expression_statement [105676,105734]" dest="expression_statement [41681,41739]"/>
  <match src="primitive_type [107305,107312]" dest="primitive_type [43310,43317]"/>
  <match src="identifier: spender [22885,22892]" dest="identifier: spender [64018,64025]"/>
  <match src="identifier: payloadB [31805,31813]" dest="identifier: payloadB [48283,48291]"/>
  <match src="state_mutability [99315,99319]" dest="state_mutability [35320,35324]"/>
  <match src="[: [ [105168,105169]" dest="[: [ [41173,41174]"/>
  <match src="identifier: owner [105692,105697]" dest="identifier: owner [41697,41702]"/>
  <match src="return_type_definition [96535,96552]" dest="return_type_definition [32540,32557]"/>
  <match src="call_argument [33523,33549]" dest="call_argument [50001,50027]"/>
  <match src="comment: // File: contracts/oracle/IOracle.sol [64001,64038]" dest="comment: // File: contracts/oracle/IOracle.sol [26790,26827]"/>
  <match src="call_argument [32915,32920]" dest="call_argument [49393,49398]"/>
  <match src="function: function [106168,106176]" dest="function: function [42173,42181]"/>
  <match src="return_type_definition [45784,45801]" dest="return_type_definition [14365,14382]"/>
  <match src="sstore: sstore [93931,93937]" dest="sstore: sstore [77284,77290]"/>
  <match src="function: function [64736,64744]" dest="function: function [27525,27533]"/>
  <match src="returns: returns [7659,7666]" dest="returns: returns [7659,7666]"/>
  <match src="type_name [54878,54882]" dest="type_name [20970,20974]"/>
  <match src="identifier: reason [32086,32092]" dest="identifier: reason [48564,48570]"/>
  <match src="pure: pure [10580,10584]" dest="pure: pure [10580,10584]"/>
  <match src="primitive_type [95007,95013]" dest="primitive_type [31012,31018]"/>
  <match src="(: ( [45962,45963]" dest="(: ( [14543,14544]"/>
  <match src="visibility [46822,46830]" dest="visibility [15403,15411]"/>
  <match src="call_expression [31984,32008]" dest="call_expression [48462,48486]"/>
  <match src="return_type_definition [95561,95578]" dest="return_type_definition [31566,31583]"/>
  <match src="identifier: msg [84721,84724]" dest="identifier: msg [73244,73247]"/>
  <match src="state_mutability [54679,54683]" dest="state_mutability [20771,20775]"/>
  <match src="visibility [56812,56820]" dest="visibility [22904,22912]"/>
  <match src="identifier: stringifyTruncated [33523,33541]" dest="identifier: stringifyTruncated [50001,50019]"/>
  <match src=",: , [51115,51116]" dest=",: , [56599,56600]"/>
  <match src="string [87435,87444]" dest="string [79254,79261]"/>
  <match src="): ) [9599,9600]" dest="): ) [9599,9600]"/>
  <match src="function: function [103727,103735]" dest="function: function [39732,39740]"/>
  <match src="return_statement [95333,95373]" dest="return_statement [31338,31378]"/>
  <match src="{: { [84141,84142]" dest="{: { [71864,71865]"/>
  <match src="visibility [82748,82755]" dest="visibility [70681,70688]"/>
  <match src="function_definition [95076,95164]" dest="function_definition [31081,31169]"/>
  <match src="call_argument [3349,3350]" dest="call_argument [3349,3350]"/>
  <match src="identifier: from [6970,6974]" dest="identifier: from [6970,6974]"/>
  <match src="identifier: name [54663,54667]" dest="identifier: name [20755,20759]"/>
  <match src="identifier: LPAREN [33576,33582]" dest="identifier: LPAREN [50054,50060]"/>
  <match src="number_literal: 0 [96947,96948]" dest="number_literal: 0 [32952,32953]"/>
  <match src="type_cast_expression [36660,36674]" dest="type_cast_expression [53138,53152]"/>
  <match src="user_defined_type [67744,67756]" dest="user_defined_type [19879,19891]"/>
  <match src="(: ( [99565,99566]" dest="(: ( [35570,35571]"/>
  <match src="function_definition [9164,9396]" dest="function_definition [9164,9396]"/>
  <match src="): ) [16935,16936]" dest="): ) [18423,18424]"/>
  <match src="identifier: sender [85271,85277]" dest="identifier: sender [73046,73052]"/>
  <match src="string_literal [66524,66532]" dest="string_literal [61006,61014]"/>
  <match src="]: ] [105697,105698]" dest="]: ] [41702,41703]"/>
  <match src="user_defined_type [10668,10672]" dest="user_defined_type [10668,10672]"/>
  <match src="identifier: GOVERNANCE_QUORUM [44555,44572]" dest="identifier: GOVERNANCE_QUORUM [13136,13153]"/>
  <match src="uint256: uint256 [72477,72484]" dest="uint256: uint256 [65990,65997]"/>
  <match src="identifier: value [6808,6813]" dest="identifier: value [6808,6813]"/>
  <match src="primitive_type [38148,38155]" dest="primitive_type [54626,54633]"/>
  <match src="{: { [95022,95023]" dest="{: { [31027,31028]"/>
  <match src=",: , [55860,55861]" dest=",: , [21952,21953]"/>
  <match src="type_name [55273,55277]" dest="type_name [21365,21369]"/>
  <match src="string [26599,26634]" dest="string [79577,79606]"/>
  <match src="return_statement [100110,100153]" dest="return_statement [36115,36158]"/>
  <match src="function: function [92992,93000]" dest="function: function [76345,76353]"/>
  <match src="array_access [95340,95364]" dest="array_access [31345,31369]"/>
  <match src="identifier: reason [102953,102959]" dest="identifier: reason [38958,38964]"/>
  <match src="(: ( [53791,53792]" dest="(: ( [61398,61399]"/>
  <match src="string: string [9238,9244]" dest="string: string [9238,9244]"/>
  <match src="parameter [30472,30486]" dest="parameter [46950,46964]"/>
  <match src="member_expression [102623,102644]" dest="member_expression [38628,38649]"/>
  <match src="): ) [98997,98998]" dest="): ) [35002,35003]"/>
  <match src="identifier: balance [103534,103541]" dest="identifier: balance [39539,39546]"/>
  <match src="function: function [98116,98124]" dest="function: function [34121,34129]"/>
  <match src="[: [ [106832,106833]" dest="[: [ [42837,42838]"/>
  <match src="state_mutability [47682,47686]" dest="state_mutability [16263,16267]"/>
  <match src="(: ( [102401,102402]" dest="(: ( [38406,38407]"/>
  <match src="call_argument [84059,84069]" dest="call_argument [81885,81895]"/>
  <match src="call_argument [30926,30931]" dest="call_argument [47404,47409]"/>
  <match src="(: ( [8608,8609]" dest="(: ( [8608,8609]"/>
  <match src="identifier: spender [105978,105985]" dest="identifier: spender [41983,41990]"/>
  <match src="view: view [75501,75505]" dest="view: view [67326,67330]"/>
  <match src="state_mutability [54741,54745]" dest="state_mutability [20833,20837]"/>
  <match src="primitive_type [29845,29849]" dest="primitive_type [46323,46327]"/>
  <match src="{: { [106566,106567]" dest="{: { [42571,42572]"/>
  <match src="memory: memory [8305,8311]" dest="memory: memory [8305,8311]"/>
  <match src="): ) [84739,84740]" dest="): ) [73262,73263]"/>
  <match src="identifier: amount [77659,77665]" dest="identifier: amount [57498,57504]"/>
  <match src="returns: returns [46384,46391]" dest="returns: returns [14965,14972]"/>
  <match src="parameter [10475,10479]" dest="parameter [10475,10479]"/>
  <match src="): ) [79749,79750]" dest="): ) [61919,61920]"/>
  <match src="): ) [47377,47378]" dest="): ) [15958,15959]"/>
  <match src="return_type_definition [2370,2387]" dest="return_type_definition [2370,2387]"/>
  <match src="identifier: GOVERNANCE_SUPER_MAJORITY [47351,47376]" dest="identifier: GOVERNANCE_SUPER_MAJORITY [15932,15957]"/>
  <match src="bytes2: bytes2 [29100,29106]" dest="bytes2: bytes2 [45578,45584]"/>
  <match src="call_argument [36007,36013]" dest="call_argument [52485,52491]"/>
  <match src="comment: // 10% [43768,43774]" dest="comment: // 10% [12349,12355]"/>
  <match src="identifier: Withdraw [82853,82861]" dest="identifier: Withdraw [70789,70797]"/>
  <match src="): ) [97697,97698]" dest="): ) [33702,33703]"/>
  <match src="function_definition [107680,107856]" dest="function_definition [43685,43861]"/>
  <match src="internal: internal [47796,47804]" dest="internal: internal [16377,16385]"/>
  <match src="visibility [24488,24495]" dest="visibility [60041,60048]"/>
  <match src="type_name [72208,72215]" dest="type_name [66013,66020]"/>
  <match src="returns: returns [96206,96213]" dest="returns: returns [32211,32218]"/>
  <match src="identifier: balance [102445,102452]" dest="identifier: balance [38450,38457]"/>
  <match src=".: . [107836,107837]" dest=".: . [43841,43842]"/>
  <match src="false: false [102316,102321]" dest="false: false [38321,38326]"/>
  <match src="type_name [5408,5414]" dest="type_name [5408,5414]"/>
  <match src="constant: constant [45304,45312]" dest="constant: constant [13885,13893]"/>
  <match src=".: . [100399,100400]" dest=".: . [36404,36405]"/>
  <match src="return: return [6917,6923]" dest="return: return [6917,6923]"/>
  <match src="primitive_type [104346,104353]" dest="primitive_type [40351,40358]"/>
  <match src="return_type_definition [46718,46735]" dest="return_type_definition [15299,15316]"/>
  <match src="comment: // File: @openzeppelin/upgrades/contracts/utils/Address.sol [87635,87694]" dest="comment: // File: @openzeppelin/upgrades/contracts/utils/Address.sol [73302,73361]"/>
  <match src="type_name [55871,55875]" dest="type_name [21963,21967]"/>
  <match src="array_access [97717,97741]" dest="array_access [33722,33746]"/>
  <match src="(: ( [56387,56388]" dest="(: ( [22479,22480]"/>
  <match src="parameter [104665,104679]" dest="parameter [40670,40684]"/>
  <match src="function: function [34593,34601]" dest="function: function [51071,51079]"/>
  <match src="identifier: balance [103310,103317]" dest="identifier: balance [39315,39322]"/>
  <match src="identifier: msg [84557,84560]" dest="identifier: msg [73166,73169]"/>
  <match src="function_body [48837,48879]" dest="function_body [17418,17460]"/>
  <match src="function_definition [55353,55412]" dest="function_definition [21445,21504]"/>
  <match src="call_expression [48207,48256]" dest="call_expression [16788,16837]"/>
  <match src="(: ( [82919,82920]" dest="(: ( [83178,83179]"/>
  <match src="member_expression [86350,86378]" dest="member_expression [72963,72972]"/>
  <match src="call_argument [109530,109551]" dest="call_argument [69306,69327]"/>
  <match src="member_expression [107608,107625]" dest="member_expression [43613,43630]"/>
  <match src="identifier: file [31392,31396]" dest="identifier: file [47870,47874]"/>
  <match src="identifier: transferFrom [83325,83337]" dest="identifier: transferFrom [71361,71373]"/>
  <match src="primitive_type [43700,43707]" dest="primitive_type [12281,12288]"/>
  <match src=".: . [104216,104217]" dest=".: . [40221,40222]"/>
  <match src="return_statement [96995,97057]" dest="return_statement [33000,33062]"/>
  <match src="number_literal: 0x203c [29215,29221]" dest="number_literal: 0x203c [45693,45699]"/>
  <match src="identifier: D256 [9454,9458]" dest="identifier: D256 [9454,9458]"/>
  <match src="address: address [90193,90200]" dest="address: address [28620,28627]"/>
  <match src="type_name [31118,31122]" dest="type_name [47596,47600]"/>
  <match src="memory: memory [48335,48341]" dest="memory: memory [16916,16922]"/>
  <match src="internal: internal [104681,104689]" dest="internal: internal [40686,40694]"/>
  <match src="call_argument [93415,93422]" dest="call_argument [76768,76775]"/>
  <match src="parameter [52093,52108]" dest="parameter [26728,26743]"/>
  <match src="constant: constant [44610,44618]" dest="constant: constant [13191,13199]"/>
  <match src="variable_declaration_statement [37637,37664]" dest="variable_declaration_statement [54115,54142]"/>
  <match src=",: , [106960,106961]" dest=",: , [42965,42966]"/>
  <match src="primitive_type [37649,37656]" dest="primitive_type [54127,54134]"/>
  <match src=",: , [9593,9594]" dest=",: , [9593,9594]"/>
  <match src=".: . [96142,96143]" dest=".: . [32147,32148]"/>
  <match src="member_expression [104743,104786]" dest="member_expression [40748,40791]"/>
  <match src="): ) [104679,104680]" dest="): ) [40684,40685]"/>
  <match src="visibility [14813,14821]" dest="visibility [25340,25348]"/>
  <match src="member_expression [7718,7728]" dest="member_expression [7718,7728]"/>
  <match src="member_expression [103865,103880]" dest="member_expression [39870,39885]"/>
  <match src=",: , [52048,52049]" dest=",: , [26683,26684]"/>
  <match src=",: , [30486,30487]" dest=",: , [46964,46965]"/>
  <match src="identifier: D256 [47170,47174]" dest="identifier: D256 [15751,15755]"/>
  <match src="return_type_definition [97142,97159]" dest="return_type_definition [33147,33164]"/>
  <match src="): ) [97199,97200]" dest="): ) [33204,33205]"/>
  <match src="returns: returns [56647,56654]" dest="returns: returns [22739,22746]"/>
  <match src="[: [ [105953,105954]" dest="[: [ [41958,41959]"/>
  <match src="member_expression [104541,104562]" dest="member_expression [40546,40567]"/>
  <match src="internal: internal [6732,6740]" dest="internal: internal [6732,6740]"/>
  <match src="member_expression [76210,76256]" dest="member_expression [81345,81370]"/>
  <match src="): ) [97205,97206]" dest="): ) [33210,33211]"/>
  <match src="call_argument [80986,80998]" dest="call_argument [63306,63318]"/>
  <match src="function: function [88617,88625]" dest="function: function [74284,74292]"/>
  <match src="member_expression [95921,95936]" dest="member_expression [31926,31941]"/>
  <match src=",: , [84626,84627]" dest=",: , [72199,72200]"/>
  <match src="visibility [44313,44320]" dest="visibility [12894,12901]"/>
  <match src="(: ( [86301,86302]" dest="(: ( [80405,80406]"/>
  <match src="type_cast_expression [36376,36410]" dest="type_cast_expression [52854,52888]"/>
  <match src="uint256: uint256 [91160,91167]" dest="uint256: uint256 [29587,29594]"/>
  <match src="member_expression [100818,100858]" dest="member_expression [36823,36863]"/>
  <match src=".: . [8354,8355]" dest=".: . [8354,8355]"/>
  <match src="identifier: Status [89992,89998]" dest="identifier: Status [28419,28425]"/>
  <match src="returns: returns [8482,8489]" dest="returns: returns [8482,8489]"/>
  <match src="if: if [35195,35197]" dest="if: if [51673,51675]"/>
  <match src="uint256: uint256 [84185,84192]" dest="uint256: uint256 [66641,66648]"/>
  <match src="primitive_type [10181,10185]" dest="primitive_type [10181,10185]"/>
  <match src="enum_value: Locked [90043,90049]" dest="enum_value: Locked [28470,28476]"/>
  <match src="string_literal [20103,20142]" dest="string_literal [71160,71181]"/>
  <match src="new_expression [35997,36006]" dest="new_expression [52475,52484]"/>
  <match src="type_name [52033,52040]" dest="type_name [26668,26675]"/>
  <match src="bool: bool [52142,52146]" dest="bool: bool [26777,26781]"/>
  <match src="identifier: State [91430,91435]" dest="identifier: State [29857,29862]"/>
  <match src="{: { [45931,45932]" dest="{: { [14512,14513]"/>
  <match src="identifier: getPoolExitLockupEpochs [79725,79748]" dest="identifier: getCouponExpiration [61899,61918]"/>
  <match src="type_name [55111,55115]" dest="type_name [21203,21207]"/>
  <match src="): ) [100235,100236]" dest="): ) [36240,36241]"/>
  <match src="): ) [95218,95219]" dest="): ) [31223,31224]"/>
  <match src="visibility [100900,100906]" dest="visibility [36905,36911]"/>
  <match src="(: ( [96543,96544]" dest="(: ( [32548,32549]"/>
  <match src="internal: internal [3295,3303]" dest="internal: internal [3295,3303]"/>
  <match src="identifier: _state [103544,103550]" dest="identifier: _state [39549,39555]"/>
  <match src="{: { [11214,11215]" dest="{: { [11214,11215]"/>
  <match src="primitive_type [103755,103762]" dest="primitive_type [39760,39767]"/>
  <match src="return_statement [96345,96378]" dest="return_statement [32350,32383]"/>
  <match src="(: ( [102648,102649]" dest="(: ( [38653,38654]"/>
  <match src="call_argument [29711,29737]" dest="call_argument [46189,46215]"/>
  <match src="[: [ [35205,35206]" dest="[: [ [51683,51684]"/>
  <match src=".: . [8937,8938]" dest=".: . [8937,8938]"/>
  <match src="uint256: uint256 [82510,82517]" dest="uint256: uint256 [70657,70664]"/>
  <match src="identifier: account [103881,103888]" dest="identifier: account [39886,39893]"/>
  <match src="(: ( [103244,103245]" dest="(: ( [39249,39250]"/>
  <match src="call_argument [24119,24125]" dest="call_argument [56556,56562]"/>
  <match src="identifier: self [9354,9358]" dest="identifier: self [9354,9358]"/>
  <match src="call_argument [103910,103916]" dest="call_argument [39915,39921]"/>
  <match src="parameter [105038,105051]" dest="parameter [41043,41056]"/>
  <match src="mapping: mapping [91405,91412]" dest="mapping: mapping [29832,29839]"/>
  <match src="type_name [11107,11111]" dest="type_name [11107,11111]"/>
  <match src="variable_declaration_statement [75731,75870]" dest="variable_declaration_statement [82074,82151]"/>
  <match src="visibility [27963,27971]" dest="visibility [56219,56227]"/>
  <match src="function_definition [103727,104056]" dest="function_definition [39732,40061]"/>
  <match src="visibility [16686,16693]" dest="visibility [66897,66904]"/>
  <match src="uint256: uint256 [107324,107331]" dest="uint256: uint256 [43329,43336]"/>
  <match src="identifier: Claim [84053,84058]" dest="identifier: Commit [81878,81884]"/>
  <match src="primitive_type [83188,83195]" dest="primitive_type [83204,83211]"/>
  <match src="boolean_literal [102180,102185]" dest="boolean_literal [38185,38190]"/>
  <match src="uint: uint [55546,55550]" dest="uint: uint [21638,21642]"/>
  <match src="): ) [93273,93274]" dest="): ) [76626,76627]"/>
  <match src="=: = [35249,35250]" dest="=: = [51727,51728]"/>
  <match src="{: { [97699,97700]" dest="{: { [33704,33705]"/>
  <match src="(: ( [6887,6888]" dest="(: ( [6887,6888]"/>
  <match src="member_expression [103952,103966]" dest="member_expression [39957,39971]"/>
  <match src="variable_declaration_statement [38058,38072]" dest="variable_declaration_statement [54536,54550]"/>
  <match src="type_name [53282,53289]" dest="type_name [56442,56449]"/>
  <match src="identifier: that [50837,50841]" dest="identifier: that [63097,63101]"/>
  <match src="member_expression [99190,99234]" dest="member_expression [35195,35239]"/>
  <match src="{: { [84811,84812]" dest="{: { [72399,72400]"/>
  <match src="): ) [33275,33276]" dest="): ) [49753,49754]"/>
  <match src="struct_member [91085,91100]" dest="struct_member [29512,29527]"/>
  <match src="identifier: _state [104263,104269]" dest="identifier: _state [40268,40274]"/>
  <match src="type_name [10274,10278]" dest="type_name [10274,10278]"/>
  <match src="(: ( [55377,55378]" dest="(: ( [21469,21470]"/>
  <match src="identifier: epoch [79703,79708]" dest="identifier: epoch [61877,61882]"/>
  <match src="call_expression [105513,105560]" dest="call_expression [41518,41565]"/>
  <match src="expression_statement [107763,107849]" dest="expression_statement [43768,43854]"/>
  <match src=",: , [8234,8235]" dest=",: , [8234,8235]"/>
  <match src="): ) [85988,85989]" dest="): ) [80322,80323]"/>
  <match src="variable_declaration [86157,86173]" dest="variable_declaration [62129,62151]"/>
  <match src="yul_function_call [35385,35407]" dest="yul_function_call [51863,51885]"/>
  <match src="(: ( [99953,99954]" dest="(: ( [35958,35959]"/>
  <match src=",: , [4746,4747]" dest=",: , [4746,4747]"/>
  <match src="external: external [86828,86836]" dest="external: external [64371,64379]"/>
  <match src="using: using [101813,101818]" dest="using: using [37818,37823]"/>
  <match src="primitive_type [72530,72537]" dest="primitive_type [66028,66035]"/>
  <match src="function_definition [56612,56684]" dest="function_definition [22704,22776]"/>
  <match src="call_argument [23158,23165]" dest="call_argument [64248,64255]"/>
  <match src="state_mutability [98140,98144]" dest="state_mutability [34145,34149]"/>
  <match src="public: public [97349,97355]" dest="public: public [33354,33360]"/>
  <match src="): ) [85284,85285]" dest="): ) [73059,73060]"/>
  <match src="call_argument [4816,4817]" dest="call_argument [4816,4817]"/>
  <match src="): ) [56636,56637]" dest="): ) [22728,22729]"/>
  <match src="call_argument [8936,8943]" dest="call_argument [8936,8943]"/>
  <match src="identifier: value [15322,15327]" dest="identifier: value [25849,25854]"/>
  <match src="uint256: uint256 [69256,69263]" dest="uint256: uint256 [67058,67065]"/>
  <match src="internal: internal [46251,46259]" dest="internal: internal [14832,14840]"/>
  <match src="function_definition [24196,24299]" dest="function_definition [56687,56923]"/>
  <match src="identifier: c [2687,2688]" dest="identifier: c [2687,2688]"/>
  <match src="type_name [46963,46975]" dest="type_name [15544,15556]"/>
  <match src="identifier: candidate [100196,100205]" dest="identifier: candidate [36201,36210]"/>
  <match src="contract_declaration [91515,91561]" dest="contract_declaration [29942,29988]"/>
  <match src=".: . [97880,97881]" dest=".: . [33885,33886]"/>
  <match src="call_argument [87568,87572]" dest="call_argument [81426,81430]"/>
  <match src="event_paramater [55897,55912]" dest="event_paramater [21989,22004]"/>
  <match src="type_name [55033,55037]" dest="type_name [21125,21129]"/>
  <match src="member_expression [102599,102613]" dest="member_expression [38604,38618]"/>
  <match src="): ) [54951,54952]" dest="): ) [21043,21044]"/>
  <match src="parameter [107169,107188]" dest="parameter [43174,43193]"/>
  <match src="primitive_type [18544,18551]" dest="primitive_type [60025,60032]"/>
  <match src="returns: returns [64792,64799]" dest="returns: returns [27581,27588]"/>
  <match src="call_expression [8336,8370]" dest="call_expression [8336,8370]"/>
  <match src=",: , [87248,87249]" dest=",: , [78706,78707]"/>
  <match src="identifier: self [9654,9658]" dest="identifier: self [9654,9658]"/>
  <match src="returns: returns [2370,2377]" dest="returns: returns [2370,2377]"/>
  <match src="returns: returns [10700,10707]" dest="returns: returns [10700,10707]"/>
  <match src="&quot;: &quot; [51035,51036]" dest="&quot;: &quot; [56843,56844]"/>
  <match src="member_expression [107210,107244]" dest="member_expression [43215,43249]"/>
  <match src="&quot;: &quot; [1531,1532]" dest="&quot;: &quot; [1531,1532]"/>
  <match src="block_statement [31872,32352]" dest="block_statement [48350,48830]"/>
  <match src="identifier: nonces [55427,55433]" dest="identifier: nonces [21519,21525]"/>
  <match src="}: } [99241,99242]" dest="}: } [35246,35247]"/>
  <match src="state_mutability [48605,48609]" dest="state_mutability [17186,17190]"/>
  <match src="(: ( [10363,10364]" dest="(: ( [10363,10364]"/>
  <match src="internal: internal [106978,106986]" dest="internal: internal [42983,42991]"/>
  <match src="identifier: value [84514,84519]" dest="identifier: value [72699,72704]"/>
  <match src="): ) [33627,33628]" dest="): ) [50105,50106]"/>
  <match src="call_argument [1063,1069]" dest="call_argument [1063,1069]"/>
  <match src="parameter [46727,46734]" dest="parameter [15308,15315]"/>
  <match src="return_type_definition [47114,47143]" dest="return_type_definition [15695,15724]"/>
  <match src="identifier: D256 [9669,9673]" dest="identifier: D256 [9669,9673]"/>
  <match src="uint256: uint256 [105640,105647]" dest="uint256: uint256 [41645,41652]"/>
  <match src="member_expression [95340,95372]" dest="member_expression [31345,31377]"/>
  <match src="]: ] [104444,104445]" dest="]: ] [40449,40450]"/>
  <match src="string_literal [83678,83713]" dest="string_literal [71696,71734]"/>
  <match src="memory: memory [6770,6776]" dest="memory: memory [6770,6776]"/>
  <match src="identifier: b [981,982]" dest="identifier: b [981,982]"/>
  <match src="): ) [98584,98585]" dest="): ) [34589,34590]"/>
  <match src="variable_declaration [69308,69329]" dest="variable_declaration [67099,67116]"/>
  <match src="visibility [104401,104409]" dest="visibility [40406,40414]"/>
  <match src="{: { [90664,90665]" dest="{: { [29091,29092]"/>
  <match src="return_type_definition [56107,56124]" dest="return_type_definition [22199,22216]"/>
  <match src="): ) [31051,31052]" dest="): ) [47529,47530]"/>
  <match src="return_statement [38779,38827]" dest="return_statement [55257,55305]"/>
  <match src="uint256: uint256 [43628,43635]" dest="uint256: uint256 [12209,12216]"/>
  <match src="event_definition [55955,56002]" dest="event_definition [22047,22094]"/>
  <match src=":: : [7268,7269]" dest=":: : [7268,7269]"/>
  <match src="pure: pure [7649,7653]" dest="pure: pure [7649,7653]"/>
  <match src="identifier: reason [9252,9258]" dest="identifier: reason [9252,9258]"/>
  <match src="): ) [8882,8883]" dest="): ) [8882,8883]"/>
  <match src="identifier: account [97799,97806]" dest="identifier: account [33804,33811]"/>
  <match src="primitive_type [90158,90165]" dest="primitive_type [28585,28592]"/>
  <match src="visibility [46129,46137]" dest="visibility [14710,14718]"/>
  <match src="identifier: coupons [105352,105359]" dest="identifier: coupons [41357,41364]"/>
  <match src="identifier: getCouponSupplyChangeLimit [48116,48142]" dest="identifier: getCouponSupplyChangeLimit [16697,16723]"/>
  <match src="member_expression [84502,84512]" dest="member_expression [72687,72697]"/>
  <match src="function_definition [14348,14422]" dest="function_definition [24875,24949]"/>
  <match src="[: [ [105279,105280]" dest="[: [ [41284,41285]"/>
  <match src="parameter [20699,20716]" dest="parameter [64321,64338]"/>
  <match src="(: ( [9071,9072]" dest="(: ( [9071,9072]"/>
  <match src="]: ] [103853,103854]" dest="]: ] [39858,39859]"/>
  <match src="parameter [100613,100630]" dest="parameter [36618,36635]"/>
  <match src="identifier: result [35392,35398]" dest="identifier: result [51870,51876]"/>
  <match src="address: address [105608,105615]" dest="address: address [41613,41620]"/>
  <match src="identifier: account [96832,96839]" dest="identifier: account [32837,32844]"/>
  <match src="type_name [95894,95901]" dest="type_name [31899,31906]"/>
  <match src="bool: bool [31702,31706]" dest="bool: bool [48180,48184]"/>
  <match src="(: ( [32801,32802]" dest="(: ( [49279,49280]"/>
  <match src="=: = [44878,44879]" dest="=: = [13459,13460]"/>
  <match src="}: } [8377,8378]" dest="}: } [8377,8378]"/>
  <match src=".: . [107644,107645]" dest=".: . [43649,43650]"/>
  <match src="identifier: blockTimestamp [98712,98726]" dest="identifier: blockTimestamp [34717,34731]"/>
  <match src="(: ( [64847,64848]" dest="(: ( [27636,27637]"/>
  <match src="binary_expression [10068,10091]" dest="binary_expression [10068,10091]"/>
  <match src="call_expression [85242,85285]" dest="call_expression [73017,73060]"/>
  <match src="identifier: balance [103338,103345]" dest="identifier: balance [39343,39350]"/>
  <match src="external: external [70223,70231]" dest="external: external [72862,72870]"/>
  <match src="): ) [8530,8531]" dest="): ) [8530,8531]"/>
  <match src="(: ( [83767,83768]" dest="(: ( [71761,71762]"/>
  <match src="identifier: mul [9413,9416]" dest="identifier: mul [9413,9416]"/>
  <match src="member_expression [105874,105913]" dest="member_expression [41879,41918]"/>
  <match src="comment: /**  * @dev Optional functions from the ERC20 standard.  */ [24378,24439]" dest="comment: /**  * @title Require  * @author dYdX  *  * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()  */ [45202,45348]"/>
  <match src=".: . [109910,109911]" dest=".: . [69686,69687]"/>
  <match src="}: } [93491,93492]" dest="}: } [76844,76845]"/>
  <match src="comment: // 12 epochs [44800,44812]" dest="comment: // 12 epochs [13381,13393]"/>
  <match src="user_defined_type [9454,9458]" dest="user_defined_type [9454,9458]"/>
  <match src="memory: memory [34695,34701]" dest="memory: memory [51173,51179]"/>
  <match src="identifier: file [29873,29877]" dest="identifier: file [46351,46355]"/>
  <match src="type_name [104363,104370]" dest="type_name [40368,40375]"/>
  <match src="identifier: transferFrom [14749,14761]" dest="identifier: transferFrom [25276,25288]"/>
  <match src="uint256: uint256 [86227,86234]" dest="uint256: uint256 [62261,62268]"/>
  <match src=",: , [59320,59321]" dest=",: , [73176,73177]"/>
  <match src="return_statement [48200,48257]" dest="return_statement [16781,16838]"/>
  <match src="expression_statement [35914,35922]" dest="expression_statement [52392,52400]"/>
  <match src=".: . [108199,108200]" dest=".: . [44204,44205]"/>
  <match src="uint256: uint256 [19244,19251]" dest="uint256: uint256 [18597,18604]"/>
  <match src="function: function [10821,10829]" dest="function: function [10821,10829]"/>
  <match src="uint256: uint256 [106577,106584]" dest="uint256: uint256 [42582,42589]"/>
  <match src=",: , [30977,30978]" dest=",: , [47455,47456]"/>
  <match src="parameter [107150,107167]" dest="parameter [43155,43172]"/>
  <match src="visibility [52126,52132]" dest="visibility [26761,26767]"/>
  <match src="type_name [9642,9646]" dest="type_name [9642,9646]"/>
  <match src="call_expression [103544,103588]" dest="call_expression [39549,39593]"/>
  <match src="return: return [2054,2060]" dest="return: return [2054,2060]"/>
  <match src="expression_statement [21484,21550]" dest="expression_statement [57479,57538]"/>
  <match src="primitive_type [33864,33871]" dest="primitive_type [50342,50349]"/>
  <match src="=: = [44343,44344]" dest="=: = [12924,12925]"/>
  <match src="return: return [47839,47845]" dest="return: return [16420,16426]"/>
  <match src=".: . [83341,83342]" dest=".: . [71377,71378]"/>
  <match src=",: , [30820,30821]" dest=",: , [47298,47299]"/>
  <match src="identifier: initializer [110902,110913]" dest="identifier: initializer [83250,83261]"/>
  <match src="returns: returns [100644,100651]" dest="returns: returns [36649,36656]"/>
  <match src="primitive_type [13272,13279]" dest="primitive_type [23799,23806]"/>
  <match src="type_cast_expression [81240,81253]" dest="type_cast_expression [60074,60087]"/>
  <match src="&gt;: &gt; [36152,36153]" dest="&gt;: &gt; [52630,52631]"/>
  <match src="private: private [44465,44472]" dest="private: private [13046,13053]"/>
  <match src="identifier: a [1068,1069]" dest="identifier: a [1068,1069]"/>
  <match src="block_statement [8532,8573]" dest="block_statement [8532,8573]"/>
  <match src="primitive_type [55064,55071]" dest="primitive_type [21156,21163]"/>
  <match src="primitive_type [74782,74789]" dest="primitive_type [81943,81950]"/>
  <match src="(: ( [38790,38791]" dest="(: ( [55268,55269]"/>
  <match src="identifier: _state [97401,97407]" dest="identifier: _state [33406,33412]"/>
  <match src="&quot;: &quot; [2761,2762]" dest="&quot;: &quot; [2761,2762]"/>
  <match src="parameter [102156,102160]" dest="parameter [38161,38165]"/>
  <match src="modifier: modifier [109372,109380]" dest="modifier: modifier [69148,69156]"/>
  <match src="parameter [54878,54882]" dest="parameter [20970,20974]"/>
  <match src="mapping: mapping [90139,90146]" dest="mapping: mapping [28566,28573]"/>
  <match src="identifier: staged [96151,96157]" dest="identifier: staged [32156,32162]"/>
  <match src="): ) [6725,6726]" dest="): ) [6725,6726]"/>
  <match src="string_literal [27410,27460]" dest="string_literal [72706,72737]"/>
  <match src="call_argument [34097,34101]" dest="call_argument [50575,50579]"/>
  <match src="call_expression [59297,59348]" dest="call_expression [73147,73219]"/>
  <match src="(: ( [69388,69389]" dest="(: ( [67134,67135]"/>
  <match src="(: ( [38796,38797]" dest="(: ( [55274,55275]"/>
  <match src="identifier: staged [104480,104486]" dest="identifier: staged [40485,40491]"/>
  <match src="identifier: self [10736,10740]" dest="identifier: self [10736,10740]"/>
  <match src="external: external [56149,56157]" dest="external: external [22241,22249]"/>
  <match src="): ) [99579,99580]" dest="): ) [35584,35585]"/>
  <match src="=: = [103156,103157]" dest="=: = [39161,39162]"/>
  <match src="parameter [9669,9682]" dest="parameter [9669,9682]"/>
  <match src="state_mutability [54805,54809]" dest="state_mutability [20897,20901]"/>
  <match src="primitive_type [100921,100928]" dest="primitive_type [36926,36933]"/>
  <match src="identifier: redeemable [103145,103155]" dest="identifier: redeemable [39150,39160]"/>
  <match src="call_argument [31373,31397]" dest="call_argument [47851,47875]"/>
  <match src="binary_expression [38164,38169]" dest="binary_expression [54642,54647]"/>
  <match src="identifier: Epoch [90312,90317]" dest="identifier: Epoch [28739,28744]"/>
  <match src="bytes: bytes [37792,37797]" dest="bytes: bytes [54270,54275]"/>
  <match src="function_body [7238,7303]" dest="function_body [7238,7303]"/>
  <match src=".: . [104253,104254]" dest=".: . [40258,40259]"/>
  <match src="type_name [55620,55627]" dest="type_name [21712,21719]"/>
  <match src="uint256: uint256 [13670,13677]" dest="uint256: uint256 [24197,24204]"/>
  <match src="block_statement [33328,33730]" dest="block_statement [49806,50208]"/>
  <match src="identifier: abi [31330,31333]" dest="identifier: abi [47808,47811]"/>
  <match src=".: . [104888,104889]" dest=".: . [40893,40894]"/>
  <match src="identifier: candidate [107228,107237]" dest="identifier: candidate [43233,43242]"/>
  <match src="{: { [74540,74541]" dest="{: { [59282,59283]"/>
  <match src="returns: returns [46954,46961]" dest="returns: returns [15535,15542]"/>
  <match src="call_argument [23544,23550]" dest="call_argument [18484,18490]"/>
  <match src="return_type_definition [95885,95902]" dest="return_type_definition [31890,31907]"/>
  <match src="): ) [93961,93962]" dest="): ) [77314,77315]"/>
  <match src=".: . [7527,7528]" dest=".: . [7527,7528]"/>
  <match src="function_body [95801,95849]" dest="function_body [31806,31854]"/>
  <match src="type_name [48050,48057]" dest="type_name [16631,16638]"/>
  <match src=".: . [85747,85748]" dest=".: . [81203,81204]"/>
  <match src="): ) [27460,27461]" dest="): ) [72737,72738]"/>
  <match src="identifier: amount [102488,102494]" dest="identifier: amount [38493,38499]"/>
  <match src="member_expression [100529,100554]" dest="member_expression [36534,36559]"/>
  <match src="identifier: LPAREN [30847,30853]" dest="identifier: LPAREN [47325,47331]"/>
  <match src="user_defined_type [6888,6892]" dest="user_defined_type [6888,6892]"/>
  <match src="variable_declaration_statement [37161,37183]" dest="variable_declaration_statement [53639,53661]"/>
  <match src="new_expression [36801,36810]" dest="new_expression [53279,53288]"/>
  <match src="call_argument [105525,105559]" dest="call_argument [41530,41564]"/>
  <match src="enum: enum [89987,89991]" dest="enum: enum [28414,28418]"/>
  <match src="visibility [83832,83840]" dest="visibility [81176,81184]"/>
  <match src="=: = [36925,36926]" dest="=: = [53403,53404]"/>
  <match src=".: . [103356,103357]" dest=".: . [39361,39362]"/>
  <match src="type_name [38589,38593]" dest="type_name [55067,55071]"/>
  <match src="assignment_expression [107969,108062]" dest="assignment_expression [43974,44067]"/>
  <match src="{: { [46854,46855]" dest="{: { [15435,15436]"/>
  <match src="type_name [31702,31706]" dest="type_name [48180,48184]"/>
  <match src="type_name [48619,48626]" dest="type_name [17200,17207]"/>
  <match src="primitive_type [55231,55238]" dest="primitive_type [21323,21330]"/>
  <match src="memory: memory [64814,64820]" dest="memory: memory [27603,27609]"/>
  <match src="uint256: uint256 [99954,99961]" dest="uint256: uint256 [35959,35966]"/>
  <match src="member_expression [95340,95355]" dest="member_expression [31345,31360]"/>
  <match src="function: function [53074,53082]" dest="function: function [56163,56171]"/>
  <match src="return_type_definition [10700,10717]" dest="return_type_definition [10700,10717]"/>
  <match src="identifier: stringify [34325,34334]" dest="identifier: stringify [50803,50812]"/>
  <match src="emit: emit [84048,84052]" dest="emit: emit [81873,81877]"/>
  <match src="identifier: account [12965,12972]" dest="identifier: account [23492,23499]"/>
  <match src=",: , [20866,20867]" dest=",: , [64511,64512]"/>
  <match src="call_argument [83678,83713]" dest="call_argument [71696,71734]"/>
  <match src=",: , [102655,102656]" dest=",: , [38660,38661]"/>
  <match src="member_expression [9122,9136]" dest="member_expression [9122,9136]"/>
  <match src="identifier: RPAREN [33071,33077]" dest="identifier: RPAREN [49549,49555]"/>
  <match src="call_argument [34078,34102]" dest="call_argument [50556,50580]"/>
  <match src="address: address [20856,20863]" dest="address: address [64501,64508]"/>
  <match src="assembly: assembly [100991,100999]" dest="assembly: assembly [36996,37004]"/>
  <match src="type_name [50050,50057]" dest="type_name [61046,61053]"/>
  <match src="(: ( [74584,74585]" dest="(: ( [59346,59347]"/>
  <match src="for: for [38053,38056]" dest="for: for [54531,54534]"/>
  <match src="member_expression [104936,104958]" dest="member_expression [40941,40963]"/>
  <match src="type_name [102105,102112]" dest="type_name [38110,38117]"/>
  <match src="assembly_statement [89170,89211]" dest="assembly_statement [74837,74878]"/>
  <match src="call_argument [106781,106807]" dest="call_argument [42786,42812]"/>
  <match src="type_name [45359,45366]" dest="type_name [13940,13947]"/>
  <match src="primitive_type [102258,102265]" dest="primitive_type [38263,38270]"/>
  <match src="identifier: Epoch [91267,91272]" dest="identifier: Epoch [29694,29699]"/>
  <match src="identifier: value [83257,83262]" dest="identifier: value [71294,71299]"/>
  <match src="state_variable_declaration [94804,94918]" dest="state_variable_declaration [30809,30923]"/>
  <match src="parameter [9906,9910]" dest="parameter [9906,9910]"/>
  <match src="member_expression [102599,102620]" dest="member_expression [38604,38625]"/>
  <match src="type_name [31770,31777]" dest="type_name [48248,48255]"/>
  <match src=",: , [56668,56669]" dest=",: , [22760,22761]"/>
  <match src=",: , [56305,56306]" dest=",: , [22397,22398]"/>
  <match src="(: ( [86046,86047]" dest="(: ( [78671,78672]"/>
  <match src="identifier: balanceOfBonded [75813,75828]" dest="identifier: balanceOf [82116,82125]"/>
  <match src="!: ! [33959,33960]" dest="!: ! [50437,50438]"/>
  <match src="return_statement [96564,96611]" dest="return_statement [32569,32616]"/>
  <match src=".: . [104555,104556]" dest=".: . [40560,40561]"/>
  <match src="(: ( [56202,56203]" dest="(: ( [22294,22295]"/>
  <match src="binary_expression [67307,67339]" dest="binary_expression [81724,81768]"/>
  <match src="function: function [8004,8012]" dest="function: function [8004,8012]"/>
  <match src="function: function [100031,100039]" dest="function: function [36036,36044]"/>
  <match src="user_defined_type [64801,64813]" dest="user_defined_type [27590,27602]"/>
  <match src="type_name [108222,108229]" dest="type_name [44227,44234]"/>
  <match src="internal: internal [103489,103497]" dest="internal: internal [39494,39502]"/>
  <match src=".: . [103934,103935]" dest=".: . [39939,39940]"/>
  <match src="}: } [2666,2667]" dest="}: } [2666,2667]"/>
  <match src="type_name [83076,83083]" dest="type_name [70880,70887]"/>
  <match src="expression_statement [105223,105327]" dest="expression_statement [41228,41332]"/>
  <match src=".: . [109759,109760]" dest=".: . [69535,69536]"/>
  <match src="function_definition [95753,95849]" dest="function_definition [31758,31854]"/>
  <match src="): ) [7543,7544]" dest="): ) [7543,7544]"/>
  <match src=".: . [105384,105385]" dest=".: . [41389,41390]"/>
  <match src="primitive_type [28943,28950]" dest="primitive_type [45421,45428]"/>
  <match src="(: ( [96915,96916]" dest="(: ( [32920,32921]"/>
  <match src="{: { [103119,103120]" dest="{: { [39124,39125]"/>
  <match src="state_variable_declaration [82740,82779]" dest="state_variable_declaration [70673,70715]"/>
  <match src="&quot;: &quot; [51149,51150]" dest="&quot;: &quot; [56601,56602]"/>
  <match src="): ) [100898,100899]" dest="): ) [36903,36904]"/>
  <match src="(: ( [56061,56062]" dest="(: ( [22153,22154]"/>
  <match src="identifier: SafeMath [77261,77269]" dest="identifier: SafeMath [83051,83059]"/>
  <match src="uint256: uint256 [53105,53112]" dest="uint256: uint256 [56203,56210]"/>
  <match src="if_statement [31861,32352]" dest="if_statement [48339,48830]"/>
  <match src="uint256: uint256 [40298,40305]" dest="uint256: uint256 [64340,64347]"/>
  <match src="parameter [53282,53296]" dest="parameter [56442,56456]"/>
  <match src="&gt;: &gt; [11274,11275]" dest="&gt;: &gt; [11274,11275]"/>
  <match src="type_name [98279,98302]" dest="type_name [34284,34307]"/>
  <match src=".: . [102629,102630]" dest=".: . [38634,38635]"/>
  <match src="&quot;: &quot; [1099,1100]" dest="&quot;: &quot; [1099,1100]"/>
  <match src="&quot;: &quot; [20904,20905]" dest="&quot;: &quot; [64557,64558]"/>
  <match src="event: event [82847,82852]" dest="event: event [70783,70788]"/>
  <match src="primitive_type [29865,29872]" dest="primitive_type [46343,46350]"/>
  <match src="}: } [89246,89247]" dest="}: } [74913,74914]"/>
  <match src="(: ( [33758,33759]" dest="(: ( [50236,50237]"/>
  <match src="function_definition [9967,10099]" dest="function_definition [9967,10099]"/>
  <match src="return_type_definition [55394,55411]" dest="return_type_definition [21486,21503]"/>
  <match src="call_argument [8559,8560]" dest="call_argument [8559,8560]"/>
  <match src="primitive_type [102043,102047]" dest="primitive_type [38048,38052]"/>
  <match src="primitive_type [98984,98991]" dest="primitive_type [34989,34996]"/>
  <match src="parameter [100921,100933]" dest="parameter [36926,36938]"/>
  <match src="(: ( [93430,93431]" dest="(: ( [76783,76784]"/>
  <match src="function_body [102162,102193]" dest="function_body [38167,38198]"/>
  <match src="-: - [2038,2039]" dest="-: - [2038,2039]"/>
  <match src="function_body [4791,4854]" dest="function_body [4791,4854]"/>
  <match src="struct_member [91006,91021]" dest="struct_member [29433,29448]"/>
  <match src="member_expression [106372,106411]" dest="member_expression [42377,42416]"/>
  <match src="modifier_invocation [83296,83305]" dest="modifier_invocation [71310,71340]"/>
  <match src=".: . [107791,107792]" dest=".: . [43796,43797]"/>
  <match src="call_expression [8907,8947]" dest="call_expression [8907,8947]"/>
  <match src="member_expression [107399,107435]" dest="member_expression [43404,43440]"/>
  <match src="string [82772,82778]" dest="string [70705,70714]"/>
  <match src="type_name [37607,37612]" dest="type_name [54085,54090]"/>
  <match src="return_type_definition [8291,8312]" dest="return_type_definition [8291,8312]"/>
  <match src="primitive_type [29190,29196]" dest="primitive_type [45668,45674]"/>
  <match src="block_statement [53430,53629]" dest="block_statement [64815,64935]"/>
  <match src="(: ( [95791,95792]" dest="(: ( [31796,31797]"/>
  <match src="member_expression [97856,97892]" dest="member_expression [33861,33897]"/>
  <match src="primitive_type [53854,53858]" dest="primitive_type [61441,61448]"/>
  <match src="(: ( [36549,36550]" dest="(: ( [53027,53028]"/>
  <match src="primitive_type [1891,1898]" dest="primitive_type [1891,1898]"/>
  <match src="function_definition [56786,56821]" dest="function_definition [22878,22913]"/>
  <match src="type_name [14797,14804]" dest="type_name [25324,25331]"/>
  <match src="pure: pure [7021,7025]" dest="pure: pure [7021,7025]"/>
  <match src="]: ] [97297,97298]" dest="]: ] [33302,33303]"/>
  <match src="identifier: _state [103509,103515]" dest="identifier: _state [39514,39520]"/>
  <match src=".: . [93359,93360]" dest=".: . [76712,76713]"/>
  <match src="primitive_type [98259,98266]" dest="primitive_type [34264,34271]"/>
  <match src="type_name [83091,83098]" dest="type_name [70895,70902]"/>
  <match src="visibility [97130,97136]" dest="visibility [33135,33141]"/>
  <match src="internal: internal [70115,70123]" dest="internal: internal [71058,71066]"/>
  <match src=".: . [99843,99844]" dest=".: . [35848,35849]"/>
  <match src=",: , [105067,105068]" dest=",: , [41072,41073]"/>
  <match src="(: ( [103187,103188]" dest="(: ( [39192,39193]"/>
  <match src="): ) [5434,5435]" dest="): ) [5434,5435]"/>
  <match src="string [23040,23076]" dest="string [64094,64138]"/>
  <match src="identifier: Permission [111117,111127]" dest="identifier: Permission [70620,70630]"/>
  <match src="): ) [34650,34651]" dest="): ) [51128,51129]"/>
  <match src="call_argument [34806,34811]" dest="call_argument [51284,51289]"/>
  <match src="internal: internal [10158,10166]" dest="internal: internal [10158,10166]"/>
  <match src="return: return [47959,47965]" dest="return: return [16540,16546]"/>
  <match src="uint256: uint256 [6629,6636]" dest="uint256: uint256 [6629,6636]"/>
  <match src=".: . [81157,81158]" dest=".: . [83327,83328]"/>
  <match src="contract_body [82484,87631]" dest="contract_body [70631,73298]"/>
  <match src="}: } [107267,107268]" dest="}: } [43272,43273]"/>
  <match src="uint256: uint256 [102841,102848]" dest="uint256: uint256 [38846,38853]"/>
  <match src="(: ( [56506,56507]" dest="(: ( [22598,22599]"/>
  <match src="call_expression [30880,30899]" dest="call_expression [47358,47377]"/>
  <match src=",: , [55886,55887]" dest=",: , [21978,21979]"/>
  <match src="function_body [98883,98949]" dest="function_body [34888,34954]"/>
  <match src="): ) [55670,55671]" dest="): ) [21762,21763]"/>
  <match src="call_argument [85186,85196]" dest="call_argument [72513,72523]"/>
  <match src=",: , [31429,31430]" dest=",: , [47907,47908]"/>
  <match src="visibility [107549,107557]" dest="visibility [43554,43562]"/>
  <match src="state_mutability [56214,56218]" dest="state_mutability [22306,22310]"/>
  <match src="{: { [8674,8675]" dest="{: { [8674,8675]"/>
  <match src="identifier: input [38539,38544]" dest="identifier: input [55017,55022]"/>
  <match src="}: } [38465,38466]" dest="}: } [54943,54944]"/>
  <match src="-: - [38253,38254]" dest="-: - [54731,54732]"/>
  <match src="(: ( [7970,7971]" dest="(: ( [7970,7971]"/>
  <match src="primitive_type [85147,85154]" dest="primitive_type [62315,62322]"/>
  <match src="comment: // ': ' [29132,29139]" dest="comment: // ': ' [45610,45617]"/>
  <match src="identifier: stringifyTruncated [34161,34179]" dest="identifier: stringifyTruncated [50639,50657]"/>
  <match src="function: function [83232,83240]" dest="function: function [71269,71277]"/>
  <match src="type_name [91454,91489]" dest="type_name [29881,29916]"/>
  <match src="identifier: amount [102945,102951]" dest="identifier: amount [38950,38956]"/>
  <match src="type_name [82862,82869]" dest="type_name [70798,70805]"/>
  <match src="uint256: uint256 [90782,90789]" dest="uint256: uint256 [29209,29216]"/>
  <match src="): ) [53858,53859]" dest="): ) [61477,61478]"/>
  <match src="primitive_type [90486,90493]" dest="primitive_type [28913,28920]"/>
  <match src="parameter [56325,56350]" dest="parameter [22417,22442]"/>
  <match src="address: address [99763,99770]" dest="address: address [35768,35775]"/>
  <match src=",: , [86513,86514]" dest=",: , [63882,63883]"/>
  <match src="call_argument [6806,6818]" dest="call_argument [6806,6818]"/>
  <match src="address: address [105021,105028]" dest="address: address [41026,41033]"/>
  <match src="(: ( [47014,47015]" dest="(: ( [15595,15596]"/>
  <match src="unary_expression [33321,33326]" dest="unary_expression [49799,49804]"/>
  <match src=",: , [30209,30210]" dest=",: , [46687,46688]"/>
  <match src="call_argument [7081,7103]" dest="call_argument [7081,7103]"/>
  <match src="): ) [7294,7295]" dest="): ) [7294,7295]"/>
  <match src=".: . [85876,85877]" dest=".: . [80221,80222]"/>
  <match src=",: , [32448,32449]" dest=",: , [48926,48927]"/>
  <match src="type_name [85052,85059]" dest="type_name [63252,63259]"/>
  <match src="call_expression [111265,111273]" dest="call_expression [68066,68074]"/>
  <match src="internal: internal [10452,10460]" dest="internal: internal [10452,10460]"/>
  <match src="identifier: compareTo [10205,10214]" dest="identifier: compareTo [10205,10214]"/>
  <match src="visibility [10021,10029]" dest="visibility [10021,10029]"/>
  <match src="identifier: amount [21120,21126]" dest="identifier: amount [64993,64999]"/>
  <match src="function_body [6906,6953]" dest="function_body [6906,6953]"/>
  <match src="{: { [7485,7486]" dest="{: { [7485,7486]"/>
  <match src="primitive_type [38786,38790]" dest="primitive_type [55264,55268]"/>
  <match src="type_name [68648,68660]" dest="type_name [66138,66150]"/>
  <match src="(: ( [34412,34413]" dest="(: ( [50890,50891]"/>
  <match src="): ) [46702,46703]" dest="): ) [15283,15284]"/>
  <match src="return: return [100811,100817]" dest="return: return [36816,36822]"/>
  <match src="identifier: Coupons [90437,90444]" dest="identifier: Coupons [28864,28871]"/>
  <match src="(: ( [32878,32879]" dest="(: ( [49356,49357]"/>
  <match src=".: . [108181,108182]" dest=".: . [44186,44187]"/>
  <match src="identifier: sub [7961,7964]" dest="identifier: sub [7961,7964]"/>
  <match src="returns: returns [95885,95892]" dest="returns: returns [31890,31897]"/>
  <match src="uint256: uint256 [96001,96008]" dest="uint256: uint256 [32006,32013]"/>
  <match src="call_argument [34335,34343]" dest="call_argument [50813,50821]"/>
  <match src="function_definition [3922,4267]" dest="function_definition [3922,4267]"/>
  <match src="function_definition [29821,30397]" dest="function_definition [46299,46875]"/>
  <match src="function_definition [96065,96165]" dest="function_definition [32070,32170]"/>
  <match src="identifier: SafeMath [82497,82505]" dest="identifier: SafeMath [70644,70652]"/>
  <match src="identifier: getBootstrappingPeriod [46226,46248]" dest="identifier: getBootstrappingPeriod [14807,14829]"/>
  <match src="(: ( [83949,83950]" dest="(: ( [72560,72561]"/>
  <match src=",: , [31561,31562]" dest=",: , [48039,48040]"/>
  <match src="view: view [54933,54937]" dest="view: view [21025,21029]"/>
  <match src="): ) [85565,85566]" dest="): ) [58726,58727]"/>
  <match src=".: . [98921,98922]" dest=".: . [34926,34927]"/>
  <match src="(: ( [14830,14831]" dest="(: ( [25357,25358]"/>
  <match src="type_name [75882,75889]" dest="type_name [66993,67000]"/>
  <match src="{: { [10481,10482]" dest="{: { [10481,10482]"/>
  <match src="parameter [55546,55559]" dest="parameter [21638,21651]"/>
  <match src="identifier: coupons [105377,105384]" dest="identifier: coupons [41382,41389]"/>
  <match src="): ) [98266,98267]" dest="): ) [34271,34272]"/>
  <match src="return_statement [99183,99235]" dest="return_statement [35188,35240]"/>
  <match src="user_defined_type [95688,95695]" dest="user_defined_type [31693,31700]"/>
  <match src="type_name [31186,31193]" dest="type_name [47664,47671]"/>
  <match src="(: ( [37606,37607]" dest="(: ( [54084,54085]"/>
  <match src="identifier: c [2032,2033]" dest="identifier: c [2032,2033]"/>
  <match src="{: { [101806,101807]" dest="{: { [37811,37812]"/>
  <match src="): ) [93395,93396]" dest="): ) [76748,76749]"/>
  <match src="identifier: self [8230,8234]" dest="identifier: self [8230,8234]"/>
  <match src="identifier: msg [86602,86605]" dest="identifier: msg [81094,81097]"/>
  <match src=",: , [32093,32094]" dest=",: , [48571,48572]"/>
  <match src="{: { [98268,98269]" dest="{: { [34273,34274]"/>
  <match src="primitive_type [90899,90903]" dest="primitive_type [29326,29330]"/>
  <match src="): ) [100343,100344]" dest="): ) [36348,36349]"/>
  <match src="(: ( [6724,6725]" dest="(: ( [6724,6725]"/>
  <match src=".: . [48368,48369]" dest=".: . [16949,16950]"/>
  <match src="): ) [111567,111568]" dest="): ) [56998,56999]"/>
  <match src="}: } [1129,1130]" dest="}: } [1129,1130]"/>
  <match src="}: } [108528,108529]" dest="}: } [44533,44534]"/>
  <match src="for: for [16637,16640]" dest="for: for [60954,60957]"/>
  <match src="returns: returns [95783,95790]" dest="returns: returns [31788,31795]"/>
  <match src="identifier: POOL_EXIT_LOCKUP_EPOCHS [47846,47869]" dest="identifier: POOL_EXIT_LOCKUP_EPOCHS [16427,16450]"/>
  <match src="function_definition [108411,108526]" dest="function_definition [44416,44531]"/>
  <match src="bytes32: bytes32 [30472,30479]" dest="bytes32: bytes32 [46950,46957]"/>
  <match src="call_expression [30183,30209]" dest="call_expression [46661,46687]"/>
  <match src="contract_body [91530,91561]" dest="contract_body [29957,29988]"/>
  <match src=".: . [103871,103872]" dest=".: . [39876,39877]"/>
  <match src="{: { [85729,85730]" dest="{: { [80203,80204]"/>
  <match src="update_expression [35098,35101]" dest="update_expression [51576,51579]"/>
  <match src="): ) [32092,32093]" dest="): ) [48570,48571]"/>
  <match src="expression_statement [85242,85286]" dest="expression_statement [73017,73061]"/>
  <match src="identifier: self [10137,10141]" dest="identifier: self [10137,10141]"/>
  <match src="type_cast_expression [32628,33119]" dest="type_cast_expression [49106,49597]"/>
  <match src="function_body [11179,11299]" dest="function_body [11179,11299]"/>
  <match src="(: ( [36937,36938]" dest="(: ( [53415,53416]"/>
  <match src="number_literal: 10 [45043,45045]" dest="number_literal: 10 [13624,13626]"/>
  <match src="): ) [56066,56067]" dest="): ) [22158,22159]"/>
  <match src="{: { [10600,10601]" dest="{: { [10600,10601]"/>
  <match src="memory: memory [6893,6899]" dest="memory: memory [6893,6899]"/>
  <match src="call_expression [86477,86547]" dest="call_expression [63856,63897]"/>
  <match src="visibility [30553,30561]" dest="visibility [47031,47039]"/>
  <match src="state_mutability [10167,10171]" dest="state_mutability [10167,10171]"/>
  <match src="identifier: length [35891,35897]" dest="identifier: length [52369,52375]"/>
  <match src="address: address [81240,81247]" dest="address: address [60074,60081]"/>
  <match src="call_argument [24275,24282]" dest="call_argument [56783,56790]"/>
  <match src="}: } [48405,48406]" dest="}: } [16986,16987]"/>
  <match src="block_statement [36159,36492]" dest="block_statement [52637,52970]"/>
  <match src=".: . [64808,64809]" dest=".: . [27597,27598]"/>
  <match src="identifier: _state [105266,105272]" dest="identifier: _state [41271,41277]"/>
  <match src="): ) [38593,38594]" dest="): ) [55071,55072]"/>
  <match src="call_expression [3345,3384]" dest="call_expression [3345,3384]"/>
  <match src="parameter [48322,48341]" dest="parameter [16903,16922]"/>
  <match src="uint256: uint256 [72530,72537]" dest="uint256: uint256 [66028,66035]"/>
  <match src="%: % [5528,5529]" dest="%: % [5528,5529]"/>
  <match src="number_literal: 1 [35255,35256]" dest="number_literal: 1 [51733,51734]"/>
  <match src="parameter [37549,37562]" dest="parameter [54027,54040]"/>
  <match src="type_name [10330,10334]" dest="type_name [10330,10334]"/>
  <match src="type_name [37161,37168]" dest="type_name [53639,53646]"/>
  <match src="revert_statement [31276,31652]" dest="revert_statement [47754,48130]"/>
  <match src="expression_statement [103303,103377]" dest="expression_statement [39308,39382]"/>
  <match src=",: , [9002,9003]" dest=",: , [9002,9003]"/>
  <match src="bytes32: bytes32 [66492,66499]" dest="bytes32: bytes32 [60974,60981]"/>
  <match src="identifier: _state [97717,97723]" dest="identifier: _state [33722,33728]"/>
  <match src="uint256: uint256 [90758,90765]" dest="uint256: uint256 [29185,29192]"/>
  <match src="function_body [97386,97624]" dest="function_body [33391,33629]"/>
  <match src="*: * [2693,2694]" dest="*: * [2693,2694]"/>
  <match src="member_expression [106729,106751]" dest="member_expression [42734,42756]"/>
  <match src="type_name [100050,100057]" dest="type_name [36055,36062]"/>
  <match src="constant: constant [29057,29065]" dest="constant: constant [45535,45543]"/>
  <match src="visibility [10158,10166]" dest="visibility [10158,10166]"/>
  <match src="type_name [55846,55850]" dest="type_name [21938,21942]"/>
  <match src="(: ( [86444,86445]" dest="(: ( [63346,63347]"/>
  <match src="user_defined_type [109269,109276]" dest="user_defined_type [69045,69052]"/>
  <match src="uint256: uint256 [47579,47586]" dest="uint256: uint256 [16160,16167]"/>
  <match src="parameter [9427,9443]" dest="parameter [9427,9443]"/>
  <match src="visibility [10686,10694]" dest="visibility [10686,10694]"/>
  <match src="+: + [1041,1042]" dest="+: + [1041,1042]"/>
  <match src="=: = [105360,105361]" dest="=: = [41365,41366]"/>
  <match src="address: address [108432,108439]" dest="address: address [44437,44444]"/>
  <match src="identifier: epoch [106132,106137]" dest="identifier: epoch [42137,42142]"/>
  <match src="(: ( [83357,83358]" dest="(: ( [71393,71394]"/>
  <match src="identifier: epochTimeWithStrategy [98368,98389]" dest="identifier: epochTimeWithStrategy [34373,34394]"/>
  <match src="identifier: stringifyTruncated [31456,31474]" dest="identifier: stringifyTruncated [47934,47952]"/>
  <match src="comment: // return ASCII letter (a-f) [38741,38769]" dest="comment: // return ASCII letter (a-f) [55219,55247]"/>
  <match src="primitive_type [97938,97945]" dest="primitive_type [33943,33950]"/>
  <match src="call_argument [9807,9814]" dest="call_argument [9807,9814]"/>
  <match src="function_definition [97072,97306]" dest="function_definition [33077,33311]"/>
  <match src="function_body [100511,100584]" dest="function_body [36516,36589]"/>
  <match src="(: ( [9905,9906]" dest="(: ( [9905,9906]"/>
  <match src=",: , [27408,27409]" dest=",: , [72697,72698]"/>
  <match src="}: } [47990,47991]" dest="}: } [16571,16572]"/>
  <match src="identifier: equals [9843,9849]" dest="identifier: equals [9843,9849]"/>
  <match src="primitive_type [103788,103794]" dest="primitive_type [39793,39799]"/>
  <match src="type_name [90088,90095]" dest="type_name [28515,28522]"/>
  <match src="type_name [69223,69235]" dest="type_name [67992,68004]"/>
  <match src="identifier: _state [106102,106108]" dest="identifier: _state [42107,42113]"/>
  <match src="primitive_type [55403,55410]" dest="primitive_type [21495,21502]"/>
  <match src="type_name [69583,69595]" dest="type_name [68025,68037]"/>
  <match src="call_expression [67280,67402]" dest="call_expression [81697,81827]"/>
  <match src="primitive_type [53088,53095]" dest="primitive_type [56186,56193]"/>
  <match src="uint256: uint256 [1418,1425]" dest="uint256: uint256 [1418,1425]"/>
  <match src="identifier: outstanding [104834,104845]" dest="identifier: outstanding [40839,40850]"/>
  <match src="member_expression [104936,104962]" dest="member_expression [40941,40967]"/>
  <match src="struct: struct [90734,90740]" dest="struct: struct [29161,29167]"/>
  <match src="identifier: staged [104210,104216]" dest="identifier: staged [40215,40221]"/>
  <match src="bytes32: bytes32 [92674,92681]" dest="bytes32: bytes32 [76027,76034]"/>
  <match src="binary_expression [37461,37467]" dest="binary_expression [53939,53945]"/>
  <match src="visibility [45509,45516]" dest="visibility [14090,14097]"/>
  <match src="uint256: uint256 [16677,16684]" dest="uint256: uint256 [18313,18320]"/>
  <match src="identifier: compareTo [10499,10508]" dest="identifier: compareTo [10499,10508]"/>
  <match src="internal: internal [7007,7015]" dest="internal: internal [7007,7015]"/>
  <match src="visibility [48701,48709]" dest="visibility [17282,17290]"/>
  <match src="state_mutability [56102,56106]" dest="state_mutability [22194,22198]"/>
  <match src="parameter [109676,109691]" dest="parameter [69452,69467]"/>
  <match src="parameter [47291,47310]" dest="parameter [15872,15891]"/>
  <match src="primitive_type [44390,44397]" dest="primitive_type [12971,12978]"/>
  <match src="identifier: outstandingCouponsForEpoch [106781,106807]" dest="identifier: outstandingCouponsForEpoch [42786,42812]"/>
  <match src=".: . [9364,9365]" dest=".: . [9364,9365]"/>
  <match src="state_mutability [95556,95560]" dest="state_mutability [31561,31565]"/>
  <match src="): ) [106263,106264]" dest="): ) [42268,42269]"/>
  <match src="parameter [51986,52000]" dest="parameter [26621,26635]"/>
  <match src="(: ( [102789,102790]" dest="(: ( [38794,38795]"/>
  <match src=",: , [8043,8044]" dest=",: , [8043,8044]"/>
  <match src="identifier: candidate [108122,108131]" dest="identifier: candidate [44127,44136]"/>
  <match src="state_mutability [96711,96715]" dest="state_mutability [32716,32720]"/>
  <match src=".: . [97579,97580]" dest=".: . [33584,33585]"/>
  <match src="return_type_definition [45900,45930]" dest="return_type_definition [14481,14511]"/>
  <match src="parameter [50313,50326]" dest="parameter [72345,72358]"/>
  <match src="member_expression [96028,96049]" dest="member_expression [32033,32054]"/>
  <match src="returns: returns [97361,97368]" dest="returns: returns [33366,33373]"/>
  <match src="function_definition [55195,55279]" dest="function_definition [21287,21371]"/>
  <match src="): ) [93438,93439]" dest="): ) [76791,76792]"/>
  <match src="yul_assignment [89181,89209]" dest="yul_assignment [74848,74876]"/>
  <match src="): ) [85685,85686]" dest="): ) [80192,80193]"/>
  <match src="(: ( [20863,20864]" dest="(: ( [64508,64509]"/>
  <match src="{: { [9912,9913]" dest="{: { [9912,9913]"/>
  <match src="): ) [33118,33119]" dest="): ) [49596,49597]"/>
  <match src="call_expression [7503,7547]" dest="call_expression [7503,7547]"/>
  <match src="primitive_type [56560,56567]" dest="primitive_type [22652,22659]"/>
  <match src="{: { [93707,93708]" dest="{: { [77060,77061]"/>
  <match src="call_expression [32657,33100]" dest="call_expression [49135,49578]"/>
  <match src="identifier: temp [8689,8693]" dest="identifier: temp [8689,8693]"/>
  <match src="): ) [106197,106198]" dest="): ) [42202,42203]"/>
  <match src="visibility [98486,98493]" dest="visibility [34491,34498]"/>
  <match src="identifier: value [6931,6936]" dest="identifier: value [6931,6936]"/>
  <match src="): ) [108131,108132]" dest="): ) [44136,44137]"/>
  <match src="uint: uint [54559,54563]" dest="uint: uint [20651,20655]"/>
  <match src="string [1071,1100]" dest="string [1071,1100]"/>
  <match src="call_argument [38411,38428]" dest="call_argument [54889,54906]"/>
  <match src="{: { [46414,46415]" dest="{: { [14995,14996]"/>
  <match src="): ) [1470,1471]" dest="): ) [1470,1471]"/>
  <match src="identifier: a [7153,7154]" dest="identifier: a [7153,7154]"/>
  <match src=",: , [23038,23039]" dest=",: , [64092,64093]"/>
  <match src=".: . [100421,100422]" dest=".: . [36426,36427]"/>
  <match src="identifier: accounts [104750,104758]" dest="identifier: accounts [40755,40763]"/>
  <match src=".: . [104157,104158]" dest=".: . [40162,40163]"/>
  <match src="returns: returns [48610,48617]" dest="returns: returns [17191,17198]"/>
  <match src="(: ( [98638,98639]" dest="(: ( [34643,34644]"/>
  <match src="type_name [16790,16797]" dest="type_name [83094,83101]"/>
  <match src="call_expression [48361,48398]" dest="call_expression [16942,16979]"/>
  <match src="type_name [11165,11172]" dest="type_name [11165,11172]"/>
  <match src="): ) [12848,12849]" dest="): ) [23375,23376]"/>
  <match src="type_name [10006,10010]" dest="type_name [10006,10010]"/>
  <match src="identifier: account [95356,95363]" dest="identifier: account [31361,31368]"/>
  <match src="identifier: _state [104517,104523]" dest="identifier: _state [40522,40528]"/>
  <match src="type_name [44305,44312]" dest="type_name [12886,12893]"/>
  <match src="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [65733,66391]" dest="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [30030,30688]"/>
  <match src="primitive_type [97115,97122]" dest="primitive_type [33120,33127]"/>
  <match src="pure: pure [37588,37592]" dest="pure: pure [54066,54070]"/>
  <match src="string [1500,1532]" dest="string [1500,1532]"/>
  <match src="(: ( [100461,100462]" dest="(: ( [36466,36467]"/>
  <match src="primitive_type [30497,30504]" dest="primitive_type [46975,46982]"/>
  <match src="binary_expression [38269,38286]" dest="binary_expression [54747,54764]"/>
  <match src="identifier: implementation [92968,92982]" dest="identifier: implementation [76321,76335]"/>
  <match src="identifier: decrementTotalRedeemable [103220,103244]" dest="identifier: decrementTotalRedeemable [39225,39249]"/>
  <match src="function_definition [100031,100160]" dest="function_definition [36036,36165]"/>
  <match src="array_access [100117,100145]" dest="array_access [36122,36150]"/>
  <match src="primitive_type [23028,23035]" dest="primitive_type [64082,64089]"/>
  <match src="parameter [12841,12848]" dest="parameter [23368,23375]"/>
  <match src="function_definition [104598,104978]" dest="function_definition [40603,40983]"/>
  <match src="memory: memory [35679,35685]" dest="memory: memory [52157,52163]"/>
  <match src="uint256: uint256 [44530,44537]" dest="uint256: uint256 [13111,13118]"/>
  <match src="uint256: uint256 [84787,84794]" dest="uint256: uint256 [72847,72854]"/>
  <match src="event_paramater [83076,83089]" dest="event_paramater [70880,70893]"/>
  <match src="identifier: sub [96594,96597]" dest="identifier: sub [32599,32602]"/>
  <match src="(: ( [99281,99282]" dest="(: ( [35286,35287]"/>
  <match src="parameter [98874,98881]" dest="parameter [34879,34886]"/>
  <match src="identifier: staged [90096,90102]" dest="identifier: staged [28523,28529]"/>
  <match src="identifier: debt [102781,102785]" dest="identifier: debt [38786,38790]"/>
  <match src="type_name [95115,95121]" dest="type_name [31120,31126]"/>
  <match src="(: ( [105990,105991]" dest="(: ( [41995,41996]"/>
  <match src="modifier_definition [109372,109584]" dest="modifier_definition [69148,69360]"/>
  <match src="return: return [47716,47722]" dest="return: return [16297,16303]"/>
  <match src="view: view [55019,55023]" dest="view: view [21111,21115]"/>
  <match src="parameter [30449,30461]" dest="parameter [46927,46939]"/>
  <match src="event_paramater [55689,55711]" dest="event_paramater [21781,21803]"/>
  <match src="variable_declaration [86319,86347]" dest="variable_declaration [61851,61874]"/>
  <match src="identifier: account [97733,97740]" dest="identifier: account [33738,33745]"/>
  <match src="}: } [108525,108526]" dest="}: } [44530,44531]"/>
  <match src="identifier: start [90766,90771]" dest="identifier: start [29193,29198]"/>
  <match src="identifier: that [29385,29389]" dest="identifier: that [45863,45867]"/>
  <match src=",: , [107725,107726]" dest=",: , [43730,43731]"/>
  <match src="call_argument [32199,32204]" dest="call_argument [48677,48682]"/>
  <match src="call_argument [81104,81116]" dest="call_argument [63359,63371]"/>
  <match src="member_expression [107053,107088]" dest="member_expression [43058,43093]"/>
  <match src="type_name [30497,30504]" dest="type_name [46975,46982]"/>
  <match src="call_argument [26339,26372]" dest="call_argument [78901,78930]"/>
  <match src="): ) [32535,32536]" dest="): ) [49013,49014]"/>
  <match src="): ) [36953,36954]" dest="): ) [53431,53432]"/>
  <match src="primitive_type [93860,93867]" dest="primitive_type [77213,77220]"/>
  <match src="identifier: setup [64745,64750]" dest="identifier: setup [27534,27539]"/>
  <match src="call_argument [96598,96609]" dest="call_argument [32603,32614]"/>
  <match src="[: [ [104470,104471]" dest="[: [ [40475,40476]"/>
  <match src="): ) [32171,32172]" dest="): ) [48649,48650]"/>
  <match src="binary_expression [11266,11283]" dest="binary_expression [11266,11283]"/>
  <match src="call_expression [102462,102495]" dest="call_expression [38467,38500]"/>
  <match src="function_definition [33161,33737]" dest="function_definition [49639,50215]"/>
  <match src="visibility [99450,99456]" dest="visibility [35455,35461]"/>
  <match src="private: private [93699,93706]" dest="private: private [77052,77059]"/>
  <match src="identifier: value [10741,10746]" dest="identifier: value [10741,10746]"/>
  <match src="function_definition [98703,98802]" dest="function_definition [34708,34807]"/>
  <match src="identifier: recipient [21109,21118]" dest="identifier: recipient [64975,64984]"/>
  <match src="visibility [95667,95673]" dest="visibility [31672,31678]"/>
  <match src=",: , [107509,107510]" dest=",: , [43514,43515]"/>
  <match src="identifier: abi [30668,30671]" dest="identifier: abi [47146,47149]"/>
  <match src="identifier: D256 [9850,9854]" dest="identifier: D256 [9850,9854]"/>
  <match src="]: ] [104824,104825]" dest="]: ] [40829,40830]"/>
  <match src="function: function [20664,20672]" dest="function: function [64280,64288]"/>
  <match src="): ) [33463,33464]" dest="): ) [49941,49942]"/>
  <match src="[: [ [95355,95356]" dest="[: [ [31360,31361]"/>
  <match src="identifier: _state [105874,105880]" dest="identifier: _state [41879,41885]"/>
  <match src="call_argument [32879,32887]" dest="call_argument [49357,49365]"/>
  <match src="type_name [95432,95439]" dest="type_name [31437,31444]"/>
  <match src="return: return [1114,1120]" dest="return: return [1114,1120]"/>
  <match src="{: { [2388,2389]" dest="{: { [2388,2389]"/>
  <match src="type_name [107169,107183]" dest="type_name [43174,43188]"/>
  <match src="sload: sload [101023,101028]" dest="sload: sload [37028,37033]"/>
  <match src="identifier: sender [85328,85334]" dest="identifier: sender [63413,63419]"/>
  <match src="identifier: greaterThan [9976,9987]" dest="identifier: greaterThan [9976,9987]"/>
  <match src="call_argument [20969,21009]" dest="call_argument [57056,57100]"/>
  <match src="assignment_expression [105874,106006]" dest="assignment_expression [41879,42011]"/>
  <match src=".: . [95730,95731]" dest=".: . [31735,31736]"/>
  <match src="call_argument [20961,20967]" dest="call_argument [57048,57054]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [4275,4718]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [4275,4718]"/>
  <match src="identifier: length [36142,36148]" dest="identifier: length [52620,52626]"/>
  <match src="(: ( [86502,86503]" dest="(: ( [63871,63872]"/>
  <match src="binary_expression [37319,37325]" dest="binary_expression [53797,53803]"/>
  <match src="): ) [7051,7052]" dest="): ) [7051,7052]"/>
  <match src="primitive_type [82801,82808]" dest="primitive_type [70737,70744]"/>
  <match src="type_name [80653,80660]" dest="type_name [62897,62904]"/>
  <match src="}: } [35447,35448]" dest="}: } [51925,51926]"/>
  <match src="binary_expression [35868,35874]" dest="binary_expression [52346,52352]"/>
  <match src="}: } [95379,95380]" dest="}: } [31384,31385]"/>
  <match src="identifier: account [82936,82943]" dest="identifier: account [83195,83202]"/>
  <match src="primitive_type [84787,84794]" dest="primitive_type [72847,72854]"/>
  <match src="address: address [55923,55930]" dest="address: address [22015,22022]"/>
  <match src="member_expression [85169,85201]" dest="member_expression [72460,72502]"/>
  <match src="primitive_type [10904,10911]" dest="primitive_type [10904,10911]"/>
  <match src="type_name [7385,7389]" dest="type_name [7385,7389]"/>
  <match src="identifier: staged [104446,104452]" dest="identifier: staged [40451,40457]"/>
  <match src="identifier: sender [83288,83294]" dest="identifier: sender [78616,78622]"/>
  <match src="constant: constant [44265,44273]" dest="constant: constant [12846,12854]"/>
  <match src="primitive_type [55966,55973]" dest="primitive_type [22058,22065]"/>
  <match src="}: } [95067,95068]" dest="}: } [31072,31073]"/>
  <match src="(: ( [7738,7739]" dest="(: ( [7738,7739]"/>
  <match src="type_name [35836,35843]" dest="type_name [52314,52321]"/>
  <match src=".: . [96593,96594]" dest=".: . [32598,32599]"/>
  <match src="uint256: uint256 [86319,86326]" dest="uint256: uint256 [61851,61858]"/>
  <match src="): ) [84234,84235]" dest="): ) [66679,66680]"/>
  <match src="visibility [45665,45673]" dest="visibility [14246,14254]"/>
  <match src="primitive_type [56480,56484]" dest="primitive_type [22572,22576]"/>
  <match src="function_definition [56860,56907]" dest="function_definition [22952,22999]"/>
  <match src="state_mutability [100076,100080]" dest="state_mutability [36081,36085]"/>
  <match src="type_name [16752,16759]" dest="type_name [18343,18350]"/>
  <match src="): ) [38084,38085]" dest="): ) [54562,54563]"/>
  <match src="return_statement [96965,96974]" dest="return_statement [32970,32979]"/>
  <match src="struct_member [91267,91286]" dest="struct_member [29694,29713]"/>
  <match src="expression_statement [106998,107043]" dest="expression_statement [43003,43048]"/>
  <match src="(: ( [56146,56147]" dest="(: ( [22238,22239]"/>
  <match src="binary_expression [34942,34947]" dest="binary_expression [51420,51425]"/>
  <match src="uint256: uint256 [45140,45147]" dest="uint256: uint256 [13721,13728]"/>
  <match src="(: ( [85752,85753]" dest="(: ( [81208,81209]"/>
  <match src="function: function [102511,102519]" dest="function: function [38516,38524]"/>
  <match src="(: ( [1462,1463]" dest="(: ( [1462,1463]"/>
  <match src="visibility [984,992]" dest="visibility [984,992]"/>
  <match src="identifier: lessUsdc [83196,83204]" dest="identifier: amount [83212,83218]"/>
  <match src=",: , [1911,1912]" dest=",: , [1911,1912]"/>
  <match src="): ) [30287,30288]" dest="): ) [46765,46766]"/>
  <match src="identifier: candidate [108249,108258]" dest="identifier: candidate [44254,44263]"/>
  <match src="array_access [106998,107026]" dest="array_access [43003,43031]"/>
  <match src="=: = [44573,44574]" dest="=: = [13154,13155]"/>
  <match src="external: external [55165,55173]" dest="external: external [21257,21265]"/>
  <match src=",: , [69280,69281]" dest=",: , [67079,67080]"/>
  <match src="(: ( [33349,33350]" dest="(: ( [49827,49828]"/>
  <match src="contract: contract [90930,90938]" dest="contract: contract [29357,29365]"/>
  <match src="identifier: ASCII_LOWER_EX [36938,36952]" dest="identifier: ASCII_LOWER_EX [53416,53430]"/>
  <match src="identifier: LPAREN [32120,32126]" dest="identifier: LPAREN [48598,48604]"/>
  <match src="(: ( [84298,84299]" dest="(: ( [71937,71938]"/>
  <match src=",: , [34298,34299]" dest=",: , [50776,50777]"/>
  <match src="): ) [36407,36408]" dest="): ) [52885,52886]"/>
  <match src=",: , [107655,107656]" dest=",: , [43660,43661]"/>
  <match src="return_type_definition [9897,9911]" dest="return_type_definition [9897,9911]"/>
  <match src="member_expression [84059,84069]" dest="member_expression [81885,81895]"/>
  <match src="identifier: a [11095,11096]" dest="identifier: a [11095,11096]"/>
  <match src="identifier: EpochStrategy [44097,44110]" dest="identifier: EpochStrategy [12678,12691]"/>
  <match src="visibility [44843,44850]" dest="visibility [13424,13431]"/>
  <match src="call_expression [83875,83883]" dest="call_expression [71605,71613]"/>
  <match src="parameter [100326,100343]" dest="parameter [36331,36348]"/>
  <match src="(: ( [102222,102223]" dest="(: ( [38227,38228]"/>
  <match src="return_type_definition [54810,54825]" dest="return_type_definition [20902,20917]"/>
  <match src="identifier: ASCII_LOWER_EX [29066,29080]" dest="identifier: ASCII_LOWER_EX [45544,45558]"/>
  <match src="return_statement [47839,47870]" dest="return_statement [16420,16451]"/>
  <match src="address: address [56880,56887]" dest="address: address [22972,22979]"/>
  <match src=".: . [102927,102928]" dest=".: . [38932,38933]"/>
  <match src="uint256: uint256 [44457,44464]" dest="uint256: uint256 [13038,13045]"/>
  <match src="identifier: Sync [55961,55965]" dest="identifier: Sync [22053,22057]"/>
  <match src="identifier: D256 [69591,69595]" dest="identifier: D256 [68033,68037]"/>
  <match src="(: ( [47174,47175]" dest="(: ( [15755,15756]"/>
  <match src="identifier: payloadB [32241,32249]" dest="identifier: payloadB [48719,48727]"/>
  <match src="identifier: msg [83893,83896]" dest="identifier: msg [71623,71626]"/>
  <match src="struct_member [44122,44137]" dest="struct_member [12703,12718]"/>
  <match src="assignment_expression [103599,103656]" dest="assignment_expression [39604,39661]"/>
  <match src="bytes32: bytes32 [33837,33844]" dest="bytes32: bytes32 [50315,50322]"/>
  <match src=".: . [107388,107389]" dest=".: . [43393,43394]"/>
  <match src="(: ( [97400,97401]" dest="(: ( [33405,33406]"/>
  <match src="): ) [86406,86407]" dest="): ) [73005,73006]"/>
  <match src="return_statement [98011,98067]" dest="return_statement [34016,34072]"/>
  <match src="return_type_definition [97361,97385]" dest="return_type_definition [33366,33390]"/>
  <match src="type_name [1891,1898]" dest="type_name [1891,1898]"/>
  <match src="binary_expression [10354,10376]" dest="binary_expression [10354,10376]"/>
  <match src="function: function [1405,1413]" dest="function: function [1405,1413]"/>
  <match src="call_argument [103361,103367]" dest="call_argument [39366,39372]"/>
  <match src="uint256: uint256 [47939,47946]" dest="uint256: uint256 [16520,16527]"/>
  <match src="identifier: stringifyTruncated [31984,32002]" dest="identifier: stringifyTruncated [48462,48480]"/>
  <match src="identifier: coupons [104926,104933]" dest="identifier: coupons [40931,40938]"/>
  <match src="parameter [55081,55091]" dest="parameter [21173,21183]"/>
  <match src="return_statement [2776,2785]" dest="return_statement [2776,2785]"/>
  <match src="identifier: Global [90332,90338]" dest="identifier: Global [28759,28765]"/>
  <match src="address: address [55434,55441]" dest="address: address [21526,21533]"/>
  <match src="=&gt;: =&gt; [91421,91423]" dest="=&gt;: =&gt; [29848,29850]"/>
  <match src="(: ( [70319,70320]" dest="(: ( [62724,62725]"/>
  <match src="identifier: to [55939,55941]" dest="identifier: to [22031,22033]"/>
  <match src="internal: internal [9039,9047]" dest="internal: internal [9039,9047]"/>
  <match src="): ) [48025,48026]" dest="): ) [16606,16607]"/>
  <match src="primitive_type [38589,38593]" dest="primitive_type [55067,55071]"/>
  <match src="parameter [8986,9002]" dest="parameter [8986,9002]"/>
  <match src="user_defined_type [9187,9191]" dest="user_defined_type [9187,9191]"/>
  <match src="type_name [90204,90211]" dest="type_name [28631,28638]"/>
  <match src="internal: internal [105854,105862]" dest="internal: internal [41859,41867]"/>
  <match src="type_name [9427,9431]" dest="type_name [9427,9431]"/>
  <match src=".: . [91429,91430]" dest=".: . [29856,29857]"/>
  <match src="=: = [45543,45544]" dest="=: = [14124,14125]"/>
  <match src="}: } [104055,104056]" dest="}: } [40060,40061]"/>
  <match src="type_name [20699,20706]" dest="type_name [64321,64328]"/>
  <match src="return_statement [10347,10377]" dest="return_statement [10347,10377]"/>
  <match src="identifier: _state [100677,100683]" dest="identifier: _state [36682,36688]"/>
  <match src="uint256: uint256 [101832,101839]" dest="uint256: uint256 [37837,37844]"/>
  <match src="return_statement [47155,47215]" dest="return_statement [15736,15796]"/>
  <match src="identifier: value [83780,83785]" dest="identifier: value [71774,71779]"/>
  <match src="call_expression [109731,109748]" dest="call_expression [69507,69524]"/>
  <match src="address: address [82920,82927]" dest="address: address [83179,83186]"/>
  <match src="private: private [36586,36593]" dest="private: private [53064,53071]"/>
  <match src="parameter [47939,47946]" dest="parameter [16520,16527]"/>
  <match src="uint256: uint256 [12997,13004]" dest="uint256: uint256 [23524,23531]"/>
  <match src="): ) [20781,20782]" dest="): ) [64418,64419]"/>
  <match src="call_expression [53382,53413]" dest="call_expression [64762,64798]"/>
  <match src="&gt;: &gt; [97438,97439]" dest="&gt;: &gt; [33443,33444]"/>
  <match src="identifier: candidate [107900,107909]" dest="identifier: candidate [43905,43914]"/>
  <match src="identifier: D256 [69231,69235]" dest="identifier: D256 [68000,68004]"/>
  <match src="type_name [104379,104385]" dest="type_name [40384,40390]"/>
  <match src="identifier: D256 [7076,7080]" dest="identifier: D256 [7076,7080]"/>
  <match src="&gt;&gt;: &gt;&gt; [37321,37323]" dest="&gt;&gt;: &gt;&gt; [53799,53801]"/>
  <match src="struct_member [90515,90534]" dest="struct_member [28942,28961]"/>
  <match src="array_access [98018,98040]" dest="array_access [34023,34045]"/>
  <match src="{: { [66446,66447]" dest="{: { [65765,65766]"/>
  <match src="type_name [95313,95320]" dest="type_name [31318,31325]"/>
  <match src="(: ( [7531,7532]" dest="(: ( [7531,7532]"/>
  <match src="call_argument [82614,82624]" dest="call_argument [63760,63770]"/>
  <match src="comment: // 50 SPAD [44886,44896]" dest="comment: // 50 SPAD [13467,13477]"/>
  <match src="contract_body [12714,15332]" dest="contract_body [23241,25859]"/>
  <match src="primitive_type [82977,82984]" dest="primitive_type [70954,70961]"/>
  <match src="type_name [67744,67756]" dest="type_name [19879,19891]"/>
  <match src="call_expression [83588,83623]" dest="call_expression [72076,72115]"/>
  <match src="identifier: amount [107649,107655]" dest="identifier: amount [43654,43660]"/>
  <match src="): ) [4845,4846]" dest="): ) [4845,4846]"/>
  <match src="address: address [105438,105445]" dest="address: address [41443,41450]"/>
  <match src="identifier: amount [77741,77747]" dest="identifier: amount [56963,56969]"/>
  <match src="]: ] [36877,36878]" dest="]: ] [53355,53356]"/>
  <match src="=: = [108005,108006]" dest="=: = [44010,44011]"/>
  <match src=",: , [32250,32251]" dest=",: , [48728,48729]"/>
  <match src="pure: pure [47277,47281]" dest="pure: pure [15858,15862]"/>
  <match src="type_name [10709,10716]" dest="type_name [10709,10716]"/>
  <match src="(: ( [86156,86157]" dest="(: ( [62128,62129]"/>
  <match src="return: return [10198,10204]" dest="return: return [10198,10204]"/>
  <match src="primitive_type [11165,11172]" dest="primitive_type [11165,11172]"/>
  <match src="address: address [103755,103762]" dest="address: address [39760,39767]"/>
  <match src="member_expression [83478,83488]" dest="member_expression [71487,71497]"/>
  <match src="address: address [32459,32466]" dest="address: address [48937,48944]"/>
  <match src="type_name [90399,90406]" dest="type_name [28826,28833]"/>
  <match src="state_mutability [58137,58141]" dest="state_mutability [18655,18659]"/>
  <match src="bytes: bytes [37607,37612]" dest="bytes: bytes [54085,54090]"/>
  <match src="assignment_expression [103303,103376]" dest="assignment_expression [39308,39381]"/>
  <match src="type_name [29277,29284]" dest="type_name [45755,45762]"/>
  <match src="identifier: reason [30480,30486]" dest="identifier: reason [46958,46964]"/>
  <match src=",: , [2725,2726]" dest=",: , [2725,2726]"/>
  <match src="(: ( [82861,82862]" dest="(: ( [70797,70798]"/>
  <match src="returns: returns [9504,9511]" dest="returns: returns [9504,9511]"/>
  <match src="identifier: value [101913,101918]" dest="identifier: value [37918,37923]"/>
  <match src="(: ( [96577,96578]" dest="(: ( [32582,32583]"/>
  <match src="identifier: add [104217,104220]" dest="identifier: add [40222,40225]"/>
  <match src="): ) [6944,6945]" dest="): ) [6944,6945]"/>
  <match src="identifier: that [87354,87358]" dest="identifier: that [79146,79150]"/>
  <match src="[: [ [107227,107228]" dest="[: [ [43232,43233]"/>
  <match src="(: ( [55471,55472]" dest="(: ( [21563,21564]"/>
  <match src="type_name [7467,7471]" dest="type_name [7467,7471]"/>
  <match src="for: for [66467,66470]" dest="for: for [65819,65822]"/>
  <match src="): ) [56417,56418]" dest="): ) [22509,22510]"/>
  <match src="is: is [109266,109268]" dest="is: is [69042,69044]"/>
  <match src="identifier: outstanding [105252,105263]" dest="identifier: outstanding [41257,41268]"/>
  <match src="): ) [98550,98551]" dest="): ) [34555,34556]"/>
  <match src="primitive_type [100228,100235]" dest="primitive_type [36233,36240]"/>
  <match src="member_expression [9137,9144]" dest="member_expression [9137,9144]"/>
  <match src="identifier: balance [102469,102476]" dest="identifier: balance [38474,38481]"/>
  <match src="function_body [9912,9959]" dest="function_body [9912,9959]"/>
  <match src="): ) [14396,14397]" dest="): ) [24923,24924]"/>
  <match src="function_definition [56492,56538]" dest="function_definition [22584,22630]"/>
  <match src="type_name [10292,10296]" dest="type_name [10292,10296]"/>
  <match src="function: function [47761,47769]" dest="function: function [16342,16350]"/>
  <match src="(: ( [26873,26874]" dest="(: ( [79707,79708]"/>
  <match src="identifier: self [10078,10082]" dest="identifier: self [10078,10082]"/>
  <match src="using: using [6440,6445]" dest="using: using [6440,6445]"/>
  <match src="primitive_type [51986,51993]" dest="primitive_type [26621,26628]"/>
  <match src="event_definition [53774,53860]" dest="event_definition [61378,61479]"/>
  <match src="identifier: name [94979,94983]" dest="identifier: name [30984,30988]"/>
  <match src="identifier: Storage [91537,91544]" dest="identifier: Storage [29964,29971]"/>
  <match src="identifier: c [4258,4259]" dest="identifier: c [4258,4259]"/>
  <match src="(: ( [107707,107708]" dest="(: ( [43712,43713]"/>
  <match src="call_expression [83634,83714]" dest="call_expression [71652,71735]"/>
  <match src="): ) [102999,103000]" dest="): ) [39004,39005]"/>
  <match src="uint256: uint256 [28989,28996]" dest="uint256: uint256 [45467,45474]"/>
  <match src="call_expression [7965,7976]" dest="call_expression [7965,7976]"/>
  <match src="(: ( [84239,84240]" dest="(: ( [66690,66691]"/>
  <match src="type_cast_expression [36932,36953]" dest="type_cast_expression [53410,53431]"/>
  <match src="bytes32: bytes32 [33205,33212]" dest="bytes32: bytes32 [49683,49690]"/>
  <match src="member_expression [9354,9368]" dest="member_expression [9354,9368]"/>
  <match src="(: ( [13614,13615]" dest="(: ( [24141,24142]"/>
  <match src="memory: memory [7045,7051]" dest="memory: memory [7045,7051]"/>
  <match src="identifier: Status [97479,97485]" dest="identifier: Status [33484,33490]"/>
  <match src="view: view [54864,54868]" dest="view: view [20956,20960]"/>
  <match src=".: . [91272,91273]" dest=".: . [29699,29700]"/>
  <match src="identifier: epoch [99135,99140]" dest="identifier: epoch [35140,35145]"/>
  <match src="call_expression [32783,32809]" dest="call_expression [49261,49287]"/>
  <match src="uint8: uint8 [38691,38696]" dest="uint8: uint8 [55169,55174]"/>
  <match src="function_definition [20664,21135]" dest="function_definition [64280,65008]"/>
  <match src=".: . [85710,85711]" dest=".: . [71855,71856]"/>
  <match src="user_defined_type [51958,51964]" dest="user_defined_type [26593,26599]"/>
  <match src="uint256: uint256 [96882,96889]" dest="uint256: uint256 [32887,32894]"/>
  <match src="constant: constant [43572,43580]" dest="constant: constant [12153,12161]"/>
  <match src="return: return [100386,100392]" dest="return: return [36391,36397]"/>
  <match src="call_argument [32802,32808]" dest="call_argument [49280,49286]"/>
  <match src=",: , [34134,34135]" dest=",: , [50612,50613]"/>
  <match src="[: [ [107818,107819]" dest="[: [ [43823,43824]"/>
  <match src="): ) [5466,5467]" dest="): ) [5466,5467]"/>
  <match src="parameter [56532,56536]" dest="parameter [22624,22628]"/>
  <match src="=: = [107254,107255]" dest="=: = [43259,43260]"/>
  <match src="call_argument [83905,83910]" dest="call_argument [71635,71640]"/>
  <match src="function_body [7918,7996]" dest="function_body [7918,7996]"/>
  <match src="identifier: balance [96143,96150]" dest="identifier: balance [32148,32155]"/>
  <match src="type_name [107324,107331]" dest="type_name [43329,43336]"/>
  <match src="identifier: staged [104176,104182]" dest="identifier: staged [40181,40187]"/>
  <match src="identifier: payloadB [32957,32965]" dest="identifier: payloadB [49435,49443]"/>
  <match src=".: . [102758,102759]" dest=".: . [38763,38764]"/>
  <match src="number_literal: 64 [38392,38394]" dest="number_literal: 64 [54870,54872]"/>
  <match src="primitive_type [29913,29920]" dest="primitive_type [46391,46398]"/>
  <match src="primitive_type [16752,16759]" dest="primitive_type [18343,18350]"/>
  <match src="(: ( [38268,38269]" dest="(: ( [54746,54747]"/>
  <match src="function_body [48343,48406]" dest="function_body [16924,16987]"/>
  <match src="identifier: epoch [104862,104867]" dest="identifier: epoch [40867,40872]"/>
  <match src="call_argument [21101,21107]" dest="call_argument [64967,64973]"/>
  <match src="call_expression [86282,86296]" dest="call_expression [80380,80400]"/>
  <match src="member_expression [86602,86612]" dest="member_expression [81094,81104]"/>
  <match src="): ) [104399,104400]" dest="): ) [40404,40405]"/>
  <match src="=: = [108238,108239]" dest="=: = [44243,44244]"/>
  <match src="for: for [37066,37069]" dest="for: for [53544,53547]"/>
  <match src="identifier: sub [105193,105196]" dest="identifier: sub [41198,41201]"/>
  <match src="call_argument [22256,22292]" dest="call_argument [63034,63065]"/>
  <match src="parameter [96109,96116]" dest="parameter [32114,32121]"/>
  <match src="user_defined_type [8585,8589]" dest="user_defined_type [8585,8589]"/>
  <match src="number_literal: 1 [84745,84746]" dest="number_literal: 1 [73268,73269]"/>
  <match src="[: [ [103524,103525]" dest="[: [ [39529,39530]"/>
  <match src="identifier: self [9439,9443]" dest="identifier: self [9439,9443]"/>
  <match src="identifier: _state [97259,97265]" dest="identifier: _state [33264,33270]"/>
  <match src="bool: bool [31118,31122]" dest="bool: bool [47596,47600]"/>
  <match src="identifier: State [90741,90746]" dest="identifier: State [29168,29173]"/>
  <match src="comment: // See https://ethereum.stackexchange.com/a/14016/36603 [88876,88931]" dest="comment: // See https://ethereum.stackexchange.com/a/14016/36603 [74543,74598]"/>
  <match src="(: ( [85323,85324]" dest="(: ( [63408,63409]"/>
  <match src="member_expression [97523,97616]" dest="member_expression [33528,33621]"/>
  <match src="(: ( [111250,111251]" dest="(: ( [56245,56246]"/>
  <match src="returns: returns [54746,54753]" dest="returns: returns [20838,20845]"/>
  <match src="function_definition [106918,107105]" dest="function_definition [42923,43110]"/>
  <match src="string_literal [87263,87275]" dest="string_literal [78721,78738]"/>
  <match src="member_expression [51073,51085]" dest="member_expression [71078,71090]"/>
  <match src="identifier: timestamp [60769,60778]" dest="identifier: timestamp [83558,83567]"/>
  <match src="primitive_type [20856,20863]" dest="primitive_type [64501,64508]"/>
  <match src="identifier: usdcAmount [80872,80882]" dest="identifier: cappedNewDebt [66711,66724]"/>
  <match src="parameter [95275,95290]" dest="parameter [31280,31295]"/>
  <match src="identifier: accounts [97266,97274]" dest="identifier: accounts [33271,33279]"/>
  <match src="identifier: reason [105083,105089]" dest="identifier: reason [41088,41094]"/>
  <match src="state_mutability [5445,5449]" dest="state_mutability [5445,5449]"/>
  <match src="view: view [99588,99592]" dest="view: view [35593,35597]"/>
  <match src="parameter [56590,56604]" dest="parameter [22682,22696]"/>
  <match src=".: . [102940,102941]" dest=".: . [38945,38946]"/>
  <match src="identifier: z [37457,37458]" dest="identifier: z [53935,53936]"/>
  <match src="call_expression [67910,67923]" dest="call_expression [68245,68258]"/>
  <match src="comment: // return ASCII digit (0-9) [38611,38638]" dest="comment: // return ASCII digit (0-9) [55089,55116]"/>
  <match src="identifier: amount0In [55826,55835]" dest="identifier: amount0In [21918,21927]"/>
  <match src="returns: returns [8291,8298]" dest="returns: returns [8291,8298]"/>
  <match src=".: . [86374,86375]" dest=".: . [72968,72969]"/>
  <match src="identifier: r [55578,55579]" dest="identifier: r [21670,21671]"/>
  <match src="call_expression [102921,102960]" dest="call_expression [38926,38965]"/>
  <match src="function: function [103211,103219]" dest="function: function [39216,39224]"/>
  <match src="identifier: _state [105153,105159]" dest="identifier: _state [41158,41164]"/>
  <match src="modifier_invocation [83841,83863]" dest="modifier_invocation [72871,72900]"/>
  <match src="pure: pure [10167,10171]" dest="pure: pure [10167,10171]"/>
  <match src="uint112: uint112 [55966,55973]" dest="uint112: uint112 [22058,22065]"/>
  <match src="call_argument [51035,51049]" dest="call_argument [56843,56887]"/>
  <match src="function_body [105100,105412]" dest="function_body [41105,41417]"/>
  <match src="identifier: amount [103978,103984]" dest="identifier: amount [39983,39989]"/>
  <match src="}: } [44192,44193]" dest="}: } [12773,12774]"/>
  <match src="identifier: b [9880,9881]" dest="identifier: b [9880,9881]"/>
  <match src=".: . [103889,103890]" dest=".: . [39894,39895]"/>
  <match src="visibility [48596,48604]" dest="visibility [17177,17185]"/>
  <match src="call_expression [8145,8179]" dest="call_expression [8145,8179]"/>
  <match src="comment: // take last decimal digit [36326,36352]" dest="comment: // take last decimal digit [52804,52830]"/>
  <match src="identifier: c [1035,1036]" dest="identifier: c [1035,1036]"/>
  <match src="identifier: that [33170,33174]" dest="identifier: that [49648,49652]"/>
  <match src="type_cast_expression [29556,29779]" dest="type_cast_expression [46034,46257]"/>
  <match src="variable_declaration [84185,84217]" dest="variable_declaration [66641,66656]"/>
  <match src=".: . [105960,105961]" dest=".: . [41965,41966]"/>
  <match src="number_literal: 20e16 [44575,44580]" dest="number_literal: 20e16 [13156,13161]"/>
  <match src="parameter [95313,95320]" dest="parameter [31318,31325]"/>
  <match src="memory: memory [105076,105082]" dest="memory: memory [41081,41087]"/>
  <match src="visibility [56205,56213]" dest="visibility [22297,22305]"/>
  <match src="{: { [100935,100936]" dest="{: { [36940,36941]"/>
  <match src="member_expression [104936,104950]" dest="member_expression [40941,40955]"/>
  <match src="function_body [53154,53217]" dest="function_body [56228,56392]"/>
  <match src="uint256: uint256 [35234,35241]" dest="uint256: uint256 [51712,51719]"/>
  <match src="=: = [105264,105265]" dest="=: = [41269,41270]"/>
  <match src="identifier: onlyFrozenOrFluid [109381,109398]" dest="identifier: onlyFrozenOrFluid [69157,69174]"/>
  <match src="uint256: uint256 [107511,107518]" dest="uint256: uint256 [43516,43523]"/>
  <match src="(: ( [93190,93191]" dest="(: ( [76543,76544]"/>
  <match src="parameter [17398,17412]" dest="parameter [59515,59529]"/>
  <match src="call_argument [93785,93846]" dest="call_argument [77138,77199]"/>
  <match src="identifier: _state [98901,98907]" dest="identifier: _state [34906,34912]"/>
  <match src="function: function [99102,99110]" dest="function: function [35107,35115]"/>
  <match src="identifier: Decimal [46562,46569]" dest="identifier: Decimal [15143,15150]"/>
  <match src="number_literal: 0 [37863,37864]" dest="number_literal: 0 [54341,54342]"/>
  <match src="return_type_definition [16919,16936]" dest="return_type_definition [18407,18424]"/>
  <match src="identifier: Global [91273,91279]" dest="identifier: Global [29700,29706]"/>
  <match src="binary_expression [38250,38260]" dest="binary_expression [54728,54738]"/>
  <match src="(: ( [34051,34052]" dest="(: ( [50529,50530]"/>
  <match src="function: function [54714,54722]" dest="function: function [20806,20814]"/>
  <match src="type_name [40298,40305]" dest="type_name [64340,64347]"/>
  <match src="member_expression [107399,107416]" dest="member_expression [43404,43421]"/>
  <match src="identifier: current [98310,98317]" dest="identifier: current [34315,34322]"/>
  <match src=",: , [29432,29433]" dest=",: , [45910,45911]"/>
  <match src="expression_statement [102599,102665]" dest="expression_statement [38604,38670]"/>
  <match src="parameter [21448,21462]" dest="parameter [57443,57457]"/>
  <match src="visibility [7434,7442]" dest="visibility [7434,7442]"/>
  <match src="bool: bool [13306,13310]" dest="bool: bool [23833,23837]"/>
  <match src="function: function [29821,29829]" dest="function: function [46299,46307]"/>
  <match src="call_argument [81248,81252]" dest="call_argument [60082,60086]"/>
  <match src="identifier: FILE [87032,87036]" dest="identifier: FILE [59427,59431]"/>
  <match src="type_name [30472,30479]" dest="type_name [46950,46957]"/>
  <match src="identifier: start [98579,98584]" dest="identifier: start [34584,34589]"/>
  <match src="parameter [11107,11120]" dest="parameter [11107,11120]"/>
  <match src="=: = [69609,69610]" dest="=: = [68064,68065]"/>
  <match src="member_expression [106819,106859]" dest="member_expression [42824,42864]"/>
  <match src="(: ( [52032,52033]" dest="(: ( [26667,26668]"/>
  <match src="member_expression [97471,97492]" dest="member_expression [33476,33497]"/>
  <match src="type_alias [94738,94746]" dest="type_alias [30743,30751]"/>
  <match src="type_name [10553,10557]" dest="type_name [10553,10557]"/>
  <match src="private: private [11133,11140]" dest="private: private [11133,11140]"/>
  <match src="}: } [3391,3392]" dest="}: } [3391,3392]"/>
  <match src="primitive_type [37914,37918]" dest="primitive_type [54392,54396]"/>
  <match src=".: . [108259,108260]" dest=".: . [44264,44265]"/>
  <match src="(: ( [48593,48594]" dest="(: ( [17174,17175]"/>
  <match src="return_type_definition [99320,99337]" dest="return_type_definition [35325,35342]"/>
  <match src="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      *      * _Available since v2.4.0._      */ [1549,1872]" dest="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      *      * _Available since v2.4.0._      */ [1549,1872]"/>
  <match src="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [94025,94683]" dest="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [77377,78035]"/>
  <match src="}: } [45726,45727]" dest="}: } [14307,14308]"/>
  <match src="expression_statement [106372,106425]" dest="expression_statement [42377,42430]"/>
  <match src="(: ( [34179,34180]" dest="(: ( [50657,50658]"/>
  <match src="&quot;: &quot; [20868,20869]" dest="&quot;: &quot; [64513,64514]"/>
  <match src="identifier: _state [103623,103629]" dest="identifier: _state [39628,39634]"/>
  <match src="expression_statement [108471,108519]" dest="expression_statement [44476,44524]"/>
  <match src="visibility [56093,56101]" dest="visibility [22185,22193]"/>
  <match src="parameter [14416,14420]" dest="parameter [24943,24947]"/>
  <match src="if_statement [35195,35497]" dest="if_statement [51673,51975]"/>
  <match src="member_expression [97717,97732]" dest="member_expression [33722,33737]"/>
  <match src="visibility [47556,47564]" dest="visibility [16137,16145]"/>
  <match src="): ) [83262,83263]" dest="): ) [71299,71300]"/>
  <match src="variable_declaration_statement [8647,8661]" dest="variable_declaration_statement [8647,8661]"/>
  <match src=",: , [32126,32127]" dest=",: , [48604,48605]"/>
  <match src="}: } [47049,47050]" dest="}: } [15630,15631]"/>
  <match src="call_argument [53572,53615]" dest="call_argument [64884,64922]"/>
  <match src="library: library [694,701]" dest="library: library [694,701]"/>
  <match src="=: = [44286,44287]" dest="=: = [12867,12868]"/>
  <match src="comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [14845,15008]" dest="comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [25372,25535]"/>
  <match src="identifier: self [10509,10513]" dest="identifier: self [10509,10513]"/>
  <match src="identifier: _state [99498,99504]" dest="identifier: _state [35503,35509]"/>
  <match src="function_definition [47230,47386]" dest="function_definition [15811,15967]"/>
  <match src=".: . [107769,107770]" dest=".: . [43774,43775]"/>
  <match src=".: . [99865,99866]" dest=".: . [35870,35871]"/>
  <match src="returns: returns [98743,98750]" dest="returns: returns [34748,34755]"/>
  <match src="parameter [10709,10716]" dest="parameter [10709,10716]"/>
  <match src="{: { [48189,48190]" dest="{: { [16770,16771]"/>
  <match src="pragma: pragma [54,60]" dest="pragma: pragma [54,60]"/>
  <match src="type_name [7165,7172]" dest="type_name [7165,7172]"/>
  <match src="call_argument [37282,37299]" dest="call_argument [53760,53777]"/>
  <match src="}: } [45849,45850]" dest="}: } [14430,14431]"/>
  <match src="(: ( [85608,85609]" dest="(: ( [72780,72781]"/>
  <match src=".: . [86009,86010]" dest=".: . [80428,80429]"/>
  <match src="number_literal: 0 [11290,11291]" dest="number_literal: 0 [11290,11291]"/>
  <match src="identifier: self [9574,9578]" dest="identifier: self [9574,9578]"/>
  <match src="{: { [9769,9770]" dest="{: { [9769,9770]"/>
  <match src="): ) [48143,48144]" dest="): ) [16724,16725]"/>
  <match src="comment: // r.length = length; [35408,35429]" dest="comment: // r.length = length; [51886,51907]"/>
  <match src="(: ( [53381,53382]" dest="(: ( [64737,64738]"/>
  <match src="constant: constant [44321,44329]" dest="constant: constant [12902,12910]"/>
  <match src="function_body [95022,95068]" dest="function_body [31027,31073]"/>
  <match src="(: ( [74507,74508]" dest="(: ( [59271,59272]"/>
  <match src="call_argument [84733,84747]" dest="call_argument [73256,73270]"/>
  <match src=".: . [103309,103310]" dest=".: . [39314,39315]"/>
  <match src="primitive_type [43556,43563]" dest="primitive_type [12137,12144]"/>
  <match src="function_body [46283,46329]" dest="function_body [14864,14910]"/>
  <match src=".: . [98599,98600]" dest=".: . [34604,34605]"/>
  <match src="visibility [48805,48813]" dest="visibility [17386,17394]"/>
  <match src="identifier: value [82895,82900]" dest="identifier: value [70831,70836]"/>
  <match src=".: . [87163,87164]" dest=".: . [78642,78643]"/>
  <match src="type_name [104098,104105]" dest="type_name [40103,40110]"/>
  <match src="binary_expression [20762,20782]" dest="binary_expression [64399,64419]"/>
  <match src="binary_expression [38448,38454]" dest="binary_expression [54926,54932]"/>
  <match src="call_argument [51207,51212]" dest="call_argument [72147,72152]"/>
  <match src="&quot;: &quot; [20103,20104]" dest="&quot;: &quot; [71160,71161]"/>
  <match src="assignment_expression [102744,102797]" dest="assignment_expression [38749,38802]"/>
  <match src=".: . [50141,50142]" dest=".: . [56486,56487]"/>
  <match src="function_body [1973,2070]" dest="function_body [1973,2070]"/>
  <match src="primitive_type [19244,19251]" dest="primitive_type [18597,18604]"/>
  <match src="block_statement [38664,38729]" dest="block_statement [55142,55207]"/>
  <match src=".: . [106131,106132]" dest=".: . [42136,42137]"/>
  <match src="view: view [98494,98498]" dest="view: view [34499,34503]"/>
  <match src="member_expression [103952,103973]" dest="member_expression [39957,39978]"/>
  <match src="=: = [43602,43603]" dest="=: = [12183,12184]"/>
  <match src="parameter [99163,99170]" dest="parameter [35168,35175]"/>
  <match src="{: { [1472,1473]" dest="{: { [1472,1473]"/>
  <match src="(: ( [85476,85477]" dest="(: ( [80012,80013]"/>
  <match src="primitive_type [17398,17405]" dest="primitive_type [59515,59522]"/>
  <match src="identifier: SafeMath [101819,101827]" dest="identifier: SafeMath [37824,37832]"/>
  <match src="primitive_type [90782,90789]" dest="primitive_type [29209,29216]"/>
  <match src="identifier: slot [100954,100958]" dest="identifier: slot [36959,36963]"/>
  <match src="returns: returns [88668,88675]" dest="returns: returns [74335,74342]"/>
  <match src="identifier: balance [104246,104253]" dest="identifier: balance [40251,40258]"/>
  <match src="uint256: uint256 [44171,44178]" dest="uint256: uint256 [12752,12759]"/>
  <match src="identifier: Decimal [47330,47337]" dest="identifier: Decimal [15911,15918]"/>
  <match src="parameter [4737,4746]" dest="parameter [4737,4746]"/>
  <match src=",: , [84731,84732]" dest=",: , [73254,73255]"/>
  <match src="state_variable_declaration [45288,45347]" dest="state_variable_declaration [13869,13928]"/>
  <match src="function_definition [13235,13312]" dest="function_definition [23762,23839]"/>
  <match src="identifier: supply [103614,103620]" dest="identifier: supply [39619,39625]"/>
  <match src="for: for [6455,6458]" dest="for: for [6455,6458]"/>
  <match src="number_literal: 4 [44506,44507]" dest="number_literal: 4 [13087,13088]"/>
  <match src=".: . [104725,104726]" dest=".: . [40730,40731]"/>
  <match src="call_argument [47343,47377]" dest="call_argument [15924,15958]"/>
  <match src="visibility [96088,96094]" dest="visibility [32093,32099]"/>
  <match src="}: } [97759,97760]" dest="}: } [33764,33765]"/>
  <match src="(: ( [4812,4813]" dest="(: ( [4812,4813]"/>
  <match src=".: . [84619,84620]" dest=".: . [72192,72193]"/>
  <match src="call_expression [97440,97447]" dest="call_expression [33445,33452]"/>
  <match src="identifier: accounts [103872,103880]" dest="identifier: accounts [39877,39885]"/>
  <match src="call_expression [98535,98585]" dest="call_expression [34540,34590]"/>
  <match src="memory: memory [103795,103801]" dest="memory: memory [39800,39806]"/>
  <match src="string [2727,2762]" dest="string [2727,2762]"/>
  <match src="bool: bool [100653,100657]" dest="bool: bool [36658,36662]"/>
  <match src="struct: struct [44090,44096]" dest="struct: struct [12671,12677]"/>
  <match src="(: ( [32580,32581]" dest="(: ( [49058,49059]"/>
  <match src="identifier: reserve0 [55974,55982]" dest="identifier: reserve0 [22066,22074]"/>
  <match src="variable_declaration [84266,84284]" dest="variable_declaration [63218,63231]"/>
  <match src="identifier: epoch [106633,106638]" dest="identifier: epoch [42638,42643]"/>
  <match src="function_definition [6835,6953]" dest="function_definition [6835,6953]"/>
  <match src="call_expression [9108,9148]" dest="call_expression [9108,9148]"/>
  <match src=".: . [99987,99988]" dest=".: . [35992,35993]"/>
  <match src="(: ( [46126,46127]" dest="(: ( [14707,14708]"/>
  <match src="call_argument [8150,8178]" dest="call_argument [8150,8178]"/>
  <match src="if: if [33317,33319]" dest="if: if [49795,49797]"/>
  <match src="primitive_type [99471,99478]" dest="primitive_type [35476,35483]"/>
  <match src="(: ( [33618,33619]" dest="(: ( [50096,50097]"/>
  <match src="uint256: uint256 [80693,80700]" dest="uint256: uint256 [57641,57648]"/>
  <match src="comment: // ============ Constants ============ [28897,28935]" dest="comment: // ============ Constants ============ [45375,45413]"/>
  <match src="number_literal: 0 [35212,35213]" dest="number_literal: 0 [51690,51691]"/>
  <match src="assignment_expression [106102,106152]" dest="assignment_expression [42107,42157]"/>
  <match src="uint: uint [54634,54638]" dest="uint: uint [20726,20730]"/>
  <match src="revert: revert [32603,32609]" dest="revert: revert [49081,49087]"/>
  <match src="visibility [106557,106565]" dest="visibility [42562,42570]"/>
  <match src="mapping: mapping [91352,91359]" dest="mapping: mapping [29779,29786]"/>
  <match src=".: . [105243,105244]" dest=".: . [41248,41249]"/>
  <match src="modifier_definition [109869,110092]" dest="modifier_definition [69645,69868]"/>
  <match src="view: view [13656,13660]" dest="view: view [24183,24187]"/>
  <match src="=&gt;: =&gt; [90155,90157]" dest="=&gt;: =&gt; [28582,28584]"/>
  <match src="visibility [66500,66507]" dest="visibility [60982,60989]"/>
  <match src="type_name [29100,29106]" dest="type_name [45578,45584]"/>
  <match src="parameter [8245,8254]" dest="parameter [8245,8254]"/>
  <match src="identifier: SafeMath [94738,94746]" dest="identifier: SafeMath [30743,30751]"/>
  <match src="variable_declaration_statement [8585,8632]" dest="variable_declaration_statement [8585,8632]"/>
  <match src=",: , [105203,105204]" dest=",: , [41208,41209]"/>
  <match src="return_type_definition [46265,46282]" dest="return_type_definition [14846,14863]"/>
  <match src="unary_expression [31865,31870]" dest="unary_expression [48343,48348]"/>
  <match src="identifier: a [5394,5395]" dest="identifier: a [5394,5395]"/>
  <match src="string_literal [20868,20905]" dest="string_literal [64513,64558]"/>
  <match src="identifier: result [36792,36798]" dest="identifier: result [53270,53276]"/>
  <match src="member_expression [103544,103576]" dest="member_expression [39549,39581]"/>
  <match src="uint256: uint256 [99282,99289]" dest="uint256: uint256 [35287,35294]"/>
  <match src="call_argument [83478,83488]" dest="call_argument [71487,71497]"/>
  <match src="identifier: decrementBalanceOfPhantom [85451,85476]" dest="identifier: recordVote [80002,80012]"/>
  <match src="}: } [11045,11046]" dest="}: } [11045,11046]"/>
  <match src="pure: pure [4768,4772]" dest="pure: pure [4768,4772]"/>
  <match src="uint256: uint256 [91110,91117]" dest="uint256: uint256 [29537,29544]"/>
  <match src="type_name [4134,4141]" dest="type_name [4134,4141]"/>
  <match src="address: address [92952,92959]" dest="address: address [76305,76312]"/>
  <match src="type_name [13272,13279]" dest="type_name [23799,23806]"/>
  <match src="(: ( [84696,84697]" dest="(: ( [57126,57127]"/>
  <match src="function_body [31239,31670]" dest="function_body [47717,48148]"/>
  <match src="): ) [47213,47214]" dest="): ) [15794,15795]"/>
  <match src="primitive_type [90573,90580]" dest="primitive_type [29000,29007]"/>
  <match src="=: = [85167,85168]" dest="=: = [72458,72459]"/>
  <match src="identifier: candidate [107500,107509]" dest="identifier: candidate [43505,43514]"/>
  <match src="visibility [44465,44472]" dest="visibility [13046,13053]"/>
  <match src="(: ( [10077,10078]" dest="(: ( [10077,10078]"/>
  <match src="type_name [47939,47946]" dest="type_name [16520,16527]"/>
  <match src=",: , [32809,32810]" dest=",: , [49287,49288]"/>
  <match src="return: return [95452,95458]" dest="return: return [31457,31463]"/>
  <match src="returns: returns [47930,47937]" dest="returns: returns [16511,16518]"/>
  <match src="type_name [91160,91167]" dest="type_name [29587,29594]"/>
  <match src="(: ( [10474,10475]" dest="(: ( [10474,10475]"/>
  <match src="extcodesize: extcodesize [89189,89200]" dest="extcodesize: extcodesize [74856,74867]"/>
  <match src="function: function [56074,56082]" dest="function: function [22166,22174]"/>
  <match src="event_paramater [82977,83000]" dest="event_paramater [70954,70977]"/>
  <match src="]: ] [105985,105986]" dest="]: ] [41990,41991]"/>
  <match src="=: = [2689,2690]" dest="=: = [2689,2690]"/>
  <match src="{: { [92443,92444]" dest="{: { [75796,75797]"/>
  <match src="is: is [94716,94718]" dest="is: is [30721,30723]"/>
  <match src=",: , [30124,30125]" dest=",: , [46602,46603]"/>
  <match src="user_defined_type [48168,48180]" dest="user_defined_type [16749,16761]"/>
  <match src="): ) [23173,23174]" dest="): ) [64263,64264]"/>
  <match src="number_literal: 0 [95597,95598]" dest="number_literal: 0 [31602,31603]"/>
  <match src=".: . [98288,98289]" dest=".: . [34293,34294]"/>
  <match src="}: } [56909,56910]" dest="}: } [23001,23002]"/>
  <match src="user_defined_type [9513,9517]" dest="user_defined_type [9513,9517]"/>
  <match src="event_paramater [55620,55642]" dest="event_paramater [21712,21734]"/>
  <match src="): ) [96086,96087]" dest="): ) [32091,32092]"/>
  <match src="call_expression [85552,85566]" dest="call_expression [58713,58727]"/>
  <match src="public: public [96523,96529]" dest="public: public [32528,32534]"/>
  <match src="parameter [105799,105814]" dest="parameter [41804,41819]"/>
  <match src="{: { [107558,107559]" dest="{: { [43563,43564]"/>
  <match src="call_argument [84999,85028]" dest="call_argument [81647,81673]"/>
  <match src="number_literal: 0 [2654,2655]" dest="number_literal: 0 [2654,2655]"/>
  <match src="}: } [34523,34524]" dest="}: } [51001,51002]"/>
  <match src=".: . [103345,103346]" dest=".: . [39350,39351]"/>
  <match src="): ) [32249,32250]" dest="): ) [48727,48728]"/>
  <match src="user_defined_type [99803,99817]" dest="user_defined_type [35808,35822]"/>
  <match src="}: } [36522,36523]" dest="}: } [53000,53001]"/>
  <match src="member_expression [11194,11201]" dest="member_expression [11194,11201]"/>
  <match src="memory: memory [103268,103274]" dest="memory: memory [39273,39279]"/>
  <match src="): ) [29778,29779]" dest="): ) [46256,46257]"/>
  <match src="bytes32: bytes32 [32434,32441]" dest="bytes32: bytes32 [48912,48919]"/>
  <match src="identifier: must [30593,30597]" dest="identifier: must [47071,47075]"/>
  <match src="identifier: newLock [108230,108237]" dest="identifier: newLock [44235,44242]"/>
  <match src="bytes: bytes [35977,35982]" dest="bytes: bytes [52455,52460]"/>
  <match src="primitive_type [8647,8654]" dest="primitive_type [8647,8654]"/>
  <match src="identifier: LPAREN [31509,31515]" dest="identifier: LPAREN [47987,47993]"/>
  <match src="memory: memory [54700,54706]" dest="memory: memory [20792,20798]"/>
  <match src="identifier: one [6844,6847]" dest="identifier: one [6844,6847]"/>
  <match src=":: : [6936,6937]" dest=":: : [6936,6937]"/>
  <match src="inheritance_specifier [111117,111127]" dest="inheritance_specifier [70620,70630]"/>
  <match src="visibility [36586,36593]" dest="visibility [53064,53071]"/>
  <match src="): ) [93321,93322]" dest="): ) [76674,76675]"/>
  <match src="=: = [29213,29214]" dest="=: = [45691,45692]"/>
  <match src=".: . [46400,46401]" dest=".: . [14981,14982]"/>
  <match src="user_defined_type [48322,48334]" dest="user_defined_type [16903,16915]"/>
  <match src="identifier: account [52041,52048]" dest="identifier: account [26676,26683]"/>
  <match src="type_name [55517,55524]" dest="type_name [21609,21616]"/>
  <match src="uint: uint [55153,55157]" dest="uint: uint [21245,21249]"/>
  <match src="external: external [70322,70330]" dest="external: external [64043,64051]"/>
  <match src="identifier: owner [98034,98039]" dest="identifier: owner [34039,34044]"/>
  <match src=",: , [107925,107926]" dest=",: , [43930,43931]"/>
  <match src="memory: memory [95014,95020]" dest="memory: memory [31019,31025]"/>
  <match src="(: ( [109716,109717]" dest="(: ( [69492,69493]"/>
  <match src="member_expression [93726,93764]" dest="member_expression [77079,77117]"/>
  <match src="comment: /* Market */ [45067,45079]" dest="comment: /* Market */ [13648,13660]"/>
  <match src="identifier: accounts [103551,103559]" dest="identifier: accounts [39556,39564]"/>
  <match src="number_literal: 32 [38077,38079]" dest="number_literal: 32 [54555,54557]"/>
  <match src="identifier: lessThan [10116,10124]" dest="identifier: lessThan [10116,10124]"/>
  <match src="comment: /*     Copyright 2019 dYdX Trading Inc.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [28103,28716]" dest="comment: // File: contracts/dao/Bonding.sol [69875,69909]"/>
  <match src="parameter [99471,99478]" dest="parameter [35476,35483]"/>
  <match src="returns: returns [46265,46272]" dest="returns: returns [14846,14853]"/>
  <match src="member_expression [103544,103580]" dest="member_expression [39549,39585]"/>
  <match src="identifier: Account [97596,97603]" dest="identifier: Account [33601,33608]"/>
  <match src="return: return [46425,46431]" dest="return: return [15006,15012]"/>
  <match src=".: . [9578,9579]" dest=".: . [9578,9579]"/>
  <match src="call_argument [34129,34134]" dest="call_argument [50607,50612]"/>
  <match src="identifier: _state [104936,104942]" dest="identifier: _state [40941,40947]"/>
  <match src="type_name [104665,104672]" dest="type_name [40670,40677]"/>
  <match src="identifier: sender [85190,85196]" dest="identifier: sender [72517,72523]"/>
  <match src="function: function [99541,99549]" dest="function: function [35546,35554]"/>
  <match src="): ) [33913,33914]" dest="): ) [50391,50392]"/>
  <match src="identifier: initializer [109878,109889]" dest="identifier: initializer [69654,69665]"/>
  <match src="member_expression [97572,97593]" dest="member_expression [33577,33598]"/>
  <match src="function_definition [33745,34531]" dest="function_definition [50223,51009]"/>
  <match src="function: function [104064,104072]" dest="function: function [40069,40077]"/>
  <match src="return: return [48848,48854]" dest="return: return [17429,17435]"/>
  <match src=",: , [102951,102952]" dest=",: , [38956,38957]"/>
  <match src="function_definition [104986,105412]" dest="function_definition [40991,41417]"/>
  <match src="): ) [7628,7629]" dest="): ) [7628,7629]"/>
  <match src="public: public [95873,95879]" dest="public: public [31878,31884]"/>
  <match src="return: return [48501,48507]" dest="return: return [17082,17088]"/>
  <match src="view: view [97356,97360]" dest="view: view [33361,33365]"/>
  <match src="type_name [9454,9458]" dest="type_name [9454,9458]"/>
  <match src="): ) [33043,33044]" dest="): ) [49521,49522]"/>
  <match src="parameter [56704,56719]" dest="parameter [22796,22811]"/>
  <match src="function_definition [103428,103719]" dest="function_definition [39433,39724]"/>
  <match src="call_expression [32947,32966]" dest="call_expression [49425,49444]"/>
  <match src="(: ( [10418,10419]" dest="(: ( [10418,10419]"/>
  <match src="{: { [90077,90078]" dest="{: { [28504,28505]"/>
  <match src="visibility [107340,107348]" dest="visibility [43345,43353]"/>
  <match src="}: } [46328,46329]" dest="}: } [14909,14910]"/>
  <match src="parameter [50337,50353]" dest="parameter [57604,57621]"/>
  <match src="address: address [91031,91038]" dest="address: address [29458,29465]"/>
  <match src="variable_declaration [93302,93321]" dest="variable_declaration [76655,76674]"/>
  <match src="binary_expression [38797,38824]" dest="binary_expression [55275,55302]"/>
  <match src="[: [ [104758,104759]" dest="[: [ [40763,40764]"/>
  <match src="memory: memory [8790,8796]" dest="memory: memory [8790,8796]"/>
  <match src="): ) [56235,56236]" dest="): ) [22327,22328]"/>
  <match src="identifier: totalRewarded [86262,86275]" dest="identifier: startFor [80356,80364]"/>
  <match src="identifier: div [86389,86392]" dest="identifier: div [72988,72991]"/>
  <match src="uint256: uint256 [38148,38155]" dest="uint256: uint256 [54626,54633]"/>
  <match src="type_name [1429,1436]" dest="type_name [1429,1436]"/>
  <match src="address: address [55517,55524]" dest="address: address [21609,21616]"/>
  <match src="identifier: ORACLE_RESERVE_MINIMUM [43915,43937]" dest="identifier: ORACLE_RESERVE_MINIMUM [12496,12518]"/>
  <match src="state_mutability [95299,95303]" dest="state_mutability [31304,31308]"/>
  <match src=":: : [7515,7516]" dest=":: : [7515,7516]"/>
  <match src="identifier: getCouponExpiration [47894,47913]" dest="identifier: getCouponExpiration [16475,16494]"/>
  <match src="identifier: bonded [102614,102620]" dest="identifier: bonded [38619,38625]"/>
  <match src="identifier: fluidUntil [97641,97651]" dest="identifier: fluidUntil [33646,33656]"/>
  <match src="{: { [89179,89180]" dest="{: { [74846,74847]"/>
  <match src="}: } [93972,93973]" dest="}: } [77325,77326]"/>
  <match src="variable_declaration [1027,1036]" dest="variable_declaration [1027,1036]"/>
  <match src="returns: returns [99320,99327]" dest="returns: returns [35325,35332]"/>
  <match src="identifier: FILE [51130,51134]" dest="identifier: FILE [71141,71145]"/>
  <match src="identifier: Approval [23142,23150]" dest="identifier: CouponApproval [64221,64235]"/>
  <match src="number_literal: 1 [8559,8560]" dest="number_literal: 1 [8559,8560]"/>
  <match src="identifier: i [35098,35099]" dest="identifier: i [51576,51577]"/>
  <match src="return_statement [11259,11292]" dest="return_statement [11259,11292]"/>
  <match src="(: ( [106079,106080]" dest="(: ( [42084,42085]"/>
  <match src="): ) [38286,38287]" dest="): ) [54764,54765]"/>
  <match src="type_name [2379,2386]" dest="type_name [2379,2386]"/>
  <match src="primitive_type [105816,105823]" dest="primitive_type [41821,41828]"/>
  <match src="call_argument [59322,59347]" dest="call_argument [73187,73218]"/>
  <match src="variable_declaration_tuple [86156,86192]" dest="variable_declaration_tuple [62128,62189]"/>
  <match src="uint256: uint256 [69852,69859]" dest="uint256: uint256 [62937,62944]"/>
  <match src="uint256: uint256 [8245,8252]" dest="uint256: uint256 [8245,8252]"/>
  <match src="member_expression [103331,103345]" dest="member_expression [39336,39350]"/>
  <match src="state_variable_declaration [44457,44508]" dest="state_variable_declaration [13038,13089]"/>
  <match src="type_name [107927,107933]" dest="type_name [43932,43938]"/>
  <match src="binary_expression [86029,86067]" dest="binary_expression [78662,78687]"/>
  <match src="member_expression [104911,104933]" dest="member_expression [40916,40938]"/>
  <match src=",: , [15069,15070]" dest=",: , [25596,25597]"/>
  <match src=".: . [84560,84561]" dest=".: . [73169,73170]"/>
  <match src="type_name [8812,8816]" dest="type_name [8812,8816]"/>
  <match src=",: , [21118,21119]" dest=",: , [64984,64985]"/>
  <match src=".: . [86050,86051]" dest=".: . [78675,78676]"/>
  <match src=",: , [97951,97952]" dest=",: , [33956,33957]"/>
  <match src="identifier: balance [104548,104555]" dest="identifier: balance [40553,40560]"/>
  <match src="uint8: uint8 [36932,36937]" dest="uint8: uint8 [53410,53415]"/>
  <match src="block_statement [8674,8723]" dest="block_statement [8674,8723]"/>
  <match src="parameter [64822,64826]" dest="parameter [27611,27615]"/>
  <match src="address: address [54534,54541]" dest="address: address [20626,20633]"/>
  <match src="comment: // File: contracts/token/IDollar.sol [51228,51264]" dest="comment: // File: contracts/token/IDollar.sol [25863,25899]"/>
  <match src="type_name [91212,91219]" dest="type_name [29639,29646]"/>
  <match src="identifier: incrementRejectFor [107689,107707]" dest="identifier: incrementRejectFor [43694,43712]"/>
  <match src="external: external [13288,13296]" dest="external: external [23815,23823]"/>
  <match src="parameter [9988,10004]" dest="parameter [9988,10004]"/>
  <match src="uint8: uint8 [37919,37924]" dest="uint8: uint8 [54397,54402]"/>
  <match src="{: { [50095,50096]" dest="{: { [56467,56468]"/>
  <match src="call_argument [86029,86067]" dest="call_argument [78662,78687]"/>
  <match src="call_argument [86393,86406]" dest="call_argument [72992,73005]"/>
  <match src="): ) [26634,26635]" dest="): ) [79606,79607]"/>
  <match src=".: . [99227,99228]" dest=".: . [35232,35233]"/>
  <match src="array_access [96752,96776]" dest="array_access [32757,32781]"/>
  <match src="&gt;: &gt; [89233,89234]" dest="&gt;: &gt; [74900,74901]"/>
  <match src="expression_statement [83875,83912]" dest="expression_statement [71605,71642]"/>
  <match src=".: . [107435,107436]" dest=".: . [43440,43441]"/>
  <match src="=&gt;: =&gt; [90201,90203]" dest="=&gt;: =&gt; [28628,28630]"/>
  <match src="return_statement [38679,38718]" dest="return_statement [55157,55196]"/>
  <match src="member_expression [103928,103949]" dest="member_expression [39933,39954]"/>
  <match src="call_argument [4110,4122]" dest="call_argument [4110,4122]"/>
  <match src="function: function [52079,52087]" dest="function: function [26714,26722]"/>
  <match src="pure: pure [2365,2369]" dest="pure: pure [2365,2369]"/>
  <match src="identifier: sender [85595,85601]" dest="identifier: sender [72767,72773]"/>
  <match src="(: ( [95768,95769]" dest="(: ( [31773,31774]"/>
  <match src="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      */ [1138,1399]" dest="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      */ [1138,1399]"/>
  <match src="parameter [95213,95218]" dest="parameter [31218,31223]"/>
  <match src="type_name [64873,64880]" dest="type_name [27662,27669]"/>
  <match src=".: . [83608,83609]" dest=".: . [72098,72099]"/>
  <match src="(: ( [7280,7281]" dest="(: ( [7280,7281]"/>
  <match src="identifier: b [4756,4757]" dest="identifier: b [4756,4757]"/>
  <match src="identifier: onlyFrozenOrLocked [109657,109675]" dest="identifier: onlyFrozenOrLocked [69433,69451]"/>
  <match src="type_name [97151,97158]" dest="type_name [33156,33163]"/>
  <match src="call_expression [29585,29760]" dest="call_expression [46063,46238]"/>
  <match src="type_name [55561,55566]" dest="type_name [21653,21658]"/>
  <match src="uint256: uint256 [94751,94758]" dest="uint256: uint256 [30756,30763]"/>
  <match src="type_name [45688,45695]" dest="type_name [14269,14276]"/>
  <match src=",: , [104377,104378]" dest=",: , [40382,40383]"/>
  <match src="(: ( [48827,48828]" dest="(: ( [17408,17409]"/>
  <match src="variable_declaration_tuple [69255,69330]" dest="variable_declaration_tuple [67057,67117]"/>
  <match src="indexed: indexed [82985,82992]" dest="indexed: indexed [70962,70969]"/>
  <match src="comment: /**      * @dev Emitted when the implementation is upgraded.      * @param implementation Address of the new implementation.      */ [92796,92931]" dest="comment: /**      * @dev Emitted when the implementation is upgraded.      * @param implementation Address of the new implementation.      */ [76149,76284]"/>
  <match src="type_name [3273,3280]" dest="type_name [3273,3280]"/>
  <match src="): ) [95320,95321]" dest="): ) [31325,31326]"/>
  <match src="primitive_type [103772,103779]" dest="primitive_type [39777,39784]"/>
  <match src="state_mutability [9709,9713]" dest="state_mutability [9709,9713]"/>
  <match src="variable_declaration [2024,2033]" dest="variable_declaration [2024,2033]"/>
  <match src="): ) [87015,87016]" dest="): ) [59410,59411]"/>
  <match src="{: { [5468,5469]" dest="{: { [5468,5469]"/>
  <match src="function: function [86879,86887]" dest="function: function [59496,59504]"/>
  <match src="member_expression [7950,7960]" dest="member_expression [7950,7960]"/>
  <match src="call_argument [104289,104295]" dest="call_argument [40294,40300]"/>
  <match src="binary_expression [2715,2720]" dest="binary_expression [2715,2720]"/>
  <match src="array_access [105111,105135]" dest="array_access [41116,41140]"/>
  <match src="expression_statement [103599,103657]" dest="expression_statement [39604,39662]"/>
  <match src="(: ( [96591,96592]" dest="(: ( [32596,32597]"/>
  <match src="identifier: BOOTSTRAPPING_SUPPLY_CHANGE_LIMIT [46622,46655]" dest="identifier: BOOTSTRAPPING_SUPPLY_CHANGE_LIMIT [15203,15236]"/>
  <match src="identifier: IERC20 [16608,16614]" dest="identifier: Curve [60926,60931]"/>
  <match src="assignment_expression [106998,107042]" dest="assignment_expression [43003,43047]"/>
  <match src=".: . [105499,105500]" dest=".: . [41504,41505]"/>
  <match src="identifier: D256 [10006,10010]" dest="identifier: D256 [10006,10010]"/>
  <match src="identifier: balanceOfPhantom [75890,75906]" dest="identifier: newSupply [67001,67010]"/>
  <match src="primitive_type [97690,97697]" dest="primitive_type [33695,33702]"/>
  <match src="state_variable_declaration [45420,45466]" dest="state_variable_declaration [14001,14047]"/>
  <match src="call_argument [57982,57983]" dest="call_argument [80588,80589]"/>
  <match src="member_expression [99047,99075]" dest="member_expression [35052,35080]"/>
  <match src="for: for [34921,34924]" dest="for: for [51399,51402]"/>
  <match src="parameter [33228,33242]" dest="parameter [49706,49720]"/>
  <match src="return_statement [67902,67932]" dest="return_statement [68238,68259]"/>
  <match src="{: { [98517,98518]" dest="{: { [34522,34523]"/>
  <match src="return: return [95033,95039]" dest="return: return [31038,31044]"/>
  <match src="primitive_type [96862,96869]" dest="primitive_type [32867,32874]"/>
  <match src="(: ( [11193,11194]" dest="(: ( [11193,11194]"/>
  <match src="): ) [10516,10517]" dest="): ) [10516,10517]"/>
  <match src="type_name [82826,82833]" dest="type_name [70762,70769]"/>
  <match src="identifier: reject [107792,107798]" dest="identifier: reject [43797,43803]"/>
  <match src="type_name [99471,99478]" dest="type_name [35476,35483]"/>
  <match src="identifier: value [11207,11212]" dest="identifier: value [11207,11212]"/>
  <match src="expression_statement [50829,50939]" dest="expression_statement [63089,63206]"/>
  <match src="function: function [107276,107284]" dest="function: function [43281,43289]"/>
  <match src="{: { [47343,47344]" dest="{: { [15924,15925]"/>
  <match src="identifier: D256 [7936,7940]" dest="identifier: D256 [7936,7940]"/>
  <match src="identifier: TREASURY_ADDRESS [45526,45542]" dest="identifier: TREASURY_ADDRESS [14107,14123]"/>
  <match src="number_literal: 1 [37909,37910]" dest="number_literal: 1 [54387,54388]"/>
  <match src="identifier: reason [102871,102877]" dest="identifier: reason [38876,38882]"/>
  <match src="type_name [97791,97798]" dest="type_name [33796,33803]"/>
  <match src="return_type_definition [47447,47464]" dest="return_type_definition [16028,16045]"/>
  <match src="function_body [48628,48671]" dest="function_body [17209,17252]"/>
  <match src="(: ( [54591,54592]" dest="(: ( [20683,20684]"/>
  <match src="identifier: D256 [9728,9732]" dest="identifier: D256 [9728,9732]"/>
  <match src="type_name [55689,55696]" dest="type_name [21781,21788]"/>
  <match src=",: , [55079,55080]" dest=",: , [21171,21172]"/>
  <match src="(: ( [7964,7965]" dest="(: ( [7964,7965]"/>
  <match src="struct: struct [91243,91249]" dest="struct: struct [29670,29676]"/>
  <match src="uint256: uint256 [53282,53289]" dest="uint256: uint256 [56442,56449]"/>
  <match src="call_argument [85324,85334]" dest="call_argument [63409,63419]"/>
  <match src="call_expression [98368,98398]" dest="call_expression [34373,34403]"/>
  <match src="): ) [10569,10570]" dest="): ) [10569,10570]"/>
  <match src=".: . [104833,104834]" dest=".: . [40838,40839]"/>
  <match src="(: ( [56263,56264]" dest="(: ( [22355,22356]"/>
  <match src="primitive_type [96824,96831]" dest="primitive_type [32829,32836]"/>
  <match src="identifier: that [87525,87529]" dest="identifier: that [81326,81330]"/>
  <match src="primitive_type [36805,36810]" dest="primitive_type [53283,53288]"/>
  <match src="parameter [1964,1971]" dest="parameter [1964,1971]"/>
  <match src="(: ( [20960,20961]" dest="(: ( [57047,57048]"/>
  <match src="call_expression [86949,86956]" dest="call_expression [59581,59589]"/>
  <match src="type_name [46562,46574]" dest="type_name [15143,15155]"/>
  <match src="public: public [96088,96094]" dest="public: public [32093,32099]"/>
  <match src="{: { [98163,98164]" dest="{: { [34168,34169]"/>
  <match src="identifier: to [56746,56748]" dest="identifier: to [22838,22840]"/>
  <match src="): ) [21548,21549]" dest="): ) [57536,57537]"/>
  <match src="event_paramater [55658,55670]" dest="event_paramater [21750,21762]"/>
  <match src="type_name [47696,47703]" dest="type_name [16277,16284]"/>
  <match src="return_type_definition [11156,11173]" dest="return_type_definition [11156,11173]"/>
  <match src="call_argument [48521,48549]" dest="call_argument [17102,17130]"/>
  <match src="function: function [56860,56868]" dest="function: function [22952,22960]"/>
  <match src="identifier: Approval [15257,15265]" dest="identifier: Approval [25784,25792]"/>
  <match src="call_argument [31330,31617]" dest="call_argument [47808,48095]"/>
  <match src="identifier: supply [103943,103949]" dest="identifier: supply [39948,39954]"/>
  <match src="address: address [102223,102230]" dest="address: address [38228,38235]"/>
  <match src=":: : [48226,48227]" dest=":: : [16807,16808]"/>
  <match src="member_expression [86922,86934]" dest="member_expression [59293,59305]"/>
  <match src="return_type_definition [56053,56067]" dest="return_type_definition [22145,22159]"/>
  <match src="expression_statement [103021,103045]" dest="expression_statement [39026,39050]"/>
  <match src="comment: // TODO Check this again before the Serenity release, because all addresses will be [88992,89075]" dest="comment: // TODO Check this again before the Serenity release, because all addresses will be [74659,74742]"/>
  <match src="call_expression [108240,108259]" dest="call_expression [44245,44264]"/>
  <match src="primitive_type [90240,90247]" dest="primitive_type [28667,28674]"/>
  <match src="identifier: sender [81158,81164]" dest="identifier: sender [83328,83334]"/>
  <match src="identifier: c [4142,4143]" dest="identifier: c [4142,4143]"/>
  <match src="primitive_type [44457,44464]" dest="primitive_type [13038,13045]"/>
  <match src="{: { [6906,6907]" dest="{: { [6906,6907]"/>
  <match src="array_access [37902,37911]" dest="array_access [54380,54389]"/>
  <match src="primitive_type [108114,108121]" dest="primitive_type [44119,44126]"/>
  <match src="identifier: candidates [100684,100694]" dest="identifier: candidates [36689,36699]"/>
  <match src="return: return [45813,45819]" dest="return: return [14394,14400]"/>
  <match src="type_name [66539,66546]" dest="type_name [78254,78261]"/>
  <match src="parameter [10330,10334]" dest="parameter [10330,10334]"/>
  <match src="): ) [33683,33684]" dest="): ) [50161,50162]"/>
  <match src="call_struct_argument [8611,8628]" dest="call_struct_argument [8611,8628]"/>
  <match src="&quot;: &quot; [85404,85405]" dest="&quot;: &quot; [81011,81012]"/>
  <match src="parameter [105623,105638]" dest="parameter [41628,41643]"/>
  <match src="(: ( [9112,9113]" dest="(: ( [9112,9113]"/>
  <match src="(: ( [89200,89201]" dest="(: ( [74867,74868]"/>
  <match src="primitive_type [44249,44256]" dest="primitive_type [12830,12837]"/>
  <match src="visibility [102579,102587]" dest="visibility [38584,38592]"/>
  <match src="identifier: epoch [97123,97128]" dest="identifier: epoch [33128,33133]"/>
  <match src="identifier: add [108260,108263]" dest="identifier: add [44265,44268]"/>
  <match src="parameter [55141,55151]" dest="parameter [21233,21243]"/>
  <match src="identifier: must [33190,33194]" dest="identifier: must [49668,49672]"/>
  <match src="type_name [80864,80871]" dest="type_name [66703,66710]"/>
  <match src="): ) [87091,87092]" dest="): ) [59479,59480]"/>
  <match src="uint256: uint256 [47696,47703]" dest="uint256: uint256 [16277,16284]"/>
  <match src="array_access [105676,105698]" dest="array_access [41681,41703]"/>
  <match src="identifier: length [36007,36013]" dest="identifier: length [52485,52491]"/>
  <match src="(: ( [97019,97020]" dest="(: ( [33024,33025]"/>
  <match src=".: . [105896,105897]" dest=".: . [41901,41902]"/>
  <match src="): ) [13286,13287]" dest="): ) [23813,23814]"/>
  <match src="call_argument [74596,74612]" dest="call_argument [59375,59388]"/>
  <match src="memory: memory [7905,7911]" dest="memory: memory [7905,7911]"/>
  <match src="}: } [110094,110095]" dest="}: } [69870,69871]"/>
  <match src="returns: returns [99154,99161]" dest="returns: returns [35159,35166]"/>
  <match src="function: function [47999,48007]" dest="function: function [16580,16588]"/>
  <match src="returns: returns [56280,56287]" dest="returns: returns [22372,22379]"/>
  <match src="member_expression [84287,84449]" dest="member_expression [71926,72050]"/>
  <match src="member_expression [108175,108211]" dest="member_expression [44180,44216]"/>
  <match src="identifier: ORACLE_POOL_RATIO [45384,45401]" dest="identifier: ORACLE_POOL_RATIO [13965,13982]"/>
  <match src="call_expression [109427,109562]" dest="call_expression [69203,69338]"/>
  <match src="identifier: i [34934,34935]" dest="identifier: i [51412,51413]"/>
  <match src="visibility [8267,8275]" dest="visibility [8267,8275]"/>
  <match src=",: , [87229,87230]" dest=",: , [78687,78688]"/>
  <match src="returns: returns [100081,100088]" dest="returns: returns [36086,36093]"/>
  <match src="string [109318,109330]" dest="string [69094,69106]"/>
  <match src="function: function [100168,100176]" dest="function: function [36173,36181]"/>
  <match src="type_name [69497,69504]" dest="type_name [72945,72952]"/>
  <match src="): ) [106976,106977]" dest="): ) [42981,42982]"/>
  <match src="parameter [14778,14795]" dest="parameter [25305,25322]"/>
  <match src=".: . [84740,84741]" dest=".: . [73263,73264]"/>
  <match src="expression_statement [102438,102496]" dest="expression_statement [38443,38501]"/>
  <match src="(: ( [64872,64873]" dest="(: ( [27661,27662]"/>
  <match src="uint256: uint256 [962,969]" dest="uint256: uint256 [962,969]"/>
  <match src="type_name [90833,90840]" dest="type_name [29260,29267]"/>
  <match src="returns: returns [9719,9726]" dest="returns: returns [9719,9726]"/>
  <match src="): ) [55345,55346]" dest="): ) [21437,21438]"/>
  <match src="(: ( [96724,96725]" dest="(: ( [32729,32730]"/>
  <match src=".: . [96776,96777]" dest=".: . [32781,32782]"/>
  <match src="identifier: add [86278,86281]" dest="identifier: add [80376,80379]"/>
  <match src="identifier: dollarAmount [80986,80998]" dest="identifier: dollarAmount [63306,63318]"/>
  <match src=":: : [9352,9353]" dest=":: : [9352,9353]"/>
  <match src="type_name [102258,102265]" dest="type_name [38263,38270]"/>
  <match src=".: . [68655,68656]" dest=".: . [66145,66146]"/>
  <match src="parameter [46393,46412]" dest="parameter [14974,14993]"/>
  <match src="): ) [64751,64752]" dest="): ) [27540,27541]"/>
  <match src="address: address [55141,55148]" dest="address: address [21233,21240]"/>
  <match src="assignment_expression [38302,38312]" dest="assignment_expression [54780,54790]"/>
  <match src="return: return [46172,46178]" dest="return: return [14753,14759]"/>
  <match src="identifier: input [35820,35825]" dest="identifier: input [52298,52303]"/>
  <match src="call_expression [23009,23077]" dest="call_expression [64063,64139]"/>
  <match src="string [109996,110017]" dest="string [69772,69793]"/>
  <match src="(: ( [106482,106483]" dest="(: ( [42487,42488]"/>
  <match src="uint256: uint256 [107911,107918]" dest="uint256: uint256 [43916,43923]"/>
  <match src="function_definition [107864,108070]" dest="function_definition [43869,44075]"/>
  <match src="if_statement [38648,38729]" dest="if_statement [55126,55207]"/>
  <match src="primitive_type [43832,43839]" dest="primitive_type [12413,12420]"/>
  <match src="function_body [7686,7756]" dest="function_body [7686,7756]"/>
  <match src="): ) [83713,83714]" dest="): ) [71734,71735]"/>
  <match src="function_definition [56827,56852]" dest="function_definition [22919,22944]"/>
  <match src="&quot;: &quot; [67391,67392]" dest="&quot;: &quot; [81815,81816]"/>
  <match src="): ) [83575,83576]" dest="): ) [72397,72398]"/>
  <match src="primitive_type [32459,32466]" dest="primitive_type [48937,48944]"/>
  <match src="parameter [34689,34701]" dest="parameter [51167,51179]"/>
  <match src="comment: // XXX Currently there is no better way to check if there is a contract in an address [88717,88802]" dest="comment: // XXX Currently there is no better way to check if there is a contract in an address [74384,74469]"/>
  <match src="uint256: uint256 [83106,83113]" dest="uint256: uint256 [83132,83139]"/>
  <match src="identifier: i [34942,34943]" dest="identifier: i [51420,51421]"/>
  <match src="returns: returns [12832,12839]" dest="returns: returns [23359,23366]"/>
  <match src="bytes: bytes [34767,34772]" dest="bytes: bytes [51245,51250]"/>
  <match src="call_argument [31984,32008]" dest="call_argument [48462,48486]"/>
  <match src="parameter [103094,103108]" dest="parameter [39099,39113]"/>
  <match src="type_name [54592,54599]" dest="type_name [20684,20691]"/>
  <match src="identifier: account [103846,103853]" dest="identifier: account [39851,39858]"/>
  <match src="array_access [105874,105922]" dest="array_access [41879,41927]"/>
  <match src="string_literal [87435,87444]" dest="string_literal [79254,79261]"/>
  <match src="type_name [43628,43635]" dest="type_name [12209,12216]"/>
  <match src="uint256: uint256 [2379,2386]" dest="uint256: uint256 [2379,2386]"/>
  <match src="identifier: D256 [8300,8304]" dest="identifier: D256 [8300,8304]"/>
  <match src="uint256: uint256 [72287,72294]" dest="uint256: uint256 [70910,70917]"/>
  <match src="variable_declaration [37071,37080]" dest="variable_declaration [53549,53558]"/>
  <match src="primitive_type [104633,104640]" dest="primitive_type [40638,40645]"/>
  <match src="member_expression [104805,104845]" dest="member_expression [40810,40850]"/>
  <match src="identifier: epoch [106833,106838]" dest="identifier: epoch [42838,42843]"/>
  <match src="pure: pure [5445,5449]" dest="pure: pure [5445,5449]"/>
  <match src="identifier: _state [106435,106441]" dest="identifier: _state [42440,42446]"/>
  <match src="&quot;: &quot; [109996,109997]" dest="&quot;: &quot; [69772,69773]"/>
  <match src="member_expression [102899,102913]" dest="member_expression [38904,38918]"/>
  <match src="}: } [100865,100866]" dest="}: } [36870,36871]"/>
  <match src="visibility [95094,95100]" dest="visibility [31099,31105]"/>
  <match src="function_body [47948,47991]" dest="function_body [16529,16572]"/>
  <match src="identifier: balance [103630,103637]" dest="identifier: balance [39635,39642]"/>
  <match src="identifier: a [2342,2343]" dest="identifier: a [2342,2343]"/>
  <match src="type_name [83148,83155]" dest="type_name [78470,78477]"/>
  <match src="&gt;&gt;: &gt;&gt; [38450,38452]" dest="&gt;&gt;: &gt;&gt; [54928,54930]"/>
  <match src="identifier: amount [78193,78199]" dest="identifier: amount [57005,57011]"/>
  <match src="binary_expression [97523,97549]" dest="binary_expression [33528,33554]"/>
  <match src="identifier: debt [102759,102763]" dest="identifier: debt [38764,38768]"/>
  <match src="identifier: amount [104289,104295]" dest="identifier: amount [40294,40300]"/>
  <match src="function: function [45639,45647]" dest="function: function [14220,14228]"/>
  <match src="primitive_type [35836,35843]" dest="primitive_type [52314,52321]"/>
  <match src="emit_statement [85579,85640]" dest="emit_statement [72751,72806]"/>
  <match src="parameter [48724,48731]" dest="parameter [17305,17312]"/>
  <match src="return_statement [98528,98656]" dest="return_statement [34533,34661]"/>
  <match src="(: ( [30645,30646]" dest="(: ( [47123,47124]"/>
  <match src="visibility [45000,45007]" dest="visibility [13581,13588]"/>
  <match src="call_argument [32700,32724]" dest="call_argument [49178,49202]"/>
  <match src="]: ] [107828,107829]" dest="]: ] [43833,43834]"/>
  <match src="primitive_type [55620,55627]" dest="primitive_type [21712,21719]"/>
  <match src="uint256: uint256 [68700,68707]" dest="uint256: uint256 [79285,79292]"/>
  <match src="function_definition [95857,95949]" dest="function_definition [31862,31954]"/>
  <match src="identifier: amount [17482,17488]" dest="identifier: amount [57239,57245]"/>
  <match src="identifier: accounts [97408,97416]" dest="identifier: accounts [33413,33421]"/>
  <match src="type_name [90158,90165]" dest="type_name [28585,28592]"/>
  <match src="array_access [99837,99865]" dest="array_access [35842,35870]"/>
  <match src="event_paramater [83017,83030]" dest="event_paramater [70994,71007]"/>
  <match src="=: = [103542,103543]" dest="=: = [39547,39548]"/>
  <match src="}: } [83503,83504]" dest="}: } [71512,71513]"/>
  <match src="identifier: impl [100929,100933]" dest="identifier: impl [36934,36938]"/>
  <match src="identifier: result [34780,34786]" dest="identifier: result [51258,51264]"/>
  <match src="identifier: accounts [108345,108353]" dest="identifier: accounts [44350,44358]"/>
  <match src="identifier: approve [55056,55063]" dest="identifier: approve [21148,21155]"/>
  <match src="call_expression [75685,75720]" dest="call_expression [67665,67679]"/>
  <match src="(: ( [75704,75705]" dest="(: ( [67677,67678]"/>
  <match src="}: } [11248,11249]" dest="}: } [11248,11249]"/>
  <match src="type_name [56228,56235]" dest="type_name [22320,22327]"/>
  <match src="call_expression [20939,21010]" dest="call_expression [57023,57101]"/>
  <match src="}: } [8722,8723]" dest="}: } [8722,8723]"/>
  <match src="private: private [24543,24550]" dest="private: private [59723,59730]"/>
  <match src="identifier: value [47344,47349]" dest="identifier: value [15925,15930]"/>
  <match src="identifier: dollar [83875,83881]" dest="identifier: dollar [71605,71611]"/>
  <match src="internal: internal [45886,45894]" dest="internal: internal [14467,14475]"/>
  <match src="returns: returns [99593,99600]" dest="returns: returns [35598,35605]"/>
  <match src="return: return [96564,96570]" dest="return: return [32569,32575]"/>
  <match src="call_expression [107801,107848]" dest="call_expression [43806,43853]"/>
  <match src="internal: internal [10686,10694]" dest="internal: internal [10686,10694]"/>
  <match src="identifier: FILE [109311,109315]" dest="identifier: FILE [69087,69091]"/>
  <match src="(: ( [84233,84234]" dest="(: ( [66668,66669]"/>
  <match src="pure: pure [7201,7205]" dest="pure: pure [7201,7205]"/>
  <match src="): ) [9814,9815]" dest="): ) [9814,9815]"/>
  <match src="address: address [109676,109683]" dest="address: address [69452,69459]"/>
  <match src="parameter [1007,1014]" dest="parameter [1007,1014]"/>
  <match src=",: , [56736,56737]" dest=",: , [22828,22829]"/>
  <match src="): ) [54730,54731]" dest="): ) [20822,20823]"/>
  <match src="identifier: amount [21656,21662]" dest="identifier: amount [59653,59659]"/>
  <match src="parameter [55273,55277]" dest="parameter [21365,21369]"/>
  <match src="[: [ [97871,97872]" dest="[: [ [33876,33877]"/>
  <match src="identifier: D256 [8871,8875]" dest="identifier: D256 [8871,8875]"/>
  <match src="{: { [101000,101001]" dest="{: { [37005,37006]"/>
  <match src=".: . [60768,60769]" dest=".: . [83557,83558]"/>
  <match src="member_expression [74558,74595]" dest="member_expression [59320,59374]"/>
  <match src="comment: // ============ Static Functions ============ [6658,6703]" dest="comment: // ============ Static Functions ============ [6658,6703]"/>
  <match src="yul_identifier [35400,35406]" dest="yul_identifier [51878,51884]"/>
  <match src=".: . [104209,104210]" dest=".: . [40214,40215]"/>
  <match src="parameter [64873,64880]" dest="parameter [27662,27669]"/>
  <match src="member_expression [99047,99086]" dest="member_expression [35052,35091]"/>
  <match src="member_expression [9586,9593]" dest="member_expression [9586,9593]"/>
  <match src="member_expression [100255,100272]" dest="member_expression [36260,36277]"/>
  <match src="]: ] [99879,99880]" dest="]: ] [35884,35885]"/>
  <match src="type_name [106962,106969]" dest="type_name [42967,42974]"/>
  <match src="primitive_type [97652,97659]" dest="primitive_type [33657,33664]"/>
  <match src="uint256: uint256 [7613,7620]" dest="uint256: uint256 [7613,7620]"/>
  <match src="primitive_type [99763,99770]" dest="primitive_type [35768,35775]"/>
  <match src="struct_member [90269,90289]" dest="struct_member [28696,28716]"/>
  <match src="identifier: newImplementation [93325,93342]" dest="identifier: newImplementation [76678,76695]"/>
  <match src="{: { [90318,90319]" dest="{: { [28745,28746]"/>
  <match src="(: ( [84160,84161]" dest="(: ( [71883,71884]"/>
  <match src="identifier: accounts [104158,104166]" dest="identifier: accounts [40163,40171]"/>
  <match src="external: external [54670,54678]" dest="external: external [20762,20770]"/>
  <match src="binary_expression [36401,36407]" dest="binary_expression [52879,52885]"/>
  <match src=".: . [105159,105160]" dest=".: . [41164,41165]"/>
  <match src="call_expression [86350,86407]" dest="call_expression [72963,73006]"/>
  <match src="function_body [103292,103384]" dest="function_body [39297,39389]"/>
  <match src="(: ( [47342,47343]" dest="(: ( [15923,15924]"/>
  <match src="!=: != [109749,109751]" dest="!=: != [69525,69527]"/>
  <match src="type_name [55338,55345]" dest="type_name [21430,21437]"/>
  <match src="internal: internal [31826,31834]" dest="internal: internal [48304,48312]"/>
  <match src="bool: bool [9906,9910]" dest="bool: bool [9906,9910]"/>
  <match src="identifier: self [10000,10004]" dest="identifier: self [10000,10004]"/>
  <match src="address: address [56889,56896]" dest="address: address [22981,22988]"/>
  <match src="primitive_type [44902,44909]" dest="primitive_type [13483,13490]"/>
  <match src="(: ( [20761,20762]" dest="(: ( [64398,64399]"/>
  <match src="type_name [72236,72243]" dest="type_name [65888,65895]"/>
  <match src=".: . [99384,99385]" dest=".: . [35389,35390]"/>
  <match src="(: ( [103093,103094]" dest="(: ( [39098,39099]"/>
  <match src="uint: uint [55897,55901]" dest="uint: uint [21989,21993]"/>
  <match src="parameter [96325,96332]" dest="parameter [32330,32337]"/>
  <match src="call_expression [107399,107447]" dest="call_expression [43404,43452]"/>
  <match src="}: } [99676,99677]" dest="}: } [35681,35682]"/>
  <match src="call_expression [106233,106240]" dest="call_expression [42238,42245]"/>
  <match src="identifier: Decimal [48322,48329]" dest="identifier: Decimal [16903,16910]"/>
  <match src="identifier: slot [93868,93872]" dest="identifier: slot [77221,77225]"/>
  <match src="type_name [103772,103779]" dest="type_name [39777,39784]"/>
  <match src="parameter [29420,29432]" dest="parameter [45898,45910]"/>
  <match src="primitive_type [100050,100057]" dest="primitive_type [36055,36062]"/>
  <match src="parameter [100794,100798]" dest="parameter [36799,36803]"/>
  <match src="comment: // File: @openzeppelin/contracts/token/ERC20/ERC20Burnable.sol [23607,23669]" dest="comment: // File: contracts/dao/Setters.sol [37064,37098]"/>
  <match src="): ) [84463,84464]" dest="): ) [72064,72065]"/>
  <match src="function: function [9834,9842]" dest="function: function [9834,9842]"/>
  <match src="return_type_definition [95992,96009]" dest="return_type_definition [31997,32014]"/>
  <match src="member_expression [8159,8173]" dest="member_expression [8159,8173]"/>
  <match src="function: function [56187,56195]" dest="function: function [22279,22287]"/>
  <match src=".: . [33400,33401]" dest=".: . [49878,49879]"/>
  <match src="&quot;: &quot; [51157,51158]" dest="&quot;: &quot; [56642,56643]"/>
  <match src=".: . [107427,107428]" dest=".: . [43432,43433]"/>
  <match src="identifier: epoch [98846,98851]" dest="identifier: epoch [34851,34856]"/>
  <match src="identifier: D256 [6801,6805]" dest="identifier: D256 [6801,6805]"/>
  <match src="identifier: amount [102790,102796]" dest="identifier: amount [38795,38801]"/>
  <match src="user_defined_type [8785,8789]" dest="user_defined_type [8785,8789]"/>
  <match src="type_name [45085,45092]" dest="type_name [13666,13673]"/>
  <match src="call_expression [9340,9388]" dest="call_expression [9340,9388]"/>
  <match src="call_expression [10736,10756]" dest="call_expression [10736,10756]"/>
  <match src="function: function [96503,96511]" dest="function: function [32508,32516]"/>
  <match src="(: ( [30812,30813]" dest="(: ( [47290,47291]"/>
  <match src="parameter [95894,95901]" dest="parameter [31899,31906]"/>
  <match src="member_expression [105153,105168]" dest="member_expression [41158,41173]"/>
  <match src="memory: memory [8991,8997]" dest="memory: memory [8991,8997]"/>
  <match src="): ) [96521,96522]" dest="): ) [32526,32527]"/>
  <match src="type_name [2679,2686]" dest="type_name [2679,2686]"/>
  <match src="internal: internal [9695,9703]" dest="internal: internal [9695,9703]"/>
  <match src="bool: bool [102156,102160]" dest="bool: bool [38161,38165]"/>
  <match src="{: { [95130,95131]" dest="{: { [31135,31136]"/>
  <match src="expression_statement [104805,104901]" dest="expression_statement [40810,40906]"/>
  <match src="function: function [7563,7571]" dest="function: function [7563,7571]"/>
  <match src="identifier: amount [107919,107925]" dest="identifier: amount [43924,43930]"/>
  <match src="user_defined_type [90877,90881]" dest="user_defined_type [29304,29308]"/>
  <match src=",: , [34266,34267]" dest=",: , [50744,50745]"/>
  <match src=".: . [95834,95835]" dest=".: . [31839,31840]"/>
  <match src="address: address [95515,95522]" dest="address: address [31520,31527]"/>
  <match src="visibility [96194,96200]" dest="visibility [32199,32205]"/>
  <match src="identifier: expiration [106340,106350]" dest="identifier: expiration [42345,42355]"/>
  <match src="identifier: Decimal [94783,94790]" dest="identifier: Decimal [30788,30795]"/>
  <match src=".: . [104486,104487]" dest=".: . [40491,40492]"/>
  <match src="binary_expression [10205,10228]" dest="binary_expression [10205,10228]"/>
  <match src="array_access [99356,99396]" dest="array_access [35361,35401]"/>
  <match src="comment: /**  * Based off of, and designed to interface with, openzeppelin/upgrades package  */ [92323,92411]" dest="comment: /**  * Based off of, and designed to interface with, openzeppelin/upgrades package  */ [75676,75764]"/>
  <match src="array_access [38243,38261]" dest="array_access [54721,54739]"/>
  <match src="contract_declaration [101771,108529]" dest="contract_declaration [37776,44534]"/>
  <match src="identifier: reason [93315,93321]" dest="identifier: reason [76668,76674]"/>
  <match src="[: [ [105977,105978]" dest="[: [ [41982,41983]"/>
  <match src="string [85949,85978]" dest="string [80297,80312]"/>
  <match src=",: , [32888,32889]" dest=",: , [49366,49367]"/>
  <match src="(: ( [31691,31692]" dest="(: ( [48169,48170]"/>
  <match src="expression_statement [109704,109840]" dest="expression_statement [69480,69616]"/>
  <match src="(: ( [54510,54511]" dest="(: ( [20602,20603]"/>
  <match src="}: } [91510,91511]" dest="}: } [29937,29938]"/>
  <match src="identifier: Provide [86594,86601]" dest="identifier: Commit [81087,81093]"/>
  <match src="memory: memory [34773,34779]" dest="memory: memory [51251,51257]"/>
  <match src="identifier: amount [104673,104679]" dest="identifier: amount [40678,40684]"/>
  <match src="(: ( [1006,1007]" dest="(: ( [1006,1007]"/>
  <match src="identifier: stringify [30269,30278]" dest="identifier: stringify [46747,46756]"/>
  <match src="=: = [38446,38447]" dest="=: = [54924,54925]"/>
  <match src="identifier: ASCII_RELATIVE_ZERO [38805,38824]" dest="identifier: ASCII_RELATIVE_ZERO [55283,55302]"/>
  <match src="[: [ [98057,98058]" dest="[: [ [34062,34063]"/>
  <match src=",: , [13628,13629]" dest=",: , [24155,24156]"/>
  <match src="return_type_definition [48610,48627]" dest="return_type_definition [17191,17208]"/>
  <match src="function: function [48566,48574]" dest="function: function [17147,17155]"/>
  <match src="primitive_type [107892,107899]" dest="primitive_type [43897,43904]"/>
  <match src="identifier: start [90358,90363]" dest="identifier: start [28785,28790]"/>
  <match src="(: ( [48698,48699]" dest="(: ( [17279,17280]"/>
  <match src=".: . [7960,7961]" dest=".: . [7960,7961]"/>
  <match src="primitive_type [50337,50344]" dest="primitive_type [57604,57611]"/>
  <match src="=: = [34787,34788]" dest="=: = [51265,51266]"/>
  <match src="array_access [104701,104740]" dest="array_access [40706,40745]"/>
  <match src="comment: /* Governance */ [44368,44384]" dest="comment: /* Governance */ [12949,12965]"/>
  <match src="return_type_definition [10959,10976]" dest="return_type_definition [10959,10976]"/>
  <match src="{: { [104410,104411]" dest="{: { [40415,40416]"/>
  <match src="=: = [69331,69332]" dest="=: = [67118,67119]"/>
  <match src="parameter [54819,54824]" dest="parameter [20911,20916]"/>
  <match src="identifier: newUniv2 [83214,83222]" dest="identifier: block [83125,83130]"/>
  <match src="}: } [105411,105412]" dest="}: } [41416,41417]"/>
  <match src="]: ] [105959,105960]" dest="]: ] [41964,41965]"/>
  <match src="&quot;: &quot; [1500,1501]" dest="&quot;: &quot; [1500,1501]"/>
  <match src="visibility [45093,45100]" dest="visibility [13674,13681]"/>
  <match src="(: ( [99162,99163]" dest="(: ( [35167,35168]"/>
  <match src="identifier: dollar [90989,90995]" dest="identifier: dollar [29416,29422]"/>
  <match src="address: address [106943,106950]" dest="address: address [42948,42955]"/>
  <match src="identifier: GOVERNANCE_PERIOD [46754,46771]" dest="identifier: GOVERNANCE_PERIOD [15335,15352]"/>
  <match src="return: return [102060,102066]" dest="return: return [38065,38071]"/>
  <match src="primitive_type [32434,32441]" dest="primitive_type [48912,48919]"/>
  <match src="identifier: COUPON_EXPIRATION [47966,47983]" dest="identifier: COUPON_EXPIRATION [16547,16564]"/>
  <match src="primitive_type [10876,10883]" dest="primitive_type [10876,10883]"/>
  <match src="state_variable_declaration [43984,44038]" dest="state_variable_declaration [12565,12619]"/>
  <match src="(: ( [961,962]" dest="(: ( [961,962]"/>
  <match src="internal: internal [48446,48454]" dest="internal: internal [17027,17035]"/>
  <match src="): ) [105453,105454]" dest="): ) [41458,41459]"/>
  <match src="type_name [83249,83256]" dest="type_name [71286,71293]"/>
  <match src="parameter [7220,7231]" dest="parameter [7220,7231]"/>
  <match src="{: { [9090,9091]" dest="{: { [9090,9091]"/>
  <match src="return_type_definition [55102,55116]" dest="return_type_definition [21194,21208]"/>
  <match src="uint256: uint256 [98154,98161]" dest="uint256: uint256 [34159,34166]"/>
  <match src="parameter [10851,10865]" dest="parameter [10851,10865]"/>
  <match src="identifier: Decimal [48361,48368]" dest="identifier: Decimal [16942,16949]"/>
  <match src="primitive_type [54947,54951]" dest="primitive_type [21039,21043]"/>
  <match src=",: , [53103,53104]" dest=",: , [56201,56202]"/>
  <match src="identifier: i [35206,35207]" dest="identifier: i [51684,51685]"/>
  <match src="return: return [96345,96351]" dest="return: return [32350,32356]"/>
  <match src="return_type_definition [56280,56351]" dest="return_type_definition [22372,22443]"/>
  <match src="emit_statement [83754,83787]" dest="emit_statement [71748,71781]"/>
  <match src="string_literal [84635,84670]" dest="string_literal [72208,72246]"/>
  <match src="(: ( [37538,37539]" dest="(: ( [54016,54017]"/>
  <match src="(: ( [1890,1891]" dest="(: ( [1890,1891]"/>
  <match src="parameter [101990,102007]" dest="parameter [37995,38012]"/>
  <match src="type_name [8785,8789]" dest="type_name [8785,8789]"/>
  <match src="(: ( [55688,55689]" dest="(: ( [21780,21781]"/>
  <match src="call_argument [93431,93437]" dest="call_argument [76784,76790]"/>
  <match src="identifier: mint [81235,81239]" dest="identifier: mint [60069,60073]"/>
  <match src="parameter [108097,108112]" dest="parameter [44102,44117]"/>
  <match src="=: = [104934,104935]" dest="=: = [40939,40940]"/>
  <match src="parameter [8300,8311]" dest="parameter [8300,8311]"/>
  <match src="type_name [29049,29056]" dest="type_name [45527,45534]"/>
  <match src="call_argument [106150,106151]" dest="call_argument [42155,42156]"/>
  <match src="{: { [48837,48838]" dest="{: { [17418,17419]"/>
  <match src="}: } [47876,47877]" dest="}: } [16457,16458]"/>
  <match src="): ) [6818,6819]" dest="): ) [6818,6819]"/>
  <match src="event_paramater [15029,15049]" dest="event_paramater [25556,25576]"/>
  <match src="revert_statement [29531,29795]" dest="revert_statement [46009,46273]"/>
  <match src="state_mutability [7649,7653]" dest="state_mutability [7649,7653]"/>
  <match src="return_type_definition [9719,9740]" dest="return_type_definition [9719,9740]"/>
  <match src="visibility [77342,77350]" dest="visibility [66118,66126]"/>
  <match src="function_definition [55123,55189]" dest="function_definition [21215,21281]"/>
  <match src="function_body [10187,10236]" dest="function_body [10187,10236]"/>
  <match src="&quot;: &quot; [85818,85819]" dest="&quot;: &quot; [81279,81280]"/>
  <match src="identifier: self [8618,8622]" dest="identifier: self [8618,8622]"/>
  <match src="variable_declaration [93860,93872]" dest="variable_declaration [77213,77225]"/>
  <match src="state_mutability [99006,99010]" dest="state_mutability [35011,35015]"/>
  <match src="function_definition [56243,56352]" dest="function_definition [22335,22444]"/>
  <match src="assignment_expression [106729,106808]" dest="assignment_expression [42734,42813]"/>
  <match src="indexed: indexed [82928,82935]" dest="indexed: indexed [83187,83194]"/>
  <match src="call_argument [100565,100574]" dest="call_argument [36570,36579]"/>
  <match src="): ) [102796,102797]" dest="): ) [38801,38802]"/>
  <match src="type_name [1964,1971]" dest="type_name [1964,1971]"/>
  <match src="primitive_type [15266,15273]" dest="primitive_type [25793,25800]"/>
  <match src="primitive_type [96109,96116]" dest="primitive_type [32114,32121]"/>
  <match src="(: ( [100554,100555]" dest="(: ( [36559,36560]"/>
  <match src=".: . [8931,8932]" dest=".: . [8931,8932]"/>
  <match src="address: address [15266,15273]" dest="address: address [25793,25800]"/>
  <match src="returns: returns [56053,56060]" dest="returns: returns [22145,22152]"/>
  <match src="}: } [9386,9387]" dest="}: } [9386,9387]"/>
  <match src="function: function [95857,95865]" dest="function: function [31862,31870]"/>
  <match src="visibility [45296,45303]" dest="visibility [13877,13884]"/>
  <match src="returns: returns [95992,95999]" dest="returns: returns [31997,32004]"/>
  <match src="identifier: stringifyTruncated [31373,31391]" dest="identifier: stringifyTruncated [47851,47869]"/>
  <match src="if_statement [33955,34524]" dest="if_statement [50433,51002]"/>
  <match src="type_name [7668,7672]" dest="type_name [7668,7672]"/>
  <match src="member_expression [85324,85334]" dest="member_expression [63409,63419]"/>
  <match src="type_name [99127,99134]" dest="type_name [35132,35139]"/>
  <match src="}: } [103202,103203]" dest="}: } [39207,39208]"/>
  <match src="call_expression [109945,109961]" dest="call_expression [69721,69737]"/>
  <match src="identifier: start [83010,83015]" dest="identifier: start [70987,70992]"/>
  <match src="identifier: bootstrappingAt [99550,99565]" dest="identifier: bootstrappingAt [35555,35570]"/>
  <match src="solidity_version: 0.5.17 [71,77]" dest="solidity_version: 0.5.17 [71,77]"/>
  <match src="view: view [97977,97981]" dest="view: view [33982,33986]"/>
  <match src="identifier: initialize [56869,56879]" dest="identifier: initialize [22961,22971]"/>
  <match src="using: using [82491,82496]" dest="using: using [70638,70643]"/>
  <match src="primitive_type [80864,80871]" dest="primitive_type [66703,66710]"/>
  <match src="member_expression [103130,103144]" dest="member_expression [39135,39149]"/>
  <match src=".: . [105481,105482]" dest=".: . [41486,41487]"/>
  <match src="function: function [104312,104320]" dest="function: function [40317,40325]"/>
  <match src="return_type_definition [100081,100098]" dest="return_type_definition [36086,36103]"/>
  <match src="parameter [104650,104663]" dest="parameter [40655,40668]"/>
  <match src="(: ( [108248,108249]" dest="(: ( [44253,44254]"/>
  <match src="): ) [30377,30378]" dest="): ) [46855,46856]"/>
  <match src="): ) [69403,69404]" dest="): ) [67144,67145]"/>
  <match src="visibility [55315,55323]" dest="visibility [21407,21415]"/>
  <match src="identifier: amount0 [55649,55656]" dest="identifier: amount0 [21741,21748]"/>
  <match src="(: ( [48802,48803]" dest="(: ( [17383,17384]"/>
  <match src="internal: internal [29470,29478]" dest="internal: internal [45948,45956]"/>
  <match src="call_argument [31588,31594]" dest="call_argument [48066,48072]"/>
  <match src="identifier: value [46615,46620]" dest="identifier: value [15196,15201]"/>
  <match src="comment: // put the input bytes into the result [34719,34757]" dest="comment: // put the input bytes into the result [51197,51235]"/>
  <match src="&quot;: &quot; [20822,20823]" dest="&quot;: &quot; [64467,64468]"/>
  <match src="type_name [106332,106339]" dest="type_name [42337,42344]"/>
  <match src="call_argument [84557,84567]" dest="call_argument [73166,73176]"/>
  <match src="parameter [7040,7051]" dest="parameter [7040,7051]"/>
  <match src="variable_declaration [85147,85166]" dest="variable_declaration [62315,62335]"/>
  <match src="contract_declaration [64712,64885]" dest="contract_declaration [27501,27674]"/>
  <match src="constant: constant [45156,45164]" dest="constant: constant [13737,13745]"/>
  <match src="struct_member [90185,90230]" dest="struct_member [28612,28657]"/>
  <match src="binary_expression [38411,38428]" dest="binary_expression [54889,54906]"/>
  <match src="internal: internal [27830,27838]" dest="internal: internal [58871,58879]"/>
  <match src="uint256: uint256 [44122,44129]" dest="uint256: uint256 [12703,12710]"/>
  <match src="string [20103,20142]" dest="string [71160,71181]"/>
  <match src="&quot;: &quot; [27459,27460]" dest="&quot;: &quot; [72736,72737]"/>
  <match src="type_name [66670,66677]" dest="type_name [78387,78394]"/>
  <match src="update_expression [37094,37097]" dest="update_expression [53572,53575]"/>
  <match src="(: ( [98235,98236]" dest="(: ( [34240,34241]"/>
  <match src="identifier: b [8666,8667]" dest="identifier: b [8666,8667]"/>
  <match src="(: ( [84033,84034]" dest="(: ( [60164,60165]"/>
  <match src="function_definition [106280,106497]" dest="function_definition [42285,42502]"/>
  <match src="primitive_type [90399,90406]" dest="primitive_type [28826,28833]"/>
  <match src="string_literal [109318,109330]" dest="string_literal [69094,69106]"/>
  <match src="returns: returns [97982,97989]" dest="returns: returns [33987,33994]"/>
  <match src="(: ( [87168,87169]" dest="(: ( [78647,78648]"/>
  <match src="type_name [73588,73595]" dest="type_name [56093,56100]"/>
  <match src="parameter [46845,46852]" dest="parameter [15426,15433]"/>
  <match src="return: return [97849,97855]" dest="return: return [33854,33860]"/>
  <match src="call_argument [36938,36952]" dest="call_argument [53416,53430]"/>
  <match src="identifier: account [104437,104444]" dest="identifier: account [40442,40449]"/>
  <match src="user_defined_type [8409,8413]" dest="user_defined_type [8409,8413]"/>
  <match src="identifier: self [10215,10219]" dest="identifier: self [10215,10219]"/>
  <match src="address: address [74577,74584]" dest="address: address [59339,59346]"/>
  <match src="=: = [8657,8658]" dest="=: = [8657,8658]"/>
  <match src=".: . [8622,8623]" dest=".: . [8622,8623]"/>
  <match src="function: function [8195,8203]" dest="function: function [8195,8203]"/>
  <match src="parameter [54755,54768]" dest="parameter [20847,20860]"/>
  <match src="identifier: D256 [47338,47342]" dest="identifier: D256 [15919,15923]"/>
  <match src="uint256: uint256 [75731,75738]" dest="uint256: uint256 [67588,67595]"/>
  <match src="identifier: value [8164,8169]" dest="identifier: value [8164,8169]"/>
  <match src="user_defined_type [91322,91330]" dest="user_defined_type [29749,29757]"/>
  <match src="(: ( [74564,74565]" dest="(: ( [59326,59327]"/>
  <match src="string_literal [23040,23076]" dest="string_literal [64094,64138]"/>
  <match src="(: ( [88636,88637]" dest="(: ( [74303,74304]"/>
  <match src="bool: bool [14831,14835]" dest="bool: bool [25358,25362]"/>
  <match src="call_argument [78742,78748]" dest="call_argument [18904,18910]"/>
  <match src="identifier: amount [105824,105830]" dest="identifier: amount [41829,41835]"/>
  <match src="identifier: reason [31475,31481]" dest="identifier: reason [47953,47959]"/>
  <match src="(: ( [54692,54693]" dest="(: ( [20784,20785]"/>
  <match src="array_access [104805,104825]" dest="array_access [40810,40830]"/>
  <match src="(: ( [107132,107133]" dest="(: ( [43137,43138]"/>
  <match src="boolean_literal [67925,67930]" dest="boolean_literal [82045,82050]"/>
  <match src="comment: // ============ Constants ============ [6475,6513]" dest="comment: // ============ Constants ============ [6475,6513]"/>
  <match src="primitive_type [36881,36885]" dest="primitive_type [53359,53363]"/>
  <match src="private: private [16686,16693]" dest="private: private [66897,66904]"/>
  <match src="=: = [44794,44795]" dest="=: = [13375,13376]"/>
  <match src="event_definition [101848,101920]" dest="event_definition [37853,37925]"/>
  <match src="function: function [10107,10115]" dest="function: function [10107,10115]"/>
  <match src="primitive_type [99127,99134]" dest="primitive_type [35132,35139]"/>
  <match src="call_struct_argument [46046,46066]" dest="call_struct_argument [14627,14647]"/>
  <match src="internal: internal [8076,8084]" dest="internal: internal [8076,8084]"/>
  <match src="{: { [46283,46284]" dest="{: { [14864,14865]"/>
  <match src=".: . [7722,7723]" dest=".: . [7722,7723]"/>
  <match src="): ) [52146,52147]" dest="): ) [26781,26782]"/>
  <match src="type_name [109399,109406]" dest="type_name [69175,69182]"/>
  <match src="identifier: require [26571,26578]" dest="identifier: decrementRejectFor [79539,79557]"/>
  <match src="address: address [43800,43807]" dest="address: address [12381,12388]"/>
  <match src="primitive_type [33185,33189]" dest="primitive_type [49663,49667]"/>
  <match src="parameter [10292,10305]" dest="parameter [10292,10305]"/>
  <match src="identifier: D256 [10292,10296]" dest="identifier: D256 [10292,10296]"/>
  <match src="(: ( [37070,37071]" dest="(: ( [53548,53549]"/>
  <match src="state_mutability [8281,8285]" dest="state_mutability [8281,8285]"/>
  <match src="identifier: D256 [8145,8149]" dest="identifier: D256 [8145,8149]"/>
  <match src="identifier: lessPhantom [85489,85500]" dest="identifier: candidate [80025,80034]"/>
  <match src=".: . [103568,103569]" dest=".: . [39573,39574]"/>
  <match src="&quot;: &quot; [87080,87081]" dest="&quot;: &quot; [59468,59469]"/>
  <match src="]: ] [37864,37865]" dest="]: ] [54342,54343]"/>
  <match src=",: , [55532,55533]" dest=",: , [21624,21625]"/>
  <match src="identifier: Decimal [94771,94778]" dest="identifier: Decimal [30776,30783]"/>
  <match src="&quot;: &quot; [26339,26340]" dest="&quot;: &quot; [78901,78902]"/>
  <match src="identifier: mul [11007,11010]" dest="identifier: mul [11007,11010]"/>
  <match src="identifier: mul [8013,8016]" dest="identifier: mul [8013,8016]"/>
  <match src=".: . [97015,97016]" dest=".: . [33020,33021]"/>
  <match src="identifier: numerator [11011,11020]" dest="identifier: numerator [11011,11020]"/>
  <match src="): ) [30976,30977]" dest="): ) [47454,47455]"/>
  <match src="type_name [14416,14420]" dest="type_name [24943,24947]"/>
  <match src=".: . [99644,99645]" dest=".: . [35649,35650]"/>
  <match src="function: function [37520,37528]" dest="function: function [53998,54006]"/>
  <match src="parameter [9214,9227]" dest="parameter [9214,9227]"/>
  <match src="identifier: sender [83954,83960]" dest="identifier: sender [72565,72571]"/>
  <match src="expression_statement [27378,27462]" dest="expression_statement [72668,72739]"/>
  <match src="primitive_type [38791,38796]" dest="primitive_type [55269,55274]"/>
  <match src="type_name [50313,50320]" dest="type_name [72345,72352]"/>
  <match src="primitive_type [1429,1436]" dest="primitive_type [1429,1436]"/>
  <match src="view: view [55458,55462]" dest="view: view [21550,21554]"/>
  <match src="identifier: coupons [90606,90613]" dest="identifier: coupons [29033,29040]"/>
  <match src="array_access [100677,100705]" dest="array_access [36682,36710]"/>
  <match src="primitive_type [68833,68837]" dest="primitive_type [68052,68056]"/>
  <match src="identifier: msg [83659,83662]" dest="identifier: msg [71677,71680]"/>
  <match src="identifier: debt [96257,96261]" dest="identifier: debt [32262,32266]"/>
  <match src="identifier: balanceCheck [86562,86574]" dest="identifier: balanceCheck [56901,56913]"/>
  <match src="primitive_type [107527,107533]" dest="primitive_type [43532,43538]"/>
  <match src="call_argument [10364,10368]" dest="call_argument [10364,10368]"/>
  <match src="type_name [96109,96116]" dest="type_name [32114,32121]"/>
  <match src="type_name [72261,72268]" dest="type_name [71009,71016]"/>
  <match src="address: address [99914,99921]" dest="address: address [35919,35926]"/>
  <match src=",: , [93942,93943]" dest=",: , [77295,77296]"/>
  <match src="): ) [84378,84379]" dest="): ) [72004,72005]"/>
  <match src="identifier: Upgraded [92943,92951]" dest="identifier: Upgraded [76296,76304]"/>
  <match src="}: } [6817,6818]" dest="}: } [6817,6818]"/>
  <match src="parameter [1913,1939]" dest="parameter [1913,1939]"/>
  <match src="identifier: totalSupply [96932,96943]" dest="identifier: totalSupply [32937,32948]"/>
  <match src="identifier: offset [45978,45984]" dest="identifier: offset [14559,14565]"/>
  <match src="contract_body [90318,90624]" dest="contract_body [28745,29051]"/>
  <match src="primitive_type [44594,44601]" dest="primitive_type [13175,13182]"/>
  <match src="): ) [13677,13678]" dest="): ) [24204,24205]"/>
  <match src="uint256: uint256 [85147,85154]" dest="uint256: uint256 [62315,62322]"/>
  <match src="[: [ [107586,107587]" dest="[: [ [43591,43592]"/>
  <match src="]: ] [100704,100705]" dest="]: ] [36709,36710]"/>
  <match src=".: . [103317,103318]" dest=".: . [39322,39323]"/>
  <match src="identifier: that [50959,50963]" dest="identifier: that [62965,62969]"/>
  <match src="(: ( [29537,29538]" dest="(: ( [46015,46016]"/>
  <match src="while_statement [35861,35933]" dest="while_statement [52339,52411]"/>
  <match src=".: . [51080,51081]" dest=".: . [71085,71086]"/>
  <match src="}: } [96056,96057]" dest="}: } [32061,32062]"/>
  <match src="comment: /**      * @dev Sets the implementation address of the proxy.      * @param newImplementation Address of the new implementation.      */ [93500,93639]" dest="comment: /**      * @dev Sets the implementation address of the proxy.      * @param newImplementation Address of the new implementation.      */ [76853,76992]"/>
  <match src="type_name [7834,7840]" dest="type_name [7834,7840]"/>
  <match src="function_definition [10537,10641]" dest="function_definition [10537,10641]"/>
  <match src="call_argument [98639,98654]" dest="call_argument [34644,34659]"/>
  <match src="returns: returns [37598,37605]" dest="returns: returns [54076,54083]"/>
  <match src="identifier: reason [29451,29457]" dest="identifier: reason [45929,45935]"/>
  <match src="uint256: uint256 [103094,103101]" dest="uint256: uint256 [39099,39106]"/>
  <match src="parameter [93672,93697]" dest="parameter [77025,77050]"/>
  <match src="constant: constant [43716,43724]" dest="constant: constant [12297,12305]"/>
  <match src="type_name [9214,9218]" dest="type_name [9214,9218]"/>
  <match src="primitive_type [55141,55148]" dest="primitive_type [21233,21240]"/>
  <match src="(: ( [108273,108274]" dest="(: ( [44278,44279]"/>
  <match src="call_argument [10215,10219]" dest="call_argument [10215,10219]"/>
  <match src="identifier: stringifyTruncated [30794,30812]" dest="identifier: stringifyTruncated [47272,47290]"/>
  <match src="(: ( [8646,8647]" dest="(: ( [8646,8647]"/>
  <match src="identifier: transfer [83884,83892]" dest="identifier: transfer [71614,71622]"/>
  <match src="array_access [99981,100009]" dest="array_access [35986,36014]"/>
  <match src="primitive_type [55984,55991]" dest="primitive_type [22076,22083]"/>
  <match src="primitive_type [99954,99961]" dest="primitive_type [35959,35966]"/>
  <match src="return: return [45942,45948]" dest="return: return [14523,14529]"/>
  <match src="pure: pure [6746,6750]" dest="pure: pure [6746,6750]"/>
  <match src="returns: returns [5450,5457]" dest="returns: returns [5450,5457]"/>
  <match src="identifier: D256 [46440,46444]" dest="identifier: D256 [15021,15025]"/>
  <match src="identifier: D256 [7503,7507]" dest="identifier: D256 [7503,7507]"/>
  <match src="parameter [19957,19980]" dest="parameter [18567,18586]"/>
  <match src="user_defined_type [101798,101805]" dest="user_defined_type [37803,37810]"/>
  <match src="type_name [83530,83537]" dest="type_name [71539,71546]"/>
  <match src="identifier: strategy [98476,98484]" dest="identifier: strategy [34481,34489]"/>
  <match src="type_name [56800,56807]" dest="type_name [22892,22899]"/>
  <match src="identifier: to [56634,56636]" dest="identifier: to [22726,22728]"/>
  <match src="(: ( [48321,48322]" dest="(: ( [16902,16903]"/>
  <match src="return_type_definition [55264,55278]" dest="return_type_definition [21356,21370]"/>
  <match src="bool: bool [32391,32395]" dest="bool: bool [48869,48873]"/>
  <match src="call_expression [7733,7744]" dest="call_expression [7733,7744]"/>
  <match src="(: ( [21430,21431]" dest="(: ( [57442,57443]"/>
  <match src="type_name [90486,90493]" dest="type_name [28913,28920]"/>
  <match src="(: ( [30073,30074]" dest="(: ( [46551,46552]"/>
  <match src="): ) [53615,53616]" dest="): ) [64922,64923]"/>
  <match src="}: } [101044,101045]" dest="}: } [37049,37050]"/>
  <match src="for: for [82506,82509]" dest="for: for [70653,70656]"/>
  <match src="primitive_type [77485,77492]" dest="primitive_type [56729,56736]"/>
  <match src="number_literal: 6e16 [45342,45346]" dest="number_literal: 6e16 [13923,13927]"/>
  <match src="primitive_type [8436,8443]" dest="primitive_type [8436,8443]"/>
  <match src="=: = [104183,104184]" dest="=: = [40188,40189]"/>
  <match src="view: view [96201,96205]" dest="view: view [32206,32210]"/>
  <match src=",: , [34422,34423]" dest=",: , [50900,50901]"/>
  <match src="identifier: j [36401,36402]" dest="identifier: j [52879,52880]"/>
  <match src="primitive_type [32486,32493]" dest="primitive_type [48964,48971]"/>
  <match src="identifier: result [36869,36875]" dest="identifier: result [53347,53353]"/>
  <match src="identifier: payloadA [31552,31560]" dest="identifier: payloadA [48030,48038]"/>
  <match src="identifier: div [98600,98603]" dest="identifier: div [34605,34608]"/>
  <match src="[: [ [99998,99999]" dest="[: [ [36003,36004]"/>
  <match src="expression_statement [38444,38455]" dest="expression_statement [54922,54933]"/>
  <match src="function_body [98268,98406]" dest="function_body [34273,34411]"/>
  <match src="array_access [100818,100846]" dest="array_access [36823,36851]"/>
  <match src="uint256: uint256 [99566,99573]" dest="uint256: uint256 [35571,35578]"/>
  <match src="expression_statement [85552,85567]" dest="expression_statement [58713,58728]"/>
  <match src="): ) [38824,38825]" dest="): ) [55302,55303]"/>
  <match src="function_body [102588,102672]" dest="function_body [38593,38677]"/>
  <match src="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [11362,11870]" dest="comment: // File: @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol [20487,20552]"/>
  <match src="identifier: stringifyTruncated [32067,32085]" dest="identifier: stringifyTruncated [48545,48563]"/>
  <match src="memory: memory [95122,95128]" dest="memory: memory [31127,31133]"/>
  <match src="member_expression [48508,48520]" dest="member_expression [17089,17101]"/>
  <match src="return: return [98894,98900]" dest="return: return [34899,34905]"/>
  <match src="parameter [45793,45800]" dest="parameter [14374,14381]"/>
  <match src="state_mutability [9285,9289]" dest="state_mutability [9285,9289]"/>
  <match src="return: return [97710,97716]" dest="return: return [33715,33721]"/>
  <match src="memory: memory [36624,36630]" dest="memory: memory [53102,53108]"/>
  <match src="}: } [102804,102805]" dest="}: } [38809,38810]"/>
  <match src="primitive_type [31912,31918]" dest="primitive_type [48390,48396]"/>
  <match src="identifier: FILE [109511,109515]" dest="identifier: FILE [69287,69291]"/>
  <match src="identifier: coupons [106744,106751]" dest="identifier: coupons [42749,42756]"/>
  <match src="internal: internal [7635,7643]" dest="internal: internal [7635,7643]"/>
  <match src="identifier: _state [103830,103836]" dest="identifier: _state [39835,39841]"/>
  <match src="call_argument [83338,83348]" dest="call_argument [71374,71384]"/>
  <match src="identifier: owner [105792,105797]" dest="identifier: owner [41797,41802]"/>
  <match src="parameter [5397,5406]" dest="parameter [5397,5406]"/>
  <match src="{: { [102733,102734]" dest="{: { [38738,38739]"/>
  <match src="assignment_expression [105475,105560]" dest="assignment_expression [41480,41565]"/>
  <match src="type_cast_expression [31301,31636]" dest="type_cast_expression [47779,48114]"/>
  <match src="call_argument [20103,20142]" dest="call_argument [71160,71181]"/>
  <match src="identifier: staged [104556,104562]" dest="identifier: staged [40561,40567]"/>
  <match src="}: } [95948,95949]" dest="}: } [31953,31954]"/>
  <match src="(: ( [75828,75829]" dest="(: ( [82125,82126]"/>
  <match src="call_expression [32700,32724]" dest="call_expression [49178,49202]"/>
  <match src="parameter [33185,33194]" dest="parameter [49663,49672]"/>
  <match src="}: } [93979,93980]" dest="}: } [77332,77333]"/>
  <match src="identifier: _state [102921,102927]" dest="identifier: _state [38926,38932]"/>
  <match src="binary_expression [5487,5493]" dest="binary_expression [5487,5493]"/>
  <match src="comment: /* Chain */ [43456,43467]" dest="comment: /* Chain */ [12037,12048]"/>
  <match src="identifier: SUPPLY_CHANGE_LIMIT [45249,45268]" dest="identifier: SUPPLY_CHANGE_LIMIT [13830,13849]"/>
  <match src="identifier: currentLock [108161,108172]" dest="identifier: currentLock [44166,44177]"/>
  <match src="visibility [48446,48454]" dest="visibility [17027,17035]"/>
  <match src="uint: uint [55821,55825]" dest="uint: uint [21913,21917]"/>
  <match src="identifier: that [109911,109915]" dest="identifier: that [69687,69691]"/>
  <match src="call_expression [69342,69404]" dest="call_expression [67120,67145]"/>
  <match src="=: = [44239,44240]" dest="=: = [12820,12821]"/>
  <match src="): ) [95128,95129]" dest="): ) [31133,31134]"/>
  <match src="primitive_type [83173,83180]" dest="primitive_type [61464,61471]"/>
  <match src="type_name [98984,98991]" dest="type_name [34989,34996]"/>
  <match src="primitive_type [973,980]" dest="primitive_type [973,980]"/>
  <match src="identifier: epochs [105230,105236]" dest="identifier: epochs [41235,41241]"/>
  <match src="identifier: Candidate [107169,107178]" dest="identifier: Candidate [43174,43183]"/>
  <match src="visibility [107743,107751]" dest="visibility [43748,43756]"/>
  <match src="identifier: candidate [108274,108283]" dest="identifier: candidate [44279,44288]"/>
  <match src="type_name [55534,55538]" dest="type_name [21626,21630]"/>
  <match src="): ) [100509,100510]" dest="): ) [36514,36515]"/>
  <match src="identifier: _state [96352,96358]" dest="identifier: _state [32357,32363]"/>
  <match src="identifier: candidate [99771,99780]" dest="identifier: candidate [35776,35785]"/>
  <match src="=: = [68674,68675]" dest="=: = [66164,66165]"/>
  <match src="identifier: ratio [7129,7134]" dest="identifier: ratio [7129,7134]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [94829,94848]" dest="identifier: IMPLEMENTATION_SLOT [30834,30853]"/>
  <match src="}: } [5541,5542]" dest="}: } [5541,5542]"/>
  <match src="primitive_type [56670,56674]" dest="primitive_type [22762,22766]"/>
  <match src="identifier: b [2353,2354]" dest="identifier: b [2353,2354]"/>
  <match src="call_argument [74585,74589]" dest="call_argument [59347,59351]"/>
  <match src="call_expression [46601,46657]" dest="call_expression [15182,15238]"/>
  <match src="identifier: result [37256,37262]" dest="identifier: result [53734,53740]"/>
  <match src="primitive_type [35977,35982]" dest="primitive_type [52455,52460]"/>
  <match src="&quot;: &quot; [20969,20970]" dest="&quot;: &quot; [57056,57057]"/>
  <match src="primitive_type [29400,29404]" dest="primitive_type [45878,45882]"/>
  <match src="identifier: encodePacked [34793,34805]" dest="identifier: encodePacked [51271,51283]"/>
  <match src="++: ++ [8670,8672]" dest="++: ++ [8670,8672]"/>
  <match src="primitive_type [2334,2341]" dest="primitive_type [2334,2341]"/>
  <match src="identifier: balanceOf [97020,97029]" dest="identifier: balanceOf [33025,33034]"/>
  <match src="calldata: calldata [56756,56764]" dest="calldata: calldata [22848,22856]"/>
  <match src="{: { [45697,45698]" dest="{: { [14278,14279]"/>
  <match src="identifier: spender [54550,54557]" dest="identifier: spender [20642,20649]"/>
  <match src="external: external [56843,56851]" dest="external: external [22935,22943]"/>
  <match src="user_defined_type [9868,9872]" dest="user_defined_type [9868,9872]"/>
  <match src="*: * [38166,38167]" dest="*: * [54644,54645]"/>
  <match src="{: { [79654,79655]" dest="{: { [61602,61603]"/>
  <match src="(: ( [45687,45688]" dest="(: ( [14268,14269]"/>
  <match src="function: function [98810,98818]" dest="function: function [34815,34823]"/>
  <match src="call_expression [103952,103993]" dest="call_expression [39957,39998]"/>
  <match src="type_name [98874,98881]" dest="type_name [34879,34886]"/>
  <match src="function: function [1878,1886]" dest="function: function [1878,1886]"/>
  <match src=".: . [91544,91545]" dest=".: . [29971,29972]"/>
  <match src="expression_statement [84591,84672]" dest="expression_statement [72164,72248]"/>
  <match src=".: . [47337,47338]" dest=".: . [15918,15919]"/>
  <match src="function_definition [2321,2792]" dest="function_definition [2321,2792]"/>
  <match src="struct_declaration [90549,90621]" dest="struct_declaration [28976,29048]"/>
  <match src="uint256: uint256 [98752,98759]" dest="uint256: uint256 [34757,34764]"/>
  <match src="parameter [99914,99931]" dest="parameter [35919,35936]"/>
  <match src="(: ( [103690,103691]" dest="(: ( [39695,39696]"/>
  <match src="type_name [100188,100195]" dest="type_name [36193,36200]"/>
  <match src="variable_declaration_statement [34767,34813]" dest="variable_declaration_statement [51245,51291]"/>
  <match src="call_argument [7709,7747]" dest="call_argument [7709,7747]"/>
  <match src="visibility [95292,95298]" dest="visibility [31297,31303]"/>
  <match src="type_name [88637,88644]" dest="type_name [74304,74311]"/>
  <match src="): ) [33964,33965]" dest="): ) [50442,50443]"/>
  <match src="[: [ [37862,37863]" dest="[: [ [54340,54341]"/>
  <match src="): ) [102577,102578]" dest="): ) [38582,38583]"/>
  <match src="visibility [45770,45778]" dest="visibility [14351,14359]"/>
  <match src="new: new [35558,35561]" dest="new: new [52036,52039]"/>
  <match src="comment: // contracts then. [89085,89103]" dest="comment: // contracts then. [74752,74770]"/>
  <match src="using_directive [6440,6467]" dest="using_directive [6440,6467]"/>
  <match src="{: { [10982,10983]" dest="{: { [10982,10983]"/>
  <match src="identifier: ASCII_ZERO [36892,36902]" dest="identifier: ASCII_ZERO [53370,53380]"/>
  <match src="function_definition [100731,100866]" dest="function_definition [36736,36871]"/>
  <match src="call_argument [9595,9599]" dest="call_argument [9595,9599]"/>
  <match src="member_expression [107608,107644]" dest="member_expression [43613,43649]"/>
  <match src="returns: returns [48313,48320]" dest="returns: returns [16894,16901]"/>
  <match src="(: ( [95569,95570]" dest="(: ( [31574,31575]"/>
  <match src="identifier: epoch [91280,91285]" dest="identifier: epoch [29707,29712]"/>
  <match src="function: function [33161,33169]" dest="function: function [49639,49647]"/>
  <match src="parameter [100653,100657]" dest="parameter [36658,36662]"/>
  <match src="internal: internal [105455,105463]" dest="internal: internal [41460,41468]"/>
  <match src="identifier: Transfer [15020,15028]" dest="identifier: Transfer [25547,25555]"/>
  <match src="identifier: sender [12225,12231]" dest="identifier: sender [64742,64748]"/>
  <match src="variable_declaration [38148,38161]" dest="variable_declaration [54626,54639]"/>
  <match src="memory: memory [1920,1926]" dest="memory: memory [1920,1926]"/>
  <match src="(: ( [36810,36811]" dest="(: ( [53288,53289]"/>
  <match src="call_expression [84881,84908]" dest="call_expression [72470,72497]"/>
  <match src="identifier: updateAllowanceCoupons [105585,105607]" dest="identifier: updateAllowanceCoupons [41590,41612]"/>
  <match src="(: ( [83658,83659]" dest="(: ( [71676,71677]"/>
  <match src="type_name [91473,91488]" dest="type_name [29900,29915]"/>
  <match src="&quot;: &quot; [27410,27411]" dest="&quot;: &quot; [72706,72707]"/>
  <match src="function_definition [8963,9156]" dest="function_definition [8963,9156]"/>
  <match src="parameter [56413,56417]" dest="parameter [22505,22509]"/>
  <match src=".: . [104531,104532]" dest=".: . [40536,40537]"/>
  <match src="call_argument [85767,85784]" dest="call_argument [81223,81245]"/>
  <match src=",: , [55982,55983]" dest=",: , [22074,22075]"/>
  <match src="return_type_definition [96100,96117]" dest="return_type_definition [32105,32122]"/>
  <match src=".: . [7734,7735]" dest=".: . [7734,7735]"/>
  <match src="type_name [9187,9191]" dest="type_name [9187,9191]"/>
  <match src="+: + [38703,38704]" dest="+: + [55181,55182]"/>
  <match src="state_variable_declaration [43700,43767]" dest="state_variable_declaration [12281,12348]"/>
  <match src="function: function [100874,100882]" dest="function: function [36879,36887]"/>
  <match src="identifier: sender [84561,84567]" dest="identifier: sender [73170,73176]"/>
  <match src="}: } [96494,96495]" dest="}: } [32499,32500]"/>
  <match src="returns: returns [99945,99952]" dest="returns: returns [35950,35957]"/>
  <match src="}: } [90295,90296]" dest="}: } [28722,28723]"/>
  <match src="primitive_type [105438,105445]" dest="primitive_type [41443,41450]"/>
  <match src=".: . [98193,98194]" dest=".: . [34198,34199]"/>
  <match src="expression_statement [35098,35102]" dest="expression_statement [51576,51580]"/>
  <match src="identifier: D256 [7668,7672]" dest="identifier: D256 [7668,7672]"/>
  <match src="): ) [88652,88653]" dest="): ) [74319,74320]"/>
  <match src=",: , [104113,104114]" dest=",: , [40118,40119]"/>
  <match src="returns: returns [34680,34687]" dest="returns: returns [51158,51165]"/>
  <match src="[: [ [36370,36371]" dest="[: [ [52848,52849]"/>
  <match src="(: ( [97651,97652]" dest="(: ( [33656,33657]"/>
  <match src="type_name [105832,105838]" dest="type_name [41837,41843]"/>
  <match src="): ) [45663,45664]" dest="): ) [14244,14245]"/>
  <match src="(: ( [95189,95190]" dest="(: ( [31194,31195]"/>
  <match src="(: ( [27149,27150]" dest="(: ( [61301,61302]"/>
  <match src="returns: returns [56581,56588]" dest="returns: returns [22673,22680]"/>
  <match src="type_name [33185,33189]" dest="type_name [49663,49667]"/>
  <match src="type_name [9238,9244]" dest="type_name [9238,9244]"/>
  <match src="member_expression [107801,107818]" dest="member_expression [43806,43823]"/>
  <match src="identifier: numerator [10884,10893]" dest="identifier: numerator [10884,10893]"/>
  <match src="function: function [102976,102984]" dest="function: function [38981,38989]"/>
  <match src="identifier: GOVERNANCE_SUPER_MAJORITY [44695,44720]" dest="identifier: GOVERNANCE_SUPER_MAJORITY [13276,13301]"/>
  <match src="call_argument [85949,85978]" dest="call_argument [80297,80312]"/>
  <match src="identifier: epoch [98125,98130]" dest="identifier: epoch [34130,34135]"/>
  <match src=",: , [107322,107323]" dest=",: , [43327,43328]"/>
  <match src="return: return [7929,7935]" dest="return: return [7929,7935]"/>
  <match src="call_argument [105999,106005]" dest="call_argument [42004,42010]"/>
  <match src="type_name [8300,8304]" dest="type_name [8300,8304]"/>
  <match src="identifier: input [36568,36573]" dest="identifier: input [53046,53051]"/>
  <match src="+: + [38803,38804]" dest="+: + [55281,55282]"/>
  <match src="expression_statement [86922,87093]" dest="expression_statement [59293,59481]"/>
  <match src="event_paramater [54511,54532]" dest="event_paramater [20603,20624]"/>
  <match src="identifier: amount [107735,107741]" dest="identifier: amount [43740,43746]"/>
  <match src="identifier: epoch [106550,106555]" dest="identifier: epoch [42555,42560]"/>
  <match src="identifier: b [10515,10516]" dest="identifier: b [10515,10516]"/>
  <match src="parameter [6765,6776]" dest="parameter [6765,6776]"/>
  <match src="contract_declaration [51938,52151]" dest="contract_declaration [26573,26786]"/>
  <match src="function_definition [100307,100436]" dest="function_definition [36312,36441]"/>
  <match src="is: is [101788,101790]" dest="is: is [37793,37795]"/>
  <match src="type_name [83017,83024]" dest="type_name [70994,71001]"/>
  <match src="type_name [54993,55000]" dest="type_name [21085,21092]"/>
  <match src="primitive_type [55546,55550]" dest="primitive_type [21638,21642]"/>
  <match src="identifier: epochs [106226,106232]" dest="identifier: epochs [42231,42237]"/>
  <match src="primitive_type [86175,86182]" dest="primitive_type [67099,67106]"/>
  <match src="modifier_invocation [110902,110913]" dest="modifier_invocation [83250,83261]"/>
  <match src=",: , [34187,34188]" dest=",: , [50665,50666]"/>
  <match src="): ) [46656,46657]" dest="): ) [15237,15238]"/>
  <match src="call_struct_argument [6808,6816]" dest="call_struct_argument [6808,6816]"/>
  <match src="&amp;: &amp; [37284,37285]" dest="&amp;: &amp; [53762,53763]"/>
  <match src="comment: // Can participate in balance-dependant activities [109592,109642]" dest="comment: // Can participate in balance-dependant activities [69368,69418]"/>
  <match src="type_name [15029,15036]" dest="type_name [25556,25563]"/>
  <match src="]: ] [105176,105177]" dest="]: ] [41181,41182]"/>
  <match src="state_mutability [7201,7205]" dest="state_mutability [7201,7205]"/>
  <match src="(: ( [38690,38691]" dest="(: ( [55168,55169]"/>
  <match src="primitive_type [104098,104105]" dest="primitive_type [40103,40110]"/>
  <match src="type_name [91006,91013]" dest="type_name [29433,29440]"/>
  <match src="uint: uint [56062,56066]" dest="uint: uint [22154,22158]"/>
  <match src="state_mutability [4768,4772]" dest="state_mutability [4768,4772]"/>
  <match src="type_name [81340,81347]" dest="type_name [81157,81164]"/>
  <match src="public: public [64785,64791]" dest="public: public [27574,27580]"/>
  <match src="public: public [98999,99005]" dest="public: public [35004,35010]"/>
  <match src="comment: /**  * @title Roles  * @dev Library for managing addresses assigned to a Role.  */ [25994,26079]" dest="comment: // File: contracts/dao/Market.sol [60181,60214]"/>
  <match src=".: . [97586,97587]" dest=".: . [33591,33592]"/>
  <match src="type_name [103261,103267]" dest="type_name [39266,39272]"/>
  <match src="identifier: msg [83478,83481]" dest="identifier: msg [71487,71490]"/>
  <match src="type_name [65639,65646]" dest="type_name [78544,78551]"/>
  <match src="=: = [86193,86194]" dest="=: = [62190,62191]"/>
  <match src="): ) [74589,74590]" dest="): ) [59351,59352]"/>
  <match src="uint256: uint256 [43890,43897]" dest="uint256: uint256 [12471,12478]"/>
  <match src="call_argument [83565,83575]" dest="call_argument [72387,72397]"/>
  <match src="(: ( [6805,6806]" dest="(: ( [6805,6806]"/>
  <match src="call_argument [98390,98397]" dest="call_argument [34395,34402]"/>
  <match src="identifier: _state [103865,103871]" dest="identifier: _state [39870,39876]"/>
  <match src="(: ( [3934,3935]" dest="(: ( [3934,3935]"/>
  <match src="type_name [29913,29920]" dest="type_name [46391,46398]"/>
  <match src="user_defined_type [7900,7904]" dest="user_defined_type [7900,7904]"/>
  <match src="member_expression [103158,103183]" dest="member_expression [39163,39188]"/>
  <match src="primitive_type [73588,73595]" dest="primitive_type [56093,56100]"/>
  <match src="primitive_type [50313,50320]" dest="primitive_type [72345,72352]"/>
  <match src="event_paramater [55923,55941]" dest="event_paramater [22015,22033]"/>
  <match src="identifier: epoch [99204,99209]" dest="identifier: epoch [35209,35214]"/>
  <match src="primitive_type [37549,37556]" dest="primitive_type [54027,54034]"/>
  <match src="internal: internal [106557,106565]" dest="internal: internal [42562,42570]"/>
  <match src="parameter [96438,96445]" dest="parameter [32443,32450]"/>
  <match src="member_expression [96465,96487]" dest="member_expression [32470,32492]"/>
  <match src="identifier: _state [108007,108013]" dest="identifier: _state [44012,44018]"/>
  <match src="return_type_definition [96716,96733]" dest="return_type_definition [32721,32738]"/>
  <match src="identifier: totalBonded [75543,75554]" dest="identifier: balance [71916,71923]"/>
  <match src="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [76527,77185]" dest="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [65055,65713]"/>
  <match src="call_argument [38697,38715]" dest="call_argument [55175,55193]"/>
  <match src="user_defined_type [110842,110847]" dest="user_defined_type [82996,83001]"/>
  <match src="primitive_type [72502,72509]" dest="primitive_type [66071,66078]"/>
  <match src="): ) [46368,46369]" dest="): ) [14949,14950]"/>
  <match src="identifier: b [8062,8063]" dest="identifier: b [8062,8063]"/>
  <match src="view: view [94993,94997]" dest="view: view [30998,31002]"/>
  <match src="call_argument [104041,104047]" dest="call_argument [40046,40052]"/>
  <match src="member_expression [12221,12231]" dest="member_expression [64738,64748]"/>
  <match src="member_expression [8921,8935]" dest="member_expression [8921,8935]"/>
  <match src="internal: internal [27963,27971]" dest="internal: internal [56219,56227]"/>
  <match src="call_expression [30711,30735]" dest="call_expression [47189,47213]"/>
  <match src="identifier: sub [103357,103360]" dest="identifier: sub [39362,39365]"/>
  <match src="(: ( [38520,38521]" dest="(: ( [54998,54999]"/>
  <match src="visibility [96841,96847]" dest="visibility [32846,32852]"/>
  <match src="uint: uint [56480,56484]" dest="uint: uint [22572,22576]"/>
  <match src="primitive_type [107324,107331]" dest="primitive_type [43329,43336]"/>
  <match src="(: ( [55312,55313]" dest="(: ( [21404,21405]"/>
  <match src="primitive_type [69852,69859]" dest="primitive_type [62937,62944]"/>
  <match src="comment: /* Bonding */ [43965,43978]" dest="comment: /* Bonding */ [12546,12559]"/>
  <match src="identifier: tokenA [81332,81338]" dest="identifier: candidate [80183,80192]"/>
  <match src=",: , [104497,104498]" dest=",: , [40502,40503]"/>
  <match src="(: ( [108096,108097]" dest="(: ( [44101,44102]"/>
  <match src="parameter [96215,96222]" dest="parameter [32220,32227]"/>
  <match src="identifier: block [98779,98784]" dest="identifier: block [34784,34789]"/>
  <match src="member_expression [99356,99384]" dest="member_expression [35361,35389]"/>
  <match src="): ) [37097,37098]" dest="): ) [53575,53576]"/>
  <match src=",: , [30242,30243]" dest=",: , [46720,46721]"/>
  <match src="identifier: input [36109,36114]" dest="identifier: input [52587,52592]"/>
  <match src="(: ( [55140,55141]" dest="(: ( [21232,21233]"/>
  <match src="visibility [24543,24550]" dest="visibility [59723,59730]"/>
  <match src=",: , [13270,13271]" dest=",: , [23797,23798]"/>
  <match src="type_name [97829,97836]" dest="type_name [33834,33841]"/>
  <match src="): ) [7478,7479]" dest="): ) [7478,7479]"/>
  <match src="member_expression [98535,98603]" dest="member_expression [34540,34608]"/>
  <match src="returns: returns [94998,95005]" dest="returns: returns [31003,31010]"/>
  <match src="view: view [96424,96428]" dest="view: view [32429,32433]"/>
  <match src="enum_declaration [89987,90056]" dest="enum_declaration [28414,28483]"/>
  <match src="return: return [4251,4257]" dest="return: return [4251,4257]"/>
  <match src="expression_statement [86002,86144]" dest="expression_statement [80421,80524]"/>
  <match src="function_definition [102201,102329]" dest="function_definition [38206,38334]"/>
  <match src="{: { [90647,90648]" dest="{: { [29074,29075]"/>
  <match src="identifier: _state [99047,99053]" dest="identifier: _state [35052,35058]"/>
  <match src="primitive_type [102841,102848]" dest="primitive_type [38846,38853]"/>
  <match src="(: ( [103455,103456]" dest="(: ( [39460,39461]"/>
  <match src="identifier: size [89228,89232]" dest="identifier: size [74895,74899]"/>
  <match src="=: = [38262,38263]" dest="=: = [54740,54741]"/>
  <match src="uint256: uint256 [69872,69879]" dest="uint256: uint256 [72443,72450]"/>
  <match src="member_expression [103544,103559]" dest="member_expression [39549,39564]"/>
  <match src="call_argument [43840,43882]" dest="call_argument [12421,12463]"/>
  <match src="primitive_type [102122,102129]" dest="primitive_type [38127,38134]"/>
  <match src="identifier: _state [102766,102772]" dest="identifier: _state [38771,38777]"/>
  <match src="): ) [3383,3384]" dest="): ) [3383,3384]"/>
  <match src="primitive_type [55153,55157]" dest="primitive_type [21245,21249]"/>
  <match src="primitive_type [96215,96222]" dest="primitive_type [32220,32227]"/>
  <match src=",: , [107167,107168]" dest=",: , [43172,43173]"/>
  <match src="primitive_type [46274,46281]" dest="primitive_type [14855,14862]"/>
  <match src="visibility [16762,16769]" dest="visibility [18647,18654]"/>
  <match src=",: , [29854,29855]" dest=",: , [46332,46333]"/>
  <match src="{: { [82484,82485]" dest="{: { [70631,70632]"/>
  <match src="identifier: newClaimable [85060,85072]" dest="identifier: couponAmount [63260,63272]"/>
  <match src="type_name [80528,80535]" dest="type_name [61506,61513]"/>
  <match src="function: function [56786,56794]" dest="function: function [22878,22886]"/>
  <match src=".: . [84926,84927]" dest=".: . [81490,81491]"/>
  <match src="contract_declaration [16581,23603]" dest="contract_declaration [60894,65011]"/>
  <match src="identifier: file [30730,30734]" dest="identifier: file [47208,47212]"/>
  <match src="call_argument [7733,7744]" dest="call_argument [7733,7744]"/>
  <match src="parameter [68610,68629]" dest="parameter [20141,20166]"/>
  <match src="primitive_type [91360,91367]" dest="primitive_type [29787,29794]"/>
  <match src="identifier: result [36915,36921]" dest="identifier: result [53393,53399]"/>
  <match src="call_argument [32751,32756]" dest="call_argument [49229,49234]"/>
  <match src="primitive_type [13253,13260]" dest="primitive_type [23780,23787]"/>
  <match src="array_access [37398,37416]" dest="array_access [53876,53894]"/>
  <match src="(: ( [108046,108047]" dest="(: ( [44051,44052]"/>
  <match src="identifier: reject [90841,90847]" dest="identifier: reject [29268,29274]"/>
  <match src="(: ( [103580,103581]" dest="(: ( [39585,39586]"/>
  <match src="primitive_type [29443,29450]" dest="primitive_type [45921,45928]"/>
  <match src="primitive_type [45288,45295]" dest="primitive_type [13869,13876]"/>
  <match src="call_argument [34413,34421]" dest="call_argument [50891,50899]"/>
  <match src="call_argument [84514,84519]" dest="call_argument [72699,72704]"/>
  <match src="): ) [86980,86981]" dest="): ) [59616,59617]"/>
  <match src="identifier: swap [56699,56703]" dest="identifier: swap [22791,22795]"/>
  <match src=".: . [9358,9359]" dest=".: . [9358,9359]"/>
  <match src="}: } [103051,103052]" dest="}: } [39056,39057]"/>
  <match src="member_expression [7950,7964]" dest="member_expression [7950,7964]"/>
  <match src="primitive_type [99297,99304]" dest="primitive_type [35302,35309]"/>
  <match src="identifier: amount [23412,23418]" dest="identifier: amount [57174,57180]"/>
  <match src="function: function [32367,32375]" dest="function: function [48845,48853]"/>
  <match src="internal: internal [107549,107557]" dest="internal: internal [43554,43562]"/>
  <match src="call_argument [109945,109961]" dest="call_argument [69721,69737]"/>
  <match src="identifier: isInitialized [100740,100753]" dest="identifier: isInitialized [36745,36758]"/>
  <match src=".: . [102935,102936]" dest=".: . [38940,38941]"/>
  <match src="(: ( [69851,69852]" dest="(: ( [62936,62937]"/>
  <match src="type_alias [94771,94778]" dest="type_alias [30776,30783]"/>
  <match src="uint256: uint256 [15071,15078]" dest="uint256: uint256 [25598,25605]"/>
  <match src="binary_expression [8662,8667]" dest="binary_expression [8662,8667]"/>
  <match src="}: } [100159,100160]" dest="}: } [36164,36165]"/>
  <match src="identifier: D256 [7040,7044]" dest="identifier: D256 [7040,7044]"/>
  <match src="): ) [7679,7680]" dest="): ) [7679,7680]"/>
  <match src="visibility [44750,44757]" dest="visibility [13331,13338]"/>
  <match src="call_expression [34325,34344]" dest="call_expression [50803,50822]"/>
  <match src="struct_declaration [91243,91508]" dest="struct_declaration [29670,29935]"/>
  <match src=",: , [64820,64821]" dest=",: , [27609,27610]"/>
  <match src="identifier: D256 [64809,64813]" dest="identifier: D256 [27598,27602]"/>
  <match src="identifier: sender [55705,55711]" dest="identifier: sender [21797,21803]"/>
  <match src=".: . [102476,102477]" dest=".: . [38481,38482]"/>
  <match src="primitive_type [31138,31145]" dest="primitive_type [47616,47623]"/>
  <match src="&quot;: &quot; [95155,95156]" dest="&quot;: &quot; [31160,31161]"/>
  <match src="}: } [100298,100299]" dest="}: } [36303,36304]"/>
  <match src="}: } [50228,50229]" dest="}: } [56678,56679]"/>
  <match src="identifier: sender [83342,83348]" dest="identifier: sender [71378,71384]"/>
  <match src="type_name [56738,56745]" dest="type_name [22830,22837]"/>
  <match src="comment: // ' &lt;' [29223,29230]" dest="comment: // ' &lt;' [45701,45708]"/>
  <match src="identifier: stringifyTruncated [29711,29729]" dest="identifier: stringifyTruncated [46189,46207]"/>
  <match src="identifier: mul [7735,7738]" dest="identifier: mul [7735,7738]"/>
  <match src="&quot;: &quot; [22291,22292]" dest="&quot;: &quot; [63064,63065]"/>
  <match src="): ) [67401,67402]" dest="): ) [81826,81827]"/>
  <match src="parameter [3957,3983]" dest="parameter [3957,3983]"/>
  <match src=",: , [20782,20783]" dest=",: , [64419,64420]"/>
  <match src="): ) [108283,108284]" dest="): ) [44288,44289]"/>
  <match src="): ) [99140,99141]" dest="): ) [35145,35146]"/>
  <match src="state_mutability [55458,55462]" dest="state_mutability [21550,21554]"/>
  <match src="memory: memory [9647,9653]" dest="memory: memory [9647,9653]"/>
  <match src="number_literal: 0 [35873,35874]" dest="number_literal: 0 [52351,52352]"/>
  <match src="): ) [36157,36158]" dest="): ) [52635,52636]"/>
  <match src="user_defined_type [7040,7044]" dest="user_defined_type [7040,7044]"/>
  <match src="type_name [102708,102715]" dest="type_name [38713,38720]"/>
  <match src="string [93380,93394]" dest="string [76733,76747]"/>
  <match src="identifier: b [1043,1044]" dest="identifier: b [1043,1044]"/>
  <match src="identifier: D256 [10274,10278]" dest="identifier: D256 [10274,10278]"/>
  <match src="type_cast_expression [23028,23038]" dest="type_cast_expression [64082,64092]"/>
  <match src="expression_statement [107210,107261]" dest="expression_statement [43215,43266]"/>
  <match src="function: function [95076,95084]" dest="function: function [31081,31089]"/>
  <match src="visibility [95411,95417]" dest="visibility [31416,31422]"/>
  <match src="uint: uint [56413,56417]" dest="uint: uint [22505,22509]"/>
  <match src="return_type_definition [96429,96446]" dest="return_type_definition [32434,32451]"/>
  <match src="function: function [47525,47533]" dest="function: function [16106,16114]"/>
  <match src="(: ( [10214,10215]" dest="(: ( [10214,10215]"/>
  <match src="return: return [35468,35474]" dest="return: return [51946,51952]"/>
  <match src="number_literal: 0 [103043,103044]" dest="number_literal: 0 [39048,39049]"/>
  <match src="return_type_definition [46143,46160]" dest="return_type_definition [14724,14741]"/>
  <match src="}: } [33152,33153]" dest="}: } [49630,49631]"/>
  <match src="{: { [7508,7509]" dest="{: { [7508,7509]"/>
  <match src="type_cast_expression [37868,37891]" dest="type_cast_expression [54346,54369]"/>
  <match src="(: ( [108299,108300]" dest="(: ( [44304,44305]"/>
  <match src="parameter [105816,105830]" dest="parameter [41821,41835]"/>
  <match src="expression_statement [102899,102961]" dest="expression_statement [38904,38966]"/>
  <match src="array_access [105153,105192]" dest="array_access [41158,41197]"/>
  <match src="identifier: z [37282,37283]" dest="identifier: z [53760,53761]"/>
  <match src="returns: returns [14407,14414]" dest="returns: returns [24934,24941]"/>
  <match src="call_expression [7936,7988]" dest="call_expression [7936,7988]"/>
  <match src="array_access [107608,107636]" dest="array_access [43613,43641]"/>
  <match src="identifier: account [83067,83074]" dest="identifier: account [70871,70878]"/>
  <match src="array_access [100255,100283]" dest="array_access [36260,36288]"/>
  <match src="identifier: account [104167,104174]" dest="identifier: account [40172,40179]"/>
  <match src="(: ( [97445,97446]" dest="(: ( [33450,33451]"/>
  <match src="(: ( [55433,55434]" dest="(: ( [21525,21526]"/>
  <match src="identifier: allowance [13605,13614]" dest="identifier: allowance [24132,24141]"/>
  <match src="returns: returns [95423,95430]" dest="returns: returns [31428,31435]"/>
  <match src="state_mutability [46831,46835]" dest="state_mutability [15412,15416]"/>
  <match src="identifier: value [86614,86619]" dest="identifier: candidate [81106,81115]"/>
  <match src="identifier: State [91250,91255]" dest="identifier: State [29677,29682]"/>
  <match src="call_expression [86949,87017]" dest="call_expression [59320,59412]"/>
  <match src="uint256: uint256 [95570,95577]" dest="uint256: uint256 [31575,31582]"/>
  <match src="primitive_type [55111,55115]" dest="primitive_type [21203,21207]"/>
  <match src="string_literal [70505,70514]" dest="string_literal [80665,80674]"/>
  <match src="(: ( [84106,84107]" dest="(: ( [71809,71810]"/>
  <match src="(: ( [20682,20683]" dest="(: ( [64304,64305]"/>
  <match src="number_literal: 0 [36876,36877]" dest="number_literal: 0 [53354,53355]"/>
  <match src="indexed: indexed [92960,92967]" dest="indexed: indexed [76313,76320]"/>
  <match src="primitive_type [66670,66677]" dest="primitive_type [78387,78394]"/>
  <match src="identifier: result [38243,38249]" dest="identifier: result [54721,54727]"/>
  <match src="identifier: amount [104041,104047]" dest="identifier: amount [40046,40052]"/>
  <match src="parameter [33253,33269]" dest="parameter [49731,49747]"/>
  <match src="expression_statement [83588,83624]" dest="expression_statement [72076,72116]"/>
  <match src="public: public [100900,100906]" dest="public: public [36905,36911]"/>
  <match src="identifier: vote [107184,107188]" dest="identifier: vote [43189,43193]"/>
  <match src="identifier: outstandingCoupons [98819,98837]" dest="identifier: outstandingCoupons [34824,34842]"/>
  <match src="type_name [86227,86234]" dest="type_name [62261,62268]"/>
  <match src="identifier: COMMA [32915,32920]" dest="identifier: COMMA [49393,49398]"/>
  <match src="type_name [95007,95013]" dest="type_name [31012,31018]"/>
  <match src=".: . [103144,103145]" dest=".: . [39149,39150]"/>
  <match src="visibility [44602,44609]" dest="visibility [13183,13190]"/>
  <match src="primitive_type [103683,103690]" dest="primitive_type [39688,39695]"/>
  <match src="&quot;: &quot; [18758,18759]" dest="&quot;: &quot; [72655,72656]"/>
  <match src="using_directive [66453,66484]" dest="using_directive [65805,65836]"/>
  <match src="user_defined_type [91424,91435]" dest="user_defined_type [29851,29862]"/>
  <match src="comment: // for each byte (starting from the lowest byte), populate the result with two characters [36967,37056]" dest="comment: // for each byte (starting from the lowest byte), populate the result with two characters [53445,53534]"/>
  <match src="identifier: isZero [10546,10552]" dest="identifier: isZero [10546,10552]"/>
  <match src="type_name [90515,90522]" dest="type_name [28942,28949]"/>
  <match src="primitive_type [1463,1470]" dest="primitive_type [1463,1470]"/>
  <match src="identifier: token0 [56140,56146]" dest="identifier: token0 [22232,22238]"/>
  <match src="internal: internal [7187,7195]" dest="internal: internal [7187,7195]"/>
  <match src="identifier: decrementAllowanceCoupons [105758,105783]" dest="identifier: decrementAllowanceCoupons [41763,41788]"/>
  <match src="visibility [109294,109301]" dest="visibility [69070,69077]"/>
  <match src="array_access [105266,105286]" dest="array_access [41271,41291]"/>
  <match src=".: . [48329,48330]" dest=".: . [16910,16911]"/>
  <match src="member_expression [99498,99525]" dest="member_expression [35503,35530]"/>
  <match src="call_expression [103865,103917]" dest="call_expression [39870,39922]"/>
  <match src="type_name [105799,105806]" dest="type_name [41804,41811]"/>
  <match src="identifier: amount [53564,53570]" dest="identifier: amount [64876,64882]"/>
  <match src="}: } [101051,101052]" dest="}: } [37056,37057]"/>
  <match src=",: , [82824,82825]" dest=",: , [70760,70761]"/>
  <match src="=: = [37866,37867]" dest="=: = [54344,54345]"/>
  <match src="type_name [55403,55410]" dest="type_name [21495,21502]"/>
  <match src="parameter [67744,67763]" dest="parameter [19879,19908]"/>
  <match src="identifier: Decimal [67744,67751]" dest="identifier: Decimal [19879,19886]"/>
  <match src="primitive_type [4008,4015]" dest="primitive_type [4008,4015]"/>
  <match src="returns: returns [95561,95568]" dest="returns: returns [31566,31573]"/>
  <match src="type_name [91110,91117]" dest="type_name [29537,29544]"/>
  <match src="&quot;: &quot; [66531,66532]" dest="&quot;: &quot; [61013,61014]"/>
  <match src="function_body [10336,10384]" dest="function_body [10336,10384]"/>
  <match src="string_literal [85818,85845]" dest="string_literal [81279,81294]"/>
  <match src="function_definition [47394,47517]" dest="function_definition [15975,16098]"/>
  <match src="(: ( [1991,1992]" dest="(: ( [1991,1992]"/>
  <match src="!=: != [53414,53416]" dest="!=: != [64799,64801]"/>
  <match src="identifier: sender [83569,83575]" dest="identifier: sender [72391,72397]"/>
  <match src="internal: internal [10307,10315]" dest="internal: internal [10307,10315]"/>
  <match src="identifier: D256 [9108,9112]" dest="identifier: D256 [9108,9112]"/>
  <match src="(: ( [54946,54947]" dest="(: ( [21038,21039]"/>
  <match src="call_argument [23036,23037]" dest="call_argument [64090,64091]"/>
  <match src="identifier: _state [105223,105229]" dest="identifier: _state [41228,41234]"/>
  <match src="identifier: BOOTSTRAPPING_SUPPLY_CHANGE_LIMIT [43725,43758]" dest="identifier: BOOTSTRAPPING_SUPPLY_CHANGE_LIMIT [12306,12339]"/>
  <match src="member_expression [108007,108042]" dest="member_expression [44012,44047]"/>
  <match src="identifier: COLON [30762,30767]" dest="identifier: COLON [47240,47245]"/>
  <match src="internal: internal [103110,103118]" dest="internal: internal [39115,39123]"/>
  <match src="string [4819,4845]" dest="string [4819,4845]"/>
  <match src="visibility [27245,27252]" dest="visibility [59531,59538]"/>
  <match src="identifier: newClaimable [85336,85348]" dest="identifier: epoch [63421,63426]"/>
  <match src="identifier: payloadA [30890,30898]" dest="identifier: payloadA [47368,47376]"/>
  <match src="): ) [103992,103993]" dest="): ) [39997,39998]"/>
  <match src="visibility [50419,50427]" dest="visibility [62919,62927]"/>
  <match src="(: ( [98346,98347]" dest="(: ( [34351,34352]"/>
  <match src="external: external [55010,55018]" dest="external: external [21102,21110]"/>
  <match src="variable_declaration_statement [1027,1045]" dest="variable_declaration_statement [1027,1045]"/>
  <match src=".: . [11021,11022]" dest=".: . [11021,11022]"/>
  <match src="}: } [104977,104978]" dest="}: } [40982,40983]"/>
  <match src="call_argument [85279,85284]" dest="call_argument [73054,73059]"/>
  <match src="identifier: EPOCH_START [44274,44285]" dest="identifier: EPOCH_START [12855,12866]"/>
  <match src="identifier: that [85877,85881]" dest="identifier: that [80222,80226]"/>
  <match src="constant: constant [28997,29005]" dest="constant: constant [45475,45483]"/>
  <match src="(: ( [99470,99471]" dest="(: ( [35475,35476]"/>
  <match src="identifier: sender [84165,84171]" dest="identifier: sender [71888,71894]"/>
  <match src="array_access [104421,104445]" dest="array_access [40426,40450]"/>
  <match src="primitive_type [104029,104036]" dest="primitive_type [40034,40041]"/>
  <match src="parameter [95570,95577]" dest="parameter [31575,31582]"/>
  <match src="if: if [8520,8522]" dest="if: if [8520,8522]"/>
  <match src="(: ( [1963,1964]" dest="(: ( [1963,1964]"/>
  <match src="state_variable_declaration [44201,44243]" dest="state_variable_declaration [12782,12824]"/>
  <match src="primitive_type [27507,27514]" dest="primitive_type [56712,56719]"/>
  <match src=",: , [33464,33465]" dest=",: , [49942,49943]"/>
  <match src="function_body [96734,96791]" dest="function_body [32739,32796]"/>
  <match src="call_argument [31456,31482]" dest="call_argument [47934,47960]"/>
  <match src="identifier: FILE [87568,87572]" dest="identifier: FILE [81426,81430]"/>
  <match src="state_mutability [45779,45783]" dest="state_mutability [14360,14364]"/>
  <match src="): ) [11037,11038]" dest="): ) [11037,11038]"/>
  <match src=".: . [8360,8361]" dest=".: . [8360,8361]"/>
  <match src="for: for [94779,94782]" dest="for: for [30784,30787]"/>
  <match src="user_defined_type [94783,94795]" dest="user_defined_type [30788,30800]"/>
  <match src="variable_declaration [106577,106611]" dest="variable_declaration [42582,42616]"/>
  <match src="struct_member [91405,91444]" dest="struct_member [29832,29871]"/>
  <match src="address: address [53840,53847]" dest="address: address [61529,61536]"/>
  <match src=",: , [93300,93301]" dest=",: , [76653,76654]"/>
  <match src="string: string [1913,1919]" dest="string: string [1913,1919]"/>
  <match src="identifier: start [100010,100015]" dest="identifier: start [36015,36020]"/>
  <match src="(: ( [47430,47431]" dest="(: ( [16011,16012]"/>
  <match src="function_body [10718,10764]" dest="function_body [10718,10764]"/>
  <match src="identifier: couponAllowances [105961,105977]" dest="identifier: couponAllowances [41966,41982]"/>
  <match src="function: function [14348,14356]" dest="function: function [24875,24883]"/>
  <match src="return_type_definition [56523,56537]" dest="return_type_definition [22615,22629]"/>
  <match src=",: , [1427,1428]" dest=",: , [1427,1428]"/>
  <match src="user_defined_type [7220,7224]" dest="user_defined_type [7220,7224]"/>
  <match src="call_argument [104221,104227]" dest="call_argument [40226,40232]"/>
  <match src="address: address [107133,107140]" dest="address: address [43138,43145]"/>
  <match src=",: , [7823,7824]" dest=",: , [7823,7824]"/>
  <match src="call_argument [51149,51158]" dest="call_argument [56601,56643]"/>
  <match src="return_statement [99619,99670]" dest="return_statement [35624,35675]"/>
  <match src="type_name [23404,23411]" dest="type_name [57166,57173]"/>
  <match src="): ) [93012,93013]" dest="): ) [76365,76366]"/>
  <match src="(: ( [9768,9769]" dest="(: ( [9768,9769]"/>
  <match src="[: [ [38391,38392]" dest="[: [ [54869,54870]"/>
  <match src="(: ( [106238,106239]" dest="(: ( [42243,42244]"/>
  <match src="): ) [83622,83623]" dest="): ) [72114,72115]"/>
  <match src="identifier: coupons [99211,99218]" dest="identifier: coupons [35216,35223]"/>
  <match src="(: ( [100089,100090]" dest="(: ( [36094,36095]"/>
  <match src="primitive_type [50050,50057]" dest="primitive_type [61046,61053]"/>
  <match src="type_name [55897,55901]" dest="type_name [21989,21993]"/>
  <match src="pure: pure [11146,11150]" dest="pure: pure [11146,11150]"/>
  <match src="identifier: stringify [32947,32956]" dest="identifier: stringify [49425,49434]"/>
  <match src="parameter [8409,8425]" dest="parameter [8409,8425]"/>
  <match src="uint256: uint256 [45420,45427]" dest="uint256: uint256 [14001,14008]"/>
  <match src="parameter [100050,100067]" dest="parameter [36055,36072]"/>
  <match src="(: ( [84786,84787]" dest="(: ( [72344,72345]"/>
  <match src="): ) [37299,37300]" dest="): ) [53777,53778]"/>
  <match src="returns: returns [69843,69850]" dest="returns: returns [62928,62935]"/>
  <match src="return_type_definition [7458,7479]" dest="return_type_definition [7458,7479]"/>
  <match src="identifier: bonded [96043,96049]" dest="identifier: bonded [32048,32054]"/>
  <match src="call_expression [96598,96609]" dest="call_expression [32603,32614]"/>
  <match src="=: = [45402,45403]" dest="=: = [13983,13984]"/>
  <match src="): ) [102272,102273]" dest="): ) [38277,38278]"/>
  <match src="member_expression [104517,104538]" dest="member_expression [40522,40543]"/>
  <match src="(: ( [32956,32957]" dest="(: ( [49434,49435]"/>
  <match src="uint256: uint256 [4008,4015]" dest="uint256: uint256 [4008,4015]"/>
  <match src="function: function [46094,46102]" dest="function: function [14675,14683]"/>
  <match src="visibility [64850,64858]" dest="visibility [27639,27647]"/>
  <match src="library: library [6417,6424]" dest="library: library [6417,6424]"/>
  <match src="function_definition [102511,102672]" dest="function_definition [38516,38677]"/>
  <match src=",: , [30853,30854]" dest=",: , [47331,47332]"/>
  <match src="variable_declaration [37766,37785]" dest="variable_declaration [54244,54263]"/>
  <match src="function: function [3922,3930]" dest="function: function [3922,3930]"/>
  <match src="(: ( [13305,13306]" dest="(: ( [23832,23833]"/>
  <match src="function_body [96118,96165]" dest="function_body [32123,32170]"/>
  <match src="identifier: b [8824,8825]" dest="identifier: b [8824,8825]"/>
  <match src="library: library [43431,43438]" dest="library: library [12012,12019]"/>
  <match src="function: function [33745,33753]" dest="function: function [50223,50231]"/>
  <match src="identifier: getBootstrappingPrice [46346,46367]" dest="identifier: getBootstrappingPrice [14927,14948]"/>
  <match src="member_expression [103830,103845]" dest="member_expression [39835,39850]"/>
  <match src="}: } [36491,36492]" dest="}: } [52969,52970]"/>
  <match src="function_definition [64766,64828]" dest="function_definition [27555,27617]"/>
  <match src=",: , [83089,83090]" dest=",: , [70893,70894]"/>
  <match src="identifier: candidates [99844,99854]" dest="identifier: candidates [35849,35859]"/>
  <match src="call_argument [53400,53412]" dest="call_argument [64787,64797]"/>
  <match src="false: false [67925,67930]" dest="false: false [82045,82050]"/>
  <match src=",: , [55835,55836]" dest=",: , [21927,21928]"/>
  <match src="identifier: statusOf [109454,109462]" dest="identifier: statusOf [69230,69238]"/>
  <match src="function_definition [99102,99242]" dest="function_definition [35107,35247]"/>
  <match src="): ) [10048,10049]" dest="): ) [10048,10049]"/>
  <match src="bool: bool [14416,14420]" dest="bool: bool [24943,24947]"/>
  <match src="&quot;: &quot; [35741,35742]" dest="&quot;: &quot; [52219,52220]"/>
  <match src="address: address [93191,93198]" dest="address: address [76544,76551]"/>
  <match src=",: , [53814,53815]" dest=",: , [61419,61420]"/>
  <match src="bytes32: bytes32 [29888,29895]" dest="bytes32: bytes32 [46366,46373]"/>
  <match src="expression_statement [36915,36955]" dest="expression_statement [53393,53433]"/>
  <match src=".: . [106460,106461]" dest=".: . [42465,42466]"/>
  <match src="uint256: uint256 [36648,36655]" dest="uint256: uint256 [53126,53133]"/>
  <match src="(: ( [48723,48724]" dest="(: ( [17304,17305]"/>
  <match src="identifier: redeemable [103346,103356]" dest="identifier: redeemable [39351,39361]"/>
  <match src="pure: pure [8281,8285]" dest="pure: pure [8281,8285]"/>
  <match src="identifier: totalBonded [85767,85778]" dest="identifier: totalBonded [59357,59368]"/>
  <match src="primitive_type [54755,54761]" dest="primitive_type [20847,20853]"/>
  <match src="type_name [27201,27208]" dest="type_name [61181,61188]"/>
  <match src="function_definition [70303,70388]" dest="function_definition [62702,62864]"/>
  <match src="identifier: Require [87156,87163]" dest="identifier: Require [78635,78642]"/>
  <match src="identifier: sub [7773,7776]" dest="identifier: sub [7773,7776]"/>
  <match src="type_name [91085,91092]" dest="type_name [29512,29519]"/>
  <match src="(: ( [102042,102043]" dest="(: ( [38047,38048]"/>
  <match src="identifier: price0CumulativeLast [56367,56387]" dest="identifier: price0CumulativeLast [22459,22479]"/>
  <match src="(: ( [109959,109960]" dest="(: ( [69735,69736]"/>
  <match src="function: function [103428,103436]" dest="function: function [39433,39441]"/>
  <match src="indexed: indexed [54600,54607]" dest="indexed: indexed [20692,20699]"/>
  <match src="emit: emit [85579,85583]" dest="emit: emit [72751,72755]"/>
  <match src="}: } [38833,38834]" dest="}: } [55311,55312]"/>
  <match src="pure: pure [29484,29488]" dest="pure: pure [45962,45966]"/>
  <match src="function: function [99724,99732]" dest="function: function [35729,35737]"/>
  <match src="primitive_type [82862,82869]" dest="primitive_type [70798,70805]"/>
  <match src="pure: pure [54805,54809]" dest="pure: pure [20897,20901]"/>
  <match src="parameter [99020,99027]" dest="parameter [35025,35032]"/>
  <match src="{: { [46161,46162]" dest="{: { [14742,14743]"/>
  <match src="identifier: amount [105197,105203]" dest="identifier: amount [41202,41208]"/>
  <match src="internal: internal [2356,2364]" dest="internal: internal [2356,2364]"/>
  <match src="=: = [45340,45341]" dest="=: = [13921,13922]"/>
  <match src="): ) [98397,98398]" dest="): ) [34402,34403]"/>
  <match src="function: function [102201,102209]" dest="function: function [38206,38214]"/>
  <match src="(: ( [8173,8174]" dest="(: ( [8173,8174]"/>
  <match src="variable_declaration [38058,38067]" dest="variable_declaration [54536,54545]"/>
  <match src="parameter [14382,14396]" dest="parameter [24909,24923]"/>
  <match src="identifier: coupons [106393,106400]" dest="identifier: coupons [42398,42405]"/>
  <match src="type_name [99914,99921]" dest="type_name [35919,35926]"/>
  <match src="identifier: totalRewardedWithPhantom [75658,75682]" dest="identifier: totalCoupons [67650,67662]"/>
  <match src="pure: pure [48710,48714]" dest="pure: pure [17291,17295]"/>
  <match src="[: [ [104436,104437]" dest="[: [ [40441,40442]"/>
  <match src="): ) [10755,10756]" dest="): ) [10755,10756]"/>
  <match src="address: address [45688,45695]" dest="address: address [14269,14276]"/>
  <match src="return: return [47155,47161]" dest="return: return [15736,15742]"/>
  <match src="call_argument [22336,22342]" dest="call_argument [59795,59801]"/>
  <match src="type_name [53816,53823]" dest="type_name [61421,61428]"/>
  <match src="(: ( [79714,79715]" dest="(: ( [61888,61889]"/>
  <match src=",: , [26895,26896]" dest=",: , [79717,79718]"/>
  <match src="primitive_type [14778,14785]" dest="primitive_type [25305,25312]"/>
  <match src="identifier: that [30414,30418]" dest="identifier: that [46892,46896]"/>
  <match src="identifier: expiration [106449,106459]" dest="identifier: expiration [42454,42464]"/>
  <match src="identifier: decrementTotalDebt [102822,102840]" dest="identifier: decrementTotalDebt [38827,38845]"/>
  <match src="variable_declaration_statement [84266,84465]" dest="variable_declaration_statement [71908,72066]"/>
  <match src="uint8: uint8 [36886,36891]" dest="uint8: uint8 [53364,53369]"/>
  <match src="identifier: newImplementation [93680,93697]" dest="identifier: newImplementation [77033,77050]"/>
  <match src="): ) [35717,35718]" dest="): ) [52195,52196]"/>
  <match src="identifier: value [7263,7268]" dest="identifier: value [7263,7268]"/>
  <match src="): ) [55476,55477]" dest="): ) [21568,21569]"/>
  <match src="member_expression [103303,103328]" dest="member_expression [39308,39333]"/>
  <match src="type_name [43800,43807]" dest="type_name [12381,12388]"/>
  <match src="): ) [102023,102024]" dest="): ) [38028,38029]"/>
  <match src="(: ( [83147,83148]" dest="(: ( [78469,78470]"/>
  <match src="block_statement [35719,35756]" dest="block_statement [52197,52234]"/>
  <match src="member_expression [104701,104716]" dest="member_expression [40706,40721]"/>
  <match src="(: ( [46444,46445]" dest="(: ( [15025,15026]"/>
  <match src="uint256: uint256 [72555,72562]" dest="uint256: uint256 [65903,65910]"/>
  <match src="returns: returns [98499,98506]" dest="returns: returns [34504,34511]"/>
  <match src="identifier: amount [24119,24125]" dest="identifier: amount [56556,56562]"/>
  <match src="identifier: account [104471,104478]" dest="identifier: account [40476,40483]"/>
  <match src="pure: pure [41916,41920]" dest="pure: pure [19918,19922]"/>
  <match src="visibility [46251,46259]" dest="visibility [14832,14840]"/>
  <match src="{: { [53154,53155]" dest="{: { [56228,56229]"/>
  <match src="identifier: stringifyTruncated [34078,34096]" dest="identifier: stringifyTruncated [50556,50574]"/>
  <match src="return: return [5519,5525]" dest="return: return [5519,5525]"/>
  <match src="bytes32: bytes32 [93860,93867]" dest="bytes32: bytes32 [77213,77220]"/>
  <match src="function: function [949,957]" dest="function: function [949,957]"/>
  <match src="event_definition [15014,15086]" dest="event_definition [25541,25613]"/>
  <match src="type_name [97938,97945]" dest="type_name [33943,33950]"/>
  <match src="address: address [109399,109406]" dest="address: address [69175,69182]"/>
  <match src="parameter [31138,31150]" dest="parameter [47616,47628]"/>
  <match src="call_argument [30958,30977]" dest="call_argument [47436,47455]"/>
  <match src="(: ( [69255,69256]" dest="(: ( [67057,67058]"/>
  <match src="call_argument [110053,110069]" dest="call_argument [69829,69845]"/>
  <match src="type_name [90807,90814]" dest="type_name [29234,29241]"/>
  <match src=",: , [104573,104574]" dest=",: , [40578,40579]"/>
  <match src="identifier: recordedVote [99733,99745]" dest="identifier: recordedVote [35738,35750]"/>
  <match src="(: ( [20779,20780]" dest="(: ( [64416,64417]"/>
  <match src="function_body [45697,45727]" dest="function_body [14278,14308]"/>
  <match src="member_expression [107053,107070]" dest="member_expression [43058,43075]"/>
  <match src="identifier: amount [20726,20732]" dest="identifier: amount [64363,64369]"/>
  <match src="identifier: target [10859,10865]" dest="identifier: target [10859,10865]"/>
  <match src="parameter [55217,55229]" dest="parameter [21309,21321]"/>
  <match src="[: [ [103559,103560]" dest="[: [ [39564,39565]"/>
  <match src="call_argument [30730,30734]" dest="call_argument [47208,47212]"/>
  <match src=",: , [102555,102556]" dest=",: , [38560,38561]"/>
  <match src="parameter [106542,106555]" dest="parameter [42547,42560]"/>
  <match src="): ) [86405,86406]" dest="): ) [73004,73005]"/>
  <match src=".: . [104523,104524]" dest=".: . [40528,40529]"/>
  <match src="inheritance_specifier [82461,82472]" dest="inheritance_specifier [70611,70618]"/>
  <match src=",: , [30288,30289]" dest=",: , [46766,46767]"/>
  <match src="(: ( [84931,84932]" dest="(: ( [81495,81496]"/>
  <match src="variable_declaration_statement [36648,36675]" dest="variable_declaration_statement [53126,53153]"/>
  <match src="identifier: Constants [98320,98329]" dest="identifier: Constants [34325,34334]"/>
  <match src="function_definition [86879,87100]" dest="function_definition [59496,59679]"/>
  <match src="return: return [46594,46600]" dest="return: return [15175,15181]"/>
  <match src="member_expression [83875,83892]" dest="member_expression [71605,71622]"/>
  <match src="=: = [94849,94850]" dest="=: = [30854,30855]"/>
  <match src="(: ( [98153,98154]" dest="(: ( [34158,34159]"/>
  <match src="type_name [93302,93307]" dest="type_name [76655,76660]"/>
  <match src="]: ] [104724,104725]" dest="]: ] [40729,40730]"/>
  <match src="number_literal: 10 [38660,38662]" dest="number_literal: 10 [55138,55140]"/>
  <match src="uint256: uint256 [103772,103779]" dest="uint256: uint256 [39777,39784]"/>
  <match src="public: public [99142,99148]" dest="public: public [35147,35153]"/>
  <match src="return_statement [97710,97753]" dest="return_statement [33715,33758]"/>
  <match src="number_literal: 0 [10632,10633]" dest="number_literal: 0 [10632,10633]"/>
  <match src="): ) [64826,64827]" dest="): ) [27615,27616]"/>
  <match src="identifier: div [8361,8364]" dest="identifier: div [8361,8364]"/>
  <match src="member_expression [84220,84239]" dest="member_expression [66659,66690]"/>
  <match src="type_name [10876,10883]" dest="type_name [10876,10883]"/>
  <match src="type_name [29865,29872]" dest="type_name [46343,46350]"/>
  <match src="!: ! [31865,31866]" dest="!: ! [48343,48344]"/>
  <match src="view: view [98738,98742]" dest="view: view [34743,34747]"/>
  <match src="uint256: uint256 [34926,34933]" dest="uint256: uint256 [51404,51411]"/>
  <match src="memory: memory [8496,8502]" dest="memory: memory [8496,8502]"/>
  <match src="identifier: a [2036,2037]" dest="identifier: a [2036,2037]"/>
  <match src="identifier: b [7822,7823]" dest="identifier: b [7822,7823]"/>
  <match src="return: return [8900,8906]" dest="return: return [8900,8906]"/>
  <match src="call_argument [53180,53186]" dest="call_argument [56262,56268]"/>
  <match src="number_literal: 1e9 [43940,43943]" dest="number_literal: 1e9 [12521,12524]"/>
  <match src="call_argument [50889,50893]" dest="call_argument [63158,63162]"/>
  <match src="): ) [74508,74509]" dest="): ) [59272,59273]"/>
  <match src="identifier: b [5487,5488]" dest="identifier: b [5487,5488]"/>
  <match src="member_expression [97259,97274]" dest="member_expression [33264,33279]"/>
  <match src="identifier: accounts [105482,105490]" dest="identifier: accounts [41487,41495]"/>
  <match src="visibility [34657,34664]" dest="visibility [51135,51142]"/>
  <match src="parameter [97115,97128]" dest="parameter [33120,33133]"/>
  <match src="type_name [34689,34694]" dest="type_name [51167,51172]"/>
  <match src="identifier: expiringCoupons [99111,99126]" dest="identifier: expiringCoupons [35116,35131]"/>
  <match src="identifier: account [53096,53103]" dest="identifier: account [56194,56201]"/>
  <match src="block_statement [108323,108396]" dest="block_statement [44328,44401]"/>
  <match src="state_mutability [45674,45678]" dest="state_mutability [14255,14259]"/>
  <match src=".: . [107807,107808]" dest=".: . [43812,43813]"/>
  <match src="uint256: uint256 [8647,8654]" dest="uint256: uint256 [8647,8654]"/>
  <match src="identifier: newImplementation [93199,93216]" dest="identifier: newImplementation [76552,76569]"/>
  <match src="(: ( [97790,97791]" dest="(: ( [33795,33796]"/>
  <match src="function: function [97770,97778]" dest="function: function [33775,33783]"/>
  <match src="function: function [54654,54662]" dest="function: function [20746,20754]"/>
  <match src="identifier: account [74790,74797]" dest="identifier: account [81951,81958]"/>
  <match src="internal: internal [47916,47924]" dest="internal: internal [16497,16505]"/>
  <match src="uint256: uint256 [96544,96551]" dest="uint256: uint256 [32549,32556]"/>
  <match src=",: , [9443,9444]" dest=",: , [9443,9444]"/>
  <match src="identifier: BASE [6938,6942]" dest="identifier: BASE [6938,6942]"/>
  <match src="&quot;: &quot; [58955,58956]" dest="&quot;: &quot; [73099,73100]"/>
  <match src="string [26339,26372]" dest="string [78901,78930]"/>
  <match src="private: private [49938,49945]" dest="private: private [62047,62054]"/>
  <match src="identifier: a [6993,6994]" dest="identifier: a [6993,6994]"/>
  <match src="external: external [95547,95555]" dest="external: external [31552,31560]"/>
  <match src="!=: != [20853,20855]" dest="!=: != [64498,64500]"/>
  <match src="parameter [3318,3325]" dest="parameter [3318,3325]"/>
  <match src="(: ( [47670,47671]" dest="(: ( [16251,16252]"/>
  <match src="call_argument [83490,83495]" dest="call_argument [71499,71504]"/>
  <match src="identifier: dollar [111244,111250]" dest="identifier: dollar [56239,56245]"/>
  <match src="identifier: accounts [105160,105168]" dest="identifier: accounts [41165,41173]"/>
  <match src="parenthesized_expression [32609,33134]" dest="parenthesized_expression [49087,49612]"/>
  <match src="identifier: epoch [106483,106488]" dest="identifier: epoch [42488,42493]"/>
  <match src="): ) [106080,106081]" dest="): ) [42085,42086]"/>
  <match src=",: , [55544,55545]" dest=",: , [21636,21637]"/>
  <match src="event_paramater [92952,92982]" dest="event_paramater [76305,76335]"/>
  <match src="call_expression [26571,26635]" dest="call_expression [79539,79607]"/>
  <match src="=: = [107033,107034]" dest="=: = [43038,43039]"/>
  <match src="identifier: candidate [107417,107426]" dest="identifier: candidate [43422,43431]"/>
  <match src="type_name [92674,92681]" dest="type_name [76027,76034]"/>
  <match src="address: address [13253,13260]" dest="address: address [23780,23787]"/>
  <match src="identifier: stringify [31542,31551]" dest="identifier: stringify [48020,48029]"/>
  <match src="uint256: uint256 [86175,86182]" dest="uint256: uint256 [67099,67106]"/>
  <match src="identifier: _state [107569,107575]" dest="identifier: _state [43574,43580]"/>
  <match src="!: ! [31254,31255]" dest="!: ! [47732,47733]"/>
  <match src=",: , [32423,32424]" dest=",: , [48901,48902]"/>
  <match src="returns: returns [3999,4006]" dest="returns: returns [3999,4006]"/>
  <match src="): ) [45884,45885]" dest="): ) [14465,14466]"/>
  <match src="type_name [14382,14389]" dest="type_name [24909,24916]"/>
  <match src="(: ( [8911,8912]" dest="(: ( [8911,8912]"/>
  <match src="primitive_type [23404,23411]" dest="primitive_type [57166,57173]"/>
  <match src="visibility [54796,54804]" dest="visibility [20888,20896]"/>
  <match src="visibility [102879,102887]" dest="visibility [38884,38892]"/>
  <match src="state_mutability [100214,100218]" dest="state_mutability [36219,36223]"/>
  <match src="member_expression [104263,104284]" dest="member_expression [40268,40289]"/>
  <match src="visibility [93014,93020]" dest="visibility [76367,76373]"/>
  <match src="): ) [98851,98852]" dest="): ) [34856,34857]"/>
  <match src="uint: uint [55846,55850]" dest="uint: uint [21938,21942]"/>
  <match src="type_name [90758,90765]" dest="type_name [29185,29192]"/>
  <match src="identifier: totalSupply [97044,97055]" dest="identifier: totalSupply [33049,33060]"/>
  <match src="identifier: Status [97580,97586]" dest="identifier: Status [33585,33591]"/>
  <match src="identifier: State [92437,92442]" dest="identifier: State [75790,75795]"/>
  <match src="identifier: amount [105311,105317]" dest="identifier: amount [41316,41322]"/>
  <match src="type_name [28943,28950]" dest="type_name [45421,45428]"/>
  <match src="binary_expression [37263,37273]" dest="binary_expression [53741,53751]"/>
  <match src="number_literal: 0xBe8F6aa69e85b7d21B3C2cFdC48E2376e68d1AFE [45553,45595]" dest="number_literal: 0xBe8F6aa69e85b7d21B3C2cFdC48E2376e68d1AFE [14134,14176]"/>
  <match src="function: function [48679,48687]" dest="function: function [17260,17268]"/>
  <match src="memory: memory [107534,107540]" dest="memory: memory [43539,43545]"/>
  <match src="visibility [14398,14406]" dest="visibility [24925,24933]"/>
  <match src="event: event [15251,15256]" dest="event: event [25778,25783]"/>
  <match src="block_statement [34951,35508]" dest="block_statement [51429,51986]"/>
  <match src="parameter [10274,10290]" dest="parameter [10274,10290]"/>
  <match src="assignment_expression [107053,107097]" dest="assignment_expression [43058,43102]"/>
  <match src=",: , [4817,4818]" dest=",: , [4817,4818]"/>
  <match src="uint256: uint256 [90573,90580]" dest="uint256: uint256 [29000,29007]"/>
  <match src="call_expression [97020,97038]" dest="call_expression [33025,33043]"/>
  <match src="pure: pure [9892,9896]" dest="pure: pure [9892,9896]"/>
  <match src=".: . [86297,86298]" dest=".: . [80401,80402]"/>
  <match src="internal: internal [79645,79653]" dest="internal: internal [61593,61601]"/>
  <match src="identifier: account [104717,104724]" dest="identifier: account [40722,40729]"/>
  <match src="comment: // 20% [44582,44588]" dest="comment: // 20% [13163,13169]"/>
  <match src="identifier: expiration [90494,90504]" dest="identifier: expiration [28921,28931]"/>
  <match src="}: } [24298,24299]" dest="}: } [56922,56923]"/>
  <match src="return_statement [48744,48760]" dest="return_statement [17325,17341]"/>
  <match src="identifier: a [5526,5527]" dest="identifier: a [5526,5527]"/>
  <match src="public: public [95411,95417]" dest="public: public [31416,31422]"/>
  <match src="visibility [99581,99587]" dest="visibility [35586,35592]"/>
  <match src="return_type_definition [97681,97698]" dest="return_type_definition [33686,33703]"/>
  <match src="visibility [6855,6863]" dest="visibility [6855,6863]"/>
  <match src="library_declaration [28872,38837]" dest="library_declaration [45350,55315]"/>
  <match src="uint256: uint256 [45793,45800]" dest="uint256: uint256 [14374,14381]"/>
  <match src="(: ( [100564,100565]" dest="(: ( [36569,36570]"/>
  <match src="array_access [106435,106460]" dest="array_access [42440,42465]"/>
  <match src="parameter [36560,36573]" dest="parameter [53038,53051]"/>
  <match src="uint256: uint256 [102009,102016]" dest="uint256: uint256 [38014,38021]"/>
  <match src="return_statement [97516,97617]" dest="return_statement [33521,33622]"/>
  <match src="type_name [5397,5404]" dest="type_name [5397,5404]"/>
  <match src="primitive_type [54634,54638]" dest="primitive_type [20726,20730]"/>
  <match src="returns: returns [100912,100919]" dest="returns: returns [36917,36924]"/>
  <match src="indexed: indexed [82809,82816]" dest="indexed: indexed [70745,70752]"/>
  <match src="parameter [96862,96869]" dest="parameter [32867,32874]"/>
  <match src="type_name [97098,97105]" dest="type_name [33103,33110]"/>
  <match src="identifier: Decimal [68610,68617]" dest="identifier: Decimal [20141,20148]"/>
  <match src="type_name [37766,37771]" dest="type_name [54244,54249]"/>
  <match src="view: view [95778,95782]" dest="view: view [31783,31787]"/>
  <match src="event_definition [82966,83032]" dest="event_definition [70941,71034]"/>
  <match src="uint256: uint256 [43700,43707]" dest="uint256: uint256 [12281,12288]"/>
  <match src="function: function [55353,55361]" dest="function: function [21445,21453]"/>
  <match src="array_access [105223,105243]" dest="array_access [41228,41248]"/>
  <match src="parameter [45909,45929]" dest="parameter [14490,14510]"/>
  <match src="identifier: value [83490,83495]" dest="identifier: value [71499,71504]"/>
  <match src="returns: returns [70336,70343]" dest="returns: returns [62753,62760]"/>
  <match src="identifier: require [26866,26873]" dest="identifier: decrementApproveFor [79688,79707]"/>
  <match src="call_expression [84919,85039]" dest="call_expression [81483,81684]"/>
  <match src="comment: // populate the result with &quot;0x&quot; [36827,36859]" dest="comment: // populate the result with &quot;0x&quot; [53305,53337]"/>
  <match src="yul_path [35400,35406]" dest="yul_path [51878,51884]"/>
  <match src="return: return [36504,36510]" dest="return: return [52982,52988]"/>
  <match src="identifier: self [7718,7722]" dest="identifier: self [7718,7722]"/>
  <match src="=: = [38068,38069]" dest="=: = [54546,54547]"/>
  <match src="identifier: supply [103638,103644]" dest="identifier: supply [39643,39649]"/>
  <match src="function: function [56010,56018]" dest="function: function [22102,22110]"/>
  <match src="type_name [83002,83009]" dest="type_name [70979,70986]"/>
  <match src="{: { [31239,31240]" dest="{: { [47717,47718]"/>
  <match src="memory: memory [9873,9879]" dest="memory: memory [9873,9879]"/>
  <match src="(: ( [85564,85565]" dest="(: ( [58725,58726]"/>
  <match src="(: ( [107040,107041]" dest="(: ( [43045,43046]"/>
  <match src="identifier: IOracle [95792,95799]" dest="identifier: IOracle [31797,31804]"/>
  <match src="return: return [99974,99980]" dest="return: return [35979,35985]"/>
  <match src="visibility [70223,70231]" dest="visibility [72862,72870]"/>
  <match src="function_definition [31094,31670]" dest="function_definition [47572,48148]"/>
  <match src="external: external [56039,56047]" dest="external: external [22131,22139]"/>
  <match src="returns: returns [56107,56114]" dest="returns: returns [22199,22206]"/>
  <match src=".: . [9934,9935]" dest=".: . [9934,9935]"/>
  <match src="expression_statement [110041,110071]" dest="expression_statement [69817,69847]"/>
  <match src=".: . [83883,83884]" dest=".: . [71613,71614]"/>
  <match src="): ) [9688,9689]" dest="): ) [9688,9689]"/>
  <match src="parameter [973,982]" dest="parameter [973,982]"/>
  <match src="expression_statement [36366,36411]" dest="expression_statement [52844,52889]"/>
  <match src="member_expression [83338,83348]" dest="member_expression [71374,71384]"/>
  <match src="byte: byte [36376,36380]" dest="byte: byte [52854,52858]"/>
  <match src="(: ( [100753,100754]" dest="(: ( [36758,36759]"/>
  <match src="): ) [106350,106351]" dest="): ) [42355,42356]"/>
  <match src="number_literal: 4 [38311,38312]" dest="number_literal: 4 [54789,54790]"/>
  <match src="struct_declaration [91059,91235]" dest="struct_declaration [29486,29662]"/>
  <match src="type_alias [6446,6454]" dest="type_alias [6446,6454]"/>
  <match src="public: public [64753,64759]" dest="public: public [27542,27548]"/>
  <match src="visibility [67986,67993]" dest="visibility [81960,81967]"/>
  <match src="function: function [46337,46345]" dest="function: function [14918,14926]"/>
  <match src="identifier: _state [96242,96248]" dest="identifier: _state [32247,32253]"/>
  <match src="(: ( [67717,67718]" dest="(: ( [67972,67973]"/>
  <match src="identifier: amount [53113,53119]" dest="identifier: amount [56211,56217]"/>
  <match src="): ) [67922,67923]" dest="): ) [68257,68258]"/>
  <match src="(: ( [95006,95007]" dest="(: ( [31011,31012]"/>
  <match src="call_argument [104893,104899]" dest="call_argument [40898,40904]"/>
  <match src="(: ( [83739,83740]" dest="(: ( [57339,57340]"/>
  <match src="number_literal: 1 [36922,36923]" dest="number_literal: 1 [53400,53401]"/>
  <match src="function: function [8963,8971]" dest="function: function [8963,8971]"/>
  <match src="identifier: State [90071,90076]" dest="identifier: State [28498,28503]"/>
  <match src="(: ( [95664,95665]" dest="(: ( [31669,31670]"/>
  <match src="identifier: unfreeze [84152,84160]" dest="identifier: unfreeze [71875,71883]"/>
  <match src="binary_expression [35707,35717]" dest="binary_expression [52185,52195]"/>
  <match src="{: { [3327,3328]" dest="{: { [3327,3328]"/>
  <match src="(: ( [14415,14416]" dest="(: ( [24942,24943]"/>
  <match src="primitive_type [30429,30433]" dest="primitive_type [46907,46911]"/>
  <match src="identifier: mint [52088,52092]" dest="identifier: mint [26723,26727]"/>
  <match src="internal: internal [93218,93226]" dest="internal: internal [76571,76579]"/>
  <match src="call_expression [85169,85208]" dest="call_expression [72460,72525]"/>
  <match src="(: ( [48443,48444]" dest="(: ( [17024,17025]"/>
  <match src="parameter [55472,55476]" dest="parameter [21564,21568]"/>
  <match src="call_argument [32993,32998]" dest="call_argument [49471,49476]"/>
  <match src="(: ( [93414,93415]" dest="(: ( [76767,76768]"/>
  <match src="return_type_definition [10466,10480]" dest="return_type_definition [10466,10480]"/>
  <match src="address: address [52093,52100]" dest="address: address [26728,26735]"/>
  <match src="uint256: uint256 [91135,91142]" dest="uint256: uint256 [29562,29569]"/>
  <match src="(: ( [34256,34257]" dest="(: ( [50734,50735]"/>
  <match src="identifier: onlyFrozen [83273,83283]" dest="identifier: onlyFrozenOrLocked [78593,78611]"/>
  <match src="identifier: accounts [105683,105691]" dest="identifier: accounts [41688,41696]"/>
  <match src="identifier: D256 [46609,46613]" dest="identifier: D256 [15190,15194]"/>
  <match src="}: } [6943,6944]" dest="}: } [6943,6944]"/>
  <match src="{: { [7941,7942]" dest="{: { [7941,7942]"/>
  <match src="member_expression [84733,84744]" dest="member_expression [73256,73267]"/>
  <match src="identifier: amount [103253,103259]" dest="identifier: amount [39258,39264]"/>
  <match src="call_expression [105362,105404]" dest="call_expression [41367,41409]"/>
  <match src="): ) [53412,53413]" dest="): ) [64797,64798]"/>
  <match src="view: view [97815,97819]" dest="view: view [33820,33824]"/>
  <match src="type_name [105438,105445]" dest="type_name [41443,41450]"/>
  <match src="): ) [34496,34497]" dest="): ) [50974,50975]"/>
  <match src="parameter [95515,95528]" dest="parameter [31520,31533]"/>
  <match src="primitive_type [103456,103463]" dest="primitive_type [39461,39468]"/>
  <match src="(: ( [104019,104020]" dest="(: ( [40024,40025]"/>
  <match src="(: ( [10124,10125]" dest="(: ( [10124,10125]"/>
  <match src="identifier: value [85397,85402]" dest="identifier: candidate [80074,80083]"/>
  <match src="primitive_type [45140,45147]" dest="primitive_type [13721,13728]"/>
  <match src="}: } [96617,96618]" dest="}: } [32622,32623]"/>
  <match src="primitive_type [54592,54599]" dest="primitive_type [20684,20691]"/>
  <match src="number_literal: 1 [8659,8660]" dest="number_literal: 1 [8659,8660]"/>
  <match src="type_name [7412,7419]" dest="type_name [7412,7419]"/>
  <match src="identifier: BASE [10751,10755]" dest="identifier: BASE [10751,10755]"/>
  <match src="primitive_type [108097,108104]" dest="primitive_type [44102,44109]"/>
  <match src="variable_declaration [80864,80882]" dest="variable_declaration [66703,66724]"/>
  <match src="function_body [109892,110092]" dest="function_body [69668,69868]"/>
  <match src="identifier: add [8771,8774]" dest="identifier: add [8771,8774]"/>
  <match src="identifier: BOOTSTRAPPING_PRICE [43653,43672]" dest="identifier: BOOTSTRAPPING_PRICE [12234,12253]"/>
  <match src="identifier: State [90556,90561]" dest="identifier: State [28983,28988]"/>
  <match src="address: address [97332,97339]" dest="address: address [33337,33344]"/>
  <match src="): ) [96551,96552]" dest="): ) [32556,32557]"/>
  <match src="identifier: balance [103959,103966]" dest="identifier: balance [39964,39971]"/>
  <match src="call_argument [1494,1495]" dest="call_argument [1494,1495]"/>
  <match src=",: , [10141,10142]" dest=",: , [10141,10142]"/>
  <match src="function_definition [95957,96057]" dest="function_definition [31962,32062]"/>
  <match src="identifier: experimental [87,99]" dest="identifier: experimental [87,99]"/>
  <match src="call_argument [8609,8630]" dest="call_argument [8609,8630]"/>
  <match src="identifier: add [8932,8935]" dest="identifier: add [8932,8935]"/>
  <match src="uint256: uint256 [3273,3280]" dest="uint256: uint256 [3273,3280]"/>
  <match src="primitive_type [54534,54541]" dest="primitive_type [20626,20633]"/>
  <match src="): ) [83451,83452]" dest="): ) [57563,57564]"/>
  <match src="type_name [34926,34933]" dest="type_name [51404,51411]"/>
  <match src="{: { [53430,53431]" dest="{: { [64815,64816]"/>
  <match src="primitive_type [44305,44312]" dest="primitive_type [12886,12893]"/>
  <match src="call_expression [81214,81254]" dest="call_expression [60060,60096]"/>
  <match src="): ) [96916,96917]" dest="): ) [32921,32922]"/>
  <match src="): ) [56810,56811]" dest="): ) [22902,22903]"/>
  <match src="function_definition [98810,98949]" dest="function_definition [34815,34954]"/>
  <match src="return: return [35551,35557]" dest="return: return [52029,52035]"/>
  <match src="call_argument [6929,6944]" dest="call_argument [6929,6944]"/>
  <match src="string: string [104379,104385]" dest="string: string [40384,40390]"/>
  <match src="primitive_type [107911,107918]" dest="primitive_type [43916,43923]"/>
  <match src="member_expression [46432,46444]" dest="member_expression [15013,15025]"/>
  <match src="identifier: balance [91304,91311]" dest="identifier: balance [29731,29738]"/>
  <match src="function_definition [97770,97900]" dest="function_definition [33775,33905]"/>
  <match src="(: ( [38057,38058]" dest="(: ( [54535,54536]"/>
  <match src="identifier: a [1494,1495]" dest="identifier: a [1494,1495]"/>
  <match src="call_argument [97030,97037]" dest="call_argument [33035,33042]"/>
  <match src="function_body [106566,106871]" dest="function_body [42571,42876]"/>
  <match src="call_argument [27410,27460]" dest="call_argument [72706,72737]"/>
  <match src="(: ( [7708,7709]" dest="(: ( [7708,7709]"/>
  <match src="call_argument [32120,32126]" dest="call_argument [48598,48604]"/>
  <match src="call_argument [34247,34266]" dest="call_argument [50725,50744]"/>
  <match src="): ) [8178,8179]" dest="): ) [8178,8179]"/>
  <match src="uint256: uint256 [83173,83180]" dest="uint256: uint256 [61464,61471]"/>
  <match src="): ) [7975,7976]" dest="): ) [7975,7976]"/>
  <match src=".: . [30060,30061]" dest=".: . [46538,46539]"/>
  <match src=".: . [95473,95474]" dest=".: . [31478,31479]"/>
  <match src="bytes32: bytes32 [55403,55410]" dest="bytes32: bytes32 [21495,21502]"/>
  <match src="type_name [17897,17904]" dest="type_name [59853,59860]"/>
  <match src="{: { [95903,95904]" dest="{: { [31908,31909]"/>
  <match src="parameter [16928,16935]" dest="parameter [18416,18423]"/>
  <match src="comment: // for each byte (starting from the lowest byte), populate the result with two characters [37954,38043]" dest="comment: // for each byte (starting from the lowest byte), populate the result with two characters [54432,54521]"/>
  <match src="): ) [10598,10599]" dest="): ) [10598,10599]"/>
  <match src="(: ( [106149,106150]" dest="(: ( [42154,42155]"/>
  <match src="identifier: LPAREN [34214,34220]" dest="identifier: LPAREN [50692,50698]"/>
  <match src="identifier: D256 [67752,67756]" dest="identifier: D256 [19887,19891]"/>
  <match src="block_statement [32588,33146]" dest="block_statement [49066,49624]"/>
  <match src="): ) [47703,47704]" dest="): ) [16284,16285]"/>
  <match src="primitive_type [102009,102016]" dest="primitive_type [38014,38021]"/>
  <match src="event_paramater [83148,83171]" dest="event_paramater [78470,78493]"/>
  <match src="parameter [2334,2343]" dest="parameter [2334,2343]"/>
  <match src="&quot;: &quot; [53614,53615]" dest="&quot;: &quot; [64921,64922]"/>
  <match src="function: function [2321,2329]" dest="function: function [2321,2329]"/>
  <match src="state_mutability [96848,96852]" dest="state_mutability [32853,32857]"/>
  <match src="identifier: self [10618,10622]" dest="identifier: self [10618,10622]"/>
  <match src=".: . [86388,86389]" dest=".: . [72987,72988]"/>
  <match src="call_expression [105513,105520]" dest="call_expression [41518,41525]"/>
  <match src="block_statement [33966,34524]" dest="block_statement [50444,51002]"/>
  <match src="]: ] [105242,105243]" dest="]: ] [41247,41248]"/>
  <match src="string: string [102857,102863]" dest="string: string [38862,38868]"/>
  <match src="): ) [106684,106685]" dest="): ) [42689,42690]"/>
  <match src="identifier: COLON [33491,33496]" dest="identifier: COLON [49969,49974]"/>
  <match src=".: . [100683,100684]" dest=".: . [36688,36689]"/>
  <match src="identifier: payloadA [33619,33627]" dest="identifier: payloadA [50097,50105]"/>
  <match src="function_body [102049,102080]" dest="function_body [38054,38085]"/>
  <match src="assignment_expression [106219,106264]" dest="assignment_expression [42224,42269]"/>
  <match src=",: , [55229,55230]" dest=",: , [21321,21322]"/>
  <match src="): ) [33717,33718]" dest="): ) [50195,50196]"/>
  <match src="(: ( [93287,93288]" dest="(: ( [76640,76641]"/>
  <match src="}: } [48557,48558]" dest="}: } [17138,17139]"/>
  <match src=".: . [99067,99068]" dest=".: . [35072,35073]"/>
  <match src="=: = [107606,107607]" dest="=: = [43611,43612]"/>
  <match src="identifier: candidates [100825,100835]" dest="identifier: candidates [36830,36840]"/>
  <match src="&quot;: &quot; [95148,95149]" dest="&quot;: &quot; [31153,31154]"/>
  <match src="identifier: reject [107998,108004]" dest="identifier: reject [44003,44009]"/>
  <match src="): ) [30362,30363]" dest="): ) [46840,46841]"/>
  <match src=",: , [50181,50182]" dest=",: , [56522,56523]"/>
  <match src="&quot;: &quot; [85438,85439]" dest="&quot;: &quot; [81024,81025]"/>
  <match src="identifier: State [101791,101796]" dest="identifier: State [37796,37801]"/>
  <match src=".: . [9138,9139]" dest=".: . [9138,9139]"/>
  <match src="identifier: _state [99837,99843]" dest="identifier: _state [35842,35848]"/>
  <match src="type_name [72502,72509]" dest="type_name [66071,66078]"/>
  <match src="visibility [55449,55457]" dest="visibility [21541,21549]"/>
  <match src="user_defined_type [16599,16606]" dest="user_defined_type [60913,60924]"/>
  <match src="identifier: sender [20691,20697]" dest="identifier: sender [64313,64319]"/>
  <match src="call_expression [81214,81234]" dest="call_expression [60060,60068]"/>
  <match src="expression_statement [109852,109854]" dest="expression_statement [69628,69630]"/>
  <match src="[: [ [99511,99512]" dest="[: [ [35516,35517]"/>
  <match src="(: ( [54754,54755]" dest="(: ( [20846,20847]"/>
  <match src="identifier: account [89201,89208]" dest="identifier: account [74868,74875]"/>
  <match src="identifier: Decimal [46601,46608]" dest="identifier: Decimal [15182,15189]"/>
  <match src="function: function [10537,10545]" dest="function: function [10537,10545]"/>
  <match src="function_definition [36531,37512]" dest="function_definition [53009,53990]"/>
  <match src="primitive_type [97829,97836]" dest="primitive_type [33834,33841]"/>
  <match src="call_expression [87003,87016]" dest="call_expression [59394,59411]"/>
  <match src="identifier: _state [104185,104191]" dest="identifier: _state [40190,40196]"/>
  <match src=".: . [106477,106478]" dest=".: . [42482,42483]"/>
  <match src="parameter [99566,99579]" dest="parameter [35571,35584]"/>
  <match src="): ) [2630,2631]" dest="): ) [2630,2631]"/>
  <match src="constant: constant [29197,29205]" dest="constant: constant [45675,45683]"/>
  <match src="expression_statement [85869,85990]" dest="expression_statement [80214,80324]"/>
  <match src="type_name [55658,55662]" dest="type_name [21750,21754]"/>
  <match src="expression_statement [38243,38288]" dest="expression_statement [54721,54766]"/>
  <match src=".: . [11267,11268]" dest=".: . [11267,11268]"/>
  <match src="{: { [38664,38665]" dest="{: { [55142,55143]"/>
  <match src="{: { [47828,47829]" dest="{: { [16409,16410]"/>
  <match src=".: . [103515,103516]" dest=".: . [39520,39521]"/>
  <match src="(: ( [33034,33035]" dest="(: ( [49512,49513]"/>
  <match src="event_paramater [53816,53838]" dest="event_paramater [61421,61439]"/>
  <match src="identifier: a [4146,4147]" dest="identifier: a [4146,4147]"/>
  <match src="identifier: sub [98566,98569]" dest="identifier: sub [34571,34574]"/>
  <match src="return_type_definition [14822,14836]" dest="return_type_definition [25349,25363]"/>
  <match src="string: string [30639,30645]" dest="string: string [47117,47123]"/>
  <match src="}: } [29805,29806]" dest="}: } [46283,46284]"/>
  <match src="call_expression [97523,97530]" dest="call_expression [33528,33535]"/>
  <match src="identifier: shift [38397,38402]" dest="identifier: shift [54875,54880]"/>
  <match src=".: . [85327,85328]" dest=".: . [63412,63413]"/>
  <match src="=: = [37275,37276]" dest="=: = [53753,53754]"/>
  <match src="): ) [32339,32340]" dest="): ) [48817,48818]"/>
  <match src="call_argument [9137,9144]" dest="call_argument [9137,9144]"/>
  <match src="&quot;: &quot; [87435,87436]" dest="&quot;: &quot; [79254,79255]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [93875,93894]" dest="identifier: IMPLEMENTATION_SLOT [77228,77247]"/>
  <match src="{: { [36159,36160]" dest="{: { [52637,52638]"/>
  <match src="type_alias [73575,73583]" dest="type_alias [56080,56088]"/>
  <match src="identifier: candidate [100540,100549]" dest="identifier: candidate [36545,36554]"/>
  <match src=",: , [83778,83779]" dest=",: , [71772,71773]"/>
  <match src="(: ( [84896,84897]" dest="(: ( [72485,72486]"/>
  <match src="identifier: accounts [104192,104200]" dest="identifier: accounts [40197,40205]"/>
  <match src="type_name [90350,90357]" dest="type_name [28777,28784]"/>
  <match src="constant: constant [43816,43824]" dest="constant: constant [12397,12405]"/>
  <match src="parameter [98445,98484]" dest="parameter [34450,34489]"/>
  <match src="[: [ [100272,100273]" dest="[: [ [36277,36278]"/>
  <match src="(: ( [97828,97829]" dest="(: ( [33833,33834]"/>
  <match src="constant: constant [44000,44008]" dest="constant: constant [12581,12589]"/>
  <match src="identifier: decimals [54785,54793]" dest="identifier: decimals [20877,20885]"/>
  <match src="state_mutability [98860,98864]" dest="state_mutability [34865,34869]"/>
  <match src="type_name [101990,101997]" dest="type_name [37995,38002]"/>
  <match src=",: , [32008,32009]" dest=",: , [48486,48487]"/>
  <match src="array_access [108007,108035]" dest="array_access [44012,44040]"/>
  <match src="identifier: epoch [106233,106238]" dest="identifier: epoch [42238,42243]"/>
  <match src="unary_expression [33959,33964]" dest="unary_expression [50437,50442]"/>
  <match src="if_statement [97171,97242]" dest="if_statement [33176,33247]"/>
  <match src="parameter [48469,48488]" dest="parameter [17050,17069]"/>
  <match src="return_type_definition [14407,14421]" dest="return_type_definition [24934,24948]"/>
  <match src="(: ( [33413,33414]" dest="(: ( [49891,49892]"/>
  <match src="primitive_type [31186,31193]" dest="primitive_type [47664,47671]"/>
  <match src="primitive_type [103473,103480]" dest="primitive_type [39478,39485]"/>
  <match src="constant: constant [44406,44414]" dest="constant: constant [12987,12995]"/>
  <match src="string: string [95115,95121]" dest="string: string [31120,31126]"/>
  <match src="if: if [35703,35705]" dest="if: if [52181,52183]"/>
  <match src="}: } [97503,97504]" dest="}: } [33508,33509]"/>
  <match src="call_argument [86949,87017]" dest="call_argument [59320,59412]"/>
  <match src="): ) [36408,36409]" dest="): ) [52886,52887]"/>
  <match src="): ) [9384,9385]" dest="): ) [9384,9385]"/>
  <match src="return_statement [47599,47624]" dest="return_statement [16180,16205]"/>
  <match src="(: ( [55337,55338]" dest="(: ( [21429,21430]"/>
  <match src="=: = [102621,102622]" dest="=: = [38626,38627]"/>
  <match src="(: ( [79708,79709]" dest="(: ( [61882,61883]"/>
  <match src="primitive_type [90113,90120]" dest="primitive_type [28540,28547]"/>
  <match src="identifier: _ [109852,109853]" dest="identifier: _ [69628,69629]"/>
  <match src="returns: returns [12988,12995]" dest="returns: returns [23515,23522]"/>
  <match src=",: , [22254,22255]" dest=",: , [63000,63001]"/>
  <match src="return_type_definition [98499,98516]" dest="return_type_definition [34504,34521]"/>
  <match src="uint256: uint256 [91085,91092]" dest="uint256: uint256 [29512,29519]"/>
  <match src="visibility [56266,56274]" dest="visibility [22358,22366]"/>
  <match src="(: ( [32162,32163]" dest="(: ( [48640,48641]"/>
  <match src="identifier: epoch [99626,99631]" dest="identifier: epoch [35631,35636]"/>
  <match src="identifier: BASE [7971,7975]" dest="identifier: BASE [7971,7975]"/>
  <match src="user_defined_type [9214,9218]" dest="user_defined_type [9214,9218]"/>
  <match src="state_mutability [38570,38574]" dest="state_mutability [55048,55052]"/>
  <match src="number_literal: 10 [35919,35921]" dest="number_literal: 10 [52397,52399]"/>
  <match src="function_body [9746,9826]" dest="function_body [9746,9826]"/>
  <match src="identifier: dollar [74558,74564]" dest="identifier: dollar [59320,59326]"/>
  <match src="function: function [95649,95657]" dest="function: function [31654,31662]"/>
  <match src="}: } [32351,32352]" dest="}: } [48829,48830]"/>
  <match src=".: . [107178,107179]" dest=".: . [43183,43184]"/>
  <match src="(: ( [9727,9728]" dest="(: ( [9727,9728]"/>
  <match src="function: function [95957,95965]" dest="function: function [31962,31970]"/>
  <match src="comment: /**      * Epoch      */ [98082,98108]" dest="comment: /**      * Epoch      */ [34087,34113]"/>
  <match src="identifier: must [31123,31127]" dest="identifier: must [47601,47605]"/>
  <match src="state_mutability [10580,10584]" dest="state_mutability [10580,10584]"/>
  <match src="call_argument [9789,9799]" dest="call_argument [9789,9799]"/>
  <match src="string [21515,21548]" dest="string [57506,57536]"/>
  <match src="state_mutability [7881,7885]" dest="state_mutability [7881,7885]"/>
  <match src="identifier: DOMAIN_SEPARATOR [55296,55312]" dest="identifier: DOMAIN_SEPARATOR [21388,21404]"/>
  <match src="identifier: self [8921,8925]" dest="identifier: self [8921,8925]"/>
  <match src="identifier: D256 [9340,9344]" dest="identifier: D256 [9340,9344]"/>
  <match src="state_mutability [46548,46552]" dest="state_mutability [15129,15133]"/>
  <match src="identifier: D256 [47010,47014]" dest="identifier: D256 [15591,15595]"/>
  <match src="type_name [68700,68707]" dest="type_name [79285,79292]"/>
  <match src=".: . [85096,85097]" dest=".: . [79315,79316]"/>
  <match src=",: , [54557,54558]" dest=",: , [20649,20650]"/>
  <match src="call_argument [84946,84965]" dest="call_argument [81510,81613]"/>
  <match src="identifier: shift [38255,38260]" dest="identifier: shift [54733,54738]"/>
  <match src="bool: bool [102043,102047]" dest="bool: bool [38048,38052]"/>
  <match src="(: ( [47553,47554]" dest="(: ( [16134,16135]"/>
  <match src=",: , [46031,46032]" dest=",: , [14612,14613]"/>
  <match src="identifier: from [54608,54612]" dest="identifier: from [20700,20704]"/>
  <match src="memory: memory [9432,9438]" dest="memory: memory [9432,9438]"/>
  <match src="): ) [32007,32008]" dest="): ) [48485,48486]"/>
  <match src="): ) [93216,93217]" dest="): ) [76569,76570]"/>
  <match src="function_definition [54832,54884]" dest="function_definition [20924,20976]"/>
  <match src="identifier: account [108105,108112]" dest="identifier: account [44110,44117]"/>
  <match src="return_statement [47323,47379]" dest="return_statement [15904,15960]"/>
  <match src="type_name [16928,16935]" dest="type_name [18416,18423]"/>
  <match src="identifier: votes [99866,99871]" dest="identifier: votes [35871,35876]"/>
  <match src="comment: // 10 epochs [45047,45059]" dest="comment: // 10 epochs [13628,13640]"/>
  <match src="primitive_type [13615,13622]" dest="primitive_type [24142,24149]"/>
  <match src="primitive_type [45420,45427]" dest="primitive_type [14001,14008]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [4862,5367]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [4862,5367]"/>
  <match src="): ) [84120,84121]" dest="): ) [71823,71824]"/>
  <match src="primitive_type [82887,82894]" dest="primitive_type [70823,70830]"/>
  <match src="type_name [33253,33260]" dest="type_name [49731,49738]"/>
  <match src="identifier: stringify [33609,33618]" dest="identifier: stringify [50087,50096]"/>
  <match src=".: . [103533,103534]" dest=".: . [39538,39539]"/>
  <match src="identifier: add [98635,98638]" dest="identifier: add [34640,34643]"/>
  <match src="(: ( [37797,37798]" dest="(: ( [54275,54276]"/>
  <match src="call_argument [69389,69403]" dest="call_argument [67135,67144]"/>
  <match src="call_expression [80764,80772]" dest="call_expression [58950,58958]"/>
  <match src="library: library [88211,88218]" dest="library: library [73878,73885]"/>
  <match src="primitive_type [29888,29895]" dest="primitive_type [46366,46373]"/>
  <match src="return: return [2776,2782]" dest="return: return [2776,2782]"/>
  <match src="return_statement [8900,8948]" dest="return_statement [8900,8948]"/>
  <match src="memory: memory [69596,69602]" dest="memory: memory [68038,68044]"/>
  <match src="identifier: dollarAmount [81104,81116]" dest="identifier: dollarAmount [63359,63371]"/>
  <match src="): ) [38715,38716]" dest="): ) [55193,55194]"/>
  <match src="{: { [38086,38087]" dest="{: { [54564,54565]"/>
  <match src="primitive_type [13670,13677]" dest="primitive_type [24197,24204]"/>
  <match src="{: { [99338,99339]" dest="{: { [35343,35344]"/>
  <match src="visibility [13288,13296]" dest="visibility [23815,23823]"/>
  <match src="identifier: value [51207,51212]" dest="identifier: value [72147,72152]"/>
  <match src="bool: bool [55183,55187]" dest="bool: bool [21275,21279]"/>
  <match src="assignment_expression [106819,106863]" dest="assignment_expression [42824,42868]"/>
  <match src="(: ( [34096,34097]" dest="(: ( [50574,50575]"/>
  <match src="}: } [48254,48255]" dest="}: } [16835,16836]"/>
  <match src="pure: pure [38570,38574]" dest="pure: pure [55048,55052]"/>
  <match src="comment: // 15% [45189,45195]" dest="comment: // 15% [13770,13776]"/>
  <match src="identifier: Approval [54502,54510]" dest="identifier: Approval [20594,20602]"/>
  <match src="returns: returns [16919,16926]" dest="returns: returns [18407,18414]"/>
  <match src="variable_declaration_statement [36130,36149]" dest="variable_declaration_statement [52608,52627]"/>
  <match src="identifier: a [3281,3282]" dest="identifier: a [3281,3282]"/>
  <match src=".: . [98187,98188]" dest=".: . [34192,34193]"/>
  <match src="): ) [8710,8711]" dest="): ) [8710,8711]"/>
  <match src=",: , [95528,95529]" dest=",: , [31533,31534]"/>
  <match src="type_name [105069,105075]" dest="type_name [41074,41080]"/>
  <match src="identifier: capture [67710,67717]" dest="identifier: oracleCapture [67959,67972]"/>
  <match src="primitive_type [33769,33773]" dest="primitive_type [50247,50251]"/>
  <match src="return_type_definition [7211,7232]" dest="return_type_definition [7211,7232]"/>
  <match src="): ) [99448,99449]" dest="): ) [35453,35454]"/>
  <match src="call_expression [84733,84747]" dest="call_expression [73256,73270]"/>
  <match src="(: ( [35867,35868]" dest="(: ( [52345,52346]"/>
  <match src="(: ( [47938,47939]" dest="(: ( [16519,16520]"/>
  <match src="=: = [103950,103951]" dest="=: = [39955,39956]"/>
  <match src="identifier: msg [86445,86448]" dest="identifier: msg [63347,63350]"/>
  <match src="event_paramater [82887,82900]" dest="event_paramater [70823,70836]"/>
  <match src="identifier: accounts [97724,97732]" dest="identifier: accounts [33729,33737]"/>
  <match src="]: ] [105191,105192]" dest="]: ] [41196,41197]"/>
  <match src="identifier: amount [52058,52064]" dest="identifier: amount [26693,26699]"/>
  <match src="type_name [104115,104122]" dest="type_name [40120,40127]"/>
  <match src=".: . [104825,104826]" dest=".: . [40830,40831]"/>
  <match src="(: ( [50214,50215]" dest="(: ( [56516,56517]"/>
  <match src="contract: contract [82444,82452]" dest="contract: contract [70591,70599]"/>
  <match src="function_definition [11054,11299]" dest="function_definition [11054,11299]"/>
  <match src="): ) [37800,37801]" dest="): ) [54278,54279]"/>
  <match src="identifier: file [34097,34101]" dest="identifier: file [50575,50579]"/>
  <match src="pure: pure [31229,31233]" dest="pure: pure [47707,47711]"/>
  <match src="state_mutability [46260,46264]" dest="state_mutability [14841,14845]"/>
  <match src="returns: returns [11156,11163]" dest="returns: returns [11156,11163]"/>
  <match src="type_name [13253,13260]" dest="type_name [23780,23787]"/>
  <match src="identifier: SafeMath [702,710]" dest="identifier: SafeMath [702,710]"/>
  <match src="identifier: require [59297,59304]" dest="identifier: decrementBalanceOf [73147,73165]"/>
  <match src="(: ( [83337,83338]" dest="(: ( [71373,71374]"/>
  <match src="(: ( [32718,32719]" dest="(: ( [49196,49197]"/>
  <match src=".: . [11206,11207]" dest=".: . [11206,11207]"/>
  <match src="{: { [106091,106092]" dest="{: { [42096,42097]"/>
  <match src="private: private [35641,35648]" dest="private: private [52119,52126]"/>
  <match src="string_literal [26897,26933]" dest="string_literal [79727,79757]"/>
  <match src="function_definition [102976,103052]" dest="function_definition [38981,39057]"/>
  <match src="identifier: getPoolExitLockupEpochs [47770,47793]" dest="identifier: getPoolExitLockupEpochs [16351,16374]"/>
  <match src="state_mutability [29484,29488]" dest="state_mutability [45962,45966]"/>
  <match src="call_argument [22959,22997]" dest="call_argument [63799,63836]"/>
  <match src="identifier: value [83099,83104]" dest="identifier: value [70903,70908]"/>
  <match src="binary_expression [2036,2041]" dest="binary_expression [2036,2041]"/>
  <match src="}: } [67942,67943]" dest="}: } [68269,68270]"/>
  <match src="expression_statement [26571,26636]" dest="expression_statement [79539,79608]"/>
  <match src="uint256: uint256 [107727,107734]" dest="uint256: uint256 [43732,43739]"/>
  <match src="identifier: FILE [51016,51020]" dest="identifier: FILE [63015,63019]"/>
  <match src="identifier: coupons [97284,97291]" dest="identifier: coupons [33289,33296]"/>
  <match src="): ) [1014,1015]" dest="): ) [1014,1015]"/>
  <match src="call_argument [32947,32966]" dest="call_argument [49425,49444]"/>
  <match src="type_name [38148,38155]" dest="type_name [54626,54633]"/>
  <match src="identifier: newClaimable [83114,83126]" dest="identifier: timestamp [83140,83149]"/>
  <match src="string_literal [85949,85978]" dest="string_literal [80297,80312]"/>
  <match src="pure: pure [9053,9057]" dest="pure: pure [9053,9057]"/>
  <match src="identifier: b [10370,10371]" dest="identifier: b [10370,10371]"/>
  <match src="): ) [109470,109471]" dest="): ) [69246,69247]"/>
  <match src="is: is [16596,16598]" dest="is: is [60910,60912]"/>
  <match src="returns: returns [9897,9904]" dest="returns: returns [9897,9904]"/>
  <match src=".: . [93342,93343]" dest=".: . [76695,76696]"/>
  <match src="primitive_type [37071,37078]" dest="primitive_type [53549,53556]"/>
  <match src="pure: pure [47109,47113]" dest="pure: pure [15690,15694]"/>
  <match src="struct: struct [91059,91065]" dest="struct: struct [29486,29492]"/>
  <match src="private: private [45093,45100]" dest="private: private [13674,13681]"/>
  <match src="): ) [75836,75837]" dest="): ) [82133,82134]"/>
  <match src="expression_statement [87156,87287]" dest="expression_statement [78635,78750]"/>
  <match src="): ) [37890,37891]" dest="): ) [54368,54369]"/>
  <match src="comment: // Can modify account state [109339,109366]" dest="comment: // Can modify account state [69115,69142]"/>
  <match src="call_expression [76210,76217]" dest="call_expression [81359,81366]"/>
  <match src="return: return [95141,95147]" dest="return: return [31146,31152]"/>
  <match src=",: , [107525,107526]" dest=",: , [43530,43531]"/>
  <match src="primitive_type [91413,91420]" dest="primitive_type [29840,29847]"/>
  <match src="call_expression [53165,53187]" dest="call_expression [56239,56269]"/>
  <match src="parameter [6888,6899]" dest="parameter [6888,6899]"/>
  <match src="identifier: sender [83482,83488]" dest="identifier: sender [71491,71497]"/>
  <match src=",: , [34102,34103]" dest=",: , [50580,50581]"/>
  <match src=".: . [84353,84354]" dest=".: . [71979,71980]"/>
  <match src="parameter [9513,9524]" dest="parameter [9513,9524]"/>
  <match src="identifier: provider [95826,95834]" dest="identifier: provider [31831,31839]"/>
  <match src="contract_body [94725,101055]" dest="contract_body [30730,37060]"/>
  <match src="identifier: balanceOf [12947,12956]" dest="identifier: balanceOf [23474,23483]"/>
  <match src="pure: pure [46260,46264]" dest="pure: pure [14841,14845]"/>
  <match src="function_definition [3260,3392]" dest="function_definition [3260,3392]"/>
  <match src="binary_expression [37405,37415]" dest="binary_expression [53883,53893]"/>
  <match src="parameter [96687,96702]" dest="parameter [32692,32707]"/>
  <match src="function: function [5373,5381]" dest="function: function [5373,5381]"/>
  <match src="(: ( [83851,83852]" dest="(: ( [72888,72889]"/>
  <match src="visibility [103283,103291]" dest="visibility [39288,39296]"/>
  <match src="identifier: initialized [110041,110052]" dest="identifier: initialized [69817,69828]"/>
  <match src=",: , [83348,83349]" dest=",: , [71384,71385]"/>
  <match src="revert_statement [30614,31068]" dest="revert_statement [47092,47546]"/>
  <match src="state_mutability [56158,56162]" dest="state_mutability [22250,22254]"/>
  <match src="type_name [77485,77492]" dest="type_name [56729,56736]"/>
  <match src="(: ( [97990,97991]" dest="(: ( [33995,33996]"/>
  <match src="type_name [103094,103101]" dest="type_name [39099,39106]"/>
  <match src="variable_declaration [35234,35248]" dest="variable_declaration [51712,51726]"/>
  <match src="primitive_type [75535,75542]" dest="primitive_type [71908,71915]"/>
  <match src="member_expression [84919,84931]" dest="member_expression [81483,81495]"/>
  <match src="function: function [95388,95396]" dest="function: function [31393,31401]"/>
  <match src="state_variable_declaration [91537,91558]" dest="state_variable_declaration [29964,29985]"/>
  <match src="identifier: reason [107941,107947]" dest="identifier: reason [43946,43952]"/>
  <match src="return_type_definition [10585,10599]" dest="return_type_definition [10585,10599]"/>
  <match src="function_definition [88617,89244]" dest="function_definition [74284,74911]"/>
  <match src="if_statement [31250,31663]" dest="if_statement [47728,48141]"/>
  <match src="identifier: value [7522,7527]" dest="identifier: value [7522,7527]"/>
  <match src="identifier: value [9946,9951]" dest="identifier: value [9946,9951]"/>
  <match src=",: , [85934,85935]" dest=",: , [80282,80283]"/>
  <match src="return_statement [95914,95942]" dest="return_statement [31919,31947]"/>
  <match src="): ) [56264,56265]" dest="): ) [22356,22357]"/>
  <match src="function_definition [102680,102805]" dest="function_definition [38685,38810]"/>
  <match src="identifier: _state [104848,104854]" dest="identifier: _state [40853,40859]"/>
  <match src="call_expression [24265,24291]" dest="call_expression [56765,56799]"/>
  <match src="update_expression [8669,8672]" dest="update_expression [8669,8672]"/>
  <match src="identifier: _state [107763,107769]" dest="identifier: _state [43768,43774]"/>
  <match src="uint256: uint256 [100228,100235]" dest="uint256: uint256 [36233,36240]"/>
  <match src="parameter [56800,56810]" dest="parameter [22892,22902]"/>
  <match src="type_name [15051,15058]" dest="type_name [25578,25585]"/>
  <match src="{: { [103819,103820]" dest="{: { [39824,39825]"/>
  <match src="parameter [2345,2354]" dest="parameter [2345,2354]"/>
  <match src="identifier: b [10018,10019]" dest="identifier: b [10018,10019]"/>
  <match src="identifier: value [55248,55253]" dest="identifier: value [21340,21345]"/>
  <match src=",: , [55725,55726]" dest=",: , [21817,21818]"/>
  <match src="{: { [46736,46737]" dest="{: { [15317,15318]"/>
  <match src="(: ( [29562,29563]" dest="(: ( [46040,46041]"/>
  <match src="type_name [1463,1470]" dest="type_name [1463,1470]"/>
  <match src="parameter [65680,65684]" dest="parameter [81982,81986]"/>
  <match src="state_mutability [33934,33938]" dest="state_mutability [50412,50416]"/>
  <match src="member_expression [102462,102487]" dest="member_expression [38467,38492]"/>
  <match src="returns: returns [55264,55271]" dest="returns: returns [21356,21363]"/>
  <match src="&quot;: &quot; [22959,22960]" dest="&quot;: &quot; [63799,63800]"/>
  <match src="member_expression [87517,87529]" dest="member_expression [81318,81330]"/>
  <match src="primitive_type [83106,83113]" dest="primitive_type [83132,83139]"/>
  <match src="expression_statement [86562,86577]" dest="expression_statement [56901,56916]"/>
  <match src="pure: pure [29956,29960]" dest="pure: pure [46434,46438]"/>
  <match src="function: function [108411,108419]" dest="function: function [44416,44424]"/>
  <match src="identifier: candidate [99922,99931]" dest="identifier: candidate [35927,35936]"/>
  <match src="primitive_type [47696,47703]" dest="primitive_type [16277,16284]"/>
  <match src="identifier: Account [89972,89979]" dest="identifier: Account [28399,28406]"/>
  <match src=".: . [66478,66479]" dest=".: . [65830,65831]"/>
  <match src="call_argument [34449,34455]" dest="call_argument [50927,50933]"/>
  <match src="identifier: _state [98018,98024]" dest="identifier: _state [34023,34029]"/>
  <match src="=: = [29167,29168]" dest="=: = [45645,45646]"/>
  <match src=".: . [69590,69591]" dest=".: . [68032,68033]"/>
  <match src="identifier: stringify [32153,32162]" dest="identifier: stringify [48631,48640]"/>
  <match src="expression_statement [93407,93440]" dest="expression_statement [76760,76793]"/>
  <match src="expression_statement [93238,93275]" dest="expression_statement [76591,76628]"/>
  <match src="uint256: uint256 [99020,99027]" dest="uint256: uint256 [35025,35032]"/>
  <match src="identifier: b [3292,3293]" dest="identifier: b [3292,3293]"/>
  <match src="identifier: D256 [8604,8608]" dest="identifier: D256 [8604,8608]"/>
  <match src="event: event [55678,55683]" dest="event: event [21770,21775]"/>
  <match src="function_definition [7120,7303]" dest="function_definition [7120,7303]"/>
  <match src="call_argument [85591,85601]" dest="call_argument [72763,72773]"/>
  <match src="=: = [106860,106861]" dest="=: = [42865,42866]"/>
  <match src="function_body [100375,100436]" dest="function_body [36380,36441]"/>
  <match src="{: { [91530,91531]" dest="{: { [29957,29958]"/>
  <match src="parameter [56560,56570]" dest="parameter [22652,22662]"/>
  <match src=":: : [8348,8349]" dest=":: : [8348,8349]"/>
  <match src="identifier: _state [95459,95465]" dest="identifier: _state [31464,31470]"/>
  <match src="return_statement [98894,98942]" dest="return_statement [34899,34947]"/>
  <match src="state_variable_declaration [45085,45134]" dest="state_variable_declaration [13666,13715]"/>
  <match src="{: { [7709,7710]" dest="{: { [7709,7710]"/>
  <match src="call_argument [93356,93395]" dest="call_argument [76709,76748]"/>
  <match src="expression_statement [20835,20907]" dest="expression_statement [64480,64560]"/>
  <match src="primitive_type [95515,95522]" dest="primitive_type [31520,31527]"/>
  <match src="parameter [97370,97384]" dest="parameter [33375,33389]"/>
  <match src="primitive_type [83148,83155]" dest="primitive_type [78470,78477]"/>
  <match src="user_defined_type [90598,90605]" dest="user_defined_type [29025,29032]"/>
  <match src="parameter [7613,7622]" dest="parameter [7613,7622]"/>
  <match src="): ) [102494,102495]" dest="): ) [38499,38500]"/>
  <match src="[: [ [100694,100695]" dest="[: [ [36699,36700]"/>
  <match src="identifier: strategy [98639,98647]" dest="identifier: strategy [34644,34652]"/>
  <match src="?: ? [11284,11285]" dest="?: ? [11284,11285]"/>
  <match src="identifier: GOVERNANCE_EXPIRATION [46872,46893]" dest="identifier: GOVERNANCE_EXPIRATION [15453,15474]"/>
  <match src="&lt;: &lt; [10518,10519]" dest="&lt;: &lt; [10518,10519]"/>
  <match src="): ) [31396,31397]" dest="): ) [47874,47875]"/>
  <match src="expression_statement [83382,83426]" dest="expression_statement [71418,71462]"/>
  <match src="bytes: bytes [36805,36810]" dest="bytes: bytes [53283,53288]"/>
  <match src=".: . [97407,97408]" dest=".: . [33412,33413]"/>
  <match src="): ) [107847,107848]" dest="): ) [43852,43853]"/>
  <match src="): ) [97158,97159]" dest="): ) [33163,33164]"/>
  <match src="function_body [109693,109861]" dest="function_body [69469,69637]"/>
  <match src="string_literal [83969,84007]" dest="string_literal [81445,81459]"/>
  <match src="{: { [7261,7262]" dest="{: { [7261,7262]"/>
  <match src="uint256: uint256 [23404,23411]" dest="uint256: uint256 [57166,57173]"/>
  <match src="): ) [32305,32306]" dest="): ) [48783,48784]"/>
  <match src=".: . [96150,96151]" dest=".: . [32155,32156]"/>
  <match src="member_expression [83407,83417]" dest="member_expression [71443,71453]"/>
  <match src="user_defined_type [10006,10010]" dest="user_defined_type [10006,10010]"/>
  <match src="member_expression [104848,104888]" dest="member_expression [40853,40893]"/>
  <match src="): ) [48626,48627]" dest="): ) [17207,17208]"/>
  <match src="memory: memory [9219,9225]" dest="memory: memory [9219,9225]"/>
  <match src="number_literal: 11e17 [43675,43680]" dest="number_literal: 11e17 [12256,12261]"/>
  <match src="{: { [4017,4018]" dest="{: { [4017,4018]"/>
  <match src="identifier: FILE [67354,67358]" dest="identifier: FILE [81783,81787]"/>
  <match src="return: return [98361,98367]" dest="return: return [34366,34372]"/>
  <match src="identifier: D256 [9072,9076]" dest="identifier: D256 [9072,9076]"/>
  <match src=",: , [32724,32725]" dest=",: , [49202,49203]"/>
  <match src="}: } [46664,46665]" dest="}: } [15245,15246]"/>
  <match src="identifier: Decimal [47123,47130]" dest="identifier: Decimal [15704,15711]"/>
  <match src="expression_statement [106819,106864]" dest="expression_statement [42824,42869]"/>
  <match src="primitive_type [66772,66779]" dest="primitive_type [78306,78313]"/>
  <match src="function_definition [102813,102968]" dest="function_definition [38818,38973]"/>
  <match src="{: { [9531,9532]" dest="{: { [9531,9532]"/>
  <match src="): ) [99931,99932]" dest="): ) [35936,35937]"/>
  <match src="!=: != [35209,35211]" dest="!=: != [51687,51689]"/>
  <match src="): ) [9264,9265]" dest="): ) [9264,9265]"/>
  <match src="primitive_type [92952,92959]" dest="primitive_type [76305,76312]"/>
  <match src=",: , [15312,15313]" dest=",: , [25839,25840]"/>
  <match src="identifier: Deposit [82793,82800]" dest="identifier: Deposit [70729,70736]"/>
  <match src="identifier: add [102484,102487]" dest="identifier: add [38489,38492]"/>
  <match src="expression_statement [35891,35900]" dest="expression_statement [52369,52378]"/>
  <match src="return_type_definition [95204,95219]" dest="return_type_definition [31209,31224]"/>
  <match src="): ) [13310,13311]" dest="): ) [23837,23838]"/>
  <match src="parameter [54978,54991]" dest="parameter [21070,21083]"/>
  <match src="(: ( [96000,96001]" dest="(: ( [32005,32006]"/>
  <match src="uint256: uint256 [30524,30531]" dest="uint256: uint256 [47002,47009]"/>
  <match src="identifier: Unbond [85584,85590]" dest="identifier: Unbond [72756,72762]"/>
  <match src="call_argument [21069,21075]" dest="call_argument [56339,56345]"/>
  <match src="): ) [106005,106006]" dest="): ) [42010,42011]"/>
  <match src="constant: constant [44473,44481]" dest="constant: constant [13054,13062]"/>
  <match src="uint256: uint256 [31797,31804]" dest="uint256: uint256 [48275,48282]"/>
  <match src="return_type_definition [45679,45696]" dest="return_type_definition [14260,14277]"/>
  <match src="): ) [32586,32587]" dest="): ) [49064,49065]"/>
  <match src="state_mutability [65666,65670]" dest="state_mutability [81968,81972]"/>
  <match src="return_type_definition [55024,55038]" dest="return_type_definition [21116,21130]"/>
  <match src="parameter [29865,29877]" dest="parameter [46343,46355]"/>
  <match src="): ) [84670,84671]" dest="): ) [72246,72247]"/>
  <match src="identifier: candidate [107378,107387]" dest="identifier: candidate [43383,43392]"/>
  <match src="(: ( [47793,47794]" dest="(: ( [16374,16375]"/>
  <match src="block_statement [97207,97242]" dest="block_statement [33212,33247]"/>
  <match src="identifier: file [33797,33801]" dest="identifier: file [50275,50279]"/>
  <match src="call_argument [103581,103587]" dest="call_argument [39586,39592]"/>
  <match src="primitive_type [83249,83256]" dest="primitive_type [71286,71293]"/>
  <match src="source_file [0,111712]" dest="source_file [0,83834]"/>
  <match src="member_expression [109731,109772]" dest="member_expression [69507,69548]"/>
  <match src="external: external [14398,14406]" dest="external: external [24925,24933]"/>
  <match src="uint256: uint256 [99163,99170]" dest="uint256: uint256 [35168,35175]"/>
  <match src="parameter [56880,56887]" dest="parameter [22972,22979]"/>
  <match src="event: event [82966,82971]" dest="event: event [70941,70946]"/>
  <match src="function: function [100592,100600]" dest="function: function [36597,36605]"/>
  <match src="identifier: account [99872,99879]" dest="identifier: account [35877,35884]"/>
  <match src="call_expression [97002,97015]" dest="call_expression [33007,33020]"/>
  <match src="visibility [56638,56646]" dest="visibility [22730,22738]"/>
  <match src="number_literal: 1609405200 [44288,44298]" dest="number_literal: 1609405200 [12869,12879]"/>
  <match src="parameter [48828,48835]" dest="parameter [17409,17416]"/>
  <match src="type_cast_expression [36927,36954]" dest="type_cast_expression [53405,53432]"/>
  <match src="identifier: amount [104787,104793]" dest="identifier: amount [40792,40798]"/>
  <match src="}: } [47385,47386]" dest="}: } [15966,15967]"/>
  <match src="private: private [34657,34664]" dest="private: private [51135,51142]"/>
  <match src="type_name [8218,8222]" dest="type_name [8218,8222]"/>
  <match src="function_definition [56358,56419]" dest="function_definition [22450,22511]"/>
  <match src="if_statement [96928,96985]" dest="if_statement [32933,32990]"/>
  <match src="state_variable_declaration [45224,45276]" dest="state_variable_declaration [13805,13857]"/>
  <match src="identifier: BASE [9595,9599]" dest="identifier: BASE [9595,9599]"/>
  <match src="type_name [8585,8589]" dest="type_name [8585,8589]"/>
  <match src="): ) [9881,9882]" dest="): ) [9881,9882]"/>
  <match src="external: external [102025,102033]" dest="external: external [38030,38038]"/>
  <match src="event_paramater [83188,83204]" dest="event_paramater [83204,83218]"/>
  <match src=".: . [47169,47170]" dest=".: . [15750,15751]"/>
  <match src="identifier: value [9556,9561]" dest="identifier: value [9556,9561]"/>
  <match src="comment: // File: @openzeppelin/contracts/access/roles/MinterRole.sol [26987,27047]" dest="comment: // File: contracts/dao/Regulator.sol [65015,65051]"/>
  <match src="identifier: sender [53392,53398]" dest="identifier: sender [64779,64785]"/>
  <match src="call_argument [107649,107655]" dest="call_argument [43654,43660]"/>
  <match src="): ) [47946,47947]" dest="): ) [16527,16528]"/>
  <match src="identifier: bonded [102453,102459]" dest="identifier: bonded [38458,38464]"/>
  <match src="returns: returns [47687,47694]" dest="returns: returns [16268,16275]"/>
  <match src="call_expression [37788,37801]" dest="call_expression [54266,54279]"/>
  <match src="): ) [102663,102664]" dest="): ) [38668,38669]"/>
  <match src="identifier: Provider [90961,90969]" dest="identifier: Provider [29388,29396]"/>
  <match src="primitive_type [7412,7419]" dest="primitive_type [7412,7419]"/>
  <match src="primitive_type [4748,4755]" dest="primitive_type [4748,4755]"/>
  <match src="(: ( [93465,93466]" dest="(: ( [76818,76819]"/>
  <match src="(: ( [2378,2379]" dest="(: ( [2378,2379]"/>
  <match src="variable_declaration [75882,75906]" dest="variable_declaration [66993,67010]"/>
  <match src="identifier: require [22930,22937]" dest="identifier: decrementBalanceOfCoupons [63734,63759]"/>
  <match src="=: = [106412,106413]" dest="=: = [42417,42418]"/>
  <match src="): ) [9083,9084]" dest="): ) [9083,9084]"/>
  <match src="view: view [95880,95884]" dest="view: view [31885,31889]"/>
  <match src=",: , [84965,84966]" dest=",: , [81613,81614]"/>
  <match src=".: . [9945,9946]" dest=".: . [9945,9946]"/>
  <match src="): ) [30819,30820]" dest="): ) [47297,47298]"/>
  <match src="): ) [29759,29760]" dest="): ) [46237,46238]"/>
  <match src=",: , [30156,30157]" dest=",: , [46634,46635]"/>
  <match src="view: view [100352,100356]" dest="view: view [36357,36361]"/>
  <match src=".: . [81234,81235]" dest=".: . [60068,60069]"/>
  <match src="(: ( [2714,2715]" dest="(: ( [2714,2715]"/>
  <match src="event_paramater [82862,82885]" dest="event_paramater [70798,70821]"/>
  <match src="comment: // populate the most-significant character [37342,37384]" dest="comment: // populate the most-significant character [53820,53862]"/>
  <match src="identifier: stringify [37529,37538]" dest="identifier: stringify [54007,54016]"/>
  <match src="return_type_definition [48715,48732]" dest="return_type_definition [17296,17313]"/>
  <match src="member_expression [102766,102780]" dest="member_expression [38771,38785]"/>
  <match src="uint256: uint256 [44390,44397]" dest="uint256: uint256 [12971,12978]"/>
  <match src="library_declaration [43431,48882]" dest="library_declaration [12012,17463]"/>
  <match src="string [50908,50927]" dest="string [64621,64658]"/>
  <match src="type_name [105640,105647]" dest="type_name [41645,41652]"/>
  <match src="identifier: epoch [107035,107040]" dest="identifier: epoch [43040,43045]"/>
  <match src="variable_declaration [8585,8601]" dest="variable_declaration [8585,8601]"/>
  <match src="call_expression [103623,103656]" dest="call_expression [39628,39661]"/>
  <match src="=: = [107397,107398]" dest="=: = [43402,43403]"/>
  <match src="uint256: uint256 [106317,106324]" dest="uint256: uint256 [42322,42329]"/>
  <match src="expression_statement [22204,22294]" dest="expression_statement [62957,63077]"/>
  <match src="inheritance_specifier [16599,16606]" dest="inheritance_specifier [60913,60924]"/>
  <match src="): ) [8502,8503]" dest="): ) [8502,8503]"/>
  <match src="(: ( [56479,56480]" dest="(: ( [22571,22572]"/>
  <match src="(: ( [100612,100613]" dest="(: ( [36617,36618]"/>
  <match src="}: } [103718,103719]" dest="}: } [39723,39724]"/>
  <match src="{: { [43449,43450]" dest="{: { [12030,12031]"/>
  <match src="identifier: onlyFrozen [83841,83851]" dest="identifier: onlyFrozenOrFluid [72871,72888]"/>
  <match src="(: ( [99913,99914]" dest="(: ( [35918,35919]"/>
  <match src=".: . [98024,98025]" dest=".: . [34029,34030]"/>
  <match src="parenthesized_expression [33987,34512]" dest="parenthesized_expression [50465,50990]"/>
  <match src=".: . [9587,9588]" dest=".: . [9587,9588]"/>
  <match src="): ) [55115,55116]" dest="): ) [21207,21208]"/>
  <match src="array_access [106219,106241]" dest="array_access [42224,42246]"/>
  <match src="return_type_definition [48041,48058]" dest="return_type_definition [16622,16639]"/>
  <match src=".: . [8169,8170]" dest=".: . [8169,8170]"/>
  <match src="]: ] [105921,105922]" dest="]: ] [41926,41927]"/>
  <match src="primitive_type [77733,77740]" dest="primitive_type [56955,56962]"/>
  <match src="expression_statement [106435,106490]" dest="expression_statement [42440,42495]"/>
  <match src="(: ( [100227,100228]" dest="(: ( [36232,36233]"/>
  <match src="call_argument [11026,11037]" dest="call_argument [11026,11037]"/>
  <match src="comment: // determine the length of the input by finding the location of the last non-zero byte [34825,34911]" dest="comment: // determine the length of the input by finding the location of the last non-zero byte [51303,51389]"/>
  <match src="uint256: uint256 [46152,46159]" dest="uint256: uint256 [14733,14740]"/>
  <match src="}: } [21723,21724]" dest="}: } [57571,57572]"/>
  <match src="primitive_type [105799,105806]" dest="primitive_type [41804,41811]"/>
  <match src="(: ( [47695,47696]" dest="(: ( [16276,16277]"/>
  <match src="primitive_type [7145,7152]" dest="primitive_type [7145,7152]"/>
  <match src="=: = [38304,38305]" dest="=: = [54782,54783]"/>
  <match src="state_variable_declaration [43628,43681]" dest="state_variable_declaration [12209,12262]"/>
  <match src="primitive_type [34926,34933]" dest="primitive_type [51404,51411]"/>
  <match src="state_mutability [30567,30571]" dest="state_mutability [47045,47049]"/>
  <match src="function_definition [103060,103203]" dest="function_definition [39065,39208]"/>
  <match src="yul_path [101015,101019]" dest="yul_path [37020,37024]"/>
  <match src="number_literal: 0 [100714,100715]" dest="number_literal: 0 [36719,36720]"/>
  <match src="identifier: amount [103581,103587]" dest="identifier: amount [39586,39592]"/>
  <match src="type_name [64801,64813]" dest="type_name [27590,27602]"/>
  <match src="member_expression [67910,67921]" dest="member_expression [68245,68256]"/>
  <match src="call_argument [87032,87036]" dest="call_argument [59427,59431]"/>
  <match src="): ) [33326,33327]" dest="): ) [49804,49805]"/>
  <match src="type_name [97370,97384]" dest="type_name [33375,33389]"/>
  <match src=",: , [1495,1496]" dest=",: , [1495,1496]"/>
  <match src="}: } [100583,100584]" dest="}: } [36588,36589]"/>
  <match src="}: } [48098,48099]" dest="}: } [16679,16680]"/>
  <match src="parameter [48168,48187]" dest="parameter [16749,16768]"/>
  <match src="{: { [91256,91257]" dest="{: { [29683,29684]"/>
  <match src="expression_statement [38385,38430]" dest="expression_statement [54863,54908]"/>
  <match src="variable_declaration [35977,35994]" dest="variable_declaration [52455,52472]"/>
  <match src="type_name [69872,69879]" dest="type_name [72443,72450]"/>
  <match src="identifier: msg [85707,85710]" dest="identifier: msg [71852,71855]"/>
  <match src="identifier: Account [97471,97478]" dest="identifier: Account [33476,33483]"/>
  <match src="identifier: must [33960,33964]" dest="identifier: must [50438,50442]"/>
  <match src="): ) [38825,38826]" dest="): ) [55303,55304]"/>
  <match src="return_statement [102060,102073]" dest="return_statement [38065,38078]"/>
  <match src="call_argument [45553,45595]" dest="call_argument [14134,14176]"/>
  <match src="=: = [43830,43831]" dest="=: = [12411,12412]"/>
  <match src="identifier: owner [13623,13628]" dest="identifier: owner [24150,24155]"/>
  <match src="address: address [100462,100469]" dest="address: address [36467,36474]"/>
  <match src="identifier: candidate [100058,100067]" dest="identifier: candidate [36063,36072]"/>
  <match src="member_expression [84897,84907]" dest="member_expression [72486,72496]"/>
  <match src="==: == [10629,10631]" dest="==: == [10629,10631]"/>
  <match src="identifier: _state [103952,103958]" dest="identifier: _state [39957,39963]"/>
  <match src="comment: // ============ Structs ============ [6560,6596]" dest="comment: // ============ Structs ============ [6560,6596]"/>
  <match src="visibility [38557,38564]" dest="visibility [55035,55042]"/>
  <match src="identifier: compareTo [10354,10363]" dest="identifier: compareTo [10354,10363]"/>
  <match src="function: function [67701,67709]" dest="function: function [67950,67958]"/>
  <match src="primitive_type [83530,83537]" dest="primitive_type [71539,71546]"/>
  <match src="member_expression [9944,9951]" dest="member_expression [9944,9951]"/>
  <match src="&quot;: &quot; [21515,21516]" dest="&quot;: &quot; [57506,57507]"/>
  <match src="primitive_type [55727,55731]" dest="primitive_type [21819,21823]"/>
  <match src="address: address [80528,80535]" dest="address: address [61506,61513]"/>
  <match src="parameter [1891,1900]" dest="parameter [1891,1900]"/>
  <match src="memory: memory [11088,11094]" dest="memory: memory [11088,11094]"/>
  <match src="type_name [56062,56066]" dest="type_name [22154,22158]"/>
  <match src="): ) [48549,48550]" dest="): ) [17130,17131]"/>
  <match src="internal: internal [46704,46712]" dest="internal: internal [15285,15293]"/>
  <match src="(: ( [30278,30279]" dest="(: ( [46756,46757]"/>
  <match src="&quot;: &quot; [83678,83679]" dest="&quot;: &quot; [71696,71697]"/>
  <match src="type_name [72530,72537]" dest="type_name [66028,66035]"/>
  <match src="(: ( [9631,9632]" dest="(: ( [9631,9632]"/>
  <match src="string [95040,95060]" dest="string [31045,31065]"/>
  <match src="identifier: b [2695,2696]" dest="identifier: b [2695,2696]"/>
  <match src=",: , [53852,53853]" dest=",: , [61462,61463]"/>
  <match src="comment: // File: contracts/external/LibEIP712.sol [38841,38882]" dest="comment: // File: contracts/dao/Implementation.sol [82244,82285]"/>
  <match src="): ) [34701,34702]" dest="): ) [51179,51180]"/>
  <match src="}: } [9155,9156]" dest="}: } [9155,9156]"/>
  <match src="member_expression [102766,102785]" dest="member_expression [38771,38790]"/>
  <match src="any_pragma_token [87,112]" dest="any_pragma_token [87,112]"/>
  <match src="binary_expression [99626,99669]" dest="binary_expression [35631,35674]"/>
  <match src="identifier: value [8355,8360]" dest="identifier: value [8355,8360]"/>
  <match src="call_expression [100529,100576]" dest="call_expression [36534,36581]"/>
  <match src="type_name [19957,19964]" dest="type_name [18567,18574]"/>
  <match src="visibility [54855,54863]" dest="visibility [20947,20955]"/>
  <match src="expression_statement [85296,85350]" dest="expression_statement [63383,63442]"/>
  <match src="bytes32: bytes32 [33789,33796]" dest="bytes32: bytes32 [50267,50274]"/>
  <match src="identifier: file [33213,33217]" dest="identifier: file [49691,49695]"/>
  <match src="): ) [84299,84300]" dest="): ) [71938,71939]"/>
  <match src="indexed: indexed [83156,83163]" dest="indexed: indexed [78478,78485]"/>
  <match src="identifier: _state [95340,95346]" dest="identifier: _state [31345,31351]"/>
  <match src="function: function [7120,7128]" dest="function: function [7120,7128]"/>
  <match src="identifier: getPartial [10830,10840]" dest="identifier: getPartial [10830,10840]"/>
  <match src=",: , [102120,102121]" dest=",: , [38125,38126]"/>
  <match src="identifier: transfer [55132,55140]" dest="identifier: transfer [21224,21232]"/>
  <match src="parameter [10904,10923]" dest="parameter [10904,10923]"/>
  <match src="comment: /**      * @dev Storage slot with the address of the current implementation.      * This is the keccak-256 hash of &quot;eip1967.proxy.implementation&quot; subtracted by 1, and is      * validated in the constructor.      */ [92450,92668]" dest="comment: /**      * @dev Storage slot with the address of the current implementation.      * This is the keccak-256 hash of &quot;eip1967.proxy.implementation&quot; subtracted by 1, and is      * validated in the constructor.      */ [75803,76021]"/>
  <match src=",: , [56719,56720]" dest=",: , [22811,22812]"/>
  <match src="user_defined_type [47291,47303]" dest="user_defined_type [15872,15884]"/>
  <match src="identifier: char [37419,37423]" dest="identifier: char [53897,53901]"/>
  <match src="comment: /**      * Account      */ [96626,96654]" dest="comment: /**      * Account      */ [32631,32659]"/>
  <match src="identifier: BOOTSTRAPPING_PRICE [46453,46472]" dest="identifier: BOOTSTRAPPING_PRICE [15034,15053]"/>
  <match src="private: private [45367,45374]" dest="private: private [13948,13955]"/>
  <match src="): ) [96948,96949]" dest="): ) [32953,32954]"/>
  <match src="function_definition [32367,33153]" dest="function_definition [48845,49631]"/>
  <match src="identifier: greaterThanOrEqualTo [10253,10273]" dest="identifier: greaterThanOrEqualTo [10253,10273]"/>
  <match src="identifier: Status [97604,97610]" dest="identifier: Status [33609,33615]"/>
  <match src="}: } [48670,48671]" dest="}: } [17251,17252]"/>
  <match src="visibility [7635,7643]" dest="visibility [7635,7643]"/>
  <match src="identifier: account [108354,108361]" dest="identifier: account [44359,44366]"/>
  <match src=".: . [104479,104480]" dest=".: . [40484,40485]"/>
  <match src="return_statement [97222,97231]" dest="return_statement [33227,33236]"/>
  <match src="identifier: initialized [90904,90915]" dest="identifier: initialized [29331,29342]"/>
  <match src="function_body [95441,95488]" dest="function_body [31446,31493]"/>
  <match src="identifier: FILE [66517,66521]" dest="identifier: FILE [60999,61003]"/>
  <match src="): ) [55759,55760]" dest="): ) [21851,21852]"/>
  <match src="visibility [102138,102146]" dest="visibility [38143,38151]"/>
  <match src="identifier: PoolSetters [82461,82472]" dest="identifier: Setters [70611,70618]"/>
  <match src="if: if [29977,29979]" dest="if: if [46455,46457]"/>
  <match src="identifier: stringifyTruncated [33440,33458]" dest="identifier: stringifyTruncated [49918,49936]"/>
  <match src="state_mutability [8090,8094]" dest="state_mutability [8090,8094]"/>
  <match src="&quot;: &quot; [26932,26933]" dest="&quot;: &quot; [79756,79757]"/>
  <match src="identifier: owner [54986,54991]" dest="identifier: owner [21078,21083]"/>
  <match src=".: . [48476,48477]" dest=".: . [17057,17058]"/>
  <match src="type_name [14778,14785]" dest="type_name [25305,25312]"/>
  <match src="event_paramater [83051,83074]" dest="event_paramater [70855,70878]"/>
  <match src="identifier: balanceOfBonded [96808,96823]" dest="identifier: balanceOfBonded [32813,32828]"/>
  <match src="call_argument [83962,83967]" dest="call_argument [73092,73097]"/>
  <match src=",: , [84069,84070]" dest=",: , [81895,81896]"/>
  <match src="identifier: require [1984,1991]" dest="identifier: require [1984,1991]"/>
  <match src="solidity_version_comparison_operator [69,71]" dest="solidity_version_comparison_operator [69,71]"/>
  <match src="identifier: LPAREN [32836,32842]" dest="identifier: LPAREN [49314,49320]"/>
  <match src=",: , [34344,34345]" dest=",: , [50822,50823]"/>
  <match src="internal: internal [6855,6863]" dest="internal: internal [6855,6863]"/>
  <match src="function_definition [96662,96791]" dest="function_definition [32667,32796]"/>
  <match src="address: address [56172,56179]" dest="address: address [22264,22271]"/>
  <match src="parameter [55338,55345]" dest="parameter [21430,21437]"/>
  <match src="return_statement [48501,48551]" dest="return_statement [17082,17132]"/>
  <match src="parameter [9072,9083]" dest="parameter [9072,9083]"/>
  <match src="function_body [47312,47386]" dest="function_body [15893,15967]"/>
  <match src="): ) [30208,30209]" dest="): ) [46686,46687]"/>
  <match src="identifier: Require [85740,85747]" dest="identifier: Require [81196,81203]"/>
  <match src="constant: constant [45240,45248]" dest="constant: constant [13821,13829]"/>
  <match src="uint256: uint256 [90147,90154]" dest="uint256: uint256 [28574,28581]"/>
  <match src="address: address [99746,99753]" dest="address: address [35751,35758]"/>
  <match src="parameter [7145,7154]" dest="parameter [7145,7154]"/>
  <match src="identifier: lessUsdc [86165,86173]" dest="identifier: lessRedeemable [62137,62151]"/>
  <match src="parameter [23404,23418]" dest="parameter [57166,57180]"/>
  <match src="): ) [37619,37620]" dest="): ) [54097,54098]"/>
  <match src="returns: returns [10035,10042]" dest="returns: returns [10035,10042]"/>
  <match src="(: ( [1062,1063]" dest="(: ( [1062,1063]"/>
  <match src="identifier: totalSupply [96580,96591]" dest="identifier: totalSupply [32585,32596]"/>
  <match src="function_body [95220,95248]" dest="function_body [31225,31253]"/>
  <match src=",: , [90684,90685]" dest=",: , [29111,29112]"/>
  <match src="[: [ [99393,99394]" dest="[: [ [35398,35399]"/>
  <match src="expression_statement [103130,103196]" dest="expression_statement [39135,39201]"/>
  <match src="[: [ [107416,107417]" dest="[: [ [43421,43422]"/>
  <match src="(: ( [52141,52142]" dest="(: ( [26776,26777]"/>
  <match src="identifier: balanceOfBonded [84863,84878]" dest="identifier: couponsForEpoch [62074,62089]"/>
  <match src="identifier: to [56808,56810]" dest="identifier: to [22900,22902]"/>
  <match src="address: address [14365,14372]" dest="address: address [24892,24899]"/>
  <match src="): ) [102160,102161]" dest="): ) [38165,38166]"/>
  <match src="-: - [53425,53426]" dest="-: - [64810,64811]"/>
  <match src="number_literal: 30 [44952,44954]" dest="number_literal: 30 [13533,13535]"/>
  <match src="call_argument [103978,103984]" dest="call_argument [39983,39989]"/>
  <match src="pure: pure [8090,8094]" dest="pure: pure [8090,8094]"/>
  <match src="call_argument [47175,47213]" dest="call_argument [15756,15794]"/>
  <match src="): ) [48341,48342]" dest="): ) [16922,16923]"/>
  <match src="identifier: price [69603,69608]" dest="identifier: price [68045,68050]"/>
  <match src="{: { [97160,97161]" dest="{: { [33165,33166]"/>
  <match src="function_definition [56010,56068]" dest="function_definition [22102,22160]"/>
  <match src="call_argument [50215,50219]" dest="call_argument [56517,56521]"/>
  <match src="call_expression [93238,93274]" dest="call_expression [76591,76627]"/>
  <match src="number_literal: 66 [37798,37800]" dest="number_literal: 66 [54276,54278]"/>
  <match src="identifier: candidates [107808,107818]" dest="identifier: candidates [43813,43823]"/>
  <match src="call_argument [105319,105325]" dest="call_argument [41324,41330]"/>
  <match src="&quot;: &quot; [93393,93394]" dest="&quot;: &quot; [76746,76747]"/>
  <match src="contract: contract [89963,89971]" dest="contract: contract [28390,28398]"/>
  <match src="identifier: Fluid [109767,109772]" dest="identifier: Fluid [69543,69548]"/>
  <match src="(: ( [35706,35707]" dest="(: ( [52184,52185]"/>
  <match src="(: ( [109675,109676]" dest="(: ( [69451,69452]"/>
  <match src="}: } [52150,52151]" dest="}: } [26785,26786]"/>
  <match src="return_type_definition [1955,1972]" dest="return_type_definition [1955,1972]"/>
  <match src="): ) [110068,110069]" dest="): ) [69844,69845]"/>
  <match src="(: ( [96414,96415]" dest="(: ( [32419,32420]"/>
  <match src="identifier: newClaimable [85626,85638]" dest="identifier: staged [72798,72804]"/>
  <match src="identifier: balanceOfCoupons [97081,97097]" dest="identifier: balanceOfCoupons [33086,33102]"/>
  <match src="{: { [8889,8890]" dest="{: { [8889,8890]"/>
  <match src="(: ( [96861,96862]" dest="(: ( [32866,32867]"/>
  <match src="identifier: self [10286,10290]" dest="identifier: self [10286,10290]"/>
  <match src="type_name [109286,109293]" dest="type_name [69062,69069]"/>
  <match src="(: ( [53391,53392]" dest="(: ( [64778,64779]"/>
  <match src="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [81764,82422]" dest="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [69913,70571]"/>
  <match src="(: ( [46536,46537]" dest="(: ( [15117,15118]"/>
  <match src="(: ( [70344,70345]" dest="(: ( [62761,62762]"/>
  <match src="type_name [37792,37797]" dest="type_name [54270,54275]"/>
  <match src="identifier: payloadB [32494,32502]" dest="identifier: payloadB [48972,48980]"/>
  <match src="comment: /**      * Epoch      */ [106022,106048]" dest="comment: /**      * Epoch      */ [42027,42053]"/>
  <match src="identifier: Candidate [90637,90646]" dest="identifier: Candidate [29064,29073]"/>
  <match src="function_definition [104064,104304]" dest="function_definition [40069,40309]"/>
  <match src="call_argument [7978,7984]" dest="call_argument [7978,7984]"/>
  <match src="parameter [103456,103471]" dest="parameter [39461,39476]"/>
  <match src="primitive_type [5459,5466]" dest="primitive_type [5459,5466]"/>
  <match src="call_argument [109930,109962]" dest="call_argument [69706,69738]"/>
  <match src="identifier: outstanding [90464,90475]" dest="identifier: outstanding [28891,28902]"/>
  <match src="(: ( [8340,8341]" dest="(: ( [8340,8341]"/>
  <match src="type_name [56721,56725]" dest="type_name [22813,22817]"/>
  <match src="parameter [102258,102272]" dest="parameter [38263,38277]"/>
  <match src="function_definition [107276,107455]" dest="function_definition [43281,43460]"/>
  <match src="member_expression [84557,84567]" dest="member_expression [73166,73176]"/>
  <match src="address: address [55689,55696]" dest="address: address [21781,21788]"/>
  <match src="): ) [100630,100631]" dest="): ) [36635,36636]"/>
  <match src="memory: memory [9077,9083]" dest="memory: memory [9077,9083]"/>
  <match src="==: == [35713,35715]" dest="==: == [52191,52193]"/>
  <match src="[: [ [97549,97550]" dest="[: [ [33554,33555]"/>
  <match src=",: , [53838,53839]" dest=",: , [61439,61440]"/>
  <match src="bytes32: bytes32 [34631,34638]" dest="bytes32: bytes32 [51109,51116]"/>
  <match src="returns: returns [48041,48048]" dest="returns: returns [16622,16629]"/>
  <match src="identifier: amount [102716,102722]" dest="identifier: amount [38721,38727]"/>
  <match src="uint: uint [55871,55875]" dest="uint: uint [21963,21967]"/>
  <match src="call_argument [87263,87275]" dest="call_argument [78721,78738]"/>
  <match src="uint256: uint256 [96215,96222]" dest="uint256: uint256 [32220,32227]"/>
  <match src="identifier: fluidUntil [97742,97752]" dest="identifier: fluidUntil [33747,33757]"/>
  <match src=",: , [103786,103787]" dest=",: , [39791,39792]"/>
  <match src="type_name [10475,10479]" dest="type_name [10475,10479]"/>
  <match src="type_name [106542,106549]" dest="type_name [42547,42554]"/>
  <match src="type_cast_expression [37914,37941]" dest="type_cast_expression [54392,54419]"/>
  <match src="number_literal: 0 [38070,38071]" dest="number_literal: 0 [54548,54549]"/>
  <match src="parameter [103473,103487]" dest="parameter [39478,39492]"/>
  <match src="parameter [54947,54951]" dest="parameter [21039,21043]"/>
  <match src="call_expression [103158,103195]" dest="call_expression [39163,39200]"/>
  <match src="(: ( [102540,102541]" dest="(: ( [38545,38546]"/>
  <match src="]: ] [105498,105499]" dest="]: ] [41503,41504]"/>
  <match src="(: ( [84461,84462]" dest="(: ( [72062,72063]"/>
  <match src="call_argument [32035,32040]" dest="call_argument [48513,48518]"/>
  <match src="contract: contract [64712,64720]" dest="contract: contract [27501,27509]"/>
  <match src="type_name [107911,107918]" dest="type_name [43916,43923]"/>
  <match src="primitive_type [34689,34694]" dest="primitive_type [51167,51172]"/>
  <match src="identifier: Require [28880,28887]" dest="identifier: Require [45358,45365]"/>
  <match src="member_expression [9122,9132]" dest="member_expression [9122,9132]"/>
  <match src="{: { [102162,102163]" dest="{: { [38167,38168]"/>
  <match src="uint256: uint256 [88694,88701]" dest="uint256: uint256 [74361,74368]"/>
  <match src="): ) [84907,84908]" dest="): ) [72496,72497]"/>
  <match src="returns: returns [10585,10592]" dest="returns: returns [10585,10592]"/>
  <match src="state_mutability [95101,95105]" dest="state_mutability [31106,31110]"/>
  <match src="assignment_expression [36105,36114]" dest="assignment_expression [52583,52592]"/>
  <match src="return: return [10611,10617]" dest="return: return [10611,10617]"/>
  <match src="): ) [9524,9525]" dest="): ) [9524,9525]"/>
  <match src="internal: internal [12163,12171]" dest="internal: internal [18393,18401]"/>
  <match src=".: . [47298,47299]" dest=".: . [15879,15880]"/>
  <match src="call_argument [86047,86057]" dest="call_argument [78672,78682]"/>
  <match src="binary_expression [4103,4108]" dest="binary_expression [4103,4108]"/>
  <match src="type_name [53854,53858]" dest="type_name [61441,61448]"/>
  <match src="primitive_type [27625,27632]" dest="primitive_type [56425,56432]"/>
  <match src="primitive_type [84107,84114]" dest="primitive_type [71810,71817]"/>
  <match src="function_body [29966,30397]" dest="function_body [46444,46875]"/>
  <match src=".: . [84062,84063]" dest=".: . [81888,81889]"/>
  <match src="identifier: candidate [108025,108034]" dest="identifier: candidate [44030,44039]"/>
  <match src="address: address [12957,12964]" dest="address: address [23484,23491]"/>
  <match src="identifier: balanceOfBonded [84881,84896]" dest="identifier: balanceOfBonded [72470,72485]"/>
  <match src="): ) [23076,23077]" dest="): ) [64138,64139]"/>
  <match src="uint112: uint112 [56289,56296]" dest="uint112: uint112 [22381,22388]"/>
  <match src="identifier: _state [102599,102605]" dest="identifier: _state [38604,38610]"/>
  <match src="(: ( [97013,97014]" dest="(: ( [33018,33019]"/>
  <match src=".: . [104950,104951]" dest=".: . [40955,40956]"/>
  <match src="event_paramater [55741,55759]" dest="event_paramater [21833,21851]"/>
  <match src="visibility [56843,56851]" dest="visibility [22935,22943]"/>
  <match src="): ) [99306,99307]" dest="): ) [35311,35312]"/>
  <match src="identifier: lockedUntil [108200,108211]" dest="identifier: lockedUntil [44205,44216]"/>
  <match src="parameter [29913,29929]" dest="parameter [46391,46407]"/>
  <match src="member_expression [103623,103648]" dest="member_expression [39628,39653]"/>
  <match src="call_argument [5495,5507]" dest="call_argument [5495,5507]"/>
  <match src=",: , [10290,10291]" dest=",: , [10290,10291]"/>
  <match src="event_paramater [55846,55860]" dest="event_paramater [21938,21952]"/>
  <match src="call_argument [100540,100549]" dest="call_argument [36545,36554]"/>
  <match src="primitive_type [15289,15296]" dest="primitive_type [25816,25823]"/>
  <match src="(: ( [56454,56455]" dest="(: ( [22546,22547]"/>
  <match src="member_expression [87156,87168]" dest="member_expression [78635,78647]"/>
  <match src="array_access [97401,97425]" dest="array_access [33406,33430]"/>
  <match src="(: ( [96191,96192]" dest="(: ( [32196,32197]"/>
  <match src="=: = [104539,104540]" dest="=: = [40544,40545]"/>
  <match src="type_name [17654,17661]" dest="type_name [58889,58896]"/>
  <match src=",: , [85915,85916]" dest=",: , [80263,80264]"/>
  <match src="): ) [14420,14421]" dest="): ) [24947,24948]"/>
  <match src="state_mutability [10030,10034]" dest="state_mutability [10030,10034]"/>
  <match src="internal: internal [1440,1448]" dest="internal: internal [1440,1448]"/>
  <match src="identifier: that [70434,70438]" dest="identifier: that [80544,80548]"/>
  <match src="call_argument [26599,26634]" dest="call_argument [79577,79606]"/>
  <match src="address: address [81340,81347]" dest="address: address [81157,81164]"/>
  <match src="function: function [101972,101980]" dest="function: function [37977,37985]"/>
  <match src="primitive_type [32391,32395]" dest="primitive_type [48869,48873]"/>
  <match src="uint256: uint256 [90269,90276]" dest="uint256: uint256 [28696,28703]"/>
  <match src="return: return [106701,106707]" dest="return: return [42706,42712]"/>
  <match src="[: [ [107070,107071]" dest="[: [ [43075,43076]"/>
  <match src="primitive_type [93288,93292]" dest="primitive_type [76641,76645]"/>
  <match src="parameter [7814,7823]" dest="parameter [7814,7823]"/>
  <match src="visibility [44209,44216]" dest="visibility [12790,12797]"/>
  <match src="identifier: epochs [99505,99511]" dest="identifier: epochs [35510,35516]"/>
  <match src="function_definition [54654,54708]" dest="function_definition [20746,20800]"/>
  <match src="return_type_definition [100644,100658]" dest="return_type_definition [36649,36663]"/>
  <match src="identifier: self [7799,7803]" dest="identifier: self [7799,7803]"/>
  <match src="}: } [97241,97242]" dest="}: } [33246,33247]"/>
  <match src="identifier: _state [103158,103164]" dest="identifier: _state [39163,39169]"/>
  <match src="return: return [7069,7075]" dest="return: return [7069,7075]"/>
  <match src="function: function [9164,9172]" dest="function: function [9164,9172]"/>
  <match src="member_expression [99498,99511]" dest="member_expression [35503,35516]"/>
  <match src="primitive_type [91160,91167]" dest="primitive_type [29587,29594]"/>
  <match src="function: function [7764,7772]" dest="function: function [7764,7772]"/>
  <match src="(: ( [45908,45909]" dest="(: ( [14489,14490]"/>
  <match src="=: = [36374,36375]" dest="=: = [52852,52853]"/>
  <match src="{: { [1973,1974]" dest="{: { [1973,1974]"/>
  <match src="address: address [97098,97105]" dest="address: address [33103,33110]"/>
  <match src="visibility [107949,107957]" dest="visibility [43954,43962]"/>
  <match src="call_argument [34403,34422]" dest="call_argument [50881,50900]"/>
  <match src="identifier: stringifyTruncated [30100,30118]" dest="identifier: stringifyTruncated [46578,46596]"/>
  <match src="member_expression [85186,85196]" dest="member_expression [72513,72523]"/>
  <match src="): ) [109691,109692]" dest="): ) [69467,69468]"/>
  <match src="identifier: deadline [50345,50353]" dest="identifier: newSupply [57612,57621]"/>
  <match src="address: address [31186,31193]" dest="address: address [47664,47671]"/>
  <match src="function_body [69244,69802]" dest="function_body [66905,67241]"/>
  <match src="parameter [38531,38544]" dest="parameter [55009,55022]"/>
  <match src="event_paramater [53792,53814]" dest="event_paramater [61399,61419]"/>
  <match src="): ) [55037,55038]" dest="): ) [21129,21130]"/>
  <match src="identifier: amount [17406,17412]" dest="identifier: amount [59523,59529]"/>
  <match src="type_alias [66459,66466]" dest="type_alias [65811,65818]"/>
  <match src=",: , [69306,69307]" dest=",: , [67097,67098]"/>
  <match src=",: , [8425,8426]" dest=",: , [8425,8426]"/>
  <match src="state_mutability [3994,3998]" dest="state_mutability [3994,3998]"/>
  <match src="function: function [96393,96401]" dest="function: function [32398,32406]"/>
  <match src="visibility [103001,103009]" dest="visibility [39006,39014]"/>
  <match src="identifier: COMMA [29161,29166]" dest="identifier: COMMA [45639,45644]"/>
  <match src="}: } [100435,100436]" dest="}: } [36440,36441]"/>
  <match src="return: return [67902,67908]" dest="return: return [68238,68244]"/>
  <match src="expression_statement [83438,83453]" dest="expression_statement [57550,57565]"/>
  <match src="]: ] [36923,36924]" dest="]: ] [53401,53402]"/>
  <match src="]: ] [107996,107997]" dest="]: ] [44001,44002]"/>
  <match src="return: return [7496,7502]" dest="return: return [7496,7502]"/>
  <match src="view: view [56518,56522]" dest="view: view [22610,22614]"/>
  <match src="return_type_definition [38580,38594]" dest="return_type_definition [55058,55072]"/>
  <match src="(: ( [106780,106781]" dest="(: ( [42785,42786]"/>
  <match src="if_statement [29977,30390]" dest="if_statement [46455,46868]"/>
  <match src="call_argument [103695,103702]" dest="call_argument [39700,39707]"/>
  <match src="type_name [22877,22884]" dest="type_name [64010,64017]"/>
  <match src="(: ( [87002,87003]" dest="(: ( [59393,59394]"/>
  <match src=".: . [99053,99054]" dest=".: . [35058,35059]"/>
  <match src="&quot;: &quot; [93845,93846]" dest="&quot;: &quot; [77198,77199]"/>
  <match src="call_struct_argument [8343,8367]" dest="call_struct_argument [8343,8367]"/>
  <match src="string [27410,27460]" dest="string [72706,72737]"/>
  <match src="identifier: require [2707,2714]" dest="identifier: require [2707,2714]"/>
  <match src="}: } [8368,8369]" dest="}: } [8368,8369]"/>
  <match src="type_name [46274,46281]" dest="type_name [14855,14862]"/>
  <match src="call_expression [11000,11021]" dest="call_expression [11000,11021]"/>
  <match src="identifier: debt [103036,103040]" dest="identifier: debt [39041,39045]"/>
  <match src="variable_declaration_statement [69583,69680]" dest="variable_declaration_statement [68024,68085]"/>
  <match src="}: } [106718,106719]" dest="}: } [42723,42724]"/>
  <match src="type_name [15071,15078]" dest="type_name [25598,25605]"/>
  <match src="function_definition [1878,2070]" dest="function_definition [1878,2070]"/>
  <match src="call_argument [36892,36902]" dest="call_argument [53370,53380]"/>
  <match src="(: ( [54877,54878]" dest="(: ( [20969,20970]"/>
  <match src="public: public [53298,53304]" dest="public: public [62741,62747]"/>
  <match src=",: , [1498,1499]" dest=",: , [1498,1499]"/>
  <match src="number_literal: 0x3a20 [29124,29130]" dest="number_literal: 0x3a20 [45602,45608]"/>
  <match src="function_body [107752,107856]" dest="function_body [43757,43861]"/>
  <match src="number_literal: 4 [38453,38454]" dest="number_literal: 4 [54931,54932]"/>
  <match src=".: . [104175,104176]" dest=".: . [40180,40181]"/>
  <match src="return_type_definition [10321,10335]" dest="return_type_definition [10321,10335]"/>
  <match src="function_body [99608,99677]" dest="function_body [35613,35682]"/>
  <match src="function: function [64766,64774]" dest="function: function [27555,27563]"/>
  <match src="function_definition [7764,7996]" dest="function_definition [7764,7996]"/>
  <match src="(: ( [104345,104346]" dest="(: ( [40350,40351]"/>
  <match src="identifier: _state [105337,105343]" dest="identifier: _state [41342,41348]"/>
  <match src="internal: internal [104401,104409]" dest="internal: internal [40406,40414]"/>
  <match src="identifier: reason [31753,31759]" dest="identifier: reason [48231,48237]"/>
  <match src="call_expression [86393,86406]" dest="call_expression [72992,73005]"/>
  <match src="(: ( [98837,98838]" dest="(: ( [34842,34843]"/>
  <match src="private: private [92682,92689]" dest="private: private [76035,76042]"/>
  <match src="identifier: pool [95866,95870]" dest="identifier: pool [31871,31875]"/>
  <match src="identifier: result [35199,35205]" dest="identifier: result [51677,51683]"/>
  <match src="&quot;: &quot; [93380,93381]" dest="&quot;: &quot; [76733,76734]"/>
  <match src=".: . [85197,85198]" dest=".: . [72498,72499]"/>
  <match src="visibility [55010,55018]" dest="visibility [21102,21110]"/>
  <match src="call_struct_argument [9556,9600]" dest="call_struct_argument [9556,9600]"/>
  <match src="public: public [95667,95673]" dest="public: public [31672,31678]"/>
  <match src="return_type_definition [7891,7912]" dest="return_type_definition [7891,7912]"/>
  <match src="address: address [15029,15036]" dest="address: address [25556,25563]"/>
  <match src="[: [ [106232,106233]" dest="[: [ [42237,42238]"/>
  <match src="type_name [8409,8413]" dest="type_name [8409,8413]"/>
  <match src="identifier: that [86930,86934]" dest="identifier: that [59301,59305]"/>
  <match src="=: = [37417,37418]" dest="=: = [53895,53896]"/>
  <match src="address: address [20683,20690]" dest="address: address [64305,64312]"/>
  <match src="identifier: impl [101015,101019]" dest="identifier: impl [37020,37024]"/>
  <match src="call_expression [8350,8367]" dest="call_expression [8350,8367]"/>
  <match src="memory: memory [11112,11118]" dest="memory: memory [11112,11118]"/>
  <match src="uint256: uint256 [45085,45092]" dest="uint256: uint256 [13666,13673]"/>
  <match src="internal: internal [31215,31223]" dest="internal: internal [47693,47701]"/>
  <match src="[: [ [105490,105491]" dest="[: [ [41495,41496]"/>
  <match src="string_literal [51149,51158]" dest="string_literal [56601,56643]"/>
  <match src="visibility [9883,9891]" dest="visibility [9883,9891]"/>
  <match src="call_expression [96571,96593]" dest="call_expression [32576,32598]"/>
  <match src="): ) [75719,75720]" dest="): ) [67678,67679]"/>
  <match src="contract_declaration [82444,87631]" dest="contract_declaration [70591,73298]"/>
  <match src=",: , [87401,87402]" dest=",: , [79220,79221]"/>
  <match src="visibility [70115,70123]" dest="visibility [71058,71066]"/>
  <match src=",: , [29877,29878]" dest=",: , [46355,46356]"/>
  <match src="identifier: notPaused [84131,84140]" dest="identifier: onlyFrozenOrFluid [71834,71851]"/>
  <match src="}: } [89210,89211]" dest="}: } [74877,74878]"/>
  <match src="identifier: D256 [94791,94795]" dest="identifier: D256 [30796,30800]"/>
  <match src="return_statement [6794,6820]" dest="return_statement [6794,6820]"/>
  <match src="pragma_value:  ABIEncoderV2 [99,112]" dest="pragma_value:  ABIEncoderV2 [99,112]"/>
  <match src="==: == [97201,97203]" dest="==: == [33206,33208]"/>
  <match src="type_name [96862,96869]" dest="type_name [32867,32874]"/>
  <match src="&quot;: &quot; [22189,22190]" dest="&quot;: &quot; [63721,63722]"/>
  <match src="-: - [37266,37267]" dest="-: - [53744,53745]"/>
  <match src="identifier: totalSupply [96904,96915]" dest="identifier: totalSupply [32909,32920]"/>
  <match src="call_expression [7090,7101]" dest="call_expression [7090,7101]"/>
  <match src="primitive_type [102708,102715]" dest="primitive_type [38713,38720]"/>
  <match src="parameter [5459,5466]" dest="parameter [5459,5466]"/>
  <match src="identifier: balanceOf [74567,74576]" dest="identifier: balanceOf [59329,59338]"/>
  <match src="function_definition [54776,54826]" dest="function_definition [20868,20918]"/>
  <match src="return_statement [47716,47746]" dest="return_statement [16297,16327]"/>
  <match src="identifier: periodFor [100040,100049]" dest="identifier: periodFor [36045,36054]"/>
  <match src="constant: constant [28951,28959]" dest="constant: constant [45429,45437]"/>
  <match src="event_definition [82787,82841]" dest="event_definition [70723,70777]"/>
  <match src=".: . [82617,82618]" dest=".: . [63763,63764]"/>
  <match src="identifier: _state [108338,108344]" dest="identifier: _state [44343,44349]"/>
  <match src="user_defined_type [95792,95799]" dest="user_defined_type [31797,31804]"/>
  <match src="identifier: candidate [100621,100630]" dest="identifier: candidate [36626,36635]"/>
  <match src="bytes32: bytes32 [37549,37556]" dest="bytes32: bytes32 [54027,54034]"/>
  <match src="identifier: _state [99981,99987]" dest="identifier: _state [35986,35992]"/>
  <match src="address: address [50207,50214]" dest="address: address [56509,56516]"/>
  <match src="identifier: ASCII_RELATIVE_ZERO [29006,29025]" dest="identifier: ASCII_RELATIVE_ZERO [45484,45503]"/>
  <match src="interface_declaration [54464,56910]" dest="interface_declaration [20556,23002]"/>
  <match src="type_name [100921,100928]" dest="type_name [36926,36933]"/>
  <match src="member_expression [102438,102452]" dest="member_expression [38443,38457]"/>
  <match src="member_expression [93356,93379]" dest="member_expression [76709,76732]"/>
  <match src="identifier: require [1055,1062]" dest="identifier: require [1055,1062]"/>
  <match src="identifier: to [15067,15069]" dest="identifier: to [25594,25596]"/>
  <match src="function: function [56546,56554]" dest="function: function [22638,22646]"/>
  <match src="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [79809,80467]" dest="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [68350,69008]"/>
  <match src="member_expression [97572,97586]" dest="member_expression [33577,33591]"/>
  <match src="identifier: sender [83897,83903]" dest="identifier: sender [71627,71633]"/>
  <match src="identifier: amount1 [55663,55670]" dest="identifier: amount1 [21755,21762]"/>
  <match src="string_literal [59322,59347]" dest="string_literal [73187,73218]"/>
  <match src="identifier: result [37779,37785]" dest="identifier: result [54257,54263]"/>
  <match src="internal: internal [33920,33928]" dest="internal: internal [50398,50406]"/>
  <match src="address: address [15051,15058]" dest="address: address [25578,25585]"/>
  <match src="function: function [104986,104994]" dest="function: function [40991,40999]"/>
  <match src="struct_declaration [90954,91051]" dest="struct_declaration [29381,29478]"/>
  <match src="member_expression [86262,86301]" dest="member_expression [80356,80405]"/>
  <match src="primitive_type [100946,100953]" dest="primitive_type [36951,36958]"/>
  <match src="parameter [100502,100509]" dest="parameter [36507,36514]"/>
  <match src=".: . [99504,99505]" dest=".: . [35509,35510]"/>
  <match src="): ) [97998,97999]" dest="): ) [34003,34004]"/>
  <match src="identifier: encodePacked [34039,34051]" dest="identifier: encodePacked [50517,50529]"/>
  <match src="type_cast_expression [86967,86980]" dest="type_cast_expression [59595,59608]"/>
  <match src="pure: pure [47805,47809]" dest="pure: pure [16386,16390]"/>
  <match src="identifier: balance [104524,104531]" dest="identifier: balance [40529,40536]"/>
  <match src=".: . [94790,94791]" dest=".: . [30795,30796]"/>
  <match src="(: ( [95091,95092]" dest="(: ( [31096,31097]"/>
  <match src="parameter [56626,56636]" dest="parameter [22718,22728]"/>
  <match src="): ) [68688,68689]" dest="): ) [66180,66181]"/>
  <match src="): ) [34265,34266]" dest="): ) [50743,50744]"/>
  <match src="string [83969,84007]" dest="string [81445,81459]"/>
  <match src="number_literal: 0xf [29310,29313]" dest="number_literal: 0xf [45788,45791]"/>
  <match src="function: function [96065,96073]" dest="function: function [32070,32078]"/>
  <match src="call_argument [84384,84389]" dest="call_argument [71970,72005]"/>
  <match src="return_type_definition [99593,99607]" dest="return_type_definition [35598,35612]"/>
  <match src=".: . [103337,103338]" dest=".: . [39342,39343]"/>
  <match src="identifier: mint [53083,53087]" dest="identifier: mintToAccount [56172,56185]"/>
  <match src="}: } [9395,9396]" dest="}: } [9395,9396]"/>
  <match src="if: if [106650,106652]" dest="if: if [42655,42657]"/>
  <match src="function_definition [106505,106871]" dest="function_definition [42510,42876]"/>
  <match src="type_name [53105,53112]" dest="type_name [56203,56210]"/>
  <match src="(: ( [79748,79749]" dest="(: ( [61918,61919]"/>
  <match src="&gt;: &gt; [4105,4106]" dest="&gt;: &gt; [4105,4106]"/>
  <match src="): ) [48835,48836]" dest="): ) [17416,17417]"/>
  <match src="constant: constant [43906,43914]" dest="constant: constant [12487,12495]"/>
  <match src="inheritance_specifier [109269,109276]" dest="inheritance_specifier [69045,69052]"/>
  <match src="assignment_expression [37315,37325]" dest="assignment_expression [53793,53803]"/>
  <match src="user_defined_type [90981,90988]" dest="user_defined_type [29408,29415]"/>
  <match src="view: view [99315,99319]" dest="view: view [35320,35324]"/>
  <match src="returns: returns [10466,10473]" dest="returns: returns [10466,10473]"/>
  <match src="): ) [84034,84035]" dest="): ) [60165,60166]"/>
  <match src="function_body [46854,46901]" dest="function_body [15435,15482]"/>
  <match src="function_definition [108078,108403]" dest="function_definition [44083,44408]"/>
  <match src="member_expression [85477,85487]" dest="member_expression [80013,80023]"/>
  <match src="identifier: amount [102649,102655]" dest="identifier: amount [38654,38660]"/>
  <match src="[: [ [108488,108489]" dest="[: [ [44493,44494]"/>
  <match src="=: = [108375,108376]" dest="=: = [44380,44381]"/>
  <match src="type_name [4008,4015]" dest="type_name [4008,4015]"/>
  <match src="private: private [109294,109301]" dest="private: private [69070,69077]"/>
  <match src="uint256: uint256 [91189,91196]" dest="uint256: uint256 [29616,29623]"/>
  <match src="): ) [103487,103488]" dest="): ) [39492,39493]"/>
  <match src="type_name [54634,54638]" dest="type_name [20726,20730]"/>
  <match src="identifier: block [60763,60768]" dest="identifier: block [83552,83557]"/>
  <match src="parameter [105021,105036]" dest="parameter [41026,41041]"/>
  <match src="identifier: startFor [108240,108248]" dest="identifier: startFor [44245,44253]"/>
  <match src="type_name [35562,35567]" dest="type_name [52040,52045]"/>
  <match src="call_expression [9563,9600]" dest="call_expression [9563,9600]"/>
  <match src="call_expression [51073,51169]" dest="call_expression [56574,56644]"/>
  <match src="primitive_type [95894,95901]" dest="primitive_type [31899,31906]"/>
  <match src="variable_declaration_tuple [93287,93322]" dest="variable_declaration_tuple [76640,76675]"/>
  <match src="address: address [66642,66649]" dest="address: address [78495,78502]"/>
  <match src="identifier: add [104889,104892]" dest="identifier: add [40894,40897]"/>
  <match src="parameter [27507,27522]" dest="parameter [56712,56727]"/>
  <match src="call_argument [105389,105395]" dest="call_argument [41394,41400]"/>
  <match src="&quot;: &quot; [20784,20785]" dest="&quot;: &quot; [64421,64422]"/>
  <match src="identifier: self [7397,7401]" dest="identifier: self [7397,7401]"/>
  <match src="returns: returns [48159,48166]" dest="returns: returns [16740,16747]"/>
  <match src="primitive_type [94751,94758]" dest="primitive_type [30756,30763]"/>
  <match src="return: return [95812,95818]" dest="return: return [31817,31823]"/>
  <match src="string_literal [26599,26634]" dest="string_literal [79577,79606]"/>
  <match src="primitive_type [55033,55037]" dest="primitive_type [21125,21129]"/>
  <match src="call_argument [31941,32306]" dest="call_argument [48419,48784]"/>
  <match src="}: } [90925,90926]" dest="}: } [29352,29353]"/>
  <match src="identifier: Decimal [66471,66478]" dest="identifier: Decimal [65823,65830]"/>
  <match src="member_expression [105874,105889]" dest="member_expression [41879,41894]"/>
  <match src=".: . [107366,107367]" dest=".: . [43371,43372]"/>
  <match src="uint256: uint256 [45359,45366]" dest="uint256: uint256 [13940,13947]"/>
  <match src="primitive_type [102105,102112]" dest="primitive_type [38110,38117]"/>
  <match src="memory: memory [7472,7478]" dest="memory: memory [7472,7478]"/>
  <match src="expression_statement [37457,37468]" dest="expression_statement [53935,53946]"/>
  <match src="expression_statement [105111,105213]" dest="expression_statement [41116,41218]"/>
  <match src="call_expression [93325,93396]" dest="call_expression [76678,76749]"/>
  <match src="identifier: totalBonded [97002,97013]" dest="identifier: totalBonded [33007,33018]"/>
  <match src="call_argument [38797,38824]" dest="call_argument [55275,55302]"/>
  <match src="function_definition [99541,99677]" dest="function_definition [35546,35682]"/>
  <match src="call_argument [103649,103655]" dest="call_argument [39654,39660]"/>
  <match src="string_literal [1071,1100]" dest="string_literal [1071,1100]"/>
  <match src="primitive_type [27201,27208]" dest="primitive_type [61181,61188]"/>
  <match src="): ) [4789,4790]" dest="): ) [4789,4790]"/>
  <match src="{: { [100659,100660]" dest="{: { [36664,36665]"/>
  <match src="primitive_type [5408,5414]" dest="primitive_type [5408,5414]"/>
  <match src="(: ( [30684,30685]" dest="(: ( [47162,47163]"/>
  <match src="[: [ [36875,36876]" dest="[: [ [53353,53354]"/>
  <match src="(: ( [96823,96824]" dest="(: ( [32828,32829]"/>
  <match src="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [36230,36292]" dest="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [52708,52770]"/>
  <match src="identifier: must [31866,31870]" dest="identifier: must [48344,48348]"/>
  <match src="visibility [49938,49945]" dest="visibility [62047,62054]"/>
  <match src="=: = [35818,35819]" dest="=: = [52296,52297]"/>
  <match src="uint: uint [55644,55648]" dest="uint: uint [21736,21740]"/>
  <match src="type_name [108432,108439]" dest="type_name [44437,44444]"/>
  <match src="identifier: Vote [90877,90881]" dest="identifier: Vote [29304,29308]"/>
  <match src="identifier: Decimal [64801,64808]" dest="identifier: Decimal [27590,27597]"/>
  <match src="type_name [90269,90276]" dest="type_name [28696,28703]"/>
  <match src="byte: byte [36927,36931]" dest="byte: byte [53405,53409]"/>
  <match src="call_argument [37919,37940]" dest="call_argument [54397,54418]"/>
  <match src="state_variable_declaration [29049,29087]" dest="state_variable_declaration [45527,45565]"/>
  <match src="external: external [56771,56779]" dest="external: external [22863,22871]"/>
  <match src="): ) [83862,83863]" dest="): ) [72899,72900]"/>
  <match src=",: , [55642,55643]" dest=",: , [21734,21735]"/>
  <match src="]: ] [103532,103533]" dest="]: ] [39537,39538]"/>
  <match src="identifier: allowance [53382,53391]" dest="identifier: allowanceCoupons [64762,64778]"/>
  <match src="comment: // populate the least-significant character [38186,38229]" dest="comment: // populate the least-significant character [54664,54707]"/>
  <match src="bool: bool [30429,30433]" dest="bool: bool [46907,46911]"/>
  <match src="{: { [105665,105666]" dest="{: { [41670,41671]"/>
  <match src="expression_statement [105874,106007]" dest="expression_statement [41879,42012]"/>
  <match src="state_mutability [11146,11150]" dest="state_mutability [11146,11150]"/>
  <match src="parameter [107927,107947]" dest="parameter [43932,43952]"/>
  <match src="parameter [106943,106960]" dest="parameter [42948,42965]"/>
  <match src="call_argument [53360,53366]" dest="call_argument [56524,56530]"/>
  <match src="identifier: reason [32442,32448]" dest="identifier: reason [48920,48926]"/>
  <match src="return_statement [35468,35482]" dest="return_statement [51946,51960]"/>
  <match src="call_argument [53341,53347]" dest="call_argument [64598,64604]"/>
  <match src="returns: returns [45900,45907]" dest="returns: returns [14481,14488]"/>
  <match src="memory: memory [46406,46412]" dest="memory: memory [14987,14993]"/>
  <match src="(: ( [103648,103649]" dest="(: ( [39653,39654]"/>
  <match src="member_expression [104848,104876]" dest="member_expression [40853,40881]"/>
  <match src="return_type_definition [56471,56485]" dest="return_type_definition [22563,22577]"/>
  <match src="identifier: self [8421,8425]" dest="identifier: self [8421,8425]"/>
  <match src="): ) [100933,100934]" dest="): ) [36938,36939]"/>
  <match src="contract_body [28888,38837]" dest="contract_body [45366,55315]"/>
  <match src="identifier: amount [103902,103908]" dest="identifier: amount [39907,39913]"/>
  <match src=",: , [10082,10083]" dest=",: , [10082,10083]"/>
  <match src="member_expression [107969,108004]" dest="member_expression [43974,44009]"/>
  <match src="primitive_type [100653,100657]" dest="primitive_type [36658,36662]"/>
  <match src="call_argument [31509,31515]" dest="call_argument [47987,47993]"/>
  <match src="identifier: vote [107256,107260]" dest="identifier: vote [43261,43265]"/>
  <match src="function_definition [56425,56486]" dest="function_definition [22517,22578]"/>
  <match src="binary_expression [37086,37092]" dest="binary_expression [53564,53570]"/>
  <match src="identifier: BASE [7284,7288]" dest="identifier: BASE [7284,7288]"/>
  <match src="visibility [79645,79653]" dest="visibility [61593,61601]"/>
  <match src="primitive_type [99746,99753]" dest="primitive_type [35751,35758]"/>
  <match src="parameter [84787,84800]" dest="parameter [72847,72860]"/>
  <match src="indexed: indexed [15274,15281]" dest="indexed: indexed [25801,25808]"/>
  <match src="parameter [80693,80700]" dest="parameter [57641,57648]"/>
  <match src="parameter [47456,47463]" dest="parameter [16037,16044]"/>
  <match src="expression_statement [104239,104297]" dest="expression_statement [40244,40302]"/>
  <match src="identifier: TREASURY_RATIO [48077,48091]" dest="identifier: TREASURY_RATIO [16658,16672]"/>
  <match src="type_name [56480,56484]" dest="type_name [22572,22576]"/>
  <match src="function: function [99250,99258]" dest="function: function [35255,35263]"/>
  <match src="type_name [54755,54761]" dest="type_name [20847,20853]"/>
  <match src="type_name [36805,36810]" dest="type_name [53283,53288]"/>
  <match src="): ) [95799,95800]" dest="): ) [31804,31805]"/>
  <match src=",: , [83488,83489]" dest=",: , [71497,71498]"/>
  <match src="external: external [86713,86721]" dest="external: external [63634,63642]"/>
  <match src="binary_expression [35199,35213]" dest="binary_expression [51677,51691]"/>
  <match src="internal: internal [103001,103009]" dest="internal: internal [39006,39014]"/>
  <match src="yul_evm_builtin [101023,101028]" dest="yul_evm_builtin [37028,37033]"/>
  <match src="identifier: balance [103165,103172]" dest="identifier: balance [39170,39177]"/>
  <match src="private: private [86903,86910]" dest="private: private [59274,59281]"/>
  <match src="identifier: D256 [9513,9517]" dest="identifier: D256 [9513,9517]"/>
  <match src="{: { [7058,7059]" dest="{: { [7058,7059]"/>
  <match src="type_name [7613,7620]" dest="type_name [7613,7620]"/>
  <match src="==: == [11202,11204]" dest="==: == [11202,11204]"/>
  <match src=".: . [87353,87354]" dest=".: . [79145,79146]"/>
  <match src="identifier: _state [102623,102629]" dest="identifier: _state [38628,38634]"/>
  <match src="primitive_type [2679,2686]" dest="primitive_type [2679,2686]"/>
  <match src="/=: /= [36475,36477]" dest="/=: /= [52953,52955]"/>
  <match src="}: } [102502,102503]" dest="}: } [38507,38508]"/>
  <match src="type_name [100754,100761]" dest="type_name [36759,36766]"/>
  <match src=".: . [103605,103606]" dest=".: . [39610,39611]"/>
  <match src="{: { [102049,102050]" dest="{: { [38054,38055]"/>
  <match src="comment: // benefit is lost if 'b' is also tested. [2488,2529]" dest="comment: // benefit is lost if 'b' is also tested. [2488,2529]"/>
  <match src="uint256: uint256 [86157,86164]" dest="uint256: uint256 [62129,62136]"/>
  <match src="identifier: to [55239,55241]" dest="identifier: to [21331,21333]"/>
  <match src="identifier: balanceCheck [83438,83450]" dest="identifier: balanceCheck [57550,57562]"/>
  <match src="=: = [107799,107800]" dest="=: = [43804,43805]"/>
  <match src="identifier: approveFor [100529,100539]" dest="identifier: approveFor [36534,36544]"/>
  <match src="call_argument [27682,27689]" dest="call_argument [56500,56507]"/>
  <match src="parenthesized_expression [30009,30378]" dest="parenthesized_expression [46487,46856]"/>
  <match src="modifier_invocation [83273,83295]" dest="modifier_invocation [78593,78623]"/>
  <match src="identifier: _state [95715,95721]" dest="identifier: _state [31720,31726]"/>
  <match src="identifier: amount [105061,105067]" dest="identifier: amount [41066,41072]"/>
  <match src="return: return [10729,10735]" dest="return: return [10729,10735]"/>
  <match src="view: view [99457,99461]" dest="view: view [35462,35466]"/>
  <match src="identifier: sub [1887,1890]" dest="identifier: sub [1887,1890]"/>
  <match src="expression_statement [38302,38313]" dest="expression_statement [54780,54791]"/>
  <match src="}: } [8186,8187]" dest="}: } [8186,8187]"/>
  <match src="identifier: j [36473,36474]" dest="identifier: j [52951,52952]"/>
  <match src="identifier: value [8343,8348]" dest="identifier: value [8343,8348]"/>
  <match src="member_expression [107360,107396]" dest="member_expression [43365,43401]"/>
  <match src=",: , [109791,109792]" dest=",: , [69567,69568]"/>
  <match src="bytes: bytes [37766,37771]" dest="bytes: bytes [54244,54249]"/>
  <match src="primitive_type [55821,55825]" dest="primitive_type [21913,21917]"/>
  <match src="primitive_type [84855,84862]" dest="primitive_type [62066,62073]"/>
  <match src="event_paramater [55644,55656]" dest="event_paramater [21736,21748]"/>
  <match src="visibility [98133,98139]" dest="visibility [34138,34144]"/>
  <match src="=: = [86348,86349]" dest="=: = [72961,72962]"/>
  <match src="memory: memory [10130,10136]" dest="memory: memory [10130,10136]"/>
  <match src="identifier: RPAREN [33655,33661]" dest="identifier: RPAREN [50133,50139]"/>
  <match src="function: function [102813,102821]" dest="function: function [38818,38826]"/>
  <match src="address: address [100050,100057]" dest="address: address [36055,36062]"/>
  <match src="member_expression [103021,103035]" dest="member_expression [39026,39040]"/>
  <match src="): ) [32887,32888]" dest="): ) [49365,49366]"/>
  <match src="uint256: uint256 [104115,104122]" dest="uint256: uint256 [40120,40127]"/>
  <match src="private: private [44678,44685]" dest="private: private [13259,13266]"/>
  <match src="struct_member [91160,91179]" dest="struct_member [29587,29606]"/>
  <match src="return_statement [37491,37505]" dest="return_statement [53969,53983]"/>
  <match src="member_expression [29585,29601]" dest="member_expression [46063,46079]"/>
  <match src="string [84999,85028]" dest="string [81647,81673]"/>
  <match src="{: { [9746,9747]" dest="{: { [9746,9747]"/>
  <match src="(: ( [30418,30419]" dest="(: ( [46896,46897]"/>
  <match src="): ) [82839,82840]" dest="): ) [70775,70776]"/>
  <match src="address: address [27201,27208]" dest="address: address [61181,61188]"/>
  <match src="solidity_pragma_token [61,77]" dest="solidity_pragma_token [61,77]"/>
  <match src="return_type_definition [37598,37620]" dest="return_type_definition [54076,54098]"/>
  <match src="identifier: input [36668,36673]" dest="identifier: input [53146,53151]"/>
  <match src="(: ( [68735,68736]" dest="(: ( [79311,79312]"/>
  <match src="identifier: Getters [101798,101805]" dest="identifier: Getters [37803,37810]"/>
  <match src="identifier: _state [106998,107004]" dest="identifier: _state [43003,43009]"/>
  <match src="identifier: incrementTotalBonded [102381,102401]" dest="identifier: incrementTotalBonded [38386,38406]"/>
  <match src="view: view [12983,12987]" dest="view: view [23510,23514]"/>
  <match src="state_mutability [48036,48040]" dest="state_mutability [16617,16621]"/>
  <match src="type_name [103473,103480]" dest="type_name [39478,39485]"/>
  <match src="returns: returns [47282,47289]" dest="returns: returns [15863,15870]"/>
  <match src="identifier: add [102786,102789]" dest="identifier: add [38791,38794]"/>
  <match src="uint256: uint256 [35836,35843]" dest="uint256: uint256 [52314,52321]"/>
  <match src="): ) [95871,95872]" dest="): ) [31876,31877]"/>
  <match src="{: { [48628,48629]" dest="{: { [17209,17210]"/>
  <match src="type_name [10968,10975]" dest="type_name [10968,10975]"/>
  <match src="identifier: msg [83407,83410]" dest="identifier: msg [71443,71446]"/>
  <match src="identifier: payloadA [33261,33269]" dest="identifier: payloadA [49739,49747]"/>
  <match src="call_expression [50132,50221]" dest="call_expression [56478,56531]"/>
  <match src="identifier: shift [38156,38161]" dest="identifier: shift [54634,54639]"/>
  <match src="{: { [98000,98001]" dest="{: { [34005,34006]"/>
  <match src="call_argument [1497,1498]" dest="call_argument [1497,1498]"/>
  <match src="identifier: Transfer [104011,104019]" dest="identifier: Transfer [40016,40024]"/>
  <match src="}: } [47221,47222]" dest="}: } [15802,15803]"/>
  <match src="primitive_type [20718,20725]" dest="primitive_type [64355,64362]"/>
  <match src="expression_statement [87346,87456]" dest="expression_statement [79138,79273]"/>
  <match src="function: function [98957,98965]" dest="function: function [34962,34970]"/>
  <match src="parameter [98752,98759]" dest="parameter [34757,34764]"/>
  <match src="parameter [2379,2386]" dest="parameter [2379,2386]"/>
  <match src="if: if [67782,67784]" dest="if: if [68211,68213]"/>
  <match src="{: { [102427,102428]" dest="{: { [38432,38433]"/>
  <match src="type_name [14365,14372]" dest="type_name [24892,24899]"/>
  <match src="identifier: accounts [105881,105889]" dest="identifier: accounts [41886,41894]"/>
  <match src="state_mutability [9494,9498]" dest="state_mutability [9494,9498]"/>
  <match src="returns: returns [100785,100792]" dest="returns: returns [36790,36797]"/>
  <match src="): ) [104295,104296]" dest="): ) [40300,40301]"/>
  <match src="user_defined_type [111117,111127]" dest="user_defined_type [70620,70630]"/>
  <match src="external: external [56638,56646]" dest="external: external [22730,22738]"/>
  <match src="function: function [12938,12946]" dest="function: function [23465,23473]"/>
  <match src="call_argument [30151,30156]" dest="call_argument [46629,46634]"/>
  <match src="comment: // each byte takes two characters [38101,38134]" dest="comment: // each byte takes two characters [54579,54612]"/>
  <match src=".: . [102483,102484]" dest=".: . [38488,38489]"/>
  <match src="call_argument [104037,104038]" dest="call_argument [40042,40043]"/>
  <match src="uint256: uint256 [1007,1014]" dest="uint256: uint256 [1007,1014]"/>
  <match src="address: address [102239,102246]" dest="address: address [38244,38251]"/>
  <match src="primitive_type [36648,36655]" dest="primitive_type [53126,53133]"/>
  <match src="call_expression [83382,83425]" dest="call_expression [71418,71461]"/>
  <match src=".: . [102444,102445]" dest=".: . [38449,38450]"/>
  <match src="call_argument [103369,103375]" dest="call_argument [39374,39380]"/>
  <match src="type_name [12957,12964]" dest="type_name [23484,23491]"/>
  <match src="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [42761,43419]" dest="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [11342,12000]"/>
  <match src=",: , [80700,80701]" dest=",: , [57648,57649]"/>
  <match src="&quot;: &quot; [22256,22257]" dest="&quot;: &quot; [63034,63035]"/>
  <match src="while: while [35861,35866]" dest="while: while [52339,52344]"/>
  <match src="call_argument [83284,83294]" dest="call_argument [78612,78622]"/>
  <match src="call_argument [81240,81253]" dest="call_argument [60074,60087]"/>
  <match src="parameter [103245,103259]" dest="parameter [39250,39264]"/>
  <match src="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [92721,92787]" dest="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [76074,76140]"/>
  <match src="state_variable_declaration [6521,6552]" dest="state_variable_declaration [6521,6552]"/>
  <match src="): ) [4015,4016]" dest="): ) [4015,4016]"/>
  <match src="type_cast_expression [36381,36409]" dest="type_cast_expression [52859,52887]"/>
  <match src="identifier: debt [91197,91201]" dest="identifier: debt [29624,29628]"/>
  <match src=",: , [67339,67340]" dest=",: , [81768,81769]"/>
  <match src="primitive_type [96544,96551]" dest="primitive_type [32549,32556]"/>
  <match src="expression_statement [38073,38080]" dest="expression_statement [54551,54558]"/>
  <match src="binary_expression [100677,100715]" dest="binary_expression [36682,36720]"/>
  <match src="primitive_type [46727,46734]" dest="primitive_type [15308,15315]"/>
  <match src="member_expression [105223,105263]" dest="member_expression [41228,41268]"/>
  <match src="identifier: value [9127,9132]" dest="identifier: value [9127,9132]"/>
  <match src="{: { [11179,11180]" dest="{: { [11179,11180]"/>
  <match src="function: function [107680,107688]" dest="function: function [43685,43693]"/>
  <match src="expression_statement [67280,67403]" dest="expression_statement [81697,81828]"/>
  <match src="type_name [97953,97960]" dest="type_name [33958,33965]"/>
  <match src="identifier: value [7943,7948]" dest="identifier: value [7943,7948]"/>
  <match src="identifier: epoch [105046,105051]" dest="identifier: epoch [41051,41056]"/>
  <match src="function_body [102733,102805]" dest="function_body [38738,38810]"/>
  <match src="[: [ [99369,99370]" dest="[: [ [35374,35375]"/>
  <match src="visibility [24515,24522]" dest="visibility [59869,59876]"/>
  <match src="number_literal: 0 [6815,6816]" dest="number_literal: 0 [6815,6816]"/>
  <match src="function: function [55195,55203]" dest="function: function [21287,21295]"/>
  <match src="string_literal [1500,1532]" dest="string_literal [1500,1532]"/>
  <match src="function: function [21416,21424]" dest="function: function [57421,57429]"/>
  <match src="inheritance_specifier [51958,51964]" dest="inheritance_specifier [26593,26599]"/>
  <match src="comment: // solhint-disable-next-line no-inline-assembly [89113,89160]" dest="comment: // solhint-disable-next-line no-inline-assembly [74780,74827]"/>
  <match src="parameter [13630,13645]" dest="parameter [24157,24172]"/>
  <match src=".: . [106760,106761]" dest=".: . [42765,42766]"/>
  <match src="bool: bool [29845,29849]" dest="bool: bool [46323,46327]"/>
  <match src="struct_member [90899,90916]" dest="struct_member [29326,29343]"/>
  <match src="identifier: candidates [91490,91500]" dest="identifier: candidates [29917,29927]"/>
  <match src="parameter [7165,7174]" dest="parameter [7165,7174]"/>
  <match src="primitive_type [105021,105028]" dest="primitive_type [41026,41033]"/>
  <match src="variable_declaration_statement [108222,108286]" dest="variable_declaration_statement [44227,44291]"/>
  <match src="assembly_statement [93907,93973]" dest="assembly_statement [77260,77326]"/>
  <match src="call_argument [30100,30124]" dest="call_argument [46578,46602]"/>
  <match src="return: return [96235,96241]" dest="return: return [32240,32246]"/>
  <match src="primitive_type [64822,64826]" dest="primitive_type [27611,27615]"/>
  <match src="): ) [86387,86388]" dest="): ) [72986,72987]"/>
  <match src="=: = [103329,103330]" dest="=: = [39334,39335]"/>
  <match src="): ) [55947,55948]" dest="): ) [22039,22040]"/>
  <match src="call_argument [104499,104505]" dest="call_argument [40504,40510]"/>
  <match src="identifier: Account [109752,109759]" dest="identifier: Account [69528,69535]"/>
  <match src="state_variable_declaration [44305,44351]" dest="state_variable_declaration [12886,12932]"/>
  <match src="primitive_type [90456,90463]" dest="primitive_type [28883,28890]"/>
  <match src="&quot;: &quot; [87051,87052]" dest="&quot;: &quot; [59446,59447]"/>
  <match src="): ) [107663,107664]" dest="): ) [43668,43669]"/>
  <match src="primitive_type [37868,37872]" dest="primitive_type [54346,54350]"/>
  <match src="function: function [106056,106064]" dest="function: function [42061,42069]"/>
  <match src="identifier: D256 [11083,11087]" dest="identifier: D256 [11083,11087]"/>
  <match src="comment: /*     Copyright 2018-2019 zOS Global Limited     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [91607,92309]" dest="comment: /*     Copyright 2018-2019 zOS Global Limited     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [74960,75662]"/>
  <match src="visibility [105854,105862]" dest="visibility [41859,41867]"/>
  <match src="member_expression [106102,106122]" dest="member_expression [42107,42127]"/>
  <match src="primitive_type [32628,32634]" dest="primitive_type [49106,49112]"/>
  <match src="call_argument [7532,7543]" dest="call_argument [7532,7543]"/>
  <match src="user_defined_type [10274,10278]" dest="user_defined_type [10274,10278]"/>
  <match src="): ) [104969,104970]" dest="): ) [40974,40975]"/>
  <match src="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [13687,14342]" dest="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [24214,24869]"/>
  <match src="assignment_expression [104911,104970]" dest="assignment_expression [40916,40975]"/>
  <match src="internal: internal [9271,9279]" dest="internal: internal [9271,9279]"/>
  <match src="primitive_type [55658,55662]" dest="primitive_type [21750,21754]"/>
  <match src="memory: memory [10279,10285]" dest="memory: memory [10279,10285]"/>
  <match src="member_expression [103599,103613]" dest="member_expression [39604,39618]"/>
  <match src="): ) [30343,30344]" dest="): ) [46821,46822]"/>
  <match src="pure: pure [10949,10953]" dest="pure: pure [10949,10953]"/>
  <match src="member_expression [50951,50963]" dest="member_expression [62957,62969]"/>
  <match src=".: . [67917,67918]" dest=".: . [68252,68253]"/>
  <match src="(: ( [4736,4737]" dest="(: ( [4736,4737]"/>
  <match src="type_name [6765,6769]" dest="type_name [6765,6769]"/>
  <match src="identifier: IERC20 [12707,12713]" dest="identifier: IERC20 [23234,23240]"/>
  <match src="primitive_type [30639,30645]" dest="primitive_type [47117,47123]"/>
  <match src="expression_statement [8689,8712]" dest="expression_statement [8689,8712]"/>
  <match src="identifier: balance [106736,106743]" dest="identifier: balance [42741,42748]"/>
  <match src="primitive_type [104363,104370]" dest="primitive_type [40368,40375]"/>
  <match src=":: : [8157,8158]" dest=":: : [8157,8158]"/>
  <match src="state_mutability [98245,98249]" dest="state_mutability [34250,34254]"/>
  <match src="function_definition [102372,102503]" dest="function_definition [38377,38508]"/>
  <match src="call_expression [85169,85197]" dest="call_expression [72503,72524]"/>
  <match src="&quot;: &quot; [82777,82778]" dest="&quot;: &quot; [70713,70714]"/>
  <match src="expression_statement [85360,85441]" dest="expression_statement [80052,80085]"/>
  <match src="type_name [20683,20690]" dest="type_name [64305,64312]"/>
  <match src="assignment_expression [104701,104794]" dest="assignment_expression [40706,40799]"/>
  <match src="{: { [29988,29989]" dest="{: { [46466,46467]"/>
  <match src="if: if [33955,33957]" dest="if: if [50433,50435]"/>
  <match src="call_argument [53171,53178]" dest="call_argument [56253,56260]"/>
  <match src="identifier: pool [95937,95941]" dest="identifier: pool [31942,31946]"/>
  <match src="(: ( [56171,56172]" dest="(: ( [22263,22264]"/>
  <match src="return_type_definition [8862,8883]" dest="return_type_definition [8862,8883]"/>
  <match src="): ) [54644,54645]" dest="): ) [20736,20737]"/>
  <match src="(: ( [8523,8524]" dest="(: ( [8523,8524]"/>
  <match src="uint256: uint256 [95432,95439]" dest="uint256: uint256 [31437,31444]"/>
  <match src="return: return [98011,98017]" dest="return: return [34016,34022]"/>
  <match src="identifier: staged [104254,104260]" dest="identifier: staged [40259,40265]"/>
  <match src="identifier: account [105491,105498]" dest="identifier: account [41496,41503]"/>
  <match src="): ) [86142,86143]" dest="): ) [80522,80523]"/>
  <match src="(: ( [54667,54668]" dest="(: ( [20759,20760]"/>
  <match src="(: ( [102707,102708]" dest="(: ( [38712,38713]"/>
  <match src="call_expression [104936,104970]" dest="call_expression [40941,40975]"/>
  <match src="): ) [8451,8452]" dest="): ) [8451,8452]"/>
  <match src="identifier: BOOTSTRAPPING_PERIOD [46301,46321]" dest="identifier: BOOTSTRAPPING_PERIOD [14882,14902]"/>
  <match src="identifier: epoch [104658,104663]" dest="identifier: epoch [40663,40668]"/>
  <match src="constant: constant [43644,43652]" dest="constant: constant [12225,12233]"/>
  <match src="assignment_expression [108471,108518]" dest="assignment_expression [44476,44523]"/>
  <match src="returns: returns [17645,17652]" dest="returns: returns [58880,58887]"/>
  <match src="state_mutability [6746,6750]" dest="state_mutability [6746,6750]"/>
  <match src="event: event [55767,55772]" dest="event: event [21859,21864]"/>
  <match src="member_expression [106219,106232]" dest="member_expression [42224,42237]"/>
  <match src="identifier: EpochStrategy [45909,45922]" dest="identifier: EpochStrategy [14490,14503]"/>
  <match src="state_variable_declaration [44670,44729]" dest="state_variable_declaration [13251,13310]"/>
  <match src="{: { [99029,99030]" dest="{: { [35034,35035]"/>
  <match src="member_expression [97523,97569]" dest="member_expression [33528,33574]"/>
  <match src="visibility [1941,1949]" dest="visibility [1941,1949]"/>
  <match src="uint256: uint256 [50337,50344]" dest="uint256: uint256 [57604,57611]"/>
  <match src="public: public [94986,94992]" dest="public: public [30991,30997]"/>
  <match src="identifier: accounts [95347,95355]" dest="identifier: accounts [31352,31360]"/>
  <match src="(: ( [33174,33175]" dest="(: ( [49652,49653]"/>
  <match src="identifier: epoch [85603,85608]" dest="identifier: epoch [72775,72780]"/>
  <match src="primitive_type [36376,36380]" dest="primitive_type [52854,52858]"/>
  <match src="internal: internal [105091,105099]" dest="internal: internal [41096,41104]"/>
  <match src=":: : [45984,45985]" dest=":: : [14565,14566]"/>
  <match src="primitive_type [47456,47463]" dest="primitive_type [16037,16044]"/>
  <match src="identifier: COLON [31424,31429]" dest="identifier: COLON [47902,47907]"/>
  <match src="type_cast_expression [104029,104039]" dest="type_cast_expression [40034,40044]"/>
  <match src="emit: emit [23137,23141]" dest="emit: emit [64216,64220]"/>
  <match src="address: address [103456,103463]" dest="address: address [39461,39468]"/>
  <match src="function_definition [106056,106160]" dest="function_definition [42061,42165]"/>
  <match src="memory: memory [8032,8038]" dest="memory: memory [8032,8038]"/>
  <match src="(: ( [14364,14365]" dest="(: ( [24891,24892]"/>
  <match src="member_expression [79703,79714]" dest="member_expression [61877,61888]"/>
  <match src="number_literal: 0 [20780,20781]" dest="number_literal: 0 [64417,64418]"/>
  <match src="call_expression [104455,104506]" dest="call_expression [40460,40511]"/>
  <match src="identifier: char [38516,38520]" dest="identifier: char [54994,54998]"/>
  <match src="primitive_type [34631,34638]" dest="primitive_type [51109,51116]"/>
  <match src="&quot;: &quot; [85027,85028]" dest="&quot;: &quot; [81672,81673]"/>
  <match src="identifier: reject [100422,100428]" dest="identifier: reject [36427,36433]"/>
  <match src="primitive_type [45688,45695]" dest="primitive_type [14269,14276]"/>
  <match src="=: = [66522,66523]" dest="=: = [61004,61005]"/>
  <match src="identifier: EPOCH_OFFSET [45986,45998]" dest="identifier: EPOCH_OFFSET [14567,14579]"/>
  <match src="primitive_type [55689,55696]" dest="primitive_type [21781,21788]"/>
  <match src="returns: returns [95106,95113]" dest="returns: returns [31111,31118]"/>
  <match src="function: function [100731,100739]" dest="function: function [36736,36744]"/>
  <match src="identifier: IDollar [90981,90988]" dest="identifier: IDollar [29408,29415]"/>
  <match src="function: function [97912,97920]" dest="function: function [33917,33925]"/>
  <match src="identifier: that [85748,85752]" dest="identifier: that [81204,81208]"/>
  <match src="identifier: amount [102266,102272]" dest="identifier: amount [38271,38277]"/>
  <match src="identifier: amount1In [55851,55860]" dest="identifier: amount1In [21943,21952]"/>
  <match src="member_expression [11276,11283]" dest="member_expression [11276,11283]"/>
  <match src="identifier: totalSupply [96890,96901]" dest="identifier: totalSupply [32895,32906]"/>
  <match src="call_argument [32957,32965]" dest="call_argument [49435,49443]"/>
  <match src="member_expression [103928,103942]" dest="member_expression [39933,39947]"/>
  <match src="call_struct_argument [45978,45998]" dest="call_struct_argument [14559,14579]"/>
  <match src="number_literal: 32 [34938,34940]" dest="number_literal: 32 [51416,51418]"/>
  <match src="call_struct_argument [7711,7745]" dest="call_struct_argument [7711,7745]"/>
  <match src="member_expression [84344,84383]" dest="member_expression [71960,71969]"/>
  <match src="variable_declaration_statement [37071,37085]" dest="variable_declaration_statement [53549,53563]"/>
  <match src="call_argument [33655,33661]" dest="call_argument [50133,50139]"/>
  <match src="identifier: reason [34180,34186]" dest="identifier: reason [50658,50664]"/>
  <match src="expression_statement [8662,8668]" dest="expression_statement [8662,8668]"/>
  <match src="struct_member [91212,91228]" dest="struct_member [29639,29655]"/>
  <match src="identifier: State [94719,94724]" dest="identifier: State [30724,30729]"/>
  <match src="primitive_type [99602,99606]" dest="primitive_type [35607,35611]"/>
  <match src="identifier: decrementBalanceOfClaimable [83922,83949]" dest="identifier: incrementBalanceOfStaged [72536,72560]"/>
  <match src=".: . [104445,104446]" dest=".: . [40450,40451]"/>
  <match src="{: { [37099,37100]" dest="{: { [53577,53578]"/>
  <match src="call_expression [111560,111568]" dest="call_expression [56991,56999]"/>
  <match src="identifier: _state [107608,107614]" dest="identifier: _state [43613,43619]"/>
  <match src="&gt;: &gt; [34944,34945]" dest="&gt;: &gt; [51422,51423]"/>
  <match src="[: [ [99871,99872]" dest="[: [ [35876,35877]"/>
  <match src="private: private [45509,45516]" dest="private: private [14090,14097]"/>
  <match src="event_paramater [55821,55835]" dest="event_paramater [21913,21927]"/>
  <match src="): ) [109961,109962]" dest="): ) [69737,69738]"/>
  <match src="}: } [90055,90056]" dest="}: } [28482,28483]"/>
  <match src="identifier: isNominated [100601,100612]" dest="identifier: isNominated [36606,36617]"/>
  <match src="identifier: a [4745,4746]" dest="identifier: a [4745,4746]"/>
  <match src="return_statement [10993,11039]" dest="return_statement [10993,11039]"/>
  <match src="identifier: blockTimestampLast [56332,56350]" dest="identifier: blockTimestampLast [22424,22442]"/>
  <match src=",: , [8704,8705]" dest=",: , [8704,8705]"/>
  <match src="parameter [10006,10019]" dest="parameter [10006,10019]"/>
  <match src=",: , [7602,7603]" dest=",: , [7602,7603]"/>
  <match src="): ) [56604,56605]" dest="): ) [22696,22697]"/>
  <match src="identifier: account [105127,105134]" dest="identifier: account [41132,41139]"/>
  <match src="primitive_type [66802,66809]" dest="primitive_type [78329,78336]"/>
  <match src="type_name [33205,33212]" dest="type_name [49683,49690]"/>
  <match src="}: } [2069,2070]" dest="}: } [2069,2070]"/>
  <match src="return: return [8329,8335]" dest="return: return [8329,8335]"/>
  <match src="variable_declaration [68648,68673]" dest="variable_declaration [66138,66163]"/>
  <match src="string [66524,66532]" dest="string [61006,61014]"/>
  <match src="primitive_type [88694,88701]" dest="primitive_type [74361,74368]"/>
  <match src="=: = [38404,38405]" dest="=: = [54882,54883]"/>
  <match src="state_mutability [33296,33300]" dest="state_mutability [49774,49778]"/>
  <match src="identifier: reason [104575,104581]" dest="identifier: reason [40580,40586]"/>
  <match src="identifier: D256 [9187,9191]" dest="identifier: D256 [9187,9191]"/>
  <match src="pure: pure [46831,46835]" dest="pure: pure [15412,15416]"/>
  <match src="member_expression [103021,103040]" dest="member_expression [39026,39045]"/>
  <match src="parameter [80653,80673]" dest="parameter [62897,62917]"/>
  <match src="view: view [96095,96099]" dest="view: view [32100,32104]"/>
  <match src="parameter [10044,10048]" dest="parameter [10044,10048]"/>
  <match src="identifier: outstandingCouponsForEpoch [106585,106611]" dest="identifier: outstandingCouponsForEpoch [42590,42616]"/>
  <match src="uint256: uint256 [8054,8061]" dest="uint256: uint256 [8054,8061]"/>
  <match src=".: . [83662,83663]" dest=".: . [71680,71681]"/>
  <match src="return_statement [89221,89237]" dest="return_statement [74888,74904]"/>
  <match src="type_name [3946,3953]" dest="type_name [3946,3953]"/>
  <match src="(: ( [31957,31958]" dest="(: ( [48435,48436]"/>
  <match src="identifier: FILE [87416,87420]" dest="identifier: FILE [79235,79239]"/>
  <match src="function_body [2388,2792]" dest="function_body [2388,2792]"/>
  <match src="uint256: uint256 [10968,10975]" dest="uint256: uint256 [10968,10975]"/>
  <match src="function: function [56612,56620]" dest="function: function [22704,22712]"/>
  <match src=":: : [46451,46452]" dest=":: : [15032,15033]"/>
  <match src="identifier: amount [103188,103194]" dest="identifier: amount [39193,39199]"/>
  <match src="parameter [55517,55532]" dest="parameter [21609,21624]"/>
  <match src="number_literal: 0 [8529,8530]" dest="number_literal: 0 [8529,8530]"/>
  <match src="): ) [83030,83031]" dest="): ) [71032,71033]"/>
  <match src="identifier: account [97550,97557]" dest="identifier: account [33555,33562]"/>
  <match src="call_argument [85707,85717]" dest="call_argument [71852,71862]"/>
  <match src=":: : [6813,6814]" dest=":: : [6813,6814]"/>
  <match src="function: function [9404,9412]" dest="function: function [9404,9412]"/>
  <match src="member_expression [86047,86057]" dest="member_expression [78672,78682]"/>
  <match src="binary_expression [2715,2725]" dest="binary_expression [2715,2725]"/>
  <match src="primitive_type [962,969]" dest="primitive_type [962,969]"/>
  <match src="=&gt;: =&gt; [91368,91370]" dest="=&gt;: =&gt; [29795,29797]"/>
  <match src="pure: pure [58137,58141]" dest="pure: pure [18655,18659]"/>
  <match src="contract_body [89980,90299]" dest="contract_body [28407,28726]"/>
  <match src="&quot;: &quot; [23075,23076]" dest="&quot;: &quot; [64137,64138]"/>
  <match src="function_body [84141,84763]" dest="function_body [71864,72321]"/>
  <match src="identifier: must [29405,29409]" dest="identifier: must [45883,45887]"/>
  <match src="(: ( [38588,38589]" dest="(: ( [55066,55067]"/>
  <match src="member_expression [102462,102476]" dest="member_expression [38467,38481]"/>
  <match src="struct_member [90782,90797]" dest="struct_member [29209,29224]"/>
  <match src="identifier: eliminateOutstandingCoupons [106514,106541]" dest="identifier: eliminateOutstandingCoupons [42519,42546]"/>
  <match src="[: [ [97732,97733]" dest="[: [ [33737,33738]"/>
  <match src="call_argument [87003,87016]" dest="call_argument [59394,59411]"/>
  <match src="call_argument [107657,107663]" dest="call_argument [43662,43668]"/>
  <match src="identifier: Constants [98279,98288]" dest="identifier: Constants [34284,34293]"/>
  <match src="identifier: value [84115,84120]" dest="identifier: value [71818,71823]"/>
  <match src="): ) [100097,100098]" dest="): ) [36102,36103]"/>
  <match src="uint: uint [56656,56660]" dest="uint: uint [22748,22752]"/>
  <match src="member_expression [11000,11025]" dest="member_expression [11000,11025]"/>
  <match src="returns: returns [55174,55181]" dest="returns: returns [21266,21273]"/>
  <match src="=: = [75683,75684]" dest="=: = [67663,67664]"/>
  <match src="type_name [44390,44397]" dest="type_name [12971,12978]"/>
  <match src="memory: memory [48181,48187]" dest="memory: memory [16762,16768]"/>
  <match src="uint: uint [55713,55717]" dest="uint: uint [21805,21809]"/>
  <match src="binary_expression [37177,37182]" dest="binary_expression [53655,53660]"/>
  <match src=".: . [107238,107239]" dest=".: . [43243,43244]"/>
  <match src="struct_member [90573,90588]" dest="struct_member [29000,29015]"/>
  <match src="identifier: sub [7572,7575]" dest="identifier: sub [7572,7575]"/>
</matches>
<actions>
  <move-tree tree="comment: // File: contracts/Constants.sol [42725,42757]" parent="source_file [0,83834]" at="9"/>
  <move-tree tree="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [42761,43419]" parent="source_file [0,83834]" at="10"/>
  <move-tree tree="library_declaration [43431,48882]" parent="source_file [0,83834]" at="11"/>
  <move-tree tree="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [48930,49588]" parent="source_file [0,83834]" at="13"/>
  <move-tree tree="interface_declaration [54464,56910]" parent="source_file [0,83834]" at="15"/>
  <move-tree tree="comment: // File: @openzeppelin/contracts/token/ERC20/ERC20.sol [15336,15390]" parent="source_file [0,83834]" at="66"/>
  <move-tree tree="contract_declaration [89963,90299]" parent="source_file [0,83834]" at="69"/>
  <move-tree tree="contract_declaration [90303,90624]" parent="source_file [0,83834]" at="70"/>
  <move-tree tree="contract_declaration [90628,90926]" parent="source_file [0,83834]" at="71"/>
  <move-tree tree="contract_declaration [90930,91511]" parent="source_file [0,83834]" at="72"/>
  <move-tree tree="contract_declaration [91515,91561]" parent="source_file [0,83834]" at="73"/>
  <move-tree tree="comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20Mintable}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [15404,16579]" parent="source_file [0,83834]" at="73"/>
  <move-tree tree="contract_declaration [94699,101055]" parent="source_file [0,83834]" at="77"/>
  <move-tree tree="comment: // File: @openzeppelin/contracts/token/ERC20/ERC20Burnable.sol [23607,23669]" parent="source_file [0,83834]" at="77"/>
  <move-tree tree="contract_declaration [101771,108529]" parent="source_file [0,83834]" at="81"/>
  <move-tree tree="comment: /**  * @dev Extension of {ERC20} that allows token holders to destroy both their own  * tokens and those that they have an allowance for, in a way that can be  * recognized off-chain (via event analysis).  */ [23681,23893]" parent="source_file [0,83834]" at="81"/>
  <move-tree tree="comment: // File: @openzeppelin/contracts/token/ERC20/ERC20Detailed.sol [24306,24368]" parent="source_file [0,83834]" at="81"/>
  <move-tree tree="comment: /**  * @dev Optional functions from the ERC20 standard.  */ [24378,24439]" parent="source_file [0,83834]" at="81"/>
  <move-tree tree="library_declaration [28872,38837]" parent="source_file [0,83834]" at="81"/>
  <move-tree tree="comment: // File: @openzeppelin/contracts/access/Roles.sol [25937,25986]" parent="source_file [0,83834]" at="81"/>
  <move-tree tree="comment: /**  * @title Roles  * @dev Library for managing addresses assigned to a Role.  */ [25994,26079]" parent="source_file [0,83834]" at="84"/>
  <move-tree tree="contract_declaration [16581,23603]" parent="source_file [0,83834]" at="89"/>
  <move-tree tree="comment: // File: @openzeppelin/contracts/access/roles/MinterRole.sol [26987,27047]" parent="source_file [0,83834]" at="89"/>
  <move-tree tree="contract_declaration [66419,70550]" parent="source_file [0,83834]" at="92"/>
  <move-tree tree="comment: // File: contracts/external/Require.sol [28060,28099]" parent="source_file [0,83834]" at="92"/>
  <move-tree tree="contract_declaration [109246,110095]" parent="source_file [0,83834]" at="96"/>
  <move-tree tree="comment: /*     Copyright 2019 dYdX Trading Inc.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [28103,28716]" parent="source_file [0,83834]" at="96"/>
  <move-tree tree="comment: /**  * @title Require  * @author dYdX  *  * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()  */ [28724,28870]" parent="source_file [0,83834]" at="109"/>
  <move-tree tree="comment: // File: contracts/external/LibEIP712.sol [38841,38882]" parent="source_file [0,83834]" at="111"/>
  <update-node tree="comment: // File: @openzeppelin/contracts/GSN/Context.sol [11306,11354]" label="// File: contracts/dao/Curve.sol"/>
  <insert-node tree="contract_declaration [18177,20483]" parent="source_file [0,83834]" at="14"/>
  <update-node tree="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [11362,11870]" label="// File: @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol"/>
  <update-node tree="comment: // File: @openzeppelin/contracts/token/ERC20/ERC20.sol [15336,15390]" label="// File: contracts/dao/State.sol"/>
  <update-node tree="comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20Mintable}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [15404,16579]" label="// File: contracts/dao/Getters.sol"/>
  <update-node tree="comment: // File: @openzeppelin/contracts/token/ERC20/ERC20Burnable.sol [23607,23669]" label="// File: contracts/dao/Setters.sol"/>
  <update-node tree="comment: /**  * @dev Extension of {ERC20} that allows token holders to destroy both their own  * tokens and those that they have an allowance for, in a way that can be  * recognized off-chain (via event analysis).  */ [23681,23893]" label="// File: contracts/external/Require.sol"/>
  <update-node tree="comment: // File: @openzeppelin/contracts/token/ERC20/ERC20Detailed.sol [24306,24368]" label="/*     Copyright 2019 dYdX Trading Inc.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */"/>
  <update-node tree="comment: /**  * @dev Optional functions from the ERC20 standard.  */ [24378,24439]" label="/**  * @title Require  * @author dYdX  *  * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()  */"/>
  <update-node tree="comment: // File: @openzeppelin/contracts/access/Roles.sol [25937,25986]" label="// File: contracts/dao/Comptroller.sol"/>
  <insert-node tree="contract_declaration [56035,60177]" parent="source_file [0,83834]" at="45"/>
  <update-node tree="comment: /**  * @title Roles  * @dev Library for managing addresses assigned to a Role.  */ [25994,26079]" label="// File: contracts/dao/Market.sol"/>
  <update-node tree="comment: // File: @openzeppelin/contracts/access/roles/MinterRole.sol [26987,27047]" label="// File: contracts/dao/Regulator.sol"/>
  <update-node tree="comment: // File: contracts/external/Require.sol [28060,28099]" label="// File: contracts/dao/Permission.sol"/>
  <update-node tree="comment: /*     Copyright 2019 dYdX Trading Inc.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [28103,28716]" label="// File: contracts/dao/Bonding.sol"/>
  <update-node tree="comment: /**  * @title Require  * @author dYdX  *  * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()  */ [28724,28870]" label="// File: contracts/dao/Govern.sol"/>
  <insert-node tree="contract_declaration [78059,82240]" parent="source_file [0,83834]" at="67"/>
  <update-node tree="comment: // File: contracts/external/LibEIP712.sol [38841,38882]" label="// File: contracts/dao/Implementation.sol"/>
  <insert-node tree="contract_declaration [82969,83834]" parent="source_file [0,83834]" at="70"/>
  <insert-node tree="contract: contract [18177,18185]" parent="contract_declaration [18177,20483]" at="0"/>
  <insert-node tree="identifier: Curve [18186,18191]" parent="contract_declaration [18177,20483]" at="1"/>
  <insert-node tree="contract_body [18192,20483]" parent="contract_declaration [18177,20483]" at="2"/>
  <insert-node tree="contract: contract [56035,56043]" parent="contract_declaration [56035,60177]" at="0"/>
  <insert-node tree="identifier: Comptroller [56044,56055]" parent="contract_declaration [56035,60177]" at="1"/>
  <insert-node tree="is: is [56056,56058]" parent="contract_declaration [56035,60177]" at="2"/>
  <insert-tree tree="inheritance_specifier [56059,56066]" parent="contract_declaration [56035,60177]" at="3"/>
  <insert-node tree="contract_body [56067,60177]" parent="contract_declaration [56035,60177]" at="4"/>
  <update-node tree="identifier: ERC20 [16590,16595]" label="Market"/>
  <move-tree tree="function_definition [20664,21135]" parent="contract_body [60932,65011]" at="28"/>
  <update-node tree="identifier: Oracle [66428,66434]" label="Regulator"/>
  <move-tree tree="function_definition [67701,67950]" parent="contract_body [65765,68305]" at="18"/>
  <update-node tree="identifier: Pool [82453,82457]" label="Bonding"/>
  <move-tree tree="inheritance_specifier [111117,111127]" parent="contract_declaration [70591,73298]" at="5"/>
  <move-tree tree="event_definition [82966,83032]" parent="contract_body [70631,73298]" at="8"/>
  <insert-node tree="contract: contract [78059,78067]" parent="contract_declaration [78059,82240]" at="0"/>
  <insert-node tree="identifier: Govern [78068,78074]" parent="contract_declaration [78059,82240]" at="1"/>
  <insert-node tree="is: is [78075,78077]" parent="contract_declaration [78059,82240]" at="2"/>
  <insert-tree tree="inheritance_specifier [78078,78085]" parent="contract_declaration [78059,82240]" at="3"/>
  <insert-node tree=",: , [78085,78086]" parent="contract_declaration [78059,82240]" at="4"/>
  <move-tree tree="inheritance_specifier [110849,110859]" parent="contract_declaration [78059,82240]" at="5"/>
  <insert-node tree=",: , [78097,78098]" parent="contract_declaration [78059,82240]" at="6"/>
  <move-tree tree="inheritance_specifier [110861,110872]" parent="contract_declaration [78059,82240]" at="7"/>
  <insert-node tree="contract_body [78111,82240]" parent="contract_declaration [78059,82240]" at="8"/>
  <insert-node tree="contract: contract [82969,82977]" parent="contract_declaration [82969,83834]" at="0"/>
  <insert-node tree="identifier: Implementation [82978,82992]" parent="contract_declaration [82969,83834]" at="1"/>
  <insert-node tree="is: is [82993,82995]" parent="contract_declaration [82969,83834]" at="2"/>
  <move-tree tree="inheritance_specifier [110842,110847]" parent="contract_declaration [82969,83834]" at="3"/>
  <insert-node tree=",: , [83001,83002]" parent="contract_declaration [82969,83834]" at="4"/>
  <insert-tree tree="inheritance_specifier [83003,83010]" parent="contract_declaration [82969,83834]" at="5"/>
  <insert-node tree=",: , [83010,83011]" parent="contract_declaration [82969,83834]" at="6"/>
  <insert-tree tree="inheritance_specifier [83012,83018]" parent="contract_declaration [82969,83834]" at="7"/>
  <insert-node tree=",: , [83018,83019]" parent="contract_declaration [82969,83834]" at="8"/>
  <insert-tree tree="inheritance_specifier [83020,83029]" parent="contract_declaration [82969,83834]" at="9"/>
  <insert-node tree=",: , [83029,83030]" parent="contract_declaration [82969,83834]" at="10"/>
  <insert-tree tree="inheritance_specifier [83031,83037]" parent="contract_declaration [82969,83834]" at="11"/>
  <insert-node tree="contract_body [83038,83834]" parent="contract_declaration [82969,83834]" at="12"/>
  <insert-node tree="{: { [18192,18193]" parent="contract_body [18192,20483]" at="0"/>
  <insert-tree tree="using_directive [18199,18226]" parent="contract_body [18192,20483]" at="1"/>
  <insert-tree tree="using_directive [18232,18263]" parent="contract_body [18192,20483]" at="2"/>
  <insert-node tree="function_definition [18271,18523]" parent="contract_body [18192,20483]" at="3"/>
  <insert-node tree="function_definition [18531,19834]" parent="contract_body [18192,20483]" at="4"/>
  <insert-node tree="comment: // 1/((1-R)^2)-1 [19842,19858]" parent="contract_body [18192,20483]" at="5"/>
  <insert-node tree="function_definition [19864,20078]" parent="contract_body [18192,20483]" at="6"/>
  <insert-node tree="comment: // 1/((1-R)(1-R'))-1 [20086,20106]" parent="contract_body [18192,20483]" at="7"/>
  <insert-node tree="function_definition [20112,20480]" parent="contract_body [18192,20483]" at="8"/>
  <insert-node tree="}: } [20482,20483]" parent="contract_body [18192,20483]" at="9"/>
  <insert-node tree="{: { [56067,56068]" parent="contract_body [56067,60177]" at="0"/>
  <move-tree tree="using_directive [73569,73596]" parent="contract_body [56067,60177]" at="1"/>
  <insert-tree tree="state_variable_declaration [56109,56155]" parent="contract_body [56067,60177]" at="2"/>
  <move-tree tree="function_definition [53074,53217]" parent="contract_body [56067,60177]" at="3"/>
  <insert-node tree="function_definition [56400,56679]" parent="contract_body [56067,60177]" at="4"/>
  <move-tree tree="function_definition [24196,24299]" parent="contract_body [56067,60177]" at="5"/>
  <insert-node tree="function_definition [56931,57136]" parent="contract_body [56067,60177]" at="6"/>
  <insert-node tree="function_definition [57144,57413]" parent="contract_body [56067,60177]" at="7"/>
  <move-tree tree="function_definition [21416,21724]" parent="contract_body [56067,60177]" at="8"/>
  <insert-node tree="function_definition [57580,58807]" parent="contract_body [56067,60177]" at="9"/>
  <insert-node tree="function_definition [58815,59242]" parent="contract_body [56067,60177]" at="10"/>
  <move-tree tree="function_definition [74485,74621]" parent="contract_body [56067,60177]" at="11"/>
  <move-tree tree="function_definition [86879,87100]" parent="contract_body [56067,60177]" at="12"/>
  <insert-node tree="function_definition [59687,59821]" parent="contract_body [56067,60177]" at="13"/>
  <insert-node tree="function_definition [59829,59991]" parent="contract_body [56067,60177]" at="14"/>
  <insert-node tree="function_definition [59999,60174]" parent="contract_body [56067,60177]" at="15"/>
  <insert-node tree="}: } [60176,60177]" parent="contract_body [56067,60177]" at="16"/>
  <move-tree tree="state_variable_declaration [66492,66533]" parent="contract_body [60932,65011]" at="2"/>
  <insert-node tree="event_definition [61023,61154]" parent="contract_body [60932,65011]" at="3"/>
  <insert-node tree="event_definition [61160,61273]" parent="contract_body [60932,65011]" at="4"/>
  <move-tree tree="event_definition [27132,27175]" parent="contract_body [60932,65011]" at="5"/>
  <move-tree tree="event_definition [53774,53860]" parent="contract_body [60932,65011]" at="6"/>
  <move-tree tree=",: , [53852,53853]" parent="event_definition [61378,61479]" at="9"/>
  <insert-node tree="event_definition [61485,61569]" parent="contract_body [60932,65011]" at="7"/>
  <move-tree tree="function_definition [79610,79759]" parent="contract_body [60932,65011]" at="8"/>
  <insert-node tree="function_definition [62001,62694]" parent="contract_body [60932,65011]" at="9"/>
  <move-tree tree="function_definition [70303,70388]" parent="contract_body [60932,65011]" at="10"/>
  <insert-node tree="function_definition [62872,63560]" parent="contract_body [60932,65011]" at="11"/>
  <insert-node tree="function_definition [63568,63978]" parent="contract_body [60932,65011]" at="12"/>
  <move-tree tree=",: , [22875,22876]" parent="function_definition [63986,64272]" at="5"/>
  <insert-tree tree="using_directive [65772,65799]" parent="contract_body [65765,68305]" at="1"/>
  <insert-node tree="event_definition [65844,65963]" parent="contract_body [65765,68305]" at="3"/>
  <insert-node tree="event_definition [65969,66045]" parent="contract_body [65765,68305]" at="4"/>
  <insert-node tree="event_definition [66051,66094]" parent="contract_body [65765,68305]" at="5"/>
  <insert-node tree="function_definition [66102,66488]" parent="contract_body [65765,68305]" at="6"/>
  <insert-node tree="function_definition [66496,66842]" parent="contract_body [65765,68305]" at="7"/>
  <insert-node tree="function_definition [67249,67942]" parent="contract_body [65765,68305]" at="9"/>
  <insert-node tree="function_definition [71042,71261]" parent="contract_body [70631,73298]" at="7"/>
  <insert-node tree="function_definition [72821,73295]" parent="contract_body [70631,73298]" at="12"/>
  <insert-node tree="{: { [78111,78112]" parent="contract_body [78111,82240]" at="0"/>
  <insert-tree tree="using_directive [78118,78145]" parent="contract_body [78111,82240]" at="1"/>
  <insert-tree tree="using_directive [78151,78182]" parent="contract_body [78111,82240]" at="2"/>
  <insert-tree tree="state_variable_declaration [78190,78231]" parent="contract_body [78111,82240]" at="3"/>
  <insert-node tree="event_definition [78239,78345]" parent="contract_body [78111,82240]" at="4"/>
  <insert-node tree="event_definition [78351,78451]" parent="contract_body [78111,82240]" at="5"/>
  <move-tree tree="event_definition [83134,83224]" parent="contract_body [78111,82240]" at="6"/>
  <insert-node tree="function_definition [78530,80151]" parent="contract_body [78111,82240]" at="7"/>
  <move-tree tree="function_definition [85655,86648]" parent="contract_body [78111,82240]" at="8"/>
  <insert-node tree="function_definition [81132,81915]" parent="contract_body [78111,82240]" at="9"/>
  <insert-node tree="function_definition [81923,82237]" parent="contract_body [78111,82240]" at="10"/>
  <insert-node tree="}: } [82239,82240]" parent="contract_body [78111,82240]" at="11"/>
  <insert-node tree="{: { [83038,83039]" parent="contract_body [83038,83834]" at="0"/>
  <move-tree tree="using_directive [77255,77282]" parent="contract_body [83038,83834]" at="1"/>
  <insert-node tree="event_definition [83080,83151]" parent="contract_body [83038,83834]" at="2"/>
  <move-tree tree="event_definition [82908,82960]" parent="contract_body [83038,83834]" at="3"/>
  <insert-node tree="function_definition [83228,83378]" parent="contract_body [83038,83834]" at="4"/>
  <insert-node tree="function_definition [83386,83576]" parent="contract_body [83038,83834]" at="5"/>
  <insert-node tree="modifier_definition [83584,83831]" parent="contract_body [83038,83834]" at="6"/>
  <insert-node tree="}: } [83833,83834]" parent="contract_body [83038,83834]" at="7"/>
  <insert-node tree="function: function [18271,18279]" parent="function_definition [18271,18523]" at="0"/>
  <insert-node tree="identifier: calculateCouponPremium [18280,18302]" parent="function_definition [18271,18523]" at="1"/>
  <insert-node tree="(: ( [18302,18303]" parent="function_definition [18271,18523]" at="2"/>
  <insert-node tree="parameter [18313,18332]" parent="function_definition [18271,18523]" at="3"/>
  <insert-node tree=",: , [18332,18333]" parent="function_definition [18271,18523]" at="4"/>
  <insert-node tree="parameter [18343,18360]" parent="function_definition [18271,18523]" at="5"/>
  <insert-node tree=",: , [18360,18361]" parent="function_definition [18271,18523]" at="6"/>
  <move-tree tree="parameter [24065,24079]" parent="function_definition [18271,18523]" at="7"/>
  <insert-node tree="): ) [18391,18392]" parent="function_definition [18271,18523]" at="8"/>
  <move-tree tree="visibility [12163,12171]" parent="function_definition [18271,18523]" at="9"/>
  <move-tree tree="state_mutability [57175,57179]" parent="function_definition [18271,18523]" at="10"/>
  <move-tree tree="return_type_definition [16919,16936]" parent="function_definition [18271,18523]" at="11"/>
  <insert-node tree="function_body [18425,18523]" parent="function_definition [18271,18523]" at="12"/>
  <insert-node tree="function: function [18531,18539]" parent="function_definition [18531,19834]" at="0"/>
  <insert-node tree="identifier: effectivePremium [18540,18556]" parent="function_definition [18531,19834]" at="1"/>
  <insert-node tree="(: ( [18556,18557]" parent="function_definition [18531,19834]" at="2"/>
  <move-tree tree="parameter [19957,19980]" parent="function_definition [18531,19834]" at="3"/>
  <insert-node tree=",: , [18586,18587]" parent="function_definition [18531,19834]" at="4"/>
  <move-tree tree="parameter [19244,19262]" parent="function_definition [18531,19834]" at="5"/>
  <insert-node tree=",: , [18614,18615]" parent="function_definition [18531,19834]" at="6"/>
  <move-tree tree="parameter [24231,24245]" parent="function_definition [18531,19834]" at="7"/>
  <insert-node tree="): ) [18645,18646]" parent="function_definition [18531,19834]" at="8"/>
  <move-tree tree="visibility [16762,16769]" parent="function_definition [18531,19834]" at="9"/>
  <move-tree tree="state_mutability [58137,58141]" parent="function_definition [18531,19834]" at="10"/>
  <insert-tree tree="return_type_definition [18660,18689]" parent="function_definition [18531,19834]" at="11"/>
  <insert-node tree="function_body [18690,19834]" parent="function_definition [18531,19834]" at="12"/>
  <insert-node tree="function: function [19864,19872]" parent="function_definition [19864,20078]" at="0"/>
  <insert-node tree="identifier: curve [19873,19878]" parent="function_definition [19864,20078]" at="1"/>
  <insert-node tree="(: ( [19878,19879]" parent="function_definition [19864,20078]" at="2"/>
  <move-tree tree="parameter [67744,67763]" parent="function_definition [19864,20078]" at="3"/>
  <insert-node tree="): ) [19908,19909]" parent="function_definition [19864,20078]" at="4"/>
  <move-tree tree="visibility [16798,16805]" parent="function_definition [19864,20078]" at="5"/>
  <move-tree tree="state_mutability [41916,41920]" parent="function_definition [19864,20078]" at="6"/>
  <insert-tree tree="return_type_definition [19923,19952]" parent="function_definition [19864,20078]" at="7"/>
  <insert-tree tree="function_body [19953,20078]" parent="function_definition [19864,20078]" at="8"/>
  <insert-node tree="function: function [20112,20120]" parent="function_definition [20112,20480]" at="0"/>
  <insert-node tree="identifier: curveMean [20121,20130]" parent="function_definition [20112,20480]" at="1"/>
  <insert-node tree="(: ( [20130,20131]" parent="function_definition [20112,20480]" at="2"/>
  <move-tree tree="parameter [68610,68629]" parent="function_definition [20112,20480]" at="3"/>
  <insert-node tree=",: , [20166,20167]" parent="function_definition [20112,20480]" at="4"/>
  <insert-tree tree="parameter [20177,20202]" parent="function_definition [20112,20480]" at="5"/>
  <insert-node tree="): ) [20208,20209]" parent="function_definition [20112,20480]" at="6"/>
  <move-tree tree="visibility [68593,68600]" parent="function_definition [20112,20480]" at="7"/>
  <move-tree tree="state_mutability [40376,40380]" parent="function_definition [20112,20480]" at="8"/>
  <insert-tree tree="return_type_definition [20223,20252]" parent="function_definition [20112,20480]" at="9"/>
  <insert-tree tree="function_body [20253,20480]" parent="function_definition [20112,20480]" at="10"/>
  <update-node tree="identifier: mint [53083,53087]" label="mintToAccount"/>
  <move-tree tree="visibility [27963,27971]" parent="function_definition [56163,56392]" at="7"/>
  <insert-node tree="function: function [56400,56408]" parent="function_definition [56400,56679]" at="0"/>
  <insert-node tree="identifier: burnFromAccount [56409,56424]" parent="function_definition [56400,56679]" at="1"/>
  <insert-node tree="(: ( [56424,56425]" parent="function_definition [56400,56679]" at="2"/>
  <move-tree tree="parameter [27625,27640]" parent="function_definition [56400,56679]" at="3"/>
  <insert-node tree=",: , [56440,56441]" parent="function_definition [56400,56679]" at="4"/>
  <move-tree tree="parameter [53282,53296]" parent="function_definition [56400,56679]" at="5"/>
  <insert-node tree="): ) [56456,56457]" parent="function_definition [56400,56679]" at="6"/>
  <move-tree tree="visibility [78035,78043]" parent="function_definition [56400,56679]" at="7"/>
  <move-tree tree="function_body [50095,50229]" parent="function_definition [56400,56679]" at="8"/>
  <update-node tree="identifier: burnFrom [24205,24213]" label="redeemToAccount"/>
  <move-tree tree="parameter [27507,27522]" parent="function_definition [56687,56923]" at="3"/>
  <move-tree tree="parameter [77485,77499]" parent="function_definition [56687,56923]" at="6"/>
  <move-tree tree="visibility [77501,77509]" parent="function_definition [56687,56923]" at="8"/>
  <insert-node tree="function: function [56931,56939]" parent="function_definition [56931,57136]" at="0"/>
  <insert-node tree="identifier: burnRedeemable [56940,56954]" parent="function_definition [56931,57136]" at="1"/>
  <insert-node tree="(: ( [56954,56955]" parent="function_definition [56931,57136]" at="2"/>
  <move-tree tree="parameter [77733,77747]" parent="function_definition [56931,57136]" at="3"/>
  <insert-node tree="): ) [56969,56970]" parent="function_definition [56931,57136]" at="4"/>
  <move-tree tree="visibility [20734,20742]" parent="function_definition [56931,57136]" at="5"/>
  <insert-node tree="function_body [56980,57136]" parent="function_definition [56931,57136]" at="6"/>
  <insert-node tree="function: function [57144,57152]" parent="function_definition [57144,57413]" at="0"/>
  <insert-node tree="identifier: increaseDebt [57153,57165]" parent="function_definition [57144,57413]" at="1"/>
  <insert-node tree="(: ( [57165,57166]" parent="function_definition [57144,57413]" at="2"/>
  <move-tree tree="parameter [23404,23418]" parent="function_definition [57144,57413]" at="3"/>
  <insert-node tree="): ) [57180,57181]" parent="function_definition [57144,57413]" at="4"/>
  <move-tree tree="visibility [23420,23428]" parent="function_definition [57144,57413]" at="5"/>
  <move-tree tree="return_type_definition [17086,17103]" parent="function_definition [57144,57413]" at="6"/>
  <insert-node tree="function_body [57209,57413]" parent="function_definition [57144,57413]" at="7"/>
  <update-node tree="identifier: _mint [21425,21430]" label="decreaseDebt"/>
  <insert-node tree="function: function [57580,57588]" parent="function_definition [57580,58807]" at="0"/>
  <insert-node tree="identifier: increaseSupply [57589,57603]" parent="function_definition [57580,58807]" at="1"/>
  <insert-node tree="(: ( [57603,57604]" parent="function_definition [57580,58807]" at="2"/>
  <move-tree tree="parameter [50337,50353]" parent="function_definition [57580,58807]" at="3"/>
  <insert-node tree="): ) [57621,57622]" parent="function_definition [57580,58807]" at="4"/>
  <move-tree tree="visibility [80675,80683]" parent="function_definition [57580,58807]" at="5"/>
  <move-tree tree="return_type_definition [80684,80710]" parent="function_definition [57580,58807]" at="6"/>
  <insert-node tree="function_body [57668,58807]" parent="function_definition [57580,58807]" at="7"/>
  <insert-node tree="function: function [58815,58823]" parent="function_definition [58815,59242]" at="0"/>
  <insert-node tree="identifier: resetDebt [58824,58833]" parent="function_definition [58815,59242]" at="1"/>
  <insert-node tree="(: ( [58833,58834]" parent="function_definition [58815,59242]" at="2"/>
  <insert-tree tree="parameter [58834,58869]" parent="function_definition [58815,59242]" at="3"/>
  <insert-node tree="): ) [58869,58870]" parent="function_definition [58815,59242]" at="4"/>
  <move-tree tree="visibility [27830,27838]" parent="function_definition [58815,59242]" at="5"/>
  <move-tree tree="return_type_definition [17645,17662]" parent="function_definition [58815,59242]" at="6"/>
  <insert-node tree="function_body [58898,59242]" parent="function_definition [58815,59242]" at="7"/>
  <update-node tree="identifier: totalRewarded [74494,74507]" label="balanceCheck"/>
  <move-tree tree="visibility [86903,86910]" parent="function_definition [59250,59488]" at="4"/>
  <update-node tree="identifier: balanceCheck [86888,86900]" label="mintToDAO"/>
  <move-tree tree="parameter [17398,17412]" parent="function_definition [59496,59679]" at="3"/>
  <move-tree tree="visibility [27245,27252]" parent="function_definition [59496,59679]" at="5"/>
  <insert-node tree="function: function [59687,59695]" parent="function_definition [59687,59821]" at="0"/>
  <insert-node tree="identifier: mintToPool [59696,59706]" parent="function_definition [59687,59821]" at="1"/>
  <insert-node tree="(: ( [59706,59707]" parent="function_definition [59687,59821]" at="2"/>
  <move-tree tree="parameter [22088,22102]" parent="function_definition [59687,59821]" at="3"/>
  <insert-node tree="): ) [59721,59722]" parent="function_definition [59687,59821]" at="4"/>
  <move-tree tree="visibility [24543,24550]" parent="function_definition [59687,59821]" at="5"/>
  <insert-node tree="function_body [59731,59821]" parent="function_definition [59687,59821]" at="6"/>
  <insert-node tree="function: function [59829,59837]" parent="function_definition [59829,59991]" at="0"/>
  <insert-node tree="identifier: mintToTreasury [59838,59852]" parent="function_definition [59829,59991]" at="1"/>
  <insert-node tree="(: ( [59852,59853]" parent="function_definition [59829,59991]" at="2"/>
  <move-tree tree="parameter [17897,17911]" parent="function_definition [59829,59991]" at="3"/>
  <insert-node tree="): ) [59867,59868]" parent="function_definition [59829,59991]" at="4"/>
  <move-tree tree="visibility [24515,24522]" parent="function_definition [59829,59991]" at="5"/>
  <insert-node tree="function_body [59877,59991]" parent="function_definition [59829,59991]" at="6"/>
  <insert-node tree="function: function [59999,60007]" parent="function_definition [59999,60174]" at="0"/>
  <insert-node tree="identifier: mintToRedeemable [60008,60024]" parent="function_definition [59999,60174]" at="1"/>
  <insert-node tree="(: ( [60024,60025]" parent="function_definition [59999,60174]" at="2"/>
  <move-tree tree="parameter [18544,18558]" parent="function_definition [59999,60174]" at="3"/>
  <insert-node tree="): ) [60039,60040]" parent="function_definition [59999,60174]" at="4"/>
  <move-tree tree="visibility [24488,24495]" parent="function_definition [59999,60174]" at="5"/>
  <insert-node tree="function_body [60049,60174]" parent="function_definition [59999,60174]" at="6"/>
  <update-node tree="identifier: Context [16599,16606]" label="Comptroller"/>
  <update-node tree="identifier: IERC20 [16608,16614]" label="Curve"/>
  <insert-node tree="event: event [61023,61028]" parent="event_definition [61023,61154]" at="0"/>
  <insert-node tree="identifier: CouponExpiration [61029,61045]" parent="event_definition [61023,61154]" at="1"/>
  <insert-node tree="(: ( [61045,61046]" parent="event_definition [61023,61154]" at="2"/>
  <insert-node tree="event_paramater [61046,61067]" parent="event_definition [61023,61154]" at="3"/>
  <insert-node tree=",: , [61067,61068]" parent="event_definition [61023,61154]" at="4"/>
  <insert-tree tree="event_paramater [61069,61091]" parent="event_definition [61023,61154]" at="5"/>
  <insert-node tree=",: , [61091,61092]" parent="event_definition [61023,61154]" at="6"/>
  <insert-tree tree="event_paramater [61093,61115]" parent="event_definition [61023,61154]" at="7"/>
  <insert-node tree=",: , [61115,61116]" parent="event_definition [61023,61154]" at="8"/>
  <insert-tree tree="event_paramater [61117,61133]" parent="event_definition [61023,61154]" at="9"/>
  <insert-node tree=",: , [61133,61134]" parent="event_definition [61023,61154]" at="10"/>
  <insert-tree tree="event_paramater [61135,61152]" parent="event_definition [61023,61154]" at="11"/>
  <insert-node tree="): ) [61152,61153]" parent="event_definition [61023,61154]" at="12"/>
  <insert-node tree="event: event [61160,61165]" parent="event_definition [61160,61273]" at="0"/>
  <insert-node tree="identifier: CouponPurchase [61166,61180]" parent="event_definition [61160,61273]" at="1"/>
  <insert-node tree="(: ( [61180,61181]" parent="event_definition [61160,61273]" at="2"/>
  <move-tree tree="event_paramater [27201,27224]" parent="event_definition [61160,61273]" at="3"/>
  <insert-node tree=",: , [61204,61205]" parent="event_definition [61160,61273]" at="4"/>
  <insert-tree tree="event_paramater [61206,61227]" parent="event_definition [61160,61273]" at="5"/>
  <insert-node tree=",: , [61227,61228]" parent="event_definition [61160,61273]" at="6"/>
  <insert-tree tree="event_paramater [61229,61249]" parent="event_definition [61160,61273]" at="7"/>
  <insert-node tree=",: , [61249,61250]" parent="event_definition [61160,61273]" at="8"/>
  <insert-tree tree="event_paramater [61251,61271]" parent="event_definition [61160,61273]" at="9"/>
  <insert-node tree="): ) [61271,61272]" parent="event_definition [61160,61273]" at="10"/>
  <update-node tree="identifier: MinterAdded [27138,27149]" label="CouponRedemption"/>
  <insert-node tree=",: , [61325,61326]" parent="event_definition [61279,61372]" at="4"/>
  <insert-tree tree="event_paramater [61327,61348]" parent="event_definition [61279,61372]" at="5"/>
  <insert-node tree=",: , [61348,61349]" parent="event_definition [61279,61372]" at="6"/>
  <insert-tree tree="event_paramater [61350,61370]" parent="event_definition [61279,61372]" at="7"/>
  <update-node tree="identifier: PairCreated [53780,53791]" label="CouponTransfer"/>
  <move-tree tree="event_paramater [83173,83186]" parent="event_definition [61378,61479]" at="10"/>
  <insert-node tree="event: event [61485,61490]" parent="event_definition [61485,61569]" at="0"/>
  <insert-node tree="identifier: CouponApproval [61491,61505]" parent="event_definition [61485,61569]" at="1"/>
  <insert-node tree="(: ( [61505,61506]" parent="event_definition [61485,61569]" at="2"/>
  <insert-node tree="event_paramater [61506,61527]" parent="event_definition [61485,61569]" at="3"/>
  <insert-node tree=",: , [61527,61528]" parent="event_definition [61485,61569]" at="4"/>
  <move-tree tree="event_paramater [53840,53852]" parent="event_definition [61485,61569]" at="5"/>
  <insert-node tree=",: , [61552,61553]" parent="event_definition [61485,61569]" at="6"/>
  <move-tree tree="event_paramater [82945,82958]" parent="event_definition [61485,61569]" at="7"/>
  <insert-node tree="): ) [61567,61568]" parent="event_definition [61485,61569]" at="8"/>
  <update-node tree="identifier: unfreeze [79619,79627]" label="step"/>
  <insert-node tree="function: function [62001,62009]" parent="function_definition [62001,62694]" at="0"/>
  <insert-node tree="identifier: expireCouponsForEpoch [62010,62031]" parent="function_definition [62001,62694]" at="1"/>
  <insert-node tree="(: ( [62031,62032]" parent="function_definition [62001,62694]" at="2"/>
  <insert-tree tree="parameter [62032,62045]" parent="function_definition [62001,62694]" at="3"/>
  <insert-node tree="): ) [62045,62046]" parent="function_definition [62001,62694]" at="4"/>
  <move-tree tree="visibility [49938,49945]" parent="function_definition [62001,62694]" at="5"/>
  <insert-node tree="function_body [62055,62694]" parent="function_definition [62001,62694]" at="6"/>
  <update-node tree="identifier: reserve [70312,70319]" label="couponPremium"/>
  <move-tree tree="parameter [78819,78833]" parent="function_definition [62702,62864]" at="3"/>
  <move-tree tree="visibility [53298,53304]" parent="function_definition [62702,62864]" at="5"/>
  <insert-node tree="function: function [62872,62880]" parent="function_definition [62872,63560]" at="0"/>
  <insert-node tree="identifier: purchaseCoupons [62881,62896]" parent="function_definition [62872,63560]" at="1"/>
  <insert-node tree="(: ( [62896,62897]" parent="function_definition [62872,63560]" at="2"/>
  <move-tree tree="parameter [80653,80673]" parent="function_definition [62872,63560]" at="3"/>
  <insert-node tree="): ) [62917,62918]" parent="function_definition [62872,63560]" at="4"/>
  <move-tree tree="visibility [50419,50427]" parent="function_definition [62872,63560]" at="5"/>
  <move-tree tree="return_type_definition [69843,69860]" parent="function_definition [62872,63560]" at="6"/>
  <insert-node tree="function_body [62946,63560]" parent="function_definition [62872,63560]" at="7"/>
  <insert-node tree="function: function [63568,63576]" parent="function_definition [63568,63978]" at="0"/>
  <insert-node tree="identifier: redeemCoupons [63577,63590]" parent="function_definition [63568,63978]" at="1"/>
  <insert-node tree="(: ( [63590,63591]" parent="function_definition [63568,63978]" at="2"/>
  <insert-tree tree="parameter [63591,63610]" parent="function_definition [63568,63978]" at="3"/>
  <insert-node tree=",: , [63610,63611]" parent="function_definition [63568,63978]" at="4"/>
  <insert-tree tree="parameter [63612,63632]" parent="function_definition [63568,63978]" at="5"/>
  <insert-node tree="): ) [63632,63633]" parent="function_definition [63568,63978]" at="6"/>
  <move-tree tree="visibility [86713,86721]" parent="function_definition [63568,63978]" at="7"/>
  <insert-node tree="function_body [63643,63978]" parent="function_definition [63568,63978]" at="8"/>
  <update-node tree="identifier: _approve [22853,22861]" label="approveCoupons"/>
  <move-tree tree="visibility [70322,70330]" parent="function_definition [63986,64272]" at="9"/>
  <update-node tree="identifier: _transfer [20673,20682]" label="transferCoupons"/>
  <move-tree tree="parameter [40298,40313]" parent="function_definition [64280,65008]" at="7"/>
  <insert-node tree=",: , [64353,64354]" parent="function_definition [64280,65008]" at="8"/>
  <move-tree tree="visibility [86828,86836]" parent="function_definition [64280,65008]" at="11"/>
  <update-node tree="identifier: IOracle [66438,66445]" label="Comptroller"/>
  <insert-node tree="event: event [65844,65849]" parent="event_definition [65844,65963]" at="0"/>
  <insert-node tree="identifier: SupplyIncrease [65850,65864]" parent="event_definition [65844,65963]" at="1"/>
  <insert-node tree="(: ( [65864,65865]" parent="event_definition [65844,65963]" at="2"/>
  <insert-node tree="event_paramater [65865,65886]" parent="event_definition [65844,65963]" at="3"/>
  <insert-node tree=",: , [65886,65887]" parent="event_definition [65844,65963]" at="4"/>
  <insert-node tree="event_paramater [65888,65901]" parent="event_definition [65844,65963]" at="5"/>
  <insert-node tree=",: , [65901,65902]" parent="event_definition [65844,65963]" at="6"/>
  <insert-node tree="event_paramater [65903,65924]" parent="event_definition [65844,65963]" at="7"/>
  <insert-node tree=",: , [65924,65925]" parent="event_definition [65844,65963]" at="8"/>
  <insert-tree tree="event_paramater [65926,65942]" parent="event_definition [65844,65963]" at="9"/>
  <insert-node tree=",: , [65942,65943]" parent="event_definition [65844,65963]" at="10"/>
  <insert-tree tree="event_paramater [65944,65961]" parent="event_definition [65844,65963]" at="11"/>
  <insert-node tree="): ) [65961,65962]" parent="event_definition [65844,65963]" at="12"/>
  <insert-node tree="event: event [65969,65974]" parent="event_definition [65969,66045]" at="0"/>
  <insert-node tree="identifier: SupplyDecrease [65975,65989]" parent="event_definition [65969,66045]" at="1"/>
  <insert-node tree="(: ( [65989,65990]" parent="event_definition [65969,66045]" at="2"/>
  <insert-node tree="event_paramater [65990,66011]" parent="event_definition [65969,66045]" at="3"/>
  <insert-node tree=",: , [66011,66012]" parent="event_definition [65969,66045]" at="4"/>
  <insert-node tree="event_paramater [66013,66026]" parent="event_definition [65969,66045]" at="5"/>
  <insert-node tree=",: , [66026,66027]" parent="event_definition [65969,66045]" at="6"/>
  <insert-node tree="event_paramater [66028,66043]" parent="event_definition [65969,66045]" at="7"/>
  <insert-node tree="): ) [66043,66044]" parent="event_definition [65969,66045]" at="8"/>
  <insert-node tree="event: event [66051,66056]" parent="event_definition [66051,66094]" at="0"/>
  <insert-node tree="identifier: SupplyNeutral [66057,66070]" parent="event_definition [66051,66094]" at="1"/>
  <insert-node tree="(: ( [66070,66071]" parent="event_definition [66051,66094]" at="2"/>
  <insert-node tree="event_paramater [66071,66092]" parent="event_definition [66051,66094]" at="3"/>
  <insert-node tree="): ) [66092,66093]" parent="event_definition [66051,66094]" at="4"/>
  <insert-node tree="function: function [66102,66110]" parent="function_definition [66102,66488]" at="0"/>
  <insert-node tree="identifier: step [66111,66115]" parent="function_definition [66102,66488]" at="1"/>
  <insert-node tree="(: ( [66115,66116]" parent="function_definition [66102,66488]" at="2"/>
  <insert-node tree="): ) [66116,66117]" parent="function_definition [66102,66488]" at="3"/>
  <move-tree tree="visibility [77342,77350]" parent="function_definition [66102,66488]" at="4"/>
  <insert-node tree="function_body [66127,66488]" parent="function_definition [66102,66488]" at="5"/>
  <insert-node tree="function: function [66496,66504]" parent="function_definition [66496,66842]" at="0"/>
  <insert-node tree="identifier: shrinkSupply [66505,66517]" parent="function_definition [66496,66842]" at="1"/>
  <insert-node tree="(: ( [66517,66518]" parent="function_definition [66496,66842]" at="2"/>
  <insert-tree tree="parameter [66518,66543]" parent="function_definition [66496,66842]" at="3"/>
  <insert-node tree="): ) [66543,66544]" parent="function_definition [66496,66842]" at="4"/>
  <move-tree tree="visibility [66547,66554]" parent="function_definition [66496,66842]" at="5"/>
  <insert-node tree="function_body [66553,66842]" parent="function_definition [66496,66842]" at="6"/>
  <update-node tree="identifier: updatePrice [69192,69203]" label="growSupply"/>
  <insert-tree tree="parameter [66870,66895]" parent="function_definition [66850,67241]" at="3"/>
  <move-tree tree="visibility [16686,16693]" parent="function_definition [66850,67241]" at="5"/>
  <insert-node tree="function: function [67249,67257]" parent="function_definition [67249,67942]" at="0"/>
  <insert-node tree="identifier: limit [67258,67263]" parent="function_definition [67249,67942]" at="1"/>
  <insert-node tree="(: ( [67263,67264]" parent="function_definition [67249,67942]" at="2"/>
  <insert-tree tree="parameter [67264,67289]" parent="function_definition [67249,67942]" at="3"/>
  <insert-node tree=",: , [67289,67290]" parent="function_definition [67249,67942]" at="4"/>
  <insert-tree tree="parameter [67291,67316]" parent="function_definition [67249,67942]" at="5"/>
  <insert-node tree="): ) [67316,67317]" parent="function_definition [67249,67942]" at="6"/>
  <move-tree tree="visibility [69835,69842]" parent="function_definition [67249,67942]" at="7"/>
  <move-tree tree="state_mutability [75501,75505]" parent="function_definition [67249,67942]" at="8"/>
  <insert-tree tree="return_type_definition [67331,67360]" parent="function_definition [67249,67942]" at="9"/>
  <insert-node tree="function_body [67361,67942]" parent="function_definition [67249,67942]" at="10"/>
  <update-node tree="identifier: capture [67710,67717]" label="oracleCapture"/>
  <move-tree tree="visibility [69206,69213]" parent="function_definition [67950,68302]" at="4"/>
  <move-tree tree="return_type_definition [69214,69243]" parent="function_definition [67950,68302]" at="5"/>
  <update-node tree="identifier: PoolSetters [82461,82472]" label="Setters"/>
  <update-node tree="identifier: Unbond [83044,83050]" label="Bond"/>
  <insert-node tree="event_paramater [70910,70933]" parent="event_definition [70844,70935]" at="9"/>
  <update-node tree="identifier: Bond [82972,82976]" label="Unbond"/>
  <insert-node tree=",: , [71007,71008]" parent="event_definition [70941,71034]" at="8"/>
  <insert-node tree="event_paramater [71009,71032]" parent="event_definition [70941,71034]" at="9"/>
  <insert-node tree="function: function [71042,71050]" parent="function_definition [71042,71261]" at="0"/>
  <insert-node tree="identifier: step [71051,71055]" parent="function_definition [71042,71261]" at="1"/>
  <insert-node tree="(: ( [71055,71056]" parent="function_definition [71042,71261]" at="2"/>
  <insert-node tree="): ) [71056,71057]" parent="function_definition [71042,71261]" at="3"/>
  <move-tree tree="visibility [70115,70123]" parent="function_definition [71042,71261]" at="4"/>
  <insert-node tree="function_body [71067,71261]" parent="function_definition [71042,71261]" at="5"/>
  <insert-tree tree="modifier_invocation [71563,71593]" parent="function_definition [71521,71788]" at="6"/>
  <move-tree tree="parameter [50313,50326]" parent="function_definition [72329,72813]" at="3"/>
  <move-tree tree="modifier_invocation [83554,83576]" parent="function_definition [72329,72813]" at="7"/>
  <insert-node tree="function: function [72821,72829]" parent="function_definition [72821,73295]" at="0"/>
  <insert-node tree="identifier: unbondUnderlying [72830,72846]" parent="function_definition [72821,73295]" at="1"/>
  <insert-node tree="(: ( [72846,72847]" parent="function_definition [72821,73295]" at="2"/>
  <move-tree tree="parameter [84787,84800]" parent="function_definition [72821,73295]" at="3"/>
  <insert-node tree="): ) [72860,72861]" parent="function_definition [72821,73295]" at="4"/>
  <move-tree tree="visibility [70223,70231]" parent="function_definition [72821,73295]" at="5"/>
  <move-tree tree="modifier_invocation [83841,83863]" parent="function_definition [72821,73295]" at="6"/>
  <insert-node tree="function_body [72901,73295]" parent="function_definition [72821,73295]" at="7"/>
  <insert-node tree="event: event [78239,78244]" parent="event_definition [78239,78345]" at="0"/>
  <insert-node tree="identifier: Proposal [78245,78253]" parent="event_definition [78239,78345]" at="1"/>
  <insert-node tree="(: ( [78253,78254]" parent="event_definition [78239,78345]" at="2"/>
  <insert-node tree="event_paramater [78254,78279]" parent="event_definition [78239,78345]" at="3"/>
  <insert-node tree=",: , [78279,78280]" parent="event_definition [78239,78345]" at="4"/>
  <insert-tree tree="event_paramater [78281,78304]" parent="event_definition [78239,78345]" at="5"/>
  <insert-node tree=",: , [78304,78305]" parent="event_definition [78239,78345]" at="6"/>
  <insert-node tree="event_paramater [78306,78327]" parent="event_definition [78239,78345]" at="7"/>
  <insert-node tree=",: , [78327,78328]" parent="event_definition [78239,78345]" at="8"/>
  <insert-node tree="event_paramater [78329,78343]" parent="event_definition [78239,78345]" at="9"/>
  <insert-node tree="): ) [78343,78344]" parent="event_definition [78239,78345]" at="10"/>
  <insert-node tree="event: event [78351,78356]" parent="event_definition [78351,78451]" at="0"/>
  <insert-node tree="identifier: Vote [78357,78361]" parent="event_definition [78351,78451]" at="1"/>
  <insert-node tree="(: ( [78361,78362]" parent="event_definition [78351,78451]" at="2"/>
  <insert-tree tree="event_paramater [78362,78385]" parent="event_definition [78351,78451]" at="3"/>
  <insert-node tree=",: , [78385,78386]" parent="event_definition [78351,78451]" at="4"/>
  <insert-node tree="event_paramater [78387,78412]" parent="event_definition [78351,78451]" at="5"/>
  <insert-node tree=",: , [78412,78413]" parent="event_definition [78351,78451]" at="6"/>
  <insert-tree tree="event_paramater [78414,78433]" parent="event_definition [78351,78451]" at="7"/>
  <insert-node tree=",: , [78433,78434]" parent="event_definition [78351,78451]" at="8"/>
  <insert-node tree="event_paramater [78435,78449]" parent="event_definition [78351,78451]" at="9"/>
  <insert-node tree="): ) [78449,78450]" parent="event_definition [78351,78451]" at="10"/>
  <update-node tree="identifier: Provide [83140,83147]" label="Commit"/>
  <insert-node tree="event_paramater [78495,78520]" parent="event_definition [78457,78522]" at="5"/>
  <insert-node tree="function: function [78530,78538]" parent="function_definition [78530,80151]" at="0"/>
  <insert-node tree="identifier: vote [78539,78543]" parent="function_definition [78530,80151]" at="1"/>
  <insert-node tree="(: ( [78543,78544]" parent="function_definition [78530,80151]" at="2"/>
  <move-tree tree="parameter [65639,65655]" parent="function_definition [78530,80151]" at="3"/>
  <insert-node tree=",: , [78561,78562]" parent="function_definition [78530,80151]" at="4"/>
  <insert-tree tree="parameter [78563,78582]" parent="function_definition [78530,80151]" at="5"/>
  <insert-node tree="): ) [78582,78583]" parent="function_definition [78530,80151]" at="6"/>
  <move-tree tree="visibility [65657,65665]" parent="function_definition [78530,80151]" at="7"/>
  <move-tree tree="modifier_invocation [83273,83295]" parent="function_definition [78530,80151]" at="8"/>
  <insert-node tree="function_body [78624,80151]" parent="function_definition [78530,80151]" at="9"/>
  <update-node tree="identifier: provide [85664,85671]" label="commit"/>
  <move-tree tree="parameter [81324,81338]" parent="function_definition [80159,81124]" at="3"/>
  <move-tree tree="expression_statement [86002,86144]" parent="function_body [80203,81124]" at="5"/>
  <insert-node tree="function: function [81132,81140]" parent="function_definition [81132,81915]" at="0"/>
  <insert-node tree="identifier: emergencyCommit [81141,81156]" parent="function_definition [81132,81915]" at="1"/>
  <insert-node tree="(: ( [81156,81157]" parent="function_definition [81132,81915]" at="2"/>
  <move-tree tree="parameter [81340,81354]" parent="function_definition [81132,81915]" at="3"/>
  <insert-node tree="): ) [81174,81175]" parent="function_definition [81132,81915]" at="4"/>
  <move-tree tree="visibility [83832,83840]" parent="function_definition [81132,81915]" at="5"/>
  <insert-node tree="function_body [81185,81915]" parent="function_definition [81132,81915]" at="6"/>
  <insert-node tree="function: function [81923,81931]" parent="function_definition [81923,82237]" at="0"/>
  <insert-node tree="identifier: canPropose [81932,81942]" parent="function_definition [81923,82237]" at="1"/>
  <insert-node tree="(: ( [81942,81943]" parent="function_definition [81923,82237]" at="2"/>
  <move-tree tree="parameter [74782,74797]" parent="function_definition [81923,82237]" at="3"/>
  <insert-node tree="): ) [81958,81959]" parent="function_definition [81923,82237]" at="4"/>
  <move-tree tree="visibility [67986,67993]" parent="function_definition [81923,82237]" at="5"/>
  <move-tree tree="state_mutability [65666,65670]" parent="function_definition [81923,82237]" at="6"/>
  <move-tree tree="return_type_definition [65671,65685]" parent="function_definition [81923,82237]" at="7"/>
  <insert-node tree="function_body [81988,82237]" parent="function_definition [81923,82237]" at="8"/>
  <insert-node tree="event: event [83080,83085]" parent="event_definition [83080,83151]" at="0"/>
  <insert-node tree="identifier: Advance [83086,83093]" parent="event_definition [83080,83151]" at="1"/>
  <insert-node tree="(: ( [83093,83094]" parent="event_definition [83080,83151]" at="2"/>
  <insert-node tree="event_paramater [83094,83115]" parent="event_definition [83080,83151]" at="3"/>
  <insert-node tree=",: , [83115,83116]" parent="event_definition [83080,83151]" at="4"/>
  <move-tree tree="event_paramater [83206,83222]" parent="event_definition [83080,83151]" at="5"/>
  <insert-node tree=",: , [83130,83131]" parent="event_definition [83080,83151]" at="6"/>
  <move-tree tree="event_paramater [83106,83126]" parent="event_definition [83080,83151]" at="7"/>
  <insert-node tree="): ) [83149,83150]" parent="event_definition [83080,83151]" at="8"/>
  <update-node tree="identifier: Claim [82914,82919]" label="Incentivization"/>
  <move-tree tree="event_paramater [83188,83204]" parent="event_definition [83157,83220]" at="5"/>
  <insert-node tree="function: function [83228,83236]" parent="function_definition [83228,83378]" at="0"/>
  <insert-node tree="identifier: initialize [83237,83247]" parent="function_definition [83228,83378]" at="1"/>
  <insert-node tree="(: ( [83247,83248]" parent="function_definition [83228,83378]" at="2"/>
  <insert-node tree="): ) [83248,83249]" parent="function_definition [83228,83378]" at="3"/>
  <move-tree tree="modifier_invocation [110902,110913]" parent="function_definition [83228,83378]" at="4"/>
  <move-tree tree="visibility [67030,67036]" parent="function_definition [83228,83378]" at="5"/>
  <insert-node tree="function_body [83269,83378]" parent="function_definition [83228,83378]" at="6"/>
  <insert-node tree="function: function [83386,83394]" parent="function_definition [83386,83576]" at="0"/>
  <insert-node tree="identifier: advance [83395,83402]" parent="function_definition [83386,83576]" at="1"/>
  <insert-node tree="(: ( [83402,83403]" parent="function_definition [83386,83576]" at="2"/>
  <insert-node tree="): ) [83403,83404]" parent="function_definition [83386,83576]" at="3"/>
  <move-tree tree="visibility [71296,71304]" parent="function_definition [83386,83576]" at="4"/>
  <insert-tree tree="modifier_invocation [83414,83426]" parent="function_definition [83386,83576]" at="5"/>
  <insert-node tree="function_body [83427,83576]" parent="function_definition [83386,83576]" at="6"/>
  <insert-node tree="modifier: modifier [83584,83592]" parent="modifier_definition [83584,83831]" at="0"/>
  <insert-node tree="identifier: incentivized [83593,83605]" parent="modifier_definition [83584,83831]" at="1"/>
  <insert-node tree="function_body [83606,83831]" parent="modifier_definition [83584,83831]" at="2"/>
  <move-tree tree="type_name [16677,16684]" parent="parameter [18313,18332]" at="0"/>
  <insert-node tree="identifier: totalSupply [18321,18332]" parent="parameter [18313,18332]" at="1"/>
  <move-tree tree="type_name [16752,16759]" parent="parameter [18343,18360]" at="0"/>
  <insert-node tree="identifier: totalDebt [18351,18360]" parent="parameter [18343,18360]" at="1"/>
  <insert-node tree="{: { [18425,18426]" parent="function_body [18425,18523]" at="0"/>
  <insert-node tree="return_statement [18436,18516]" parent="function_body [18425,18523]" at="1"/>
  <insert-node tree="}: } [18522,18523]" parent="function_body [18425,18523]" at="2"/>
  <update-node tree="identifier: subtractedValue [19965,19980]" label="totalSupply"/>
  <update-node tree="identifier: addedValue [19252,19262]" label="totalDebt"/>
  <insert-node tree="{: { [18690,18691]" parent="function_body [18690,19834]" at="0"/>
  <insert-tree tree="variable_declaration_statement [18701,18771]" parent="function_body [18690,19834]" at="1"/>
  <insert-tree tree="variable_declaration_statement [18781,18851]" parent="function_body [18690,19834]" at="2"/>
  <insert-node tree="variable_declaration_statement [18863,18912]" parent="function_body [18690,19834]" at="3"/>
  <insert-node tree="variable_declaration_statement [18922,18967]" parent="function_body [18690,19834]" at="4"/>
  <insert-tree tree="variable_declaration_statement [18977,19056]" parent="function_body [18690,19834]" at="5"/>
  <insert-tree tree="if_statement [19068,19773]" parent="function_body [18690,19834]" at="6"/>
  <insert-tree tree="return_statement [19785,19827]" parent="function_body [18690,19834]" at="7"/>
  <insert-node tree="}: } [19833,19834]" parent="function_body [18690,19834]" at="8"/>
  <insert-node tree="identifier: debtRatio [19899,19908]" parent="parameter [19879,19908]" at="2"/>
  <insert-node tree="identifier: lower [20161,20166]" parent="parameter [20141,20166]" at="2"/>
  <insert-node tree="if_statement [56280,56358]" parent="function_body [56228,56392]" at="2"/>
  <insert-tree tree="expression_statement [56370,56385]" parent="function_body [56228,56392]" at="3"/>
  <insert-node tree="expression_statement [56542,56564]" parent="function_body [56467,56679]" at="2"/>
  <move-tree tree="expression_statement [51073,51170]" parent="function_body [56467,56679]" at="3"/>
  <insert-tree tree="expression_statement [56657,56672]" parent="function_body [56467,56679]" at="4"/>
  <insert-node tree="expression_statement [56810,56889]" parent="function_body [56754,56923]" at="2"/>
  <move-tree tree="expression_statement [86562,86577]" parent="function_body [56754,56923]" at="3"/>
  <insert-node tree="{: { [56980,56981]" parent="function_body [56980,57136]" at="0"/>
  <insert-node tree="expression_statement [56991,57013]" parent="function_body [56980,57136]" at="1"/>
  <move-tree tree="expression_statement [20919,21011]" parent="function_body [56980,57136]" at="2"/>
  <move-tree tree="expression_statement [84684,84699]" parent="function_body [56980,57136]" at="3"/>
  <insert-node tree="}: } [57135,57136]" parent="function_body [56980,57136]" at="4"/>
  <insert-node tree="{: { [57209,57210]" parent="function_body [57209,57413]" at="0"/>
  <insert-node tree="expression_statement [57220,57247]" parent="function_body [57209,57413]" at="1"/>
  <insert-tree tree="variable_declaration_statement [57257,57315]" parent="function_body [57209,57413]" at="2"/>
  <move-tree tree="expression_statement [83727,83742]" parent="function_body [57209,57413]" at="3"/>
  <insert-tree tree="return_statement [57354,57406]" parent="function_body [57209,57413]" at="4"/>
  <insert-node tree="}: } [57412,57413]" parent="function_body [57209,57413]" at="5"/>
  <move-tree tree="expression_statement [83438,83453]" parent="function_body [57468,57572]" at="2"/>
  <update-node tree="identifier: deadline [50345,50353]" label="newSupply"/>
  <insert-node tree=",: , [57657,57658]" parent="return_type_definition [57632,57667]" at="5"/>
  <insert-tree tree="parameter [57659,57666]" parent="return_type_definition [57632,57667]" at="6"/>
  <insert-node tree="{: { [57668,57669]" parent="function_body [57668,58807]" at="0"/>
  <insert-tree tree="variable_declaration_statement [57679,57753]" parent="function_body [57668,58807]" at="1"/>
  <insert-node tree="comment: // 0-a. Pay out to Pool [57763,57786]" parent="function_body [57668,58807]" at="2"/>
  <insert-tree tree="expression_statement [57796,57864]" parent="function_body [57668,58807]" at="3"/>
  <insert-tree tree="expression_statement [57874,57897]" parent="function_body [57668,58807]" at="4"/>
  <insert-node tree="comment: // 0-b. Pay out to Treasury [57909,57936]" parent="function_body [57668,58807]" at="5"/>
  <insert-tree tree="variable_declaration_statement [57946,58026]" parent="function_body [57668,58807]" at="6"/>
  <insert-tree tree="expression_statement [58036,58067]" parent="function_body [57668,58807]" at="7"/>
  <insert-node tree="comment: // 1. True up redeemable pool [58079,58108]" parent="function_body [57668,58807]" at="8"/>
  <insert-tree tree="variable_declaration_statement [58118,58162]" parent="function_body [57668,58807]" at="9"/>
  <insert-tree tree="variable_declaration_statement [58172,58210]" parent="function_body [57668,58807]" at="10"/>
  <insert-tree tree="if_statement [58220,58517]" parent="function_body [57668,58807]" at="11"/>
  <insert-node tree="comment: // 2. Payout to bonded [58529,58551]" parent="function_body [57668,58807]" at="12"/>
  <insert-tree tree="if_statement [58561,58625]" parent="function_body [57668,58807]" at="13"/>
  <insert-tree tree="if_statement [58635,58701]" parent="function_body [57668,58807]" at="14"/>
  <move-tree tree="expression_statement [85552,85567]" parent="function_body [57668,58807]" at="15"/>
  <insert-tree tree="return_statement [58740,58800]" parent="function_body [57668,58807]" at="16"/>
  <insert-node tree="}: } [58806,58807]" parent="function_body [57668,58807]" at="17"/>
  <insert-node tree="{: { [58898,58899]" parent="function_body [58898,59242]" at="0"/>
  <insert-node tree="variable_declaration_statement [58909,58986]" parent="function_body [58898,59242]" at="1"/>
  <insert-tree tree="variable_declaration_statement [58996,59030]" parent="function_body [58898,59242]" at="2"/>
  <insert-tree tree="if_statement [59042,59214]" parent="function_body [58898,59242]" at="3"/>
  <move-tree tree="return_statement [76092,76101]" parent="function_body [58898,59242]" at="4"/>
  <insert-node tree="}: } [59241,59242]" parent="function_body [58898,59242]" at="5"/>
  <move-tree tree="expression_statement [86922,87093]" parent="function_body [59282,59488]" at="1"/>
  <insert-node tree="if_statement [59550,59672]" parent="function_body [59539,59679]" at="1"/>
  <insert-node tree="{: { [59731,59732]" parent="function_body [59731,59821]" at="0"/>
  <insert-node tree="if_statement [59742,59814]" parent="function_body [59731,59821]" at="1"/>
  <insert-node tree="}: } [59820,59821]" parent="function_body [59731,59821]" at="2"/>
  <insert-node tree="{: { [59877,59878]" parent="function_body [59877,59991]" at="0"/>
  <insert-node tree="if_statement [59888,59984]" parent="function_body [59877,59991]" at="1"/>
  <insert-node tree="}: } [59990,59991]" parent="function_body [59877,59991]" at="2"/>
  <insert-node tree="{: { [60049,60050]" parent="function_body [60049,60174]" at="0"/>
  <insert-node tree="expression_statement [60060,60097]" parent="function_body [60049,60174]" at="1"/>
  <insert-node tree="expression_statement [60107,60140]" parent="function_body [60049,60174]" at="2"/>
  <move-tree tree="expression_statement [84021,84036]" parent="function_body [60049,60174]" at="3"/>
  <insert-node tree="}: } [60173,60174]" parent="function_body [60049,60174]" at="4"/>
  <move-tree tree="type_name [50050,50057]" parent="event_paramater [61046,61067]" at="0"/>
  <insert-node tree="indexed: indexed [61054,61061]" parent="event_paramater [61046,61067]" at="1"/>
  <insert-node tree="identifier: epoch [61062,61067]" parent="event_paramater [61046,61067]" at="2"/>
  <update-node tree="identifier: token0 [53808,53814]" label="from"/>
  <update-node tree="identifier: token1 [53832,53838]" label="to"/>
  <insert-node tree="indexed: indexed [61449,61456]" parent="event_paramater [61441,61462]" at="1"/>
  <insert-node tree="identifier: epoch [61457,61462]" parent="event_paramater [61441,61462]" at="2"/>
  <move-tree tree="type_name [80528,80535]" parent="event_paramater [61506,61527]" at="0"/>
  <insert-node tree="indexed: indexed [61514,61521]" parent="event_paramater [61506,61527]" at="1"/>
  <insert-node tree="identifier: owner [61522,61527]" parent="event_paramater [61506,61527]" at="2"/>
  <insert-node tree="indexed: indexed [61537,61544]" parent="event_paramater [61529,61552]" at="1"/>
  <update-node tree="identifier: pair [53848,53852]" label="spender"/>
  <insert-node tree="comment: // Expire prior coupons [61613,61636]" parent="function_body [61602,61993]" at="1"/>
  <insert-tree tree="for_statement [61646,61785]" parent="function_body [61602,61993]" at="2"/>
  <insert-node tree="comment: // Record expiry for current epoch's coupons [61797,61841]" parent="function_body [61602,61993]" at="3"/>
  <insert-node tree="variable_declaration_statement [61851,61922]" parent="function_body [61602,61993]" at="4"/>
  <insert-node tree="{: { [62055,62056]" parent="function_body [62055,62694]" at="0"/>
  <move-tree tree="variable_declaration_statement [84855,84909]" parent="function_body [62055,62694]" at="1"/>
  <move-tree tree="variable_declaration_statement [86156,86215]" parent="function_body [62055,62694]" at="2"/>
  <insert-tree tree="expression_statement [62214,62249]" parent="function_body [62055,62694]" at="3"/>
  <insert-node tree="variable_declaration_statement [62261,62305]" parent="function_body [62055,62694]" at="4"/>
  <insert-node tree="variable_declaration_statement [62315,62353]" parent="function_body [62055,62694]" at="5"/>
  <insert-tree tree="if_statement [62363,62592]" parent="function_body [62055,62694]" at="6"/>
  <insert-tree tree="emit_statement [62604,62687]" parent="function_body [62055,62694]" at="7"/>
  <insert-node tree="}: } [62693,62694]" parent="function_body [62055,62694]" at="8"/>
  <insert-node tree="{: { [62946,62947]" parent="function_body [62946,63560]" at="0"/>
  <move-tree tree="expression_statement [22204,22294]" parent="function_body [62946,63560]" at="1"/>
  <move-tree tree="expression_statement [50829,50939]" parent="function_body [62946,63560]" at="2"/>
  <insert-node tree="variable_declaration_statement [63218,63242]" parent="function_body [62946,63560]" at="3"/>
  <insert-node tree="variable_declaration_statement [63252,63321]" parent="function_body [62946,63560]" at="4"/>
  <move-tree tree="expression_statement [86420,86467]" parent="function_body [62946,63560]" at="5"/>
  <move-tree tree="expression_statement [85296,85350]" parent="function_body [62946,63560]" at="6"/>
  <insert-tree tree="emit_statement [63454,63521]" parent="function_body [62946,63560]" at="7"/>
  <insert-tree tree="return_statement [63533,63553]" parent="function_body [62946,63560]" at="8"/>
  <insert-node tree="}: } [63559,63560]" parent="function_body [62946,63560]" at="9"/>
  <insert-node tree="{: { [63643,63644]" parent="function_body [63643,63978]" at="0"/>
  <insert-node tree="expression_statement [63654,63724]" parent="function_body [63643,63978]" at="1"/>
  <move-tree tree="expression_statement [22930,22999]" parent="function_body [63643,63978]" at="2"/>
  <move-tree tree="expression_statement [86477,86548]" parent="function_body [63643,63978]" at="3"/>
  <insert-tree tree="emit_statement [63910,63971]" parent="function_body [63643,63978]" at="4"/>
  <insert-node tree="}: } [63977,63978]" parent="function_body [63643,63978]" at="5"/>
  <update-node tree="identifier: chainId [40306,40313]" label="epoch"/>
  <insert-node tree="expression_statement [64572,64660]" parent="function_body [64380,65008]" at="3"/>
  <insert-node tree="expression_statement [64670,64722]" parent="function_body [64380,65008]" at="4"/>
  <move-tree tree="if_statement [53378,53629]" parent="function_body [64380,65008]" at="5"/>
  <move-tree tree="type_name [72183,72190]" parent="event_paramater [65865,65886]" at="0"/>
  <insert-node tree="indexed: indexed [65873,65880]" parent="event_paramater [65865,65886]" at="1"/>
  <insert-node tree="identifier: epoch [65881,65886]" parent="event_paramater [65865,65886]" at="2"/>
  <move-tree tree="type_name [72236,72243]" parent="event_paramater [65888,65901]" at="0"/>
  <insert-node tree="identifier: price [65896,65901]" parent="event_paramater [65888,65901]" at="1"/>
  <move-tree tree="type_name [72555,72562]" parent="event_paramater [65903,65924]" at="0"/>
  <insert-node tree="identifier: newRedeemable [65911,65924]" parent="event_paramater [65903,65924]" at="1"/>
  <move-tree tree="type_name [72477,72484]" parent="event_paramater [65990,66011]" at="0"/>
  <insert-node tree="indexed: indexed [65998,66005]" parent="event_paramater [65990,66011]" at="1"/>
  <insert-node tree="identifier: epoch [66006,66011]" parent="event_paramater [65990,66011]" at="2"/>
  <move-tree tree="type_name [72208,72215]" parent="event_paramater [66013,66026]" at="0"/>
  <insert-node tree="identifier: price [66021,66026]" parent="event_paramater [66013,66026]" at="1"/>
  <move-tree tree="type_name [72530,72537]" parent="event_paramater [66028,66043]" at="0"/>
  <insert-node tree="identifier: newDebt [66036,66043]" parent="event_paramater [66028,66043]" at="1"/>
  <move-tree tree="type_name [72502,72509]" parent="event_paramater [66071,66092]" at="0"/>
  <insert-node tree="indexed: indexed [66079,66086]" parent="event_paramater [66071,66092]" at="1"/>
  <insert-node tree="identifier: epoch [66087,66092]" parent="event_paramater [66071,66092]" at="2"/>
  <insert-node tree="{: { [66127,66128]" parent="function_body [66127,66488]" at="0"/>
  <move-tree tree="variable_declaration_statement [68648,68690]" parent="function_body [66127,66488]" at="1"/>
  <insert-tree tree="if_statement [66194,66327]" parent="function_body [66127,66488]" at="2"/>
  <insert-tree tree="if_statement [66339,66441]" parent="function_body [66127,66488]" at="3"/>
  <insert-tree tree="emit_statement [66453,66481]" parent="function_body [66127,66488]" at="4"/>
  <insert-node tree="}: } [66487,66488]" parent="function_body [66127,66488]" at="5"/>
  <insert-node tree="{: { [66553,66554]" parent="function_body [66553,66842]" at="0"/>
  <insert-tree tree="variable_declaration_statement [66564,66631]" parent="function_body [66553,66842]" at="1"/>
  <move-tree tree="variable_declaration_statement [84185,84256]" parent="function_body [66553,66842]" at="2"/>
  <insert-node tree="variable_declaration_statement [66703,66749]" parent="function_body [66553,66842]" at="3"/>
  <insert-tree tree="emit_statement [66761,66818]" parent="function_body [66553,66842]" at="4"/>
  <insert-tree tree="return_statement [66828,66835]" parent="function_body [66553,66842]" at="5"/>
  <insert-node tree="}: } [66841,66842]" parent="function_body [66553,66842]" at="6"/>
  <insert-tree tree="variable_declaration_statement [66916,66983]" parent="function_body [66905,67241]" at="1"/>
  <insert-node tree="variable_declaration_statement [66993,67047]" parent="function_body [66905,67241]" at="2"/>
  <insert-tree tree="emit_statement [67156,67234]" parent="function_body [66905,67241]" at="4"/>
  <insert-node tree="{: { [67361,67362]" parent="function_body [67361,67942]" at="0"/>
  <insert-tree tree="variable_declaration_statement [67374,67556]" parent="function_body [67361,67942]" at="1"/>
  <insert-node tree="variable_declaration_statement [67588,67632]" parent="function_body [67361,67942]" at="2"/>
  <move-tree tree="variable_declaration_statement [75650,75721]" parent="function_body [67361,67942]" at="3"/>
  <insert-tree tree="if_statement [67690,67849]" parent="function_body [67361,67942]" at="4"/>
  <insert-tree tree="return_statement [67861,67933]" parent="function_body [67361,67942]" at="5"/>
  <insert-node tree="}: } [67941,67942]" parent="function_body [67361,67942]" at="6"/>
  <move-tree tree="variable_declaration_statement [69583,69680]" parent="function_body [68013,68302]" at="1"/>
  <insert-tree tree="if_statement [68097,68201]" parent="function_body [68013,68302]" at="2"/>
  <insert-tree tree="return_statement [68282,68295]" parent="function_body [68013,68302]" at="4"/>
  <move-tree tree="type_name [72287,72294]" parent="event_paramater [70910,70933]" at="0"/>
  <insert-node tree="identifier: valueUnderlying [70918,70933]" parent="event_paramater [70910,70933]" at="1"/>
  <move-tree tree="type_name [72261,72268]" parent="event_paramater [71009,71032]" at="0"/>
  <insert-node tree="identifier: valueUnderlying [71017,71032]" parent="event_paramater [71009,71032]" at="1"/>
  <insert-node tree="{: { [71067,71068]" parent="function_body [71067,71261]" at="0"/>
  <insert-node tree="expression_statement [71078,71193]" parent="function_body [71067,71261]" at="1"/>
  <insert-tree tree="expression_statement [71205,71227]" parent="function_body [71067,71261]" at="2"/>
  <insert-tree tree="expression_statement [71237,71254]" parent="function_body [71067,71261]" at="3"/>
  <insert-node tree="}: } [71260,71261]" parent="function_body [71067,71261]" at="4"/>
  <update-node tree="identifier: notPaused [83296,83305]" label="onlyFrozenOrLocked"/>
  <insert-node tree="(: ( [71328,71329]" parent="modifier_invocation [71310,71340]" at="1"/>
  <insert-tree tree="call_argument [71329,71339]" parent="modifier_invocation [71310,71340]" at="2"/>
  <insert-node tree="): ) [71339,71340]" parent="modifier_invocation [71310,71340]" at="3"/>
  <move-tree tree="expression_statement [83875,83912]" parent="function_body [71594,71788]" at="1"/>
  <update-node tree="identifier: notPaused [84131,84140]" label="onlyFrozenOrFluid"/>
  <insert-node tree="(: ( [71851,71852]" parent="modifier_invocation [71834,71863]" at="1"/>
  <move-tree tree="call_argument [85707,85717]" parent="modifier_invocation [71834,71863]" at="2"/>
  <insert-node tree="): ) [71862,71863]" parent="modifier_invocation [71834,71863]" at="3"/>
  <move-tree tree="expression_statement [83588,83624]" parent="function_body [71864,72321]" at="3"/>
  <insert-node tree="expression_statement [72126,72154]" parent="function_body [71864,72321]" at="4"/>
  <insert-node tree="emit_statement [72260,72314]" parent="function_body [71864,72321]" at="6"/>
  <update-node tree="identifier: onlyFrozen [83554,83564]" label="onlyFrozenOrFluid"/>
  <insert-tree tree="expression_statement [72410,72431]" parent="function_body [72399,72813]" at="1"/>
  <move-tree tree="expression_statement [83922,84009]" parent="function_body [72399,72813]" at="6"/>
  <insert-node tree="expression_statement [72591,72658]" parent="function_body [72399,72813]" at="4"/>
  <move-tree tree="expression_statement [27378,27462]" parent="function_body [72399,72813]" at="8"/>
  <update-node tree="identifier: onlyFrozen [83841,83851]" label="onlyFrozenOrFluid"/>
  <insert-node tree="{: { [72901,72902]" parent="function_body [72901,73295]" at="0"/>
  <move-tree tree="expression_statement [84822,84843]" parent="function_body [72901,73295]" at="1"/>
  <move-tree tree="variable_declaration_statement [86319,86408]" parent="function_body [72901,73295]" at="2"/>
  <move-tree tree="expression_statement [85242,85286]" parent="function_body [72901,73295]" at="3"/>
  <insert-node tree="expression_statement [73071,73137]" parent="function_body [72901,73295]" at="4"/>
  <move-tree tree="expression_statement [59297,59349]" parent="function_body [72901,73295]" at="5"/>
  <move-tree tree="emit_statement [84711,84756]" parent="function_body [72901,73295]" at="6"/>
  <insert-node tree="}: } [73294,73295]" parent="function_body [72901,73295]" at="7"/>
  <move-tree tree="type_name [66539,66546]" parent="event_paramater [78254,78279]" at="0"/>
  <insert-node tree="indexed: indexed [78262,78269]" parent="event_paramater [78254,78279]" at="1"/>
  <insert-node tree="identifier: candidate [78270,78279]" parent="event_paramater [78254,78279]" at="2"/>
  <move-tree tree="type_name [66772,66779]" parent="event_paramater [78306,78327]" at="0"/>
  <insert-node tree="indexed: indexed [78314,78321]" parent="event_paramater [78306,78327]" at="1"/>
  <insert-node tree="identifier: start [78322,78327]" parent="event_paramater [78306,78327]" at="2"/>
  <move-tree tree="type_name [66802,66809]" parent="event_paramater [78329,78343]" at="0"/>
  <insert-node tree="identifier: period [78337,78343]" parent="event_paramater [78329,78343]" at="1"/>
  <move-tree tree="type_name [66670,66677]" parent="event_paramater [78387,78412]" at="0"/>
  <insert-node tree="indexed: indexed [78395,78402]" parent="event_paramater [78387,78412]" at="1"/>
  <insert-node tree="identifier: candidate [78403,78412]" parent="event_paramater [78387,78412]" at="2"/>
  <move-tree tree="type_name [66872,66879]" parent="event_paramater [78435,78449]" at="0"/>
  <insert-node tree="identifier: bonded [78443,78449]" parent="event_paramater [78435,78449]" at="1"/>
  <move-tree tree="type_name [66642,66649]" parent="event_paramater [78495,78520]" at="0"/>
  <insert-node tree="indexed: indexed [78503,78510]" parent="event_paramater [78495,78520]" at="1"/>
  <insert-node tree="identifier: candidate [78511,78520]" parent="event_paramater [78495,78520]" at="2"/>
  <update-node tree="identifier: _account [65647,65655]" label="candidate"/>
  <update-node tree="identifier: onlyFrozen [83273,83283]" label="onlyFrozenOrLocked"/>
  <insert-node tree="{: { [78624,78625]" parent="function_body [78624,80151]" at="0"/>
  <move-tree tree="expression_statement [87156,87287]" parent="function_body [78624,80151]" at="1"/>
  <insert-node tree="if_statement [78762,79126]" parent="function_body [78624,80151]" at="2"/>
  <move-tree tree="expression_statement [87346,87456]" parent="function_body [78624,80151]" at="3"/>
  <move-tree tree="variable_declaration_statement [68700,68738]" parent="function_body [78624,80151]" at="4"/>
  <insert-tree tree="variable_declaration_statement [79334,79400]" parent="function_body [78624,80151]" at="5"/>
  <insert-tree tree="if_statement [79410,79469]" parent="function_body [78624,80151]" at="6"/>
  <insert-node tree="if_statement [79481,79619]" parent="function_body [78624,80151]" at="7"/>
  <insert-node tree="if_statement [79629,79770]" parent="function_body [78624,80151]" at="8"/>
  <insert-tree tree="if_statement [79780,79879]" parent="function_body [78624,80151]" at="9"/>
  <insert-tree tree="if_statement [79889,79990]" parent="function_body [78624,80151]" at="10"/>
  <move-tree tree="expression_statement [85451,85540]" parent="function_body [78624,80151]" at="11"/>
  <move-tree tree="expression_statement [85360,85441]" parent="function_body [78624,80151]" at="12"/>
  <insert-tree tree="emit_statement [80097,80144]" parent="function_body [78624,80151]" at="13"/>
  <insert-node tree="}: } [80150,80151]" parent="function_body [78624,80151]" at="14"/>
  <update-node tree="identifier: tokenA [81332,81338]" label="candidate"/>
  <move-tree tree="expression_statement [70426,70526]" parent="function_body [80203,81124]" at="5"/>
  <insert-node tree="expression_statement [80698,80894]" parent="function_body [80203,81124]" at="5"/>
  <insert-node tree="expression_statement [80906,81037]" parent="function_body [80203,81124]" at="6"/>
  <insert-tree tree="expression_statement [81049,81070]" parent="function_body [80203,81124]" at="7"/>
  <update-node tree="identifier: tokenB [81348,81354]" label="candidate"/>
  <insert-node tree="{: { [81185,81186]" parent="function_body [81185,81915]" at="0"/>
  <move-tree tree="expression_statement [85740,85857]" parent="function_body [81185,81915]" at="1"/>
  <insert-node tree="expression_statement [81318,81471]" parent="function_body [81185,81915]" at="2"/>
  <move-tree tree="expression_statement [84919,85040]" parent="function_body [81185,81915]" at="3"/>
  <move-tree tree="expression_statement [67280,67403]" parent="function_body [81185,81915]" at="4"/>
  <insert-tree tree="expression_statement [81840,81861]" parent="function_body [81185,81915]" at="5"/>
  <move-tree tree="emit_statement [84048,84078]" parent="function_body [81185,81915]" at="6"/>
  <insert-node tree="}: } [81914,81915]" parent="function_body [81185,81915]" at="7"/>
  <insert-node tree="{: { [81988,81989]" parent="function_body [81988,82237]" at="0"/>
  <insert-node tree="if_statement [81999,82062]" parent="function_body [81988,82237]" at="1"/>
  <move-tree tree="variable_declaration_statement [75731,75870]" parent="function_body [81988,82237]" at="2"/>
  <insert-tree tree="return_statement [82161,82230]" parent="function_body [81988,82237]" at="3"/>
  <insert-node tree="}: } [82236,82237]" parent="function_body [81988,82237]" at="4"/>
  <move-tree tree="type_name [16790,16797]" parent="event_paramater [83094,83115]" at="0"/>
  <insert-node tree="indexed: indexed [83102,83109]" parent="event_paramater [83094,83115]" at="1"/>
  <insert-node tree="identifier: epoch [83110,83115]" parent="event_paramater [83094,83115]" at="2"/>
  <update-node tree="identifier: newUniv2 [83214,83222]" label="block"/>
  <update-node tree="identifier: newClaimable [83114,83126]" label="timestamp"/>
  <update-node tree="identifier: lessUsdc [83196,83204]" label="amount"/>
  <insert-node tree="{: { [83269,83270]" parent="function_body [83269,83378]" at="0"/>
  <insert-node tree="comment: // committer reward: [83280,83300]" parent="function_body [83269,83378]" at="1"/>
  <move-tree tree="expression_statement [81128,81184]" parent="function_body [83269,83378]" at="2"/>
  <insert-node tree="comment: // 2000 SPAD to committer [83346,83371]" parent="function_body [83269,83378]" at="3"/>
  <insert-node tree="}: } [83377,83378]" parent="function_body [83269,83378]" at="4"/>
  <insert-node tree="{: { [83427,83428]" parent="function_body [83427,83576]" at="0"/>
  <insert-tree tree="expression_statement [83438,83453]" parent="function_body [83427,83576]" at="1"/>
  <insert-tree tree="expression_statement [83463,83480]" parent="function_body [83427,83576]" at="2"/>
  <insert-tree tree="expression_statement [83490,83504]" parent="function_body [83427,83576]" at="3"/>
  <insert-node tree="emit_statement [83516,83569]" parent="function_body [83427,83576]" at="4"/>
  <insert-node tree="}: } [83575,83576]" parent="function_body [83427,83576]" at="5"/>
  <insert-node tree="{: { [83606,83607]" parent="function_body [83606,83831]" at="0"/>
  <insert-node tree="comment: // Mint advance reward to sender [83617,83649]" parent="function_body [83606,83831]" at="1"/>
  <insert-tree tree="variable_declaration_statement [83659,83711]" parent="function_body [83606,83831]" at="2"/>
  <insert-tree tree="expression_statement [83721,83758]" parent="function_body [83606,83831]" at="3"/>
  <insert-tree tree="emit_statement [83768,83812]" parent="function_body [83606,83831]" at="4"/>
  <move-tree tree="expression_statement [70538,70540]" parent="function_body [83606,83831]" at="5"/>
  <insert-node tree="}: } [83830,83831]" parent="function_body [83606,83831]" at="6"/>
  <insert-node tree="return: return [18436,18442]" parent="return_statement [18436,18516]" at="0"/>
  <insert-node tree="call_expression [18443,18515]" parent="return_statement [18436,18516]" at="1"/>
  <insert-tree tree="variable_declaration [18863,18885]" parent="variable_declaration_statement [18863,18912]" at="0"/>
  <insert-node tree="=: = [18886,18887]" parent="variable_declaration_statement [18863,18912]" at="1"/>
  <insert-node tree="call_expression [18888,18911]" parent="variable_declaration_statement [18863,18912]" at="2"/>
  <insert-tree tree="variable_declaration [18922,18942]" parent="variable_declaration_statement [18922,18967]" at="0"/>
  <insert-node tree="=: = [18943,18944]" parent="variable_declaration_statement [18922,18967]" at="1"/>
  <insert-node tree="call_expression [18945,18966]" parent="variable_declaration_statement [18922,18967]" at="2"/>
  <insert-node tree="if: if [56280,56282]" parent="if_statement [56280,56358]" at="0"/>
  <insert-node tree="(: ( [56283,56284]" parent="if_statement [56280,56358]" at="1"/>
  <insert-tree tree="unary_expression [56284,56309]" parent="if_statement [56280,56358]" at="2"/>
  <insert-node tree="): ) [56309,56310]" parent="if_statement [56280,56358]" at="3"/>
  <insert-node tree="block_statement [56311,56358]" parent="if_statement [56280,56358]" at="4"/>
  <move-tree tree="call_expression [50132,50221]" parent="expression_statement [56478,56532]" at="0"/>
  <move-tree tree=",: , [50181,50182]" parent="call_expression [56478,56531]" at="8"/>
  <insert-node tree="call_expression [56542,56563]" parent="expression_statement [56542,56564]" at="0"/>
  <insert-node tree="call_expression [56810,56888]" parent="expression_statement [56810,56889]" at="0"/>
  <insert-node tree="call_expression [56991,57012]" parent="expression_statement [56991,57013]" at="0"/>
  <move-tree tree="call_expression [20939,21010]" parent="expression_statement [57023,57102]" at="0"/>
  <insert-node tree="call_expression [57220,57246]" parent="expression_statement [57220,57247]" at="0"/>
  <insert-tree tree="variable_declaration [58909,58927]" parent="variable_declaration_statement [58909,58986]" at="0"/>
  <insert-node tree="=: = [58928,58929]" parent="variable_declaration_statement [58909,58986]" at="1"/>
  <insert-node tree="call_expression [58930,58985]" parent="variable_declaration_statement [58909,58986]" at="2"/>
  <insert-node tree="if: if [59550,59552]" parent="if_statement [59550,59672]" at="0"/>
  <insert-node tree="(: ( [59553,59554]" parent="if_statement [59550,59672]" at="1"/>
  <insert-tree tree="binary_expression [59554,59564]" parent="if_statement [59550,59672]" at="2"/>
  <insert-node tree="): ) [59564,59565]" parent="if_statement [59550,59672]" at="3"/>
  <insert-node tree="block_statement [59566,59672]" parent="if_statement [59550,59672]" at="4"/>
  <insert-node tree="if: if [59742,59744]" parent="if_statement [59742,59814]" at="0"/>
  <insert-node tree="(: ( [59745,59746]" parent="if_statement [59742,59814]" at="1"/>
  <insert-tree tree="binary_expression [59746,59756]" parent="if_statement [59742,59814]" at="2"/>
  <insert-node tree="): ) [59756,59757]" parent="if_statement [59742,59814]" at="3"/>
  <insert-node tree="block_statement [59758,59814]" parent="if_statement [59742,59814]" at="4"/>
  <insert-node tree="if: if [59888,59890]" parent="if_statement [59888,59984]" at="0"/>
  <insert-node tree="(: ( [59891,59892]" parent="if_statement [59888,59984]" at="1"/>
  <insert-tree tree="binary_expression [59892,59902]" parent="if_statement [59888,59984]" at="2"/>
  <insert-node tree="): ) [59902,59903]" parent="if_statement [59888,59984]" at="3"/>
  <insert-node tree="block_statement [59904,59984]" parent="if_statement [59888,59984]" at="4"/>
  <move-tree tree="call_expression [81214,81254]" parent="expression_statement [60060,60097]" at="0"/>
  <insert-node tree="call_expression [60107,60139]" parent="expression_statement [60107,60140]" at="0"/>
  <move-tree tree="variable_declaration [86319,86347]" parent="variable_declaration_statement [61851,61922]" at="0"/>
  <insert-node tree="=: = [61875,61876]" parent="variable_declaration_statement [61851,61922]" at="1"/>
  <move-tree tree="call_expression [79703,79751]" parent="variable_declaration_statement [61851,61922]" at="2"/>
  <insert-tree tree="call_expression [61932,61985]" parent="expression_statement [61932,61986]" at="0"/>
  <insert-tree tree="call_expression [62092,62117]" parent="variable_declaration_statement [62066,62118]" at="2"/>
  <insert-tree tree="tuple_expression [62192,62201]" parent="variable_declaration_statement [62128,62202]" at="2"/>
  <move-tree tree="variable_declaration [86227,86259]" parent="variable_declaration_statement [62261,62305]" at="0"/>
  <insert-node tree="=: = [62285,62286]" parent="variable_declaration_statement [62261,62305]" at="1"/>
  <insert-tree tree="call_expression [62287,62304]" parent="variable_declaration_statement [62261,62305]" at="2"/>
  <move-tree tree="variable_declaration [85147,85166]" parent="variable_declaration_statement [62315,62353]" at="0"/>
  <insert-node tree="=: = [62336,62337]" parent="variable_declaration_statement [62315,62353]" at="1"/>
  <insert-tree tree="call_expression [62338,62352]" parent="variable_declaration_statement [62315,62353]" at="2"/>
  <insert-node tree="call_expression [62789,62856]" parent="return_statement [62782,62857]" at="1"/>
  <move-tree tree="call_expression [22225,22293]" parent="expression_statement [62957,63077]" at="0"/>
  <move-tree tree="variable_declaration [84266,84284]" parent="variable_declaration_statement [63218,63242]" at="0"/>
  <insert-node tree="=: = [63232,63233]" parent="variable_declaration_statement [63218,63242]" at="1"/>
  <insert-tree tree="call_expression [63234,63241]" parent="variable_declaration_statement [63218,63242]" at="2"/>
  <move-tree tree="variable_declaration [85052,85072]" parent="variable_declaration_statement [63252,63321]" at="0"/>
  <insert-node tree="=: = [63273,63274]" parent="variable_declaration_statement [63252,63321]" at="1"/>
  <insert-node tree="call_expression [63275,63320]" parent="variable_declaration_statement [63252,63321]" at="2"/>
  <insert-node tree="call_expression [63654,63723]" parent="expression_statement [63654,63724]" at="0"/>
  <insert-node tree="call_expression [64152,64203]" parent="expression_statement [64152,64204]" at="0"/>
  <update-node tree="identifier: Approval [23142,23150]" label="CouponApproval"/>
  <insert-tree tree="call_argument [64236,64246]" parent="emit_statement [64216,64265]" at="3"/>
  <move-tree tree="call_argument [21709,21715]" parent="emit_statement [64216,64265]" at="8"/>
  <insert-node tree="call_expression [64572,64659]" parent="expression_statement [64572,64660]" at="0"/>
  <insert-node tree="call_expression [64670,64721]" parent="expression_statement [64670,64722]" at="0"/>
  <insert-node tree="binary_expression [64738,64813]" parent="if_statement [64734,64935]" at="2"/>
  <update-node tree="identifier: Transfer [21092,21100]" label="CouponTransfer"/>
  <insert-tree tree="call_argument [64986,64991]" parent="emit_statement [64947,65001]" at="7"/>
  <insert-node tree=",: , [64991,64992]" parent="emit_statement [64947,65001]" at="8"/>
  <move-tree tree="variable_declaration [80864,80882]" parent="variable_declaration_statement [66703,66749]" at="0"/>
  <insert-node tree="=: = [66725,66726]" parent="variable_declaration_statement [66703,66749]" at="1"/>
  <insert-tree tree="call_expression [66727,66748]" parent="variable_declaration_statement [66703,66749]" at="2"/>
  <move-tree tree="variable_declaration [75882,75906]" parent="variable_declaration_statement [66993,67047]" at="0"/>
  <insert-node tree="=: = [67011,67012]" parent="variable_declaration_statement [66993,67047]" at="1"/>
  <insert-tree tree="call_expression [67013,67046]" parent="variable_declaration_statement [66993,67047]" at="2"/>
  <move-tree tree="variable_declaration [75731,75767]" parent="variable_declaration_statement [67588,67632]" at="0"/>
  <insert-node tree="=: = [67612,67613]" parent="variable_declaration_statement [67588,67632]" at="1"/>
  <insert-tree tree="call_expression [67614,67631]" parent="variable_declaration_statement [67588,67632]" at="2"/>
  <insert-node tree="variable_declaration_tuple [68024,68063]" parent="variable_declaration_statement [68024,68085]" at="0"/>
  <insert-tree tree="unary_expression [68215,68221]" parent="if_statement [68211,68270]" at="2"/>
  <insert-node tree="call_expression [71078,71192]" parent="expression_statement [71078,71193]" at="0"/>
  <move-tree tree="variable_declaration [75535,75554]" parent="variable_declaration_statement [71908,72066]" at="0"/>
  <insert-node tree="call_expression [72126,72153]" parent="expression_statement [72126,72154]" at="0"/>
  <insert-node tree="emit: emit [72260,72264]" parent="emit_statement [72260,72314]" at="0"/>
  <insert-node tree="identifier: Bond [72265,72269]" parent="emit_statement [72260,72314]" at="1"/>
  <insert-node tree="(: ( [72269,72270]" parent="emit_statement [72260,72314]" at="2"/>
  <insert-tree tree="call_argument [72270,72280]" parent="emit_statement [72260,72314]" at="3"/>
  <insert-node tree=",: , [72280,72281]" parent="emit_statement [72260,72314]" at="4"/>
  <insert-tree tree="call_argument [72282,72296]" parent="emit_statement [72260,72314]" at="5"/>
  <insert-node tree=",: , [72296,72297]" parent="emit_statement [72260,72314]" at="6"/>
  <insert-tree tree="call_argument [72298,72305]" parent="emit_statement [72260,72314]" at="7"/>
  <insert-node tree=",: , [72305,72306]" parent="emit_statement [72260,72314]" at="8"/>
  <move-tree tree="call_argument [84071,84076]" parent="emit_statement [72260,72314]" at="9"/>
  <insert-node tree="): ) [72312,72313]" parent="emit_statement [72260,72314]" at="10"/>
  <move-tree tree="variable_declaration [69872,69891]" parent="variable_declaration_statement [72443,72526]" at="0"/>
  <move-tree tree="call_expression [85169,85208]" parent="variable_declaration_statement [72443,72526]" at="2"/>
  <insert-node tree="call_expression [72591,72657]" parent="expression_statement [72591,72658]" at="0"/>
  <move-tree tree="variable_declaration [69497,69520]" parent="variable_declaration_statement [72945,73007]" at="0"/>
  <insert-node tree="call_expression [73071,73136]" parent="expression_statement [73071,73137]" at="0"/>
  <move-tree tree="call_argument [59305,59320]" parent="call_expression [73147,73219]" at="3"/>
  <update-node tree="identifier: Bond [84716,84720]" label="Unbond"/>
  <insert-tree tree="call_argument [73272,73279]" parent="emit_statement [73232,73288]" at="7"/>
  <insert-node tree=",: , [73279,73280]" parent="emit_statement [73232,73288]" at="8"/>
  <insert-node tree="if: if [78762,78764]" parent="if_statement [78762,79126]" at="0"/>
  <insert-node tree="(: ( [78765,78766]" parent="if_statement [78762,79126]" at="1"/>
  <insert-tree tree="unary_expression [78766,78789]" parent="if_statement [78762,79126]" at="2"/>
  <insert-node tree="): ) [78789,78790]" parent="if_statement [78762,79126]" at="3"/>
  <insert-node tree="block_statement [78791,79126]" parent="if_statement [78762,79126]" at="4"/>
  <insert-node tree="if: if [79481,79483]" parent="if_statement [79481,79619]" at="0"/>
  <insert-node tree="(: ( [79484,79485]" parent="if_statement [79481,79619]" at="1"/>
  <insert-tree tree="member_expression [79485,79522]" parent="if_statement [79481,79619]" at="2"/>
  <insert-node tree="): ) [79522,79523]" parent="if_statement [79481,79619]" at="3"/>
  <insert-node tree="block_statement [79524,79619]" parent="if_statement [79481,79619]" at="4"/>
  <insert-node tree="if: if [79629,79631]" parent="if_statement [79629,79770]" at="0"/>
  <insert-node tree="(: ( [79632,79633]" parent="if_statement [79629,79770]" at="1"/>
  <insert-tree tree="member_expression [79633,79671]" parent="if_statement [79629,79770]" at="2"/>
  <insert-node tree="): ) [79671,79672]" parent="if_statement [79629,79770]" at="3"/>
  <insert-node tree="block_statement [79673,79770]" parent="if_statement [79629,79770]" at="4"/>
  <move-tree tree="variable_declaration [68043,68066]" parent="variable_declaration_statement [80336,80409]" at="0"/>
  <insert-node tree="call_expression [80698,80893]" parent="expression_statement [80698,80894]" at="0"/>
  <insert-node tree="call_expression [80906,81036]" parent="expression_statement [80906,81037]" at="0"/>
  <update-node tree="identifier: Provide [86594,86601]" label="Commit"/>
  <insert-node tree="call_expression [81318,81470]" parent="expression_statement [81318,81471]" at="0"/>
  <update-node tree="identifier: Claim [84053,84058]" label="Commit"/>
  <insert-tree tree="call_argument [81897,81906]" parent="emit_statement [81873,81908]" at="5"/>
  <insert-node tree="if: if [81999,82001]" parent="if_statement [81999,82062]" at="0"/>
  <insert-node tree="(: ( [82002,82003]" parent="if_statement [81999,82062]" at="1"/>
  <insert-tree tree="binary_expression [82003,82021]" parent="if_statement [81999,82062]" at="2"/>
  <insert-node tree="): ) [82021,82022]" parent="if_statement [81999,82062]" at="3"/>
  <insert-node tree="block_statement [82023,82062]" parent="if_statement [81999,82062]" at="4"/>
  <insert-tree tree="variable_declaration [82074,82099]" parent="variable_declaration_statement [82074,82151]" at="0"/>
  <move-tree tree="call_expression [75770,75838]" parent="variable_declaration_statement [82074,82151]" at="2"/>
  <insert-node tree="emit: emit [83516,83520]" parent="emit_statement [83516,83569]" at="0"/>
  <insert-node tree="identifier: Advance [83521,83528]" parent="emit_statement [83516,83569]" at="1"/>
  <insert-node tree="(: ( [83528,83529]" parent="emit_statement [83516,83569]" at="2"/>
  <insert-tree tree="call_argument [83529,83536]" parent="emit_statement [83516,83569]" at="3"/>
  <insert-node tree=",: , [83536,83537]" parent="emit_statement [83516,83569]" at="4"/>
  <insert-tree tree="call_argument [83538,83550]" parent="emit_statement [83516,83569]" at="5"/>
  <insert-node tree=",: , [83550,83551]" parent="emit_statement [83516,83569]" at="6"/>
  <move-tree tree="call_argument [60763,60788]" parent="emit_statement [83516,83569]" at="7"/>
  <insert-node tree="): ) [83567,83568]" parent="emit_statement [83516,83569]" at="8"/>
  <insert-node tree="member_expression [18443,18513]" parent="call_expression [18443,18515]" at="0"/>
  <insert-node tree="(: ( [18513,18514]" parent="call_expression [18443,18515]" at="1"/>
  <insert-node tree="): ) [18514,18515]" parent="call_expression [18443,18515]" at="2"/>
  <insert-tree tree="member_expression [18888,18903]" parent="call_expression [18888,18911]" at="0"/>
  <insert-node tree="(: ( [18903,18904]" parent="call_expression [18888,18911]" at="1"/>
  <move-tree tree="call_argument [78742,78748]" parent="call_expression [18888,18911]" at="2"/>
  <insert-node tree="): ) [18910,18911]" parent="call_expression [18888,18911]" at="3"/>
  <insert-tree tree="member_expression [18945,18958]" parent="call_expression [18945,18966]" at="0"/>
  <insert-node tree="(: ( [18958,18959]" parent="call_expression [18945,18966]" at="1"/>
  <move-tree tree="call_argument [77861,77867]" parent="call_expression [18945,18966]" at="2"/>
  <insert-node tree="): ) [18965,18966]" parent="call_expression [18945,18966]" at="3"/>
  <insert-node tree="member_expression [56239,56252]" parent="call_expression [56239,56269]" at="0"/>
  <insert-node tree="{: { [56311,56312]" parent="block_statement [56311,56358]" at="0"/>
  <insert-node tree="expression_statement [56326,56347]" parent="block_statement [56311,56358]" at="1"/>
  <insert-node tree="}: } [56357,56358]" parent="block_statement [56311,56358]" at="2"/>
  <move-tree tree="identifier: LibEIP712 [50132,50141]" parent="member_expression [56478,56499]" at="1"/>
  <move-tree tree="call_argument [27682,27689]" parent="call_expression [56478,56531]" at="2"/>
  <move-tree tree="call_argument [53360,53366]" parent="call_expression [56478,56531]" at="10"/>
  <insert-tree tree="member_expression [56542,56555]" parent="call_expression [56542,56563]" at="0"/>
  <insert-node tree="(: ( [56555,56556]" parent="call_expression [56542,56563]" at="1"/>
  <move-tree tree="call_argument [24119,24125]" parent="call_expression [56542,56563]" at="2"/>
  <insert-node tree="): ) [56562,56563]" parent="call_expression [56542,56563]" at="3"/>
  <insert-node tree="identifier: decrementTotalDebt [56574,56592]" parent="call_expression [56574,56644]" at="0"/>
  <move-tree tree="call_argument [78125,78131]" parent="call_expression [56574,56644]" at="3"/>
  <insert-tree tree="member_expression [56765,56782]" parent="call_expression [56765,56799]" at="0"/>
  <insert-node tree="identifier: decrementTotalRedeemable [56810,56834]" parent="call_expression [56810,56888]" at="0"/>
  <insert-node tree="(: ( [56834,56835]" parent="call_expression [56810,56888]" at="1"/>
  <move-tree tree="call_argument [77591,77597]" parent="call_expression [56810,56888]" at="2"/>
  <insert-node tree=",: , [56841,56842]" parent="call_expression [56810,56888]" at="3"/>
  <move-tree tree="call_argument [51035,51049]" parent="call_expression [56810,56888]" at="4"/>
  <insert-node tree="): ) [56887,56888]" parent="call_expression [56810,56888]" at="5"/>
  <insert-node tree="member_expression [56991,57004]" parent="call_expression [56991,57012]" at="0"/>
  <insert-node tree="(: ( [57004,57005]" parent="call_expression [56991,57012]" at="1"/>
  <move-tree tree="call_argument [78193,78199]" parent="call_expression [56991,57012]" at="2"/>
  <insert-node tree="): ) [57011,57012]" parent="call_expression [56991,57012]" at="3"/>
  <insert-node tree="identifier: decrementTotalRedeemable [57023,57047]" parent="call_expression [57023,57101]" at="0"/>
  <insert-node tree="identifier: incrementTotalDebt [57220,57238]" parent="call_expression [57220,57246]" at="0"/>
  <insert-node tree="(: ( [57238,57239]" parent="call_expression [57220,57246]" at="1"/>
  <move-tree tree="call_argument [17482,17488]" parent="call_expression [57220,57246]" at="2"/>
  <insert-node tree="): ) [57245,57246]" parent="call_expression [57220,57246]" at="3"/>
  <update-node tree="identifier: require [21484,21491]" label="decrementTotalDebt"/>
  <move-tree tree="call_argument [77659,77665]" parent="call_expression [57479,57537]" at="2"/>
  <insert-node tree="member_expression [58930,58983]" parent="call_expression [58930,58985]" at="0"/>
  <insert-node tree="(: ( [58983,58984]" parent="call_expression [58930,58985]" at="1"/>
  <insert-node tree="): ) [58984,58985]" parent="call_expression [58930,58985]" at="2"/>
  <insert-node tree="{: { [59566,59567]" parent="block_statement [59566,59672]" at="0"/>
  <insert-node tree="expression_statement [59581,59618]" parent="block_statement [59566,59672]" at="1"/>
  <insert-node tree="expression_statement [59632,59661]" parent="block_statement [59566,59672]" at="2"/>
  <insert-node tree="}: } [59671,59672]" parent="block_statement [59566,59672]" at="3"/>
  <insert-node tree="{: { [59758,59759]" parent="block_statement [59758,59814]" at="0"/>
  <insert-node tree="expression_statement [59773,59803]" parent="block_statement [59758,59814]" at="1"/>
  <insert-node tree="}: } [59813,59814]" parent="block_statement [59758,59814]" at="2"/>
  <insert-node tree="{: { [59904,59905]" parent="block_statement [59904,59984]" at="0"/>
  <insert-node tree="expression_statement [59919,59973]" parent="block_statement [59904,59984]" at="1"/>
  <insert-node tree="}: } [59983,59984]" parent="block_statement [59904,59984]" at="2"/>
  <insert-node tree=",: , [60087,60088]" parent="call_expression [60060,60096]" at="3"/>
  <move-tree tree="call_argument [17978,17984]" parent="call_expression [60060,60096]" at="4"/>
  <insert-node tree="identifier: incrementTotalRedeemable [60107,60131]" parent="call_expression [60107,60139]" at="0"/>
  <insert-node tree="(: ( [60131,60132]" parent="call_expression [60107,60139]" at="1"/>
  <move-tree tree="call_argument [18622,18628]" parent="call_expression [60107,60139]" at="2"/>
  <insert-node tree="): ) [60138,60139]" parent="call_expression [60107,60139]" at="3"/>
  <insert-node tree="uint256: uint256 [61441,61448]" parent="primitive_type [61441,61448]" at="0"/>
  <update-node tree="identifier: newPhantomFromBonded [86327,86347]" label="expirationEpoch"/>
  <update-node tree="identifier: balanceOfBonded [84863,84878]" label="couponsForEpoch"/>
  <insert-tree tree="variable_declaration [62153,62169]" parent="variable_declaration_tuple [62128,62189]" at="3"/>
  <insert-node tree=",: , [62169,62170]" parent="variable_declaration_tuple [62128,62189]" at="4"/>
  <insert-tree tree="variable_declaration [62171,62188]" parent="variable_declaration_tuple [62128,62189]" at="5"/>
  <update-node tree="identifier: totalRewardedWithPhantom [86235,86259]" label="totalRedeemable"/>
  <update-node tree="identifier: lessPhantom [85155,85166]" label="totalCoupons"/>
  <insert-node tree="identifier: calculateCouponPremium [62789,62811]" parent="call_expression [62789,62856]" at="0"/>
  <insert-node tree="(: ( [62811,62812]" parent="call_expression [62789,62856]" at="1"/>
  <insert-tree tree="call_argument [62812,62834]" parent="call_expression [62789,62856]" at="2"/>
  <insert-node tree=",: , [62834,62835]" parent="call_expression [62789,62856]" at="3"/>
  <insert-tree tree="call_argument [62836,62847]" parent="call_expression [62789,62856]" at="4"/>
  <insert-node tree=",: , [62847,62848]" parent="call_expression [62789,62856]" at="5"/>
  <move-tree tree="call_argument [79035,79041]" parent="call_expression [62789,62856]" at="6"/>
  <insert-node tree="): ) [62855,62856]" parent="call_expression [62789,62856]" at="7"/>
  <move-tree tree="member_expression [50951,50963]" parent="call_expression [62957,63076]" at="0"/>
  <insert-tree tree="call_argument [62984,63000]" parent="call_expression [62957,63076]" at="2"/>
  <move-tree tree="call_argument [51016,51020]" parent="call_expression [62957,63076]" at="6"/>
  <insert-node tree=",: , [63019,63020]" parent="call_expression [62957,63076]" at="5"/>
  <move-tree tree="call_argument [23552,23590]" parent="call_expression [63089,63205]" at="6"/>
  <update-node tree="identifier: newPhantom [84274,84284]" label="epoch"/>
  <update-node tree="identifier: newClaimable [85060,85072]" label="couponAmount"/>
  <insert-tree tree="member_expression [63275,63291]" parent="call_expression [63275,63320]" at="0"/>
  <insert-node tree="(: ( [63291,63292]" parent="call_expression [63275,63320]" at="1"/>
  <insert-node tree="call_argument [63292,63319]" parent="call_expression [63275,63320]" at="2"/>
  <insert-node tree="): ) [63319,63320]" parent="call_expression [63275,63320]" at="3"/>
  <update-node tree="identifier: incrementBalanceOfBonded [86420,86444]" label="burnFromAccount"/>
  <move-tree tree="call_argument [81104,81116]" parent="call_expression [63331,63372]" at="4"/>
  <update-node tree="identifier: incrementBalanceOfClaimable [85296,85323]" label="incrementBalanceOfCoupons"/>
  <insert-node tree=",: , [63426,63427]" parent="call_expression [63383,63441]" at="5"/>
  <insert-tree tree="call_argument [63428,63440]" parent="call_expression [63383,63441]" at="6"/>
  <insert-node tree="identifier: require [63654,63661]" parent="call_expression [63654,63723]" at="0"/>
  <insert-node tree="(: ( [63661,63662]" parent="call_expression [63654,63723]" at="1"/>
  <insert-tree tree="call_argument [63662,63691]" parent="call_expression [63654,63723]" at="2"/>
  <insert-node tree=",: , [63691,63692]" parent="call_expression [63654,63723]" at="3"/>
  <move-tree tree="call_argument [22155,22190]" parent="call_expression [63654,63723]" at="4"/>
  <insert-node tree="): ) [63722,63723]" parent="call_expression [63654,63723]" at="5"/>
  <update-node tree="identifier: require [22930,22937]" label="decrementBalanceOfCoupons"/>
  <move-tree tree="call_argument [82614,82624]" parent="call_expression [63734,63837]" at="2"/>
  <insert-tree tree="call_argument [63772,63783]" parent="call_expression [63734,63837]" at="4"/>
  <insert-node tree=",: , [63783,63784]" parent="call_expression [63734,63837]" at="5"/>
  <insert-tree tree="call_argument [63785,63797]" parent="call_expression [63734,63837]" at="6"/>
  <insert-node tree=",: , [63797,63798]" parent="call_expression [63734,63837]" at="7"/>
  <update-node tree="identifier: incrementBalanceOfPhantom [86477,86502]" label="redeemToAccount"/>
  <insert-node tree="identifier: updateAllowanceCoupons [64152,64174]" parent="call_expression [64152,64203]" at="0"/>
  <insert-node tree="(: ( [64174,64175]" parent="call_expression [64152,64203]" at="1"/>
  <insert-tree tree="call_argument [64175,64185]" parent="call_expression [64152,64203]" at="2"/>
  <insert-node tree=",: , [64185,64186]" parent="call_expression [64152,64203]" at="3"/>
  <move-tree tree="call_argument [51198,51205]" parent="call_expression [64152,64203]" at="4"/>
  <insert-node tree=",: , [64194,64195]" parent="call_expression [64152,64203]" at="5"/>
  <move-tree tree="call_argument [77937,77943]" parent="call_expression [64152,64203]" at="6"/>
  <insert-node tree="): ) [64202,64203]" parent="call_expression [64152,64203]" at="7"/>
  <insert-node tree="identifier: decrementBalanceOfCoupons [64572,64597]" parent="call_expression [64572,64659]" at="0"/>
  <insert-node tree="(: ( [64597,64598]" parent="call_expression [64572,64659]" at="1"/>
  <move-tree tree="call_argument [53341,53347]" parent="call_expression [64572,64659]" at="2"/>
  <insert-node tree=",: , [64604,64605]" parent="call_expression [64572,64659]" at="3"/>
  <insert-tree tree="call_argument [64606,64611]" parent="call_expression [64572,64659]" at="4"/>
  <insert-node tree=",: , [64611,64612]" parent="call_expression [64572,64659]" at="5"/>
  <move-tree tree="call_argument [23455,23461]" parent="call_expression [64572,64659]" at="6"/>
  <insert-node tree=",: , [64619,64620]" parent="call_expression [64572,64659]" at="7"/>
  <move-tree tree="call_argument [50908,50927]" parent="call_expression [64572,64659]" at="8"/>
  <insert-node tree="): ) [64658,64659]" parent="call_expression [64572,64659]" at="9"/>
  <insert-node tree="identifier: incrementBalanceOfCoupons [64670,64695]" parent="call_expression [64670,64721]" at="0"/>
  <insert-node tree="(: ( [64695,64696]" parent="call_expression [64670,64721]" at="1"/>
  <move-tree tree="call_argument [53349,53358]" parent="call_expression [64670,64721]" at="2"/>
  <insert-node tree=",: , [64705,64706]" parent="call_expression [64670,64721]" at="3"/>
  <insert-tree tree="call_argument [64707,64712]" parent="call_expression [64670,64721]" at="4"/>
  <insert-node tree=",: , [64712,64713]" parent="call_expression [64670,64721]" at="5"/>
  <move-tree tree="call_argument [78471,78477]" parent="call_expression [64670,64721]" at="6"/>
  <insert-node tree="): ) [64720,64721]" parent="call_expression [64670,64721]" at="7"/>
  <insert-node tree="binary_expression [64738,64758]" parent="binary_expression [64738,64813]" at="0"/>
  <insert-node tree="&amp;&amp;: &amp;&amp; [64759,64761]" parent="binary_expression [64738,64813]" at="1"/>
  <move-tree tree="binary_expression [53382,53428]" parent="binary_expression [64738,64813]" at="2"/>
  <update-node tree="identifier: updatePrice [68676,68687]" label="oracleCapture"/>
  <update-node tree="identifier: totalRewardedWithPhantom [84193,84217]" label="newDebt"/>
  <update-node tree="identifier: usdcAmount [80872,80882]" label="cappedNewDebt"/>
  <update-node tree="identifier: balanceOfPhantom [75890,75906]" label="newSupply"/>
  <insert-node tree="identifier: increaseSupply [67120,67134]" parent="call_expression [67120,67145]" at="0"/>
  <update-node tree="identifier: balanceOfRewardedWithPhantom [75739,75767]" label="totalRedeemable"/>
  <update-node tree="identifier: totalRewardedWithPhantom [75658,75682]" label="totalCoupons"/>
  <insert-node tree="identifier: totalCoupons [67665,67677]" parent="call_expression [67665,67679]" at="0"/>
  <insert-node tree="(: ( [68024,68025]" parent="variable_declaration_tuple [68024,68063]" at="0"/>
  <move-tree tree="variable_declaration [69583,69608]" parent="variable_declaration_tuple [68024,68063]" at="1"/>
  <insert-node tree=",: , [68050,68051]" parent="variable_declaration_tuple [68024,68063]" at="2"/>
  <move-tree tree="variable_declaration [68833,68843]" parent="variable_declaration_tuple [68024,68063]" at="3"/>
  <insert-node tree="): ) [68062,68063]" parent="variable_declaration_tuple [68024,68063]" at="4"/>
  <move-tree tree="member_expression [111265,111279]" parent="call_expression [68066,68084]" at="0"/>
  <move-tree tree="member_expression [51073,51085]" parent="call_expression [71078,71192]" at="0"/>
  <insert-node tree="(: ( [71090,71091]" parent="call_expression [71078,71192]" at="1"/>
  <insert-tree tree="call_argument [71105,71126]" parent="call_expression [71078,71192]" at="2"/>
  <insert-node tree=",: , [71126,71127]" parent="call_expression [71078,71192]" at="3"/>
  <move-tree tree="call_argument [51130,51134]" parent="call_expression [71078,71192]" at="4"/>
  <insert-node tree=",: , [71145,71146]" parent="call_expression [71078,71192]" at="5"/>
  <move-tree tree="call_argument [20103,20142]" parent="call_expression [71078,71192]" at="6"/>
  <insert-node tree="): ) [71191,71192]" parent="call_expression [71078,71192]" at="7"/>
  <update-node tree="identifier: totalBonded [75543,75554]" label="balance"/>
  <insert-node tree="identifier: incrementBalanceOf [72076,72094]" parent="call_expression [72076,72115]" at="0"/>
  <insert-node tree="identifier: incrementTotalBonded [72126,72146]" parent="call_expression [72126,72153]" at="0"/>
  <insert-node tree="(: ( [72146,72147]" parent="call_expression [72126,72153]" at="1"/>
  <move-tree tree="call_argument [51207,51212]" parent="call_expression [72126,72153]" at="2"/>
  <insert-node tree="): ) [72152,72153]" parent="call_expression [72126,72153]" at="3"/>
  <update-node tree="identifier: lastReserve [69880,69891]" label="staged"/>
  <update-node tree="identifier: decrementBalanceOfClaimable [83922,83949]" label="incrementBalanceOfStaged"/>
  <insert-tree tree="call_argument [72573,72579]" parent="call_expression [72536,72580]" at="4"/>
  <insert-node tree="identifier: decrementTotalBonded [72591,72611]" parent="call_expression [72591,72657]" at="0"/>
  <insert-node tree="(: ( [72611,72612]" parent="call_expression [72591,72657]" at="1"/>
  <insert-tree tree="call_argument [72612,72618]" parent="call_expression [72591,72657]" at="2"/>
  <insert-node tree=",: , [72618,72619]" parent="call_expression [72591,72657]" at="3"/>
  <move-tree tree="call_argument [18717,18759]" parent="call_expression [72591,72657]" at="4"/>
  <insert-node tree="): ) [72656,72657]" parent="call_expression [72591,72657]" at="5"/>
  <update-node tree="identifier: require [27378,27385]" label="decrementBalanceOf"/>
  <move-tree tree="call_argument [84502,84512]" parent="call_expression [72668,72738]" at="2"/>
  <move-tree tree="call_argument [84514,84519]" parent="call_expression [72668,72738]" at="5"/>
  <insert-node tree=",: , [72704,72705]" parent="call_expression [72668,72738]" at="5"/>
  <update-node tree="identifier: newClaimable [85626,85638]" label="staged"/>
  <update-node tree="identifier: priceCumulative [69505,69520]" label="balance"/>
  <insert-node tree="identifier: decrementTotalBonded [73071,73091]" parent="call_expression [73071,73136]" at="0"/>
  <insert-node tree="(: ( [73091,73092]" parent="call_expression [73071,73136]" at="1"/>
  <move-tree tree="call_argument [83962,83967]" parent="call_expression [73071,73136]" at="2"/>
  <insert-node tree=",: , [73097,73098]" parent="call_expression [73071,73136]" at="3"/>
  <move-tree tree="call_argument [58955,58992]" parent="call_expression [73071,73136]" at="4"/>
  <insert-node tree="): ) [73135,73136]" parent="call_expression [73071,73136]" at="5"/>
  <update-node tree="identifier: require [59297,59304]" label="decrementBalanceOf"/>
  <move-tree tree="call_argument [84557,84567]" parent="call_expression [73147,73219]" at="2"/>
  <insert-node tree=",: , [73185,73186]" parent="call_expression [73147,73219]" at="5"/>
  <move-tree tree="call_argument [86029,86067]" parent="call_expression [78635,78749]" at="2"/>
  <insert-node tree="{: { [78791,78792]" parent="block_statement [78791,79126]" at="0"/>
  <insert-node tree="expression_statement [78806,78946]" parent="block_statement [78791,79126]" at="1"/>
  <insert-tree tree="expression_statement [78962,79022]" parent="block_statement [78791,79126]" at="2"/>
  <insert-tree tree="emit_statement [79036,79115]" parent="block_statement [78791,79126]" at="3"/>
  <insert-node tree="}: } [79125,79126]" parent="block_statement [78791,79126]" at="4"/>
  <update-node tree="identifier: lastReserve [68708,68719]" label="bonded"/>
  <update-node tree="identifier: updateReserve [68722,68735]" label="balanceOf"/>
  <move-tree tree="call_argument [85093,85103]" parent="call_expression [79302,79323]" at="2"/>
  <insert-node tree="{: { [79524,79525]" parent="block_statement [79524,79619]" at="0"/>
  <move-tree tree="expression_statement [26571,26636]" parent="block_statement [79524,79619]" at="1"/>
  <insert-node tree="}: } [79618,79619]" parent="block_statement [79524,79619]" at="2"/>
  <insert-node tree="{: { [79673,79674]" parent="block_statement [79673,79770]" at="0"/>
  <move-tree tree="expression_statement [26866,26935]" parent="block_statement [79673,79770]" at="1"/>
  <insert-node tree="}: } [79769,79770]" parent="block_statement [79673,79770]" at="2"/>
  <update-node tree="identifier: decrementBalanceOfPhantom [85451,85476]" label="recordVote"/>
  <insert-tree tree="call_argument [80036,80040]" parent="call_expression [80002,80041]" at="6"/>
  <update-node tree="identifier: decrementBalanceOfBonded [85360,85384]" label="placeLock"/>
  <update-node tree="identifier: priceCumulative [68051,68066]" label="endsAfter"/>
  <insert-tree tree="call_argument [80448,80467]" parent="call_expression [80421,80523]" at="2"/>
  <insert-tree tree="member_expression [80698,80710]" parent="call_expression [80698,80893]" at="0"/>
  <insert-node tree="(: ( [80710,80711]" parent="call_expression [80698,80893]" at="1"/>
  <insert-tree tree="call_argument [80725,80830]" parent="call_expression [80698,80893]" at="2"/>
  <insert-node tree=",: , [80830,80831]" parent="call_expression [80698,80893]" at="3"/>
  <insert-tree tree="call_argument [80845,80849]" parent="call_expression [80698,80893]" at="4"/>
  <insert-node tree=",: , [80849,80850]" parent="call_expression [80698,80893]" at="5"/>
  <move-tree tree="call_argument [85502,85538]" parent="call_expression [80698,80893]" at="6"/>
  <insert-node tree="): ) [80892,80893]" parent="call_expression [80698,80893]" at="7"/>
  <insert-tree tree="member_expression [80906,80918]" parent="call_expression [80906,81036]" at="0"/>
  <insert-node tree="(: ( [80918,80919]" parent="call_expression [80906,81036]" at="1"/>
  <insert-tree tree="call_argument [80933,80977]" parent="call_expression [80906,81036]" at="2"/>
  <insert-node tree=",: , [80977,80978]" parent="call_expression [80906,81036]" at="3"/>
  <insert-tree tree="call_argument [80992,80996]" parent="call_expression [80906,81036]" at="4"/>
  <insert-node tree=",: , [80996,80997]" parent="call_expression [80906,81036]" at="5"/>
  <move-tree tree="call_argument [85404,85439]" parent="call_expression [80906,81036]" at="6"/>
  <insert-node tree="): ) [81035,81036]" parent="call_expression [80906,81036]" at="7"/>
  <update-node tree="identifier: value [86614,86619]" label="candidate"/>
  <move-tree tree="member_expression [87517,87529]" parent="call_expression [81318,81470]" at="0"/>
  <insert-node tree="(: ( [81330,81331]" parent="call_expression [81318,81470]" at="1"/>
  <insert-node tree="call_argument [81345,81411]" parent="call_expression [81318,81470]" at="2"/>
  <insert-node tree=",: , [81411,81412]" parent="call_expression [81318,81470]" at="3"/>
  <move-tree tree="call_argument [87568,87572]" parent="call_expression [81318,81470]" at="4"/>
  <insert-node tree=",: , [81430,81431]" parent="call_expression [81318,81470]" at="5"/>
  <move-tree tree="call_argument [83969,84007]" parent="call_expression [81318,81470]" at="6"/>
  <insert-node tree="): ) [81469,81470]" parent="call_expression [81318,81470]" at="7"/>
  <insert-node tree="{: { [82023,82024]" parent="block_statement [82023,82062]" at="0"/>
  <insert-node tree="return_statement [82038,82051]" parent="block_statement [82023,82062]" at="1"/>
  <insert-node tree="}: } [82061,82062]" parent="block_statement [82023,82062]" at="2"/>
  <move-tree tree="member_expression [69611,69624]" parent="call_expression [82102,82150]" at="0"/>
  <insert-node tree=",: , [82134,82135]" parent="call_expression [82102,82150]" at="3"/>
  <insert-tree tree="call_argument [82136,82149]" parent="call_expression [82102,82150]" at="4"/>
  <insert-node tree="identifier: mintToAccount [83310,83323]" parent="call_expression [83310,83344]" at="0"/>
  <insert-tree tree="call_argument [83336,83343]" parent="call_expression [83310,83344]" at="4"/>
  <move-tree tree="member_expression [60763,60778]" parent="call_argument [83552,83567]" at="0"/>
  <insert-node tree="call_expression [18443,18503]" parent="member_expression [18443,18513]" at="0"/>
  <insert-node tree=".: . [18503,18504]" parent="member_expression [18443,18513]" at="1"/>
  <insert-node tree="identifier: asUint256 [18504,18513]" parent="member_expression [18443,18513]" at="2"/>
  <move-tree tree="call_expression [111244,111252]" parent="member_expression [56239,56252]" at="0"/>
  <insert-node tree=".: . [56247,56248]" parent="member_expression [56239,56252]" at="1"/>
  <insert-node tree="identifier: mint [56248,56252]" parent="member_expression [56239,56252]" at="2"/>
  <insert-node tree="call_expression [56326,56346]" parent="expression_statement [56326,56347]" at="0"/>
  <insert-tree tree="call_expression [56478,56486]" parent="member_expression [56478,56499]" at="0"/>
  <update-node tree="identifier: LibEIP712 [50132,50141]" label="transferFrom"/>
  <move-tree tree="call_expression [111560,111568]" parent="member_expression [56991,57004]" at="0"/>
  <insert-node tree=".: . [56999,57000]" parent="member_expression [56991,57004]" at="1"/>
  <insert-node tree="identifier: burn [57000,57004]" parent="member_expression [56991,57004]" at="2"/>
  <insert-node tree="call_expression [58930,58973]" parent="member_expression [58930,58983]" at="0"/>
  <insert-node tree=".: . [58973,58974]" parent="member_expression [58930,58983]" at="1"/>
  <insert-node tree="identifier: asUint256 [58974,58983]" parent="member_expression [58930,58983]" at="2"/>
  <move-tree tree="call_expression [86949,86981]" parent="expression_statement [59581,59618]" at="0"/>
  <insert-node tree="call_expression [59632,59660]" parent="expression_statement [59632,59661]" at="0"/>
  <insert-node tree="call_expression [59773,59802]" parent="expression_statement [59773,59803]" at="0"/>
  <insert-node tree="call_expression [59919,59972]" parent="expression_statement [59919,59973]" at="0"/>
  <update-node tree="identifier: lessUsdc [86165,86173]" label="lessRedeemable"/>
  <insert-node tree="call_expression [63292,63319]" parent="call_argument [63292,63319]" at="0"/>
  <update-node tree="identifier: newClaimable [85336,85348]" label="epoch"/>
  <insert-node tree="identifier: couponAmount [63884,63896]" parent="call_argument [63884,63896]" at="0"/>
  <move-tree tree="member_expression [12221,12231]" parent="binary_expression [64738,64758]" at="0"/>
  <insert-node tree="!=: != [64749,64751]" parent="binary_expression [64738,64758]" at="1"/>
  <insert-node tree="identifier: sender [64752,64758]" parent="binary_expression [64738,64758]" at="2"/>
  <move-tree tree="call_expression [53528,53616]" parent="expression_statement [64830,64924]" at="0"/>
  <move-tree tree="call_argument [53564,53570]" parent="call_expression [64830,64923]" at="3"/>
  <update-node tree="identifier: add [84236,84239]" label="asUint256"/>
  <update-node tree="identifier: price0Cumulative [69264,69280]" label="newRedeemable"/>
  <update-node tree="identifier: price1Cumulative [69290,69306]" label="lessDebt"/>
  <move-tree tree="type_name [86175,86182]" parent="variable_declaration [67099,67116]" at="0"/>
  <update-node tree="identifier: blockTimestamp [69315,69329]" label="newBonded"/>
  <insert-node tree="identifier: newSupply [67135,67144]" parent="call_argument [67135,67144]" at="0"/>
  <update-node tree="identifier: setup [111274,111279]" label="capture"/>
  <move-tree tree="call_expression [67910,67923]" parent="return_statement [68238,68259]" at="1"/>
  <move-tree tree="ternary_expression [84321,84394]" parent="member_expression [71926,72050]" at="0"/>
  <update-node tree="identifier: value [83617,83622]" label="balance"/>
  <insert-node tree="call_expression [72460,72498]" parent="member_expression [72460,72502]" at="0"/>
  <update-node tree="identifier: mul [85198,85201]" label="div"/>
  <move-tree tree="call_expression [85169,85197]" parent="call_argument [72503,72524]" at="0"/>
  <insert-node tree="identifier: balance [73178,73185]" parent="call_argument [73178,73185]" at="0"/>
  <insert-node tree="call_expression [78806,78945]" parent="expression_statement [78806,78946]" at="0"/>
  <insert-tree tree="call_expression [79165,79220]" parent="call_argument [79165,79220]" at="0"/>
  <update-node tree="identifier: lessPhantom [85489,85500]" label="candidate"/>
  <update-node tree="identifier: value [85397,85402]" label="candidate"/>
  <insert-tree tree="call_expression [80241,80263]" parent="call_argument [80241,80263]" at="0"/>
  <update-node tree="identifier: add [86298,86301]" label="sub"/>
  <insert-node tree="number_literal: 1 [80406,80407]" parent="call_argument [80406,80407]" at="0"/>
  <insert-node tree="call_expression [80563,80631]" parent="call_argument [80563,80631]" at="0"/>
  <insert-tree tree="call_expression [81223,81245]" parent="call_argument [81223,81245]" at="0"/>
  <insert-node tree="call_expression [81345,81411]" parent="call_argument [81345,81411]" at="0"/>
  <insert-tree tree="call_expression [81510,81613]" parent="call_argument [81510,81613]" at="0"/>
  <insert-node tree="return: return [82038,82044]" parent="return_statement [82038,82051]" at="0"/>
  <move-tree tree="boolean_literal [67925,67930]" parent="return_statement [82038,82051]" at="1"/>
  <insert-node tree="member_expression [18443,18495]" parent="call_expression [18443,18503]" at="0"/>
  <insert-node tree="(: ( [18495,18496]" parent="call_expression [18443,18503]" at="1"/>
  <move-tree tree="call_argument [18709,18715]" parent="call_expression [18443,18503]" at="2"/>
  <insert-node tree="): ) [18502,18503]" parent="call_expression [18443,18503]" at="3"/>
  <insert-node tree="identifier: increaseDebt [56326,56338]" parent="call_expression [56326,56346]" at="0"/>
  <insert-node tree="(: ( [56338,56339]" parent="call_expression [56326,56346]" at="1"/>
  <move-tree tree="call_argument [21069,21075]" parent="call_expression [56326,56346]" at="2"/>
  <insert-node tree="): ) [56345,56346]" parent="call_expression [56326,56346]" at="3"/>
  <insert-tree tree="member_expression [58930,58949]" parent="call_expression [58930,58973]" at="0"/>
  <insert-node tree="(: ( [58949,58950]" parent="call_expression [58930,58973]" at="1"/>
  <move-tree tree="call_argument [80764,80772]" parent="call_expression [58930,58973]" at="2"/>
  <insert-node tree="): ) [58972,58973]" parent="call_expression [58930,58973]" at="3"/>
  <insert-node tree=",: , [59608,59609]" parent="call_expression [59581,59617]" at="3"/>
  <move-tree tree="call_argument [21594,21600]" parent="call_expression [59581,59617]" at="4"/>
  <insert-node tree="identifier: incrementTotalBonded [59632,59652]" parent="call_expression [59632,59660]" at="0"/>
  <insert-node tree="(: ( [59652,59653]" parent="call_expression [59632,59660]" at="1"/>
  <move-tree tree="call_argument [21656,21662]" parent="call_expression [59632,59660]" at="2"/>
  <insert-node tree="): ) [59659,59660]" parent="call_expression [59632,59660]" at="3"/>
  <insert-tree tree="member_expression [59773,59786]" parent="call_expression [59773,59802]" at="0"/>
  <insert-node tree="(: ( [59786,59787]" parent="call_expression [59773,59802]" at="1"/>
  <insert-tree tree="call_argument [59787,59793]" parent="call_expression [59773,59802]" at="2"/>
  <insert-node tree=",: , [59793,59794]" parent="call_expression [59773,59802]" at="3"/>
  <move-tree tree="call_argument [22336,22342]" parent="call_expression [59773,59802]" at="4"/>
  <insert-node tree="): ) [59801,59802]" parent="call_expression [59773,59802]" at="5"/>
  <insert-tree tree="member_expression [59919,59932]" parent="call_expression [59919,59972]" at="0"/>
  <insert-node tree="(: ( [59932,59933]" parent="call_expression [59919,59972]" at="1"/>
  <insert-tree tree="call_argument [59933,59963]" parent="call_expression [59919,59972]" at="2"/>
  <insert-node tree=",: , [59963,59964]" parent="call_expression [59919,59972]" at="3"/>
  <move-tree tree="call_argument [22248,22254]" parent="call_expression [59919,59972]" at="4"/>
  <insert-node tree="): ) [59971,59972]" parent="call_expression [59919,59972]" at="5"/>
  <update-node tree="identifier: IUniswapV2Pair [81214,81228]" label="dollar"/>
  <insert-tree tree="call_expression [63116,63127]" parent="binary_expression [63116,63143]" at="0"/>
  <insert-node tree="&gt;=: &gt;= [63128,63130]" parent="binary_expression [63116,63143]" at="1"/>
  <update-node tree="identifier: recovered [50856,50865]" label="dollarAmount"/>
  <insert-node tree="identifier: couponPremium [63292,63305]" parent="call_expression [63292,63319]" at="0"/>
  <insert-node tree="(: ( [63305,63306]" parent="call_expression [63292,63319]" at="1"/>
  <move-tree tree="call_argument [80986,80998]" parent="call_expression [63292,63319]" at="2"/>
  <insert-node tree="): ) [63318,63319]" parent="call_expression [63292,63319]" at="3"/>
  <update-node tree="identifier: allowance [53382,53391]" label="allowanceCoupons"/>
  <insert-node tree="identifier: decrementAllowanceCoupons [64830,64855]" parent="call_expression [64830,64923]" at="0"/>
  <move-tree tree="call_argument [53472,53478]" parent="call_expression [64830,64923]" at="3"/>
  <insert-tree tree="call_argument [64864,64874]" parent="call_expression [64830,64923]" at="4"/>
  <insert-node tree=",: , [64874,64875]" parent="call_expression [64830,64923]" at="5"/>
  <insert-node tree=",: , [64882,64883]" parent="call_expression [64830,64923]" at="7"/>
  <insert-tree tree="member_expression [66659,66668]" parent="call_expression [66659,66680]" at="0"/>
  <insert-tree tree="call_argument [66669,66679]" parent="call_expression [66659,66680]" at="2"/>
  <update-node tree="identifier: univ2 [83317,83322]" label="dollar"/>
  <move-tree tree="binary_expression [84287,84305]" parent="ternary_expression [71926,72046]" at="0"/>
  <insert-tree tree="call_expression [72022,72046]" parent="ternary_expression [71926,72046]" at="4"/>
  <insert-tree tree="member_expression [72460,72469]" parent="call_expression [72460,72498]" at="0"/>
  <insert-node tree="(: ( [72469,72470]" parent="call_expression [72460,72498]" at="1"/>
  <insert-node tree="call_argument [72470,72497]" parent="call_expression [72460,72498]" at="2"/>
  <insert-node tree="): ) [72497,72498]" parent="call_expression [72460,72498]" at="3"/>
  <update-node tree="identifier: balanceOfPhantom [85169,85185]" label="balanceOf"/>
  <insert-node tree="&gt;: &gt; [78684,78685]" parent="binary_expression [78662,78687]" at="1"/>
  <insert-node tree="number_literal: 0 [78686,78687]" parent="binary_expression [78662,78687]" at="2"/>
  <insert-tree tree="member_expression [78806,78818]" parent="call_expression [78806,78945]" at="0"/>
  <insert-node tree="(: ( [78818,78819]" parent="call_expression [78806,78945]" at="1"/>
  <insert-tree tree="call_argument [78837,78859]" parent="call_expression [78806,78945]" at="2"/>
  <insert-node tree=",: , [78859,78860]" parent="call_expression [78806,78945]" at="3"/>
  <insert-tree tree="call_argument [78878,78882]" parent="call_expression [78806,78945]" at="4"/>
  <insert-node tree=",: , [78882,78883]" parent="call_expression [78806,78945]" at="5"/>
  <move-tree tree="call_argument [26339,26372]" parent="call_expression [78806,78945]" at="6"/>
  <insert-node tree="): ) [78944,78945]" parent="call_expression [78806,78945]" at="7"/>
  <update-node tree="identifier: require [26571,26578]" label="decrementRejectFor"/>
  <insert-tree tree="call_argument [79558,79567]" parent="call_expression [79539,79607]" at="2"/>
  <insert-tree tree="call_argument [79569,79575]" parent="call_expression [79539,79607]" at="4"/>
  <insert-node tree=",: , [79575,79576]" parent="call_expression [79539,79607]" at="5"/>
  <update-node tree="identifier: require [26866,26873]" label="decrementApproveFor"/>
  <insert-tree tree="call_argument [79708,79717]" parent="call_expression [79688,79758]" at="2"/>
  <insert-tree tree="call_argument [79719,79725]" parent="call_expression [79688,79758]" at="4"/>
  <insert-node tree=",: , [79725,79726]" parent="call_expression [79688,79758]" at="5"/>
  <insert-node tree="member_expression [80563,80594]" parent="call_expression [80563,80631]" at="0"/>
  <insert-node tree="(: ( [80594,80595]" parent="call_expression [80563,80631]" at="1"/>
  <insert-tree tree="call_argument [80595,80630]" parent="call_expression [80563,80631]" at="2"/>
  <insert-node tree="): ) [80630,80631]" parent="call_expression [80563,80631]" at="3"/>
  <move-tree tree="member_expression [76210,76256]" parent="call_expression [81345,81411]" at="0"/>
  <insert-node tree="(: ( [81370,81371]" parent="call_expression [81345,81411]" at="1"/>
  <insert-tree tree="call_argument [81371,81410]" parent="call_expression [81345,81411]" at="2"/>
  <insert-node tree="): ) [81410,81411]" parent="call_expression [81345,81411]" at="3"/>
  <insert-tree tree="call_expression [81724,81745]" parent="binary_expression [81724,81768]" at="0"/>
  <insert-node tree="&gt;: &gt; [81746,81747]" parent="binary_expression [81724,81768]" at="1"/>
  <insert-tree tree="call_expression [81748,81768]" parent="binary_expression [81724,81768]" at="2"/>
  <update-node tree="identifier: balanceOfBonded [75813,75828]" label="balanceOf"/>
  <insert-node tree="call_expression [18443,18491]" parent="member_expression [18443,18495]" at="0"/>
  <insert-node tree=".: . [18491,18492]" parent="member_expression [18443,18495]" at="1"/>
  <insert-node tree="identifier: mul [18492,18495]" parent="member_expression [18443,18495]" at="2"/>
  <insert-node tree="call_expression [58950,58972]" parent="call_argument [58950,58972]" at="0"/>
  <move-tree tree="call_expression [74558,74613]" parent="member_expression [59320,59393]" at="0"/>
  <update-node tree="identifier: balanceOf [86957,86966]" label="mint"/>
  <update-node tree="identifier: getPoolExitLockupEpochs [79725,79748]" label="getCouponExpiration"/>
  <insert-tree tree="member_expression [64787,64797]" parent="call_argument [64787,64797]" at="0"/>
  <move-tree tree="call_expression [84881,84908]" parent="call_argument [72470,72497]" at="0"/>
  <update-node tree="identifier: totalRewardedWithPhantom [86350,86374]" label="value"/>
  <insert-tree tree="call_expression [72973,72986]" parent="call_argument [72973,72986]" at="0"/>
  <update-node tree="identifier: balanceOfRewarded [86029,86046]" label="balanceOf"/>
  <insert-node tree="binary_expression [80563,80590]" parent="member_expression [80563,80594]" at="0"/>
  <insert-node tree=".: . [80590,80591]" parent="member_expression [80563,80594]" at="1"/>
  <insert-node tree="identifier: add [80591,80594]" parent="member_expression [80563,80594]" at="2"/>
  <move-tree tree="binary_expression [76210,76236]" parent="member_expression [81345,81370]" at="0"/>
  <update-node tree="identifier: fluidUntil [76246,76256]" label="add"/>
  <insert-node tree="identifier: effectivePremium [18443,18459]" parent="call_expression [18443,18491]" at="0"/>
  <insert-node tree="(: ( [18459,18460]" parent="call_expression [18443,18491]" at="1"/>
  <insert-tree tree="call_argument [18460,18471]" parent="call_expression [18443,18491]" at="2"/>
  <insert-node tree=",: , [18471,18472]" parent="call_expression [18443,18491]" at="3"/>
  <insert-tree tree="call_argument [18473,18482]" parent="call_expression [18443,18491]" at="4"/>
  <insert-node tree=",: , [18482,18483]" parent="call_expression [18443,18491]" at="5"/>
  <move-tree tree="call_argument [23544,23550]" parent="call_expression [18443,18491]" at="6"/>
  <insert-node tree="): ) [18490,18491]" parent="call_expression [18443,18491]" at="7"/>
  <insert-node tree="member_expression [58950,58970]" parent="call_expression [58950,58972]" at="0"/>
  <insert-node tree="(: ( [58970,58971]" parent="call_expression [58950,58972]" at="1"/>
  <insert-node tree="): ) [58971,58972]" parent="call_expression [58950,58972]" at="2"/>
  <update-node tree="identifier: totalBonded [87003,87014]" label="totalRedeemable"/>
  <update-node tree="identifier: univ2 [86949,86954]" label="dollar"/>
  <insert-node tree="identifier: value [71960,71965]" parent="member_expression [71960,71969]" at="0"/>
  <move-tree tree="call_expression [84344,84379]" parent="call_argument [71970,72005]" at="0"/>
  <update-node tree="identifier: totalRewarded [86262,86275]" label="startFor"/>
  <insert-tree tree="call_argument [80365,80374]" parent="call_expression [80356,80375]" at="2"/>
  <update-node tree="identifier: totalPhantom [86282,86294]" label="periodFor"/>
  <insert-tree tree="call_argument [80390,80399]" parent="call_expression [80380,80400]" at="2"/>
  <insert-tree tree="call_expression [80563,80570]" parent="binary_expression [80563,80590]" at="0"/>
  <insert-node tree="&lt;=: &lt;= [80571,80573]" parent="binary_expression [80563,80590]" at="1"/>
  <insert-node tree="call_expression [80574,80590]" parent="binary_expression [80563,80590]" at="2"/>
  <insert-tree tree="call_expression [81345,81356]" parent="binary_expression [81345,81366]" at="0"/>
  <insert-node tree="&gt;: &gt; [81357,81358]" parent="binary_expression [81345,81366]" at="1"/>
  <move-tree tree="call_expression [80764,80772]" parent="member_expression [58950,58970]" at="0"/>
  <insert-node tree=".: . [58958,58959]" parent="member_expression [58950,58970]" at="1"/>
  <insert-node tree="identifier: totalSupply [58959,58970]" parent="member_expression [58950,58970]" at="2"/>
  <insert-node tree="binary_expression [59320,59370]" parent="member_expression [59320,59374]" at="0"/>
  <update-node tree="identifier: sub [74592,74595]" label="add"/>
  <move-tree tree="call_expression [86985,86998]" parent="call_argument [59375,59388]" at="0"/>
  <insert-tree tree="member_expression [80574,80587]" parent="call_expression [80574,80590]" at="0"/>
  <insert-node tree="(: ( [80587,80588]" parent="call_expression [80574,80590]" at="1"/>
  <move-tree tree="call_argument [57982,57983]" parent="call_expression [80574,80590]" at="2"/>
  <insert-node tree="): ) [80589,80590]" parent="call_expression [80574,80590]" at="3"/>
  <move-tree tree="call_expression [74558,74591]" parent="binary_expression [59320,59370]" at="0"/>
  <insert-node tree="&gt;=: &gt;= [59354,59356]" parent="binary_expression [59320,59370]" at="1"/>
  <move-tree tree="call_expression [85767,85780]" parent="binary_expression [59320,59370]" at="2"/>
  <delete-node tree="contract: contract [11872,11880]"/>
  <delete-node tree="identifier: Context [11881,11888]"/>
  <delete-node tree="{: { [11889,11890]"/>
  <delete-node tree="comment: // Empty internal constructor, to prevent people from mistakenly deploying [11896,11970]"/>
  <delete-node tree="comment: // an instance of this contract, which should be used via inheritance. [11976,12046]"/>
  <delete-tree tree="constructor_definition [12052,12079]"/>
  <delete-node tree="comment: // solhint-disable-previous-line no-empty-blocks [12085,12133]"/>
  <delete-node tree="function: function [12141,12149]"/>
  <delete-node tree="identifier: _msgSender [12150,12160]"/>
  <delete-node tree="(: ( [12160,12161]"/>
  <delete-node tree="): ) [12161,12162]"/>
  <delete-tree tree="state_mutability [12172,12176]"/>
  <delete-tree tree="return_type_definition [12177,12202]"/>
  <delete-node tree="{: { [12203,12204]"/>
  <delete-node tree="return: return [12214,12220]"/>
  <delete-node tree="return_statement [12214,12232]"/>
  <delete-node tree="}: } [12238,12239]"/>
  <delete-node tree="function_body [12203,12239]"/>
  <delete-node tree="function_definition [12141,12239]"/>
  <delete-tree tree="function_definition [12247,12472]"/>
  <delete-node tree="}: } [12474,12475]"/>
  <delete-node tree="contract_body [11889,12475]"/>
  <delete-node tree="contract_declaration [11872,12475]"/>
  <delete-node tree="contract: contract [23895,23903]"/>
  <delete-node tree="identifier: ERC20Burnable [23904,23917]"/>
  <delete-node tree="is: is [23918,23920]"/>
  <delete-tree tree="inheritance_specifier [23921,23928]"/>
  <delete-node tree=",: , [23928,23929]"/>
  <delete-tree tree="inheritance_specifier [23930,23935]"/>
  <delete-node tree="{: { [23936,23937]"/>
  <delete-node tree="comment: /**      * @dev Destroys `amount` tokens from the caller.      *      * See {ERC20-_burn}.      */ [23943,24045]"/>
  <delete-node tree="function: function [24051,24059]"/>
  <delete-node tree="identifier: burn [24060,24064]"/>
  <delete-node tree="(: ( [24064,24065]"/>
  <delete-node tree="): ) [24079,24080]"/>
  <delete-tree tree="visibility [24081,24087]"/>
  <delete-node tree="{: { [24088,24089]"/>
  <delete-node tree="identifier: _burn [24099,24104]"/>
  <delete-node tree="(: ( [24104,24105]"/>
  <delete-tree tree="call_argument [24105,24117]"/>
  <delete-node tree=",: , [24117,24118]"/>
  <delete-node tree="): ) [24125,24126]"/>
  <delete-node tree="call_expression [24099,24126]"/>
  <delete-node tree="expression_statement [24099,24127]"/>
  <delete-node tree="}: } [24133,24134]"/>
  <delete-node tree="function_body [24088,24134]"/>
  <delete-node tree="function_definition [24051,24134]"/>
  <delete-node tree="comment: /**      * @dev See {ERC20-_burnFrom}.      */ [24142,24190]"/>
  <delete-node tree="}: } [24301,24302]"/>
  <delete-node tree="contract_body [23936,24302]"/>
  <delete-node tree="contract_declaration [23895,24302]"/>
  <delete-node tree="contract: contract [24441,24449]"/>
  <delete-node tree="identifier: ERC20Detailed [24450,24463]"/>
  <delete-node tree="is: is [24464,24466]"/>
  <delete-tree tree="inheritance_specifier [24467,24473]"/>
  <delete-node tree="{: { [24474,24475]"/>
  <delete-tree tree="type_name [24481,24487]"/>
  <delete-node tree="identifier: _name [24496,24501]"/>
  <delete-node tree="state_variable_declaration [24481,24502]"/>
  <delete-tree tree="type_name [24508,24514]"/>
  <delete-node tree="identifier: _symbol [24523,24530]"/>
  <delete-node tree="state_variable_declaration [24508,24531]"/>
  <delete-tree tree="type_name [24537,24542]"/>
  <delete-node tree="identifier: _decimals [24551,24560]"/>
  <delete-node tree="state_variable_declaration [24537,24561]"/>
  <delete-node tree="comment: /**      * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of      * these values are immutable: they can only be set once during      * construction.      */ [24569,24752]"/>
  <delete-tree tree="constructor_definition [24758,24925]"/>
  <delete-node tree="comment: /**      * @dev Returns the name of the token.      */ [24933,24989]"/>
  <delete-tree tree="function_definition [24995,25078]"/>
  <delete-node tree="comment: /**      * @dev Returns the symbol of the token, usually a shorter version of the      * name.      */ [25086,25191]"/>
  <delete-tree tree="function_definition [25197,25284]"/>
  <delete-node tree="comment: /**      * @dev Returns the number of decimals used to get its user representation.      * For example, if `decimals` equals `2`, a balance of `505` tokens should      * be displayed to a user as `5,05` (`505 / 10 ** 2`).      *      * Tokens usually opt for a value of 18, imitating the relationship between      * Ether and Wei.      *      * NOTE: This information is only used for _display_ purposes: it in      * no way affects any of the arithmetic of the contract, including      * {IERC20-balanceOf} and {IERC20-transfer}.      */ [25292,25841]"/>
  <delete-tree tree="function_definition [25847,25930]"/>
  <delete-node tree="}: } [25932,25933]"/>
  <delete-node tree="contract_body [24474,25933]"/>
  <delete-node tree="contract_declaration [24441,25933]"/>
  <delete-node tree="library: library [26081,26088]"/>
  <delete-node tree="identifier: Roles [26089,26094]"/>
  <delete-node tree="{: { [26095,26096]"/>
  <delete-tree tree="struct_declaration [26102,26165]"/>
  <delete-node tree="comment: /**      * @dev Give an account access to this role.      */ [26173,26235]"/>
  <delete-node tree="function: function [26241,26249]"/>
  <delete-node tree="identifier: add [26250,26253]"/>
  <delete-node tree="(: ( [26253,26254]"/>
  <delete-tree tree="parameter [26254,26271]"/>
  <delete-node tree=",: , [26271,26272]"/>
  <delete-tree tree="parameter [26273,26288]"/>
  <delete-node tree="): ) [26288,26289]"/>
  <delete-tree tree="visibility [26290,26298]"/>
  <delete-node tree="{: { [26299,26300]"/>
  <delete-node tree="identifier: require [26310,26317]"/>
  <delete-node tree="(: ( [26317,26318]"/>
  <delete-tree tree="call_argument [26318,26337]"/>
  <delete-node tree=",: , [26337,26338]"/>
  <delete-node tree="): ) [26372,26373]"/>
  <delete-node tree="call_expression [26310,26373]"/>
  <delete-node tree="expression_statement [26310,26374]"/>
  <delete-tree tree="expression_statement [26384,26412]"/>
  <delete-node tree="}: } [26418,26419]"/>
  <delete-node tree="function_body [26299,26419]"/>
  <delete-node tree="function_definition [26241,26419]"/>
  <delete-node tree="comment: /**      * @dev Remove an account's access to this role.      */ [26427,26493]"/>
  <delete-node tree="function: function [26499,26507]"/>
  <delete-node tree="identifier: remove [26508,26514]"/>
  <delete-node tree="(: ( [26514,26515]"/>
  <delete-tree tree="parameter [26515,26532]"/>
  <delete-node tree=",: , [26532,26533]"/>
  <delete-tree tree="parameter [26534,26549]"/>
  <delete-node tree="): ) [26549,26550]"/>
  <delete-tree tree="visibility [26551,26559]"/>
  <delete-node tree="{: { [26560,26561]"/>
  <delete-tree tree="expression_statement [26646,26675]"/>
  <delete-node tree="}: } [26681,26682]"/>
  <delete-node tree="function_body [26560,26682]"/>
  <delete-node tree="function_definition [26499,26682]"/>
  <delete-node tree="comment: /**      * @dev Check if an account has this role.      * @return bool      */ [26690,26771]"/>
  <delete-node tree="function: function [26777,26785]"/>
  <delete-node tree="identifier: has [26786,26789]"/>
  <delete-node tree="(: ( [26789,26790]"/>
  <delete-tree tree="parameter [26790,26807]"/>
  <delete-node tree=",: , [26807,26808]"/>
  <delete-tree tree="parameter [26809,26824]"/>
  <delete-node tree="): ) [26824,26825]"/>
  <delete-tree tree="visibility [26826,26834]"/>
  <delete-tree tree="state_mutability [26835,26839]"/>
  <delete-tree tree="return_type_definition [26840,26854]"/>
  <delete-node tree="{: { [26855,26856]"/>
  <delete-tree tree="return_statement [26945,26973]"/>
  <delete-node tree="}: } [26979,26980]"/>
  <delete-node tree="function_body [26855,26980]"/>
  <delete-node tree="function_definition [26777,26980]"/>
  <delete-node tree="}: } [26982,26983]"/>
  <delete-node tree="contract_body [26095,26983]"/>
  <delete-node tree="library_declaration [26081,26983]"/>
  <delete-node tree="contract: contract [27059,27067]"/>
  <delete-node tree="identifier: MinterRole [27068,27078]"/>
  <delete-node tree="is: is [27079,27081]"/>
  <delete-tree tree="inheritance_specifier [27082,27089]"/>
  <delete-node tree="{: { [27090,27091]"/>
  <delete-tree tree="using_directive [27097,27124]"/>
  <delete-node tree="event: event [27181,27186]"/>
  <delete-node tree="identifier: MinterRemoved [27187,27200]"/>
  <delete-node tree="(: ( [27200,27201]"/>
  <delete-node tree="): ) [27224,27225]"/>
  <delete-node tree="event_definition [27181,27226]"/>
  <delete-tree tree="type_name [27234,27244]"/>
  <delete-node tree="identifier: _minters [27253,27261]"/>
  <delete-node tree="state_variable_declaration [27234,27262]"/>
  <delete-tree tree="constructor_definition [27270,27337]"/>
  <delete-node tree="modifier: modifier [27345,27353]"/>
  <delete-node tree="identifier: onlyMinter [27354,27364]"/>
  <delete-node tree="(: ( [27364,27365]"/>
  <delete-node tree="): ) [27365,27366]"/>
  <delete-node tree="{: { [27367,27368]"/>
  <delete-tree tree="expression_statement [27472,27474]"/>
  <delete-node tree="}: } [27480,27481]"/>
  <delete-node tree="function_body [27367,27481]"/>
  <delete-node tree="modifier_definition [27345,27481]"/>
  <delete-node tree="function: function [27489,27497]"/>
  <delete-node tree="identifier: isMinter [27498,27506]"/>
  <delete-node tree="(: ( [27506,27507]"/>
  <delete-node tree="): ) [27522,27523]"/>
  <delete-tree tree="visibility [27524,27530]"/>
  <delete-tree tree="state_mutability [27531,27535]"/>
  <delete-tree tree="return_type_definition [27536,27550]"/>
  <delete-tree tree="function_body [27551,27598]"/>
  <delete-node tree="function_definition [27489,27598]"/>
  <delete-node tree="function: function [27606,27614]"/>
  <delete-node tree="identifier: addMinter [27615,27624]"/>
  <delete-node tree="(: ( [27624,27625]"/>
  <delete-node tree="): ) [27640,27641]"/>
  <delete-tree tree="visibility [27642,27648]"/>
  <delete-tree tree="modifier_invocation [27649,27659]"/>
  <delete-node tree="{: { [27660,27661]"/>
  <delete-node tree="identifier: _addMinter [27671,27681]"/>
  <delete-node tree="(: ( [27681,27682]"/>
  <delete-node tree="): ) [27689,27690]"/>
  <delete-node tree="call_expression [27671,27690]"/>
  <delete-node tree="expression_statement [27671,27691]"/>
  <delete-node tree="}: } [27697,27698]"/>
  <delete-node tree="function_body [27660,27698]"/>
  <delete-node tree="function_definition [27606,27698]"/>
  <delete-tree tree="function_definition [27706,27785]"/>
  <delete-node tree="function: function [27793,27801]"/>
  <delete-node tree="identifier: _addMinter [27802,27812]"/>
  <delete-node tree="(: ( [27812,27813]"/>
  <delete-tree tree="parameter [27813,27828]"/>
  <delete-node tree="): ) [27828,27829]"/>
  <delete-tree tree="function_body [27839,27915]"/>
  <delete-node tree="function_definition [27793,27915]"/>
  <delete-node tree="function: function [27923,27931]"/>
  <delete-node tree="identifier: _removeMinter [27932,27945]"/>
  <delete-node tree="(: ( [27945,27946]"/>
  <delete-tree tree="parameter [27946,27961]"/>
  <delete-node tree="): ) [27961,27962]"/>
  <delete-tree tree="function_body [27972,28053]"/>
  <delete-node tree="function_definition [27923,28053]"/>
  <delete-node tree="}: } [28055,28056]"/>
  <delete-node tree="contract_body [27090,28056]"/>
  <delete-node tree="contract_declaration [27059,28056]"/>
  <delete-node tree="comment: /*     Copyright 2019 ZeroEx Intl.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [38886,39494]"/>
  <delete-node tree="library: library [39504,39511]"/>
  <delete-node tree="identifier: LibEIP712 [39512,39521]"/>
  <delete-node tree="{: { [39522,39523]"/>
  <delete-node tree="comment: // Hash of the EIP712 Domain Separator Schema [39531,39576]"/>
  <delete-node tree="comment: // keccak256(abi.encodePacked( [39582,39612]"/>
  <delete-node tree="comment: //     &quot;EIP712Domain(&quot;, [39618,39641]"/>
  <delete-node tree="comment: //     &quot;string name,&quot;, [39647,39669]"/>
  <delete-node tree="comment: //     &quot;string version,&quot;, [39675,39700]"/>
  <delete-node tree="comment: //     &quot;uint256 chainId,&quot;, [39706,39732]"/>
  <delete-node tree="comment: //     &quot;address verifyingContract&quot;, [39738,39773]"/>
  <delete-node tree="comment: //     &quot;)&quot; [39779,39789]"/>
  <delete-node tree="comment: // )) [39795,39800]"/>
  <delete-tree tree="state_variable_declaration [39806,39938]"/>
  <delete-node tree="comment: /// @dev Calculates a EIP712 domain separator. [39946,39992]"/>
  <delete-node tree="comment: /// @param name The EIP712 domain name. [39998,40037]"/>
  <delete-node tree="comment: /// @param version The EIP712 domain version. [40043,40088]"/>
  <delete-node tree="comment: /// @param verifyingContract The EIP712 verifying contract. [40094,40153]"/>
  <delete-node tree="comment: /// @return EIP712 domain separator. [40159,40195]"/>
  <delete-node tree="function: function [40201,40209]"/>
  <delete-node tree="identifier: hashEIP712Domain [40210,40226]"/>
  <delete-node tree="(: ( [40226,40227]"/>
  <delete-tree tree="parameter [40237,40255]"/>
  <delete-node tree=",: , [40255,40256]"/>
  <delete-tree tree="parameter [40266,40287]"/>
  <delete-node tree=",: , [40287,40288]"/>
  <delete-node tree=",: , [40313,40314]"/>
  <delete-tree tree="parameter [40324,40349]"/>
  <delete-node tree="): ) [40355,40356]"/>
  <delete-tree tree="visibility [40362,40370]"/>
  <delete-tree tree="return_type_definition [40386,40410]"/>
  <delete-tree tree="function_body [40416,41476]"/>
  <delete-node tree="function_definition [40201,41476]"/>
  <delete-node tree="comment: /// @dev Calculates EIP712 encoding for a hash struct with a given domain hash. [41484,41563]"/>
  <delete-node tree="comment: /// @param eip712DomainHash Hash of the domain domain separator data, computed [41569,41647]"/>
  <delete-node tree="comment: ///                         with getDomainHash(). [41653,41702]"/>
  <delete-node tree="comment: /// @param hashStruct The EIP712 hash struct. [41708,41753]"/>
  <delete-node tree="comment: /// @return EIP712 hash applied to the given EIP712 Domain. [41759,41818]"/>
  <delete-node tree="function: function [41824,41832]"/>
  <delete-node tree="identifier: hashEIP712Message [41833,41850]"/>
  <delete-node tree="(: ( [41850,41851]"/>
  <delete-tree tree="parameter [41851,41875]"/>
  <delete-node tree=",: , [41875,41876]"/>
  <delete-tree tree="parameter [41877,41895]"/>
  <delete-node tree="): ) [41895,41896]"/>
  <delete-tree tree="visibility [41902,41910]"/>
  <delete-tree tree="return_type_definition [41926,41950]"/>
  <delete-tree tree="function_body [41956,42718]"/>
  <delete-node tree="function_definition [41824,42718]"/>
  <delete-node tree="}: } [42720,42721]"/>
  <delete-node tree="contract_body [39522,42721]"/>
  <delete-node tree="library_declaration [39504,42721]"/>
  <delete-node tree="comment: // File: contracts/token/Permittable.sol [48886,48926]"/>
  <delete-node tree="contract: contract [49606,49614]"/>
  <delete-node tree="identifier: Permittable [49615,49626]"/>
  <delete-node tree="is: is [49627,49629]"/>
  <delete-tree tree="inheritance_specifier [49630,49643]"/>
  <delete-node tree=",: , [49643,49644]"/>
  <delete-tree tree="inheritance_specifier [49645,49650]"/>
  <delete-node tree="{: { [49651,49652]"/>
  <delete-tree tree="state_variable_declaration [49658,49696]"/>
  <delete-node tree="comment: // keccak256(&quot;Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)&quot;); [49704,49803]"/>
  <delete-tree tree="state_variable_declaration [49809,49925]"/>
  <delete-tree tree="type_name [49931,49937]"/>
  <delete-node tree="constant: constant [49946,49954]"/>
  <delete-node tree="identifier: EIP712_VERSION [49955,49969]"/>
  <delete-node tree="=: = [49970,49971]"/>
  <delete-tree tree="string_literal [49972,49975]"/>
  <delete-node tree="state_variable_declaration [49931,49976]"/>
  <delete-tree tree="state_variable_declaration [49984,50023]"/>
  <delete-node tree="mapping: mapping [50031,50038]"/>
  <delete-node tree="(: ( [50038,50039]"/>
  <delete-tree tree="primitive_type [50039,50046]"/>
  <delete-node tree="=&gt;: =&gt; [50047,50049]"/>
  <delete-node tree="): ) [50057,50058]"/>
  <delete-node tree="type_name [50031,50058]"/>
  <delete-node tree="identifier: nonces [50059,50065]"/>
  <delete-node tree="state_variable_declaration [50031,50066]"/>
  <delete-node tree="constructor: constructor [50074,50085]"/>
  <delete-node tree="(: ( [50085,50086]"/>
  <delete-node tree="): ) [50086,50087]"/>
  <delete-node tree="public: public [50088,50094]"/>
  <delete-node tree="constructor_definition [50074,50229]"/>
  <delete-node tree="function: function [50237,50245]"/>
  <delete-node tree="identifier: permit [50246,50252]"/>
  <delete-node tree="(: ( [50252,50253]"/>
  <delete-tree tree="parameter [50263,50276]"/>
  <delete-node tree=",: , [50276,50277]"/>
  <delete-tree tree="parameter [50287,50302]"/>
  <delete-node tree=",: , [50302,50303]"/>
  <delete-node tree=",: , [50326,50327]"/>
  <delete-node tree=",: , [50353,50354]"/>
  <delete-tree tree="parameter [50364,50371]"/>
  <delete-node tree=",: , [50371,50372]"/>
  <delete-tree tree="parameter [50382,50391]"/>
  <delete-node tree=",: , [50391,50392]"/>
  <delete-tree tree="parameter [50402,50411]"/>
  <delete-node tree="): ) [50417,50418]"/>
  <delete-node tree="{: { [50428,50429]"/>
  <delete-tree tree="variable_declaration_statement [50439,50760]"/>
  <delete-tree tree="variable_declaration_statement [50772,50819]"/>
  <delete-node tree="(: ( [50963,50964]"/>
  <delete-tree tree="call_argument [50978,51001]"/>
  <delete-node tree=",: , [51001,51002]"/>
  <delete-node tree=",: , [51020,51021]"/>
  <delete-node tree="): ) [51059,51060]"/>
  <delete-node tree="call_expression [50951,51060]"/>
  <delete-node tree="expression_statement [50951,51061]"/>
  <delete-node tree="identifier: _approve [51182,51190]"/>
  <delete-node tree="(: ( [51190,51191]"/>
  <delete-tree tree="call_argument [51191,51196]"/>
  <delete-node tree=",: , [51196,51197]"/>
  <delete-node tree=",: , [51205,51206]"/>
  <delete-node tree="): ) [51212,51213]"/>
  <delete-node tree="call_expression [51182,51213]"/>
  <delete-node tree="expression_statement [51182,51214]"/>
  <delete-node tree="}: } [51220,51221]"/>
  <delete-node tree="function_body [50428,51221]"/>
  <delete-node tree="function_definition [50237,51221]"/>
  <delete-node tree="}: } [51223,51224]"/>
  <delete-node tree="contract_body [49651,51224]"/>
  <delete-node tree="contract_declaration [49606,51224]"/>
  <delete-node tree="comment: // File: contracts/token/Dollar.sol [52155,52190]"/>
  <delete-node tree="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [52194,52852]"/>
  <delete-node tree="contract: contract [52874,52882]"/>
  <delete-node tree="identifier: Dollar [52883,52889]"/>
  <delete-node tree="is: is [52890,52892]"/>
  <delete-tree tree="inheritance_specifier [52893,52900]"/>
  <delete-node tree=",: , [52900,52901]"/>
  <delete-tree tree="inheritance_specifier [52902,52912]"/>
  <delete-node tree=",: , [52912,52913]"/>
  <delete-tree tree="inheritance_specifier [52914,52927]"/>
  <delete-node tree=",: , [52927,52928]"/>
  <delete-tree tree="inheritance_specifier [52929,52940]"/>
  <delete-node tree=",: , [52940,52941]"/>
  <delete-tree tree="inheritance_specifier [52942,52955]"/>
  <delete-node tree="{: { [52957,52958]"/>
  <delete-tree tree="constructor_definition [52966,53066]"/>
  <delete-node tree="function: function [53225,53233]"/>
  <delete-node tree="identifier: transferFrom [53234,53246]"/>
  <delete-node tree="(: ( [53246,53247]"/>
  <delete-tree tree="parameter [53247,53261]"/>
  <delete-node tree=",: , [53261,53262]"/>
  <delete-tree tree="parameter [53263,53280]"/>
  <delete-node tree=",: , [53280,53281]"/>
  <delete-node tree="): ) [53296,53297]"/>
  <delete-tree tree="return_type_definition [53305,53319]"/>
  <delete-node tree="{: { [53320,53321]"/>
  <delete-node tree="identifier: _transfer [53331,53340]"/>
  <delete-node tree="(: ( [53340,53341]"/>
  <delete-node tree=",: , [53347,53348]"/>
  <delete-node tree=",: , [53358,53359]"/>
  <delete-node tree="): ) [53366,53367]"/>
  <delete-node tree="call_expression [53331,53367]"/>
  <delete-node tree="expression_statement [53331,53368]"/>
  <delete-tree tree="return_statement [53639,53651]"/>
  <delete-node tree="}: } [53657,53658]"/>
  <delete-node tree="function_body [53320,53658]"/>
  <delete-node tree="function_definition [53225,53658]"/>
  <delete-node tree="}: } [53660,53661]"/>
  <delete-node tree="contract_body [52957,53661]"/>
  <delete-node tree="contract_declaration [52874,53661]"/>
  <delete-node tree="comment: // File: @uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol [53665,53733]"/>
  <delete-node tree="interface: interface [53739,53748]"/>
  <delete-node tree="identifier: IUniswapV2Factory [53749,53766]"/>
  <delete-node tree="{: { [53767,53768]"/>
  <delete-tree tree="function_definition [53868,53917]"/>
  <delete-tree tree="function_definition [53923,53978]"/>
  <delete-tree tree="function_definition [53986,54072]"/>
  <delete-tree tree="function_definition [54078,54139]"/>
  <delete-tree tree="function_definition [54145,54200]"/>
  <delete-tree tree="function_definition [54208,54292]"/>
  <delete-tree tree="function_definition [54300,54336]"/>
  <delete-tree tree="function_definition [54342,54384]"/>
  <delete-node tree="}: } [54386,54387]"/>
  <delete-node tree="contract_body [53767,54387]"/>
  <delete-node tree="interface_declaration [53739,54387]"/>
  <delete-node tree="comment: // File: @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol [54391,54456]"/>
  <delete-node tree="comment: // File: @uniswap/lib/contracts/libraries/Babylonian.sol [56914,56970]"/>
  <delete-node tree="comment: // computes square roots using the babylonian method [56978,57030]"/>
  <delete-node tree="comment: // https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method [57032,57116]"/>
  <delete-node tree="library: library [57118,57125]"/>
  <delete-node tree="identifier: Babylonian [57126,57136]"/>
  <delete-node tree="{: { [57137,57138]"/>
  <delete-node tree="function: function [57144,57152]"/>
  <delete-node tree="identifier: sqrt [57153,57157]"/>
  <delete-node tree="(: ( [57157,57158]"/>
  <delete-tree tree="parameter [57158,57164]"/>
  <delete-node tree="): ) [57164,57165]"/>
  <delete-tree tree="visibility [57166,57174]"/>
  <delete-tree tree="return_type_definition [57180,57196]"/>
  <delete-tree tree="function_body [57197,57470]"/>
  <delete-node tree="function_definition [57144,57470]"/>
  <delete-node tree="}: } [57472,57473]"/>
  <delete-node tree="contract_body [57137,57473]"/>
  <delete-node tree="library_declaration [57118,57473]"/>
  <delete-node tree="comment: // File: @uniswap/lib/contracts/libraries/FixedPoint.sol [57477,57533]"/>
  <delete-node tree="comment: // a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format)) [57543,57645]"/>
  <delete-node tree="library: library [57647,57654]"/>
  <delete-node tree="identifier: FixedPoint [57655,57665]"/>
  <delete-node tree="{: { [57666,57667]"/>
  <delete-node tree="comment: // range: [0, 2**112 - 1] [57673,57698]"/>
  <delete-node tree="comment: // resolution: 1 / 2**112 [57704,57729]"/>
  <delete-tree tree="struct_declaration [57735,57781]"/>
  <delete-node tree="comment: // range: [0, 2**144 - 1] [57789,57814]"/>
  <delete-node tree="comment: // resolution: 1 / 2**112 [57820,57845]"/>
  <delete-tree tree="struct_declaration [57851,57894]"/>
  <delete-tree tree="state_variable_declaration [57902,57942]"/>
  <delete-tree tree="type_name [57948,57952]"/>
  <delete-tree tree="visibility [57953,57960]"/>
  <delete-node tree="constant: constant [57961,57969]"/>
  <delete-node tree="identifier: Q112 [57970,57974]"/>
  <delete-node tree="=: = [57975,57976]"/>
  <delete-tree tree="primitive_type [57977,57981]"/>
  <delete-node tree="(: ( [57981,57982]"/>
  <delete-node tree="): ) [57983,57984]"/>
  <delete-node tree="type_cast_expression [57977,57984]"/>
  <delete-node tree="&lt;&lt;: &lt;&lt; [57985,57987]"/>
  <delete-node tree="identifier: RESOLUTION [57988,57998]"/>
  <delete-node tree="binary_expression [57977,57998]"/>
  <delete-node tree="state_variable_declaration [57948,57999]"/>
  <delete-tree tree="state_variable_declaration [58005,58053]"/>
  <delete-node tree="comment: // encode a uint112 as a UQ112x112 [58061,58095]"/>
  <delete-node tree="function: function [58101,58109]"/>
  <delete-node tree="identifier: encode [58110,58116]"/>
  <delete-node tree="(: ( [58116,58117]"/>
  <delete-tree tree="parameter [58117,58126]"/>
  <delete-node tree="): ) [58126,58127]"/>
  <delete-tree tree="visibility [58128,58136]"/>
  <delete-tree tree="return_type_definition [58142,58168]"/>
  <delete-tree tree="function_body [58169,58230]"/>
  <delete-node tree="function_definition [58101,58230]"/>
  <delete-node tree="comment: // encodes a uint144 as a UQ144x112 [58238,58273]"/>
  <delete-tree tree="function_definition [58279,58411]"/>
  <delete-node tree="comment: // divide a UQ112x112 by a uint112, returning a UQ112x112 [58419,58476]"/>
  <delete-tree tree="function_definition [58482,58680]"/>
  <delete-node tree="comment: // multiply a UQ112x112 by a uint, returning a UQ144x112 [58688,58744]"/>
  <delete-node tree="comment: // reverts on overflow [58750,58772]"/>
  <delete-node tree="function: function [58778,58786]"/>
  <delete-node tree="identifier: mul [58787,58790]"/>
  <delete-node tree="(: ( [58790,58791]"/>
  <delete-tree tree="parameter [58791,58812]"/>
  <delete-node tree=",: , [58812,58813]"/>
  <delete-tree tree="parameter [58814,58820]"/>
  <delete-node tree="): ) [58820,58821]"/>
  <delete-tree tree="visibility [58822,58830]"/>
  <delete-tree tree="state_mutability [58831,58835]"/>
  <delete-tree tree="return_type_definition [58836,58862]"/>
  <delete-node tree="{: { [58863,58864]"/>
  <delete-tree tree="variable_declaration_statement [58874,58881]"/>
  <delete-node tree="identifier: require [58891,58898]"/>
  <delete-node tree="(: ( [58898,58899]"/>
  <delete-tree tree="call_argument [58899,58953]"/>
  <delete-node tree=",: , [58953,58954]"/>
  <delete-node tree="): ) [58992,58993]"/>
  <delete-node tree="call_expression [58891,58993]"/>
  <delete-node tree="expression_statement [58891,58994]"/>
  <delete-tree tree="return_statement [59004,59024]"/>
  <delete-node tree="}: } [59030,59031]"/>
  <delete-node tree="function_body [58863,59031]"/>
  <delete-node tree="function_definition [58778,59031]"/>
  <delete-node tree="comment: // returns a UQ112x112 which represents the ratio of the numerator to the denominator [59039,59124]"/>
  <delete-node tree="comment: // equivalent to encode(numerator).div(denominator) [59130,59181]"/>
  <delete-node tree="function: function [59187,59195]"/>
  <delete-node tree="identifier: fraction [59196,59204]"/>
  <delete-node tree="(: ( [59204,59205]"/>
  <delete-tree tree="parameter [59205,59222]"/>
  <delete-node tree=",: , [59222,59223]"/>
  <delete-tree tree="parameter [59224,59243]"/>
  <delete-node tree="): ) [59243,59244]"/>
  <delete-tree tree="visibility [59245,59253]"/>
  <delete-tree tree="state_mutability [59254,59258]"/>
  <delete-tree tree="return_type_definition [59259,59285]"/>
  <delete-node tree="{: { [59286,59287]"/>
  <delete-tree tree="return_statement [59359,59426]"/>
  <delete-node tree="}: } [59432,59433]"/>
  <delete-node tree="function_body [59286,59433]"/>
  <delete-node tree="function_definition [59187,59433]"/>
  <delete-node tree="comment: // decode a UQ112x112 into a uint112 by truncating after the radix point [59441,59513]"/>
  <delete-tree tree="function_definition [59519,59646]"/>
  <delete-node tree="comment: // decode a UQ144x112 into a uint144 by truncating after the radix point [59654,59726]"/>
  <delete-tree tree="function_definition [59732,59862]"/>
  <delete-node tree="comment: // take the reciprocal of a UQ112x112 [59870,59907]"/>
  <delete-tree tree="function_definition [59913,60120]"/>
  <delete-node tree="comment: // square root of a UQ112x112 [60128,60157]"/>
  <delete-tree tree="function_definition [60163,60326]"/>
  <delete-node tree="}: } [60328,60329]"/>
  <delete-node tree="contract_body [57666,60329]"/>
  <delete-node tree="library_declaration [57647,60329]"/>
  <delete-node tree="comment: // File: contracts/external/UniswapV2OracleLibrary.sol [60333,60387]"/>
  <delete-node tree="comment: // library with helper methods for oracles that are concerned with computing average prices [60399,60490]"/>
  <delete-node tree="library: library [60492,60499]"/>
  <delete-node tree="identifier: UniswapV2OracleLibrary [60500,60522]"/>
  <delete-node tree="{: { [60523,60524]"/>
  <delete-tree tree="using_directive [60530,60553]"/>
  <delete-node tree="comment: // helper function that returns the current block timestamp within the range of uint32, i.e. [0, 2**32 - 1] [60561,60668]"/>
  <delete-node tree="function: function [60674,60682]"/>
  <delete-node tree="identifier: currentBlockTimestamp [60683,60704]"/>
  <delete-node tree="(: ( [60704,60705]"/>
  <delete-node tree="): ) [60705,60706]"/>
  <delete-tree tree="visibility [60707,60715]"/>
  <delete-tree tree="state_mutability [60716,60720]"/>
  <delete-tree tree="return_type_definition [60721,60737]"/>
  <delete-node tree="{: { [60738,60739]"/>
  <delete-node tree="return: return [60749,60755]"/>
  <delete-tree tree="primitive_type [60756,60762]"/>
  <delete-node tree="(: ( [60762,60763]"/>
  <delete-node tree="): ) [60788,60789]"/>
  <delete-node tree="type_cast_expression [60756,60789]"/>
  <delete-node tree="return_statement [60749,60790]"/>
  <delete-node tree="}: } [60796,60797]"/>
  <delete-node tree="function_body [60738,60797]"/>
  <delete-node tree="function_definition [60674,60797]"/>
  <delete-node tree="comment: // produces the cumulative price using counterfactuals to save gas and avoid a call to sync. [60805,60897]"/>
  <delete-tree tree="function_definition [60903,61960]"/>
  <delete-node tree="}: } [61962,61963]"/>
  <delete-node tree="contract_body [60523,61963]"/>
  <delete-node tree="library_declaration [60492,61963]"/>
  <delete-node tree="comment: // File: contracts/external/UniswapV2Library.sol [61967,62015]"/>
  <delete-tree tree="library_declaration [62027,63997]"/>
  <delete-node tree="comment: // File: contracts/oracle/IUSDC.sol [64889,64924]"/>
  <delete-node tree="contract: contract [65594,65602]"/>
  <delete-node tree="identifier: IUSDC [65603,65608]"/>
  <delete-node tree="{: { [65609,65610]"/>
  <delete-node tree="function: function [65616,65624]"/>
  <delete-node tree="identifier: isBlacklisted [65625,65638]"/>
  <delete-node tree="(: ( [65638,65639]"/>
  <delete-node tree="): ) [65655,65656]"/>
  <delete-node tree="function_definition [65616,65686]"/>
  <delete-node tree="}: } [65688,65689]"/>
  <delete-node tree="contract_body [65609,65689]"/>
  <delete-node tree="contract_declaration [65594,65689]"/>
  <delete-node tree="comment: // File: contracts/oracle/Oracle.sol [65693,65729]"/>
  <delete-node tree="comment: // File: contracts/oracle/IDAO.sol [70554,70588]"/>
  <delete-node tree="contract: contract [71258,71266]"/>
  <delete-node tree="identifier: IDAO [71267,71271]"/>
  <delete-node tree="{: { [71272,71273]"/>
  <delete-node tree="function: function [71279,71287]"/>
  <delete-node tree="identifier: epoch [71288,71293]"/>
  <delete-node tree="(: ( [71293,71294]"/>
  <delete-node tree="): ) [71294,71295]"/>
  <delete-tree tree="state_mutability [71305,71309]"/>
  <delete-tree tree="return_type_definition [71310,71327]"/>
  <delete-node tree="function_definition [71279,71328]"/>
  <delete-node tree="}: } [71330,71331]"/>
  <delete-node tree="contract_body [71272,71331]"/>
  <delete-node tree="contract_declaration [71258,71331]"/>
  <delete-node tree="comment: // File: contracts/oracle/PoolState.sol [71335,71374]"/>
  <delete-tree tree="visibility [53121,53127]"/>
  <delete-tree tree="modifier_invocation [53128,53138]"/>
  <delete-tree tree="return_type_definition [53139,53153]"/>
  <delete-node tree="identifier: _mint [53165,53170]"/>
  <delete-tree tree="return_statement [53198,53210]"/>
  <delete-node tree="identifier: hashEIP712Domain [50142,50158]"/>
  <delete-tree tree="call_argument [50159,50165]"/>
  <delete-tree tree="call_argument [50167,50181]"/>
  <delete-tree tree="call_argument [50183,50205]"/>
  <delete-node tree=",: , [50205,50206]"/>
  <delete-node tree="identifier: EIP712_DOMAIN_SEPARATOR [50106,50129]"/>
  <delete-node tree="=: = [50130,50131]"/>
  <delete-node tree="assignment_expression [50106,50221]"/>
  <delete-tree tree="call_argument [51100,51115]"/>
  <delete-node tree=",: , [51134,51135]"/>
  <delete-tree tree="parameter [24214,24229]"/>
  <delete-tree tree="visibility [24247,24253]"/>
  <delete-node tree="identifier: _burnFrom [24265,24274]"/>
  <delete-tree tree="member_expression [20939,20960]"/>
  <delete-tree tree="array_access [20919,20936]"/>
  <delete-node tree="=: = [20937,20938]"/>
  <delete-node tree="assignment_expression [20919,21010]"/>
  <delete-tree tree="parameter [21431,21446]"/>
  <delete-node tree=",: , [21446,21447]"/>
  <delete-tree tree="call_argument [21492,21513]"/>
  <delete-node tree="identifier: _totalSupply [21562,21574]"/>
  <delete-node tree="=: = [21575,21576]"/>
  <delete-tree tree="member_expression [21577,21593]"/>
  <delete-node tree="(: ( [21593,21594]"/>
  <delete-node tree="): ) [21600,21601]"/>
  <delete-node tree="call_expression [21577,21601]"/>
  <delete-node tree="assignment_expression [21562,21601]"/>
  <delete-node tree="expression_statement [21562,21602]"/>
  <delete-tree tree="array_access [21612,21630]"/>
  <delete-node tree="=: = [21631,21632]"/>
  <delete-tree tree="member_expression [21633,21655]"/>
  <delete-node tree="(: ( [21655,21656]"/>
  <delete-node tree="): ) [21662,21663]"/>
  <delete-node tree="call_expression [21633,21663]"/>
  <delete-node tree="assignment_expression [21612,21663]"/>
  <delete-node tree="expression_statement [21612,21664]"/>
  <delete-node tree="emit: emit [21674,21678]"/>
  <delete-node tree="identifier: Transfer [21679,21687]"/>
  <delete-node tree="(: ( [21687,21688]"/>
  <delete-tree tree="call_argument [21688,21698]"/>
  <delete-node tree=",: , [21698,21699]"/>
  <delete-tree tree="call_argument [21700,21707]"/>
  <delete-node tree=",: , [21707,21708]"/>
  <delete-node tree="): ) [21715,21716]"/>
  <delete-node tree="emit_statement [21674,21717]"/>
  <delete-tree tree="visibility [74510,74516]"/>
  <delete-tree tree="state_mutability [74517,74521]"/>
  <delete-tree tree="return_type_definition [74522,74539]"/>
  <delete-tree tree="call_expression [74596,74612]"/>
  <delete-node tree="&gt;=: &gt;= [86982,86984]"/>
  <delete-node tree="binary_expression [86949,86998]"/>
  <delete-node tree="return: return [74551,74557]"/>
  <delete-node tree="return_statement [74551,74614]"/>
  <delete-tree tree="call_argument [81229,81233]"/>
  <delete-node tree="contract: contract [72054,72062]"/>
  <delete-node tree="identifier: PoolAccount [72063,72074]"/>
  <delete-node tree="{: { [72075,72076]"/>
  <delete-tree tree="enum_declaration [72082,72151]"/>
  <delete-node tree="struct: struct [72159,72165]"/>
  <delete-node tree="identifier: State [72166,72171]"/>
  <delete-node tree="{: { [72172,72173]"/>
  <delete-node tree="identifier: staged [72191,72197]"/>
  <delete-node tree="struct_member [72183,72198]"/>
  <delete-node tree="identifier: claimable [72216,72225]"/>
  <delete-node tree="struct_member [72208,72226]"/>
  <delete-node tree="identifier: bonded [72244,72250]"/>
  <delete-node tree="struct_member [72236,72251]"/>
  <delete-node tree="identifier: phantom [72269,72276]"/>
  <delete-node tree="struct_member [72261,72277]"/>
  <delete-node tree="identifier: fluidUntil [72295,72305]"/>
  <delete-node tree="struct_member [72287,72306]"/>
  <delete-node tree="}: } [72312,72313]"/>
  <delete-node tree="struct_declaration [72159,72313]"/>
  <delete-node tree="}: } [72315,72316]"/>
  <delete-node tree="contract_body [72075,72316]"/>
  <delete-node tree="contract_declaration [72054,72316]"/>
  <delete-node tree="contract: contract [72320,72328]"/>
  <delete-node tree="identifier: PoolStorage [72329,72340]"/>
  <delete-node tree="{: { [72341,72342]"/>
  <delete-tree tree="struct_declaration [72348,72439]"/>
  <delete-node tree="struct: struct [72451,72457]"/>
  <delete-node tree="identifier: Balance [72458,72465]"/>
  <delete-node tree="{: { [72466,72467]"/>
  <delete-node tree="identifier: staged [72485,72491]"/>
  <delete-node tree="struct_member [72477,72492]"/>
  <delete-node tree="identifier: claimable [72510,72519]"/>
  <delete-node tree="struct_member [72502,72520]"/>
  <delete-node tree="identifier: bonded [72538,72544]"/>
  <delete-node tree="struct_member [72530,72545]"/>
  <delete-node tree="identifier: phantom [72563,72570]"/>
  <delete-node tree="struct_member [72555,72571]"/>
  <delete-node tree="}: } [72577,72578]"/>
  <delete-node tree="struct_declaration [72451,72578]"/>
  <delete-tree tree="struct_declaration [72586,72744]"/>
  <delete-node tree="}: } [72746,72747]"/>
  <delete-node tree="contract_body [72341,72747]"/>
  <delete-node tree="contract_declaration [72320,72747]"/>
  <delete-tree tree="contract_declaration [72751,72805]"/>
  <delete-node tree="comment: // File: contracts/oracle/PoolGetters.sol [72809,72850]"/>
  <delete-node tree="uint: uint [53854,53858]"/>
  <delete-tree tree="parameter [79628,79643]"/>
  <delete-tree tree="member_expression [79665,79700]"/>
  <delete-node tree="=: = [79701,79702]"/>
  <delete-node tree="assignment_expression [79665,79751]"/>
  <delete-node tree="identifier: newUniv2 [86183,86191]"/>
  <delete-node tree="variable_declaration [86175,86191]"/>
  <delete-tree tree="call_expression [86195,86214]"/>
  <delete-node tree="identifier: _reserve [70372,70380]"/>
  <delete-tree tree="member_expression [22225,22247]"/>
  <delete-tree tree="array_access [22204,22222]"/>
  <delete-node tree="=: = [22223,22224]"/>
  <delete-node tree="assignment_expression [22204,22293]"/>
  <delete-node tree="==: == [50866,50868]"/>
  <delete-node tree="identifier: owner [50869,50874]"/>
  <delete-tree tree="call_argument [86457,86465]"/>
  <delete-tree tree="call_argument [22938,22957]"/>
  <delete-tree tree="call_expression [86515,86546]"/>
  <delete-node tree="mapping: mapping [16657,16664]"/>
  <delete-node tree="(: ( [16665,16666]"/>
  <delete-tree tree="primitive_type [16666,16673]"/>
  <delete-node tree="=&gt;: =&gt; [16674,16676]"/>
  <delete-node tree="): ) [16684,16685]"/>
  <delete-node tree="type_name [16657,16685]"/>
  <delete-node tree="identifier: _balances [16694,16703]"/>
  <delete-node tree="state_variable_declaration [16657,16704]"/>
  <delete-node tree="mapping: mapping [16712,16719]"/>
  <delete-node tree="(: ( [16720,16721]"/>
  <delete-tree tree="primitive_type [16721,16728]"/>
  <delete-node tree="=&gt;: =&gt; [16729,16731]"/>
  <delete-node tree="mapping: mapping [16732,16739]"/>
  <delete-node tree="(: ( [16740,16741]"/>
  <delete-tree tree="primitive_type [16741,16748]"/>
  <delete-node tree="=&gt;: =&gt; [16749,16751]"/>
  <delete-node tree="): ) [16759,16760]"/>
  <delete-node tree="type_name [16732,16760]"/>
  <delete-node tree="): ) [16760,16761]"/>
  <delete-node tree="type_name [16712,16761]"/>
  <delete-node tree="identifier: _allowances [16770,16781]"/>
  <delete-node tree="state_variable_declaration [16712,16782]"/>
  <delete-node tree="identifier: _totalSupply [16806,16818]"/>
  <delete-node tree="state_variable_declaration [16790,16819]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-totalSupply}.      */ [16827,16878]"/>
  <delete-node tree="function: function [16884,16892]"/>
  <delete-node tree="identifier: totalSupply [16893,16904]"/>
  <delete-node tree="(: ( [16904,16905]"/>
  <delete-node tree="): ) [16905,16906]"/>
  <delete-tree tree="visibility [16907,16913]"/>
  <delete-tree tree="state_mutability [16914,16918]"/>
  <delete-tree tree="function_body [16937,16975]"/>
  <delete-node tree="function_definition [16884,16975]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-balanceOf}.      */ [16983,17032]"/>
  <delete-node tree="function: function [17038,17046]"/>
  <delete-node tree="identifier: balanceOf [17047,17056]"/>
  <delete-node tree="(: ( [17056,17057]"/>
  <delete-tree tree="parameter [17057,17072]"/>
  <delete-node tree="): ) [17072,17073]"/>
  <delete-tree tree="visibility [17074,17080]"/>
  <delete-tree tree="state_mutability [17081,17085]"/>
  <delete-tree tree="function_body [17104,17148]"/>
  <delete-node tree="function_definition [17038,17148]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-transfer}.      *      * Requirements:      *      * - `recipient` cannot be the zero address.      * - the caller must have a balance of at least `amount`.      */ [17156,17355]"/>
  <delete-node tree="function: function [17361,17369]"/>
  <delete-node tree="identifier: transfer [17370,17378]"/>
  <delete-node tree="(: ( [17378,17379]"/>
  <delete-tree tree="parameter [17379,17396]"/>
  <delete-node tree=",: , [17396,17397]"/>
  <delete-node tree="): ) [17412,17413]"/>
  <delete-tree tree="visibility [17414,17420]"/>
  <delete-tree tree="return_type_definition [17421,17435]"/>
  <delete-node tree="{: { [17436,17437]"/>
  <delete-node tree="identifier: _transfer [17447,17456]"/>
  <delete-node tree="(: ( [17456,17457]"/>
  <delete-tree tree="call_argument [17457,17469]"/>
  <delete-node tree=",: , [17469,17470]"/>
  <delete-tree tree="call_argument [17471,17480]"/>
  <delete-node tree=",: , [17480,17481]"/>
  <delete-node tree="): ) [17488,17489]"/>
  <delete-node tree="call_expression [17447,17489]"/>
  <delete-node tree="expression_statement [17447,17490]"/>
  <delete-tree tree="return_statement [17500,17512]"/>
  <delete-node tree="}: } [17518,17519]"/>
  <delete-node tree="function_body [17436,17519]"/>
  <delete-node tree="function_definition [17361,17519]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-allowance}.      */ [17527,17576]"/>
  <delete-node tree="function: function [17582,17590]"/>
  <delete-node tree="identifier: allowance [17591,17600]"/>
  <delete-node tree="(: ( [17600,17601]"/>
  <delete-tree tree="parameter [17601,17614]"/>
  <delete-node tree=",: , [17614,17615]"/>
  <delete-tree tree="parameter [17616,17631]"/>
  <delete-node tree="): ) [17631,17632]"/>
  <delete-tree tree="visibility [17633,17639]"/>
  <delete-tree tree="state_mutability [17640,17644]"/>
  <delete-tree tree="function_body [17663,17716]"/>
  <delete-node tree="function_definition [17582,17716]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-approve}.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [17724,17857]"/>
  <delete-node tree="function: function [17863,17871]"/>
  <delete-node tree="identifier: approve [17872,17879]"/>
  <delete-node tree="(: ( [17879,17880]"/>
  <delete-tree tree="parameter [17880,17895]"/>
  <delete-node tree=",: , [17895,17896]"/>
  <delete-node tree="): ) [17911,17912]"/>
  <delete-tree tree="visibility [17913,17919]"/>
  <delete-tree tree="return_type_definition [17920,17934]"/>
  <delete-node tree="{: { [17935,17936]"/>
  <delete-node tree="identifier: _approve [17946,17954]"/>
  <delete-node tree="(: ( [17954,17955]"/>
  <delete-tree tree="call_argument [17955,17967]"/>
  <delete-node tree=",: , [17967,17968]"/>
  <delete-tree tree="call_argument [17969,17976]"/>
  <delete-node tree=",: , [17976,17977]"/>
  <delete-node tree="): ) [17984,17985]"/>
  <delete-node tree="call_expression [17946,17985]"/>
  <delete-node tree="expression_statement [17946,17986]"/>
  <delete-tree tree="return_statement [17996,18008]"/>
  <delete-node tree="}: } [18014,18015]"/>
  <delete-node tree="function_body [17935,18015]"/>
  <delete-node tree="function_definition [17863,18015]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-transferFrom}.      *      * Emits an {Approval} event indicating the updated allowance. This is not      * required by the EIP. See the note at the beginning of {ERC20};      *      * Requirements:      * - `sender` and `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      * - the caller must have allowance for `sender`'s tokens of at least      * `amount`.      */ [18023,18481]"/>
  <delete-node tree="function: function [18487,18495]"/>
  <delete-node tree="identifier: transferFrom [18496,18508]"/>
  <delete-node tree="(: ( [18508,18509]"/>
  <delete-tree tree="parameter [18509,18523]"/>
  <delete-node tree=",: , [18523,18524]"/>
  <delete-tree tree="parameter [18525,18542]"/>
  <delete-node tree=",: , [18542,18543]"/>
  <delete-node tree="): ) [18558,18559]"/>
  <delete-tree tree="visibility [18560,18566]"/>
  <delete-tree tree="return_type_definition [18567,18581]"/>
  <delete-node tree="{: { [18582,18583]"/>
  <delete-node tree="identifier: _transfer [18593,18602]"/>
  <delete-node tree="(: ( [18602,18603]"/>
  <delete-tree tree="call_argument [18603,18609]"/>
  <delete-node tree=",: , [18609,18610]"/>
  <delete-tree tree="call_argument [18611,18620]"/>
  <delete-node tree=",: , [18620,18621]"/>
  <delete-node tree="): ) [18628,18629]"/>
  <delete-node tree="call_expression [18593,18629]"/>
  <delete-node tree="expression_statement [18593,18630]"/>
  <delete-node tree="identifier: _approve [18640,18648]"/>
  <delete-node tree="(: ( [18648,18649]"/>
  <delete-tree tree="call_argument [18649,18655]"/>
  <delete-node tree=",: , [18655,18656]"/>
  <delete-tree tree="call_argument [18657,18669]"/>
  <delete-node tree=",: , [18669,18670]"/>
  <delete-tree tree="member_expression [18671,18708]"/>
  <delete-node tree="(: ( [18708,18709]"/>
  <delete-node tree=",: , [18715,18716]"/>
  <delete-node tree="): ) [18759,18760]"/>
  <delete-node tree="call_expression [18671,18760]"/>
  <delete-node tree="call_argument [18671,18760]"/>
  <delete-node tree="): ) [18760,18761]"/>
  <delete-node tree="call_expression [18640,18761]"/>
  <delete-node tree="expression_statement [18640,18762]"/>
  <delete-tree tree="return_statement [18772,18784]"/>
  <delete-node tree="}: } [18790,18791]"/>
  <delete-node tree="function_body [18582,18791]"/>
  <delete-node tree="function_definition [18487,18791]"/>
  <delete-node tree="comment: /**      * @dev Atomically increases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [18799,19194]"/>
  <delete-node tree="function: function [19200,19208]"/>
  <delete-node tree="identifier: increaseAllowance [19209,19226]"/>
  <delete-node tree="(: ( [19226,19227]"/>
  <delete-tree tree="parameter [19227,19242]"/>
  <delete-node tree=",: , [19242,19243]"/>
  <delete-node tree="): ) [19262,19263]"/>
  <delete-tree tree="visibility [19264,19270]"/>
  <delete-tree tree="return_type_definition [19271,19285]"/>
  <delete-tree tree="function_body [19286,19410]"/>
  <delete-node tree="function_definition [19200,19410]"/>
  <delete-node tree="comment: /**      * @dev Atomically decreases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `spender` must have allowance for the caller of at least      * `subtractedValue`.      */ [19418,19907]"/>
  <delete-node tree="function: function [19913,19921]"/>
  <delete-node tree="identifier: decreaseAllowance [19922,19939]"/>
  <delete-node tree="(: ( [19939,19940]"/>
  <delete-tree tree="parameter [19940,19955]"/>
  <delete-node tree=",: , [19955,19956]"/>
  <delete-node tree="): ) [19980,19981]"/>
  <delete-tree tree="visibility [19982,19988]"/>
  <delete-tree tree="return_type_definition [19989,20003]"/>
  <delete-node tree="{: { [20004,20005]"/>
  <delete-node tree="identifier: _approve [20015,20023]"/>
  <delete-node tree="(: ( [20023,20024]"/>
  <delete-tree tree="call_argument [20024,20036]"/>
  <delete-node tree=",: , [20036,20037]"/>
  <delete-tree tree="call_argument [20038,20045]"/>
  <delete-node tree=",: , [20045,20046]"/>
  <delete-tree tree="member_expression [20047,20085]"/>
  <delete-node tree="(: ( [20085,20086]"/>
  <delete-tree tree="call_argument [20086,20101]"/>
  <delete-node tree=",: , [20101,20102]"/>
  <delete-node tree="): ) [20142,20143]"/>
  <delete-node tree="call_expression [20047,20143]"/>
  <delete-node tree="call_argument [20047,20143]"/>
  <delete-node tree="): ) [20143,20144]"/>
  <delete-node tree="call_expression [20015,20144]"/>
  <delete-node tree="expression_statement [20015,20145]"/>
  <delete-tree tree="return_statement [20155,20167]"/>
  <delete-node tree="}: } [20173,20174]"/>
  <delete-node tree="function_body [20004,20174]"/>
  <delete-node tree="function_definition [19913,20174]"/>
  <delete-node tree="comment: /**      * @dev Moves tokens `amount` from `sender` to `recipient`.      *      * This is internal function is equivalent to {transfer}, and can be used to      * e.g. implement automatic token fees, slashing mechanisms, etc.      *      * Emits a {Transfer} event.      *      * Requirements:      *      * - `sender` cannot be the zero address.      * - `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      */ [20182,20658]"/>
  <delete-node tree="comment: /** @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      *      * Emits a {Transfer} event with `from` set to the zero address.      *      * Requirements      *      * - `to` cannot be the zero address.      */ [21143,21410]"/>
  <delete-node tree="comment: /**      * @dev Destroys `amount` tokens from `account`, reducing the      * total supply.      *      * Emits a {Transfer} event with `to` set to the zero address.      *      * Requirements      *      * - `account` cannot be the zero address.      * - `account` must have at least `amount` tokens.      */ [21732,22050]"/>
  <delete-node tree="function: function [22056,22064]"/>
  <delete-node tree="identifier: _burn [22065,22070]"/>
  <delete-node tree="(: ( [22070,22071]"/>
  <delete-tree tree="parameter [22071,22086]"/>
  <delete-node tree=",: , [22086,22087]"/>
  <delete-node tree="): ) [22102,22103]"/>
  <delete-tree tree="visibility [22104,22112]"/>
  <delete-node tree="{: { [22113,22114]"/>
  <delete-node tree="identifier: require [22124,22131]"/>
  <delete-node tree="(: ( [22131,22132]"/>
  <delete-tree tree="call_argument [22132,22153]"/>
  <delete-node tree=",: , [22153,22154]"/>
  <delete-node tree="): ) [22190,22191]"/>
  <delete-node tree="call_expression [22124,22191]"/>
  <delete-node tree="expression_statement [22124,22192]"/>
  <delete-node tree="identifier: _totalSupply [22304,22316]"/>
  <delete-node tree="=: = [22317,22318]"/>
  <delete-tree tree="member_expression [22319,22335]"/>
  <delete-node tree="(: ( [22335,22336]"/>
  <delete-node tree="): ) [22342,22343]"/>
  <delete-node tree="call_expression [22319,22343]"/>
  <delete-node tree="assignment_expression [22304,22343]"/>
  <delete-node tree="expression_statement [22304,22344]"/>
  <delete-tree tree="emit_statement [22354,22397]"/>
  <delete-node tree="}: } [22403,22404]"/>
  <delete-node tree="function_body [22113,22404]"/>
  <delete-node tree="function_definition [22056,22404]"/>
  <delete-node tree="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.      *      * This is internal function is equivalent to `approve`, and can be used to      * e.g. set automatic allowances for certain subsystems, etc.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `owner` cannot be the zero address.      * - `spender` cannot be the zero address.      */ [22412,22838]"/>
  <delete-tree tree="parameter [22862,22875]"/>
  <delete-node tree=",: , [22892,22893]"/>
  <delete-tree tree="visibility [22910,22918]"/>
  <delete-tree tree="assignment_expression [23090,23126]"/>
  <delete-tree tree="call_argument [23151,23156]"/>
  <delete-tree tree="call_argument [23167,23173]"/>
  <delete-tree tree="call_expression [53400,53412]"/>
  <delete-tree tree="member_expression [53528,53563]"/>
  <delete-node tree="identifier: _approve [53445,53453]"/>
  <delete-node tree="(: ( [53453,53454]"/>
  <delete-node tree=",: , [53478,53479]"/>
  <delete-tree tree="call_argument [53497,53509]"/>
  <delete-node tree=",: , [53509,53510]"/>
  <delete-node tree="call_argument [53528,53616]"/>
  <delete-node tree="): ) [53616,53617]"/>
  <delete-node tree="call_expression [53445,53617]"/>
  <delete-tree tree="array_access [21021,21041]"/>
  <delete-node tree="=: = [21042,21043]"/>
  <delete-tree tree="member_expression [21044,21068]"/>
  <delete-node tree="(: ( [21068,21069]"/>
  <delete-node tree="): ) [21075,21076]"/>
  <delete-node tree="call_expression [21044,21076]"/>
  <delete-node tree="assignment_expression [21021,21076]"/>
  <delete-node tree="expression_statement [21021,21077]"/>
  <delete-node tree="comment: /**      * @dev Destroys `amount` tokens from `account`.`amount` is then deducted      * from the caller's allowance.      *      * See {_burn} and {_approve}.      */ [23190,23362]"/>
  <delete-node tree="function: function [23368,23376]"/>
  <delete-node tree="identifier: _burnFrom [23377,23386]"/>
  <delete-node tree="(: ( [23386,23387]"/>
  <delete-tree tree="parameter [23387,23402]"/>
  <delete-node tree=",: , [23402,23403]"/>
  <delete-node tree="): ) [23418,23419]"/>
  <delete-node tree="{: { [23429,23430]"/>
  <delete-node tree="identifier: _burn [23440,23445]"/>
  <delete-node tree="(: ( [23445,23446]"/>
  <delete-tree tree="call_argument [23446,23453]"/>
  <delete-node tree=",: , [23453,23454]"/>
  <delete-node tree="): ) [23461,23462]"/>
  <delete-node tree="call_expression [23440,23462]"/>
  <delete-node tree="expression_statement [23440,23463]"/>
  <delete-node tree="identifier: _approve [23473,23481]"/>
  <delete-node tree="(: ( [23481,23482]"/>
  <delete-tree tree="call_argument [23482,23489]"/>
  <delete-node tree=",: , [23489,23490]"/>
  <delete-tree tree="call_argument [23491,23503]"/>
  <delete-node tree=",: , [23503,23504]"/>
  <delete-tree tree="member_expression [23505,23543]"/>
  <delete-node tree="(: ( [23543,23544]"/>
  <delete-node tree=",: , [23550,23551]"/>
  <delete-node tree="): ) [23590,23591]"/>
  <delete-node tree="call_expression [23505,23591]"/>
  <delete-node tree="call_argument [23505,23591]"/>
  <delete-node tree="): ) [23591,23592]"/>
  <delete-node tree="call_expression [23473,23592]"/>
  <delete-node tree="expression_statement [23473,23593]"/>
  <delete-node tree="}: } [23599,23600]"/>
  <delete-node tree="function_body [23429,23600]"/>
  <delete-node tree="function_definition [23368,23600]"/>
  <delete-node tree="contract: contract [73528,73536]"/>
  <delete-node tree="identifier: PoolGetters [73537,73548]"/>
  <delete-node tree="is: is [73549,73551]"/>
  <delete-tree tree="inheritance_specifier [73552,73561]"/>
  <delete-node tree="{: { [73562,73563]"/>
  <delete-node tree="comment: /**      * Global      */ [73604,73631]"/>
  <delete-tree tree="function_definition [73639,73737]"/>
  <delete-tree tree="function_definition [73745,73832]"/>
  <delete-tree tree="function_definition [73840,73936]"/>
  <delete-tree tree="function_definition [73944,74037]"/>
  <delete-tree tree="function_definition [74045,74145]"/>
  <delete-tree tree="function_definition [74153,74253]"/>
  <delete-tree tree="function_definition [74261,74367]"/>
  <delete-tree tree="function_definition [74375,74477]"/>
  <delete-tree tree="function_definition [74629,74713]"/>
  <delete-node tree="comment: /**      * Account      */ [74721,74749]"/>
  <delete-node tree="function: function [74757,74765]"/>
  <delete-node tree="identifier: balanceOfStaged [74766,74781]"/>
  <delete-node tree="(: ( [74781,74782]"/>
  <delete-node tree="): ) [74797,74798]"/>
  <delete-tree tree="visibility [74799,74805]"/>
  <delete-tree tree="state_mutability [74806,74810]"/>
  <delete-tree tree="return_type_definition [74811,74828]"/>
  <delete-tree tree="function_body [74829,74886]"/>
  <delete-node tree="function_definition [74757,74886]"/>
  <delete-tree tree="function_definition [74894,75029]"/>
  <delete-tree tree="function_definition [75037,75166]"/>
  <delete-tree tree="function_definition [75174,75305]"/>
  <delete-tree tree="function_definition [75314,75442]"/>
  <delete-node tree="function: function [75450,75458]"/>
  <delete-node tree="identifier: balanceOfRewarded [75459,75476]"/>
  <delete-node tree="(: ( [75476,75477]"/>
  <delete-tree tree="parameter [75477,75492]"/>
  <delete-node tree="): ) [75492,75493]"/>
  <delete-tree tree="visibility [75494,75500]"/>
  <delete-tree tree="return_type_definition [75506,75523]"/>
  <delete-node tree="{: { [75524,75525]"/>
  <delete-node tree="=: = [75555,75556]"/>
  <delete-tree tree="call_expression [75557,75570]"/>
  <delete-node tree="variable_declaration_statement [75535,75571]"/>
  <delete-tree tree="if_statement [75581,75638]"/>
  <delete-node tree="=: = [75907,75908]"/>
  <delete-tree tree="call_expression [75909,75934]"/>
  <delete-node tree="variable_declaration_statement [75882,75935]"/>
  <delete-tree tree="if_statement [75945,76082]"/>
  <delete-node tree="}: } [76107,76108]"/>
  <delete-node tree="function_body [75524,76108]"/>
  <delete-node tree="function_definition [75450,76108]"/>
  <delete-node tree="function: function [76116,76124]"/>
  <delete-node tree="identifier: statusOf [76125,76133]"/>
  <delete-node tree="(: ( [76133,76134]"/>
  <delete-tree tree="parameter [76134,76149]"/>
  <delete-node tree="): ) [76149,76150]"/>
  <delete-tree tree="visibility [76151,76157]"/>
  <delete-tree tree="state_mutability [76158,76162]"/>
  <delete-tree tree="return_type_definition [76163,76191]"/>
  <delete-node tree="{: { [76192,76193]"/>
  <delete-node tree="return: return [76203,76209]"/>
  <delete-node tree="?: ? [76257,76258]"/>
  <delete-tree tree="member_expression [76272,76297]"/>
  <delete-node tree=":: : [76298,76299]"/>
  <delete-tree tree="member_expression [76313,76331]"/>
  <delete-node tree="ternary_expression [76210,76331]"/>
  <delete-node tree=".: . [76331,76332]"/>
  <delete-node tree="identifier: Fluid [76332,76337]"/>
  <delete-node tree="member_expression [76210,76337]"/>
  <delete-node tree="return_statement [76203,76338]"/>
  <delete-node tree="}: } [76344,76345]"/>
  <delete-node tree="function_body [76192,76345]"/>
  <delete-node tree="function_definition [76116,76345]"/>
  <delete-node tree="comment: /**      * Epoch      */ [76353,76379]"/>
  <delete-tree tree="function_definition [76387,76475]"/>
  <delete-node tree="}: } [76477,76478]"/>
  <delete-node tree="contract_body [73562,76478]"/>
  <delete-node tree="contract_declaration [73528,76478]"/>
  <delete-node tree="comment: // File: contracts/oracle/PoolSetters.sol [76482,76523]"/>
  <delete-node tree="identifier: totalRewarded [84220,84233]"/>
  <delete-tree tree="call_argument [84240,84254]"/>
  <delete-node tree="constant: constant [66555,66563]"/>
  <delete-node tree="identifier: UNISWAP_FACTORY [66564,66579]"/>
  <delete-node tree="=: = [66580,66581]"/>
  <delete-tree tree="type_cast_expression [66582,66633]"/>
  <delete-node tree="state_variable_declaration [66539,66634]"/>
  <delete-tree tree="visibility [66650,66658]"/>
  <delete-node tree="identifier: _dao [66659,66663]"/>
  <delete-node tree="state_variable_declaration [66642,66664]"/>
  <delete-tree tree="visibility [66678,66686]"/>
  <delete-node tree="identifier: _dollar [66687,66694]"/>
  <delete-node tree="state_variable_declaration [66670,66695]"/>
  <delete-tree tree="state_variable_declaration [66703,66730]"/>
  <delete-tree tree="state_variable_declaration [66736,66766]"/>
  <delete-tree tree="visibility [66780,66788]"/>
  <delete-node tree="identifier: _index [66789,66795]"/>
  <delete-node tree="state_variable_declaration [66772,66796]"/>
  <delete-tree tree="visibility [66810,66818]"/>
  <delete-node tree="identifier: _cumulative [66819,66830]"/>
  <delete-node tree="state_variable_declaration [66802,66831]"/>
  <delete-tree tree="state_variable_declaration [66837,66864]"/>
  <delete-tree tree="visibility [66880,66888]"/>
  <delete-node tree="identifier: _reserve [66889,66897]"/>
  <delete-node tree="state_variable_declaration [66872,66898]"/>
  <delete-tree tree="constructor_definition [66906,67005]"/>
  <delete-node tree="function: function [67013,67021]"/>
  <delete-node tree="identifier: setup [67022,67027]"/>
  <delete-node tree="(: ( [67027,67028]"/>
  <delete-node tree="): ) [67028,67029]"/>
  <delete-tree tree="modifier_invocation [67037,67044]"/>
  <delete-node tree="{: { [67045,67046]"/>
  <delete-tree tree="expression_statement [67056,67143]"/>
  <delete-tree tree="variable_declaration_statement [67155,67223]"/>
  <delete-tree tree="expression_statement [67233,67268]"/>
  <delete-node tree="}: } [67409,67410]"/>
  <delete-node tree="function_body [67045,67410]"/>
  <delete-node tree="function_definition [67013,67410]"/>
  <delete-node tree="comment: /**      * Trades/Liquidity: (1) Initializes reserve and blockTimestampLast (can calculate a price)      *                   (2) Has non-zero cumulative prices      *      * Steps: (1) Captures a reference blockTimestampLast      *        (2) First reported value      */ [67418,67695]"/>
  <delete-node tree="function: function [67958,67966]"/>
  <delete-node tree="identifier: initializeOracle [67967,67983]"/>
  <delete-node tree="(: ( [67983,67984]"/>
  <delete-node tree="): ) [67984,67985]"/>
  <delete-node tree="{: { [67994,67995]"/>
  <delete-tree tree="variable_declaration_statement [68005,68033]"/>
  <delete-node tree="=: = [68067,68068]"/>
  <delete-tree tree="ternary_expression [68069,68166]"/>
  <delete-node tree="variable_declaration_statement [68043,68167]"/>
  <delete-tree tree="variable_declaration_statement [68177,68262]"/>
  <delete-tree tree="if_statement [68272,68554]"/>
  <delete-node tree="}: } [68560,68561]"/>
  <delete-node tree="function_body [67994,68561]"/>
  <delete-node tree="function_definition [67958,68561]"/>
  <delete-node tree="function: function [68569,68577]"/>
  <delete-node tree="identifier: updateOracle [68578,68590]"/>
  <delete-node tree="(: ( [68590,68591]"/>
  <delete-node tree="): ) [68591,68592]"/>
  <delete-node tree="returns: returns [68601,68608]"/>
  <delete-node tree="(: ( [68609,68610]"/>
  <delete-node tree=",: , [68629,68630]"/>
  <delete-tree tree="parameter [68631,68635]"/>
  <delete-node tree="): ) [68635,68636]"/>
  <delete-node tree="return_type_definition [68601,68636]"/>
  <delete-node tree="{: { [68637,68638]"/>
  <delete-tree tree="variable_declaration_statement [68748,68813]"/>
  <delete-node tree="=: = [68844,68845]"/>
  <delete-tree tree="boolean_literal [68846,68850]"/>
  <delete-node tree="variable_declaration_statement [68833,68851]"/>
  <delete-tree tree="if_statement [68861,68956]"/>
  <delete-tree tree="if_statement [68966,69058]"/>
  <delete-tree tree="if_statement [69068,69127]"/>
  <delete-tree tree="return_statement [69146,69168]"/>
  <delete-node tree="}: } [69174,69175]"/>
  <delete-node tree="function_body [68637,69175]"/>
  <delete-node tree="function_definition [68569,69175]"/>
  <delete-tree tree="type_name [69308,69314]"/>
  <delete-tree tree="member_expression [69342,69388]"/>
  <delete-tree tree="type_cast_expression [69389,69403]"/>
  <delete-tree tree="variable_declaration_statement [69415,69464]"/>
  <delete-node tree="comment: // overflow is desired [69465,69487]"/>
  <delete-node tree="=: = [69521,69522]"/>
  <delete-tree tree="ternary_expression [69523,69572]"/>
  <delete-node tree="variable_declaration_statement [69497,69573]"/>
  <delete-tree tree="expression_statement [69692,69720]"/>
  <delete-tree tree="expression_statement [69730,69760]"/>
  <delete-tree tree="return_statement [69772,69795]"/>
  <delete-tree tree="member_expression [75685,75704]"/>
  <delete-tree tree="call_argument [75705,75719]"/>
  <delete-tree tree="visibility [67720,67726]"/>
  <delete-tree tree="modifier_invocation [67727,67734]"/>
  <delete-node tree="returns: returns [67735,67742]"/>
  <delete-node tree="(: ( [67743,67744]"/>
  <delete-node tree=",: , [67763,67764]"/>
  <delete-tree tree="parameter [67765,67769]"/>
  <delete-node tree="): ) [67769,67770]"/>
  <delete-node tree="return_type_definition [67735,67770]"/>
  <delete-tree tree="call_argument [69625,69670]"/>
  <delete-node tree=",: , [69670,69671]"/>
  <delete-tree tree="call_argument [69672,69678]"/>
  <delete-node tree="identifier: _initialized [67786,67798]"/>
  <delete-tree tree="block_statement [67800,67848]"/>
  <delete-node tree="else: else [67849,67853]"/>
  <delete-tree tree="expression_statement [67869,67888]"/>
  <delete-node tree="(: ( [67909,67910]"/>
  <delete-node tree=",: , [67923,67924]"/>
  <delete-node tree="): ) [67930,67931]"/>
  <delete-node tree="tuple_expression [67909,67931]"/>
  <delete-node tree="function: function [69810,69818]"/>
  <delete-node tree="identifier: updateReserve [69819,69832]"/>
  <delete-node tree="(: ( [69832,69833]"/>
  <delete-node tree="): ) [69833,69834]"/>
  <delete-node tree="{: { [69861,69862]"/>
  <delete-node tree="=: = [69892,69893]"/>
  <delete-node tree="identifier: _reserve [69894,69902]"/>
  <delete-node tree="variable_declaration_statement [69872,69903]"/>
  <delete-tree tree="variable_declaration_statement [69913,69973]"/>
  <delete-tree tree="expression_statement [69983,70028]"/>
  <delete-node tree="comment: // get counter's reserve [70029,70053]"/>
  <delete-tree tree="return_statement [70065,70084]"/>
  <delete-node tree="}: } [70090,70091]"/>
  <delete-node tree="function_body [69861,70091]"/>
  <delete-node tree="function_definition [69810,70091]"/>
  <delete-node tree="function: function [70099,70107]"/>
  <delete-node tree="identifier: usdc [70108,70112]"/>
  <delete-node tree="(: ( [70112,70113]"/>
  <delete-node tree="): ) [70113,70114]"/>
  <delete-tree tree="state_mutability [70124,70128]"/>
  <delete-tree tree="return_type_definition [70129,70146]"/>
  <delete-tree tree="function_body [70147,70199]"/>
  <delete-node tree="function_definition [70099,70199]"/>
  <delete-node tree="function: function [70207,70215]"/>
  <delete-node tree="identifier: pair [70216,70220]"/>
  <delete-node tree="(: ( [70220,70221]"/>
  <delete-node tree="): ) [70221,70222]"/>
  <delete-tree tree="state_mutability [70232,70236]"/>
  <delete-tree tree="return_type_definition [70237,70254]"/>
  <delete-tree tree="function_body [70255,70295]"/>
  <delete-node tree="function_definition [70207,70295]"/>
  <delete-node tree="modifier: modifier [70396,70404]"/>
  <delete-node tree="identifier: onlyDao [70405,70412]"/>
  <delete-node tree="(: ( [70412,70413]"/>
  <delete-node tree="): ) [70413,70414]"/>
  <delete-node tree="{: { [70415,70416]"/>
  <delete-node tree="}: } [70546,70547]"/>
  <delete-node tree="function_body [70415,70547]"/>
  <delete-node tree="modifier_definition [70396,70547]"/>
  <delete-node tree="contract: contract [77201,77209]"/>
  <delete-node tree="identifier: PoolSetters [77210,77221]"/>
  <delete-node tree="is: is [77222,77224]"/>
  <delete-tree tree="inheritance_specifier [77225,77234]"/>
  <delete-node tree=",: , [77234,77235]"/>
  <delete-tree tree="inheritance_specifier [77236,77247]"/>
  <delete-node tree="{: { [77248,77249]"/>
  <delete-node tree="comment: /**      * Global      */ [77290,77317]"/>
  <delete-node tree="function: function [77325,77333]"/>
  <delete-node tree="identifier: pause [77334,77339]"/>
  <delete-node tree="(: ( [77339,77340]"/>
  <delete-node tree="): ) [77340,77341]"/>
  <delete-tree tree="function_body [77351,77390]"/>
  <delete-node tree="function_definition [77325,77390]"/>
  <delete-node tree="comment: /**      * Account      */ [77398,77426]"/>
  <delete-node tree="function: function [77434,77442]"/>
  <delete-node tree="identifier: incrementBalanceOfBonded [77443,77467]"/>
  <delete-node tree="(: ( [77467,77468]"/>
  <delete-tree tree="parameter [77468,77483]"/>
  <delete-node tree=",: , [77483,77484]"/>
  <delete-node tree="): ) [77499,77500]"/>
  <delete-node tree="{: { [77510,77511]"/>
  <delete-tree tree="member_expression [77521,77552]"/>
  <delete-node tree="=: = [77553,77554]"/>
  <delete-tree tree="member_expression [77555,77590]"/>
  <delete-node tree="(: ( [77590,77591]"/>
  <delete-node tree="): ) [77597,77598]"/>
  <delete-node tree="call_expression [77555,77598]"/>
  <delete-node tree="assignment_expression [77521,77598]"/>
  <delete-node tree="expression_statement [77521,77599]"/>
  <delete-tree tree="member_expression [77609,77630]"/>
  <delete-node tree="=: = [77631,77632]"/>
  <delete-tree tree="member_expression [77633,77658]"/>
  <delete-node tree="(: ( [77658,77659]"/>
  <delete-node tree="): ) [77665,77666]"/>
  <delete-node tree="call_expression [77633,77666]"/>
  <delete-node tree="assignment_expression [77609,77666]"/>
  <delete-node tree="expression_statement [77609,77667]"/>
  <delete-node tree="}: } [77673,77674]"/>
  <delete-node tree="function_body [77510,77674]"/>
  <delete-node tree="function_definition [77434,77674]"/>
  <delete-node tree="function: function [77682,77690]"/>
  <delete-node tree="identifier: decrementBalanceOfBonded [77691,77715]"/>
  <delete-node tree="(: ( [77715,77716]"/>
  <delete-tree tree="parameter [77716,77731]"/>
  <delete-node tree=",: , [77731,77732]"/>
  <delete-node tree=",: , [77747,77748]"/>
  <delete-tree tree="parameter [77749,77769]"/>
  <delete-node tree="): ) [77769,77770]"/>
  <delete-tree tree="visibility [77771,77779]"/>
  <delete-node tree="{: { [77780,77781]"/>
  <delete-tree tree="member_expression [77791,77822]"/>
  <delete-node tree="=: = [77823,77824]"/>
  <delete-tree tree="member_expression [77825,77860]"/>
  <delete-node tree="(: ( [77860,77861]"/>
  <delete-node tree=",: , [77867,77868]"/>
  <delete-tree tree="call_argument [77869,77875]"/>
  <delete-node tree="): ) [77875,77876]"/>
  <delete-node tree="call_expression [77825,77876]"/>
  <delete-node tree="assignment_expression [77791,77876]"/>
  <delete-node tree="expression_statement [77791,77877]"/>
  <delete-tree tree="member_expression [77887,77908]"/>
  <delete-node tree="=: = [77909,77910]"/>
  <delete-tree tree="member_expression [77911,77936]"/>
  <delete-node tree="(: ( [77936,77937]"/>
  <delete-node tree=",: , [77943,77944]"/>
  <delete-tree tree="call_argument [77945,77951]"/>
  <delete-node tree="): ) [77951,77952]"/>
  <delete-node tree="call_expression [77911,77952]"/>
  <delete-node tree="assignment_expression [77887,77952]"/>
  <delete-node tree="expression_statement [77887,77953]"/>
  <delete-node tree="}: } [77959,77960]"/>
  <delete-node tree="function_body [77780,77960]"/>
  <delete-node tree="function_definition [77682,77960]"/>
  <delete-node tree="function: function [77968,77976]"/>
  <delete-node tree="identifier: incrementBalanceOfStaged [77977,78001]"/>
  <delete-node tree="(: ( [78001,78002]"/>
  <delete-tree tree="parameter [78002,78017]"/>
  <delete-node tree=",: , [78017,78018]"/>
  <delete-tree tree="parameter [78019,78033]"/>
  <delete-node tree="): ) [78033,78034]"/>
  <delete-node tree="{: { [78044,78045]"/>
  <delete-tree tree="member_expression [78055,78086]"/>
  <delete-node tree="=: = [78087,78088]"/>
  <delete-tree tree="member_expression [78089,78124]"/>
  <delete-node tree="(: ( [78124,78125]"/>
  <delete-node tree="): ) [78131,78132]"/>
  <delete-node tree="call_expression [78089,78132]"/>
  <delete-node tree="assignment_expression [78055,78132]"/>
  <delete-node tree="expression_statement [78055,78133]"/>
  <delete-tree tree="member_expression [78143,78164]"/>
  <delete-node tree="=: = [78165,78166]"/>
  <delete-tree tree="member_expression [78167,78192]"/>
  <delete-node tree="(: ( [78192,78193]"/>
  <delete-node tree="): ) [78199,78200]"/>
  <delete-node tree="call_expression [78167,78200]"/>
  <delete-node tree="assignment_expression [78143,78200]"/>
  <delete-node tree="expression_statement [78143,78201]"/>
  <delete-node tree="}: } [78207,78208]"/>
  <delete-node tree="function_body [78044,78208]"/>
  <delete-node tree="function_definition [77968,78208]"/>
  <delete-node tree="function: function [78216,78224]"/>
  <delete-node tree="identifier: decrementBalanceOfStaged [78225,78249]"/>
  <delete-node tree="(: ( [78249,78250]"/>
  <delete-tree tree="parameter [78250,78265]"/>
  <delete-node tree=",: , [78265,78266]"/>
  <delete-tree tree="parameter [78267,78281]"/>
  <delete-node tree=",: , [78281,78282]"/>
  <delete-tree tree="parameter [78283,78303]"/>
  <delete-node tree="): ) [78303,78304]"/>
  <delete-tree tree="visibility [78305,78313]"/>
  <delete-node tree="{: { [78314,78315]"/>
  <delete-tree tree="expression_statement [78325,78411]"/>
  <delete-tree tree="member_expression [78421,78442]"/>
  <delete-node tree="=: = [78443,78444]"/>
  <delete-tree tree="member_expression [78445,78470]"/>
  <delete-node tree="(: ( [78470,78471]"/>
  <delete-node tree=",: , [78477,78478]"/>
  <delete-tree tree="call_argument [78479,78485]"/>
  <delete-node tree="): ) [78485,78486]"/>
  <delete-node tree="call_expression [78445,78486]"/>
  <delete-node tree="assignment_expression [78421,78486]"/>
  <delete-node tree="expression_statement [78421,78487]"/>
  <delete-node tree="}: } [78493,78494]"/>
  <delete-node tree="function_body [78314,78494]"/>
  <delete-node tree="function_definition [78216,78494]"/>
  <delete-node tree="function: function [78502,78510]"/>
  <delete-node tree="identifier: incrementBalanceOfClaimable [78511,78538]"/>
  <delete-node tree="(: ( [78538,78539]"/>
  <delete-tree tree="parameter [78539,78554]"/>
  <delete-node tree=",: , [78554,78555]"/>
  <delete-tree tree="parameter [78556,78570]"/>
  <delete-node tree="): ) [78570,78571]"/>
  <delete-tree tree="visibility [78572,78580]"/>
  <delete-node tree="{: { [78581,78582]"/>
  <delete-tree tree="expression_statement [78592,78676]"/>
  <delete-tree tree="member_expression [78686,78710]"/>
  <delete-node tree="=: = [78711,78712]"/>
  <delete-tree tree="member_expression [78713,78741]"/>
  <delete-node tree="(: ( [78741,78742]"/>
  <delete-node tree="): ) [78748,78749]"/>
  <delete-node tree="call_expression [78713,78749]"/>
  <delete-node tree="assignment_expression [78686,78749]"/>
  <delete-node tree="expression_statement [78686,78750]"/>
  <delete-node tree="}: } [78756,78757]"/>
  <delete-node tree="function_body [78581,78757]"/>
  <delete-node tree="function_definition [78502,78757]"/>
  <delete-node tree="function: function [78765,78773]"/>
  <delete-node tree="identifier: decrementBalanceOfClaimable [78774,78801]"/>
  <delete-node tree="(: ( [78801,78802]"/>
  <delete-tree tree="parameter [78802,78817]"/>
  <delete-node tree=",: , [78817,78818]"/>
  <delete-node tree=",: , [78833,78834]"/>
  <delete-tree tree="parameter [78835,78855]"/>
  <delete-node tree="): ) [78855,78856]"/>
  <delete-tree tree="visibility [78857,78865]"/>
  <delete-node tree="{: { [78866,78867]"/>
  <delete-tree tree="expression_statement [78877,78969]"/>
  <delete-tree tree="member_expression [78979,79003]"/>
  <delete-node tree="=: = [79004,79005]"/>
  <delete-tree tree="member_expression [79006,79034]"/>
  <delete-node tree="(: ( [79034,79035]"/>
  <delete-node tree=",: , [79041,79042]"/>
  <delete-tree tree="call_argument [79043,79049]"/>
  <delete-node tree="): ) [79049,79050]"/>
  <delete-node tree="call_expression [79006,79050]"/>
  <delete-node tree="assignment_expression [78979,79050]"/>
  <delete-node tree="expression_statement [78979,79051]"/>
  <delete-node tree="}: } [79057,79058]"/>
  <delete-node tree="function_body [78866,79058]"/>
  <delete-node tree="function_definition [78765,79058]"/>
  <delete-tree tree="function_definition [79066,79311]"/>
  <delete-tree tree="function_definition [79319,79602]"/>
  <delete-node tree="}: } [79761,79762]"/>
  <delete-node tree="contract_body [77248,79762]"/>
  <delete-node tree="contract_declaration [77201,79762]"/>
  <delete-node tree="comment: // File: contracts/oracle/Liquidity.sol [79766,79805]"/>
  <delete-node tree="contract: contract [80487,80495]"/>
  <delete-node tree="identifier: Liquidity [80496,80505]"/>
  <delete-node tree="is: is [80506,80508]"/>
  <delete-tree tree="inheritance_specifier [80509,80520]"/>
  <delete-node tree="{: { [80521,80522]"/>
  <delete-tree tree="visibility [80536,80543]"/>
  <delete-node tree="constant: constant [80544,80552]"/>
  <delete-node tree="identifier: UNISWAP_FACTORY [80553,80568]"/>
  <delete-node tree="=: = [80569,80570]"/>
  <delete-tree tree="type_cast_expression [80571,80622]"/>
  <delete-node tree="state_variable_declaration [80528,80623]"/>
  <delete-node tree="function: function [80631,80639]"/>
  <delete-node tree="identifier: addLiquidity [80640,80652]"/>
  <delete-node tree="(: ( [80652,80653]"/>
  <delete-node tree="): ) [80673,80674]"/>
  <delete-node tree="{: { [80711,80712]"/>
  <delete-tree tree="variable_declaration_tuple [80722,80752]"/>
  <delete-node tree="=: = [80753,80754]"/>
  <delete-node tree="(: ( [80755,80756]"/>
  <delete-tree tree="primitive_type [80756,80763]"/>
  <delete-node tree="(: ( [80763,80764]"/>
  <delete-node tree="): ) [80772,80773]"/>
  <delete-node tree="type_cast_expression [80756,80773]"/>
  <delete-node tree=",: , [80773,80774]"/>
  <delete-tree tree="call_expression [80775,80781]"/>
  <delete-node tree="): ) [80781,80782]"/>
  <delete-node tree="tuple_expression [80755,80782]"/>
  <delete-node tree="variable_declaration_statement [80722,80783]"/>
  <delete-tree tree="variable_declaration_statement [80793,80852]"/>
  <delete-node tree="=: = [80883,80884]"/>
  <delete-tree tree="parenthesized_expression [80885,80917]"/>
  <delete-node tree="?: ? [80918,80919]"/>
  <delete-node tree="identifier: dollarAmount [80934,80946]"/>
  <delete-node tree=":: : [80947,80948]"/>
  <delete-tree tree="member_expression [80963,80985]"/>
  <delete-node tree="(: ( [80985,80986]"/>
  <delete-node tree=",: , [80998,80999]"/>
  <delete-tree tree="call_argument [81000,81008]"/>
  <delete-node tree=",: , [81008,81009]"/>
  <delete-tree tree="call_argument [81010,81018]"/>
  <delete-node tree="): ) [81018,81019]"/>
  <delete-node tree="call_expression [80963,81019]"/>
  <delete-node tree="ternary_expression [80885,81019]"/>
  <delete-node tree="variable_declaration_statement [80864,81020]"/>
  <delete-tree tree="variable_declaration_statement [81032,81064]"/>
  <delete-tree tree="member_expression [81074,81097]"/>
  <delete-node tree="(: ( [81097,81098]"/>
  <delete-tree tree="call_argument [81098,81102]"/>
  <delete-node tree=",: , [81102,81103]"/>
  <delete-node tree="): ) [81116,81117]"/>
  <delete-node tree="call_expression [81074,81117]"/>
  <delete-node tree="expression_statement [81074,81118]"/>
  <delete-node tree="return: return [81194,81200]"/>
  <delete-node tree="(: ( [81201,81202]"/>
  <delete-node tree="identifier: usdcAmount [81202,81212]"/>
  <delete-node tree=",: , [81212,81213]"/>
  <delete-node tree="): ) [81254,81255]"/>
  <delete-node tree="tuple_expression [81201,81255]"/>
  <delete-node tree="return_statement [81194,81256]"/>
  <delete-node tree="}: } [81262,81263]"/>
  <delete-node tree="function_body [80711,81263]"/>
  <delete-node tree="function_definition [80631,81263]"/>
  <delete-node tree="comment: // overridable for testing [81271,81297]"/>
  <delete-node tree="function: function [81303,81311]"/>
  <delete-node tree="identifier: getReserves [81312,81323]"/>
  <delete-node tree="(: ( [81323,81324]"/>
  <delete-node tree=",: , [81338,81339]"/>
  <delete-node tree="): ) [81354,81355]"/>
  <delete-tree tree="visibility [81356,81364]"/>
  <delete-tree tree="state_mutability [81365,81369]"/>
  <delete-tree tree="return_type_definition [81370,81408]"/>
  <delete-tree tree="function_body [81409,81719]"/>
  <delete-node tree="function_definition [81303,81719]"/>
  <delete-node tree="}: } [81721,81722]"/>
  <delete-node tree="contract_body [80521,81722]"/>
  <delete-node tree="contract_declaration [80487,81722]"/>
  <delete-node tree="comment: // File: contracts/oracle/Pool.sol [81726,81760]"/>
  <delete-tree tree="inheritance_specifier [82474,82483]"/>
  <delete-node tree="constructor: constructor [82526,82537]"/>
  <delete-node tree="(: ( [82537,82538]"/>
  <delete-tree tree="parameter [82538,82552]"/>
  <delete-node tree=",: , [82552,82553]"/>
  <delete-tree tree="parameter [82554,82567]"/>
  <delete-node tree="): ) [82567,82568]"/>
  <delete-node tree="public: public [82569,82575]"/>
  <delete-node tree="{: { [82576,82577]"/>
  <delete-tree tree="member_expression [82587,82606]"/>
  <delete-node tree="=: = [82607,82608]"/>
  <delete-node tree="identifier: IDAO [82609,82613]"/>
  <delete-node tree="(: ( [82613,82614]"/>
  <delete-node tree="): ) [82624,82625]"/>
  <delete-node tree="call_expression [82609,82625]"/>
  <delete-node tree="assignment_expression [82587,82625]"/>
  <delete-node tree="expression_statement [82587,82626]"/>
  <delete-tree tree="expression_statement [82636,82677]"/>
  <delete-tree tree="expression_statement [82687,82725]"/>
  <delete-node tree="}: } [82731,82732]"/>
  <delete-node tree="function_body [82576,82732]"/>
  <delete-node tree="constructor_definition [82526,82732]"/>
  <delete-node tree="function: function [83802,83810]"/>
  <delete-node tree="identifier: claim [83811,83816]"/>
  <delete-node tree="(: ( [83816,83817]"/>
  <delete-tree tree="parameter [83817,83830]"/>
  <delete-node tree="): ) [83830,83831]"/>
  <delete-node tree="{: { [83864,83865]"/>
  <delete-node tree="}: } [84084,84085]"/>
  <delete-node tree="function_body [83864,84085]"/>
  <delete-node tree="function_definition [83802,84085]"/>
  <delete-tree tree="binary_expression [84321,84341]"/>
  <delete-node tree="identifier: value [84384,84389]"/>
  <delete-node tree="number_literal: 0 [84393,84394]"/>
  <delete-node tree="?: ? [84306,84307]"/>
  <delete-node tree=":: : [84395,84396]"/>
  <delete-tree tree="call_expression [84410,84445]"/>
  <delete-node tree="ternary_expression [84287,84445]"/>
  <delete-tree tree="member_expression [83588,83604]"/>
  <delete-node tree="identifier: incrementBalanceOfBonded [84477,84501]"/>
  <delete-node tree="(: ( [84501,84502]"/>
  <delete-node tree=",: , [84512,84513]"/>
  <delete-node tree="): ) [84519,84520]"/>
  <delete-node tree="call_expression [84477,84520]"/>
  <delete-node tree="expression_statement [84477,84521]"/>
  <delete-node tree="identifier: incrementBalanceOfPhantom [84531,84556]"/>
  <delete-node tree="(: ( [84556,84557]"/>
  <delete-node tree=",: , [84567,84568]"/>
  <delete-tree tree="call_argument [84569,84579]"/>
  <delete-node tree="): ) [84579,84580]"/>
  <delete-node tree="call_expression [84531,84580]"/>
  <delete-node tree="expression_statement [84531,84581]"/>
  <delete-node tree="=: = [85073,85074]"/>
  <delete-node tree="identifier: balanceOfRewarded [85075,85092]"/>
  <delete-node tree="(: ( [85092,85093]"/>
  <delete-node tree="): ) [85103,85104]"/>
  <delete-node tree="call_expression [85075,85104]"/>
  <delete-node tree=".: . [85104,85105]"/>
  <delete-node tree="identifier: mul [85105,85108]"/>
  <delete-node tree="member_expression [85075,85108]"/>
  <delete-node tree="(: ( [85108,85109]"/>
  <delete-tree tree="call_argument [85109,85114]"/>
  <delete-node tree="): ) [85114,85115]"/>
  <delete-node tree="call_expression [85075,85115]"/>
  <delete-node tree=".: . [85115,85116]"/>
  <delete-node tree="identifier: div [85116,85119]"/>
  <delete-node tree="member_expression [85075,85119]"/>
  <delete-node tree="(: ( [85119,85120]"/>
  <delete-tree tree="call_argument [85120,85135]"/>
  <delete-node tree="): ) [85135,85136]"/>
  <delete-node tree="call_expression [85075,85136]"/>
  <delete-node tree="variable_declaration_statement [85052,85137]"/>
  <delete-node tree="identifier: value [85202,85207]"/>
  <delete-node tree=".: . [85208,85209]"/>
  <delete-node tree="identifier: div [85209,85212]"/>
  <delete-node tree="member_expression [85169,85212]"/>
  <delete-node tree="(: ( [85212,85213]"/>
  <delete-tree tree="call_argument [85213,85228]"/>
  <delete-node tree="): ) [85228,85229]"/>
  <delete-node tree="call_expression [85169,85229]"/>
  <delete-node tree=",: , [83967,83968]"/>
  <delete-tree tree="call_argument [27386,27408]"/>
  <delete-node tree="identifier: newUniv2 [86379,86387]"/>
  <delete-tree tree="binary_expression [59305,59320]"/>
  <delete-node tree="function: function [86656,86664]"/>
  <delete-node tree="identifier: emergencyWithdraw [86665,86682]"/>
  <delete-node tree="(: ( [86682,86683]"/>
  <delete-tree tree="parameter [86683,86696]"/>
  <delete-node tree=",: , [86696,86697]"/>
  <delete-tree tree="parameter [86698,86711]"/>
  <delete-node tree="): ) [86711,86712]"/>
  <delete-tree tree="modifier_invocation [86722,86729]"/>
  <delete-tree tree="function_body [86730,86794]"/>
  <delete-node tree="function_definition [86656,86794]"/>
  <delete-node tree="function: function [86802,86810]"/>
  <delete-node tree="identifier: emergencyPause [86811,86825]"/>
  <delete-node tree="(: ( [86825,86826]"/>
  <delete-node tree="): ) [86826,86827]"/>
  <delete-tree tree="modifier_invocation [86837,86844]"/>
  <delete-tree tree="function_body [86845,86871]"/>
  <delete-node tree="function_definition [86802,86871]"/>
  <delete-node tree="modifier: modifier [87108,87116]"/>
  <delete-node tree="identifier: onlyFrozen [87117,87127]"/>
  <delete-node tree="(: ( [87127,87128]"/>
  <delete-tree tree="parameter [87128,87143]"/>
  <delete-node tree="): ) [87143,87144]"/>
  <delete-node tree="{: { [87145,87146]"/>
  <delete-tree tree="expression_statement [87299,87301]"/>
  <delete-node tree="}: } [87307,87308]"/>
  <delete-node tree="function_body [87145,87308]"/>
  <delete-node tree="modifier_definition [87108,87308]"/>
  <delete-node tree="modifier: modifier [87316,87324]"/>
  <delete-node tree="identifier: onlyDao [87325,87332]"/>
  <delete-node tree="(: ( [87332,87333]"/>
  <delete-node tree="): ) [87333,87334]"/>
  <delete-node tree="{: { [87335,87336]"/>
  <delete-tree tree="expression_statement [87468,87470]"/>
  <delete-node tree="}: } [87476,87477]"/>
  <delete-node tree="function_body [87335,87477]"/>
  <delete-node tree="modifier_definition [87316,87477]"/>
  <delete-node tree="modifier: modifier [87485,87493]"/>
  <delete-node tree="identifier: notPaused [87494,87503]"/>
  <delete-node tree="(: ( [87503,87504]"/>
  <delete-node tree="): ) [87504,87505]"/>
  <delete-node tree="{: { [87506,87507]"/>
  <delete-node tree="(: ( [87529,87530]"/>
  <delete-tree tree="call_argument [87544,87553]"/>
  <delete-node tree=",: , [87553,87554]"/>
  <delete-node tree=",: , [87572,87573]"/>
  <delete-tree tree="call_argument [87587,87595]"/>
  <delete-node tree="): ) [87605,87606]"/>
  <delete-node tree="call_expression [87517,87606]"/>
  <delete-node tree="expression_statement [87517,87607]"/>
  <delete-tree tree="expression_statement [87619,87621]"/>
  <delete-node tree="}: } [87627,87628]"/>
  <delete-node tree="function_body [87506,87628]"/>
  <delete-node tree="modifier_definition [87485,87628]"/>
  <delete-node tree="comment: // File: contracts/dao/State.sol [89251,89283]"/>
  <delete-node tree="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [89287,89945]"/>
  <delete-node tree="comment: // File: contracts/dao/Getters.sol [93987,94021]"/>
  <delete-node tree=",: , [83186,83187]"/>
  <delete-node tree=",: , [83204,83205]"/>
  <delete-node tree="&gt;=: &gt;= [86059,86061]"/>
  <delete-node tree="identifier: value [86062,86067]"/>
  <delete-tree tree="call_argument [87183,87229]"/>
  <delete-tree tree="binary_expression [87373,87401]"/>
  <delete-tree tree="call_argument [26579,26597]"/>
  <delete-tree tree="call_argument [26874,26895]"/>
  <delete-node tree=",: , [85402,85403]"/>
  <delete-tree tree="parameter [85672,85685]"/>
  <delete-node tree="identifier: onlyFrozen [85696,85706]"/>
  <delete-node tree="(: ( [85706,85707]"/>
  <delete-node tree="): ) [85717,85718]"/>
  <delete-node tree="modifier_invocation [85696,85718]"/>
  <delete-tree tree="modifier_invocation [85719,85728]"/>
  <delete-tree tree="binary_expression [85896,85915]"/>
  <delete-node tree="identifier: value [86302,86307]"/>
  <delete-tree tree="binary_expression [70453,70471]"/>
  <delete-node tree=",: , [86619,86620]"/>
  <delete-tree tree="call_argument [86621,86629]"/>
  <delete-node tree=",: , [86629,86630]"/>
  <delete-tree tree="call_argument [86631,86639]"/>
  <delete-node tree="&gt;: &gt; [85781,85782]"/>
  <delete-node tree="number_literal: 0 [85783,85784]"/>
  <delete-node tree="binary_expression [85767,85784]"/>
  <delete-node tree="&gt;=: &gt;= [76218,76220]"/>
  <delete-tree tree="member_expression [76221,76236]"/>
  <delete-node tree="[: [ [76236,76237]"/>
  <delete-node tree="identifier: account [76237,76244]"/>
  <delete-node tree="]: ] [76244,76245]"/>
  <delete-node tree="array_access [76210,76245]"/>
  <delete-tree tree="binary_expression [84946,84965]"/>
  <delete-tree tree="binary_expression [67307,67318]"/>
  <delete-node tree="||: || [67319,67321]"/>
  <delete-tree tree="binary_expression [67322,67339]"/>
  <delete-tree tree="member_expression [75770,75812]"/>
  <delete-node tree=".: . [75852,75853]"/>
  <delete-node tree="identifier: div [75853,75856]"/>
  <delete-node tree="member_expression [75770,75856]"/>
  <delete-node tree="(: ( [75856,75857]"/>
  <delete-tree tree="call_argument [75857,75868]"/>
  <delete-node tree="): ) [75868,75869]"/>
  <delete-node tree="call_expression [75770,75869]"/>
  <delete-node tree="comment: // File: contracts/dao/Setters.sol [101059,101093]"/>
  <delete-tree tree="member_expression [81128,81153]"/>
  <delete-tree tree="call_argument [81166,81170]"/>
  <delete-node tree=",: , [81170,81171]"/>
  <delete-tree tree="call_argument [81172,81182]"/>
  <delete-node tree="%: % [60779,60780]"/>
  <delete-tree tree="binary_expression [60781,60788]"/>
  <delete-node tree="binary_expression [60763,60788]"/>
  <delete-node tree="comment: // File: contracts/dao/Permission.sol [108533,108570]"/>
  <delete-node tree="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [108574,109232]"/>
  <delete-node tree="comment: // File: contracts/dao/Deployer.sol [110099,110134]"/>
  <delete-node tree="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [110138,110796]"/>
  <delete-node tree="contract: contract [110820,110828]"/>
  <delete-node tree="identifier: Deployer1 [110829,110838]"/>
  <delete-node tree="is: is [110839,110841]"/>
  <delete-node tree=",: , [110847,110848]"/>
  <delete-node tree=",: , [110859,110860]"/>
  <delete-node tree="{: { [110873,110874]"/>
  <delete-node tree="function: function [110880,110888]"/>
  <delete-node tree="identifier: initialize [110889,110899]"/>
  <delete-node tree="(: ( [110899,110900]"/>
  <delete-node tree="): ) [110900,110901]"/>
  <delete-tree tree="visibility [110914,110920]"/>
  <delete-tree tree="function_body [110921,110977]"/>
  <delete-node tree="function_definition [110880,110977]"/>
  <delete-tree tree="function_definition [110985,111081]"/>
  <delete-node tree="}: } [111083,111084]"/>
  <delete-node tree="contract_body [110873,111084]"/>
  <delete-node tree="contract_declaration [110820,111084]"/>
  <delete-node tree="contract: contract [111088,111096]"/>
  <delete-node tree="identifier: Deployer2 [111097,111106]"/>
  <delete-node tree="is: is [111107,111109]"/>
  <delete-tree tree="inheritance_specifier [111110,111115]"/>
  <delete-node tree=",: , [111115,111116]"/>
  <delete-node tree=",: , [111127,111128]"/>
  <delete-tree tree="inheritance_specifier [111129,111140]"/>
  <delete-node tree="{: { [111141,111142]"/>
  <delete-node tree="function: function [111148,111156]"/>
  <delete-node tree="identifier: initialize [111157,111167]"/>
  <delete-node tree="(: ( [111167,111168]"/>
  <delete-node tree="): ) [111168,111169]"/>
  <delete-tree tree="modifier_invocation [111170,111181]"/>
  <delete-tree tree="visibility [111182,111188]"/>
  <delete-node tree="{: { [111189,111190]"/>
  <delete-tree tree="member_expression [111200,111222]"/>
  <delete-node tree="=: = [111223,111224]"/>
  <delete-tree tree="new_expression [111225,111235]"/>
  <delete-node tree="(: ( [111235,111236]"/>
  <delete-tree tree="primitive_type [111236,111243]"/>
  <delete-node tree="(: ( [111243,111244]"/>
  <delete-node tree="call_argument [111244,111252]"/>
  <delete-node tree="): ) [111252,111253]"/>
  <delete-node tree="type_cast_expression [111236,111253]"/>
  <delete-node tree="call_argument [111236,111253]"/>
  <delete-node tree="): ) [111253,111254]"/>
  <delete-node tree="call_expression [111225,111254]"/>
  <delete-node tree="assignment_expression [111200,111254]"/>
  <delete-node tree="expression_statement [111200,111255]"/>
  <delete-node tree="(: ( [111279,111280]"/>
  <delete-node tree="): ) [111280,111281]"/>
  <delete-node tree="call_expression [111265,111281]"/>
  <delete-node tree="expression_statement [111265,111282]"/>
  <delete-node tree="}: } [111288,111289]"/>
  <delete-node tree="function_body [111189,111289]"/>
  <delete-node tree="function_definition [111148,111289]"/>
  <delete-tree tree="function_definition [111297,111393]"/>
  <delete-node tree="}: } [111395,111396]"/>
  <delete-node tree="contract_body [111141,111396]"/>
  <delete-node tree="contract_declaration [111088,111396]"/>
  <delete-node tree="contract: contract [111400,111408]"/>
  <delete-node tree="identifier: Deployer3 [111409,111418]"/>
  <delete-node tree="is: is [111419,111421]"/>
  <delete-tree tree="inheritance_specifier [111422,111427]"/>
  <delete-node tree=",: , [111427,111428]"/>
  <delete-tree tree="inheritance_specifier [111429,111439]"/>
  <delete-node tree=",: , [111439,111440]"/>
  <delete-tree tree="inheritance_specifier [111441,111452]"/>
  <delete-node tree="{: { [111453,111454]"/>
  <delete-node tree="function: function [111460,111468]"/>
  <delete-node tree="identifier: initialize [111469,111479]"/>
  <delete-node tree="(: ( [111479,111480]"/>
  <delete-node tree="): ) [111480,111481]"/>
  <delete-tree tree="modifier_invocation [111482,111493]"/>
  <delete-tree tree="visibility [111494,111500]"/>
  <delete-node tree="{: { [111501,111502]"/>
  <delete-tree tree="member_expression [111512,111532]"/>
  <delete-node tree="=: = [111533,111534]"/>
  <delete-tree tree="primitive_type [111535,111542]"/>
  <delete-node tree="(: ( [111542,111543]"/>
  <delete-tree tree="new_expression [111543,111551]"/>
  <delete-node tree="(: ( [111551,111552]"/>
  <delete-tree tree="primitive_type [111552,111559]"/>
  <delete-node tree="(: ( [111559,111560]"/>
  <delete-node tree="call_argument [111560,111568]"/>
  <delete-node tree="): ) [111568,111569]"/>
  <delete-node tree="type_cast_expression [111552,111569]"/>
  <delete-node tree="call_argument [111552,111569]"/>
  <delete-node tree=",: , [111569,111570]"/>
  <delete-tree tree="call_argument [111571,111595]"/>
  <delete-node tree="): ) [111595,111596]"/>
  <delete-node tree="call_expression [111543,111596]"/>
  <delete-node tree="call_argument [111543,111596]"/>
  <delete-node tree="): ) [111596,111597]"/>
  <delete-node tree="type_cast_expression [111535,111597]"/>
  <delete-node tree="assignment_expression [111512,111597]"/>
  <delete-node tree="expression_statement [111512,111598]"/>
  <delete-node tree="}: } [111604,111605]"/>
  <delete-node tree="function_body [111501,111605]"/>
  <delete-node tree="function_definition [111460,111605]"/>
  <delete-tree tree="function_definition [111613,111709]"/>
  <delete-node tree="}: } [111711,111712]"/>
  <delete-node tree="contract_body [111453,111712]"/>
  <delete-node tree="contract_declaration [111400,111712]"/>
</actions>
