{
  "matches": [
    {
      "src": "type_name [777,784]",
      "dest": "type_name [777,784]"
    },
    {
      "src": "type_name [3939,3948]",
      "dest": "type_name [3939,3948]"
    },
    {
      "src": "}: } [915,916]",
      "dest": "}: } [915,916]"
    },
    {
      "src": "struct_declaration [3904,4297]",
      "dest": "struct_declaration [3904,4297]"
    },
    {
      "src": "parameter [1433,1454]",
      "dest": "parameter [1433,1454]"
    },
    {
      "src": "visibility [1456,1464]",
      "dest": "visibility [1456,1464]"
    },
    {
      "src": "function_definition [953,1171]",
      "dest": "function_definition [953,1171]"
    },
    {
      "src": "identifier: amount [1008,1014]",
      "dest": "identifier: amount [1008,1014]"
    },
    {
      "src": "(: ( [2368,2369]",
      "dest": "(: ( [2368,2369]"
    },
    {
      "src": "{: { [751,752]",
      "dest": "{: { [751,752]"
    },
    {
      "src": "assembly: assembly [855,863]",
      "dest": "assembly: assembly [855,863]"
    },
    {
      "src": "visibility [1016,1024]",
      "dest": "visibility [1016,1024]"
    },
    {
      "src": "identifier: length [2526,2532]",
      "dest": "identifier: length [2526,2532]"
    },
    {
      "src": "struct_expression [1054,1083]",
      "dest": "struct_expression [1054,1083]"
    },
    {
      "src": "): ) [1734,1735]",
      "dest": "): ) [1734,1735]"
    },
    {
      "src": "internal: internal [1456,1464]",
      "dest": "internal: internal [1456,1464]"
    },
    {
      "src": ",: , [3332,3333]",
      "dest": ",: , [3332,3333]"
    },
    {
      "src": "type_name [2369,2376]",
      "dest": "type_name [2369,2376]"
    },
    {
      "src": "internal: internal [2446,2454]",
      "dest": "internal: internal [2446,2454]"
    },
    {
      "src": "type_name [1000,1007]",
      "dest": "type_name [1000,1007]"
    },
    {
      "src": "): ) [1528,1529]",
      "dest": "): ) [1528,1529]"
    },
    {
      "src": "comment: /*   Copyright 2019,2020 StarkWare Industries Ltd.    Licensed under the Apache License, Version 2.0 (the \"License\").   You may not use this file except in compliance with the License.   You may obtain a copy of the License at    https://www.starkware.co/open-source-license/    Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an \"AS IS\" BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions   and limitations under the License. */ [0,595]",
      "dest": "comment: /*   Copyright 2019,2020 StarkWare Industries Ltd.    Licensed under the Apache License, Version 2.0 (the \"License\").   You may not use this file except in compliance with the License.   You may obtain a copy of the License at    https://www.starkware.co/open-source-license/    Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an \"AS IS\" BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions   and limitations under the License. */ [0,595]"
    },
    {
      "src": "call_argument [1483,1507]",
      "dest": "call_argument [1483,1507]"
    },
    {
      "src": "primitive_type [2393,2400]",
      "dest": "primitive_type [2393,2400]"
    },
    {
      "src": "type_cast_expression [1679,1697]",
      "dest": "type_cast_expression [1679,1697]"
    },
    {
      "src": "call_expression [2238,2265]",
      "dest": "call_expression [2238,2265]"
    },
    {
      "src": "call_argument [1084,1086]",
      "dest": "call_argument [1084,1086]"
    },
    {
      "src": "identifier: memOffset [3243,3252]",
      "dest": "identifier: memOffset [3243,3252]"
    },
    {
      "src": "identifier: programOutput [3319,3332]",
      "dest": "identifier: programOutput [3319,3332]"
    },
    {
      "src": "variable_declaration [833,845]",
      "dest": "variable_declaration [833,845]"
    },
    {
      "src": "identifier: size [878,882]",
      "dest": "identifier: size [878,882]"
    },
    {
      "src": "type_name [1036,1040]",
      "dest": "type_name [1036,1040]"
    },
    {
      "src": "\": \" [1790,1791]",
      "dest": "\": \" [1790,1791]"
    },
    {
      "src": "string [1084,1086]",
      "dest": "string [1084,1086]"
    },
    {
      "src": "extcodesize: extcodesize [886,897]",
      "dest": "extcodesize: extcodesize [886,897]"
    },
    {
      "src": "{: { [2142,2143]",
      "dest": "{: { [2142,2143]"
    },
    {
      "src": "): ) [1014,1015]",
      "dest": "): ) [1014,1015]"
    },
    {
      "src": "parameter [2416,2436]",
      "dest": "parameter [2416,2436]"
    },
    {
      "src": "(: ( [816,817]",
      "dest": "(: ( [816,817]"
    },
    {
      "src": "): ) [2595,2596]",
      "dest": "): ) [2595,2596]"
    },
    {
      "src": "uint256: uint256 [3143,3150]",
      "dest": "uint256: uint256 [3143,3150]"
    },
    {
      "src": "call_expression [1483,1507]",
      "dest": "call_expression [1483,1507]"
    },
    {
      "src": "identifier: require [2512,2519]",
      "dest": "identifier: require [2512,2519]"
    },
    {
      "src": "\": \" [1085,1086]",
      "dest": "\": \" [1085,1086]"
    },
    {
      "src": "block_statement [1736,1826]",
      "dest": "block_statement [1736,1826]"
    },
    {
      "src": "parameter [817,821]",
      "dest": "parameter [817,821]"
    },
    {
      "src": ":=: := [3312,3314]",
      "dest": ":=: := [3312,3314]"
    },
    {
      "src": "): ) [2264,2265]",
      "dest": "): ) [2264,2265]"
    },
    {
      "src": "call_expression [1750,1815]",
      "dest": "call_expression [1750,1815]"
    },
    {
      "src": "memory: memory [3121,3127]",
      "dest": "memory: memory [3121,3127]"
    },
    {
      "src": "uint256: uint256 [1000,1007]",
      "dest": "uint256: uint256 [1000,1007]"
    },
    {
      "src": "variable_declaration_tuple [2196,2235]",
      "dest": "variable_declaration_tuple [2196,2235]"
    },
    {
      "src": "*: * [2698,2699]",
      "dest": "*: * [2698,2699]"
    },
    {
      "src": "return_statement [925,941]",
      "dest": "return_statement [925,941]"
    },
    {
      "src": "comment: /*       Returns the address of a cell in offset within a uint256[] array.       This allows assigning new variable of dynamic unit256[] pointing to a sub_array       with a layout of serialied uint256[] (i.e. length+content).     */ [2837,3070]",
      "dest": "comment: /*       Returns the address of a cell in offset within a uint256[] array.       This allows assigning new variable of dynamic unit256[] pointing to a sub_array       with a layout of serialied uint256[] (i.e. length+content).     */ [2837,3070]"
    },
    {
      "src": "assembly_statement [3284,3354]",
      "dest": "assembly_statement [3284,3354]"
    },
    {
      "src": "=: = [2236,2237]",
      "dest": "=: = [2236,2237]"
    },
    {
      "src": "identifier: ApprovalChainData [3911,3928]",
      "dest": "identifier: ApprovalChainData [3911,3928]"
    },
    {
      "src": "primitive_type [3111,3118]",
      "dest": "primitive_type [3111,3118]"
    },
    {
      "src": "(: ( [1410,1411]",
      "dest": "(: ( [1410,1411]"
    },
    {
      "src": "primitive_type [3143,3150]",
      "dest": "primitive_type [3143,3150]"
    },
    {
      "src": "primitive_type [817,821]",
      "dest": "primitive_type [817,821]"
    },
    {
      "src": ":=: := [883,885]",
      "dest": ":=: := [883,885]"
    },
    {
      "src": "type_name [2088,2095]",
      "dest": "type_name [2088,2095]"
    },
    {
      "src": "primitive_type [2606,2613]",
      "dest": "primitive_type [2606,2613]"
    },
    {
      "src": "(: ( [3318,3319]",
      "dest": "(: ( [3318,3319]"
    },
    {
      "src": "}: } [2824,2825]",
      "dest": "}: } [2824,2825]"
    },
    {
      "src": "expression_statement [1662,1699]",
      "dest": "expression_statement [1662,1699]"
    },
    {
      "src": "call_expression [1054,1087]",
      "dest": "call_expression [1054,1087]"
    },
    {
      "src": "(: ( [2475,2476]",
      "dest": "(: ( [2475,2476]"
    },
    {
      "src": "primitive_type [4248,4255]",
      "dest": "primitive_type [4248,4255]"
    },
    {
      "src": "+: + [2643,2644]",
      "dest": "+: + [2643,2644]"
    },
    {
      "src": "variable_declaration [3235,3252]",
      "dest": "variable_declaration [3235,3252]"
    },
    {
      "src": "uint256: uint256 [3198,3205]",
      "dest": "uint256: uint256 [3198,3205]"
    },
    {
      "src": "bytes: bytes [2211,2216]",
      "dest": "bytes: bytes [2211,2216]"
    },
    {
      "src": "function_body [2502,2831]",
      "dest": "function_body [2502,2831]"
    },
    {
      "src": "yul_identifier [2775,2780]",
      "dest": "yul_identifier [2775,2780]"
    },
    {
      "src": "): ) [1696,1697]",
      "dest": "): ) [1696,1697]"
    },
    {
      "src": "binary_expression [3263,3273]",
      "dest": "binary_expression [3263,3273]"
    },
    {
      "src": "comment: // NOLINT: low-level-calls. [1089,1116]",
      "dest": "comment: // NOLINT: low-level-calls. [1089,1116]"
    },
    {
      "src": "member_expression [2238,2255]",
      "dest": "member_expression [2238,2255]"
    },
    {
      "src": "binary_expression [1713,1734]",
      "dest": "binary_expression [1713,1734]"
    },
    {
      "src": "primitive_type [1411,1418]",
      "dest": "primitive_type [1411,1418]"
    },
    {
      "src": "parameter [2393,2414]",
      "dest": "parameter [2393,2414]"
    },
    {
      "src": ".: . [2525,2526]",
      "dest": ".: . [2525,2526]"
    },
    {
      "src": "type_name [2669,2676]",
      "dest": "type_name [2669,2676]"
    },
    {
      "src": "comment: // Represents the time after which the verifier with the given address can be removed. [3963,4049]",
      "dest": "comment: // Represents the time after which the verifier with the given address can be removed. [3963,4049]"
    },
    {
      "src": "primitive_type [1782,1786]",
      "dest": "primitive_type [1782,1786]"
    },
    {
      "src": "memory: memory [2379,2385]",
      "dest": "memory: memory [2379,2385]"
    },
    {
      "src": "comment: // NOLINTNEXTLINE: low-level-calls. [2152,2187]",
      "dest": "comment: // NOLINTNEXTLINE: low-level-calls. [2152,2187]"
    },
    {
      "src": "identifier: subArrayStart [2401,2414]",
      "dest": "identifier: subArrayStart [2401,2414]"
    },
    {
      "src": "parameter [2110,2131]",
      "dest": "parameter [2110,2131]"
    },
    {
      "src": "library: library [2323,2330]",
      "dest": "library: library [2323,2330]"
    },
    {
      "src": "primitive_type [4259,4266]",
      "dest": "primitive_type [4259,4266]"
    },
    {
      "src": "(: ( [1642,1643]",
      "dest": "(: ( [1642,1643]"
    },
    {
      "src": "(: ( [2774,2775]",
      "dest": "(: ( [2774,2775]"
    },
    {
      "src": "internal: internal [1016,1024]",
      "dest": "internal: internal [1016,1024]"
    },
    {
      "src": "\": \" [1162,1163]",
      "dest": "\": \" [1162,1163]"
    },
    {
      "src": "number_literal: 0x20 [2693,2697]",
      "dest": "number_literal: 0x20 [2693,2697]"
    },
    {
      "src": "primitive_type [1000,1007]",
      "dest": "primitive_type [1000,1007]"
    },
    {
      "src": "function_body [1025,1171]",
      "dest": "function_body [1025,1171]"
    },
    {
      "src": "pragma: pragma [636,642]",
      "dest": "pragma: pragma [636,642]"
    },
    {
      "src": "identifier: length [1724,1730]",
      "dest": "identifier: length [1724,1730]"
    },
    {
      "src": "(: ( [2196,2197]",
      "dest": "(: ( [2196,2197]"
    },
    {
      "src": "{: { [2341,2342]",
      "dest": "{: { [2341,2342]"
    },
    {
      "src": "parenthesized_expression [2640,2659]",
      "dest": "parenthesized_expression [2640,2659]"
    },
    {
      "src": "type_name [2416,2423]",
      "dest": "type_name [2416,2423]"
    },
    {
      "src": "variable_declaration [2606,2630]",
      "dest": "variable_declaration [2606,2630]"
    },
    {
      "src": "): ) [3157,3158]",
      "dest": "): ) [3157,3158]"
    },
    {
      "src": "{: { [1068,1069]",
      "dest": "{: { [1068,1069]"
    },
    {
      "src": ":=: := [2758,2760]",
      "dest": ":=: := [2758,2760]"
    },
    {
      "src": "call_expression [1125,1164]",
      "dest": "call_expression [1125,1164]"
    },
    {
      "src": "call_expression [1475,1529]",
      "dest": "call_expression [1475,1529]"
    },
    {
      "src": "address: address [2088,2095]",
      "dest": "address: address [2088,2095]"
    },
    {
      "src": "call_argument [2283,2290]",
      "dest": "call_argument [2283,2290]"
    },
    {
      "src": "parenthesized_expression [3262,3274]",
      "dest": "parenthesized_expression [3262,3274]"
    },
    {
      "src": ",: , [2780,2781]",
      "dest": ",: , [2780,2781]"
    },
    {
      "src": "memory: memory [1604,1610]",
      "dest": "memory: memory [1604,1610]"
    },
    {
      "src": "struct: struct [3904,3910]",
      "dest": "struct: struct [3904,3910]"
    },
    {
      "src": "yul_identifier [2782,2798]",
      "dest": "yul_identifier [2782,2798]"
    },
    {
      "src": "add: add [3315,3318]",
      "dest": "add: add [3315,3318]"
    },
    {
      "src": ",: , [2108,2109]",
      "dest": ",: , [2108,2109]"
    },
    {
      "src": "identifier: offset [3263,3269]",
      "dest": "identifier: offset [3263,3269]"
    },
    {
      "src": "primitive_type [981,988]",
      "dest": "primitive_type [981,988]"
    },
    {
      "src": ">: > [937,938]",
      "dest": ">: > [937,938]"
    },
    {
      "src": "(: ( [1035,1036]",
      "dest": "(: ( [1035,1036]"
    },
    {
      "src": "uint256: uint256 [4259,4266]",
      "dest": "uint256: uint256 [4259,4266]"
    },
    {
      "src": "identifier: callData [1643,1651]",
      "dest": "identifier: callData [1643,1651]"
    },
    {
      "src": "): ) [792,793]",
      "dest": "): ) [792,793]"
    },
    {
      "src": "library: library [3411,3418]",
      "dest": "library: library [3411,3418]"
    },
    {
      "src": "string [2566,2595]",
      "dest": "string [2566,2595]"
    },
    {
      "src": "bool: bool [817,821]",
      "dest": "bool: bool [817,821]"
    },
    {
      "src": "yul_function_call [886,906]",
      "dest": "yul_function_call [886,906]"
    },
    {
      "src": "member_expression [1713,1730]",
      "dest": "member_expression [1713,1730]"
    },
    {
      "src": "comment: // not content with the announced removal has ample time to leave the system before it is [3794,3883]",
      "dest": "comment: // not content with the announced removal has ample time to leave the system before it is [3794,3883]"
    },
    {
      "src": "call_argument [1790,1814]",
      "dest": "call_argument [1790,1814]"
    },
    {
      "src": "member_expression [1625,1642]",
      "dest": "member_expression [1625,1642]"
    },
    {
      "src": "mapping: mapping [4239,4246]",
      "dest": "mapping: mapping [4239,4246]"
    },
    {
      "src": "member_expression [2520,2532]",
      "dest": "member_expression [2520,2532]"
    },
    {
      "src": "uint256: uint256 [2669,2676]",
      "dest": "uint256: uint256 [2669,2676]"
    },
    {
      "src": "identifier: size [932,936]",
      "dest": "identifier: size [932,936]"
    },
    {
      "src": "(: ( [2255,2256]",
      "dest": "(: ( [2255,2256]"
    },
    {
      "src": "uint256: uint256 [833,840]",
      "dest": "uint256: uint256 [833,840]"
    },
    {
      "src": "identifier: success [2283,2290]",
      "dest": "identifier: success [2283,2290]"
    },
    {
      "src": "internal: internal [3167,3175]",
      "dest": "internal: internal [3167,3175]"
    },
    {
      "src": "yul_function_call [2761,2815]",
      "dest": "yul_function_call [2761,2815]"
    },
    {
      "src": "identifier: require [1475,1482]",
      "dest": "identifier: require [1475,1482]"
    },
    {
      "src": ",: , [2799,2800]",
      "dest": ",: , [2799,2800]"
    },
    {
      "src": "pure: pure [2455,2459]",
      "dest": "pure: pure [2455,2459]"
    },
    {
      "src": "primitive_type [2197,2201]",
      "dest": "primitive_type [2197,2201]"
    },
    {
      "src": "number_literal: 1 [2641,2642]",
      "dest": "number_literal: 1 [2641,2642]"
    },
    {
      "src": "parameter [1000,1014]",
      "dest": "parameter [1000,1014]"
    },
    {
      "src": "\": \" [1527,1528]",
      "dest": "\": \" [1527,1528]"
    },
    {
      "src": "primitive_type [2476,2483]",
      "dest": "primitive_type [2476,2483]"
    },
    {
      "src": "return_type_definition [808,822]",
      "dest": "return_type_definition [808,822]"
    },
    {
      "src": "}: } [946,947]",
      "dest": "}: } [946,947]"
    },
    {
      "src": "binary_expression [2641,2658]",
      "dest": "binary_expression [2641,2658]"
    },
    {
      "src": "{: { [2731,2732]",
      "dest": "{: { [2731,2732]"
    },
    {
      "src": "{: { [2502,2503]",
      "dest": "{: { [2502,2503]"
    },
    {
      "src": "identifier: array [2386,2391]",
      "dest": "identifier: array [2386,2391]"
    },
    {
      "src": "(: ( [1583,1584]",
      "dest": "(: ( [1583,1584]"
    },
    {
      "src": "function_definition [1380,1832]",
      "dest": "function_definition [1380,1832]"
    },
    {
      "src": "identifier: safeTokenContractCall [1389,1410]",
      "dest": "identifier: safeTokenContractCall [1389,1410]"
    },
    {
      "src": "binary_expression [3255,3274]",
      "dest": "binary_expression [3255,3274]"
    },
    {
      "src": "identifier: subArrayStart [2645,2658]",
      "dest": "identifier: subArrayStart [2645,2658]"
    },
    {
      "src": "library: library [733,740]",
      "dest": "library: library [733,740]"
    },
    {
      "src": "identifier: decode [1762,1768]",
      "dest": "identifier: decode [1762,1768]"
    },
    {
      "src": "library_declaration [733,2321]",
      "dest": "library_declaration [733,2321]"
    },
    {
      "src": "variable_declaration [2211,2234]",
      "dest": "variable_declaration [2211,2234]"
    },
    {
      "src": "identifier: call [1638,1642]",
      "dest": "identifier: call [1638,1642]"
    },
    {
      "src": "(: ( [3262,3263]",
      "dest": "(: ( [3262,3263]"
    },
    {
      "src": "expression_statement [1750,1816]",
      "dest": "expression_statement [1750,1816]"
    },
    {
      "src": "parenthesized_expression [1781,1787]",
      "dest": "parenthesized_expression [1781,1787]"
    },
    {
      "src": "parameter [3198,3219]",
      "dest": "parameter [3198,3219]"
    },
    {
      "src": "call_argument [1781,1787]",
      "dest": "call_argument [1781,1787]"
    },
    {
      "src": "[: [ [3946,3947]",
      "dest": "[: [ [3946,3947]"
    },
    {
      "src": "comment: // Structure representing a list of verifiers (validity/availability). [3439,3509]",
      "dest": "comment: // Structure representing a list of verifiers (validity/availability). [3439,3509]"
    },
    {
      "src": "function_definition [2347,2831]",
      "dest": "function_definition [2347,2831]"
    },
    {
      "src": "string: string [2292,2298]",
      "dest": "string: string [2292,2298]"
    },
    {
      "src": "): ) [2131,2132]",
      "dest": "): ) [2131,2132]"
    },
    {
      "src": "memory: memory [2116,2122]",
      "dest": "memory: memory [2116,2122]"
    },
    {
      "src": "address: address [4248,4255]",
      "dest": "address: address [4248,4255]"
    },
    {
      "src": "identifier: memOffset [3334,3343]",
      "dest": "identifier: memOffset [3334,3343]"
    },
    {
      "src": "}: } [4298,4299]",
      "dest": "}: } [4298,4299]"
    },
    {
      "src": "\": \" [1142,1143]",
      "dest": "\": \" [1142,1143]"
    },
    {
      "src": "yul_function_call [2771,2799]",
      "dest": "yul_function_call [2771,2799]"
    },
    {
      "src": "type_name [3198,3205]",
      "dest": "type_name [3198,3205]"
    },
    {
      "src": "yul_assignment [878,906]",
      "dest": "yul_assignment [878,906]"
    },
    {
      "src": "{: { [1465,1466]",
      "dest": "{: { [1465,1466]"
    },
    {
      "src": "call_argument [2292,2310]",
      "dest": "call_argument [2292,2310]"
    },
    {
      "src": "primitive_type [2110,2115]",
      "dest": "primitive_type [2110,2115]"
    },
    {
      "src": "{: { [3929,3930]",
      "dest": "{: { [3929,3930]"
    },
    {
      "src": "parameter [1411,1431]",
      "dest": "parameter [1411,1431]"
    },
    {
      "src": "string_literal [2566,2595]",
      "dest": "string_literal [2566,2595]"
    },
    {
      "src": "type_name [1584,1588]",
      "dest": "type_name [1584,1588]"
    },
    {
      "src": "}: } [3359,3360]",
      "dest": "}: } [3359,3360]"
    },
    {
      "src": "primitive_type [2088,2095]",
      "dest": "primitive_type [2088,2095]"
    },
    {
      "src": "variable_declaration_statement [2196,2266]",
      "dest": "variable_declaration_statement [2196,2266]"
    },
    {
      "src": "identifier: list [3949,3953]",
      "dest": "identifier: list [3949,3953]"
    },
    {
      "src": "identifier: dataSizeBytes [2677,2690]",
      "dest": "identifier: dataSizeBytes [2677,2690]"
    },
    {
      "src": "(: ( [1132,1133]",
      "dest": "(: ( [1132,1133]"
    },
    {
      "src": "comment: // NOLINTNEXTLINE: low-level-calls. [1539,1574]",
      "dest": "comment: // NOLINTNEXTLINE: low-level-calls. [1539,1574]"
    },
    {
      "src": "\": \" [1813,1814]",
      "dest": "\": \" [1813,1814]"
    },
    {
      "src": "identifier: addr [3215,3219]",
      "dest": "identifier: addr [3215,3219]"
    },
    {
      "src": "solidity: solidity [643,651]",
      "dest": "solidity: solidity [643,651]"
    },
    {
      "src": "function: function [757,765]",
      "dest": "function: function [757,765]"
    },
    {
      "src": "function_body [823,947]",
      "dest": "function_body [823,947]"
    },
    {
      "src": "type_name [981,988]",
      "dest": "type_name [981,988]"
    },
    {
      "src": "): ) [2309,2310]",
      "dest": "): ) [2309,2310]"
    },
    {
      "src": "identifier: call [2251,2255]",
      "dest": "identifier: call [2251,2255]"
    },
    {
      "src": "call_argument [1133,1140]",
      "dest": "call_argument [1133,1140]"
    },
    {
      "src": ".: . [1723,1724]",
      "dest": ".: . [1723,1724]"
    },
    {
      "src": "=: = [1052,1053]",
      "dest": "=: = [1052,1053]"
    },
    {
      "src": "string [1790,1814]",
      "dest": "string [1790,1814]"
    },
    {
      "src": ",: , [1596,1597]",
      "dest": ",: , [1596,1597]"
    },
    {
      "src": "(: ( [2640,2641]",
      "dest": "(: ( [2640,2641]"
    },
    {
      "src": "parameter [2088,2108]",
      "dest": "parameter [2088,2108]"
    },
    {
      "src": "): ) [3343,3344]",
      "dest": "): ) [3343,3344]"
    },
    {
      "src": "variable_declaration [1598,1621]",
      "dest": "variable_declaration [1598,1621]"
    },
    {
      "src": "visibility [3167,3175]",
      "dest": "visibility [3167,3175]"
    },
    {
      "src": "if_statement [1709,1826]",
      "dest": "if_statement [1709,1826]"
    },
    {
      "src": "variable_declaration_statement [1583,1653]",
      "dest": "variable_declaration_statement [1583,1653]"
    },
    {
      "src": "): ) [2798,2799]",
      "dest": "): ) [2798,2799]"
    },
    {
      "src": "yul_assignment [3307,3344]",
      "dest": "yul_assignment [3307,3344]"
    },
    {
      "src": "(: ( [2519,2520]",
      "dest": "(: ( [2519,2520]"
    },
    {
      "src": "(: ( [2770,2771]",
      "dest": "(: ( [2770,2771]"
    },
    {
      "src": "identifier: returndata [1611,1621]",
      "dest": "identifier: returndata [1611,1621]"
    },
    {
      "src": "uint256: uint256 [3235,3242]",
      "dest": "uint256: uint256 [3235,3242]"
    },
    {
      "src": "(: ( [3197,3198]",
      "dest": "(: ( [3197,3198]"
    },
    {
      "src": "type_name [2369,2378]",
      "dest": "type_name [2369,2378]"
    },
    {
      "src": "parameter [3111,3141]",
      "dest": "parameter [3111,3141]"
    },
    {
      "src": "comment: // of unlockedForRemovalTime[A] != 0 and unlockedForRemovalTime[A] < (current time). [4146,4230]",
      "dest": "comment: // of unlockedForRemovalTime[A] != 0 and unlockedForRemovalTime[A] < (current time). [4146,4230]"
    },
    {
      "src": "): ) [3273,3274]",
      "dest": "): ) [3273,3274]"
    },
    {
      "src": "): ) [2234,2235]",
      "dest": "): ) [2234,2235]"
    },
    {
      "src": "variable_declaration [1584,1596]",
      "dest": "variable_declaration [1584,1596]"
    },
    {
      "src": "assembly_statement [855,916]",
      "dest": "assembly_statement [855,916]"
    },
    {
      "src": "}: } [1082,1083]",
      "dest": "}: } [1082,1083]"
    },
    {
      "src": "type_name [4239,4267]",
      "dest": "type_name [4239,4267]"
    },
    {
      "src": "parameter [777,792]",
      "dest": "parameter [777,792]"
    },
    {
      "src": "view: view [803,807]",
      "dest": "view: view [803,807]"
    },
    {
      "src": ",: , [1507,1508]",
      "dest": ",: , [1507,1508]"
    },
    {
      "src": "identifier: returndata [1713,1723]",
      "dest": "identifier: returndata [1713,1723]"
    },
    {
      "src": "identifier: returndata [2224,2234]",
      "dest": "identifier: returndata [2224,2234]"
    },
    {
      "src": "variable_declaration [2197,2209]",
      "dest": "variable_declaration [2197,2209]"
    },
    {
      "src": "identifier: tokenAddress [1419,1431]",
      "dest": "identifier: tokenAddress [1419,1431]"
    },
    {
      "src": ",: , [2209,2210]",
      "dest": ",: , [2209,2210]"
    },
    {
      "src": "identifier: subArrayHash [2484,2496]",
      "dest": "identifier: subArrayHash [2484,2496]"
    },
    {
      "src": "identifier: dataSizeBytes [2801,2814]",
      "dest": "identifier: dataSizeBytes [2801,2814]"
    },
    {
      "src": "yul_identifier [878,882]",
      "dest": "yul_identifier [878,882]"
    },
    {
      "src": "if: if [1709,1711]",
      "dest": "if: if [1709,1711]"
    },
    {
      "src": "address: address [3939,3946]",
      "dest": "address: address [3939,3946]"
    },
    {
      "src": "call_argument [1679,1697]",
      "dest": "call_argument [1679,1697]"
    },
    {
      "src": "*: * [2638,2639]",
      "dest": "*: * [2638,2639]"
    },
    {
      "src": "): ) [1814,1815]",
      "dest": "): ) [1814,1815]"
    },
    {
      "src": "comment: /*       Similar to safeTokenContractCall, but always ignores the return value.        Assumes some other method is used to detect the failures       (e.g. balance is checked before and after the call).     */ [1838,2047]",
      "dest": "comment: /*       Similar to safeTokenContractCall, but always ignores the return value.        Assumes some other method is used to detect the failures       (e.g. balance is checked before and after the call).     */ [1838,2047]"
    },
    {
      "src": "binary_expression [2633,2659]",
      "dest": "binary_expression [2633,2659]"
    },
    {
      "src": "}: } [2830,2831]",
      "dest": "}: } [2830,2831]"
    },
    {
      "src": "primitive_type [1036,1040]",
      "dest": "primitive_type [1036,1040]"
    },
    {
      "src": "yul_path [878,882]",
      "dest": "yul_path [878,882]"
    },
    {
      "src": "call_argument [1643,1651]",
      "dest": "call_argument [1643,1651]"
    },
    {
      "src": "struct_member [4239,4291]",
      "dest": "struct_member [4239,4291]"
    },
    {
      "src": "identifier: call [1064,1068]",
      "dest": "identifier: call [1064,1068]"
    },
    {
      "src": "identifier: require [1662,1669]",
      "dest": "identifier: require [1662,1669]"
    },
    {
      "src": "bytes32: bytes32 [2476,2483]",
      "dest": "bytes32: bytes32 [2476,2483]"
    },
    {
      "src": "identifier: subArraySize [2700,2712]",
      "dest": "identifier: subArraySize [2700,2712]"
    },
    {
      "src": "primitive_type [1433,1438]",
      "dest": "primitive_type [1433,1438]"
    },
    {
      "src": "number_literal: 0 [1733,1734]",
      "dest": "number_literal: 0 [1733,1734]"
    },
    {
      "src": "library_declaration [3411,4299]",
      "dest": "library_declaration [3411,4299]"
    },
    {
      "src": "call_expression [1625,1652]",
      "dest": "call_expression [1625,1652]"
    },
    {
      "src": "function_definition [757,947]",
      "dest": "function_definition [757,947]"
    },
    {
      "src": "): ) [1697,1698]",
      "dest": "): ) [1697,1698]"
    },
    {
      "src": "yul_identifier [3307,3311]",
      "dest": "yul_identifier [3307,3311]"
    },
    {
      "src": "pragma_directive [636,660]",
      "dest": "pragma_directive [636,660]"
    },
    {
      "src": "): ) [1787,1788]",
      "dest": "): ) [1787,1788]"
    },
    {
      "src": "variable_declaration_statement [2669,2713]",
      "dest": "variable_declaration_statement [2669,2713]"
    },
    {
      "src": "binary_expression [2693,2712]",
      "dest": "binary_expression [2693,2712]"
    },
    {
      "src": "identifier: extractSerializedUintArray [3084,3110]",
      "dest": "identifier: extractSerializedUintArray [3084,3110]"
    },
    {
      "src": "^:  ^ [651,653]",
      "dest": "^:  ^ [651,653]"
    },
    {
      "src": "string: string [1679,1685]",
      "dest": "string: string [1679,1685]"
    },
    {
      "src": "identifier: tokenAddress [2096,2108]",
      "dest": "identifier: tokenAddress [2096,2108]"
    },
    {
      "src": "type_cast_expression [2292,2310]",
      "dest": "type_cast_expression [2292,2310]"
    },
    {
      "src": "type_name [1411,1418]",
      "dest": "type_name [1411,1418]"
    },
    {
      "src": "identifier: returndata [1769,1779]",
      "dest": "identifier: returndata [1769,1779]"
    },
    {
      "src": "uint256: uint256 [2393,2400]",
      "dest": "uint256: uint256 [2393,2400]"
    },
    {
      "src": "}: } [3353,3354]",
      "dest": "}: } [3353,3354]"
    },
    {
      "src": "primitive_type [1598,1603]",
      "dest": "primitive_type [1598,1603]"
    },
    {
      "src": ".: . [1063,1064]",
      "dest": ".: . [1063,1064]"
    },
    {
      "src": "variable_declaration [1036,1048]",
      "dest": "variable_declaration [1036,1048]"
    },
    {
      "src": "}: } [4296,4297]",
      "dest": "}: } [4296,4297]"
    },
    {
      "src": ",: , [1048,1049]",
      "dest": ",: , [1048,1049]"
    },
    {
      "src": "\": \" [1509,1510]",
      "dest": "\": \" [1509,1510]"
    },
    {
      "src": "library_declaration [2323,3363]",
      "dest": "library_declaration [2323,3363]"
    },
    {
      "src": "call_expression [2512,2596]",
      "dest": "call_expression [2512,2596]"
    },
    {
      "src": "pure: pure [3176,3180]",
      "dest": "pure: pure [3176,3180]"
    },
    {
      "src": "memory: memory [1439,1445]",
      "dest": "memory: memory [1439,1445]"
    },
    {
      "src": "primitive_type [1584,1588]",
      "dest": "primitive_type [1584,1588]"
    },
    {
      "src": "identifier: addr [3307,3311]",
      "dest": "identifier: addr [3307,3311]"
    },
    {
      "src": "parameter [3143,3157]",
      "dest": "parameter [3143,3157]"
    },
    {
      "src": "function: function [1380,1388]",
      "dest": "function: function [1380,1388]"
    },
    {
      "src": "identifier: subArraySize [2552,2564]",
      "dest": "identifier: subArraySize [2552,2564]"
    },
    {
      "src": "(: ( [4247,4248]",
      "dest": "(: ( [4247,4248]"
    },
    {
      "src": "yul_path [3319,3332]",
      "dest": "yul_path [3319,3332]"
    },
    {
      "src": "type_name [2110,2115]",
      "dest": "type_name [2110,2115]"
    },
    {
      "src": "yul_function_call [3315,3344]",
      "dest": "yul_function_call [3315,3344]"
    },
    {
      "src": "}: } [2320,2321]",
      "dest": "}: } [2320,2321]"
    },
    {
      "src": "yul_identifier [2745,2757]",
      "dest": "yul_identifier [2745,2757]"
    },
    {
      "src": "comment: /*   II. StarkExTypes - Common data types. */ [3365,3410]",
      "dest": "comment: /*   II. StarkExTypes - Common data types. */ [3365,3410]"
    },
    {
      "src": "expression_statement [2512,2597]",
      "dest": "expression_statement [2512,2597]"
    },
    {
      "src": "identifier: abi [1758,1761]",
      "dest": "identifier: abi [1758,1761]"
    },
    {
      "src": "type_name [4259,4266]",
      "dest": "type_name [4259,4266]"
    },
    {
      "src": "internal: internal [794,802]",
      "dest": "internal: internal [794,802]"
    },
    {
      "src": "function: function [2347,2355]",
      "dest": "function: function [2347,2355]"
    },
    {
      "src": "(: ( [3110,3111]",
      "dest": "(: ( [3110,3111]"
    },
    {
      "src": "function: function [2052,2060]",
      "dest": "function: function [2052,2060]"
    },
    {
      "src": "(: ( [1685,1686]",
      "dest": "(: ( [1685,1686]"
    },
    {
      "src": "identifier: success [1133,1140]",
      "dest": "identifier: success [1133,1140]"
    },
    {
      "src": "): ) [2436,2437]",
      "dest": "): ) [2436,2437]"
    },
    {
      "src": "string_literal [1509,1528]",
      "dest": "string_literal [1509,1528]"
    },
    {
      "src": "parameter [2476,2496]",
      "dest": "parameter [2476,2496]"
    },
    {
      "src": "assembly: assembly [2722,2730]",
      "dest": "assembly: assembly [2722,2730]"
    },
    {
      "src": "keccak256: keccak256 [2761,2770]",
      "dest": "keccak256: keccak256 [2761,2770]"
    },
    {
      "src": "primitive_type [2369,2376]",
      "dest": "primitive_type [2369,2376]"
    },
    {
      "src": "identifier: unlockedForRemovalTime [4268,4290]",
      "dest": "identifier: unlockedForRemovalTime [4268,4290]"
    },
    {
      "src": "type_name [2211,2216]",
      "dest": "type_name [2211,2216]"
    },
    {
      "src": "{: { [3225,3226]",
      "dest": "{: { [3225,3226]"
    },
    {
      "src": "number_literal: 0 [939,940]",
      "dest": "number_literal: 0 [939,940]"
    },
    {
      "src": "address: address [981,988]",
      "dest": "address: address [981,988]"
    },
    {
      "src": "identifier: returndata [2299,2309]",
      "dest": "identifier: returndata [2299,2309]"
    },
    {
      "src": "assembly_statement [2722,2825]",
      "dest": "assembly_statement [2722,2825]"
    },
    {
      "src": "function: function [3075,3083]",
      "dest": "function: function [3075,3083]"
    },
    {
      "src": "function_body [3225,3360]",
      "dest": "function_body [3225,3360]"
    },
    {
      "src": "call_argument [1670,1677]",
      "dest": "call_argument [1670,1677]"
    },
    {
      "src": "*: * [3260,3261]",
      "dest": "*: * [3260,3261]"
    },
    {
      "src": "yul_identifier [2801,2814]",
      "dest": "yul_identifier [2801,2814]"
    },
    {
      "src": "type_name [2606,2613]",
      "dest": "type_name [2606,2613]"
    },
    {
      "src": "function_body [1465,1832]",
      "dest": "function_body [1465,1832]"
    },
    {
      "src": "}: } [2317,2318]",
      "dest": "}: } [2317,2318]"
    },
    {
      "src": "primitive_type [3939,3946]",
      "dest": "primitive_type [3939,3946]"
    },
    {
      "src": "number_literal: 0x20 [3255,3259]",
      "dest": "number_literal: 0x20 [3255,3259]"
    },
    {
      "src": ",: , [1431,1432]",
      "dest": ",: , [1431,1432]"
    },
    {
      "src": "type_name [2197,2201]",
      "dest": "type_name [2197,2201]"
    },
    {
      "src": "(: ( [897,898]",
      "dest": "(: ( [897,898]"
    },
    {
      "src": "(: ( [1781,1782]",
      "dest": "(: ( [1781,1782]"
    },
    {
      "src": "call_argument [1509,1528]",
      "dest": "call_argument [1509,1528]"
    },
    {
      "src": "expression_statement [2275,2312]",
      "dest": "expression_statement [2275,2312]"
    },
    {
      "src": "+: + [3270,3271]",
      "dest": "+: + [3270,3271]"
    },
    {
      "src": "): ) [1086,1087]",
      "dest": "): ) [1086,1087]"
    },
    {
      "src": "(: ( [1757,1758]",
      "dest": "(: ( [1757,1758]"
    },
    {
      "src": "primitive_type [2669,2676]",
      "dest": "primitive_type [2669,2676]"
    },
    {
      "src": "type_name [3939,3946]",
      "dest": "type_name [3939,3946]"
    },
    {
      "src": "(: ( [1493,1494]",
      "dest": "(: ( [1493,1494]"
    },
    {
      "src": ",: , [2414,2415]",
      "dest": ",: , [2414,2415]"
    },
    {
      "src": "{: { [3293,3294]",
      "dest": "{: { [3293,3294]"
    },
    {
      "src": ">=: >= [2533,2535]",
      "dest": ">=: >= [2533,2535]"
    },
    {
      "src": "yul_assignment [2745,2815]",
      "dest": "yul_assignment [2745,2815]"
    },
    {
      "src": "=: = [1623,1624]",
      "dest": "=: = [1623,1624]"
    },
    {
      "src": "struct_member [3939,3954]",
      "dest": "struct_member [3939,3954]"
    },
    {
      "src": "identifier: isContract [766,776]",
      "dest": "identifier: isContract [766,776]"
    },
    {
      "src": "): ) [3219,3220]",
      "dest": "): ) [3219,3220]"
    },
    {
      "src": "(: ( [1768,1769]",
      "dest": "(: ( [1768,1769]"
    },
    {
      "src": "): ) [1506,1507]",
      "dest": "): ) [1506,1507]"
    },
    {
      "src": "(: ( [980,981]",
      "dest": "(: ( [980,981]"
    },
    {
      "src": "variable_declaration_tuple [1583,1622]",
      "dest": "variable_declaration_tuple [1583,1622]"
    },
    {
      "src": "add: add [2771,2774]",
      "dest": "add: add [2771,2774]"
    },
    {
      "src": "call_argument [2566,2595]",
      "dest": "call_argument [2566,2595]"
    },
    {
      "src": "call_expression [2275,2311]",
      "dest": "call_expression [2275,2311]"
    },
    {
      "src": "binary_expression [2536,2564]",
      "dest": "binary_expression [2536,2564]"
    },
    {
      "src": "comment: // Removing from the list is time-locked, to ensure that any user of the system [3710,3789]",
      "dest": "comment: // Removing from the list is time-locked, to ensure that any user of the system [3710,3789]"
    },
    {
      "src": "identifier: require [1750,1757]",
      "dest": "identifier: require [1750,1757]"
    },
    {
      "src": "type_name [3235,3242]",
      "dest": "type_name [3235,3242]"
    },
    {
      "src": ",: , [1140,1141]",
      "dest": ",: , [1140,1141]"
    },
    {
      "src": "type_name [1598,1603]",
      "dest": "type_name [1598,1603]"
    },
    {
      "src": "identifier: UintArray [2331,2340]",
      "dest": "identifier: UintArray [2331,2340]"
    },
    {
      "src": "=: = [2691,2692]",
      "dest": "=: = [2691,2692]"
    },
    {
      "src": "}: } [1825,1826]",
      "dest": "}: } [1825,1826]"
    },
    {
      "src": "bytes: bytes [2110,2115]",
      "dest": "bytes: bytes [2110,2115]"
    },
    {
      "src": "identifier: tokenAddress [2238,2250]",
      "dest": "identifier: tokenAddress [2238,2250]"
    },
    {
      "src": "type_name [2476,2483]",
      "dest": "type_name [2476,2483]"
    },
    {
      "src": "solidity_pragma_token [643,659]",
      "dest": "solidity_pragma_token [643,659]"
    },
    {
      "src": "call_expression [1758,1788]",
      "dest": "call_expression [1758,1788]"
    },
    {
      "src": "[: [ [3205,3206]",
      "dest": "[: [ [3205,3206]"
    },
    {
      "src": "yul_path [898,905]",
      "dest": "yul_path [898,905]"
    },
    {
      "src": "comment: /*       Safe wrapper around ERC20/ERC721 calls.       This is required because many deployed ERC20 contracts don't return a value.       See https://github.com/ethereum/solidity/issues/4116.     */ [1177,1375]",
      "dest": "comment: /*       Safe wrapper around ERC20/ERC721 calls.       This is required because many deployed ERC20 contracts don't return a value.       See https://github.com/ethereum/solidity/issues/4116.     */ [1177,1375]"
    },
    {
      "src": "call_argument [1769,1779]",
      "dest": "call_argument [1769,1779]"
    },
    {
      "src": "identifier: subArrayHash [2745,2757]",
      "dest": "identifier: subArrayHash [2745,2757]"
    },
    {
      "src": "type_name [2393,2400]",
      "dest": "type_name [2393,2400]"
    },
    {
      "src": "): ) [4266,4267]",
      "dest": "): ) [4266,4267]"
    },
    {
      "src": "]: ] [3119,3120]",
      "dest": "]: ] [3119,3120]"
    },
    {
      "src": "identifier: subArrayStart [2536,2549]",
      "dest": "identifier: subArrayStart [2536,2549]"
    },
    {
      "src": "variable_declaration [2669,2690]",
      "dest": "variable_declaration [2669,2690]"
    },
    {
      "src": "): ) [821,822]",
      "dest": "): ) [821,822]"
    },
    {
      "src": "): ) [1651,1652]",
      "dest": "): ) [1651,1652]"
    },
    {
      "src": "identifier: tokenAddress [1494,1506]",
      "dest": "identifier: tokenAddress [1494,1506]"
    },
    {
      "src": "string [1142,1163]",
      "dest": "string [1142,1163]"
    },
    {
      "src": "struct_field_assignment [1069,1082]",
      "dest": "struct_field_assignment [1069,1082]"
    },
    {
      "src": "call_argument [1686,1696]",
      "dest": "call_argument [1686,1696]"
    },
    {
      "src": "visibility [794,802]",
      "dest": "visibility [794,802]"
    },
    {
      "src": "(: ( [1083,1084]",
      "dest": "(: ( [1083,1084]"
    },
    {
      "src": "address: address [777,784]",
      "dest": "address: address [777,784]"
    },
    {
      "src": "yul_path [2782,2798]",
      "dest": "yul_path [2782,2798]"
    },
    {
      "src": "bool: bool [1036,1040]",
      "dest": "bool: bool [1036,1040]"
    },
    {
      "src": ",: , [2391,2392]",
      "dest": ",: , [2391,2392]"
    },
    {
      "src": "{: { [823,824]",
      "dest": "{: { [823,824]"
    },
    {
      "src": "identifier: account [785,792]",
      "dest": "identifier: account [785,792]"
    },
    {
      "src": "variable_declaration_statement [1035,1088]",
      "dest": "variable_declaration_statement [1035,1088]"
    },
    {
      "src": "return: return [925,931]",
      "dest": "return: return [925,931]"
    },
    {
      "src": "call_argument [1758,1788]",
      "dest": "call_argument [1758,1788]"
    },
    {
      "src": "[: [ [3118,3119]",
      "dest": "[: [ [3118,3119]"
    },
    {
      "src": "identifier: returndata [1686,1696]",
      "dest": "identifier: returndata [1686,1696]"
    },
    {
      "src": "binary_expression [2520,2564]",
      "dest": "binary_expression [2520,2564]"
    },
    {
      "src": "identifier: subArraySize [2424,2436]",
      "dest": "identifier: subArraySize [2424,2436]"
    },
    {
      "src": "identifier: success [1041,1048]",
      "dest": "identifier: success [1041,1048]"
    },
    {
      "src": "uint256: uint256 [2606,2613]",
      "dest": "uint256: uint256 [2606,2613]"
    },
    {
      "src": "uint256: uint256 [2369,2376]",
      "dest": "uint256: uint256 [2369,2376]"
    },
    {
      "src": "assembly: assembly [3284,3292]",
      "dest": "assembly: assembly [3284,3292]"
    },
    {
      "src": "yul_evm_builtin [886,897]",
      "dest": "yul_evm_builtin [886,897]"
    },
    {
      "src": "member_expression [1054,1068]",
      "dest": "member_expression [1054,1068]"
    },
    {
      "src": ",: , [1788,1789]",
      "dest": ",: , [1788,1789]"
    },
    {
      "src": "type_name [3143,3150]",
      "dest": "type_name [3143,3150]"
    },
    {
      "src": "identifier: performEthTransfer [962,980]",
      "dest": "identifier: performEthTransfer [962,980]"
    },
    {
      "src": "identifier: startOffsetBytes [2614,2630]",
      "dest": "identifier: startOffsetBytes [2614,2630]"
    },
    {
      "src": "yul_path [2745,2757]",
      "dest": "yul_path [2745,2757]"
    },
    {
      "src": ".: . [1637,1638]",
      "dest": ".: . [1637,1638]"
    },
    {
      "src": "comment: // A statement is valid only if all the verifiers in the list agree on it. [3514,3588]",
      "dest": "comment: // A statement is valid only if all the verifiers in the list agree on it. [3514,3588]"
    },
    {
      "src": "identifier: recipient [989,998]",
      "dest": "identifier: recipient [989,998]"
    },
    {
      "src": "]: ] [2377,2378]",
      "dest": "]: ] [2377,2378]"
    },
    {
      "src": "]: ] [3206,3207]",
      "dest": "]: ] [3206,3207]"
    },
    {
      "src": "function: function [953,961]",
      "dest": "function: function [953,961]"
    },
    {
      "src": "): ) [1454,1455]",
      "dest": "): ) [1454,1455]"
    },
    {
      "src": ",: , [1677,1678]",
      "dest": ",: , [1677,1678]"
    },
    {
      "src": "string_literal [1084,1086]",
      "dest": "string_literal [1084,1086]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: Apache-2.0. [596,635]",
      "dest": "comment: // SPDX-License-Identifier: Apache-2.0. [596,635]"
    },
    {
      "src": "(: ( [2298,2299]",
      "dest": "(: ( [2298,2299]"
    },
    {
      "src": "=: = [3253,3254]",
      "dest": "=: = [3253,3254]"
    },
    {
      "src": "identifier: array [2775,2780]",
      "dest": "identifier: array [2775,2780]"
    },
    {
      "src": "): ) [1621,1622]",
      "dest": "): ) [1621,1622]"
    },
    {
      "src": "yul_evm_builtin [2771,2774]",
      "dest": "yul_evm_builtin [2771,2774]"
    },
    {
      "src": "yul_path [3334,3343]",
      "dest": "yul_path [3334,3343]"
    },
    {
      "src": "type_name [3198,3207]",
      "dest": "type_name [3198,3207]"
    },
    {
      "src": "identifier: programOutput [3128,3141]",
      "dest": "identifier: programOutput [3128,3141]"
    },
    {
      "src": "identifier: recipient [1054,1063]",
      "dest": "identifier: recipient [1054,1063]"
    },
    {
      "src": "contract_body [2341,3363]",
      "dest": "contract_body [2341,3363]"
    },
    {
      "src": "comment: // Removal of the verifier with address A is allowed only in the case the value [4058,4137]",
      "dest": "comment: // Removal of the verifier with address A is allowed only in the case the value [4058,4137]"
    },
    {
      "src": "identifier: offset [3151,3157]",
      "dest": "identifier: offset [3151,3157]"
    },
    {
      "src": "identifier: hashSubArray [2356,2368]",
      "dest": "identifier: hashSubArray [2356,2368]"
    },
    {
      "src": "function_definition [3075,3360]",
      "dest": "function_definition [3075,3360]"
    },
    {
      "src": "returns: returns [808,815]",
      "dest": "returns: returns [808,815]"
    },
    {
      "src": "primitive_type [2416,2423]",
      "dest": "primitive_type [2416,2423]"
    },
    {
      "src": "variable_declaration_statement [3235,3275]",
      "dest": "variable_declaration_statement [3235,3275]"
    },
    {
      "src": "}: } [1831,1832]",
      "dest": "}: } [1831,1832]"
    },
    {
      "src": "uint256: uint256 [3111,3118]",
      "dest": "uint256: uint256 [3111,3118]"
    },
    {
      "src": "function_body [2142,2318]",
      "dest": "function_body [2142,2318]"
    },
    {
      "src": "state_mutability [803,807]",
      "dest": "state_mutability [803,807]"
    },
    {
      "src": "identifier: success [1589,1596]",
      "dest": "identifier: success [1589,1596]"
    },
    {
      "src": ".: . [2250,2251]",
      "dest": ".: . [2250,2251]"
    },
    {
      "src": "): ) [905,906]",
      "dest": "): ) [905,906]"
    },
    {
      "src": "contract_body [751,2321]",
      "dest": "contract_body [751,2321]"
    },
    {
      "src": "(: ( [1482,1483]",
      "dest": "(: ( [1482,1483]"
    },
    {
      "src": "call_argument [1142,1163]",
      "dest": "call_argument [1142,1163]"
    },
    {
      "src": "comment: // removed. [3888,3899]",
      "dest": "comment: // removed. [3888,3899]"
    },
    {
      "src": "identifier: size [841,845]",
      "dest": "identifier: size [841,845]"
    },
    {
      "src": "identifier: Addresses [741,750]",
      "dest": "identifier: Addresses [741,750]"
    },
    {
      "src": "{: { [1025,1026]",
      "dest": "{: { [1025,1026]"
    },
    {
      "src": "yul_identifier [898,905]",
      "dest": "yul_identifier [898,905]"
    },
    {
      "src": "bool: bool [1584,1588]",
      "dest": "bool: bool [1584,1588]"
    },
    {
      "src": "yul_evm_builtin [3315,3318]",
      "dest": "yul_evm_builtin [3315,3318]"
    },
    {
      "src": "(: ( [2282,2283]",
      "dest": "(: ( [2282,2283]"
    },
    {
      "src": ",: , [3141,3142]",
      "dest": ",: , [3141,3142]"
    },
    {
      "src": "+: + [2550,2551]",
      "dest": "+: + [2550,2551]"
    },
    {
      "src": "(: ( [776,777]",
      "dest": "(: ( [776,777]"
    },
    {
      "src": "solidity_version: 0.6.11 [653,659]",
      "dest": "solidity_version: 0.6.11 [653,659]"
    },
    {
      "src": "(: ( [2087,2088]",
      "dest": "(: ( [2087,2088]"
    },
    {
      "src": "primitive_type [3235,3242]",
      "dest": "primitive_type [3235,3242]"
    },
    {
      "src": "yul_identifier [3319,3332]",
      "dest": "yul_identifier [3319,3332]"
    },
    {
      "src": "visibility [2133,2141]",
      "dest": "visibility [2133,2141]"
    },
    {
      "src": "\": \" [1084,1085]",
      "dest": "\": \" [1084,1085]"
    },
    {
      "src": "binary_expression [932,940]",
      "dest": "binary_expression [932,940]"
    },
    {
      "src": ".: . [1761,1762]",
      "dest": ".: . [1761,1762]"
    },
    {
      "src": ",: , [2290,2291]",
      "dest": ",: , [2290,2291]"
    },
    {
      "src": "function_definition [2052,2318]",
      "dest": "function_definition [2052,2318]"
    },
    {
      "src": "primitive_type [1679,1685]",
      "dest": "primitive_type [1679,1685]"
    },
    {
      "src": "state_mutability [2455,2459]",
      "dest": "state_mutability [2455,2459]"
    },
    {
      "src": "identifier: amount [1076,1082]",
      "dest": "identifier: amount [1076,1082]"
    },
    {
      "src": "[: [ [2376,2377]",
      "dest": "[: [ [2376,2377]"
    },
    {
      "src": "number_literal: 0x20 [2633,2637]",
      "dest": "number_literal: 0x20 [2633,2637]"
    },
    {
      "src": "identifier: value [1069,1074]",
      "dest": "identifier: value [1069,1074]"
    },
    {
      "src": "internal: internal [2133,2141]",
      "dest": "internal: internal [2133,2141]"
    },
    {
      "src": "): ) [2310,2311]",
      "dest": "): ) [2310,2311]"
    },
    {
      "src": "parameter [981,998]",
      "dest": "parameter [981,998]"
    },
    {
      "src": "yul_identifier [3334,3343]",
      "dest": "yul_identifier [3334,3343]"
    },
    {
      "src": "identifier: require [2275,2282]",
      "dest": "identifier: require [2275,2282]"
    },
    {
      "src": "string [1509,1528]",
      "dest": "string [1509,1528]"
    },
    {
      "src": "contract_body [3432,4299]",
      "dest": "contract_body [3432,4299]"
    },
    {
      "src": "string_literal [1142,1163]",
      "dest": "string_literal [1142,1163]"
    },
    {
      "src": "type_name [3111,3118]",
      "dest": "type_name [3111,3118]"
    },
    {
      "src": "variable_declaration_statement [833,846]",
      "dest": "variable_declaration_statement [833,846]"
    },
    {
      "src": "identifier: tokenAddress [1625,1637]",
      "dest": "identifier: tokenAddress [1625,1637]"
    },
    {
      "src": "return_type_definition [3189,3220]",
      "dest": "return_type_definition [3189,3220]"
    },
    {
      "src": "uint256: uint256 [2416,2423]",
      "dest": "uint256: uint256 [2416,2423]"
    },
    {
      "src": "]: ] [3947,3948]",
      "dest": "]: ] [3947,3948]"
    },
    {
      "src": "call_argument [2299,2309]",
      "dest": "call_argument [2299,2309]"
    },
    {
      "src": "): ) [2496,2497]",
      "dest": "): ) [2496,2497]"
    },
    {
      "src": "parameter [2369,2391]",
      "dest": "parameter [2369,2391]"
    },
    {
      "src": "number_literal: 1 [3272,3273]",
      "dest": "number_literal: 1 [3272,3273]"
    },
    {
      "src": "}: } [3362,3363]",
      "dest": "}: } [3362,3363]"
    },
    {
      "src": ":: : [1074,1075]",
      "dest": ":: : [1074,1075]"
    },
    {
      "src": "=: = [2631,2632]",
      "dest": "=: = [2631,2632]"
    },
    {
      "src": "bool: bool [2197,2201]",
      "dest": "bool: bool [2197,2201]"
    },
    {
      "src": "primitive_type [2211,2216]",
      "dest": "primitive_type [2211,2216]"
    },
    {
      "src": "member_expression [1758,1768]",
      "dest": "member_expression [1758,1768]"
    },
    {
      "src": "identifier: array [2520,2525]",
      "dest": "identifier: array [2520,2525]"
    },
    {
      "src": "yul_evm_builtin [2761,2770]",
      "dest": "yul_evm_builtin [2761,2770]"
    },
    {
      "src": "comment: /*   Common Utility librarries.   I. Addresses (extending address). */ [662,732]",
      "dest": "comment: /*   Common Utility librarries.   I. Addresses (extending address). */ [662,732]"
    },
    {
      "src": "address: address [1411,1418]",
      "dest": "address: address [1411,1418]"
    },
    {
      "src": "visibility [2446,2454]",
      "dest": "visibility [2446,2454]"
    },
    {
      "src": "\": \" [2566,2567]",
      "dest": "\": \" [2566,2567]"
    },
    {
      "src": "identifier: isContract [1483,1493]",
      "dest": "identifier: isContract [1483,1493]"
    },
    {
      "src": ">: > [1731,1732]",
      "dest": ">: > [1731,1732]"
    },
    {
      "src": "call_argument [2256,2264]",
      "dest": "call_argument [2256,2264]"
    },
    {
      "src": "expression_statement [1475,1530]",
      "dest": "expression_statement [1475,1530]"
    },
    {
      "src": "bool: bool [1782,1786]",
      "dest": "bool: bool [1782,1786]"
    },
    {
      "src": ",: , [2564,2565]",
      "dest": ",: , [2564,2565]"
    },
    {
      "src": "identifier: success [1670,1677]",
      "dest": "identifier: success [1670,1677]"
    },
    {
      "src": "bytes: bytes [1598,1603]",
      "dest": "bytes: bytes [1598,1603]"
    },
    {
      "src": "}: } [1170,1171]",
      "dest": "}: } [1170,1171]"
    },
    {
      "src": "type_name [817,821]",
      "dest": "type_name [817,821]"
    },
    {
      "src": "identifier: account [898,905]",
      "dest": "identifier: account [898,905]"
    },
    {
      "src": "identifier: callData [2256,2264]",
      "dest": "identifier: callData [2256,2264]"
    },
    {
      "src": "return_type_definition [2468,2497]",
      "dest": "return_type_definition [2468,2497]"
    },
    {
      "src": ",: , [998,999]",
      "dest": ",: , [998,999]"
    },
    {
      "src": "primitive_type [2292,2298]",
      "dest": "primitive_type [2292,2298]"
    },
    {
      "src": "type_name [833,840]",
      "dest": "type_name [833,840]"
    },
    {
      "src": "call_argument [2520,2564]",
      "dest": "call_argument [2520,2564]"
    },
    {
      "src": "identifier: StarkExTypes [3419,3431]",
      "dest": "identifier: StarkExTypes [3419,3431]"
    },
    {
      "src": "call_expression [1662,1698]",
      "dest": "call_expression [1662,1698]"
    },
    {
      "src": "{: { [864,865]",
      "dest": "{: { [864,865]"
    },
    {
      "src": "yul_path [2775,2780]",
      "dest": "yul_path [2775,2780]"
    },
    {
      "src": "expression_statement [1125,1165]",
      "dest": "expression_statement [1125,1165]"
    },
    {
      "src": "source_file [0,4300]",
      "dest": "source_file [0,4300]"
    },
    {
      "src": "identifier: startOffsetBytes [2782,2798]",
      "dest": "identifier: startOffsetBytes [2782,2798]"
    },
    {
      "src": "memory: memory [2217,2223]",
      "dest": "memory: memory [2217,2223]"
    },
    {
      "src": "): ) [1163,1164]",
      "dest": "): ) [1163,1164]"
    },
    {
      "src": "): ) [2658,2659]",
      "dest": "): ) [2658,2659]"
    },
    {
      "src": "identifier: callData [2123,2131]",
      "dest": "identifier: callData [2123,2131]"
    },
    {
      "src": "identifier: uncheckedTokenContractCall [2061,2087]",
      "dest": "identifier: uncheckedTokenContractCall [2061,2087]"
    },
    {
      "src": "comment: // any soundness issues. [3681,3705]",
      "dest": "comment: // any soundness issues. [3681,3705]"
    },
    {
      "src": "yul_path [2801,2814]",
      "dest": "yul_path [2801,2814]"
    },
    {
      "src": "\": \" [2594,2595]",
      "dest": "\": \" [2594,2595]"
    },
    {
      "src": "variable_declaration_tuple [1035,1051]",
      "dest": "variable_declaration_tuple [1035,1051]"
    },
    {
      "src": "yul_path [3307,3311]",
      "dest": "yul_path [3307,3311]"
    },
    {
      "src": "returns: returns [3189,3196]",
      "dest": "returns: returns [3189,3196]"
    },
    {
      "src": "): ) [2814,2815]",
      "dest": "): ) [2814,2815]"
    },
    {
      "src": "): ) [1050,1051]",
      "dest": "): ) [1050,1051]"
    },
    {
      "src": "identifier: callData [1446,1454]",
      "dest": "identifier: callData [1446,1454]"
    },
    {
      "src": ",: , [1779,1780]",
      "dest": ",: , [1779,1780]"
    },
    {
      "src": "primitive_type [833,840]",
      "dest": "primitive_type [833,840]"
    },
    {
      "src": "identifier: require [1125,1132]",
      "dest": "identifier: require [1125,1132]"
    },
    {
      "src": "primitive_type [777,784]",
      "dest": "primitive_type [777,784]"
    },
    {
      "src": "type_name [3111,3120]",
      "dest": "type_name [3111,3120]"
    },
    {
      "src": "solidity_version_comparison_operator [651,653]",
      "dest": "solidity_version_comparison_operator [651,653]"
    },
    {
      "src": "=>: => [4256,4258]",
      "dest": "=>: => [4256,4258]"
    },
    {
      "src": "call_argument [1494,1506]",
      "dest": "call_argument [1494,1506]"
    },
    {
      "src": "identifier: success [2202,2209]",
      "dest": "identifier: success [2202,2209]"
    },
    {
      "src": "type_name [1433,1438]",
      "dest": "type_name [1433,1438]"
    },
    {
      "src": "string_literal [1790,1814]",
      "dest": "string_literal [1790,1814]"
    },
    {
      "src": "primitive_type [3198,3205]",
      "dest": "primitive_type [3198,3205]"
    },
    {
      "src": "returns: returns [2468,2475]",
      "dest": "returns: returns [2468,2475]"
    },
    {
      "src": "variable_declaration_statement [2606,2660]",
      "dest": "variable_declaration_statement [2606,2660]"
    },
    {
      "src": "bytes: bytes [1433,1438]",
      "dest": "bytes: bytes [1433,1438]"
    },
    {
      "src": "{: { [3432,3433]",
      "dest": "{: { [3432,3433]"
    },
    {
      "src": "{: { [1736,1737]",
      "dest": "{: { [1736,1737]"
    },
    {
      "src": "(: ( [1669,1670]",
      "dest": "(: ( [1669,1670]"
    },
    {
      "src": "): ) [1786,1787]",
      "dest": "): ) [1786,1787]"
    },
    {
      "src": "(: ( [1712,1713]",
      "dest": "(: ( [1712,1713]"
    },
    {
      "src": "state_mutability [3176,3180]",
      "dest": "state_mutability [3176,3180]"
    },
    {
      "src": "memory: memory [3208,3214]",
      "dest": "memory: memory [3208,3214]"
    },
    {
      "src": "comment: // Adding a verifier to the list is immediate - this is used for fast resolution of [3593,3676]",
      "dest": "comment: // Adding a verifier to the list is immediate - this is used for fast resolution of [3593,3676]"
    }
  ],
  "actions": []
}